

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 13 01:28:38 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=4,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=4,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=4,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=4,class=CODE,delta=1
   147                           	psect	text126,global,reloc=4,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=4,class=CODE,delta=1
   152                           	psect	text131,global,reloc=4,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=4,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=4,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=4,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=4,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=4,class=CODE,delta=1
   164                           	psect	text143,global,reloc=4,class=CODE,delta=1
   165                           	psect	text144,global,reloc=4,class=CODE,delta=1
   166                           	psect	text145,global,reloc=4,class=CODE,delta=1
   167                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   168                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   169                           	psect	text146,global,reloc=4,class=CODE,delta=1
   170                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
   171                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   172  0000                     
   173                           ; Version 2.10
   174                           ; Generated 31/07/2019 GMT
   175                           ; 
   176                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   177                           ; All rights reserved.
   178                           ; 
   179                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   180                           ; 
   181                           ; Redistribution and use in source and binary forms, with or without modification, are
   182                           ; permitted provided that the following conditions are met:
   183                           ; 
   184                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   185                           ;        conditions and the following disclaimer.
   186                           ; 
   187                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   188                           ;        of conditions and the following disclaimer in the documentation and/or other
   189                           ;        materials provided with the distribution.
   190                           ; 
   191                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   192                           ;        software without specific prior written permission.
   193                           ; 
   194                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   195                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   196                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   197                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   198                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   199                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   200                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   201                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   202                           ; 
   203                           ; 
   204                           ; Code-generator required, PIC18F57K42 Definitions
   205                           ; 
   206                           ; SFR Addresses
   207  0000                     
   208 ;;_mode	offset	0
   209 ;;_channel	offset=-1 (param)
   210 ;;_s	offset=-2 (param)
   211 ;;_cmd	offset=-1 (param)
   212 ;;_cmd	offset=-1 (param)
   213 ;;_data	offset=-1 (param)
   214 ;;__this	offset=-2 (param)
   215 ;;_cmd	offset=-1 (param)
   216 ;;_i	offset	0
   217 ;;_lp_speed	offset	0
   218 ;;_new	offset=-4 (param)
   219 ;;_bn	offset=-5 (param)
   220 ;;_slow	offset=-6 (param)
   221 ;;_chan	offset=-1 (param)
   222 ;;_to_what	offset=-2 (param)
   223 ;;_u	offset	0
   224 ;;_s	offset=-2 (param)
   225 ;;_index	offset=-1 (param)
   226 ;;_arg	offset	0
   227 ;;_exp	offset	4
   228 ;;_sign	offset=-1 (param)
   229 ;;_val	offset=-5 (param)
   230 ;;_flipper	offset=-1 (param)
   231 ;;_f	offset	0
   232 ;;_ap	offset	6
   233 ;;_s	offset=-3 (param)
   234 ;;_fmt	offset=-5 (param)
   235 ;;_line	offset=-1 (param)
   236 ;;_vterm	offset=-2 (param)
   237 ;;_numMilliseconds	offset=-2 (param)
   238 ;;_vterm	offset=-1 (param)
   239 ;;_r	offset=-1 (param)
   240 ;;_c	offset=-2 (param)
   241 ;;_strPtr	offset=-4 (param)
   242 ;;_strPtr	offset=-1 (param)
   243 ;;_delay	offset=-4 (param)
   244 ;;_strPtr	offset=-2 (param)
   245 ;;__this	offset=-2 (param)
   246 ;;_clearBuffer	offset=-3 (param)
   247 ;;_s	offset	0
   248 ;;_k	offset	2
   249 ;;_dest	offset=-2 (param)
   250 ;;_c	offset=-4 (param)
   251 ;;_n	offset=-6 (param)
   252 ;;_ap	offset	0
   253 ;;_fmt	offset=-3 (param)
   254 ;;_cfmt	offset	0
   255 ;;_fp	offset=-2 (param)
   256 ;;_fmt	offset=-4 (param)
   257 ;;_ap	offset=-6 (param)
   258 ;;_vfpfcnvrt$4256	offset	0
   259 ;;_vfpfcnvrt$4267	offset	2
   260 ;;_vfpfcnvrt$4255	offset	4
   261 ;;_llu	offset	6
   262 ;;_ll	offset	14
   263 ;;_f	offset	22
   264 ;;_ct	offset	26
   265 ;;_cp	offset	29
   266 ;;_c	offset	31
   267 ;;_fp	offset=-2 (param)
   268 ;;_fmt	offset=-4 (param)
   269 ;;_ap	offset=-6 (param)
   270 ;;_xtoa$4241	offset	0
   271 ;;_xtoa$4240	offset	2
   272 ;;_n	offset	4
   273 ;;_c	offset	12
   274 ;;_i	offset	14
   275 ;;_w	offset	16
   276 ;;_p	offset	18
   277 ;;_fp	offset=-2 (param)
   278 ;;_d	offset=-10 (param)
   279 ;;_x	offset=-11 (param)
   280 ;;_toupper$4925	offset	0
   281 ;;_c	offset=-2 (param)
   282 ;;_c	offset=-2 (param)
   283 ;;_c	offset=-2 (param)
   284 ;;_n	offset	0
   285 ;;_i	offset	8
   286 ;;_w	offset	10
   287 ;;_p	offset	12
   288 ;;_fp	offset=-2 (param)
   289 ;;_d	offset=-10 (param)
   290 ;;_counter	offset	0
   291 ;;_dividend	offset=-8 (param)
   292 ;;_divisor	offset=-16 (param)
   293 ;;_quotient	offset	0
   294 ;;_counter	offset	8
   295 ;;_dividend	offset=-8 (param)
   296 ;;_divisor	offset=-16 (param)
   297 ;;_r	offset	0
   298 ;;_l	offset	2
   299 ;;__l	offset=-2 (param)
   300 ;;__r	offset=-4 (param)
   301 ;;_n	offset=-6 (param)
   302 ;;_nuls	offset	0
   303 ;;_l	offset	7
   304 ;;_p	offset	9
   305 ;;_cp	offset	11
   306 ;;_w	offset	13
   307 ;;_i	offset	15
   308 ;;_fp	offset=-2 (param)
   309 ;;_s	offset=-4 (param)
   310 ;;_efgtoa$4213	offset	0
   311 ;;_efgtoa$4212	offset	2
   312 ;;_efgtoa$4211	offset	4
   313 ;;_efgtoa$4207	offset	6
   314 ;;_efgtoa$4203	offset	8
   315 ;;_efgtoa$4202	offset	10
   316 ;;_u	offset	12
   317 ;;_g	offset	16
   318 ;;_l	offset	20
   319 ;;_h	offset	24
   320 ;;_ou	offset	28
   321 ;;_n	offset	32
   322 ;;_e	offset	34
   323 ;;_i	offset	36
   324 ;;_w	offset	38
   325 ;;_p	offset	40
   326 ;;_sign	offset	42
   327 ;;_d	offset	44
   328 ;;_ne	offset	46
   329 ;;_m	offset	48
   330 ;;_pp	offset	50
   331 ;;_t	offset	52
   332 ;;_mode	offset	54
   333 ;;_nmode	offset	55
   334 ;;_fp	offset=-2 (param)
   335 ;;_f	offset=-6 (param)
   336 ;;_c	offset=-7 (param)
   337 ;;_tolower$4910	offset	0
   338 ;;_c	offset=-2 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_d	offset	0
   341 ;;_s	offset	2
   342 ;;_dest	offset=-2 (param)
   343 ;;_src	offset=-4 (param)
   344 ;;_u	offset	0
   345 ;;_m	offset	4
   346 ;;_e	offset	8
   347 ;;_x	offset=-4 (param)
   348 ;;_u	offset	0
   349 ;;_e	offset	4
   350 ;;_x	offset=-4 (param)
   351 ;;_exp1	offset	0
   352 ;;_sign1	offset	1
   353 ;;_f1	offset=-4 (param)
   354 ;;_b	offset=-4 (param)
   355 ;;_a	offset=-8 (param)
   356 ;;_grs	offset	0
   357 ;;_bexp	offset	1
   358 ;;_aexp	offset	2
   359 ;;_signs	offset	3
   360 ;;_b	offset=-4 (param)
   361 ;;_a	offset=-8 (param)
   362 ;;_f1	offset=-4 (param)
   363 ;;_prod	offset	0
   364 ;;_grs	offset	4
   365 ;;_temp	offset	8
   366 ;;_bexp	offset	10
   367 ;;_aexp	offset	11
   368 ;;_sign	offset	12
   369 ;;_b	offset=-4 (param)
   370 ;;_a	offset=-8 (param)
   371 ;;_ff1	offset=-4 (param)
   372 ;;_ff2	offset=-8 (param)
   373 ;;_ff1	offset=-4 (param)
   374 ;;_ff2	offset=-8 (param)
   375 ;;_grs	offset	0
   376 ;;_rem	offset	4
   377 ;;_new_exp	offset	8
   378 ;;_aexp	offset	10
   379 ;;_bexp	offset	11
   380 ;;_sign	offset	12
   381 ;;_b	offset=-4 (param)
   382 ;;_a	offset=-8 (param)
   383 ;;_sign	offset	0
   384 ;;_counter	offset	1
   385 ;;_dividend	offset=-2 (param)
   386 ;;_divisor	offset=-4 (param)
   387 ;;_quotient	offset	0
   388 ;;_sign	offset	2
   389 ;;_counter	offset	3
   390 ;;_dividend	offset=-2 (param)
   391 ;;_divisor	offset=-4 (param)
   392 ;;_dtoa$4179	offset	0
   393 ;;_n	offset	2
   394 ;;_i	offset	10
   395 ;;_s	offset	12
   396 ;;_w	offset	14
   397 ;;_p	offset	16
   398 ;;_fp	offset=-2 (param)
   399 ;;_d	offset=-10 (param)
   400 ;;_a	offset=-2 (param)
   401 ;;_sign	offset	0
   402 ;;_counter	offset	1
   403 ;;_dividend	offset=-8 (param)
   404 ;;_divisor	offset=-16 (param)
   405 ;;_quotient	offset	0
   406 ;;_sign	offset	8
   407 ;;_counter	offset	9
   408 ;;_dividend	offset=-8 (param)
   409 ;;_divisor	offset=-16 (param)
   410 ;;_w	offset	0
   411 ;;_fp	offset=-2 (param)
   412 ;;_c	offset=-3 (param)
   413 ;;_w	offset	0
   414 ;;_i	offset	2
   415 ;;_fp	offset=-2 (param)
   416 ;;_buf	offset=-4 (param)
   417 ;;_p	offset=-6 (param)
   418 ;;_a	offset	0
   419 ;;_s	offset=-2 (param)
   420 ;;_i	offset	0
   421 ;;_c	offset	2
   422 ;;_s	offset=-2 (param)
   423 ;;_fp	offset=-4 (param)
   424 ;;_c	offset=-2 (param)
   425 ;;_fp	offset=-4 (param)
   426 ;;_c	offset=-1 (param)
   427 ;;__this	offset=-2 (param)
   428 ;;_c	offset=-3 (param)
   429 ;;_atoi$4763	offset	0
   430 ;;_atoi$4761	offset	2
   431 ;;_atoi$4762	offset	4
   432 ;;_n	offset	5
   433 ;;_neg	offset	7
   434 ;;_s	offset=-2 (param)
   435 ;;_isspace$4801	offset	0
   436 ;;_c	offset=-2 (param)
   437 ;;_c	offset=-2 (param)
   438 ;;_vterm	offset=-1 (param)
   439 ;;_new_response_info	offset=-1 (param)
   440 ;;_new_response_info	offset=-1 (param)
   441 ;;_level	offset=-2 (param)
   442 ;;_dutyValue	offset=-2 (param)
   443 ;;_timer	offset=-1 (param)
   444 ;;_timer	offset=-1 (param)
   445 ;;_count	offset=-3 (param)
   446 ;;_InterruptHandler	offset=-3 (param)
   447 ;;_InterruptHandler	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_InterruptHandler	offset=-3 (param)
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_state	offset	0
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_InterruptHandler	offset=-3 (param)
   455 ;;_InterruptHandler	offset=-3 (param)
   456 ;;_InterruptHandler	offset=-3 (param)
   457 ;;_timerVal	offset=-2 (param)
   458 ;;_channel	offset=-1 (param)
   459 ;;_i	offset	0
   460                           
   461                           	psect	idataBANK0
   462  0185FE                     __pidataBANK0:
   463                           	opt callstack 0
   464                           
   465                           ;initializer for _R
   466  0185FE  0000               	dw	0
   467  018600  0000               	dw	0
   468  018602  0000               	dw	0
   469  018604  0000               	dw	0
   470  018606  0000               	dw	0
   471  018608  0000               	dw	0
   472  01860A  0000               	dw	0
   473  01860C  0000               	dw	0
   474  01860E  0000               	dw	0
   475  018610  0000               	dw	0
   476  018612  0000               	dw	0
   477  018614  0000               	dw	0
   478  018616  0000               	dw	0
   479  018618  0000               	dw	0
   480  01861A  0000               	dw	0
   481  01861C  0000               	dw	0
   482  01861E  8000               	dw	32768
   483  018620  4519               	dw	17689
   484  018622  5333               	dw	21299
   485  018624  451B               	dw	17691
   486  018626  00                 	db	0
   487  018627  0000               	dw	0
   488  018629  00                 	db	0
   489                           
   490                           ;initializer for stoa@F1166
   491  01862A  28                 	db	40
   492  01862B  6E                 	db	110
   493  01862C  75                 	db	117
   494  01862D  6C                 	db	108
   495  01862E  6C                 	db	108
   496  01862F  29                 	db	41
   497  018630  00                 	db	0
   498                           
   499                           ;initializer for _port_data
   500  018631  FF                 	db	255
   501  018632  00                 	db	0
   502  018633  FF                 	db	255
   503  018634  00                 	db	0
   504  018635  FF                 	db	255
   505  018636  00                 	db	0
   506  018637  FF                 	db	255
   507  018638  00                 	db	0
   508  018639  FF                 	db	255
   509  01863A  00                 	db	0
   510  01863B  FF                 	db	255
   511  01863C  00                 	db	0
   512  01863D  FF                 	db	255
   513  01863E  00                 	db	0
   514  01863F  FF                 	db	255
   515  018640  00                 	db	0
   516                           
   517                           	psect	idataBANK1
   518  01771C                     __pidataBANK1:
   519                           	opt callstack 0
   520                           
   521                           ;initializer for _V
   522  01771C  00                 	db	0
   523  01771D  00                 	db	0
   524  01771E  00                 	db	0
   525  01771F  00                 	db	0
   526  017720  00                 	db	0
   527  017721  00                 	db	0
   528  017722  00                 	db	0
   529  017723  00                 	db	0
   530  017724  00                 	db	0
   531  017725  00                 	db	0
   532  017726  00                 	db	0
   533  017727  00                 	db	0
   534  017728  00                 	db	0
   535  017729  00                 	db	0
   536  01772A  00                 	db	0
   537  01772B  00                 	db	0
   538  01772C  00                 	db	0
   539  01772D  00                 	db	0
   540  01772E  00                 	db	0
   541  01772F  00                 	db	0
   542  017730  00                 	db	0
   543  017731  00                 	db	0
   544  017732  00                 	db	0
   545  017733  00                 	db	0
   546  017734  00                 	db	0
   547  017735  00                 	db	0
   548  017736  00                 	db	0
   549  017737  00                 	db	0
   550  017738  00                 	db	0
   551  017739  00                 	db	0
   552  01773A  00                 	db	0
   553  01773B  00                 	db	0
   554  01773C  00                 	db	0
   555  01773D  00                 	db	0
   556  01773E  00                 	db	0
   557  01773F  00                 	db	0
   558  017740  00                 	db	0
   559  017741  00                 	db	0
   560  017742  00                 	db	0
   561  017743  00                 	db	0
   562  017744  00                 	db	0
   563  017745  00                 	db	0
   564  017746  00                 	db	0
   565  017747  00                 	db	0
   566  017748  00                 	db	0
   567  017749  00                 	db	0
   568  01774A  00                 	db	0
   569  01774B  00                 	db	0
   570  01774C  00                 	db	0
   571  01774D  00                 	db	0
   572  01774E  00                 	db	0
   573  01774F  00                 	db	0
   574  017750  00                 	db	0
   575  017751  00                 	db	0
   576  017752  00                 	db	0
   577  017753  00                 	db	0
   578  017754  00                 	db	0
   579  017755  00                 	db	0
   580  017756  00                 	db	0
   581  017757  00                 	db	0
   582  017758  00                 	db	0
   583  017759  00                 	db	0
   584  01775A  00                 	db	0
   585  01775B  00                 	db	0
   586  01775C  00                 	db	0
   587  01775D  00                 	db	0
   588  01775E  00                 	db	0
   589  01775F  00                 	db	0
   590  017760  00                 	db	0
   591  017761  00                 	db	0
   592  017762  00                 	db	0
   593  017763  00                 	db	0
   594  017764  00                 	db	0
   595  017765  00                 	db	0
   596  017766  00                 	db	0
   597  017767  00                 	db	0
   598  017768  00                 	db	0
   599  017769  00                 	db	0
   600  01776A  00                 	db	0
   601  01776B  00                 	db	0
   602  01776C  00                 	db	0
   603  01776D  00                 	db	0
   604  01776E  00                 	db	0
   605  01776F  00                 	db	0
   606  017770  00                 	db	0
   607  017771  00                 	db	0
   608  017772  00                 	db	0
   609  017773  00                 	db	0
   610  017774  00                 	db	0
   611  017775  00                 	db	0
   612  017776  00                 	db	0
   613  017777  00                 	db	0
   614  017778  00                 	db	0
   615  017779  00                 	db	0
   616  01777A  00                 	db	0
   617  01777B  00                 	db	0
   618  01777C  00                 	db	0
   619  01777D  00                 	db	0
   620  01777E  00                 	db	0
   621  01777F  00                 	db	0
   622  017780  00                 	db	0
   623  017781  00                 	db	0
   624  017782  00                 	db	0
   625  017783  00                 	db	0
   626  017784  00                 	db	0
   627  017785  00                 	db	0
   628  017786  00                 	db	0
   629  017787  00                 	db	0
   630  017788  00                 	db	0
   631  017789  00                 	db	0
   632  01778A  00                 	db	0
   633  01778B  00                 	db	0
   634  01778C  00                 	db	0
   635  01778D  00                 	db	0
   636  01778E  00                 	db	0
   637  01778F  00                 	db	0
   638  017790  00                 	db	0
   639  017791  00                 	db	0
   640  017792  00                 	db	0
   641  017793  00                 	db	0
   642  017794  00                 	db	0
   643  017795  00                 	db	0
   644  017796  00                 	db	0
   645  017797  00                 	db	0
   646  017798  00                 	db	0
   647  017799  00                 	db	0
   648  01779A  00                 	db	0
   649  01779B  00                 	db	0
   650  01779C  00                 	db	0
   651  01779D  0000               	dw	0
   652  01779F  0000               	dw	0
   653  0177A1  0000               	dw	0
   654  0177A3  0000               	dw	0
   655  0177A5  00                 	db	0
   656  0177A6  00                 	db	0
   657  0177A7  00                 	db	0
   658  0177A8  00                 	db	0
   659  0177A9  00                 	db	0
   660  0177AA  00                 	db	0
   661  0177AB  0000               	dw	0
   662  0177AD  0000               	dw	0
   663  0177AF  0000               	dw	0
   664  0177B1  0000               	dw	0
   665  0177B3  0000               	dw	0
   666  0177B5  0000               	dw	0
   667  0177B7  00                 	db	0
   668  0177B8  00                 	db	0
   669  0177B9  00                 	db	0
   670  0177BA  00                 	db	0
   671  0177BB  00                 	db	0
   672  0177BC  00                 	db	0
   673  0177BD  00                 	db	0
   674  0177BE  00                 	db	0
   675  0177BF  00                 	db	0
   676  0177C0  00                 	db	0
   677  0177C1  0000               	dw	0
   678  0177C3  0000               	dw	0
   679  0177C5  2D                 	db	45
   680  0177C6  00                 	db	0
   681  0177C7  0000               	dw	0
   682  0177C9  0000               	dw	0
   683  0177CB  0000               	dw	0
   684  0177CD  0000               	dw	0
   685  0177CF  0000               	dw	0
   686  0177D1  0000               	dw	0
   687  0177D3  0000               	dw	0
   688  0177D5  0000               	dw	0
   689                           
   690                           	psect	mediumconst
   691  00FE50                     __pmediumconst:
   692                           	opt callstack 0
   693  00FE50  00                 	db	0
   694  00FE51                     _T:
   695                           	opt callstack 0
   696  00FE51  63                 	db	99
   697  00FE52  6F                 	db	111
   698  00FE53  6D                 	db	109
   699  00FE54  6D                 	db	109
   700  00FE55  61                 	db	97
   701  00FE56  6E                 	db	110
   702  00FE57  64                 	db	100
   703  00FE58  73                 	db	115
   704  00FE59  20                 	db	32
   705  00FE5A  31                 	db	49
   706  00FE5B  00                 	db	0
   707  00FE5C  00                 	db	0
   708  00FE5D  00                 	db	0
   709  00FE5E  00                 	db	0
   710  00FE5F  00                 	db	0
   711  00FE60  00                 	db	0
   712  00FE61  00                 	db	0
   713  00FE62  00                 	db	0
   714  00FE63  64                 	db	100
   715  00FE64  69                 	db	105
   716  00FE65  73                 	db	115
   717  00FE66  70                 	db	112
   718  00FE67  6C                 	db	108
   719  00FE68  61                 	db	97
   720  00FE69  79                 	db	121
   721  00FE6A  73                 	db	115
   722  00FE6B  20                 	db	32
   723  00FE6C  31                 	db	49
   724  00FE6D  00                 	db	0
   725  00FE6E  00                 	db	0
   726  00FE6F  00                 	db	0
   727  00FE70  00                 	db	0
   728  00FE71  00                 	db	0
   729  00FE72  00                 	db	0
   730  00FE73  00                 	db	0
   731  00FE74  00                 	db	0
   732  00FE75  63                 	db	99
   733  00FE76  6F                 	db	111
   734  00FE77  6D                 	db	109
   735  00FE78  6D                 	db	109
   736  00FE79  61                 	db	97
   737  00FE7A  6E                 	db	110
   738  00FE7B  64                 	db	100
   739  00FE7C  73                 	db	115
   740  00FE7D  20                 	db	32
   741  00FE7E  32                 	db	50
   742  00FE7F  00                 	db	0
   743  00FE80  00                 	db	0
   744  00FE81  00                 	db	0
   745  00FE82  00                 	db	0
   746  00FE83  00                 	db	0
   747  00FE84  00                 	db	0
   748  00FE85  00                 	db	0
   749  00FE86  00                 	db	0
   750  00FE87  64                 	db	100
   751  00FE88  69                 	db	105
   752  00FE89  73                 	db	115
   753  00FE8A  70                 	db	112
   754  00FE8B  6C                 	db	108
   755  00FE8C  61                 	db	97
   756  00FE8D  79                 	db	121
   757  00FE8E  73                 	db	115
   758  00FE8F  20                 	db	32
   759  00FE90  32                 	db	50
   760  00FE91  00                 	db	0
   761  00FE92  00                 	db	0
   762  00FE93  00                 	db	0
   763  00FE94  00                 	db	0
   764  00FE95  00                 	db	0
   765  00FE96  00                 	db	0
   766  00FE97  00                 	db	0
   767  00FE98  00                 	db	0
   768  00FE99  63                 	db	99
   769  00FE9A  6F                 	db	111
   770  00FE9B  6D                 	db	109
   771  00FE9C  6D                 	db	109
   772  00FE9D  61                 	db	97
   773  00FE9E  6E                 	db	110
   774  00FE9F  64                 	db	100
   775  00FEA0  73                 	db	115
   776  00FEA1  20                 	db	32
   777  00FEA2  33                 	db	51
   778  00FEA3  00                 	db	0
   779  00FEA4  00                 	db	0
   780  00FEA5  00                 	db	0
   781  00FEA6  00                 	db	0
   782  00FEA7  00                 	db	0
   783  00FEA8  00                 	db	0
   784  00FEA9  00                 	db	0
   785  00FEAA  00                 	db	0
   786  00FEAB  64                 	db	100
   787  00FEAC  69                 	db	105
   788  00FEAD  73                 	db	115
   789  00FEAE  70                 	db	112
   790  00FEAF  6C                 	db	108
   791  00FEB0  61                 	db	97
   792  00FEB1  79                 	db	121
   793  00FEB2  73                 	db	115
   794  00FEB3  20                 	db	32
   795  00FEB4  33                 	db	51
   796  00FEB5  00                 	db	0
   797  00FEB6  00                 	db	0
   798  00FEB7  00                 	db	0
   799  00FEB8  00                 	db	0
   800  00FEB9  00                 	db	0
   801  00FEBA  00                 	db	0
   802  00FEBB  00                 	db	0
   803  00FEBC  00                 	db	0
   804  00FEBD  63                 	db	99
   805  00FEBE  6F                 	db	111
   806  00FEBF  6D                 	db	109
   807  00FEC0  6D                 	db	109
   808  00FEC1  61                 	db	97
   809  00FEC2  6E                 	db	110
   810  00FEC3  64                 	db	100
   811  00FEC4  73                 	db	115
   812  00FEC5  20                 	db	32
   813  00FEC6  34                 	db	52
   814  00FEC7  00                 	db	0
   815  00FEC8  00                 	db	0
   816  00FEC9  00                 	db	0
   817  00FECA  00                 	db	0
   818  00FECB  00                 	db	0
   819  00FECC  00                 	db	0
   820  00FECD  00                 	db	0
   821  00FECE  00                 	db	0
   822  00FECF  64                 	db	100
   823  00FED0  69                 	db	105
   824  00FED1  73                 	db	115
   825  00FED2  70                 	db	112
   826  00FED3  6C                 	db	108
   827  00FED4  61                 	db	97
   828  00FED5  79                 	db	121
   829  00FED6  73                 	db	115
   830  00FED7  20                 	db	32
   831  00FED8  34                 	db	52
   832  00FED9  00                 	db	0
   833  00FEDA  00                 	db	0
   834  00FEDB  00                 	db	0
   835  00FEDC  00                 	db	0
   836  00FEDD  00                 	db	0
   837  00FEDE  00                 	db	0
   838  00FEDF  00                 	db	0
   839  00FEE0  00                 	db	0
   840  00FEE1                     __end_of_T:
   841                           	opt callstack 0
   842  0000                     _IVTADL	set	14493
   843  0000                     _IVTADH	set	14494
   844  0000                     _IVTADU	set	14495
   845  0000                     _PIR4bits	set	14756
   846  0000                     _PIE8bits	set	14744
   847  0000                     _PIR8bits	set	14760
   848  0000                     _SCANPR	set	14839
   849  0000                     _DMA2PR	set	14836
   850  0000                     _DMA1PR	set	14835
   851  0000                     _MAINPR	set	14834
   852  0000                     _ISRPR	set	14833
   853  0000                     _PIE2bits	set	14738
   854  0000                     _PIR2bits	set	14754
   855  0000                     _PIE9bits	set	14745
   856  0000                     _PIR9bits	set	14761
   857  0000                     _PIE6bits	set	14742
   858  0000                     _PIE3bits	set	14739
   859  0000                     _PMD7	set	14791
   860  0000                     _PMD6	set	14790
   861  0000                     _PMD5	set	14789
   862  0000                     _PMD4	set	14788
   863  0000                     _PMD3	set	14787
   864  0000                     _PMD2	set	14786
   865  0000                     _PMD1	set	14785
   866  0000                     _PMD0	set	14784
   867  0000                     _OSCTUNE	set	14814
   868  0000                     _OSCFRQ	set	14815
   869  0000                     _OSCEN	set	14813
   870  0000                     _OSCCON3	set	14811
   871  0000                     _OSCCON1	set	14809
   872  0000                     _IPR8bits	set	14728
   873  0000                     _IPR9bits	set	14729
   874  0000                     _IPR5bits	set	14725
   875  0000                     _IPR1bits	set	14721
   876  0000                     _IPR3bits	set	14723
   877  0000                     _IPR6bits	set	14726
   878  0000                     _IPR2bits	set	14722
   879  0000                     _PIE5bits	set	14741
   880  0000                     _PIE1bits	set	14737
   881  0000                     _PIR5bits	set	14757
   882  0000                     _PIR1bits	set	14753
   883  0000                     _PLLR	set	118496
   884  0000                     _SPI1SDIPPS	set	15071
   885  0000                     _U1RXPPS	set	15077
   886  0000                     _RC6PPS	set	14870
   887  0000                     _RC5PPS	set	14869
   888  0000                     _INT1PPS	set	15041
   889  0000                     _RD1PPS	set	14873
   890  0000                     _INT0PPS	set	15040
   891  0000                     _RC3PPS	set	14867
   892  0000                     _RB6PPS	set	14862
   893  0000                     _SPI1SCKPPS	set	15070
   894  0000                     _U2RXPPS	set	15080
   895  0000                     _SLRCONF	set	14995
   896  0000                     _SLRCONE	set	14979
   897  0000                     _SLRCOND	set	14963
   898  0000                     _SLRCONC	set	14947
   899  0000                     _SLRCONB	set	14931
   900  0000                     _SLRCONA	set	14915
   901  0000                     _ODCOND	set	14962
   902  0000                     _ODCONC	set	14946
   903  0000                     _ODCONB	set	14930
   904  0000                     _ODCONA	set	14914
   905  0000                     _ODCONF	set	14994
   906  0000                     _ODCONE	set	14978
   907  0000                     _WPUC	set	14945
   908  0000                     _WPUA	set	14913
   909  0000                     _WPUB	set	14929
   910  0000                     _WPUE	set	14977
   911  0000                     _WPUF	set	14993
   912  0000                     _WPUD	set	14961
   913  0000                     _ANSELA	set	14912
   914  0000                     _ANSELF	set	14992
   915  0000                     _ANSELE	set	14976
   916  0000                     _ANSELB	set	14928
   917  0000                     _ANSELC	set	14944
   918  0000                     _ANSELD	set	14960
   919  0000                     _DMA2SSA	set	15321
   920  0000                     _DMA1SSA	set	15353
   921  0000                     _DMA2DSZ	set	15310
   922  0000                     _DMA2SSZ	set	15319
   923  0000                     _DMA2DSA	set	15312
   924  0000                     _DMA1DSZ	set	15342
   925  0000                     _DMA1SSZ	set	15351
   926  0000                     _DMA1DSA	set	15344
   927  0000                     _DMA1CON0bits	set	15356
   928  0000                     _DMA1CON1bits	set	15357
   929  0000                     _DMA2CON0	set	15324
   930  0000                     _DMA2AIRQ	set	15326
   931  0000                     _DMA2SIRQ	set	15327
   932  0000                     _DMA2CON1	set	15325
   933  0000                     _DMA1CON0	set	15356
   934  0000                     _DMA1AIRQ	set	15358
   935  0000                     _DMA1SIRQ	set	15359
   936  0000                     _DMA1CON1	set	15357
   937  0000                     _CLKRCON	set	15589
   938  0000                     _CLKRCLK	set	15590
   939  0000                     _SPI1INTFbits	set	15642
   940  0000                     _SPI1RXB	set	15632
   941  0000                     _SPI1TXB	set	15633
   942  0000                     _SPI1TCNTL	set	15634
   943  0000                     _SPI1CON0	set	15636
   944  0000                     _SPI1CLK	set	15644
   945  0000                     _SPI1BAUD	set	15641
   946  0000                     _SPI1CON2	set	15638
   947  0000                     _SPI1CON1	set	15637
   948  0000                     _U2RXB	set	15824
   949  0000                     _U2TXB	set	15826
   950  0000                     _U2ERRIE	set	15842
   951  0000                     _U2ERRIR	set	15841
   952  0000                     _U2UIR	set	15840
   953  0000                     _U2FIFO	set	15839
   954  0000                     _U2BRGH	set	15838
   955  0000                     _U2BRGL	set	15837
   956  0000                     _U2CON2	set	15836
   957  0000                     _U2CON1	set	15835
   958  0000                     _U2CON0	set	15834
   959  0000                     _U2P3L	set	15832
   960  0000                     _U2P2L	set	15830
   961  0000                     _U2P1L	set	15828
   962  0000                     _U1RXB	set	15848
   963  0000                     _U1TXB	set	15850
   964  0000                     _U1ERRIE	set	15866
   965  0000                     _U1ERRIR	set	15865
   966  0000                     _U1UIR	set	15864
   967  0000                     _U1FIFO	set	15863
   968  0000                     _U1BRGH	set	15862
   969  0000                     _U1BRGL	set	15861
   970  0000                     _U1CON2	set	15860
   971  0000                     _U1CON1	set	15859
   972  0000                     _U1CON0	set	15858
   973  0000                     _U1P3H	set	15857
   974  0000                     _U1P3L	set	15856
   975  0000                     _U1P2H	set	15855
   976  0000                     _U1P2L	set	15854
   977  0000                     _U1P1H	set	15853
   978  0000                     _U1P1L	set	15852
   979  0000                     _FVRCON	set	16065
   980  0000                     _ADFLTRL	set	16102
   981  0000                     _ADFLTRH	set	16103
   982  0000                     _ADCON0bits	set	16120
   983  0000                     _ADCON0	set	16120
   984  0000                     _ADCLK	set	16127
   985  0000                     _ADACT	set	16126
   986  0000                     _ADREF	set	16125
   987  0000                     _ADSTAT	set	16124
   988  0000                     _ADCON3	set	16123
   989  0000                     _ADCON2	set	16122
   990  0000                     _ADCON1	set	16121
   991  0000                     _ADPREH	set	16119
   992  0000                     _ADPREL	set	16118
   993  0000                     _ADCAP	set	16117
   994  0000                     _ADACQH	set	16116
   995  0000                     _ADACQL	set	16115
   996  0000                     _ADPCH	set	16113
   997  0000                     _ADRPT	set	16108
   998  0000                     _ADACCU	set	16106
   999  0000                     _ADSTPTH	set	16101
  1000  0000                     _ADSTPTL	set	16100
  1001  0000                     _ADUTHH	set	16097
  1002  0000                     _ADUTHL	set	16096
  1003  0000                     _ADLTHH	set	16095
  1004  0000                     _ADLTHL	set	16094
  1005  0000                     _CCPTMRS1bits	set	16223
  1006  0000                     _LATCbits	set	16316
  1007  0000                     _LATDbits	set	16317
  1008  0000                     _PORTBbits	set	16331
  1009  0000                     _T2CON	set	16300
  1010  0000                     _T2TMR	set	16298
  1011  0000                     _T2PR	set	16299
  1012  0000                     _T2RST	set	16303
  1013  0000                     _T2HLT	set	16301
  1014  0000                     _T2CLKCON	set	16302
  1015  0000                     _PWM8DCL	set	16224
  1016  0000                     _PWM8DCH	set	16225
  1017  0000                     _PWM8CON	set	16226
  1018  0000                     _LATEbits	set	16318
  1019  0000                     _T5CONbits	set	16282
  1020  0000                     _T5CON	set	16282
  1021  0000                     _TMR5L	set	16280
  1022  0000                     _TMR5H	set	16281
  1023  0000                     _T5CLK	set	16285
  1024  0000                     _T5GATE	set	16284
  1025  0000                     _T5GCON	set	16283
  1026  0000                     _T6CON	set	16276
  1027  0000                     _T6TMR	set	16274
  1028  0000                     _T6PR	set	16275
  1029  0000                     _T6RST	set	16279
  1030  0000                     _T6HLT	set	16277
  1031  0000                     _T6CLKCON	set	16278
  1032  0000                     _TRISD	set	16325
  1033  0000                     _TRISC	set	16324
  1034  0000                     _TRISB	set	16323
  1035  0000                     _TRISA	set	16322
  1036  0000                     _TRISF	set	16327
  1037  0000                     _TRISE	set	16326
  1038  0000                     _LATC	set	16316
  1039  0000                     _LATB	set	16315
  1040  0000                     _LATF	set	16319
  1041  0000                     _LATA	set	16314
  1042  0000                     _LATD	set	16317
  1043  0000                     _LATE	set	16318
  1044  0000                     _IVTLOCKbits	set	16340
  1045  0000                     _IVTLOCK	set	16340
  1046  0000                     _INTCON0bits	set	16338
  1047  0000                     _GIE	set	130711
  1048  00FEE1                     
  1049                           ; BSR set to: 57
  1050  00FEE1  20                 	db	32
  1051  00FEE2  4D                 	db	77	;'M'
  1052  00FEE3  65                 	db	101	;'e'
  1053  00FEE4  73                 	db	115	;'s'
  1054  00FEE5  67                 	db	103	;'g'
  1055  00FEE6  20                 	db	32
  1056  00FEE7  25                 	db	37
  1057  00FEE8  64                 	db	100	;'d'
  1058  00FEE9  20                 	db	32
  1059  00FEEA  53                 	db	83	;'S'
  1060  00FEEB  74                 	db	116	;'t'
  1061  00FEEC  61                 	db	97	;'a'
  1062  00FEED  63                 	db	99	;'c'
  1063  00FEEE  6B                 	db	107	;'k'
  1064  00FEEF  20                 	db	32
  1065  00FEF0  25                 	db	37
  1066  00FEF1  64                 	db	100	;'d'
  1067  00FEF2  20                 	db	32
  1068  00FEF3  20                 	db	32
  1069  00FEF4  20                 	db	32
  1070  00FEF5  20                 	db	32
  1071  00FEF6  20                 	db	32
  1072  00FEF7  20                 	db	32
  1073  00FEF8  00                 	db	0
  1074  00FEF9                     STR_27:
  1075                           
  1076                           ; BSR set to: 57
  1077  00FEF9  20                 	db	32
  1078  00FEFA  20                 	db	32
  1079  00FEFB  20                 	db	32
  1080  00FEFC  20                 	db	32
  1081  00FEFD  20                 	db	32
  1082  00FEFE  20                 	db	32
  1083  00FEFF  20                 	db	32
  1084  00FF00  20                 	db	32
  1085  00FF01  20                 	db	32
  1086  00FF02  20                 	db	32
  1087  00FF03  20                 	db	32
  1088  00FF04  20                 	db	32
  1089  00FF05  20                 	db	32
  1090  00FF06  20                 	db	32
  1091  00FF07  20                 	db	32
  1092  00FF08  20                 	db	32
  1093  00FF09  20                 	db	32
  1094  00FF0A  20                 	db	32
  1095  00FF0B  00                 	db	0
  1096  00FF0C                     STR_17:
  1097                           
  1098                           ; BSR set to: 57
  1099  00FF0C  48                 	db	72	;'H'
  1100  00FF0D  45                 	db	69	;'E'
  1101  00FF0E  4C                 	db	76	;'L'
  1102  00FF0F  50                 	db	80	;'P'
  1103  00FF10  20                 	db	32
  1104  00FF11  25                 	db	37
  1105  00FF12  73                 	db	115	;'s'
  1106  00FF13  20                 	db	32
  1107  00FF14  20                 	db	32
  1108  00FF15  20                 	db	32
  1109  00FF16  20                 	db	32
  1110  00FF17  20                 	db	32
  1111  00FF18  20                 	db	32
  1112  00FF19  20                 	db	32
  1113  00FF1A  20                 	db	32
  1114  00FF1B  20                 	db	32
  1115  00FF1C  20                 	db	32
  1116  00FF1D  20                 	db	32
  1117  00FF1E  00                 	db	0
  1118  00FF1F                     
  1119                           ; BSR set to: 57
  1120  00FF1F  44                 	db	68	;'D'
  1121  00FF20  49                 	db	73	;'I'
  1122  00FF21  53                 	db	83	;'S'
  1123  00FF22  50                 	db	80	;'P'
  1124  00FF23  4C                 	db	76	;'L'
  1125  00FF24  41                 	db	65	;'A'
  1126  00FF25  59                 	db	89	;'Y'
  1127  00FF26  20                 	db	32
  1128  00FF27  25                 	db	37
  1129  00FF28  73                 	db	115	;'s'
  1130  00FF29  20                 	db	32
  1131  00FF2A  20                 	db	32
  1132  00FF2B  20                 	db	32
  1133  00FF2C  20                 	db	32
  1134  00FF2D  20                 	db	32
  1135  00FF2E  20                 	db	32
  1136  00FF2F  20                 	db	32
  1137  00FF30  20                 	db	32
  1138  00FF31  00                 	db	0
  1139  00FF32                     STR_11:
  1140                           
  1141                           ; BSR set to: 57
  1142  00FF32  25                 	db	37
  1143  00FF33  64                 	db	100	;'d'
  1144  00FF34  20                 	db	32
  1145  00FF35  25                 	db	37
  1146  00FF36  32                 	db	50	;'2'
  1147  00FF37  2E                 	db	46
  1148  00FF38  34                 	db	52	;'4'
  1149  00FF39  66                 	db	102	;'f'
  1150  00FF3A  2C                 	db	44
  1151  00FF3B  20                 	db	32
  1152  00FF3C  25                 	db	37
  1153  00FF3D  6C                 	db	108	;'l'
  1154  00FF3E  75                 	db	117	;'u'
  1155  00FF3F  20                 	db	32
  1156  00FF40  20                 	db	32
  1157  00FF41  20                 	db	32
  1158  00FF42  23                 	db	35
  1159  00FF43  00                 	db	0
  1160  00FF44                     STR_8:
  1161                           
  1162                           ; BSR set to: 57
  1163  00FF44  20                 	db	32
  1164  00FF45  56                 	db	86	;'V'
  1165  00FF46  54                 	db	84	;'T'
  1166  00FF47  45                 	db	69	;'E'
  1167  00FF48  52                 	db	82	;'R'
  1168  00FF49  4D                 	db	77	;'M'
  1169  00FF4A  20                 	db	32
  1170  00FF4B  23                 	db	35
  1171  00FF4C  32                 	db	50	;'2'
  1172  00FF4D  20                 	db	32
  1173  00FF4E  20                 	db	32
  1174  00FF4F  20                 	db	32
  1175  00FF50  20                 	db	32
  1176  00FF51  20                 	db	32
  1177  00FF52  20                 	db	32
  1178  00FF53  20                 	db	32
  1179  00FF54  00                 	db	0
  1180  00FF55                     STR_4:
  1181                           
  1182                           ; BSR set to: 57
  1183  00FF55  20                 	db	32
  1184  00FF56  4E                 	db	78	;'N'
  1185  00FF57  53                 	db	83	;'S'
  1186  00FF58  41                 	db	65	;'A'
  1187  00FF59  53                 	db	83	;'S'
  1188  00FF5A  50                 	db	80	;'P'
  1189  00FF5B  4F                 	db	79	;'O'
  1190  00FF5C  4F                 	db	79	;'O'
  1191  00FF5D  4B                 	db	75	;'K'
  1192  00FF5E  20                 	db	32
  1193  00FF5F  20                 	db	32
  1194  00FF60  20                 	db	32
  1195  00FF61  20                 	db	32
  1196  00FF62  20                 	db	32
  1197  00FF63  20                 	db	32
  1198  00FF64  20                 	db	32
  1199  00FF65  00                 	db	0
  1200  00FF66                     STR_1:
  1201                           
  1202                           ; BSR set to: 57
  1203  00FF66  20                 	db	32
  1204  00FF67  4D                 	db	77	;'M'
  1205  00FF68  42                 	db	66	;'B'
  1206  00FF69  4D                 	db	77	;'M'
  1207  00FF6A  43                 	db	67	;'C'
  1208  00FF6B  20                 	db	32
  1209  00FF6C  53                 	db	83	;'S'
  1210  00FF6D  4F                 	db	79	;'O'
  1211  00FF6E  4C                 	db	76	;'L'
  1212  00FF6F  41                 	db	65	;'A'
  1213  00FF70  52                 	db	82	;'R'
  1214  00FF71  4D                 	db	77	;'M'
  1215  00FF72  4F                 	db	79	;'O'
  1216  00FF73  4E                 	db	78	;'N'
  1217  00FF74  20                 	db	32
  1218  00FF75  20                 	db	32
  1219  00FF76  00                 	db	0
  1220  00FF77                     STR_5:
  1221                           
  1222                           ; BSR set to: 57
  1223  00FF77  20                 	db	32
  1224  00FF78  53                 	db	83	;'S'
  1225  00FF79  45                 	db	69	;'E'
  1226  00FF7A  51                 	db	81	;'Q'
  1227  00FF7B  55                 	db	85	;'U'
  1228  00FF7C  45                 	db	69	;'E'
  1229  00FF7D  4E                 	db	78	;'N'
  1230  00FF7E  43                 	db	67	;'C'
  1231  00FF7F  45                 	db	69	;'E'
  1232  00FF80  20                 	db	32
  1233  00FF81  54                 	db	84	;'T'
  1234  00FF82  45                 	db	69	;'E'
  1235  00FF83  53                 	db	83	;'S'
  1236  00FF84  54                 	db	84	;'T'
  1237  00FF85  20                 	db	32
  1238  00FF86  20                 	db	32
  1239  00FF87  00                 	db	0
  1240  00FF88                     STR_21:
  1241                           
  1242                           ; BSR set to: 57
  1243  00FF88  76                 	db	118	;'v'
  1244  00FF89  74                 	db	116	;'t'
  1245  00FF8A  65                 	db	101	;'e'
  1246  00FF8B  72                 	db	114	;'r'
  1247  00FF8C  6D                 	db	109	;'m'
  1248  00FF8D  20                 	db	32
  1249  00FF8E  25                 	db	37
  1250  00FF8F  78                 	db	120	;'x'
  1251  00FF90  3A                 	db	58	;':'
  1252  00FF91  25                 	db	37
  1253  00FF92  78                 	db	120	;'x'
  1254  00FF93  20                 	db	32
  1255  00FF94  20                 	db	32
  1256  00FF95  20                 	db	32
  1257  00FF96  00                 	db	0
  1258  00FF97                     STR_2:
  1259                           
  1260                           ; BSR set to: 57
  1261  00FF97  20                 	db	32
  1262  00FF98  56                 	db	86	;'V'
  1263  00FF99  65                 	db	101	;'e'
  1264  00FF9A  72                 	db	114	;'r'
  1265  00FF9B  73                 	db	115	;'s'
  1266  00FF9C  69                 	db	105	;'i'
  1267  00FF9D  6F                 	db	111	;'o'
  1268  00FF9E  6E                 	db	110	;'n'
  1269  00FF9F  20                 	db	32
  1270  00FFA0  25                 	db	37
  1271  00FFA1  73                 	db	115	;'s'
  1272  00FFA2  20                 	db	32
  1273  00FFA3  20                 	db	32
  1274  00FFA4  20                 	db	32
  1275  00FFA5  00                 	db	0
  1276  00FFA6                     STR_9:
  1277                           
  1278                           ; BSR set to: 57
  1279  00FFA6  25                 	db	37
  1280  00FFA7  64                 	db	100	;'d'
  1281  00FFA8  20                 	db	32
  1282  00FFA9  25                 	db	37
  1283  00FFAA  32                 	db	50	;'2'
  1284  00FFAB  2E                 	db	46
  1285  00FFAC  34                 	db	52	;'4'
  1286  00FFAD  66                 	db	102	;'f'
  1287  00FFAE  20                 	db	32
  1288  00FFAF  20                 	db	32
  1289  00FFB0  20                 	db	32
  1290  00FFB1  23                 	db	35
  1291  00FFB2  00                 	db	0
  1292  00FFB3                     STR_15:
  1293                           
  1294                           ; BSR set to: 57
  1295  00FFB3  4E                 	db	78	;'N'
  1296  00FFB4  6F                 	db	111	;'o'
  1297  00FFB5  76                 	db	118	;'v'
  1298  00FFB6  20                 	db	32
  1299  00FFB7  31                 	db	49	;'1'
  1300  00FFB8  32                 	db	50	;'2'
  1301  00FFB9  20                 	db	32
  1302  00FFBA  32                 	db	50	;'2'
  1303  00FFBB  30                 	db	48	;'0'
  1304  00FFBC  31                 	db	49	;'1'
  1305  00FFBD  39                 	db	57	;'9'
  1306  00FFBE  00                 	db	0
  1307  00FFBF                     STR_19:
  1308                           
  1309                           ; BSR set to: 57
  1310  00FFBF  25                 	db	37
  1311  00FFC0  73                 	db	115	;'s'
  1312  00FFC1  20                 	db	32
  1313  00FFC2  20                 	db	32
  1314  00FFC3  20                 	db	32
  1315  00FFC4  20                 	db	32
  1316  00FFC5  20                 	db	32
  1317  00FFC6  20                 	db	32
  1318  00FFC7  20                 	db	32
  1319  00FFC8  00                 	db	0
  1320  00FFC9                     STR_16:
  1321                           
  1322                           ; BSR set to: 57
  1323  00FFC9  31                 	db	49	;'1'
  1324  00FFCA  32                 	db	50	;'2'
  1325  00FFCB  3A                 	db	58	;':'
  1326  00FFCC  32                 	db	50	;'2'
  1327  00FFCD  39                 	db	57	;'9'
  1328  00FFCE  3A                 	db	58	;':'
  1329  00FFCF  33                 	db	51	;'3'
  1330  00FFD0  39                 	db	57	;'9'
  1331  00FFD1  00                 	db	0
  1332  00FFD2                     STR_3:
  1333                           
  1334                           ; BSR set to: 57
  1335  00FFD2  30                 	db	48	;'0'
  1336  00FFD3  2E                 	db	46
  1337  00FFD4  39                 	db	57	;'9'
  1338  00FFD5  32                 	db	50	;'2'
  1339  00FFD6  00                 	db	0
  1340  00FFD7                     STR_34:
  1341                           
  1342                           ; BSR set to: 57
  1343  00FFD7  49                 	db	73	;'I'
  1344  00FFD8  4E                 	db	78	;'N'
  1345  00FFD9  46                 	db	70	;'F'
  1346  00FFDA  00                 	db	0
  1347  00FFDB                     STR_38:
  1348                           
  1349                           ; BSR set to: 57
  1350  00FFDB  4E                 	db	78	;'N'
  1351  00FFDC  41                 	db	65	;'A'
  1352  00FFDD  4E                 	db	78	;'N'
  1353  00FFDE  00                 	db	0
  1354  00FFDF                     STR_35:
  1355                           
  1356                           ; BSR set to: 57
  1357  00FFDF  69                 	db	105	;'i'
  1358  00FFE0  6E                 	db	110	;'n'
  1359  00FFE1  66                 	db	102	;'f'
  1360  00FFE2  00                 	db	0
  1361  00FFE3                     STR_39:
  1362                           
  1363                           ; BSR set to: 57
  1364  00FFE3  6E                 	db	110	;'n'
  1365  00FFE4  61                 	db	97	;'a'
  1366  00FFE5  6E                 	db	110	;'n'
  1367  00FFE6  00                 	db	0
  1368  00FFE7                     STR_65:
  1369                           
  1370                           ; BSR set to: 57
  1371  00FFE7  6C                 	db	108	;'l'
  1372  00FFE8  58                 	db	88	;'X'
  1373  00FFE9  00                 	db	0
  1374  00FFEA                     STR_42:
  1375                           
  1376                           ; BSR set to: 57
  1377  00FFEA  6C                 	db	108	;'l'
  1378  00FFEB  64                 	db	100	;'d'
  1379  00FFEC  00                 	db	0
  1380  00FFED                     STR_51:
  1381                           
  1382                           ; BSR set to: 57
  1383  00FFED  6C                 	db	108	;'l'
  1384  00FFEE  66                 	db	102	;'f'
  1385  00FFEF  00                 	db	0
  1386  00FFF0                     STR_46:
  1387                           
  1388                           ; BSR set to: 57
  1389  00FFF0  6C                 	db	108	;'l'
  1390  00FFF1  69                 	db	105	;'i'
  1391  00FFF2  00                 	db	0
  1392  00FFF3                     STR_56:
  1393                           
  1394                           ; BSR set to: 57
  1395  00FFF3  6C                 	db	108	;'l'
  1396  00FFF4  75                 	db	117	;'u'
  1397  00FFF5  00                 	db	0
  1398  00FFF6                     STR_61:
  1399                           
  1400                           ; BSR set to: 57
  1401  00FFF6  6C                 	db	108	;'l'
  1402  00FFF7  78                 	db	120	;'x'
  1403  00FFF8  00                 	db	0
  1404  00FFF9                     STR_13:
  1405                           
  1406                           ; BSR set to: 57
  1407  00FFF9  25                 	db	37
  1408  00FFFA  63                 	db	99	;'c'
  1409  00FFFB  00                 	db	0
  1410  00FFFC                     STR_12:
  1411                           
  1412                           ; BSR set to: 57
  1413  00FFFC  25                 	db	37
  1414  00FFFD  73                 	db	115	;'s'
  1415  00FFFE  00                 	db	0
  1416  0000                     
  1417                           ; #config settings
  1418  00FFFF  00                 	db	0	; dummy byte at the end
  1419  0000                     
  1420                           	psect	cinit
  1421  017592                     __pcinit:
  1422                           	opt callstack 0
  1423  017592                     start_initialization:
  1424                           	opt callstack 0
  1425  017592                     __initialization:
  1426                           	opt callstack 0
  1427                           
  1428                           ; Initialize objects allocated to BANK1 (187 bytes)
  1429                           ; load TBLPTR registers with __pidataBANK1
  1430  017592  0E1C               	movlw	low __pidataBANK1
  1431  017594  6EF6               	movwf	tblptrl,c
  1432  017596  0E77               	movlw	high __pidataBANK1
  1433  017598  6EF7               	movwf	tblptrh,c
  1434  01759A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1435  01759C  6EF8               	movwf	tblptru,c
  1436  01759E  EE00  F100         	lfsr	0,__pdataBANK1
  1437  0175A2  EE20 F0BB          	lfsr	2,187
  1438  0175A6                     copy_data0:
  1439  0175A6  0009               	tblrd		*+
  1440  0175A8  006F FFD7 FFEE     	movff	tablat,postinc0
  1441  0175AE  50DD               	movf	postdec2,w,c
  1442  0175B0  50D9               	movf	fsr2l,w,c
  1443  0175B2  E1F9               	bnz	copy_data0
  1444                           
  1445                           ; Initialize objects allocated to BANK0 (67 bytes)
  1446                           ; load TBLPTR registers with __pidataBANK0
  1447  0175B4  0EFE               	movlw	low __pidataBANK0
  1448  0175B6  6EF6               	movwf	tblptrl,c
  1449  0175B8  0E85               	movlw	high __pidataBANK0
  1450  0175BA  6EF7               	movwf	tblptrh,c
  1451  0175BC  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1452  0175BE  6EF8               	movwf	tblptru,c
  1453  0175C0  EE00  F0A3         	lfsr	0,__pdataBANK0
  1454  0175C4  EE20 F043          	lfsr	2,67
  1455  0175C8                     copy_data1:
  1456  0175C8  0009               	tblrd		*+
  1457  0175CA  006F FFD7 FFEE     	movff	tablat,postinc0
  1458  0175D0  50DD               	movf	postdec2,w,c
  1459  0175D2  50D9               	movf	fsr2l,w,c
  1460  0175D4  E1F9               	bnz	copy_data1
  1461                           
  1462                           ; Clear objects allocated to BANK6 (255 bytes)
  1463  0175D6  EE01  F200         	lfsr	0,__pbssBANK6
  1464  0175DA  EE20 F0FF          	lfsr	2,255
  1465  0175DE                     clear_0:
  1466  0175DE  6AEE               	clrf	postinc0,c
  1467  0175E0  50DD               	movf	postdec2,w,c
  1468  0175E2  50D9               	movf	fsr2l,w,c
  1469  0175E4  E1FC               	bnz	clear_0
  1470  0175E6  50DA               	movf	fsr2h,w,c
  1471  0175E8  E1FA               	bnz	clear_0
  1472                           
  1473                           ; Clear objects allocated to BANK5 (255 bytes)
  1474  0175EA  EE01  F100         	lfsr	0,__pbssBANK5
  1475  0175EE  EE20 F0FF          	lfsr	2,255
  1476  0175F2                     clear_1:
  1477  0175F2  6AEE               	clrf	postinc0,c
  1478  0175F4  50DD               	movf	postdec2,w,c
  1479  0175F6  50D9               	movf	fsr2l,w,c
  1480  0175F8  E1FC               	bnz	clear_1
  1481  0175FA  50DA               	movf	fsr2h,w,c
  1482  0175FC  E1FA               	bnz	clear_1
  1483                           
  1484                           ; Clear objects allocated to BANK4 (218 bytes)
  1485  0175FE  EE01  F000         	lfsr	0,__pbssBANK4
  1486  017602  0EDA               	movlw	218
  1487  017604                     clear_2:
  1488  017604  6AEE               	clrf	postinc0,c
  1489  017606  06E8               	decf	wreg,f,c
  1490  017608  E1FD               	bnz	clear_2
  1491                           
  1492                           ; Clear objects allocated to BANK3 (198 bytes)
  1493  01760A  EE00  F300         	lfsr	0,__pbssBANK3
  1494  01760E  0EC6               	movlw	198
  1495  017610                     clear_3:
  1496  017610  6AEE               	clrf	postinc0,c
  1497  017612  06E8               	decf	wreg,f,c
  1498  017614  E1FD               	bnz	clear_3
  1499                           
  1500                           ; Clear objects allocated to BANK2 (252 bytes)
  1501  017616  EE00  F200         	lfsr	0,__pbssBANK2
  1502  01761A  0EFC               	movlw	252
  1503  01761C                     clear_4:
  1504  01761C  6AEE               	clrf	postinc0,c
  1505  01761E  06E8               	decf	wreg,f,c
  1506  017620  E1FD               	bnz	clear_4
  1507                           
  1508                           ; Clear objects allocated to BANK1 (64 bytes)
  1509  017622  EE00  F1BB         	lfsr	0,__pbssBANK1
  1510  017626  0E40               	movlw	64
  1511  017628                     clear_5:
  1512  017628  6AEE               	clrf	postinc0,c
  1513  01762A  06E8               	decf	wreg,f,c
  1514  01762C  E1FD               	bnz	clear_5
  1515                           
  1516                           ; Clear objects allocated to BANK0 (67 bytes)
  1517  01762E  EE00  F060         	lfsr	0,__pbssBANK0
  1518  017632  0E43               	movlw	67
  1519  017634                     clear_6:
  1520  017634  6AEE               	clrf	postinc0,c
  1521  017636  06E8               	decf	wreg,f,c
  1522  017638  E1FD               	bnz	clear_6
  1523                           
  1524                           ; Clear objects allocated to COMRAM (52 bytes)
  1525  01763A  EE00  F001         	lfsr	0,__pbssCOMRAM
  1526  01763E  0E34               	movlw	52
  1527  017640                     clear_7:
  1528  017640  6AEE               	clrf	postinc0,c
  1529  017642  06E8               	decf	wreg,f,c
  1530  017644  E1FD               	bnz	clear_7
  1531                           
  1532                           ;
  1533                           ; Setup IVTBASE
  1534                           ;
  1535  017646  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1536  017648  6ED5               	movwf	213,c
  1537  01764A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1538  01764C  6ED6               	movwf	214,c
  1539  01764E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1540  017650  6ED7               	movwf	215,c
  1541  017652                     end_of_initialization:
  1542                           	opt callstack 0
  1543  017652                     __end_of__initialization:
  1544                           	opt callstack 0
  1545  017652  0100               	movlb	0
  1546  017654  EFCD  F0A0         	goto	_main	;jump to C main() function
  1547                           
  1548                           	psect	bssCOMRAM
  1549  000001                     __pbssCOMRAM:
  1550                           	opt callstack 0
  1551  000001                     _TMR6_InterruptHandler:
  1552                           	opt callstack 0
  1553  000001                     	ds	3
  1554  000004                     _ADCC_ADTI_InterruptHandler:
  1555                           	opt callstack 0
  1556  000004                     	ds	3
  1557  000007                     _ADCC_ADI_InterruptHandler:
  1558                           	opt callstack 0
  1559  000007                     	ds	3
  1560  00000A                     _UART1_TxInterruptHandler:
  1561                           	opt callstack 0
  1562  00000A                     	ds	3
  1563  00000D                     _UART1_RxInterruptHandler:
  1564                           	opt callstack 0
  1565  00000D                     	ds	3
  1566  000010                     _UART2_TxInterruptHandler:
  1567                           	opt callstack 0
  1568  000010                     	ds	3
  1569  000013                     _UART2_RxInterruptHandler:
  1570                           	opt callstack 0
  1571  000013                     	ds	3
  1572  000016                     _INT1_InterruptHandler:
  1573                           	opt callstack 0
  1574  000016                     	ds	3
  1575  000019                     _INT0_InterruptHandler:
  1576                           	opt callstack 0
  1577  000019                     	ds	3
  1578  00001C                     _nout:
  1579                           	opt callstack 0
  1580  00001C                     	ds	2
  1581  00001E                     _width:
  1582                           	opt callstack 0
  1583  00001E                     	ds	2
  1584  000020                     _prec:
  1585                           	opt callstack 0
  1586  000020                     	ds	2
  1587  000022                     _flags:
  1588                           	opt callstack 0
  1589  000022                     	ds	2
  1590  000024                     TMR5_ISR@CountCallBack:
  1591                           	opt callstack 0
  1592  000024                     	ds	2
  1593  000026                     _timer5ReloadVal:
  1594                           	opt callstack 0
  1595  000026                     	ds	2
  1596  000028                     _mode_sw:
  1597                           	opt callstack 0
  1598  000028                     	ds	1
  1599  000029                     _uart2RxCount:
  1600                           	opt callstack 0
  1601  000029                     	ds	1
  1602  00002A                     _uart2RxTail:
  1603                           	opt callstack 0
  1604  00002A                     	ds	1
  1605  00002B                     _uart2RxHead:
  1606                           	opt callstack 0
  1607  00002B                     	ds	1
  1608  00002C                     _uart2TxBufferRemaining:
  1609                           	opt callstack 0
  1610  00002C                     	ds	1
  1611  00002D                     _uart2TxTail:
  1612                           	opt callstack 0
  1613  00002D                     	ds	1
  1614  00002E                     _uart2TxHead:
  1615                           	opt callstack 0
  1616  00002E                     	ds	1
  1617  00002F                     _uart1RxCount:
  1618                           	opt callstack 0
  1619  00002F                     	ds	1
  1620  000030                     _uart1RxTail:
  1621                           	opt callstack 0
  1622  000030                     	ds	1
  1623  000031                     _uart1RxHead:
  1624                           	opt callstack 0
  1625  000031                     	ds	1
  1626  000032                     _uart1TxBufferRemaining:
  1627                           	opt callstack 0
  1628  000032                     	ds	1
  1629  000033                     _uart1TxTail:
  1630                           	opt callstack 0
  1631  000033                     	ds	1
  1632  000034                     _uart1TxHead:
  1633                           	opt callstack 0
  1634  000034                     	ds	1
  1635                           
  1636                           	psect	bssBANK0
  1637  000060                     __pbssBANK0:
  1638                           	opt callstack 0
  1639  000060                     _tickCount:
  1640                           	opt callstack 0
  1641  000060                     	ds	24
  1642  000078                     _spi_link:
  1643                           	opt callstack 0
  1644  000078                     	ds	12
  1645  000084                     floorf@F524:
  1646                           	opt callstack 0
  1647  000084                     	ds	4
  1648  000088                     ___fpclassifyf@F463:
  1649                           	opt callstack 0
  1650  000088                     	ds	4
  1651  00008C                     _utctime:
  1652                           	opt callstack 0
  1653  00008C                     	ds	4
  1654  000090                     wdtdelay@dcount:
  1655                           	opt callstack 0
  1656  000090                     	ds	4
  1657  000094                     _P:
  1658                           	opt callstack 0
  1659  000094                     	ds	4
  1660  000098                     _TMR5_InterruptHandler:
  1661                           	opt callstack 0
  1662  000098                     	ds	3
  1663  00009B                     _seed:
  1664                           	opt callstack 0
  1665  00009B                     	ds	8
  1666                           
  1667                           	psect	dataBANK0
  1668  0000A3                     __pdataBANK0:
  1669                           	opt callstack 0
  1670  0000A3                     _R:
  1671                           	opt callstack 0
  1672  0000A3                     	ds	44
  1673  0000CF                     stoa@F1166:
  1674                           	opt callstack 0
  1675  0000CF                     	ds	7
  1676  0000D6                     _port_data:
  1677                           	opt callstack 0
  1678  0000D6                     	ds	16
  1679                           
  1680                           	psect	bssBANK1
  1681  0001BB                     __pbssBANK1:
  1682                           	opt callstack 0
  1683  0001BB                     lp_filter@smooth:
  1684                           	opt callstack 0
  1685  0001BB                     	ds	64
  1686                           
  1687                           	psect	dataBANK1
  1688  000100                     __pdataBANK1:
  1689                           	opt callstack 0
  1690  000100                     _V:
  1691                           	opt callstack 0
  1692  000100                     	ds	187
  1693                           
  1694                           	psect	bssBANK2
  1695  000200                     __pbssBANK2:
  1696                           	opt callstack 0
  1697  000200                     _C:
  1698                           	opt callstack 0
  1699  000200                     	ds	108
  1700  00026C                     _uart1TxBuffer:
  1701                           	opt callstack 0
  1702  00026C                     	ds	64
  1703  0002AC                     _dbuf:
  1704                           	opt callstack 0
  1705  0002AC                     	ds	80
  1706                           
  1707                           	psect	bssBANK3
  1708  000300                     __pbssBANK3:
  1709                           	opt callstack 0
  1710  000300                     _uart2TxBuffer:
  1711                           	opt callstack 0
  1712  000300                     	ds	64
  1713  000340                     _ring_buf2:
  1714                           	opt callstack 0
  1715  000340                     	ds	67
  1716  000383                     _ring_buf1:
  1717                           	opt callstack 0
  1718  000383                     	ds	67
  1719                           
  1720                           	psect	bssBANK4
  1721  000400                     __pbssBANK4:
  1722                           	opt callstack 0
  1723  000400                     _D:
  1724                           	opt callstack 0
  1725  000400                     	ds	218
  1726                           
  1727                           	psect	bssBANK5
  1728  000500                     __pbssBANK5:
  1729                           	opt callstack 0
  1730  000500                     _uart1RxBuffer:
  1731                           	opt callstack 0
  1732  000500                     	ds	255
  1733                           
  1734                           	psect	bssBANK6
  1735  000600                     __pbssBANK6:
  1736                           	opt callstack 0
  1737  000600                     _uart2RxBuffer:
  1738                           	opt callstack 0
  1739  000600                     	ds	255
  1740                           
  1741                           	psect	cstackBANK0
  1742  0000E6                     __pcstackBANK0:
  1743                           	opt callstack 0
  1744  0000E6                     ??_TMR6_ISR:
  1745                           
  1746                           ; 1 bytes @ 0x0
  1747  0000E6                     	ds	1
  1748  0000E7                     ??_TMR5_ISR:
  1749                           
  1750                           ; 1 bytes @ 0x1
  1751  0000E7                     	ds	4
  1752                           
  1753                           	psect	cstackCOMRAM
  1754  000055                     __pcstackCOMRAM:
  1755                           	opt callstack 0
  1756  000055                     ??_ADCC_ISR:
  1757  000055                     
  1758                           ; 1 bytes @ 0x0
  1759  000055                     	ds	1
  1760  000056                     ??_ADCC_ThresholdISR:
  1761                           
  1762                           ; 1 bytes @ 0x1
  1763  000056                     	ds	5
  1764                           
  1765 ;;
  1766 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1767 ;;
  1768 ;; *************** function _main *****************
  1769 ;; Defined at:
  1770 ;;		line 147 in file "main.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;		None
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  mode            1  [STACK] enum E17005
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1  [STACK] void 
  1777 ;; Registers used:
  1778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1788 ;;Total ram usage:        0 bytes
  1789 ;; Hardware stack levels required when called:   19
  1790 ;; This function calls:
  1791 ;;		_SYSTEM_Initialize
  1792 ;;		_StartTimer
  1793 ;;		_TimerDone
  1794 ;;		_WaitMs
  1795 ;;		_check_adc_scan
  1796 ;;		_check_help
  1797 ;;		_clear_adc_scan
  1798 ;;		_convert_adc_data
  1799 ;;		_eaDogM_WriteCommand
  1800 ;;		_get_raw_result
  1801 ;;		_get_vterm_ptr
  1802 ;;		_init_display
  1803 ;;		_mode_lamp_dim
  1804 ;;		_set_display_info
  1805 ;;		_set_vterm
  1806 ;;		_sprintf
  1807 ;;		_srand
  1808 ;;		_start_adc_scan
  1809 ;;		_update_lcd
  1810 ;; This function is called by:
  1811 ;;		Startup code after reset
  1812 ;; This function uses a reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text0
  1816  01419A                     __ptext0:
  1817                           	opt callstack 0
  1818  01419A                     _main:
  1819                           	opt callstack 0
  1820                           
  1821                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1822  01419A  52E6               	movf	postinc1,f,c
  1823                           
  1824                           ;main.c: 149:  UI_STATES mode;;main.c: 152:  SYSTEM_Initialize();
  1825                           
  1826                           ;incstack = 0
  1827  01419C  EC74  F0C2         	call	_SYSTEM_Initialize	;wreg free
  1828                           
  1829                           ; BSR set to: 60
  1830                           ;main.c: 155:  (INTCON0bits.GIEH = 1);
  1831  0141A0  8ED2               	bsf	210,7,c	;volatile
  1832                           
  1833                           ; BSR set to: 60
  1834                           ;main.c: 158:  (INTCON0bits.GIEL = 1);
  1835  0141A2  8CD2               	bsf	210,6,c	;volatile
  1836                           
  1837                           ; BSR set to: 60
  1838                           ;main.c: 160:  V.ui_state = UI_STATE_INIT;
  1839  0141A4  0101               	movlb	1	; () banked
  1840  0141A6  6B00               	clrf	_V& (0+255),b	;volatile
  1841                           
  1842                           ; BSR set to: 1
  1843                           ;main.c: 165:  WaitMs(300);
  1844  0141A8  0E2C               	movlw	44
  1845  0141AA  6EE6               	movwf	postinc1,c
  1846  0141AC  0E01               	movlw	1
  1847  0141AE  6EE6               	movwf	postinc1,c
  1848  0141B0  ECB8  F0C3         	call	_WaitMs	;wreg free
  1849                           
  1850                           ;main.c: 166:  if (PORTBbits.RB0) {
  1851  0141B4  A0CB               	btfss	203,0,c	;volatile
  1852  0141B6  D004               	goto	l10386
  1853                           
  1854                           ;main.c: 167:   mode = UI_STATE_HOST;
  1855                           ;stkvar	_mode @ sp[(-1)+0]
  1856  0141B8  0EFF               	movlw	-1
  1857  0141BA  6AE3               	clrf	plusw1,c
  1858  0141BC  2AE3               	incf	plusw1,f,c
  1859                           
  1860                           ;main.c: 168:  } else {
  1861  0141BE  D004               	goto	l10388
  1862  0141C0                     l10386:
  1863                           
  1864                           ;main.c: 169:   mode = UI_STATE_LOG;
  1865                           ;stkvar	_mode @ sp[(-1)+0]
  1866  0141C0  0EFF               	movlw	-1
  1867  0141C2  6AE3               	clrf	plusw1,c
  1868  0141C4  80E3               	bsf	plusw1,0,c
  1869  0141C6  82E3               	bsf	plusw1,1,c	;indir
  1870  0141C8                     l10388:
  1871                           
  1872                           ;main.c: 172:  if (mode == UI_STATE_HOST) {
  1873                           ;stkvar	_mode @ sp[(-1)+0]
  1874  0141C8  0EFF               	movlw	-1
  1875  0141CA  04E3               	decf	plusw1,w,c
  1876  0141CC  A4D8               	btfss	status,2,c
  1877  0141CE  D007               	goto	l1242
  1878                           
  1879                           ;main.c: 173:   do { LATDbits.LATD0 = 1; } while(0);
  1880  0141D0  80BD               	bsf	189,0,c	;volatile
  1881                           
  1882                           ;main.c: 174:   V.mode_pwm = 70;
  1883  0141D2  0E00               	movlw	0
  1884  0141D4  0101               	movlb	1	; () banked
  1885  0141D6  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1886  0141D8  0E46               	movlw	70
  1887  0141DA  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1888                           
  1889                           ;main.c: 175:  } else {
  1890  0141DC  D004               	goto	l10392
  1891  0141DE                     l1242:
  1892  0141DE  90BD               	bcf	189,0,c	;volatile
  1893                           
  1894                           ;main.c: 177:   V.mode_pwm = 0;
  1895  0141E0  0101               	movlb	1	; () banked
  1896  0141E2  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  1897  0141E4  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  1898  0141E6                     l10392:
  1899                           
  1900                           ; BSR set to: 1
  1901                           ;main.c: 179:  mode_lamp_dim(V.mode_pwm);
  1902  0141E6  0060  F657  FFE6   	movff	_V+149,postinc1
  1903  0141EC  0060  F65B  FFE6   	movff	_V+150,postinc1
  1904  0141F2  EC11  F0C7         	call	_mode_lamp_dim	;wreg free
  1905  0141F6  D0CE               	goto	l10434
  1906  0141F8                     l10394:
  1907                           
  1908                           ; BSR set to: 1
  1909                           ;main.c: 190:    init_display();
  1910  0141F8  ECEA  F0B9         	call	_init_display	;wreg free
  1911                           
  1912                           ; BSR set to: 61
  1913                           ;main.c: 191:    eaDogM_WriteCommand(0b00001100);
  1914  0141FC  0E0C               	movlw	12
  1915  0141FE  6EE6               	movwf	postinc1,c
  1916  014200  EC65  F0C7         	call	_eaDogM_WriteCommand	;wreg free
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;main.c: 193:    V.ui_state = mode;
  1920                           ;stkvar	_mode @ sp[(-1)+0]
  1921  014204  0EFF               	movlw	-1
  1922  014206  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;main.c: 194:    srand(1957);
  1926  01420C  0EA5               	movlw	165
  1927  01420E  6EE6               	movwf	postinc1,c
  1928  014210  0E07               	movlw	7
  1929  014212  6EE6               	movwf	postinc1,c
  1930  014214  ECEE  F0C3         	call	_srand	;wreg free
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;main.c: 195:    set_vterm(0);
  1934  014218  0E00               	movlw	0
  1935  01421A  6EE6               	movwf	postinc1,c
  1936  01421C  ECE8  F0C6         	call	_set_vterm	;wreg free
  1937                           
  1938                           ; BSR set to: 4
  1939                           ;main.c: 196:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1940  014220  0E66               	movlw	low STR_1
  1941  014222  6EE6               	movwf	postinc1,c
  1942  014224  0EFF               	movlw	high STR_1
  1943  014226  6EE6               	movwf	postinc1,c
  1944  014228  0E00               	movlw	0
  1945  01422A  6EE6               	movwf	postinc1,c
  1946  01422C  0E00               	movlw	0
  1947  01422E  6EE6               	movwf	postinc1,c
  1948  014230  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  1949  014234  0060  F0D7  FFE6   	movff	btemp,postinc1
  1950  01423A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1951  014240  0E04               	movlw	4
  1952  014242  6EE6               	movwf	postinc1,c
  1953  014244  EC65  F0B9         	call	_sprintf	;wreg free
  1954                           
  1955                           ;main.c: 197:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.92");
  1956  014248  0ED2               	movlw	low STR_3
  1957  01424A  6EE6               	movwf	postinc1,c
  1958  01424C  0EFF               	movlw	high STR_3
  1959  01424E  6EE6               	movwf	postinc1,c
  1960  014250  0E97               	movlw	low STR_2
  1961  014252  6EE6               	movwf	postinc1,c
  1962  014254  0EFF               	movlw	high STR_2
  1963  014256  6EE6               	movwf	postinc1,c
  1964  014258  0E00               	movlw	0
  1965  01425A  6EE6               	movwf	postinc1,c
  1966  01425C  0E01               	movlw	1
  1967  01425E  6EE6               	movwf	postinc1,c
  1968  014260  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  1969  014264  0060  F0D7  FFE6   	movff	btemp,postinc1
  1970  01426A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1971  014270  0E06               	movlw	6
  1972  014272  6EE6               	movwf	postinc1,c
  1973  014274  EC65  F0B9         	call	_sprintf	;wreg free
  1974                           
  1975                           ;main.c: 198:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1976  014278  0E55               	movlw	low STR_4
  1977  01427A  6EE6               	movwf	postinc1,c
  1978  01427C  0EFF               	movlw	high STR_4
  1979  01427E  6EE6               	movwf	postinc1,c
  1980  014280  0E00               	movlw	0
  1981  014282  6EE6               	movwf	postinc1,c
  1982  014284  0E02               	movlw	2
  1983  014286  6EE6               	movwf	postinc1,c
  1984  014288  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  1985  01428C  0060  F0D7  FFE6   	movff	btemp,postinc1
  1986  014292  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1987  014298  0E04               	movlw	4
  1988  01429A  6EE6               	movwf	postinc1,c
  1989  01429C  EC65  F0B9         	call	_sprintf	;wreg free
  1990                           
  1991                           ;main.c: 199:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1992  0142A0  0E77               	movlw	low STR_5
  1993  0142A2  6EE6               	movwf	postinc1,c
  1994  0142A4  0EFF               	movlw	high STR_5
  1995  0142A6  6EE6               	movwf	postinc1,c
  1996  0142A8  0E02               	movlw	2
  1997  0142AA  6EE6               	movwf	postinc1,c
  1998  0142AC  0E00               	movlw	0
  1999  0142AE  6EE6               	movwf	postinc1,c
  2000  0142B0  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  2001  0142B4  0060  F0D7  FFE6   	movff	btemp,postinc1
  2002  0142BA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2003  0142C0  0E04               	movlw	4
  2004  0142C2  6EE6               	movwf	postinc1,c
  2005  0142C4  EC65  F0B9         	call	_sprintf	;wreg free
  2006                           
  2007                           ;main.c: 200:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.92");
  2008  0142C8  0ED2               	movlw	low STR_3
  2009  0142CA  6EE6               	movwf	postinc1,c
  2010  0142CC  0EFF               	movlw	high STR_3
  2011  0142CE  6EE6               	movwf	postinc1,c
  2012  0142D0  0E97               	movlw	low STR_2
  2013  0142D2  6EE6               	movwf	postinc1,c
  2014  0142D4  0EFF               	movlw	high STR_2
  2015  0142D6  6EE6               	movwf	postinc1,c
  2016  0142D8  0E02               	movlw	2
  2017  0142DA  6EE6               	movwf	postinc1,c
  2018  0142DC  0E01               	movlw	1
  2019  0142DE  6EE6               	movwf	postinc1,c
  2020  0142E0  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  2021  0142E4  0060  F0D7  FFE6   	movff	btemp,postinc1
  2022  0142EA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2023  0142F0  0E06               	movlw	6
  2024  0142F2  6EE6               	movwf	postinc1,c
  2025  0142F4  EC65  F0B9         	call	_sprintf	;wreg free
  2026                           
  2027                           ;main.c: 201:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2028  0142F8  0E44               	movlw	low STR_8
  2029  0142FA  6EE6               	movwf	postinc1,c
  2030  0142FC  0EFF               	movlw	high STR_8
  2031  0142FE  6EE6               	movwf	postinc1,c
  2032  014300  0E02               	movlw	2
  2033  014302  6EE6               	movwf	postinc1,c
  2034  014304  0E02               	movlw	2
  2035  014306  6EE6               	movwf	postinc1,c
  2036  014308  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  2037  01430C  0060  F0D7  FFE6   	movff	btemp,postinc1
  2038  014312  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2039  014318  0E04               	movlw	4
  2040  01431A  6EE6               	movwf	postinc1,c
  2041  01431C  EC65  F0B9         	call	_sprintf	;wreg free
  2042                           
  2043                           ;main.c: 202:    update_lcd(0);
  2044  014320  0E00               	movlw	0
  2045  014322  6EE6               	movwf	postinc1,c
  2046  014324  ECDE  F0B8         	call	_update_lcd	;wreg free
  2047                           
  2048                           ;main.c: 203:    WaitMs(3000);
  2049  014328  0EB8               	movlw	184
  2050  01432A  6EE6               	movwf	postinc1,c
  2051  01432C  0E0B               	movlw	11
  2052  01432E  6EE6               	movwf	postinc1,c
  2053  014330  ECB8  F0C3         	call	_WaitMs	;wreg free
  2054                           
  2055                           ;main.c: 204:    StartTimer(TMR_DISPLAY, 250);
  2056  014334  0EFA               	movlw	250
  2057  014336  6EE6               	movwf	postinc1,c
  2058  014338  0E00               	movlw	0
  2059  01433A  6EE6               	movwf	postinc1,c
  2060  01433C  0E0A               	movlw	10
  2061  01433E  6EE6               	movwf	postinc1,c
  2062  014340  EC62  F0C3         	call	_StartTimer	;wreg free
  2063                           
  2064                           ;main.c: 205:    StartTimer(TMR_ADC, 500);
  2065  014344  0EF4               	movlw	244
  2066  014346  6EE6               	movwf	postinc1,c
  2067  014348  0E01               	movlw	1
  2068  01434A  6EE6               	movwf	postinc1,c
  2069  01434C  0E01               	movlw	1
  2070  01434E  6EE6               	movwf	postinc1,c
  2071  014350  EC62  F0C3         	call	_StartTimer	;wreg free
  2072                           
  2073                           ;main.c: 206:    StartTimer(TMR_INFO, 3000);
  2074  014354  0EB8               	movlw	184
  2075  014356  6EE6               	movwf	postinc1,c
  2076  014358  0E0B               	movlw	11
  2077  01435A  6EE6               	movwf	postinc1,c
  2078  01435C  0E07               	movlw	7
  2079  01435E  6EE6               	movwf	postinc1,c
  2080  014360  EC62  F0C3         	call	_StartTimer	;wreg free
  2081                           
  2082                           ;main.c: 207:    StartTimer(TMR_FLIPPER, 1500);
  2083  014364  0EDC               	movlw	220
  2084  014366  6EE6               	movwf	postinc1,c
  2085  014368  0E05               	movlw	5
  2086  01436A  6EE6               	movwf	postinc1,c
  2087  01436C  0E0B               	movlw	11
  2088  01436E  6EE6               	movwf	postinc1,c
  2089  014370  EC62  F0C3         	call	_StartTimer	;wreg free
  2090                           
  2091                           ;main.c: 208:    StartTimer(TMR_HELPDIS, 3000);
  2092  014374  0EB8               	movlw	184
  2093  014376  6EE6               	movwf	postinc1,c
  2094  014378  0E0B               	movlw	11
  2095  01437A  6EE6               	movwf	postinc1,c
  2096  01437C  0E09               	movlw	9
  2097  01437E  6EE6               	movwf	postinc1,c
  2098  014380  EC62  F0C3         	call	_StartTimer	;wreg free
  2099                           
  2100                           ;main.c: 210:    start_adc_scan();
  2101  014384  ECD2  F0BF         	call	_start_adc_scan	;wreg free
  2102                           
  2103                           ;main.c: 212:    break;
  2104  014388  D01C               	goto	l10436
  2105  01438A                     l1250:
  2106                           
  2107                           ; BSR set to: 1
  2108                           ;main.c: 218:    P.SYSTEM_STABLE = 1;
  2109  01438A  0100               	movlb	0	; () banked
  2110  01438C  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  2111                           
  2112                           ;main.c: 219:    break;
  2113  01438E  D019               	goto	l10436
  2114  014390                     l1252:
  2115                           
  2116                           ; BSR set to: 1
  2117                           ;main.c: 222:    V.ui_state = UI_STATE_INIT;
  2118  014390  6B00               	clrf	_V& (0+255),b	;volatile
  2119                           
  2120                           ;main.c: 223:    break;
  2121  014392  D017               	goto	l10436
  2122  014394                     l10434:
  2123  014394  0101               	movlb	1	; () banked
  2124  014396  5100               	movf	_V& (0+255),w,b	;volatile
  2125  014398  6E3F               	movwf	(btemp+10)^0,c
  2126  01439A  6A40               	clrf	(btemp+11)^0,c
  2127                           
  2128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2129                           ; Switch size 1, requested type "simple"
  2130                           ; Number of cases is 1, Range of values is 0 to 0
  2131                           ; switch strategies available:
  2132                           ; Name         Instructions Cycles
  2133                           ; simple_byte            4     3 (average)
  2134                           ;	Chosen strategy is simple_byte
  2135  01439C  5040               	movf	(btemp+11)^0,w,c
  2136  01439E  0A00               	xorlw	0	; case 0
  2137  0143A0  A4D8               	btfss	status,2,c
  2138  0143A2  D7F6               	goto	l1252
  2139                           
  2140                           ; BSR set to: 1
  2141                           ; Switch size 1, requested type "simple"
  2142                           ; Number of cases is 5, Range of values is 0 to 5
  2143                           ; switch strategies available:
  2144                           ; Name         Instructions Cycles
  2145                           ; simple_byte           16     9 (average)
  2146                           ;	Chosen strategy is simple_byte
  2147  0143A4  503F               	movf	(btemp+10)^0,w,c
  2148  0143A6  0A00               	xorlw	0	; case 0
  2149  0143A8  B4D8               	btfsc	status,2,c
  2150  0143AA  D726               	goto	l10394
  2151  0143AC  0A01               	xorlw	1	; case 1
  2152  0143AE  B4D8               	btfsc	status,2,c
  2153  0143B0  D008               	goto	l10436
  2154  0143B2  0A02               	xorlw	2	; case 3
  2155  0143B4  B4D8               	btfsc	status,2,c
  2156  0143B6  D005               	goto	l10436
  2157  0143B8  0A07               	xorlw	7	; case 4
  2158  0143BA  B4D8               	btfsc	status,2,c
  2159  0143BC  D7E6               	goto	l1250
  2160  0143BE  0A01               	xorlw	1	; case 5
  2161  0143C0  D7E7               	goto	l1252
  2162  0143C2                     l10436:
  2163                           
  2164                           ;main.c: 226:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2165  0143C2  0E01               	movlw	1
  2166  0143C4  6EE6               	movwf	postinc1,c
  2167  0143C6  EC29  F0C6         	call	_TimerDone	;wreg free
  2168  0143CA  5035               	movf	btemp^0,w,c
  2169  0143CC  B4D8               	btfsc	status,2,c
  2170  0143CE  D013               	goto	l10448
  2171  0143D0  ECAD  F0C7         	call	_check_adc_scan	;wreg free
  2172  0143D4  5035               	movf	btemp^0,w,c
  2173  0143D6  B4D8               	btfsc	status,2,c
  2174  0143D8  D00E               	goto	l10448
  2175                           
  2176                           ;main.c: 230:    convert_adc_data();
  2177  0143DA  EC2B  F0BF         	call	_convert_adc_data	;wreg free
  2178                           
  2179                           ;main.c: 234:    clear_adc_scan();
  2180  0143DE  ECB5  F0C7         	call	_clear_adc_scan	;wreg free
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;main.c: 235:    start_adc_scan();
  2184  0143E2  ECD2  F0BF         	call	_start_adc_scan	;wreg free
  2185                           
  2186                           ;main.c: 236:    StartTimer(TMR_ADC, 500);
  2187  0143E6  0EF4               	movlw	244
  2188  0143E8  6EE6               	movwf	postinc1,c
  2189  0143EA  0E01               	movlw	1
  2190  0143EC  6EE6               	movwf	postinc1,c
  2191  0143EE  0E01               	movlw	1
  2192  0143F0  6EE6               	movwf	postinc1,c
  2193  0143F2  EC62  F0C3         	call	_StartTimer	;wreg free
  2194  0143F6                     l10448:
  2195                           
  2196                           ;main.c: 243:   if (TimerDone(TMR_DISPLAY)) {
  2197                           
  2198                           ;main.c: 239:   if (V.ticks) {
  2199  0143F6  0E0A               	movlw	10
  2200  0143F8  6EE6               	movwf	postinc1,c
  2201  0143FA  EC29  F0C6         	call	_TimerDone	;wreg free
  2202  0143FE  5035               	movf	btemp^0,w,c
  2203  014400  B4D8               	btfsc	status,2,c
  2204  014402  D0A1               	goto	l10466
  2205                           
  2206                           ;main.c: 244:    if (TimerDone(TMR_HELPDIS)) {
  2207  014404  0E09               	movlw	9
  2208  014406  6EE6               	movwf	postinc1,c
  2209  014408  EC29  F0C6         	call	_TimerDone	;wreg free
  2210  01440C  5035               	movf	btemp^0,w,c
  2211  01440E  B4D8               	btfsc	status,2,c
  2212  014410  D004               	goto	l10456
  2213                           
  2214                           ;main.c: 245:     set_display_info(DIS_STR);
  2215  014412  0E00               	movlw	0
  2216  014414  6EE6               	movwf	postinc1,c
  2217  014416  EC9E  F0C6         	call	_set_display_info	;wreg free
  2218  01441A                     l10456:
  2219                           
  2220                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 0), "%d %2.4f   #", get_raw_result(C_BATT), C.
      +                          calc[C_BATT]);
  2221  01441A  0060  F803  FFE6   	movff	_C,postinc1
  2222  014420  0060  F807  FFE6   	movff	_C+1,postinc1
  2223  014426  0060  F80B  FFE6   	movff	_C+2,postinc1
  2224  01442C  0060  F80F  FFE6   	movff	_C+3,postinc1
  2225  014432  0E00               	movlw	0
  2226  014434  6EE6               	movwf	postinc1,c
  2227  014436  EC8F  F0C6         	call	_get_raw_result	;wreg free
  2228  01443A  0060  F0D7  FFE6   	movff	btemp,postinc1
  2229  014440  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2230  014446  0EA6               	movlw	low STR_9
  2231  014448  6EE6               	movwf	postinc1,c
  2232  01444A  0EFF               	movlw	high STR_9
  2233  01444C  6EE6               	movwf	postinc1,c
  2234  01444E  0E00               	movlw	0
  2235  014450  6EE6               	movwf	postinc1,c
  2236  014452  0E00               	movlw	0
  2237  014454  6EE6               	movwf	postinc1,c
  2238  014456  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  2239  01445A  0060  F0D7  FFE6   	movff	btemp,postinc1
  2240  014460  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2241  014466  0E0A               	movlw	10
  2242  014468  6EE6               	movwf	postinc1,c
  2243  01446A  EC65  F0B9         	call	_sprintf	;wreg free
  2244                           
  2245                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 0), "%d %2.4f   #", get_raw_result(C_PV), C.ca
      +                          lc[C_PV]);
  2246  01446E  0060  F813  FFE6   	movff	_C+4,postinc1
  2247  014474  0060  F817  FFE6   	movff	_C+5,postinc1
  2248  01447A  0060  F81B  FFE6   	movff	_C+6,postinc1
  2249  014480  0060  F81F  FFE6   	movff	_C+7,postinc1
  2250  014486  0E01               	movlw	1
  2251  014488  6EE6               	movwf	postinc1,c
  2252  01448A  EC8F  F0C6         	call	_get_raw_result	;wreg free
  2253  01448E  0060  F0D7  FFE6   	movff	btemp,postinc1
  2254  014494  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2255  01449A  0EA6               	movlw	low STR_9
  2256  01449C  6EE6               	movwf	postinc1,c
  2257  01449E  0EFF               	movlw	high STR_9
  2258  0144A0  6EE6               	movwf	postinc1,c
  2259  0144A2  0E00               	movlw	0
  2260  0144A4  6EE6               	movwf	postinc1,c
  2261  0144A6  0E01               	movlw	1
  2262  0144A8  6EE6               	movwf	postinc1,c
  2263  0144AA  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  2264  0144AE  0060  F0D7  FFE6   	movff	btemp,postinc1
  2265  0144B4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2266  0144BA  0E0A               	movlw	10
  2267  0144BC  6EE6               	movwf	postinc1,c
  2268  0144BE  EC65  F0B9         	call	_sprintf	;wreg free
  2269                           
  2270                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %lu   #", get_raw_result(V_CC),
      +                           C.calc[V_CC], V.timerint_count);
  2271  0144C2  0060  F6DF  FFE6   	movff	_V+183,postinc1
  2272  0144C8  0060  F6E3  FFE6   	movff	_V+184,postinc1
  2273  0144CE  0060  F6E7  FFE6   	movff	_V+185,postinc1
  2274  0144D4  0060  F6EB  FFE6   	movff	_V+186,postinc1
  2275  0144DA  0060  F823  FFE6   	movff	_C+8,postinc1
  2276  0144E0  0060  F827  FFE6   	movff	_C+9,postinc1
  2277  0144E6  0060  F82B  FFE6   	movff	_C+10,postinc1
  2278  0144EC  0060  F82F  FFE6   	movff	_C+11,postinc1
  2279  0144F2  0E02               	movlw	2
  2280  0144F4  6EE6               	movwf	postinc1,c
  2281  0144F6  EC8F  F0C6         	call	_get_raw_result	;wreg free
  2282  0144FA  0060  F0D7  FFE6   	movff	btemp,postinc1
  2283  014500  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2284  014506  0E32               	movlw	low STR_11
  2285  014508  6EE6               	movwf	postinc1,c
  2286  01450A  0EFF               	movlw	high STR_11
  2287  01450C  6EE6               	movwf	postinc1,c
  2288  01450E  0E00               	movlw	0
  2289  014510  6EE6               	movwf	postinc1,c
  2290  014512  0E02               	movlw	2
  2291  014514  6EE6               	movwf	postinc1,c
  2292  014516  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  2293  01451A  0060  F0D7  FFE6   	movff	btemp,postinc1
  2294  014520  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2295  014526  0E0E               	movlw	14
  2296  014528  6EE6               	movwf	postinc1,c
  2297  01452A  EC65  F0B9         	call	_sprintf	;wreg free
  2298                           
  2299                           ;main.c: 250:    StartTimer(TMR_DISPLAY, 250);
  2300  01452E  0EFA               	movlw	250
  2301  014530  6EE6               	movwf	postinc1,c
  2302  014532  0E00               	movlw	0
  2303  014534  6EE6               	movwf	postinc1,c
  2304  014536  0E0A               	movlw	10
  2305  014538  6EE6               	movwf	postinc1,c
  2306  01453A  EC62  F0C3         	call	_StartTimer	;wreg free
  2307                           
  2308                           ;main.c: 251:    update_lcd(0);
  2309  01453E  0E00               	movlw	0
  2310  014540  6EE6               	movwf	postinc1,c
  2311  014542  ECDE  F0B8         	call	_update_lcd	;wreg free
  2312  014546                     l10466:
  2313                           
  2314                           ;main.c: 257:   check_help(V.flipper);
  2315  014546  0101               	movlb	1	; () banked
  2316  014548  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2317  01454A  6EE6               	movwf	postinc1,c
  2318  01454C  EC78  F0AF         	call	_check_help	;wreg free
  2319                           
  2320                           ;main.c: 262:   if (V.set_sequ) {
  2321  014550  0101               	movlb	1	; () banked
  2322  014552  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2323  014554  D71F               	goto	l10434
  2324                           
  2325                           ; BSR set to: 1
  2326                           ;main.c: 263:    if (TimerDone(TMR_INFO)) {
  2327  014556  0E07               	movlw	7
  2328  014558  6EE6               	movwf	postinc1,c
  2329  01455A  EC29  F0C6         	call	_TimerDone	;wreg free
  2330  01455E  5035               	movf	btemp^0,w,c
  2331  014560  B4D8               	btfsc	status,2,c
  2332  014562  D00B               	goto	l10478
  2333                           
  2334                           ;main.c: 264:     V.set_sequ = 0;
  2335  014564  0101               	movlb	1	; () banked
  2336  014566  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2337                           
  2338                           ; BSR set to: 1
  2339                           ;main.c: 265:     set_vterm(0);
  2340  014568  0E00               	movlw	0
  2341  01456A  6EE6               	movwf	postinc1,c
  2342  01456C  ECE8  F0C6         	call	_set_vterm	;wreg free
  2343                           
  2344                           ; BSR set to: 4
  2345                           ;main.c: 266:     update_lcd(0);
  2346  014570  0E00               	movlw	0
  2347  014572  6EE6               	movwf	postinc1,c
  2348  014574  ECDE  F0B8         	call	_update_lcd	;wreg free
  2349                           
  2350                           ;main.c: 267:    } else {
  2351  014578  D70D               	goto	l10434
  2352  01457A                     l10478:
  2353                           
  2354                           ;main.c: 268:     set_vterm(2);
  2355  01457A  0E02               	movlw	2
  2356  01457C  6EE6               	movwf	postinc1,c
  2357  01457E  ECE8  F0C6         	call	_set_vterm	;wreg free
  2358                           
  2359                           ; BSR set to: 4
  2360                           ;main.c: 269:     update_lcd(2);
  2361  014582  0E02               	movlw	2
  2362  014584  6EE6               	movwf	postinc1,c
  2363  014586  ECDE  F0B8         	call	_update_lcd	;wreg free
  2364  01458A  D704               	goto	l10434
  2365  01458C                     __end_of_main:
  2366                           	opt callstack 0
  2367                           
  2368 ;; *************** function _start_adc_scan *****************
  2369 ;; Defined at:
  2370 ;;		line 33 in file "daq.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1  [STACK] _Bool 
  2377 ;; Registers used:
  2378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/4
  2381 ;;		On exit  : 1/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2388 ;;Total ram usage:        0 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    7
  2391 ;; This function calls:
  2392 ;;		_ADCC_DischargeSampleCapacitor
  2393 ;;		_ADCC_SetADIInterruptHandler
  2394 ;;		_ADCC_SetADTIInterruptHandler
  2395 ;;		_ADCC_StartConversion
  2396 ;; This function is called by:
  2397 ;;		_main
  2398 ;; This function uses a reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text1
  2402  017FA4                     __ptext1:
  2403                           	opt callstack 0
  2404  017FA4                     _start_adc_scan:
  2405                           	opt callstack 23
  2406                           
  2407                           ;daq.c: 35:  if (R.done)
  2408                           
  2409                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2410                           ;incstack = 0
  2411  017FA4  0100               	movlb	0	; () banked
  2412  017FA6  51CE               	movf	(_R+43)& (0+255),w,b	;volatile
  2413  017FA8  A4D8               	btfss	status,2,c
  2414  017FAA  0012               	return	
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;daq.c: 38:  R.scan_index = 0;
  2418  017FAC  6BCB               	clrf	(_R+40)& (0+255),b	;volatile
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2422  017FAE  013A               	movlb	58	; () banked
  2423  017FB0  5140               	movf	64,w,b	;volatile
  2424  017FB2  006E F940  F035    	movff	14928,btemp	;volatile
  2425  017FB8  6A36               	clrf	(btemp+1)^0,c
  2426  017FBA  0060  F0D4  F036   	movff	btemp,btemp+1
  2427  017FC0  6A35               	clrf	btemp^0,c
  2428  017FC2  2635               	addwf	btemp^0,f,c
  2429  017FC4  0E00               	movlw	0
  2430  017FC6  2236               	addwfc	(btemp+1)^0,f,c
  2431  017FC8  0E77               	movlw	119
  2432  017FCA  1435               	andwf	btemp^0,w,c
  2433  017FCC  0100               	movlb	0	; () banked
  2434  017FCE  6FCC               	movwf	(_R+41)& (0+255),b	;volatile
  2435  017FD0  0E3C               	movlw	60
  2436  017FD2  1436               	andwf	(btemp+1)^0,w,c
  2437  017FD4  6FCD               	movwf	(_R+42)& (0+255),b	;volatile
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2441  017FD6  0E5A               	movlw	low _adc_int_handler
  2442  017FD8  6EE6               	movwf	postinc1,c
  2443  017FDA  0E8D               	movlw	high _adc_int_handler
  2444  017FDC  6EE6               	movwf	postinc1,c
  2445  017FDE  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2446  017FE0  6EE6               	movwf	postinc1,c
  2447  017FE2  ECB2  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2448                           
  2449                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2450  017FE6  0E72               	movlw	low _adc_int_t_handler
  2451  017FE8  6EE6               	movwf	postinc1,c
  2452  017FEA  0E7A               	movlw	high _adc_int_t_handler
  2453  017FEC  6EE6               	movwf	postinc1,c
  2454  017FEE  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2455  017FF0  6EE6               	movwf	postinc1,c
  2456  017FF2  EC9E  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2457                           
  2458                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2459  017FF6  ECA1  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2460                           
  2461                           ; BSR set to: 62
  2462                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2463  017FFA  0100               	movlb	0	; () banked
  2464  017FFC  51CB               	movf	(_R+40)& (0+255),w,b	;volatile
  2465  017FFE  0B0F               	andlw	15
  2466  018000  6EE6               	movwf	postinc1,c
  2467  018002  EC54  F0C7         	call	_ADCC_StartConversion	;wreg free
  2468                           
  2469                           ; BSR set to: 62
  2470  018006  82BE               	bsf	190,1,c	;volatile
  2471                           
  2472                           ; BSR set to: 62
  2473  018008  84BE               	bsf	190,2,c	;volatile
  2474                           
  2475                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2476  01800A  0012               	return		;funcret
  2477  01800C                     __end_of_start_adc_scan:
  2478                           	opt callstack 0
  2479                           
  2480 ;; *************** function _ADCC_StartConversion *****************
  2481 ;; Defined at:
  2482 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  channel         1  [STACK] enum E16136
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1  [STACK] void 
  2489 ;; Registers used:
  2490 ;;		fsr1l, fsr1h
  2491 ;; Tracked objects:
  2492 ;;		On entry : 3F/0
  2493 ;;		On exit  : 3F/3E
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2500 ;;Total ram usage:        0 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    6
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_start_adc_scan
  2507 ;;		_adc_int_t_handler
  2508 ;; This function uses a reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text2
  2512  018EA8                     __ptext2:
  2513                           	opt callstack 0
  2514  018EA8                     _ADCC_StartConversion:
  2515                           	opt callstack 6
  2516                           
  2517                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2518                           ;stkvar	_channel @ sp[(0)+-1]
  2519                           
  2520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2521                           ;incstack = 0
  2522  018EA8  0EFF               	movlw	-1
  2523  018EAA  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2524                           
  2525                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2526  018EB0  013E               	movlb	62	; () banked
  2527  018EB2  8FF8               	bsf	248,7,b	;volatile
  2528                           
  2529                           ; BSR set to: 62
  2530                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2531  018EB4  81F8               	bsf	248,0,b	;volatile
  2532                           
  2533                           ; BSR set to: 62
  2534                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2535  018EB6  52E5               	movf	postdec1,f,c
  2536  018EB8  0012               	return		;funcret
  2537  018EBA                     __end_of_ADCC_StartConversion:
  2538                           	opt callstack 0
  2539                           
  2540 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2541 ;; Defined at:
  2542 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1  [STACK] void 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 3F/3E
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2560 ;;Total ram usage:        0 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    6
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_start_adc_scan
  2567 ;;		_adc_int_t_handler
  2568 ;; This function uses a reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text3
  2572  018F42                     __ptext3:
  2573                           	opt callstack 0
  2574  018F42                     _ADCC_DischargeSampleCapacitor:
  2575                           	opt callstack 6
  2576                           
  2577                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2578                           
  2579                           ; BSR set to: 62
  2580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2581                           ;incstack = 0
  2582  018F42  0E3B               	movlw	59
  2583  018F44  013E               	movlb	62	; () banked
  2584  018F46  6FF1               	movwf	241,b	;volatile
  2585                           
  2586                           ; BSR set to: 62
  2587                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2588  018F48  0012               	return		;funcret
  2589  018F4A                     __end_of_ADCC_DischargeSampleCapacitor:
  2590                           	opt callstack 0
  2591                           
  2592 ;; *************** function _srand *****************
  2593 ;; Defined at:
  2594 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  s               2  [STACK] unsigned int 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;		None
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1  [STACK] void 
  2601 ;; Registers used:
  2602 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2603 ;; Tracked objects:
  2604 ;;		On entry : 3F/0
  2605 ;;		On exit  : 3F/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2612 ;;Total ram usage:        0 bytes
  2613 ;; Hardware stack levels used:    1
  2614 ;; Hardware stack levels required when called:    6
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;; This function uses a reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text4
  2623  0187DC                     __ptext4:
  2624                           	opt callstack 0
  2625  0187DC                     _srand:
  2626                           	opt callstack 24
  2627                           
  2628                           ;stkvar	_s @ sp[(0)+-2]
  2629                           
  2630                           ; BSR set to: 62
  2631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2632                           ;incstack = 0
  2633  0187DC  0EFE               	movlw	-2
  2634  0187DE  50E3               	movf	plusw1,w,c
  2635  0187E0  0FFF               	addlw	255
  2636  0187E2  6E3F               	movwf	(btemp+10)^0,c
  2637  0187E4  0EFF               	movlw	-1
  2638  0187E6  006F FF8C  F040    	movff	plusw1,btemp+11
  2639  0187EC  0EFF               	movlw	255
  2640  0187EE  2240               	addwfc	(btemp+11)^0,f,c
  2641  0187F0  0060  F0FC  F09B   	movff	btemp+10,_seed
  2642  0187F6  0060  F100  F09C   	movff	btemp+11,_seed+1
  2643  0187FC  0100               	movlb	0	; () banked
  2644  0187FE  6B9D               	clrf	(_seed+2)& (0+255),b
  2645  018800  6B9E               	clrf	(_seed+3)& (0+255),b
  2646  018802  6B9F               	clrf	(_seed+4)& (0+255),b
  2647  018804  6BA0               	clrf	(_seed+5)& (0+255),b
  2648  018806  6BA1               	clrf	(_seed+6)& (0+255),b
  2649  018808  6BA2               	clrf	(_seed+7)& (0+255),b
  2650                           
  2651                           ; BSR set to: 0
  2652                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2653  01880A  52E5               	movf	postdec1,f,c
  2654  01880C  52E5               	movf	postdec1,f,c
  2655  01880E  0012               	return		;funcret
  2656  018810                     __end_of_srand:
  2657                           	opt callstack 0
  2658                           
  2659 ;; *************** function _init_display *****************
  2660 ;; Defined at:
  2661 ;;		line 37 in file "eadog.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;		None
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;		None
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1  [STACK] void 
  2668 ;; Registers used:
  2669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/1
  2672 ;;		On exit  : 3F/3D
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2679 ;;Total ram usage:        0 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:    8
  2682 ;; This function calls:
  2683 ;;		_ringBufS_init
  2684 ;;		_send_lcd_cmd
  2685 ;;		_send_lcd_cmd_long
  2686 ;;		_wdtdelay
  2687 ;; This function is called by:
  2688 ;;		_main
  2689 ;; This function uses a reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text5
  2693  0173D4                     __ptext5:
  2694                           	opt callstack 0
  2695  0173D4                     _init_display:
  2696                           	opt callstack 22
  2697                           
  2698                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2699                           
  2700                           ; BSR set to: 0
  2701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2702                           ;incstack = 0
  2703  0173D4  0E83               	movlw	low _ring_buf1
  2704  0173D6  0100               	movlb	0	; () banked
  2705  0173D8  6F7E               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2706  0173DA  0E03               	movlw	high _ring_buf1
  2707  0173DC  6F7F               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2708                           
  2709                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2710  0173DE  0E40               	movlw	low _ring_buf2
  2711  0173E0  6F7C               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2712  0173E2  0E03               	movlw	high _ring_buf2
  2713  0173E4  6F7D               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2717  0173E6  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  2718  0173EC  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  2719  0173F2  ECEA  F0C4         	call	_ringBufS_init	;wreg free
  2720                           
  2721                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2722  0173F6  0060  F1F3  FFE6   	movff	_spi_link+4,postinc1
  2723  0173FC  0060  F1F7  FFE6   	movff	_spi_link+5,postinc1
  2724  017402  ECEA  F0C4         	call	_ringBufS_init	;wreg free
  2725                           
  2726                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2727  017406  84BE               	bsf	190,2,c	;volatile
  2728  017408  84BC               	bsf	188,2,c	;volatile
  2729                           
  2730                           ;eadog.c: 46:  wdtdelay(350000);
  2731  01740A  0E30               	movlw	48
  2732  01740C  6EE6               	movwf	postinc1,c
  2733  01740E  0E57               	movlw	87
  2734  017410  6EE6               	movwf	postinc1,c
  2735  017412  0E05               	movlw	5
  2736  017414  6EE6               	movwf	postinc1,c
  2737  017416  0E00               	movlw	0
  2738  017418  6EE6               	movwf	postinc1,c
  2739  01741A  EC5E  F0C1         	call	_wdtdelay	;wreg free
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2743  01741E  0E39               	movlw	57
  2744  017420  6EE6               	movwf	postinc1,c
  2745  017422  ECD6  F0C4         	call	_send_lcd_cmd	;wreg free
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2749  017426  0E1D               	movlw	29
  2750  017428  6EE6               	movwf	postinc1,c
  2751  01742A  ECD6  F0C4         	call	_send_lcd_cmd	;wreg free
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2755  01742E  0E50               	movlw	80
  2756  017430  6EE6               	movwf	postinc1,c
  2757  017432  ECD6  F0C4         	call	_send_lcd_cmd	;wreg free
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2761  017436  0E6C               	movlw	108
  2762  017438  6EE6               	movwf	postinc1,c
  2763  01743A  ECD6  F0C4         	call	_send_lcd_cmd	;wreg free
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2767  01743E  0E76               	movlw	118
  2768  017440  6EE6               	movwf	postinc1,c
  2769  017442  ECD6  F0C4         	call	_send_lcd_cmd	;wreg free
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2773  017446  0E38               	movlw	56
  2774  017448  6EE6               	movwf	postinc1,c
  2775  01744A  ECC2  F0C4         	call	_send_lcd_cmd_long	;wreg free
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2779  01744E  0E0F               	movlw	15
  2780  017450  6EE6               	movwf	postinc1,c
  2781  017452  ECD6  F0C4         	call	_send_lcd_cmd	;wreg free
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2785  017456  0E01               	movlw	1
  2786  017458  6EE6               	movwf	postinc1,c
  2787  01745A  ECC2  F0C4         	call	_send_lcd_cmd_long	;wreg free
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2791  01745E  0E02               	movlw	2
  2792  017460  6EE6               	movwf	postinc1,c
  2793  017462  ECD6  F0C4         	call	_send_lcd_cmd	;wreg free
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2797  017466  0E06               	movlw	6
  2798  017468  6EE6               	movwf	postinc1,c
  2799  01746A  ECD6  F0C4         	call	_send_lcd_cmd	;wreg free
  2800                           
  2801                           ; BSR set to: 0
  2802                           ;eadog.c: 57:  wdtdelay(30);
  2803  01746E  0E1E               	movlw	30
  2804  017470  6EE6               	movwf	postinc1,c
  2805  017472  0E00               	movlw	0
  2806  017474  6EE6               	movwf	postinc1,c
  2807  017476  0E00               	movlw	0
  2808  017478  6EE6               	movwf	postinc1,c
  2809  01747A  0E00               	movlw	0
  2810  01747C  6EE6               	movwf	postinc1,c
  2811  01747E  EC5E  F0C1         	call	_wdtdelay	;wreg free
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2815  017482  0E02               	movlw	2
  2816  017484  013D               	movlb	61	; () banked
  2817  017486  6F16               	movwf	22,b	;volatile
  2818                           
  2819                           ; BSR set to: 61
  2820                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2821  017488  0E40               	movlw	64
  2822  01748A  6F15               	movwf	21,b	;volatile
  2823                           
  2824                           ; BSR set to: 61
  2825                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2826  01748C  0E83               	movlw	131
  2827  01748E  6F14               	movwf	20,b	;volatile
  2828                           
  2829                           ; BSR set to: 61
  2830                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2831  017490  931A               	bcf	26,1,b	;volatile
  2832                           
  2833                           ; BSR set to: 61
  2834                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2835  017492  0E3F               	movlw	-193
  2836  017494  013B               	movlb	59	; () banked
  2837  017496  17FD               	andwf	253,f,b	;volatile
  2838                           
  2839                           ; BSR set to: 59
  2840                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2841  017498  9BFD               	bcf	253,5,b	;volatile
  2842                           
  2843                           ; BSR set to: 59
  2844                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2845  01749A  51FD               	movf	253,w,b	;volatile
  2846  01749C  0BF9               	andlw	-7
  2847  01749E  0902               	iorlw	2
  2848  0174A0  6FFD               	movwf	253,b	;volatile
  2849                           
  2850                           ; BSR set to: 59
  2851                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2852  0174A2  0EE7               	movlw	-25
  2853  0174A4  17FD               	andwf	253,f,b	;volatile
  2854                           
  2855                           ; BSR set to: 59
  2856                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2857  0174A6  81FD               	bsf	253,0,b	;volatile
  2858                           
  2859                           ; BSR set to: 59
  2860                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2861  0174A8  0E83               	movlw	low _ring_buf1
  2862  0174AA  6FF9               	movwf	249,b	;volatile
  2863  0174AC  0E03               	movlw	high _ring_buf1
  2864  0174AE  6FFA               	movwf	250,b	;volatile
  2865  0174B0  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2866  0174B2  6FFB               	movwf	251,b	;volatile
  2867                           
  2868                           ; BSR set to: 59
  2869                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2870  0174B4  9BFC               	bcf	252,5,b	;volatile
  2871                           
  2872                           ; BSR set to: 59
  2873                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2874  0174B6  013D               	movlb	61	; () banked
  2875  0174B8  831A               	bsf	26,1,b	;volatile
  2876                           
  2877                           ; BSR set to: 61
  2878                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2879  0174BA  94BE               	bcf	190,2,c	;volatile
  2880                           
  2881                           ; BSR set to: 61
  2882                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2883  0174BC  0012               	return		;funcret
  2884  0174BE                     __end_of_init_display:
  2885                           	opt callstack 0
  2886                           
  2887 ;; *************** function _send_lcd_cmd_long *****************
  2888 ;; Defined at:
  2889 ;;		line 114 in file "eadog.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  cmd             1  [STACK] const unsigned char 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1  [STACK] void 
  2896 ;; Registers used:
  2897 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2898 ;; Tracked objects:
  2899 ;;		On entry : 3F/0
  2900 ;;		On exit  : 3F/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2907 ;;Total ram usage:        0 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    7
  2910 ;; This function calls:
  2911 ;;		_SPI1_Exchange8bit
  2912 ;;		_wdtdelay
  2913 ;; This function is called by:
  2914 ;;		_init_display
  2915 ;; This function uses a reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text6
  2919  018984                     __ptext6:
  2920                           	opt callstack 0
  2921  018984                     _send_lcd_cmd_long:
  2922                           	opt callstack 22
  2923                           
  2924                           ; BSR set to: 61
  2925                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2926                           ;incstack = 0
  2927                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  2928  018984  92BC               	bcf	188,1,c	;volatile
  2929                           
  2930                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  2931  018986  94BC               	bcf	188,2,c	;volatile
  2932                           
  2933                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  2934                           ;stkvar	_cmd @ sp[(0)+-1]
  2935  018988  0EFF               	movlw	-1
  2936  01898A  50E3               	movf	plusw1,w,c
  2937  01898C  6EE6               	movwf	postinc1,c
  2938  01898E  EC80  F0C6         	call	_SPI1_Exchange8bit	;wreg free
  2939                           
  2940                           ; BSR set to: 57
  2941                           ;eadog.c: 119:  wdtdelay(800);
  2942  018992  0E20               	movlw	32
  2943  018994  6EE6               	movwf	postinc1,c
  2944  018996  0E03               	movlw	3
  2945  018998  6EE6               	movwf	postinc1,c
  2946  01899A  0E00               	movlw	0
  2947  01899C  6EE6               	movwf	postinc1,c
  2948  01899E  0E00               	movlw	0
  2949  0189A0  6EE6               	movwf	postinc1,c
  2950  0189A2  EC5E  F0C1         	call	_wdtdelay	;wreg free
  2951                           
  2952                           ; BSR set to: 0
  2953  0189A6  82BC               	bsf	188,1,c	;volatile
  2954                           
  2955                           ; BSR set to: 0
  2956                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2957  0189A8  52E5               	movf	postdec1,f,c
  2958  0189AA  0012               	return		;funcret
  2959  0189AC                     __end_of_send_lcd_cmd_long:
  2960                           	opt callstack 0
  2961                           
  2962 ;; *************** function _send_lcd_cmd *****************
  2963 ;; Defined at:
  2964 ;;		line 102 in file "eadog.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  cmd             1  [STACK] const unsigned char 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1  [STACK] void 
  2971 ;; Registers used:
  2972 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2973 ;; Tracked objects:
  2974 ;;		On entry : 3F/0
  2975 ;;		On exit  : 3F/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2982 ;;Total ram usage:        0 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:    7
  2985 ;; This function calls:
  2986 ;;		_SPI1_Exchange8bit
  2987 ;;		_wdtdelay
  2988 ;; This function is called by:
  2989 ;;		_init_display
  2990 ;; This function uses a reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text7
  2994  0189AC                     __ptext7:
  2995                           	opt callstack 0
  2996  0189AC                     _send_lcd_cmd:
  2997                           	opt callstack 22
  2998                           
  2999                           ; BSR set to: 0
  3000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3001                           ;incstack = 0
  3002                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3003  0189AC  92BC               	bcf	188,1,c	;volatile
  3004                           
  3005                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3006  0189AE  94BC               	bcf	188,2,c	;volatile
  3007                           
  3008                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3009                           ;stkvar	_cmd @ sp[(0)+-1]
  3010  0189B0  0EFF               	movlw	-1
  3011  0189B2  50E3               	movf	plusw1,w,c
  3012  0189B4  6EE6               	movwf	postinc1,c
  3013  0189B6  EC80  F0C6         	call	_SPI1_Exchange8bit	;wreg free
  3014                           
  3015                           ; BSR set to: 57
  3016                           ;eadog.c: 107:  wdtdelay(30);
  3017  0189BA  0E1E               	movlw	30
  3018  0189BC  6EE6               	movwf	postinc1,c
  3019  0189BE  0E00               	movlw	0
  3020  0189C0  6EE6               	movwf	postinc1,c
  3021  0189C2  0E00               	movlw	0
  3022  0189C4  6EE6               	movwf	postinc1,c
  3023  0189C6  0E00               	movlw	0
  3024  0189C8  6EE6               	movwf	postinc1,c
  3025  0189CA  EC5E  F0C1         	call	_wdtdelay	;wreg free
  3026                           
  3027                           ; BSR set to: 0
  3028  0189CE  82BC               	bsf	188,1,c	;volatile
  3029                           
  3030                           ; BSR set to: 0
  3031                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3032  0189D0  52E5               	movf	postdec1,f,c
  3033  0189D2  0012               	return		;funcret
  3034  0189D4                     __end_of_send_lcd_cmd:
  3035                           	opt callstack 0
  3036                           
  3037 ;; *************** function _SPI1_Exchange8bit *****************
  3038 ;; Defined at:
  3039 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  data            1  [STACK] unsigned char 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1  [STACK] unsigned char 
  3046 ;; Registers used:
  3047 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 3F/39
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3057 ;;Total ram usage:        0 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; Hardware stack levels required when called:    6
  3060 ;; This function calls:
  3061 ;;		Nothing
  3062 ;; This function is called by:
  3063 ;;		_send_lcd_cmd
  3064 ;;		_send_lcd_cmd_long
  3065 ;; This function uses a reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text8
  3069  018D00                     __ptext8:
  3070                           	opt callstack 0
  3071  018D00                     _SPI1_Exchange8bit:
  3072                           	opt callstack 22
  3073                           
  3074                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3075                           
  3076                           ; BSR set to: 0
  3077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3078                           ;incstack = 0
  3079  018D00  0E01               	movlw	1
  3080  018D02  013D               	movlb	61	; () banked
  3081  018D04  6F12               	movwf	18,b	;volatile
  3082                           
  3083                           ; BSR set to: 61
  3084                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3085                           ;stkvar	_data @ sp[(0)+-1]
  3086  018D06  0EFF               	movlw	-1
  3087  018D08  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3088  018D0E                     l835:
  3089                           
  3090                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3091  018D0E  0139               	movlb	57	; () banked
  3092  018D10  A9A2               	btfss	162,4,b	;volatile
  3093  018D12  D7FD               	goto	l835
  3094                           
  3095                           ; BSR set to: 57
  3096                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3097  018D14  006F F440  F035    	movff	15632,btemp	;volatile
  3098                           
  3099                           ; BSR set to: 57
  3100                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3101  018D1A  52E5               	movf	postdec1,f,c
  3102  018D1C  0012               	return		;funcret
  3103  018D1E                     __end_of_SPI1_Exchange8bit:
  3104                           	opt callstack 0
  3105                           
  3106 ;; *************** function _ringBufS_init *****************
  3107 ;; Defined at:
  3108 ;;		line 22 in file "ringbufs.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  _this           2  [STACK] PTR volatile struct ring
  3111 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1  [STACK] void 
  3116 ;; Registers used:
  3117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3127 ;;Total ram usage:        0 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    7
  3130 ;; This function calls:
  3131 ;;		_memset
  3132 ;; This function is called by:
  3133 ;;		_init_display
  3134 ;; This function uses a reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text9
  3138  0189D4                     __ptext9:
  3139                           	opt callstack 0
  3140  0189D4                     _ringBufS_init:
  3141                           	opt callstack 22
  3142                           
  3143                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3144                           
  3145                           ; BSR set to: 57
  3146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3147                           ;incstack = 0
  3148  0189D4  0E43               	movlw	67
  3149  0189D6  6EE6               	movwf	postinc1,c
  3150  0189D8  0E00               	movlw	0
  3151  0189DA  6EE6               	movwf	postinc1,c
  3152  0189DC  0E00               	movlw	0
  3153  0189DE  6EE6               	movwf	postinc1,c
  3154  0189E0  0E00               	movlw	0
  3155  0189E2  6EE6               	movwf	postinc1,c
  3156                           
  3157                           ;stkvar	__this @ sp[(-4)+-2]
  3158  0189E4  0EFA               	movlw	-6
  3159  0189E6  006F FF8F FFE6     	movff	plusw1,postinc1
  3160  0189EC  006F FF8F FFE6     	movff	plusw1,postinc1
  3161  0189F2  ECF9  F0A7         	call	_memset	;wreg free
  3162                           
  3163                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3164  0189F6  52E5               	movf	postdec1,f,c
  3165  0189F8  52E5               	movf	postdec1,f,c
  3166  0189FA  0012               	return		;funcret
  3167  0189FC                     __end_of_ringBufS_init:
  3168                           	opt callstack 0
  3169                           
  3170 ;; *************** function _eaDogM_WriteCommand *****************
  3171 ;; Defined at:
  3172 ;;		line 160 in file "eadog.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  cmd             1  [STACK] const unsigned char 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1  [STACK] void 
  3179 ;; Registers used:
  3180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3181 ;; Tracked objects:
  3182 ;;		On entry : 3F/3D
  3183 ;;		On exit  : 3F/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:   16
  3193 ;; This function calls:
  3194 ;;		_send_lcd_cmd_dma
  3195 ;; This function is called by:
  3196 ;;		_main
  3197 ;; This function uses a reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text10
  3201  018ECA                     __ptext10:
  3202                           	opt callstack 0
  3203  018ECA                     _eaDogM_WriteCommand:
  3204                           	opt callstack 14
  3205                           
  3206                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3207                           ;stkvar	_cmd @ sp[(0)+-1]
  3208                           
  3209                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3210                           ;incstack = 0
  3211  018ECA  0EFF               	movlw	-1
  3212  018ECC  50E3               	movf	plusw1,w,c
  3213  018ECE  6EE6               	movwf	postinc1,c
  3214  018ED0  ECB8  F0C1         	call	_send_lcd_cmd_dma	;wreg free
  3215                           
  3216                           ; BSR set to: 0
  3217                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3218  018ED4  52E5               	movf	postdec1,f,c
  3219  018ED6  0012               	return		;funcret
  3220  018ED8                     __end_of_eaDogM_WriteCommand:
  3221                           	opt callstack 0
  3222                           
  3223 ;; *************** function _convert_adc_data *****************
  3224 ;; Defined at:
  3225 ;;		line 37 in file "mbmc.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  i               1  [STACK] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1  [STACK] void 
  3232 ;; Registers used:
  3233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/4
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3243 ;;Total ram usage:        0 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    9
  3246 ;; This function calls:
  3247 ;;		_conv_raw_result
  3248 ;;		_lp_filter
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;; This function uses a reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text11
  3255  017E56                     __ptext11:
  3256                           	opt callstack 0
  3257  017E56                     _convert_adc_data:
  3258                           	opt callstack 0
  3259                           
  3260                           ; BSR set to: 0
  3261                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3262  017E56  52E6               	movf	postinc1,f,c
  3263                           
  3264                           ;mbmc.c: 39:  uint8_t i = 0;
  3265                           ;stkvar	_i @ sp[(-1)+0]
  3266                           
  3267                           ;incstack = 0
  3268  017E58  0EFF               	movlw	-1
  3269  017E5A  6AE3               	clrf	plusw1,c
  3270  017E5C                     l8958:
  3271                           
  3272                           ;mbmc.c: 45:   C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  3273  017E5C  0E00               	movlw	0
  3274  017E5E  6EE6               	movwf	postinc1,c
  3275                           
  3276                           ;stkvar	_i @ sp[(-2)+0]
  3277  017E60  0EFE               	movlw	-2
  3278  017E62  50E3               	movf	plusw1,w,c
  3279  017E64  6EE6               	movwf	postinc1,c
  3280  017E66  0E00               	movlw	0
  3281  017E68  6EE6               	movwf	postinc1,c
  3282                           
  3283                           ;stkvar	_i @ sp[(-4)+0]
  3284  017E6A  0EFC               	movlw	-4
  3285  017E6C  50E3               	movf	plusw1,w,c
  3286  017E6E  6EE6               	movwf	postinc1,c
  3287  017E70  ECEB  F098         	call	_conv_raw_result	;wreg free
  3288  017E74  0060  F0D7  FFE6   	movff	btemp,postinc1
  3289  017E7A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3290  017E80  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3291  017E86  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3292  017E8C  EC83  F0B1         	call	_lp_filter	;wreg free
  3293                           
  3294                           ;stkvar	_i @ sp[(-1)+0]
  3295  017E90  0EFF               	movlw	-1
  3296  017E92  50E3               	movf	plusw1,w,c
  3297  017E94  0D04               	mullw	4
  3298  017E96  0E00               	movlw	low _C
  3299  017E98  24F3               	addwf	243,w,c
  3300  017E9A  6ED9               	movwf	fsr2l,c
  3301  017E9C  0E02               	movlw	high _C
  3302  017E9E  20F4               	addwfc	prodh,w,c
  3303  017EA0  6EDA               	movwf	fsr2h,c
  3304  017EA2  0060  F0D7  FFDE   	movff	btemp,postinc2
  3305  017EA8  0060  F0DB  FFDE   	movff	btemp+1,postinc2
  3306  017EAE  0060  F0DF  FFDE   	movff	btemp+2,postinc2
  3307  017EB4  0060  F0E3  FFDE   	movff	btemp+3,postinc2
  3308                           
  3309                           ;mbmc.c: 47:  } while (++i < 16);
  3310                           ;stkvar	_i @ sp[(-1)+0]
  3311  017EBA  0EFF               	movlw	-1
  3312  017EBC  2AE3               	incf	plusw1,f,c
  3313  017EBE  0EFF               	movlw	-1
  3314  017EC0  006F FF8C  F035    	movff	plusw1,btemp
  3315  017EC6  0E0F               	movlw	15
  3316  017EC8  6435               	cpfsgt	btemp^0,c
  3317  017ECA  D7C8               	goto	l8958
  3318                           
  3319                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3320  017ECC  52E5               	movf	postdec1,f,c
  3321  017ECE  0012               	return		;funcret
  3322  017ED0                     __end_of_convert_adc_data:
  3323                           	opt callstack 0
  3324                           
  3325 ;; *************** function _lp_filter *****************
  3326 ;; Defined at:
  3327 ;;		line 15 in file "mbmc.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  new             4  [STACK] float 
  3330 ;;  bn              1  [STACK] unsigned char 
  3331 ;;  slow            1  [STACK] char 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  lp_speed        4  [STACK] float 
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  4  [STACK] float 
  3336 ;; Registers used:
  3337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/4
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3347 ;;Total ram usage:        0 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    8
  3350 ;; This function calls:
  3351 ;;		___fladd
  3352 ;;		___flmul
  3353 ;;		___flsub
  3354 ;; This function is called by:
  3355 ;;		_convert_adc_data
  3356 ;; This function uses a reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text12
  3360  016306                     __ptext12:
  3361                           	opt callstack 0
  3362  016306                     _lp_filter:
  3363                           	opt callstack 0
  3364                           
  3365                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3366  016306  52E6               	movf	postinc1,f,c
  3367  016308  52E6               	movf	postinc1,f,c
  3368  01630A  52E6               	movf	postinc1,f,c
  3369  01630C  52E6               	movf	postinc1,f,c
  3370                           
  3371                           ;mbmc.c: 15: float lp_filter(float new, uint8_t bn, int8_t slow);mbmc.c: 16: {;mbmc.c: 1
      +                          7:  static float smooth[16];;mbmc.c: 18:  float lp_speed;;mbmc.c: 20:  if (bn >= 16)
  3372                           ;stkvar	_bn @ sp[(-4)+-5]
  3373                           
  3374                           ;incstack = 0
  3375  01630E  0EF7               	movlw	-9
  3376  016310  006F FF8C  F035    	movff	plusw1,btemp
  3377  016316  0E0F               	movlw	15
  3378  016318  6435               	cpfsgt	btemp^0,c
  3379  01631A  D011               	goto	l8750
  3380  01631C                     u8610:
  3381                           
  3382                           ;mbmc.c: 21:   return new;
  3383                           ;stkvar	_new @ sp[(-4)+-4]
  3384  01631C  0EF8               	movlw	-8
  3385  01631E  006F FF8C  F035    	movff	plusw1,btemp
  3386  016324  0EF9               	movlw	-7
  3387  016326  006F FF8C  F036    	movff	plusw1,btemp+1
  3388  01632C  0EFA               	movlw	-6
  3389  01632E  006F FF8C  F037    	movff	plusw1,btemp+2
  3390  016334  0EFB               	movlw	-5
  3391  016336  006F FF8C  F038    	movff	plusw1,btemp+3
  3392  01633C  D0BF               	goto	l1699
  3393  01633E                     l8750:
  3394                           
  3395                           ;mbmc.c: 23:  if (slow == (-1)) {
  3396                           ;stkvar	_slow @ sp[(-4)+-6]
  3397  01633E  0EF6               	movlw	-10
  3398  016340  28E3               	incf	plusw1,w,c
  3399  016342  A4D8               	btfss	status,2,c
  3400  016344  D012               	goto	l8758
  3401                           
  3402                           ;mbmc.c: 24:   smooth[bn] = 0.0;
  3403                           ;stkvar	_bn @ sp[(-4)+-5]
  3404  016346  0EF7               	movlw	-9
  3405  016348  50E3               	movf	plusw1,w,c
  3406  01634A  0D04               	mullw	4
  3407  01634C  0EBB               	movlw	low lp_filter@smooth
  3408  01634E  24F3               	addwf	243,w,c
  3409  016350  6ED9               	movwf	fsr2l,c
  3410  016352  0E01               	movlw	high lp_filter@smooth
  3411  016354  20F4               	addwfc	prodh,w,c
  3412  016356  6EDA               	movwf	fsr2h,c
  3413  016358  0E00               	movlw	0
  3414  01635A  6EDE               	movwf	postinc2,c
  3415  01635C  0E00               	movlw	0
  3416  01635E  6EDE               	movwf	postinc2,c
  3417  016360  0E00               	movlw	0
  3418  016362  6EDE               	movwf	postinc2,c
  3419  016364  0E00               	movlw	0
  3420  016366  6EDD               	movwf	postdec2,c
  3421  016368  D7D9               	goto	u8610
  3422  01636A                     l8758:
  3423                           
  3424                           ;mbmc.c: 28:  if (slow) {
  3425                           ;stkvar	_slow @ sp[(-4)+-6]
  3426  01636A  0EF6               	movlw	-10
  3427  01636C  50E3               	movf	plusw1,w,c
  3428  01636E  B4D8               	btfsc	status,2,c
  3429  016370  D008               	goto	l8762
  3430                           
  3431                           ;mbmc.c: 29:   lp_speed = 0.066;
  3432  016372  0E02               	movlw	2
  3433  016374  6E3D               	movwf	(btemp+8)^0,c
  3434  016376  0E2B               	movlw	43
  3435  016378  6E3E               	movwf	(btemp+9)^0,c
  3436  01637A  0E87               	movlw	135
  3437  01637C  6E3F               	movwf	(btemp+10)^0,c
  3438  01637E  0E3D               	movlw	61
  3439  016380  D007               	goto	L1
  3440  016382                     l8762:
  3441                           
  3442                           ;mbmc.c: 31:   lp_speed = 0.333;
  3443  016382  0EFA               	movlw	250
  3444  016384  6E3D               	movwf	(btemp+8)^0,c
  3445  016386  0E7E               	movlw	126
  3446  016388  6E3E               	movwf	(btemp+9)^0,c
  3447  01638A  0EAA               	movlw	170
  3448  01638C  6E3F               	movwf	(btemp+10)^0,c
  3449  01638E  0E3E               	movlw	62
  3450  016390                     L1:
  3451  016390  6E40               	movwf	(btemp+11)^0,c
  3452                           
  3453                           ;stkvar	_lp_speed @ sp[(-4)+0]
  3454  016392  0EFC               	movlw	-4
  3455  016394  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  3456  01639A  0EFD               	movlw	-3
  3457  01639C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  3458  0163A2  0EFE               	movlw	-2
  3459  0163A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  3460  0163AA  0EFF               	movlw	-1
  3461  0163AC  0060  F103  FFE3   	movff	btemp+11,plusw1
  3462                           
  3463                           ;mbmc.c: 34:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
  3464                           ;stkvar	_bn @ sp[(-4)+-5]
  3465  0163B2  0EF7               	movlw	-9
  3466  0163B4  50E3               	movf	plusw1,w,c
  3467  0163B6  0D04               	mullw	4
  3468  0163B8  0EBB               	movlw	low lp_filter@smooth
  3469  0163BA  24F3               	addwf	243,w,c
  3470  0163BC  6ED9               	movwf	fsr2l,c
  3471  0163BE  0E01               	movlw	high lp_filter@smooth
  3472  0163C0  20F4               	addwfc	prodh,w,c
  3473  0163C2  6EDA               	movwf	fsr2h,c
  3474  0163C4  006F FF7B FFE6     	movff	postinc2,postinc1
  3475  0163CA  006F FF7B FFE6     	movff	postinc2,postinc1
  3476  0163D0  006F FF7B FFE6     	movff	postinc2,postinc1
  3477  0163D6  006F FF7B FFE6     	movff	postinc2,postinc1
  3478                           
  3479                           ;stkvar	_lp_speed @ sp[(-8)+0]
  3480  0163DC  0EF8               	movlw	-8
  3481  0163DE  006F FF8F FFE6     	movff	plusw1,postinc1
  3482  0163E4  006F FF8F FFE6     	movff	plusw1,postinc1
  3483  0163EA  006F FF8F FFE6     	movff	plusw1,postinc1
  3484  0163F0  006F FF8F FFE6     	movff	plusw1,postinc1
  3485                           
  3486                           ;stkvar	_bn @ sp[(-12)+-5]
  3487  0163F6  0EEF               	movlw	-17
  3488  0163F8  50E3               	movf	plusw1,w,c
  3489  0163FA  0D04               	mullw	4
  3490  0163FC  0EBB               	movlw	low lp_filter@smooth
  3491  0163FE  24F3               	addwf	243,w,c
  3492  016400  6ED9               	movwf	fsr2l,c
  3493  016402  0E01               	movlw	high lp_filter@smooth
  3494  016404  20F4               	addwfc	prodh,w,c
  3495  016406  6EDA               	movwf	fsr2h,c
  3496  016408  006F FF7B FFE6     	movff	postinc2,postinc1
  3497  01640E  006F FF7B FFE6     	movff	postinc2,postinc1
  3498  016414  006F FF7B FFE6     	movff	postinc2,postinc1
  3499  01641A  006F FF7B FFE6     	movff	postinc2,postinc1
  3500                           
  3501                           ;stkvar	_new @ sp[(-16)+-4]
  3502  016420  0EEC               	movlw	-20
  3503  016422  006F FF8F FFE6     	movff	plusw1,postinc1
  3504  016428  006F FF8F FFE6     	movff	plusw1,postinc1
  3505  01642E  006F FF8F FFE6     	movff	plusw1,postinc1
  3506  016434  006F FF8F FFE6     	movff	plusw1,postinc1
  3507  01643A  EC2E  F0C2         	call	___flsub	;wreg free
  3508  01643E  0060  F0D7  FFE6   	movff	btemp,postinc1
  3509  016444  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3510  01644A  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3511  016450  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3512  016456  ECF8  F090         	call	___flmul	;wreg free
  3513  01645A  0060  F0D7  FFE6   	movff	btemp,postinc1
  3514  016460  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3515  016466  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3516  01646C  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3517  016472  EC0D  F095         	call	___fladd	;wreg free
  3518                           
  3519                           ;stkvar	_bn @ sp[(-4)+-5]
  3520  016476  0EF7               	movlw	-9
  3521  016478  50E3               	movf	plusw1,w,c
  3522  01647A  0D04               	mullw	4
  3523  01647C  0EBB               	movlw	low lp_filter@smooth
  3524  01647E  24F3               	addwf	243,w,c
  3525  016480  6ED9               	movwf	fsr2l,c
  3526  016482  0E01               	movlw	high lp_filter@smooth
  3527  016484  20F4               	addwfc	prodh,w,c
  3528  016486  6EDA               	movwf	fsr2h,c
  3529  016488  0060  F0D7  FFDE   	movff	btemp,postinc2
  3530  01648E  0060  F0DB  FFDE   	movff	btemp+1,postinc2
  3531  016494  0060  F0DF  FFDE   	movff	btemp+2,postinc2
  3532  01649A  0060  F0E3  FFDD   	movff	btemp+3,postdec2
  3533  0164A0  52DD               	movf	postdec2,f,c
  3534  0164A2  52DD               	movf	postdec2,f,c
  3535  0164A4  006F FF78  F035    	movff	postinc2,btemp
  3536  0164AA  006F FF78  F036    	movff	postinc2,btemp+1
  3537  0164B0  006F FF78  F037    	movff	postinc2,btemp+2
  3538  0164B6  006F FF78  F038    	movff	postinc2,btemp+3
  3539  0164BC                     l1699:
  3540                           
  3541                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3542  0164BC  0EF6               	movlw	246
  3543  0164BE  26E1               	addwf	fsr1l,f,c
  3544  0164C0  0EFF               	movlw	255
  3545  0164C2  22E2               	addwfc	fsr1h,f,c
  3546  0164C4  0012               	return		;funcret
  3547  0164C6                     __end_of_lp_filter:
  3548                           	opt callstack 0
  3549                           
  3550 ;; *************** function _conv_raw_result *****************
  3551 ;; Defined at:
  3552 ;;		line 80 in file "daq.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  chan            1  [STACK] enum E16136
  3555 ;;  to_what         1  [STACK] enum E16198
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  4  [STACK] float 
  3560 ;; Registers used:
  3561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/4
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3571 ;;Total ram usage:        0 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:    8
  3574 ;; This function calls:
  3575 ;;		___fldiv
  3576 ;;		___flmul
  3577 ;;		___flsub
  3578 ;;		___xxtofl
  3579 ;;		_get_raw_result
  3580 ;;		_nanf
  3581 ;; This function is called by:
  3582 ;;		_convert_adc_data
  3583 ;; This function uses a reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text13
  3587  0131D6                     __ptext13:
  3588                           	opt callstack 0
  3589  0131D6                     _conv_raw_result:
  3590                           	opt callstack 21
  3591                           
  3592                           ;daq.c: 80: float conv_raw_result(adcc_channel_t chan, adc_conv_t to_what);daq.c: 81: {;
      +                          daq.c: 82:  if (!(0b0011110001110111 >> chan & 0x1))
  3593                           ;stkvar	_chan @ sp[(0)+-1]
  3594                           
  3595                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3596                           ;incstack = 0
  3597  0131D6  0EFF               	movlw	-1
  3598  0131D8  006F FF8C  F040    	movff	plusw1,btemp+11
  3599  0131DE  0E77               	movlw	119
  3600  0131E0  6E3D               	movwf	(btemp+8)^0,c
  3601  0131E2  0E3C               	movlw	60
  3602  0131E4  6E3E               	movwf	(btemp+9)^0,c
  3603  0131E6  2A40               	incf	(btemp+11)^0,f,c
  3604  0131E8  D003               	goto	u8494
  3605  0131EA                     u8495:
  3606  0131EA  343E               	rlcf	(btemp+9)^0,w,c
  3607  0131EC  323E               	rrcf	(btemp+9)^0,f,c
  3608  0131EE  323D               	rrcf	(btemp+8)^0,f,c
  3609  0131F0                     u8494:
  3610  0131F0  2E40               	decfsz	(btemp+11)^0,f,c
  3611  0131F2  D7FB               	goto	u8495
  3612  0131F4  B03D               	btfsc	(btemp+8)^0,0,c
  3613  0131F6  D2C1               	goto	l8734
  3614                           
  3615                           ;daq.c: 83:   return nanf("");
  3616  0131F8  0E0B               	movlw	low (STR_27+18)
  3617  0131FA  6EE6               	movwf	postinc1,c
  3618  0131FC  0EFF               	movlw	high (STR_27+18)
  3619  0131FE  6EE6               	movwf	postinc1,c
  3620  013200  EC9F  F0C0         	call	_nanf	;wreg free
  3621  013204  D2CA               	goto	l1654
  3622  013206                     l8686:
  3623                           
  3624                           ;daq.c: 87:   if (0b0000000000000011 >> chan & 0x1) {
  3625                           ;stkvar	_chan @ sp[(0)+-1]
  3626  013206  0EFF               	movlw	-1
  3627  013208  006F FF8C  F040    	movff	plusw1,btemp+11
  3628  01320E  0E03               	movlw	3
  3629  013210  6E3D               	movwf	(btemp+8)^0,c
  3630  013212  0E00               	movlw	0
  3631  013214  6E3E               	movwf	(btemp+9)^0,c
  3632  013216  2A40               	incf	(btemp+11)^0,f,c
  3633  013218  D003               	goto	u8514
  3634  01321A                     u8515:
  3635  01321A  343E               	rlcf	(btemp+9)^0,w,c
  3636  01321C  323E               	rrcf	(btemp+9)^0,f,c
  3637  01321E  323D               	rrcf	(btemp+8)^0,f,c
  3638  013220                     u8514:
  3639  013220  2E40               	decfsz	(btemp+11)^0,f,c
  3640  013222  D7FB               	goto	u8515
  3641  013224  A03D               	btfss	(btemp+8)^0,0,c
  3642  013226  D139               	goto	l8700
  3643                           
  3644                           ;daq.c: 88:    if (0b0000000000000001 >> chan & 0x1) {
  3645                           ;stkvar	_chan @ sp[(0)+-1]
  3646  013228  0EFF               	movlw	-1
  3647  01322A  006F FF8C  F040    	movff	plusw1,btemp+11
  3648  013230  0E01               	movlw	1
  3649  013232  6E3D               	movwf	(btemp+8)^0,c
  3650  013234  0E00               	movlw	0
  3651  013236  6E3E               	movwf	(btemp+9)^0,c
  3652  013238  2A40               	incf	(btemp+11)^0,f,c
  3653  01323A  D003               	goto	u8534
  3654  01323C                     u8535:
  3655  01323C  343E               	rlcf	(btemp+9)^0,w,c
  3656  01323E  323E               	rrcf	(btemp+9)^0,f,c
  3657  013240  323D               	rrcf	(btemp+8)^0,f,c
  3658  013242                     u8534:
  3659  013242  2E40               	decfsz	(btemp+11)^0,f,c
  3660  013244  D7FB               	goto	u8535
  3661  013246  A03D               	btfss	(btemp+8)^0,0,c
  3662  013248  D094               	goto	l8696
  3663                           
  3664                           ;daq.c: 89:     return(((float) get_raw_result(chan) * 1.25/2.0) - R.c_offset[0]) * 143.
      +                          85 / 1000.0;
  3665  01324A  0E00               	movlw	0
  3666  01324C  6EE6               	movwf	postinc1,c
  3667  01324E  0E00               	movlw	0
  3668  013250  6EE6               	movwf	postinc1,c
  3669  013252  0E7A               	movlw	122
  3670  013254  6EE6               	movwf	postinc1,c
  3671  013256  0E44               	movlw	68
  3672  013258  6EE6               	movwf	postinc1,c
  3673  01325A  0E9A               	movlw	154
  3674  01325C  6EE6               	movwf	postinc1,c
  3675  01325E  0ED9               	movlw	217
  3676  013260  6EE6               	movwf	postinc1,c
  3677  013262  0E0F               	movlw	15
  3678  013264  6EE6               	movwf	postinc1,c
  3679  013266  0E43               	movlw	67
  3680  013268  6EE6               	movwf	postinc1,c
  3681  01326A  0060  F30F  FFE6   	movff	_R+32,postinc1
  3682  013270  0060  F313  FFE6   	movff	_R+33,postinc1
  3683  013276  0060  F317  FFE6   	movff	_R+34,postinc1
  3684  01327C  0060  F31B  FFE6   	movff	_R+35,postinc1
  3685  013282  0E00               	movlw	0
  3686  013284  6EE6               	movwf	postinc1,c
  3687  013286  0E00               	movlw	0
  3688  013288  6EE6               	movwf	postinc1,c
  3689  01328A  0E00               	movlw	0
  3690  01328C  6EE6               	movwf	postinc1,c
  3691  01328E  0E40               	movlw	64
  3692  013290  6EE6               	movwf	postinc1,c
  3693  013292  0E00               	movlw	0
  3694  013294  6EE6               	movwf	postinc1,c
  3695  013296  0E00               	movlw	0
  3696  013298  6EE6               	movwf	postinc1,c
  3697  01329A  0EA0               	movlw	160
  3698  01329C  6EE6               	movwf	postinc1,c
  3699  01329E  0E3F               	movlw	63
  3700  0132A0  6EE6               	movwf	postinc1,c
  3701                           
  3702                           ;stkvar	_chan @ sp[(-20)+-1]
  3703  0132A2  0EEB               	movlw	-21
  3704  0132A4  50E3               	movf	plusw1,w,c
  3705  0132A6  6EE6               	movwf	postinc1,c
  3706  0132A8  EC8F  F0C6         	call	_get_raw_result	;wreg free
  3707  0132AC  0060  F0D4  F03F   	movff	btemp,btemp+10
  3708  0132B2  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3709  0132B8  503F               	movf	(btemp+10)^0,w,c
  3710  0132BA  6E39               	movwf	(btemp+4)^0,c
  3711  0132BC  5040               	movf	(btemp+11)^0,w,c
  3712  0132BE  6E3A               	movwf	(btemp+5)^0,c
  3713  0132C0  6A3B               	clrf	(btemp+6)^0,c
  3714  0132C2  6A3C               	clrf	(btemp+7)^0,c
  3715  0132C4  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3716  0132CA  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3717  0132D0  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3718  0132D6  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3719  0132DC  0E00               	movlw	0
  3720  0132DE  6EE6               	movwf	postinc1,c
  3721  0132E0  EC81  F0B0         	call	___xxtofl	;wreg free
  3722  0132E4  0060  F0D7  FFE6   	movff	btemp,postinc1
  3723  0132EA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3724  0132F0  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3725  0132F6  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3726  0132FC  ECF8  F090         	call	___flmul	;wreg free
  3727  013300  0060  F0D7  FFE6   	movff	btemp,postinc1
  3728  013306  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3729  01330C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3730  013312  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3731  013318  ECD0  F09B         	call	___fldiv	;wreg free
  3732  01331C  0060  F0D7  FFE6   	movff	btemp,postinc1
  3733  013322  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3734  013328  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3735  01332E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3736  013334  EC2E  F0C2         	call	___flsub	;wreg free
  3737  013338  0060  F0D7  FFE6   	movff	btemp,postinc1
  3738  01333E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3739  013344  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3740  01334A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3741  013350  ECF8  F090         	call	___flmul	;wreg free
  3742  013354  0060  F0D7  FFE6   	movff	btemp,postinc1
  3743  01335A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3744  013360  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3745  013366  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3746  01336C  ECD0  F09B         	call	___fldiv	;wreg free
  3747  013370  D214               	goto	l1654
  3748  013372                     l8696:
  3749                           
  3750                           ;daq.c: 91:     return(((float) get_raw_result(chan) * 1.25/2.0) - R.c_offset[1]) * 60.1
      +                           / 1000.0;
  3751  013372  0E00               	movlw	0
  3752  013374  6EE6               	movwf	postinc1,c
  3753  013376  0E00               	movlw	0
  3754  013378  6EE6               	movwf	postinc1,c
  3755  01337A  0E7A               	movlw	122
  3756  01337C  6EE6               	movwf	postinc1,c
  3757  01337E  0E44               	movlw	68
  3758  013380  6EE6               	movwf	postinc1,c
  3759  013382  0E66               	movlw	102
  3760  013384  6EE6               	movwf	postinc1,c
  3761  013386  0E66               	movlw	102
  3762  013388  6EE6               	movwf	postinc1,c
  3763  01338A  0E70               	movlw	112
  3764  01338C  6EE6               	movwf	postinc1,c
  3765  01338E  0E42               	movlw	66
  3766  013390  6EE6               	movwf	postinc1,c
  3767  013392  0060  F31F  FFE6   	movff	_R+36,postinc1
  3768  013398  0060  F323  FFE6   	movff	_R+37,postinc1
  3769  01339E  0060  F327  FFE6   	movff	_R+38,postinc1
  3770  0133A4  0060  F32B  FFE6   	movff	_R+39,postinc1
  3771  0133AA  0E00               	movlw	0
  3772  0133AC  6EE6               	movwf	postinc1,c
  3773  0133AE  0E00               	movlw	0
  3774  0133B0  6EE6               	movwf	postinc1,c
  3775  0133B2  0E00               	movlw	0
  3776  0133B4  6EE6               	movwf	postinc1,c
  3777  0133B6  0E40               	movlw	64
  3778  0133B8  6EE6               	movwf	postinc1,c
  3779  0133BA  0E00               	movlw	0
  3780  0133BC  6EE6               	movwf	postinc1,c
  3781  0133BE  0E00               	movlw	0
  3782  0133C0  6EE6               	movwf	postinc1,c
  3783  0133C2  0EA0               	movlw	160
  3784  0133C4  6EE6               	movwf	postinc1,c
  3785  0133C6  0E3F               	movlw	63
  3786  0133C8  6EE6               	movwf	postinc1,c
  3787                           
  3788                           ;stkvar	_chan @ sp[(-20)+-1]
  3789  0133CA  0EEB               	movlw	-21
  3790  0133CC  50E3               	movf	plusw1,w,c
  3791  0133CE  6EE6               	movwf	postinc1,c
  3792  0133D0  EC8F  F0C6         	call	_get_raw_result	;wreg free
  3793  0133D4  0060  F0D4  F03F   	movff	btemp,btemp+10
  3794  0133DA  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3795  0133E0  503F               	movf	(btemp+10)^0,w,c
  3796  0133E2  6E39               	movwf	(btemp+4)^0,c
  3797  0133E4  5040               	movf	(btemp+11)^0,w,c
  3798  0133E6  6E3A               	movwf	(btemp+5)^0,c
  3799  0133E8  6A3B               	clrf	(btemp+6)^0,c
  3800  0133EA  6A3C               	clrf	(btemp+7)^0,c
  3801  0133EC  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3802  0133F2  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3803  0133F8  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3804  0133FE  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3805  013404  0E00               	movlw	0
  3806  013406  6EE6               	movwf	postinc1,c
  3807  013408  EC81  F0B0         	call	___xxtofl	;wreg free
  3808  01340C  0060  F0D7  FFE6   	movff	btemp,postinc1
  3809  013412  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3810  013418  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3811  01341E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3812  013424  ECF8  F090         	call	___flmul	;wreg free
  3813  013428  0060  F0D7  FFE6   	movff	btemp,postinc1
  3814  01342E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3815  013434  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3816  01343A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3817  013440  ECD0  F09B         	call	___fldiv	;wreg free
  3818  013444  0060  F0D7  FFE6   	movff	btemp,postinc1
  3819  01344A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3820  013450  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3821  013456  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3822  01345C  EC2E  F0C2         	call	___flsub	;wreg free
  3823  013460  0060  F0D7  FFE6   	movff	btemp,postinc1
  3824  013466  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3825  01346C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3826  013472  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3827  013478  ECF8  F090         	call	___flmul	;wreg free
  3828  01347C  0060  F0D7  FFE6   	movff	btemp,postinc1
  3829  013482  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3830  013488  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3831  01348E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3832  013494  ECD0  F09B         	call	___fldiv	;wreg free
  3833  013498  D180               	goto	l1654
  3834  01349A                     l8700:
  3835                           
  3836                           ;daq.c: 94:    if (0b0000100000000000 >> chan & 0x1) {
  3837                           ;stkvar	_chan @ sp[(0)+-1]
  3838  01349A  0EFF               	movlw	-1
  3839  01349C  006F FF8C  F040    	movff	plusw1,btemp+11
  3840  0134A2  0E00               	movlw	0
  3841  0134A4  6E3D               	movwf	(btemp+8)^0,c
  3842  0134A6  0E08               	movlw	8
  3843  0134A8  6E3E               	movwf	(btemp+9)^0,c
  3844  0134AA  2A40               	incf	(btemp+11)^0,f,c
  3845  0134AC  D003               	goto	u8554
  3846  0134AE                     u8555:
  3847  0134AE  343E               	rlcf	(btemp+9)^0,w,c
  3848  0134B0  323E               	rrcf	(btemp+9)^0,f,c
  3849  0134B2  323D               	rrcf	(btemp+8)^0,f,c
  3850  0134B4                     u8554:
  3851  0134B4  2E40               	decfsz	(btemp+11)^0,f,c
  3852  0134B6  D7FB               	goto	u8555
  3853  0134B8  A03D               	btfss	(btemp+8)^0,0,c
  3854  0134BA  D008               	goto	l8708
  3855                           
  3856                           ;daq.c: 95:     return 25.0;
  3857  0134BC  0E00               	movlw	0
  3858  0134BE  6E35               	movwf	btemp^0,c
  3859  0134C0  0E00               	movlw	0
  3860  0134C2  6E36               	movwf	(btemp+1)^0,c
  3861  0134C4  0EC8               	movlw	200
  3862  0134C6  6E37               	movwf	(btemp+2)^0,c
  3863  0134C8  0E41               	movlw	65
  3864  0134CA  D155               	goto	L2
  3865  0134CC                     l8708:
  3866                           
  3867                           ;daq.c: 97:     return((float) get_raw_result(chan) * 8.250825/2.0) / 1000.0;
  3868  0134CC  0E00               	movlw	0
  3869  0134CE  6EE6               	movwf	postinc1,c
  3870  0134D0  0E00               	movlw	0
  3871  0134D2  6EE6               	movwf	postinc1,c
  3872  0134D4  0E7A               	movlw	122
  3873  0134D6  6EE6               	movwf	postinc1,c
  3874  0134D8  0E44               	movlw	68
  3875  0134DA  6EE6               	movwf	postinc1,c
  3876  0134DC  0E00               	movlw	0
  3877  0134DE  6EE6               	movwf	postinc1,c
  3878  0134E0  0E00               	movlw	0
  3879  0134E2  6EE6               	movwf	postinc1,c
  3880  0134E4  0E00               	movlw	0
  3881  0134E6  6EE6               	movwf	postinc1,c
  3882  0134E8  0E40               	movlw	64
  3883  0134EA  6EE6               	movwf	postinc1,c
  3884  0134EC  0E61               	movlw	97
  3885  0134EE  6EE6               	movwf	postinc1,c
  3886  0134F0  0E03               	movlw	3
  3887  0134F2  6EE6               	movwf	postinc1,c
  3888  0134F4  0E04               	movlw	4
  3889  0134F6  6EE6               	movwf	postinc1,c
  3890  0134F8  0E41               	movlw	65
  3891  0134FA  6EE6               	movwf	postinc1,c
  3892                           
  3893                           ;stkvar	_chan @ sp[(-12)+-1]
  3894  0134FC  0EF3               	movlw	-13
  3895  0134FE  50E3               	movf	plusw1,w,c
  3896  013500  6EE6               	movwf	postinc1,c
  3897  013502  EC8F  F0C6         	call	_get_raw_result	;wreg free
  3898  013506  0060  F0D4  F03F   	movff	btemp,btemp+10
  3899  01350C  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3900  013512  503F               	movf	(btemp+10)^0,w,c
  3901  013514  6E39               	movwf	(btemp+4)^0,c
  3902  013516  5040               	movf	(btemp+11)^0,w,c
  3903  013518  6E3A               	movwf	(btemp+5)^0,c
  3904  01351A  6A3B               	clrf	(btemp+6)^0,c
  3905  01351C  6A3C               	clrf	(btemp+7)^0,c
  3906  01351E  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3907  013524  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3908  01352A  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3909  013530  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3910  013536  0E00               	movlw	0
  3911  013538  6EE6               	movwf	postinc1,c
  3912  01353A  EC81  F0B0         	call	___xxtofl	;wreg free
  3913  01353E  0060  F0D7  FFE6   	movff	btemp,postinc1
  3914  013544  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3915  01354A  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3916  013550  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3917  013556  ECF8  F090         	call	___flmul	;wreg free
  3918  01355A  0060  F0D7  FFE6   	movff	btemp,postinc1
  3919  013560  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3920  013566  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3921  01356C  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3922  013572  ECD0  F09B         	call	___fldiv	;wreg free
  3923  013576  0060  F0D7  FFE6   	movff	btemp,postinc1
  3924  01357C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3925  013582  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3926  013588  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3927  01358E  ECD0  F09B         	call	___fldiv	;wreg free
  3928  013592  D103               	goto	l1654
  3929  013594                     l8712:
  3930                           
  3931                           ;daq.c: 102:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  3932                           ;stkvar	_chan @ sp[(0)+-1]
  3933  013594  0EFF               	movlw	-1
  3934  013596  006F FF8C  F040    	movff	plusw1,btemp+11
  3935  01359C  0E03               	movlw	3
  3936  01359E  6E3D               	movwf	(btemp+8)^0,c
  3937  0135A0  0E00               	movlw	0
  3938  0135A2  6E3E               	movwf	(btemp+9)^0,c
  3939  0135A4  2A40               	incf	(btemp+11)^0,f,c
  3940  0135A6  D003               	goto	u8574
  3941  0135A8                     u8575:
  3942  0135A8  343E               	rlcf	(btemp+9)^0,w,c
  3943  0135AA  323E               	rrcf	(btemp+9)^0,f,c
  3944  0135AC  323D               	rrcf	(btemp+8)^0,f,c
  3945  0135AE                     u8574:
  3946  0135AE  2E40               	decfsz	(btemp+11)^0,f,c
  3947  0135B0  D7FB               	goto	u8575
  3948  0135B2  B03D               	btfsc	(btemp+8)^0,0,c
  3949  0135B4  D011               	goto	u8600
  3950                           
  3951                           ;stkvar	_chan @ sp[(0)+-1]
  3952  0135B6  0EFF               	movlw	-1
  3953  0135B8  006F FF8C  F040    	movff	plusw1,btemp+11
  3954  0135BE  0E00               	movlw	0
  3955  0135C0  6E3D               	movwf	(btemp+8)^0,c
  3956  0135C2  0E08               	movlw	8
  3957  0135C4  6E3E               	movwf	(btemp+9)^0,c
  3958  0135C6  2A40               	incf	(btemp+11)^0,f,c
  3959  0135C8  D003               	goto	u8594
  3960  0135CA                     u8595:
  3961  0135CA  343E               	rlcf	(btemp+9)^0,w,c
  3962  0135CC  323E               	rrcf	(btemp+9)^0,f,c
  3963  0135CE  323D               	rrcf	(btemp+8)^0,f,c
  3964  0135D0                     u8594:
  3965  0135D0  2E40               	decfsz	(btemp+11)^0,f,c
  3966  0135D2  D7FB               	goto	u8595
  3967  0135D4  A03D               	btfss	(btemp+8)^0,0,c
  3968  0135D6  D064               	goto	l8720
  3969  0135D8                     u8600:
  3970                           
  3971                           ;daq.c: 103:    return((float) get_raw_result(chan) * 1.25/2.0) / 1000.0;
  3972  0135D8  0E00               	movlw	0
  3973  0135DA  6EE6               	movwf	postinc1,c
  3974  0135DC  0E00               	movlw	0
  3975  0135DE  6EE6               	movwf	postinc1,c
  3976  0135E0  0E7A               	movlw	122
  3977  0135E2  6EE6               	movwf	postinc1,c
  3978  0135E4  0E44               	movlw	68
  3979  0135E6  6EE6               	movwf	postinc1,c
  3980  0135E8  0E00               	movlw	0
  3981  0135EA  6EE6               	movwf	postinc1,c
  3982  0135EC  0E00               	movlw	0
  3983  0135EE  6EE6               	movwf	postinc1,c
  3984  0135F0  0E00               	movlw	0
  3985  0135F2  6EE6               	movwf	postinc1,c
  3986  0135F4  0E40               	movlw	64
  3987  0135F6  6EE6               	movwf	postinc1,c
  3988  0135F8  0E00               	movlw	0
  3989  0135FA  6EE6               	movwf	postinc1,c
  3990  0135FC  0E00               	movlw	0
  3991  0135FE  6EE6               	movwf	postinc1,c
  3992  013600  0EA0               	movlw	160
  3993  013602  6EE6               	movwf	postinc1,c
  3994  013604  0E3F               	movlw	63
  3995  013606  6EE6               	movwf	postinc1,c
  3996                           
  3997                           ;stkvar	_chan @ sp[(-12)+-1]
  3998  013608  0EF3               	movlw	-13
  3999  01360A  50E3               	movf	plusw1,w,c
  4000  01360C  6EE6               	movwf	postinc1,c
  4001  01360E  EC8F  F0C6         	call	_get_raw_result	;wreg free
  4002  013612  0060  F0D4  F03F   	movff	btemp,btemp+10
  4003  013618  0060  F0D8  F040   	movff	btemp+1,btemp+11
  4004  01361E  503F               	movf	(btemp+10)^0,w,c
  4005  013620  6E39               	movwf	(btemp+4)^0,c
  4006  013622  5040               	movf	(btemp+11)^0,w,c
  4007  013624  6E3A               	movwf	(btemp+5)^0,c
  4008  013626  6A3B               	clrf	(btemp+6)^0,c
  4009  013628  6A3C               	clrf	(btemp+7)^0,c
  4010  01362A  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  4011  013630  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  4012  013636  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  4013  01363C  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  4014  013642  0E00               	movlw	0
  4015  013644  6EE6               	movwf	postinc1,c
  4016  013646  EC81  F0B0         	call	___xxtofl	;wreg free
  4017  01364A  0060  F0D7  FFE6   	movff	btemp,postinc1
  4018  013650  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4019  013656  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  4020  01365C  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  4021  013662  ECF8  F090         	call	___flmul	;wreg free
  4022  013666  0060  F0D7  FFE6   	movff	btemp,postinc1
  4023  01366C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4024  013672  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  4025  013678  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  4026  01367E  ECD0  F09B         	call	___fldiv	;wreg free
  4027  013682  0060  F0D7  FFE6   	movff	btemp,postinc1
  4028  013688  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4029  01368E  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  4030  013694  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  4031  01369A  ECD0  F09B         	call	___fldiv	;wreg free
  4032  01369E  D07D               	goto	l1654
  4033  0136A0                     l8720:
  4034                           
  4035                           ;daq.c: 105:   return((float) get_raw_result(chan) * 8.250825/2.0) / 1000.0;
  4036  0136A0  0E00               	movlw	0
  4037  0136A2  6EE6               	movwf	postinc1,c
  4038  0136A4  0E00               	movlw	0
  4039  0136A6  6EE6               	movwf	postinc1,c
  4040  0136A8  0E7A               	movlw	122
  4041  0136AA  6EE6               	movwf	postinc1,c
  4042  0136AC  0E44               	movlw	68
  4043  0136AE  6EE6               	movwf	postinc1,c
  4044  0136B0  0E00               	movlw	0
  4045  0136B2  6EE6               	movwf	postinc1,c
  4046  0136B4  0E00               	movlw	0
  4047  0136B6  6EE6               	movwf	postinc1,c
  4048  0136B8  0E00               	movlw	0
  4049  0136BA  6EE6               	movwf	postinc1,c
  4050  0136BC  0E40               	movlw	64
  4051  0136BE  6EE6               	movwf	postinc1,c
  4052  0136C0  0E61               	movlw	97
  4053  0136C2  6EE6               	movwf	postinc1,c
  4054  0136C4  0E03               	movlw	3
  4055  0136C6  6EE6               	movwf	postinc1,c
  4056  0136C8  0E04               	movlw	4
  4057  0136CA  6EE6               	movwf	postinc1,c
  4058  0136CC  0E41               	movlw	65
  4059  0136CE  6EE6               	movwf	postinc1,c
  4060                           
  4061                           ;stkvar	_chan @ sp[(-12)+-1]
  4062  0136D0  0EF3               	movlw	-13
  4063  0136D2  50E3               	movf	plusw1,w,c
  4064  0136D4  6EE6               	movwf	postinc1,c
  4065  0136D6  EC8F  F0C6         	call	_get_raw_result	;wreg free
  4066  0136DA  0060  F0D4  F03F   	movff	btemp,btemp+10
  4067  0136E0  0060  F0D8  F040   	movff	btemp+1,btemp+11
  4068  0136E6  503F               	movf	(btemp+10)^0,w,c
  4069  0136E8  6E39               	movwf	(btemp+4)^0,c
  4070  0136EA  5040               	movf	(btemp+11)^0,w,c
  4071  0136EC  6E3A               	movwf	(btemp+5)^0,c
  4072  0136EE  6A3B               	clrf	(btemp+6)^0,c
  4073  0136F0  6A3C               	clrf	(btemp+7)^0,c
  4074  0136F2  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  4075  0136F8  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  4076  0136FE  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  4077  013704  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  4078  01370A  0E00               	movlw	0
  4079  01370C  6EE6               	movwf	postinc1,c
  4080  01370E  EC81  F0B0         	call	___xxtofl	;wreg free
  4081  013712  0060  F0D7  FFE6   	movff	btemp,postinc1
  4082  013718  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4083  01371E  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  4084  013724  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  4085  01372A  ECF8  F090         	call	___flmul	;wreg free
  4086  01372E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4087  013734  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4088  01373A  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  4089  013740  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  4090  013746  ECD0  F09B         	call	___fldiv	;wreg free
  4091  01374A  0060  F0D7  FFE6   	movff	btemp,postinc1
  4092  013750  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4093  013756  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  4094  01375C  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  4095  013762  ECD0  F09B         	call	___fldiv	;wreg free
  4096  013766  D019               	goto	l1654
  4097  013768                     l8726:
  4098                           
  4099                           ;daq.c: 108:   return 0.0;
  4100  013768  0E00               	movlw	0
  4101  01376A  6E35               	movwf	btemp^0,c
  4102  01376C  0E00               	movlw	0
  4103  01376E  6E36               	movwf	(btemp+1)^0,c
  4104  013770  0E00               	movlw	0
  4105  013772  6E37               	movwf	(btemp+2)^0,c
  4106  013774  0E00               	movlw	0
  4107  013776                     L2:
  4108  013776  6E38               	movwf	(btemp+3)^0,c
  4109  013778  D010               	goto	l1654
  4110  01377A                     l8734:
  4111                           
  4112                           ;stkvar	_to_what @ sp[(0)+-2]
  4113  01377A  0EFE               	movlw	-2
  4114  01377C  50E3               	movf	plusw1,w,c
  4115  01377E  6E3F               	movwf	(btemp+10)^0,c
  4116  013780  6A40               	clrf	(btemp+11)^0,c
  4117                           
  4118                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4119                           ; Switch size 1, requested type "simple"
  4120                           ; Number of cases is 1, Range of values is 0 to 0
  4121                           ; switch strategies available:
  4122                           ; Name         Instructions Cycles
  4123                           ; simple_byte            4     3 (average)
  4124                           ;	Chosen strategy is simple_byte
  4125  013782  5040               	movf	(btemp+11)^0,w,c
  4126  013784  0A00               	xorlw	0	; case 0
  4127  013786  A4D8               	btfss	status,2,c
  4128  013788  D7EF               	goto	l8726
  4129                           
  4130                           ; Switch size 1, requested type "simple"
  4131                           ; Number of cases is 2, Range of values is 0 to 1
  4132                           ; switch strategies available:
  4133                           ; Name         Instructions Cycles
  4134                           ; simple_byte            7     4 (average)
  4135                           ;	Chosen strategy is simple_byte
  4136  01378A  503F               	movf	(btemp+10)^0,w,c
  4137  01378C  0A00               	xorlw	0	; case 0
  4138  01378E  B4D8               	btfsc	status,2,c
  4139  013790  D53A               	goto	l8686
  4140  013792  0A01               	xorlw	1	; case 1
  4141  013794  B4D8               	btfsc	status,2,c
  4142  013796  D6FE               	goto	l8712
  4143  013798  D7E7               	goto	l8726
  4144  01379A                     l1654:
  4145                           
  4146                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4147  01379A  52E5               	movf	postdec1,f,c
  4148  01379C  52E5               	movf	postdec1,f,c
  4149  01379E  0012               	return		;funcret
  4150  0137A0                     __end_of_conv_raw_result:
  4151                           	opt callstack 0
  4152                           
  4153 ;; *************** function _nanf *****************
  4154 ;; Defined at:
  4155 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  s               2  [STACK] PTR const unsigned char 
  4158 ;;		 -> STR_33(1), 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  u               4  [STACK] struct .
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  4  [STACK] float 
  4163 ;; Registers used:
  4164 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/4
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4174 ;;Total ram usage:        0 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    6
  4177 ;; This function calls:
  4178 ;;		Nothing
  4179 ;; This function is called by:
  4180 ;;		_conv_raw_result
  4181 ;; This function uses a reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text14
  4185  01813E                     __ptext14:
  4186                           	opt callstack 0
  4187  01813E                     _nanf:
  4188                           	opt callstack 0
  4189                           
  4190                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4191  01813E  52E6               	movf	postinc1,f,c
  4192  018140  52E6               	movf	postinc1,f,c
  4193  018142  52E6               	movf	postinc1,f,c
  4194  018144  52E6               	movf	postinc1,f,c
  4195                           
  4196                           ;incstack = 0
  4197  018146  0EFF               	movlw	255
  4198  018148  6E3D               	movwf	(btemp+8)^0,c
  4199  01814A  0EFF               	movlw	255
  4200  01814C  6E3E               	movwf	(btemp+9)^0,c
  4201  01814E  0EFF               	movlw	255
  4202  018150  6E3F               	movwf	(btemp+10)^0,c
  4203  018152  0E7F               	movlw	127
  4204  018154  6E40               	movwf	(btemp+11)^0,c
  4205                           
  4206                           ;stkvar	_u @ sp[(-4)+0]
  4207  018156  0EFC               	movlw	-4
  4208  018158  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4209  01815E  0EFD               	movlw	-3
  4210  018160  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4211  018166  0EFE               	movlw	-2
  4212  018168  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4213  01816E  0EFF               	movlw	-1
  4214  018170  0060  F103  FFE3   	movff	btemp+11,plusw1
  4215                           
  4216                           ;stkvar	_u @ sp[(-4)+0]
  4217  018176  0EFC               	movlw	-4
  4218  018178  006F FF8C  F035    	movff	plusw1,btemp
  4219  01817E  0EFD               	movlw	-3
  4220  018180  006F FF8C  F036    	movff	plusw1,btemp+1
  4221  018186  0EFE               	movlw	-2
  4222  018188  006F FF8C  F037    	movff	plusw1,btemp+2
  4223  01818E  0EFF               	movlw	-1
  4224  018190  006F FF8C  F038    	movff	plusw1,btemp+3
  4225                           
  4226                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4227  018196  0EFA               	movlw	250
  4228  018198  26E1               	addwf	fsr1l,f,c
  4229  01819A  0EFF               	movlw	255
  4230  01819C  22E2               	addwfc	fsr1h,f,c
  4231  01819E  0012               	return		;funcret
  4232  0181A0                     __end_of_nanf:
  4233                           	opt callstack 0
  4234                           
  4235 ;; *************** function _get_raw_result *****************
  4236 ;; Defined at:
  4237 ;;		line 72 in file "daq.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  index           1  [STACK] enum E16136
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  2  [STACK] unsigned short 
  4244 ;; Registers used:
  4245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/4
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4255 ;;Total ram usage:        0 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    6
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_main
  4262 ;;		_conv_raw_result
  4263 ;; This function uses a reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text15
  4267  018D1E                     __ptext15:
  4268                           	opt callstack 0
  4269  018D1E                     _get_raw_result:
  4270                           	opt callstack 24
  4271                           
  4272                           ;daq.c: 72: adc_result_t get_raw_result(adcc_channel_t index);daq.c: 73: {;daq.c: 74:  r
      +                          eturn R.raw_adc[index];
  4273                           ;stkvar	_index @ sp[(0)+-1]
  4274                           
  4275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4276                           ;incstack = 0
  4277  018D1E  0EFF               	movlw	-1
  4278  018D20  50E3               	movf	plusw1,w,c
  4279  018D22  0D02               	mullw	2
  4280  018D24  50F3               	movf	243,w,c
  4281  018D26  0FA3               	addlw	low _R
  4282  018D28  6ED9               	movwf	fsr2l,c
  4283  018D2A  6ADA               	clrf	fsr2h,c
  4284  018D2C  006F FF78  F035    	movff	postinc2,btemp
  4285  018D32  006F FF74  F036    	movff	postdec2,btemp+1
  4286                           
  4287                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4288  018D38  52E5               	movf	postdec1,f,c
  4289  018D3A  0012               	return		;funcret
  4290  018D3C                     __end_of_get_raw_result:
  4291                           	opt callstack 0
  4292                           
  4293 ;; *************** function ___xxtofl *****************
  4294 ;; Defined at:
  4295 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  sign            1  [STACK] unsigned char 
  4298 ;;  val             4  [STACK] long 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;  arg             4  [STACK] unsigned long 
  4301 ;;  exp             1  [STACK] unsigned char 
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  4  [STACK] unsigned char 
  4304 ;; Registers used:
  4305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/4
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4315 ;;Total ram usage:        0 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:    6
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_conv_raw_result
  4322 ;; This function uses a reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text16
  4326  016102                     __ptext16:
  4327                           	opt callstack 0
  4328  016102                     ___xxtofl:
  4329                           	opt callstack 0
  4330                           
  4331                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4332  016102  0E05               	movlw	5
  4333  016104  26E1               	addwf	fsr1l,f,c
  4334  016106  0E00               	movlw	0
  4335  016108  22E2               	addwfc	fsr1h,f,c
  4336                           
  4337                           ;stkvar	_sign @ sp[(-5)+-1]
  4338                           
  4339                           ;incstack = 0
  4340  01610A  0EFA               	movlw	-6
  4341  01610C  50E3               	movf	plusw1,w,c
  4342  01610E  B4D8               	btfsc	status,2,c
  4343  016110  D01D               	goto	l8158
  4344                           
  4345                           ;stkvar	_val @ sp[(-5)+-5]
  4346  016112  0EF9               	movlw	-7
  4347  016114  AEE3               	btfss	plusw1,7,c
  4348  016116  D01A               	goto	l8158
  4349                           
  4350                           ;stkvar	_val @ sp[(-5)+-5]
  4351  016118  0EF6               	movlw	-10
  4352  01611A  006F FF8C  F03D    	movff	plusw1,btemp+8
  4353  016120  0EF7               	movlw	-9
  4354  016122  006F FF8C  F03E    	movff	plusw1,btemp+9
  4355  016128  0EF8               	movlw	-8
  4356  01612A  006F FF8C  F03F    	movff	plusw1,btemp+10
  4357  016130  0EF9               	movlw	-7
  4358  016132  006F FF8C  F040    	movff	plusw1,btemp+11
  4359  016138  1E3D               	comf	(btemp+8)^0,f,c
  4360  01613A  1E3E               	comf	(btemp+9)^0,f,c
  4361  01613C  1E3F               	comf	(btemp+10)^0,f,c
  4362  01613E  1E40               	comf	(btemp+11)^0,f,c
  4363  016140  2A3D               	incf	(btemp+8)^0,f,c
  4364  016142  0E00               	movlw	0
  4365  016144  223E               	addwfc	(btemp+9)^0,f,c
  4366  016146  223F               	addwfc	(btemp+10)^0,f,c
  4367  016148  2240               	addwfc	(btemp+11)^0,f,c
  4368  01614A  D010               	goto	L3
  4369  01614C                     l8158:
  4370                           
  4371                           ;stkvar	_val @ sp[(-5)+-5]
  4372  01614C  0EF6               	movlw	-10
  4373  01614E  006F FF8C  F03D    	movff	plusw1,btemp+8
  4374  016154  0EF7               	movlw	-9
  4375  016156  006F FF8C  F03E    	movff	plusw1,btemp+9
  4376  01615C  0EF8               	movlw	-8
  4377  01615E  006F FF8C  F03F    	movff	plusw1,btemp+10
  4378  016164  0EF9               	movlw	-7
  4379  016166  006F FF8C  F040    	movff	plusw1,btemp+11
  4380  01616C                     L3:
  4381                           
  4382                           ;stkvar	_arg @ sp[(-5)+0]
  4383  01616C  0EFB               	movlw	-5
  4384  01616E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4385  016174  0EFC               	movlw	-4
  4386  016176  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4387  01617C  0EFD               	movlw	-3
  4388  01617E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4389  016184  0EFE               	movlw	-2
  4390  016186  0060  F103  FFE3   	movff	btemp+11,plusw1
  4391                           
  4392                           ;stkvar	_val @ sp[(-5)+-5]
  4393  01618C  0EF6               	movlw	-10
  4394  01618E  50E3               	movf	plusw1,w,c
  4395  016190  E113               	bnz	l8166
  4396  016192  0EF7               	movlw	-9
  4397  016194  50E3               	movf	plusw1,w,c
  4398  016196  E110               	bnz	l8166
  4399  016198  0EF8               	movlw	-8
  4400  01619A  50E3               	movf	plusw1,w,c
  4401  01619C  E10D               	bnz	l8166
  4402  01619E  0EF9               	movlw	-7
  4403  0161A0  50E3               	movf	plusw1,w,c
  4404  0161A2  A4D8               	btfss	status,2,c
  4405  0161A4  D009               	goto	l8166
  4406  0161A6  0E00               	movlw	0
  4407  0161A8  6E35               	movwf	btemp^0,c
  4408  0161AA  0E00               	movlw	0
  4409  0161AC  6E36               	movwf	(btemp+1)^0,c
  4410  0161AE  0E00               	movlw	0
  4411  0161B0  6E37               	movwf	(btemp+2)^0,c
  4412  0161B2  0E00               	movlw	0
  4413  0161B4  6E38               	movwf	(btemp+3)^0,c
  4414  0161B6  D0A2               	goto	l2669
  4415  0161B8                     l8166:
  4416  0161B8  0E96               	movlw	150
  4417  0161BA  6E40               	movwf	(btemp+11)^0,c
  4418                           
  4419                           ;stkvar	_exp @ sp[(-5)+4]
  4420  0161BC  0EFF               	movlw	-1
  4421  0161BE  0060  F103  FFE3   	movff	btemp+11,plusw1
  4422  0161C4  D00B               	goto	l8170
  4423  0161C6                     l8168:
  4424                           
  4425                           ;stkvar	_exp @ sp[(-5)+4]
  4426  0161C6  0EFF               	movlw	-1
  4427  0161C8  2AE3               	incf	plusw1,f,c
  4428                           
  4429                           ;stkvar	_arg @ sp[(-5)+0]
  4430  0161CA  90D8               	bcf	status,0,c
  4431  0161CC  0EFE               	movlw	-2
  4432  0161CE  32E3               	rrcf	plusw1,f,c
  4433  0161D0  0EFD               	movlw	-3
  4434  0161D2  32E3               	rrcf	plusw1,f,c
  4435  0161D4  0EFC               	movlw	-4
  4436  0161D6  32E3               	rrcf	plusw1,f,c
  4437  0161D8  0EFB               	movlw	-5
  4438  0161DA  32E3               	rrcf	plusw1,f,c
  4439  0161DC                     l8170:
  4440                           
  4441                           ;stkvar	_arg @ sp[(-5)+0]
  4442  0161DC  50E1               	movf	fsr1l,w,c
  4443  0161DE  0FFB               	addlw	-5
  4444  0161E0  6ED9               	movwf	fsr2l,c
  4445  0161E2  50E2               	movf	fsr1h,w,c
  4446  0161E4  6EDA               	movwf	fsr2h,c
  4447  0161E6  0EFF               	movlw	255
  4448  0161E8  22DA               	addwfc	fsr2h,f,c
  4449  0161EA  52DE               	movf	postinc2,f,c
  4450  0161EC  52DE               	movf	postinc2,f,c
  4451  0161EE  52DE               	movf	postinc2,f,c
  4452  0161F0  0EFE               	movlw	254
  4453  0161F2  14DD               	andwf	postdec2,w,c
  4454  0161F4  B4D8               	btfsc	status,2,c
  4455  0161F6  D018               	goto	l8178
  4456  0161F8  D7E6               	goto	l8168
  4457  0161FA                     l8172:
  4458                           
  4459                           ;stkvar	_exp @ sp[(-5)+4]
  4460  0161FA  0EFF               	movlw	-1
  4461  0161FC  2AE3               	incf	plusw1,f,c
  4462                           
  4463                           ;stkvar	_arg @ sp[(-5)+0]
  4464  0161FE  50E1               	movf	fsr1l,w,c
  4465  016200  0FFB               	addlw	-5
  4466  016202  6ED9               	movwf	fsr2l,c
  4467  016204  50E2               	movf	fsr1h,w,c
  4468  016206  6EDA               	movwf	fsr2h,c
  4469  016208  0EFF               	movlw	255
  4470  01620A  22DA               	addwfc	fsr2h,f,c
  4471  01620C  2ADE               	incf	postinc2,f,c
  4472  01620E  0E00               	movlw	0
  4473  016210  22DE               	addwfc	postinc2,f,c
  4474  016212  22DE               	addwfc	postinc2,f,c
  4475  016214  22DE               	addwfc	postinc2,f,c
  4476                           
  4477                           ;stkvar	_arg @ sp[(-5)+0]
  4478  016216  90D8               	bcf	status,0,c
  4479  016218  0EFE               	movlw	-2
  4480  01621A  32E3               	rrcf	plusw1,f,c
  4481  01621C  0EFD               	movlw	-3
  4482  01621E  32E3               	rrcf	plusw1,f,c
  4483  016220  0EFC               	movlw	-4
  4484  016222  32E3               	rrcf	plusw1,f,c
  4485  016224  0EFB               	movlw	-5
  4486  016226  32E3               	rrcf	plusw1,f,c
  4487  016228                     l8178:
  4488                           
  4489                           ;stkvar	_arg @ sp[(-5)+0]
  4490  016228  50E1               	movf	fsr1l,w,c
  4491  01622A  0FFB               	addlw	-5
  4492  01622C  6ED9               	movwf	fsr2l,c
  4493  01622E  50E2               	movf	fsr1h,w,c
  4494  016230  6EDA               	movwf	fsr2h,c
  4495  016232  0EFF               	movlw	255
  4496  016234  22DA               	addwfc	fsr2h,f,c
  4497  016236  52DE               	movf	postinc2,f,c
  4498  016238  52DE               	movf	postinc2,f,c
  4499  01623A  52DE               	movf	postinc2,f,c
  4500  01623C  0EFF               	movlw	255
  4501  01623E  14DD               	andwf	postdec2,w,c
  4502  016240  B4D8               	btfsc	status,2,c
  4503  016242  D00C               	goto	l8182
  4504  016244  D7DA               	goto	l8172
  4505  016246                     l8180:
  4506                           
  4507                           ;stkvar	_exp @ sp[(-5)+4]
  4508  016246  0EFF               	movlw	-1
  4509  016248  06E3               	decf	plusw1,f,c
  4510                           
  4511                           ;stkvar	_arg @ sp[(-5)+0]
  4512  01624A  90D8               	bcf	status,0,c
  4513  01624C  0EFB               	movlw	-5
  4514  01624E  36E3               	rlcf	plusw1,f,c
  4515  016250  0EFC               	movlw	-4
  4516  016252  36E3               	rlcf	plusw1,f,c
  4517  016254  0EFD               	movlw	-3
  4518  016256  36E3               	rlcf	plusw1,f,c
  4519  016258  0EFE               	movlw	-2
  4520  01625A  36E3               	rlcf	plusw1,f,c
  4521  01625C                     l8182:
  4522                           
  4523                           ;stkvar	_arg @ sp[(-5)+0]
  4524  01625C  0EFD               	movlw	-3
  4525  01625E  BEE3               	btfsc	plusw1,7,c
  4526  016260  D007               	goto	u8320
  4527                           
  4528                           ;stkvar	_exp @ sp[(-5)+4]
  4529  016262  0EFF               	movlw	-1
  4530  016264  006F FF8C  F035    	movff	plusw1,btemp
  4531  01626A  0E02               	movlw	2
  4532  01626C  6035               	cpfslt	btemp^0,c
  4533  01626E  D7EB               	goto	l8180
  4534  016270                     u8320:
  4535                           
  4536                           ;stkvar	_exp @ sp[(-5)+4]
  4537  016270  0EFF               	movlw	-1
  4538  016272  B0E3               	btfsc	plusw1,0,c
  4539  016274  D002               	goto	l8190
  4540                           
  4541                           ;stkvar	_arg @ sp[(-5)+0]
  4542  016276  0EFD               	movlw	-3
  4543  016278  9EE3               	bcf	plusw1,7,c
  4544  01627A                     l8190:
  4545                           
  4546                           ;stkvar	_exp @ sp[(-5)+4]
  4547  01627A  50E1               	movf	fsr1l,w,c
  4548  01627C  0FFF               	addlw	-1
  4549  01627E  6ED9               	movwf	fsr2l,c
  4550  016280  50E2               	movf	fsr1h,w,c
  4551  016282  6EDA               	movwf	fsr2h,c
  4552  016284  0EFF               	movlw	255
  4553  016286  22DA               	addwfc	fsr2h,f,c
  4554  016288  90D8               	bcf	status,0,c
  4555  01628A  32DF               	rrcf	indf2,f,c
  4556                           
  4557                           ;stkvar	_exp @ sp[(-5)+4]
  4558  01628C  0EFF               	movlw	-1
  4559  01628E  006F FF8C  F040    	movff	plusw1,btemp+11
  4560  016294  0060  F100  F039   	movff	btemp+11,btemp+4
  4561  01629A  6A3A               	clrf	(btemp+5)^0,c
  4562  01629C  6A3B               	clrf	(btemp+6)^0,c
  4563  01629E  6A3C               	clrf	(btemp+7)^0,c
  4564  0162A0  0060  F0E4  F03C   	movff	btemp+4,btemp+7
  4565  0162A6  6A3B               	clrf	(btemp+6)^0,c
  4566  0162A8  6A3A               	clrf	(btemp+5)^0,c
  4567  0162AA  6A39               	clrf	(btemp+4)^0,c
  4568                           
  4569                           ;stkvar	_arg @ sp[(-5)+0]
  4570  0162AC  50E1               	movf	fsr1l,w,c
  4571  0162AE  0FFB               	addlw	-5
  4572  0162B0  6ED9               	movwf	fsr2l,c
  4573  0162B2  50E2               	movf	fsr1h,w,c
  4574  0162B4  6EDA               	movwf	fsr2h,c
  4575  0162B6  0EFF               	movlw	255
  4576  0162B8  22DA               	addwfc	fsr2h,f,c
  4577  0162BA  5039               	movf	(btemp+4)^0,w,c
  4578  0162BC  12DE               	iorwf	postinc2,f,c
  4579  0162BE  503A               	movf	(btemp+5)^0,w,c
  4580  0162C0  12DE               	iorwf	postinc2,f,c
  4581  0162C2  503B               	movf	(btemp+6)^0,w,c
  4582  0162C4  12DE               	iorwf	postinc2,f,c
  4583  0162C6  503C               	movf	(btemp+7)^0,w,c
  4584  0162C8  12DE               	iorwf	postinc2,f,c
  4585                           
  4586                           ;stkvar	_sign @ sp[(-5)+-1]
  4587  0162CA  0EFA               	movlw	-6
  4588  0162CC  50E3               	movf	plusw1,w,c
  4589  0162CE  B4D8               	btfsc	status,2,c
  4590  0162D0  D005               	goto	l8200
  4591                           
  4592                           ;stkvar	_val @ sp[(-5)+-5]
  4593  0162D2  0EF9               	movlw	-7
  4594  0162D4  AEE3               	btfss	plusw1,7,c
  4595  0162D6  D002               	goto	l8200
  4596                           
  4597                           ;stkvar	_arg @ sp[(-5)+0]
  4598  0162D8  0EFE               	movlw	-2
  4599  0162DA  8EE3               	bsf	plusw1,7,c
  4600  0162DC                     l8200:
  4601                           
  4602                           ;stkvar	_arg @ sp[(-5)+0]
  4603  0162DC  0EFB               	movlw	-5
  4604  0162DE  006F FF8C  F035    	movff	plusw1,btemp
  4605  0162E4  0EFC               	movlw	-4
  4606  0162E6  006F FF8C  F036    	movff	plusw1,btemp+1
  4607  0162EC  0EFD               	movlw	-3
  4608  0162EE  006F FF8C  F037    	movff	plusw1,btemp+2
  4609  0162F4  0EFE               	movlw	-2
  4610  0162F6  006F FF8C  F038    	movff	plusw1,btemp+3
  4611  0162FC                     l2669:
  4612                           
  4613                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4614  0162FC  0EF6               	movlw	246
  4615  0162FE  26E1               	addwf	fsr1l,f,c
  4616  016300  0EFF               	movlw	255
  4617  016302  22E2               	addwfc	fsr1h,f,c
  4618  016304  0012               	return		;funcret
  4619  016306                     __end_of___xxtofl:
  4620                           	opt callstack 0
  4621                           
  4622 ;; *************** function _clear_adc_scan *****************
  4623 ;; Defined at:
  4624 ;;		line 64 in file "daq.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;		None
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1  [STACK] void 
  4631 ;; Registers used:
  4632 ;;		None
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/4
  4635 ;;		On exit  : 3F/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4642 ;;Total ram usage:        0 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; Hardware stack levels required when called:    6
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_main
  4649 ;; This function uses a reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text17
  4653  018F6A                     __ptext17:
  4654                           	opt callstack 0
  4655  018F6A                     _clear_adc_scan:
  4656                           	opt callstack 24
  4657                           
  4658                           ;daq.c: 66:  R.done = 0;
  4659                           
  4660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4661                           ;incstack = 0
  4662  018F6A  0100               	movlb	0	; () banked
  4663  018F6C  6BCE               	clrf	(_R+43)& (0+255),b	;volatile
  4664                           
  4665                           ; BSR set to: 0
  4666                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4667  018F6E  0012               	return		;funcret
  4668  018F70                     __end_of_clear_adc_scan:
  4669                           	opt callstack 0
  4670                           
  4671 ;; *************** function _check_help *****************
  4672 ;; Defined at:
  4673 ;;		line 40 in file "mconfig.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  flipper         1  [STACK] _Bool 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1  [STACK] void 
  4680 ;; Registers used:
  4681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4682 ;; Tracked objects:
  4683 ;;		On entry : 3F/1
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4691 ;;Total ram usage:        0 bytes
  4692 ;; Hardware stack levels used:    1
  4693 ;; Hardware stack levels required when called:   18
  4694 ;; This function calls:
  4695 ;;		_StartTimer
  4696 ;;		_TimerDone
  4697 ;;		_display_help
  4698 ;;		_display_info
  4699 ;;		_get_vterm_ptr
  4700 ;;		_help_button
  4701 ;;		_mode_lamp_bright
  4702 ;;		_mode_lamp_dim
  4703 ;;		_set_display_info
  4704 ;;		_set_temp_display_help
  4705 ;;		_set_vterm
  4706 ;;		_sprintf
  4707 ;;		_update_lcd
  4708 ;;		_vterm_dump
  4709 ;; This function is called by:
  4710 ;;		_main
  4711 ;; This function uses a reentrant model
  4712 ;;
  4713                           
  4714                           	psect	text18
  4715  015EF0                     __ptext18:
  4716                           	opt callstack 0
  4717  015EF0                     _check_help:
  4718                           	opt callstack 12
  4719                           
  4720                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
  4721                           
  4722                           ; BSR set to: 0
  4723                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4724                           ;incstack = 0
  4725  015EF0  EC80  F0C3         	call	_help_button	;wreg free
  4726  015EF4  5035               	movf	btemp^0,w,c
  4727  015EF6  B4D8               	btfsc	status,2,c
  4728  015EF8  D0D0               	goto	l10318
  4729  015EFA  ECA5  F0C7         	call	_display_info	;wreg free
  4730  015EFE  0435               	decf	btemp^0,w,c
  4731  015F00  B4D8               	btfsc	status,2,c
  4732  015F02  D0CB               	goto	l10318
  4733                           
  4734                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  4735  015F04  0EDC               	movlw	220
  4736  015F06  6EE6               	movwf	postinc1,c
  4737  015F08  0E05               	movlw	5
  4738  015F0A  6EE6               	movwf	postinc1,c
  4739  015F0C  0E0B               	movlw	11
  4740  015F0E  6EE6               	movwf	postinc1,c
  4741  015F10  EC62  F0C3         	call	_StartTimer	;wreg free
  4742                           
  4743                           ;mconfig.c: 47:   if (V.debug)
  4744  015F14  0101               	movlb	1	; () banked
  4745  015F16  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  4746                           
  4747                           ; BSR set to: 1
  4748                           ;mconfig.c: 48:    vterm_dump();
  4749  015F18  EC9F  F0B6         	call	_vterm_dump	;wreg free
  4750                           
  4751                           ;mconfig.c: 50:   set_vterm(1);
  4752  015F1C  0E01               	movlw	1
  4753  015F1E  6EE6               	movwf	postinc1,c
  4754  015F20  ECE8  F0C6         	call	_set_vterm	;wreg free
  4755                           
  4756                           ; BSR set to: 4
  4757                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  4758  015F24  ECA5  F0C7         	call	_display_info	;wreg free
  4759  015F28  5035               	movf	btemp^0,w,c
  4760  015F2A  6EE6               	movwf	postinc1,c
  4761  015F2C  EC5D  F0C7         	call	_set_temp_display_help	;wreg free
  4762                           
  4763                           ; BSR set to: 1
  4764                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  4765  015F30  0E01               	movlw	1
  4766  015F32  6EE6               	movwf	postinc1,c
  4767  015F34  EC9E  F0C6         	call	_set_display_info	;wreg free
  4768                           
  4769                           ;mconfig.c: 53:   if (flipper) {
  4770                           ;stkvar	_flipper @ sp[(0)+-1]
  4771  015F38  0EFF               	movlw	-1
  4772  015F3A  50E3               	movf	plusw1,w,c
  4773  015F3C  B4D8               	btfsc	status,2,c
  4774  015F3E  D019               	goto	l10306
  4775                           
  4776                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4777  015F40  0EB3               	movlw	low STR_15
  4778  015F42  6EE6               	movwf	postinc1,c
  4779  015F44  0EFF               	movlw	high STR_15
  4780  015F46  6EE6               	movwf	postinc1,c
  4781  015F48  0E0C               	movlw	low STR_17
  4782  015F4A  6EE6               	movwf	postinc1,c
  4783  015F4C  0EFF               	movlw	high STR_17
  4784  015F4E  6EE6               	movwf	postinc1,c
  4785  015F50  0E01               	movlw	1
  4786  015F52  6EE6               	movwf	postinc1,c
  4787  015F54  0E00               	movlw	0
  4788  015F56  6EE6               	movwf	postinc1,c
  4789  015F58  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  4790  015F5C  0060  F0D7  FFE6   	movff	btemp,postinc1
  4791  015F62  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4792  015F68  0E06               	movlw	6
  4793  015F6A  6EE6               	movwf	postinc1,c
  4794  015F6C  EC65  F0B9         	call	_sprintf	;wreg free
  4795                           
  4796                           ;mconfig.c: 55:   } else {
  4797  015F70  D018               	goto	l1554
  4798  015F72                     l10306:
  4799                           
  4800                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4801  015F72  0EC9               	movlw	low STR_16
  4802  015F74  6EE6               	movwf	postinc1,c
  4803  015F76  0EFF               	movlw	high STR_16
  4804  015F78  6EE6               	movwf	postinc1,c
  4805  015F7A  0E0C               	movlw	low STR_17
  4806  015F7C  6EE6               	movwf	postinc1,c
  4807  015F7E  0EFF               	movlw	high STR_17
  4808  015F80  6EE6               	movwf	postinc1,c
  4809  015F82  0E01               	movlw	1
  4810  015F84  6EE6               	movwf	postinc1,c
  4811  015F86  0E00               	movlw	0
  4812  015F88  6EE6               	movwf	postinc1,c
  4813  015F8A  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  4814  015F8E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4815  015F94  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4816  015F9A  0E06               	movlw	6
  4817  015F9C  6EE6               	movwf	postinc1,c
  4818  015F9E  EC65  F0B9         	call	_sprintf	;wreg free
  4819  015FA2                     l1554:
  4820                           
  4821                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4822  015FA2  0101               	movlb	1	; () banked
  4823  015FA4  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4824  015FA6  32E8               	rrcf	wreg,f,c
  4825  015FA8  32E8               	rrcf	wreg,f,c
  4826  015FAA  0B03               	andlw	3
  4827  015FAC  0D24               	mullw	36
  4828  015FAE  0E12               	movlw	18
  4829  015FB0  26F3               	addwf	243,f,c
  4830  015FB2  0E00               	movlw	0
  4831  015FB4  22F4               	addwfc	244,f,c
  4832  015FB6  0E51               	movlw	low _T
  4833  015FB8  6E3F               	movwf	(btemp+10)^0,c
  4834  015FBA  0EFE               	movlw	high _T
  4835  015FBC  6E40               	movwf	(btemp+11)^0,c
  4836  015FBE  50F3               	movf	243,w,c
  4837  015FC0  263F               	addwf	(btemp+10)^0,f,c
  4838  015FC2  50F4               	movf	244,w,c
  4839  015FC4  2240               	addwfc	(btemp+11)^0,f,c
  4840  015FC6  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4841  015FCC  0060  F103  FFE6   	movff	btemp+11,postinc1
  4842  015FD2  0EBF               	movlw	low STR_19
  4843  015FD4  6EE6               	movwf	postinc1,c
  4844  015FD6  0EFF               	movlw	high STR_19
  4845  015FD8  6EE6               	movwf	postinc1,c
  4846  015FDA  0E01               	movlw	1
  4847  015FDC  6EE6               	movwf	postinc1,c
  4848  015FDE  0E01               	movlw	1
  4849  015FE0  6EE6               	movwf	postinc1,c
  4850  015FE2  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  4851  015FE6  0060  F0D7  FFE6   	movff	btemp,postinc1
  4852  015FEC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4853  015FF2  0E06               	movlw	6
  4854  015FF4  6EE6               	movwf	postinc1,c
  4855  015FF6  EC65  F0B9         	call	_sprintf	;wreg free
  4856                           
  4857                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4858  015FFA  0101               	movlb	1	; () banked
  4859  015FFC  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4860  015FFE  32E8               	rrcf	wreg,f,c
  4861  016000  32E8               	rrcf	wreg,f,c
  4862  016002  0B03               	andlw	3
  4863  016004  0D24               	mullw	36
  4864  016006  0E51               	movlw	low _T
  4865  016008  6E3F               	movwf	(btemp+10)^0,c
  4866  01600A  0EFE               	movlw	high _T
  4867  01600C  6E40               	movwf	(btemp+11)^0,c
  4868  01600E  50F3               	movf	243,w,c
  4869  016010  263F               	addwf	(btemp+10)^0,f,c
  4870  016012  50F4               	movf	244,w,c
  4871  016014  2240               	addwfc	(btemp+11)^0,f,c
  4872  016016  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4873  01601C  0060  F103  FFE6   	movff	btemp+11,postinc1
  4874  016022  0EBF               	movlw	low STR_19
  4875  016024  6EE6               	movwf	postinc1,c
  4876  016026  0EFF               	movlw	high STR_19
  4877  016028  6EE6               	movwf	postinc1,c
  4878  01602A  0E01               	movlw	1
  4879  01602C  6EE6               	movwf	postinc1,c
  4880  01602E  0E02               	movlw	2
  4881  016030  6EE6               	movwf	postinc1,c
  4882  016032  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  4883  016036  0060  F0D7  FFE6   	movff	btemp,postinc1
  4884  01603C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4885  016042  0E06               	movlw	6
  4886  016044  6EE6               	movwf	postinc1,c
  4887  016046  EC65  F0B9         	call	_sprintf	;wreg free
  4888                           
  4889                           ;mconfig.c: 60:   V.help_id++;
  4890  01604A  EE20  F19B         	lfsr	2,_V+155	;volatile
  4891  01604E  38DF               	swapf	223,w,c
  4892  016050  6E40               	movwf	(btemp+11)^0,c
  4893  016052  3240               	rrcf	(btemp+11)^0,f,c
  4894  016054  3040               	rrcf	(btemp+11)^0,w,c
  4895  016056  0B03               	andlw	3
  4896  016058  6E40               	movwf	(btemp+11)^0,c
  4897  01605A  2A40               	incf	(btemp+11)^0,f,c
  4898  01605C  3A40               	swapf	(btemp+11)^0,f,c
  4899  01605E  3640               	rlcf	(btemp+11)^0,f,c
  4900  016060  3640               	rlcf	(btemp+11)^0,f,c
  4901  016062  50DF               	movf	223,w,c
  4902  016064  1840               	xorwf	(btemp+11)^0,w,c
  4903  016066  0B3F               	andlw	-193
  4904  016068  1840               	xorwf	(btemp+11)^0,w,c
  4905  01606A  6EDF               	movwf	223,c
  4906                           
  4907                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  4908  01606C  0EB8               	movlw	184
  4909  01606E  6EE6               	movwf	postinc1,c
  4910  016070  0E0B               	movlw	11
  4911  016072  6EE6               	movwf	postinc1,c
  4912  016074  0E09               	movlw	9
  4913  016076  6EE6               	movwf	postinc1,c
  4914  016078  EC62  F0C3         	call	_StartTimer	;wreg free
  4915                           
  4916                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  4917  01607C  0EB8               	movlw	184
  4918  01607E  6EE6               	movwf	postinc1,c
  4919  016080  0E0B               	movlw	11
  4920  016082  6EE6               	movwf	postinc1,c
  4921  016084  0E07               	movlw	7
  4922  016086  6EE6               	movwf	postinc1,c
  4923  016088  EC62  F0C3         	call	_StartTimer	;wreg free
  4924                           
  4925                           ;mconfig.c: 63:   mode_lamp_bright();
  4926  01608C  EC6C  F0C7         	call	_mode_lamp_bright	;wreg free
  4927                           
  4928                           ;mconfig.c: 64:   update_lcd(1);
  4929  016090  0E01               	movlw	1
  4930  016092  6EE6               	movwf	postinc1,c
  4931  016094  ECDE  F0B8         	call	_update_lcd	;wreg free
  4932                           
  4933                           ;mconfig.c: 65:  } else {
  4934  016098  D032               	goto	l1558
  4935  01609A                     l10318:
  4936                           
  4937                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  4938  01609A  0E09               	movlw	9
  4939  01609C  6EE6               	movwf	postinc1,c
  4940  01609E  EC29  F0C6         	call	_TimerDone	;wreg free
  4941  0160A2  5035               	movf	btemp^0,w,c
  4942  0160A4  B4D8               	btfsc	status,2,c
  4943  0160A6  D02B               	goto	l1558
  4944                           
  4945                           ;mconfig.c: 67:    set_vterm(0);
  4946  0160A8  0E00               	movlw	0
  4947  0160AA  6EE6               	movwf	postinc1,c
  4948  0160AC  ECE8  F0C6         	call	_set_vterm	;wreg free
  4949                           
  4950                           ; BSR set to: 4
  4951                           ;mconfig.c: 68:    V.help = 0;
  4952  0160B0  0101               	movlb	1	; () banked
  4953  0160B2  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  4954                           
  4955                           ; BSR set to: 1
  4956                           ;mconfig.c: 69:    set_display_info(display_help());
  4957  0160B4  ECA9  F0C7         	call	_display_help	;wreg free
  4958  0160B8  5035               	movf	btemp^0,w,c
  4959  0160BA  6EE6               	movwf	postinc1,c
  4960  0160BC  EC9E  F0C6         	call	_set_display_info	;wreg free
  4961                           
  4962                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  4963  0160C0  0060  F657  FFE6   	movff	_V+149,postinc1
  4964  0160C6  0060  F65B  FFE6   	movff	_V+150,postinc1
  4965  0160CC  EC11  F0C7         	call	_mode_lamp_dim	;wreg free
  4966                           
  4967                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  4968  0160D0  0E0B               	movlw	11
  4969  0160D2  6EE6               	movwf	postinc1,c
  4970  0160D4  EC29  F0C6         	call	_TimerDone	;wreg free
  4971  0160D8  5035               	movf	btemp^0,w,c
  4972  0160DA  B4D8               	btfsc	status,2,c
  4973  0160DC  D010               	goto	l1558
  4974                           
  4975                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  4976  0160DE  0101               	movlb	1	; () banked
  4977  0160E0  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4978  0160E2  A4D8               	btfss	status,2,c
  4979  0160E4  D002               	goto	u10730
  4980  0160E6  0E01               	movlw	1
  4981  0160E8  D001               	goto	u10740
  4982  0160EA                     u10730:
  4983  0160EA  0E00               	movlw	0
  4984  0160EC                     u10740:
  4985  0160EC  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  4986                           
  4987                           ; BSR set to: 1
  4988                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  4989  0160EE  0EDC               	movlw	220
  4990  0160F0  6EE6               	movwf	postinc1,c
  4991  0160F2  0E05               	movlw	5
  4992  0160F4  6EE6               	movwf	postinc1,c
  4993  0160F6  0E0B               	movlw	11
  4994  0160F8  6EE6               	movwf	postinc1,c
  4995  0160FA  EC62  F0C3         	call	_StartTimer	;wreg free
  4996  0160FE                     l1558:
  4997                           
  4998                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4999  0160FE  52E5               	movf	postdec1,f,c
  5000  016100  0012               	return		;funcret
  5001  016102                     __end_of_check_help:
  5002                           	opt callstack 0
  5003                           
  5004 ;; *************** function _vterm_dump *****************
  5005 ;; Defined at:
  5006 ;;		line 118 in file "mconfig.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;		None
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;		None
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1  [STACK] void 
  5013 ;; Registers used:
  5014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5015 ;; Tracked objects:
  5016 ;;		On entry : 3F/1
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5024 ;;Total ram usage:        0 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:   17
  5027 ;; This function calls:
  5028 ;;		_WaitMs
  5029 ;;		_eaDogM_WriteStringAtPos
  5030 ;;		_get_vterm_ptr
  5031 ;;		_sprintf
  5032 ;;		_wait_lcd_done
  5033 ;; This function is called by:
  5034 ;;		_check_help
  5035 ;; This function uses a reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text19
  5039  016D3E                     __ptext19:
  5040                           	opt callstack 0
  5041  016D3E                     _vterm_dump:
  5042                           	opt callstack 12
  5043                           
  5044                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5045                           
  5046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5047                           ;incstack = 0
  5048  016D3E  0E01               	movlw	1
  5049  016D40  6EE6               	movwf	postinc1,c
  5050  016D42  0E00               	movlw	0
  5051  016D44  6EE6               	movwf	postinc1,c
  5052  016D46  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  5053  016D4A  0060  F0D7  FFE6   	movff	btemp,postinc1
  5054  016D50  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5055  016D56  0E00               	movlw	0
  5056  016D58  6EE6               	movwf	postinc1,c
  5057  016D5A  0E00               	movlw	0
  5058  016D5C  6EE6               	movwf	postinc1,c
  5059  016D5E  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  5060  016D62  0060  F0D7  FFE6   	movff	btemp,postinc1
  5061  016D68  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5062  016D6E  0E88               	movlw	low STR_21
  5063  016D70  6EE6               	movwf	postinc1,c
  5064  016D72  0EFF               	movlw	high STR_21
  5065  016D74  6EE6               	movwf	postinc1,c
  5066  016D76  0E01               	movlw	low (_V+1)
  5067  016D78  6EE6               	movwf	postinc1,c
  5068  016D7A  0E01               	movlw	high (_V+1)
  5069  016D7C  6EE6               	movwf	postinc1,c
  5070  016D7E  0E08               	movlw	8
  5071  016D80  6EE6               	movwf	postinc1,c
  5072  016D82  EC65  F0B9         	call	_sprintf	;wreg free
  5073                           
  5074                           ;mconfig.c: 121:  wait_lcd_done();
  5075  016D86  ECDA  F0C6         	call	_wait_lcd_done	;wreg free
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5079  016D8A  0E01               	movlw	low (_V+1)
  5080  016D8C  6EE6               	movwf	postinc1,c
  5081  016D8E  0E01               	movlw	high (_V+1)
  5082  016D90  6EE6               	movwf	postinc1,c
  5083  016D92  0E00               	movlw	0
  5084  016D94  6EE6               	movwf	postinc1,c
  5085  016D96  0E00               	movlw	0
  5086  016D98  6EE6               	movwf	postinc1,c
  5087  016D9A  ECD3  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5088                           
  5089                           ; BSR set to: 59
  5090                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5091  016D9E  0E01               	movlw	1
  5092  016DA0  6EE6               	movwf	postinc1,c
  5093  016DA2  0E01               	movlw	1
  5094  016DA4  6EE6               	movwf	postinc1,c
  5095  016DA6  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  5096  016DAA  0060  F0D7  FFE6   	movff	btemp,postinc1
  5097  016DB0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5098  016DB6  0E00               	movlw	0
  5099  016DB8  6EE6               	movwf	postinc1,c
  5100  016DBA  0E01               	movlw	1
  5101  016DBC  6EE6               	movwf	postinc1,c
  5102  016DBE  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  5103  016DC2  0060  F0D7  FFE6   	movff	btemp,postinc1
  5104  016DC8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5105  016DCE  0E88               	movlw	low STR_21
  5106  016DD0  6EE6               	movwf	postinc1,c
  5107  016DD2  0EFF               	movlw	high STR_21
  5108  016DD4  6EE6               	movwf	postinc1,c
  5109  016DD6  0E01               	movlw	low (_V+1)
  5110  016DD8  6EE6               	movwf	postinc1,c
  5111  016DDA  0E01               	movlw	high (_V+1)
  5112  016DDC  6EE6               	movwf	postinc1,c
  5113  016DDE  0E08               	movlw	8
  5114  016DE0  6EE6               	movwf	postinc1,c
  5115  016DE2  EC65  F0B9         	call	_sprintf	;wreg free
  5116                           
  5117                           ;mconfig.c: 124:  wait_lcd_done();
  5118  016DE6  ECDA  F0C6         	call	_wait_lcd_done	;wreg free
  5119                           
  5120                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5121  016DEA  0E01               	movlw	low (_V+1)
  5122  016DEC  6EE6               	movwf	postinc1,c
  5123  016DEE  0E01               	movlw	high (_V+1)
  5124  016DF0  6EE6               	movwf	postinc1,c
  5125  016DF2  0E00               	movlw	0
  5126  016DF4  6EE6               	movwf	postinc1,c
  5127  016DF6  0E01               	movlw	1
  5128  016DF8  6EE6               	movwf	postinc1,c
  5129  016DFA  ECD3  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5130                           
  5131                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5132  016DFE  0E01               	movlw	1
  5133  016E00  6EE6               	movwf	postinc1,c
  5134  016E02  0E02               	movlw	2
  5135  016E04  6EE6               	movwf	postinc1,c
  5136  016E06  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  5137  016E0A  0060  F0D7  FFE6   	movff	btemp,postinc1
  5138  016E10  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5139  016E16  0E00               	movlw	0
  5140  016E18  6EE6               	movwf	postinc1,c
  5141  016E1A  0E02               	movlw	2
  5142  016E1C  6EE6               	movwf	postinc1,c
  5143  016E1E  EC6A  F0C4         	call	_get_vterm_ptr	;wreg free
  5144  016E22  0060  F0D7  FFE6   	movff	btemp,postinc1
  5145  016E28  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5146  016E2E  0E88               	movlw	low STR_21
  5147  016E30  6EE6               	movwf	postinc1,c
  5148  016E32  0EFF               	movlw	high STR_21
  5149  016E34  6EE6               	movwf	postinc1,c
  5150  016E36  0E01               	movlw	low (_V+1)
  5151  016E38  6EE6               	movwf	postinc1,c
  5152  016E3A  0E01               	movlw	high (_V+1)
  5153  016E3C  6EE6               	movwf	postinc1,c
  5154  016E3E  0E08               	movlw	8
  5155  016E40  6EE6               	movwf	postinc1,c
  5156  016E42  EC65  F0B9         	call	_sprintf	;wreg free
  5157                           
  5158                           ;mconfig.c: 127:  wait_lcd_done();
  5159  016E46  ECDA  F0C6         	call	_wait_lcd_done	;wreg free
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5163  016E4A  0E01               	movlw	low (_V+1)
  5164  016E4C  6EE6               	movwf	postinc1,c
  5165  016E4E  0E01               	movlw	high (_V+1)
  5166  016E50  6EE6               	movwf	postinc1,c
  5167  016E52  0E00               	movlw	0
  5168  016E54  6EE6               	movwf	postinc1,c
  5169  016E56  0E02               	movlw	2
  5170  016E58  6EE6               	movwf	postinc1,c
  5171  016E5A  ECD3  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5172                           
  5173                           ; BSR set to: 59
  5174                           ;mconfig.c: 129:  WaitMs(3000);
  5175  016E5E  0EB8               	movlw	184
  5176  016E60  6EE6               	movwf	postinc1,c
  5177  016E62  0E0B               	movlw	11
  5178  016E64  6EE6               	movwf	postinc1,c
  5179  016E66  ECB8  F0C3         	call	_WaitMs	;wreg free
  5180                           
  5181                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5182  016E6A  0012               	return		;funcret
  5183  016E6C                     __end_of_vterm_dump:
  5184                           	opt callstack 0
  5185                           
  5186 ;; *************** function _sprintf *****************
  5187 ;; Defined at:
  5188 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  s               2  [STACK] PTR unsigned char 
  5191 ;;		 -> D.lcd(216), D(218), V(187), 
  5192 ;;  fmt             2  [STACK] PTR const unsigned char 
  5193 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  5194 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  5195 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  5196 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  5197 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
  5198 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  5199 ;;		 -> STR_1(17), 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  f               6  [STACK] struct _IO_FILE
  5202 ;;  ap              2  [STACK] PTR void [1]
  5203 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5204 ;;  ret             2    0        int 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  2  [STACK] int 
  5207 ;; Registers used:
  5208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/4
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5218 ;;Total ram usage:        0 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:   14
  5221 ;; This function calls:
  5222 ;;		_vfprintf
  5223 ;; This function is called by:
  5224 ;;		_main
  5225 ;;		_check_help
  5226 ;;		_vterm_dump
  5227 ;; This function uses a reentrant model
  5228 ;;
  5229                           
  5230                           	psect	text20
  5231  0172CA                     __ptext20:
  5232                           	opt callstack 0
  5233  0172CA                     _sprintf:
  5234                           	opt callstack 0
  5235                           
  5236                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5237  0172CA  0E08               	movlw	8
  5238  0172CC  26E1               	addwf	fsr1l,f,c
  5239  0172CE  0E00               	movlw	0
  5240  0172D0  22E2               	addwfc	fsr1h,f,c
  5241                           
  5242                           ;incstack = 0
  5243  0172D2  0EFE               	movlw	254
  5244  0172D4  6E3F               	movwf	(btemp+10)^0,c
  5245  0172D6  0EFF               	movlw	255
  5246  0172D8  6E40               	movwf	(btemp+11)^0,c
  5247                           
  5248                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5249  0172DA  0EF5               	movlw	245
  5250  0172DC  24E1               	addwf	fsr1l,w,c
  5251  0172DE  6E3D               	movwf	(btemp+8)^0,c
  5252  0172E0  0EFF               	movlw	255
  5253  0172E2  20E2               	addwfc	fsr1h,w,c
  5254  0172E4  6E3E               	movwf	(btemp+9)^0,c
  5255  0172E6  503F               	movf	(btemp+10)^0,w,c
  5256  0172E8  263D               	addwf	(btemp+8)^0,f,c
  5257  0172EA  5040               	movf	(btemp+11)^0,w,c
  5258  0172EC  223E               	addwfc	(btemp+9)^0,f,c
  5259                           
  5260                           ;stkvar	_ap @ sp[(-8)+6]
  5261  0172EE  0EFF               	movlw	-1
  5262  0172F0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  5263  0172F6  0EFE               	movlw	-2
  5264  0172F8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  5265                           
  5266                           ;stkvar	_s @ sp[(-8)+-3]
  5267  0172FE  0EF5               	movlw	-11
  5268  017300  006F FF8C  F03F    	movff	plusw1,btemp+10
  5269  017306  0EF6               	movlw	-10
  5270  017308  006F FF8C  F040    	movff	plusw1,btemp+11
  5271                           
  5272                           ;stkvar	_f @ sp[(-8)+0]
  5273  01730E  0EF9               	movlw	-7
  5274  017310  0060  F103  FFE3   	movff	btemp+11,plusw1
  5275  017316  0EF8               	movlw	-8
  5276  017318  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5277                           
  5278                           ;stkvar	_f @ sp[(-8)+0]
  5279  01731E  0EFA               	movlw	250
  5280  017320  24E1               	addwf	fsr1l,w,c
  5281  017322  6ED9               	movwf	fsr2l,c
  5282  017324  0EFF               	movlw	255
  5283  017326  20E2               	addwfc	fsr1h,w,c
  5284  017328  6EDA               	movwf	fsr2h,c
  5285  01732A  0E00               	movlw	0
  5286  01732C  6EDE               	movwf	postinc2,c
  5287  01732E  0E00               	movlw	0
  5288  017330  6EDD               	movwf	postdec2,c
  5289                           
  5290                           ;stkvar	_f @ sp[(-8)+0]
  5291  017332  0EFC               	movlw	252
  5292  017334  24E1               	addwf	fsr1l,w,c
  5293  017336  6ED9               	movwf	fsr2l,c
  5294  017338  0EFF               	movlw	255
  5295  01733A  20E2               	addwfc	fsr1h,w,c
  5296  01733C  6EDA               	movwf	fsr2h,c
  5297  01733E  0E00               	movlw	0
  5298  017340  6EDE               	movwf	postinc2,c
  5299  017342  0E00               	movlw	0
  5300  017344  6EDD               	movwf	postdec2,c
  5301                           
  5302                           ;stkvar	_ap @ sp[(-8)+6]
  5303  017346  0EFE               	movlw	254
  5304  017348  24E1               	addwf	fsr1l,w,c
  5305  01734A  6E35               	movwf	btemp^0,c
  5306  01734C  0EFF               	movlw	255
  5307  01734E  20E2               	addwfc	fsr1h,w,c
  5308  017350  6E36               	movwf	(btemp+1)^0,c
  5309  017352  0060  F0D7  FFE6   	movff	btemp,postinc1
  5310  017358  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5311                           
  5312                           ;stkvar	_fmt @ sp[(-10)+-5]
  5313  01735E  0EF1               	movlw	-15
  5314  017360  006F FF8F FFE6     	movff	plusw1,postinc1
  5315  017366  006F FF8F FFE6     	movff	plusw1,postinc1
  5316                           
  5317                           ;stkvar	_f @ sp[(-12)+0]
  5318  01736C  0EF4               	movlw	244
  5319  01736E  24E1               	addwf	fsr1l,w,c
  5320  017370  6E35               	movwf	btemp^0,c
  5321  017372  0EFF               	movlw	255
  5322  017374  20E2               	addwfc	fsr1h,w,c
  5323  017376  6E36               	movwf	(btemp+1)^0,c
  5324  017378  0060  F0D7  FFE6   	movff	btemp,postinc1
  5325  01737E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5326  017384  EC41  F0BC         	call	_vfprintf	;wreg free
  5327                           
  5328                           ;stkvar	_f @ sp[(-8)+0]
  5329  017388  0EFA               	movlw	250
  5330  01738A  24E1               	addwf	fsr1l,w,c
  5331  01738C  6ED9               	movwf	fsr2l,c
  5332  01738E  0EFF               	movlw	255
  5333  017390  20E2               	addwfc	fsr1h,w,c
  5334  017392  6EDA               	movwf	fsr2h,c
  5335  017394  006F FF78  F03F    	movff	postinc2,btemp+10
  5336  01739A  006F FF74  F040    	movff	postdec2,btemp+11
  5337                           
  5338                           ;stkvar	_s @ sp[(-8)+-3]
  5339  0173A0  0EF5               	movlw	-11
  5340  0173A2  006F FF8C  F03D    	movff	plusw1,btemp+8
  5341  0173A8  0EF6               	movlw	-10
  5342  0173AA  006F FF8C  F03E    	movff	plusw1,btemp+9
  5343  0173B0  503F               	movf	(btemp+10)^0,w,c
  5344  0173B2  243D               	addwf	(btemp+8)^0,w,c
  5345  0173B4  6ED9               	movwf	fsr2l,c
  5346  0173B6  5040               	movf	(btemp+11)^0,w,c
  5347  0173B8  203E               	addwfc	(btemp+9)^0,w,c
  5348  0173BA  6EDA               	movwf	fsr2h,c
  5349  0173BC  0E00               	movlw	0
  5350  0173BE  6EDF               	movwf	indf2,c
  5351                           
  5352                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, args
      +                          ize = 4, vargsize = 0
  5353  0173C0  0EF8               	movlw	248
  5354  0173C2  26E1               	addwf	fsr1l,f,c
  5355  0173C4  0EFF               	movlw	255
  5356  0173C6  22E2               	addwfc	fsr1h,f,c
  5357  0173C8  52E5               	movf	postdec1,f,c
  5358  0173CA  50E7               	movf	indf1,w,c
  5359  0173CC  5EE1               	subwf	fsr1l,f,c
  5360  0173CE  0E00               	movlw	0
  5361  0173D0  5AE2               	subwfb	fsr1h,f,c
  5362  0173D2  0012               	return		;funcret
  5363  0173D4                     __end_of_sprintf:
  5364                           	opt callstack 0
  5365                           
  5366 ;; *************** function _get_vterm_ptr *****************
  5367 ;; Defined at:
  5368 ;;		line 113 in file "mconfig.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;  line            1  [STACK] unsigned char 
  5371 ;;  vterm           1  [STACK] unsigned char 
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;		None
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  2  [STACK] PTR unsigned char 
  5376 ;; Registers used:
  5377 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/4
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5387 ;;Total ram usage:        0 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:    6
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		_main
  5394 ;;		_check_help
  5395 ;;		_vterm_dump
  5396 ;; This function uses a reentrant model
  5397 ;;
  5398                           
  5399                           	psect	text21
  5400  0188D4                     __ptext21:
  5401                           	opt callstack 0
  5402  0188D4                     _get_vterm_ptr:
  5403                           	opt callstack 24
  5404                           
  5405                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  5406                           ;stkvar	_vterm @ sp[(0)+-2]
  5407                           
  5408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5409                           ;incstack = 0
  5410  0188D4  0EFE               	movlw	-2
  5411  0188D6  50E3               	movf	plusw1,w,c
  5412  0188D8  0B03               	andlw	3
  5413  0188DA  0D36               	mullw	54
  5414  0188DC  0E00               	movlw	low _D
  5415  0188DE  6E35               	movwf	btemp^0,c
  5416  0188E0  0E04               	movlw	high _D
  5417  0188E2  6E36               	movwf	(btemp+1)^0,c
  5418  0188E4  50F3               	movf	243,w,c
  5419  0188E6  2635               	addwf	btemp^0,f,c
  5420  0188E8  50F4               	movf	244,w,c
  5421  0188EA  2236               	addwfc	(btemp+1)^0,f,c
  5422                           
  5423                           ;stkvar	_line @ sp[(0)+-1]
  5424  0188EC  0EFF               	movlw	-1
  5425  0188EE  50E3               	movf	plusw1,w,c
  5426  0188F0  0B03               	andlw	3
  5427  0188F2  0D12               	mullw	18
  5428  0188F4  50F3               	movf	243,w,c
  5429  0188F6  2635               	addwf	btemp^0,f,c
  5430  0188F8  50F4               	movf	244,w,c
  5431  0188FA  2236               	addwfc	(btemp+1)^0,f,c
  5432                           
  5433                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5434  0188FC  52E5               	movf	postdec1,f,c
  5435  0188FE  52E5               	movf	postdec1,f,c
  5436  018900  0012               	return		;funcret
  5437  018902                     __end_of_get_vterm_ptr:
  5438                           	opt callstack 0
  5439                           
  5440 ;; *************** function _WaitMs *****************
  5441 ;; Defined at:
  5442 ;;		line 32 in file "timers.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;  numMilliseco    2  [STACK] const unsigned short 
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;		None
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  1  [STACK] void 
  5449 ;; Registers used:
  5450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/1
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5460 ;;Total ram usage:        0 bytes
  5461 ;; Hardware stack levels used:    1
  5462 ;; Hardware stack levels required when called:    7
  5463 ;; This function calls:
  5464 ;;		_StartTimer
  5465 ;;		_TimerDone
  5466 ;; This function is called by:
  5467 ;;		_main
  5468 ;;		_vterm_dump
  5469 ;; This function uses a reentrant model
  5470 ;;
  5471                           
  5472                           	psect	text22
  5473  018770                     __ptext22:
  5474                           	opt callstack 0
  5475  018770                     _WaitMs:
  5476                           	opt callstack 21
  5477                           
  5478                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5479                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5480                           
  5481                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5482                           ;incstack = 0
  5483  018770  0EFE               	movlw	-2
  5484  018772  006F FF8F FFE6     	movff	plusw1,postinc1
  5485  018778  006F FF8F FFE6     	movff	plusw1,postinc1
  5486  01877E  0E00               	movlw	0
  5487  018780  6EE6               	movwf	postinc1,c
  5488  018782  EC62  F0C3         	call	_StartTimer	;wreg free
  5489                           
  5490                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5491  018786  D005               	goto	l8120
  5492  018788                     l1484:
  5493                           
  5494                           ;timers.c: 36:   __nop();
  5495  018788  F000               	nop	
  5496                           
  5497                           ;timers.c: 37:   __nop();
  5498  01878A  F000               	nop	
  5499                           
  5500                           ;timers.c: 38:   __nop();
  5501  01878C  F000               	nop	
  5502                           
  5503                           ;timers.c: 39:   __nop();
  5504  01878E  F000               	nop	
  5505  018790  0004               	clrwdt		;# 
  5506  018792                     l8120:
  5507                           
  5508                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5509  018792  0E00               	movlw	0
  5510  018794  6EE6               	movwf	postinc1,c
  5511  018796  EC29  F0C6         	call	_TimerDone	;wreg free
  5512  01879A  5035               	movf	btemp^0,w,c
  5513  01879C  B4D8               	btfsc	status,2,c
  5514  01879E  D7F4               	goto	l1484
  5515                           
  5516                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5517  0187A0  52E5               	movf	postdec1,f,c
  5518  0187A2  52E5               	movf	postdec1,f,c
  5519  0187A4  0012               	return		;funcret
  5520  0187A6                     __end_of_WaitMs:
  5521                           	opt callstack 0
  5522                           
  5523 ;; *************** function _update_lcd *****************
  5524 ;; Defined at:
  5525 ;;		line 82 in file "mconfig.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;  vterm           1  [STACK] unsigned char 
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;		None
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  1  [STACK] unsigned char 
  5532 ;; Registers used:
  5533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/4
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5543 ;;Total ram usage:        0 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:   17
  5546 ;; This function calls:
  5547 ;;		_eaDogM_WriteStringAtPos
  5548 ;;		_wait_lcd_done
  5549 ;; This function is called by:
  5550 ;;		_main
  5551 ;;		_check_help
  5552 ;; This function uses a reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text23
  5556  0171BC                     __ptext23:
  5557                           	opt callstack 0
  5558  0171BC                     _update_lcd:
  5559                           	opt callstack 13
  5560                           
  5561                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  5562                           ;stkvar	_vterm @ sp[(0)+-1]
  5563                           
  5564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5565                           ;incstack = 0
  5566  0171BC  0EFF               	movlw	-1
  5567  0171BE  006F FF8C  F035    	movff	plusw1,btemp
  5568  0171C4  0E03               	movlw	3
  5569  0171C6  1635               	andwf	btemp^0,f,c
  5570  0171C8  0EFF               	movlw	-1
  5571  0171CA  0060  F0D7  FFE3   	movff	btemp,plusw1
  5572                           
  5573                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  5574  0171D0  0104               	movlb	4	; () banked
  5575  0171D2  A1D8               	btfss	(_D+216)& (0+255),0,b
  5576  0171D4  D004               	goto	l10190
  5577                           
  5578                           ; BSR set to: 4
  5579                           ;stkvar	_vterm @ sp[(0)+-1]
  5580  0171D6  0EFF               	movlw	-1
  5581  0171D8  50E3               	movf	plusw1,w,c
  5582  0171DA  B4D8               	btfsc	status,2,c
  5583  0171DC  D074               	goto	l1562
  5584  0171DE                     l10190:
  5585                           
  5586                           ; BSR set to: 4
  5587                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  5588                           ;stkvar	_vterm @ sp[(0)+-1]
  5589  0171DE  0EFF               	movlw	-1
  5590  0171E0  50E3               	movf	plusw1,w,c
  5591  0171E2  0D36               	mullw	54
  5592  0171E4  0E10               	movlw	low (_D+16)
  5593  0171E6  24F3               	addwf	243,w,c
  5594  0171E8  6ED9               	movwf	fsr2l,c
  5595  0171EA  0E04               	movlw	high (_D+16)
  5596  0171EC  20F4               	addwfc	prodh,w,c
  5597  0171EE  6EDA               	movwf	fsr2h,c
  5598  0171F0  0E00               	movlw	0
  5599  0171F2  6EDF               	movwf	indf2,c
  5600                           
  5601                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  5602                           ;stkvar	_vterm @ sp[(0)+-1]
  5603  0171F4  0EFF               	movlw	-1
  5604  0171F6  50E3               	movf	plusw1,w,c
  5605  0171F8  0D36               	mullw	54
  5606  0171FA  0E22               	movlw	low (_D+34)
  5607  0171FC  24F3               	addwf	243,w,c
  5608  0171FE  6ED9               	movwf	fsr2l,c
  5609  017200  0E04               	movlw	high (_D+34)
  5610  017202  20F4               	addwfc	prodh,w,c
  5611  017204  6EDA               	movwf	fsr2h,c
  5612  017206  0E00               	movlw	0
  5613  017208  6EDF               	movwf	indf2,c
  5614                           
  5615                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  5616                           ;stkvar	_vterm @ sp[(0)+-1]
  5617  01720A  0EFF               	movlw	-1
  5618  01720C  50E3               	movf	plusw1,w,c
  5619  01720E  0D36               	mullw	54
  5620  017210  0E34               	movlw	low (_D+52)
  5621  017212  24F3               	addwf	243,w,c
  5622  017214  6ED9               	movwf	fsr2l,c
  5623  017216  0E04               	movlw	high (_D+52)
  5624  017218  20F4               	addwfc	prodh,w,c
  5625  01721A  6EDA               	movwf	fsr2h,c
  5626  01721C  0E00               	movlw	0
  5627  01721E  6EDF               	movwf	indf2,c
  5628                           
  5629                           ; BSR set to: 4
  5630                           ;mconfig.c: 92:  wait_lcd_done();
  5631  017220  ECDA  F0C6         	call	_wait_lcd_done	;wreg free
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5635                           ;stkvar	_vterm @ sp[(0)+-1]
  5636  017224  0EFF               	movlw	-1
  5637  017226  50E3               	movf	plusw1,w,c
  5638  017228  0D36               	mullw	54
  5639  01722A  0E00               	movlw	low _D
  5640  01722C  6E3F               	movwf	(btemp+10)^0,c
  5641  01722E  0E04               	movlw	high _D
  5642  017230  6E40               	movwf	(btemp+11)^0,c
  5643  017232  50F3               	movf	243,w,c
  5644  017234  263F               	addwf	(btemp+10)^0,f,c
  5645  017236  50F4               	movf	244,w,c
  5646  017238  2240               	addwfc	(btemp+11)^0,f,c
  5647  01723A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5648  017240  0060  F103  FFE6   	movff	btemp+11,postinc1
  5649  017246  0E00               	movlw	0
  5650  017248  6EE6               	movwf	postinc1,c
  5651  01724A  0E00               	movlw	0
  5652  01724C  6EE6               	movwf	postinc1,c
  5653  01724E  ECD3  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5654                           
  5655                           ; BSR set to: 59
  5656                           ;mconfig.c: 94:  wait_lcd_done();
  5657  017252  ECDA  F0C6         	call	_wait_lcd_done	;wreg free
  5658                           
  5659                           ; BSR set to: 0
  5660                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5661                           ;stkvar	_vterm @ sp[(0)+-1]
  5662  017256  0EFF               	movlw	-1
  5663  017258  50E3               	movf	plusw1,w,c
  5664  01725A  0D36               	mullw	54
  5665  01725C  0E00               	movlw	low _D
  5666  01725E  6E3F               	movwf	(btemp+10)^0,c
  5667  017260  0E04               	movlw	high _D
  5668  017262  6E40               	movwf	(btemp+11)^0,c
  5669  017264  0E12               	movlw	18
  5670  017266  263F               	addwf	(btemp+10)^0,f,c
  5671  017268  0E00               	movlw	0
  5672  01726A  2240               	addwfc	(btemp+11)^0,f,c
  5673  01726C  50F3               	movf	243,w,c
  5674  01726E  263F               	addwf	(btemp+10)^0,f,c
  5675  017270  50F4               	movf	244,w,c
  5676  017272  2240               	addwfc	(btemp+11)^0,f,c
  5677  017274  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5678  01727A  0060  F103  FFE6   	movff	btemp+11,postinc1
  5679  017280  0E00               	movlw	0
  5680  017282  6EE6               	movwf	postinc1,c
  5681  017284  0E01               	movlw	1
  5682  017286  6EE6               	movwf	postinc1,c
  5683  017288  ECD3  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5684                           
  5685                           ; BSR set to: 59
  5686                           ;mconfig.c: 96:  wait_lcd_done();
  5687  01728C  ECDA  F0C6         	call	_wait_lcd_done	;wreg free
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5691                           ;stkvar	_vterm @ sp[(0)+-1]
  5692  017290  0EFF               	movlw	-1
  5693  017292  50E3               	movf	plusw1,w,c
  5694  017294  0D36               	mullw	54
  5695  017296  0E00               	movlw	low _D
  5696  017298  6E3F               	movwf	(btemp+10)^0,c
  5697  01729A  0E04               	movlw	high _D
  5698  01729C  6E40               	movwf	(btemp+11)^0,c
  5699  01729E  0E24               	movlw	36
  5700  0172A0  263F               	addwf	(btemp+10)^0,f,c
  5701  0172A2  0E00               	movlw	0
  5702  0172A4  2240               	addwfc	(btemp+11)^0,f,c
  5703  0172A6  50F3               	movf	243,w,c
  5704  0172A8  263F               	addwf	(btemp+10)^0,f,c
  5705  0172AA  50F4               	movf	244,w,c
  5706  0172AC  2240               	addwfc	(btemp+11)^0,f,c
  5707  0172AE  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5708  0172B4  0060  F103  FFE6   	movff	btemp+11,postinc1
  5709  0172BA  0E00               	movlw	0
  5710  0172BC  6EE6               	movwf	postinc1,c
  5711  0172BE  0E02               	movlw	2
  5712  0172C0  6EE6               	movwf	postinc1,c
  5713  0172C2  ECD3  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5714  0172C6                     l1562:
  5715                           
  5716                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5717  0172C6  52E5               	movf	postdec1,f,c
  5718  0172C8  0012               	return		;funcret
  5719  0172CA                     __end_of_update_lcd:
  5720                           	opt callstack 0
  5721                           
  5722 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5723 ;; Defined at:
  5724 ;;		line 252 in file "eadog.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  r               1  [STACK] const unsigned char 
  5727 ;;  c               1  [STACK] const unsigned char 
  5728 ;;  strPtr          2  [STACK] PTR unsigned char 
  5729 ;;		 -> D.lcd(216), D(218), V(187), 
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;		None
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1  [STACK] void 
  5734 ;; Registers used:
  5735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5736 ;; Tracked objects:
  5737 ;;		On entry : 3F/0
  5738 ;;		On exit  : 3F/3B
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5745 ;;Total ram usage:        0 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:   16
  5748 ;; This function calls:
  5749 ;;		_eaDogM_WriteString
  5750 ;;		_send_lcd_cmd_dma
  5751 ;; This function is called by:
  5752 ;;		_update_lcd
  5753 ;;		_vterm_dump
  5754 ;; This function uses a reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text24
  5758  0187A6                     __ptext24:
  5759                           	opt callstack 0
  5760  0187A6                     _eaDogM_WriteStringAtPos:
  5761                           	opt callstack 13
  5762                           
  5763                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5764                           ;stkvar	_c @ sp[(0)+-2]
  5765                           
  5766                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5767                           ;incstack = 0
  5768  0187A6  0EFE               	movlw	-2
  5769  0187A8  006F FF8C  F040    	movff	plusw1,btemp+11
  5770                           
  5771                           ;stkvar	_r @ sp[(0)+-1]
  5772  0187AE  0EFF               	movlw	-1
  5773  0187B0  50E3               	movf	plusw1,w,c
  5774  0187B2  0D10               	mullw	16
  5775  0187B4  50F3               	movf	243,w,c
  5776  0187B6  2440               	addwf	(btemp+11)^0,w,c
  5777  0187B8  0F80               	addlw	128
  5778  0187BA  6EE6               	movwf	postinc1,c
  5779  0187BC  ECB8  F0C1         	call	_send_lcd_cmd_dma	;wreg free
  5780                           
  5781                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5782                           ;stkvar	_strPtr @ sp[(0)+-4]
  5783  0187C0  0EFC               	movlw	-4
  5784  0187C2  006F FF8F FFE6     	movff	plusw1,postinc1
  5785  0187C8  006F FF8F FFE6     	movff	plusw1,postinc1
  5786  0187CE  EC95  F0BC         	call	_eaDogM_WriteString	;wreg free
  5787                           
  5788                           ; BSR set to: 59
  5789                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5790  0187D2  52E5               	movf	postdec1,f,c
  5791  0187D4  52E5               	movf	postdec1,f,c
  5792  0187D6  52E5               	movf	postdec1,f,c
  5793  0187D8  52E5               	movf	postdec1,f,c
  5794  0187DA  0012               	return		;funcret
  5795  0187DC                     __end_of_eaDogM_WriteStringAtPos:
  5796                           	opt callstack 0
  5797                           
  5798 ;; *************** function _send_lcd_cmd_dma *****************
  5799 ;; Defined at:
  5800 ;;		line 205 in file "eadog.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;  strPtr          1  [STACK] unsigned char 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;		None
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  1  [STACK] void 
  5807 ;; Registers used:
  5808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/3D
  5811 ;;		On exit  : 3F/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5818 ;;Total ram usage:        0 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; Hardware stack levels required when called:   15
  5821 ;; This function calls:
  5822 ;;		_printf
  5823 ;;		_ringBufS_flush
  5824 ;;		_start_lcd
  5825 ;;		_wait_lcd_done
  5826 ;;		_wait_lcd_set
  5827 ;; This function is called by:
  5828 ;;		_eaDogM_WriteCommand
  5829 ;;		_eaDogM_WriteStringAtPos
  5830 ;; This function uses a reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text25
  5834  018370                     __ptext25:
  5835                           	opt callstack 0
  5836  018370                     _send_lcd_cmd_dma:
  5837                           	opt callstack 13
  5838                           
  5839                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5840                           
  5841                           ; BSR set to: 59
  5842                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5843                           ;incstack = 0
  5844  018370  ECB8  F0C7         	call	_wait_lcd_set	;wreg free
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5848  018374  0E00               	movlw	0
  5849  018376  6EE6               	movwf	postinc1,c
  5850  018378  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  5851  01837E  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  5852  018384  ECD2  F0BD         	call	_ringBufS_flush	;wreg free
  5853  018388  92BC               	bcf	188,1,c	;volatile
  5854  01838A  94BC               	bcf	188,2,c	;volatile
  5855                           
  5856                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5857  01838C  013B               	movlb	59	; () banked
  5858  01838E  9FFC               	bcf	252,7,b	;volatile
  5859                           
  5860                           ; BSR set to: 59
  5861                           ;eadog.c: 214:  DMA1SSZ = 1;
  5862  018390  0E00               	movlw	0
  5863  018392  6FF8               	movwf	248,b	;volatile
  5864  018394  0E01               	movlw	1
  5865  018396  6FF7               	movwf	247,b	;volatile
  5866                           
  5867                           ; BSR set to: 59
  5868                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5869  018398  8FFC               	bsf	252,7,b	;volatile
  5870                           
  5871                           ; BSR set to: 59
  5872                           ;eadog.c: 216:  printf("%c", strPtr);
  5873                           ;stkvar	_strPtr @ sp[(0)+-1]
  5874  01839A  0EFF               	movlw	-1
  5875  01839C  50E3               	movf	plusw1,w,c
  5876  01839E  6EE6               	movwf	postinc1,c
  5877  0183A0  0E00               	movlw	0
  5878  0183A2  6EE6               	movwf	postinc1,c
  5879  0183A4  0EF9               	movlw	low STR_13
  5880  0183A6  6EE6               	movwf	postinc1,c
  5881  0183A8  0EFF               	movlw	high STR_13
  5882  0183AA  6EE6               	movwf	postinc1,c
  5883  0183AC  0E04               	movlw	4
  5884  0183AE  6EE6               	movwf	postinc1,c
  5885  0183B0  ECD0  F0C0         	call	_printf	;wreg free
  5886                           
  5887                           ;eadog.c: 217:  start_lcd();
  5888  0183B4  ECBB  F0C7         	call	_start_lcd	;wreg free
  5889                           
  5890                           ; BSR set to: 59
  5891                           ;eadog.c: 218:  wait_lcd_done();
  5892  0183B8  ECDA  F0C6         	call	_wait_lcd_done	;wreg free
  5893                           
  5894                           ; BSR set to: 0
  5895  0183BC  82BC               	bsf	188,1,c	;volatile
  5896                           
  5897                           ; BSR set to: 0
  5898                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5899  0183BE  52E5               	movf	postdec1,f,c
  5900  0183C0  0012               	return		;funcret
  5901  0183C2                     __end_of_send_lcd_cmd_dma:
  5902                           	opt callstack 0
  5903                           
  5904 ;; *************** function _wait_lcd_done *****************
  5905 ;; Defined at:
  5906 ;;		line 141 in file "eadog.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;		None
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;		None
  5911 ;; Return value:  Size  Location     Type
  5912 ;;                  1  [STACK] void 
  5913 ;; Registers used:
  5914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/1
  5917 ;;		On exit  : 3F/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5924 ;;Total ram usage:        0 bytes
  5925 ;; Hardware stack levels used:    1
  5926 ;; Hardware stack levels required when called:    7
  5927 ;; This function calls:
  5928 ;;		_wdtdelay
  5929 ;; This function is called by:
  5930 ;;		_send_lcd_cmd_dma
  5931 ;;		_update_lcd
  5932 ;;		_vterm_dump
  5933 ;; This function uses a reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text26
  5937  018DB4                     __ptext26:
  5938                           	opt callstack 0
  5939  018DB4                     _wait_lcd_done:
  5940                           	opt callstack 22
  5941                           
  5942                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  5943                           
  5944                           ; BSR set to: 0
  5945                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5946                           ;incstack = 0
  5947  018DB4  0100               	movlb	0	; () banked
  5948  018DB6  B778               	btfsc	_spi_link& (0+255),3,b	;volatile
  5949  018DB8  D7FD               	goto	_wait_lcd_done
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;eadog.c: 144:  wdtdelay(50);
  5953  018DBA  0E32               	movlw	50
  5954  018DBC  6EE6               	movwf	postinc1,c
  5955  018DBE  0E00               	movlw	0
  5956  018DC0  6EE6               	movwf	postinc1,c
  5957  018DC2  0E00               	movlw	0
  5958  018DC4  6EE6               	movwf	postinc1,c
  5959  018DC6  0E00               	movlw	0
  5960  018DC8  6EE6               	movwf	postinc1,c
  5961  018DCA  EC5E  F0C1         	call	_wdtdelay	;wreg free
  5962                           
  5963                           ; BSR set to: 0
  5964                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5965  018DCE  0012               	return		;funcret
  5966  018DD0                     __end_of_wait_lcd_done:
  5967                           	opt callstack 0
  5968                           
  5969 ;; *************** function _wdtdelay *****************
  5970 ;; Defined at:
  5971 ;;		line 22 in file "eadog.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  delay           4  [STACK] const unsigned long 
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  1  [STACK] void 
  5978 ;; Registers used:
  5979 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 3F/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5989 ;;Total ram usage:        0 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:    6
  5992 ;; This function calls:
  5993 ;;		Nothing
  5994 ;; This function is called by:
  5995 ;;		_init_display
  5996 ;;		_send_lcd_cmd
  5997 ;;		_send_lcd_cmd_long
  5998 ;;		_wait_lcd_done
  5999 ;; This function uses a reentrant model
  6000 ;;
  6001                           
  6002                           	psect	text27
  6003  0182BC                     __ptext27:
  6004                           	opt callstack 0
  6005  0182BC                     _wdtdelay:
  6006                           	opt callstack 22
  6007                           
  6008                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6009                           
  6010                           ; BSR set to: 0
  6011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6012                           ;incstack = 0
  6013  0182BC  0100               	movlb	0	; () banked
  6014  0182BE  6B90               	clrf	wdtdelay@dcount& (0+255),b
  6015  0182C0  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6016  0182C2  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6017  0182C4  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6018  0182C6                     l1329:
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;eadog.c: 27:   __nop();
  6022  0182C6  F000               	nop	
  6023  0182C8  0004               	clrwdt		;# 
  6024                           
  6025                           ;eadog.c: 29:  };
  6026  0182CA  0E01               	movlw	1
  6027  0182CC  0100               	movlb	0	; () banked
  6028  0182CE  2790               	addwf	wdtdelay@dcount& (0+255),f,b
  6029  0182D0  0E00               	movlw	0
  6030  0182D2  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6031  0182D4  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6032  0182D6  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;stkvar	_delay @ sp[(0)+-4]
  6036  0182D8  0EFC               	movlw	-4
  6037  0182DA  006F FF8C  F035    	movff	plusw1,btemp
  6038  0182E0  5190               	movf	wdtdelay@dcount& (0+255),w,b
  6039  0182E2  5C35               	subwf	btemp^0,w,c
  6040  0182E4  0EFD               	movlw	-3
  6041  0182E6  006F FF8C  F035    	movff	plusw1,btemp
  6042  0182EC  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6043  0182EE  5835               	subwfb	btemp^0,w,c
  6044  0182F0  0EFE               	movlw	-2
  6045  0182F2  006F FF8C  F035    	movff	plusw1,btemp
  6046  0182F8  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6047  0182FA  5835               	subwfb	btemp^0,w,c
  6048  0182FC  0EFF               	movlw	-1
  6049  0182FE  006F FF8C  F035    	movff	plusw1,btemp
  6050  018304  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6051  018306  5835               	subwfb	btemp^0,w,c
  6052  018308  B0D8               	btfsc	status,0,c
  6053  01830A  D7DD               	goto	l1329
  6054                           
  6055                           ; BSR set to: 0
  6056                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6057  01830C  52E5               	movf	postdec1,f,c
  6058  01830E  52E5               	movf	postdec1,f,c
  6059  018310  52E5               	movf	postdec1,f,c
  6060  018312  52E5               	movf	postdec1,f,c
  6061  018314  0012               	return		;funcret
  6062  018316                     __end_of_wdtdelay:
  6063                           	opt callstack 0
  6064                           
  6065 ;; *************** function _eaDogM_WriteString *****************
  6066 ;; Defined at:
  6067 ;;		line 184 in file "eadog.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;  strPtr          2  [STACK] PTR unsigned char 
  6070 ;;		 -> D.lcd(216), D(218), V(187), 
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;		None
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  1  [STACK] void 
  6075 ;; Registers used:
  6076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6077 ;; Tracked objects:
  6078 ;;		On entry : 3F/0
  6079 ;;		On exit  : 3F/3B
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6086 ;;Total ram usage:        0 bytes
  6087 ;; Hardware stack levels used:    1
  6088 ;; Hardware stack levels required when called:   15
  6089 ;; This function calls:
  6090 ;;		_printf
  6091 ;;		_ringBufS_flush
  6092 ;;		_start_lcd
  6093 ;;		_strlen
  6094 ;;		_wait_lcd_set
  6095 ;; This function is called by:
  6096 ;;		_eaDogM_WriteStringAtPos
  6097 ;; This function uses a reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text28
  6101  01792A                     __ptext28:
  6102                           	opt callstack 0
  6103  01792A                     _eaDogM_WriteString:
  6104                           	opt callstack 13
  6105                           
  6106                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6107                           
  6108                           ; BSR set to: 0
  6109                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6110                           ;incstack = 0
  6111  01792A  ECB8  F0C7         	call	_wait_lcd_set	;wreg free
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6115  01792E  0E00               	movlw	0
  6116  017930  6EE6               	movwf	postinc1,c
  6117  017932  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  6118  017938  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  6119  01793E  ECD2  F0BD         	call	_ringBufS_flush	;wreg free
  6120  017942  94BC               	bcf	188,2,c	;volatile
  6121                           
  6122                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6123                           ;stkvar	_strPtr @ sp[(0)+-2]
  6124  017944  0EFE               	movlw	-2
  6125  017946  006F FF8F FFE6     	movff	plusw1,postinc1
  6126  01794C  006F FF8F FFE6     	movff	plusw1,postinc1
  6127  017952  ECE8  F0BC         	call	_strlen	;wreg free
  6128  017956  5036               	movf	(btemp+1)^0,w,c
  6129  017958  E104               	bnz	u10640
  6130  01795A  0E41               	movlw	65
  6131  01795C  5C35               	subwf	btemp^0,w,c
  6132  01795E  A0D8               	btfss	status,0,c
  6133  017960  D010               	goto	l10156
  6134  017962                     u10640:
  6135                           
  6136                           ;stkvar	_strPtr @ sp[(0)+-2]
  6137  017962  0EFE               	movlw	-2
  6138  017964  006F FF8C  F03F    	movff	plusw1,btemp+10
  6139  01796A  0EFF               	movlw	-1
  6140  01796C  006F FF8C  F040    	movff	plusw1,btemp+11
  6141  017972  0E40               	movlw	64
  6142  017974  243F               	addwf	(btemp+10)^0,w,c
  6143  017976  6ED9               	movwf	fsr2l,c
  6144  017978  0E00               	movlw	0
  6145  01797A  2040               	addwfc	(btemp+11)^0,w,c
  6146  01797C  6EDA               	movwf	fsr2h,c
  6147  01797E  0E00               	movlw	0
  6148  017980  6EDF               	movwf	indf2,c
  6149  017982                     l10156:
  6150                           
  6151                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6152  017982  013B               	movlb	59	; () banked
  6153  017984  9FFC               	bcf	252,7,b	;volatile
  6154                           
  6155                           ; BSR set to: 59
  6156                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6157                           ;stkvar	_strPtr @ sp[(0)+-2]
  6158  017986  0EFE               	movlw	-2
  6159  017988  006F FF8F FFE6     	movff	plusw1,postinc1
  6160  01798E  006F FF8F FFE6     	movff	plusw1,postinc1
  6161  017994  ECE8  F0BC         	call	_strlen	;wreg free
  6162  017998  0060  F0D7  FBF7   	movff	btemp,15351	;volatile
  6163  01799E  0060  F0DB  FBF8   	movff	btemp+1,15352	;volatile
  6164                           
  6165                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6166  0179A4  013B               	movlb	59	; () banked
  6167  0179A6  8FFC               	bsf	252,7,b	;volatile
  6168                           
  6169                           ; BSR set to: 59
  6170                           ;eadog.c: 195:  printf("%s", strPtr);
  6171                           ;stkvar	_strPtr @ sp[(0)+-2]
  6172  0179A8  0EFE               	movlw	-2
  6173  0179AA  006F FF8F FFE6     	movff	plusw1,postinc1
  6174  0179B0  006F FF8F FFE6     	movff	plusw1,postinc1
  6175  0179B6  0EFC               	movlw	low STR_12
  6176  0179B8  6EE6               	movwf	postinc1,c
  6177  0179BA  0EFF               	movlw	high STR_12
  6178  0179BC  6EE6               	movwf	postinc1,c
  6179  0179BE  0E04               	movlw	4
  6180  0179C0  6EE6               	movwf	postinc1,c
  6181  0179C2  ECD0  F0C0         	call	_printf	;wreg free
  6182                           
  6183                           ;eadog.c: 196:  start_lcd();
  6184  0179C6  ECBB  F0C7         	call	_start_lcd	;wreg free
  6185                           
  6186                           ; BSR set to: 59
  6187                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6188  0179CA  52E5               	movf	postdec1,f,c
  6189  0179CC  52E5               	movf	postdec1,f,c
  6190  0179CE  0012               	return		;funcret
  6191  0179D0                     __end_of_eaDogM_WriteString:
  6192                           	opt callstack 0
  6193                           
  6194 ;; *************** function _wait_lcd_set *****************
  6195 ;; Defined at:
  6196 ;;		line 131 in file "eadog.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;		None
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;		None
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1  [STACK] void 
  6203 ;; Registers used:
  6204 ;;		None
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/3D
  6207 ;;		On exit  : 3F/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6214 ;;Total ram usage:        0 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    6
  6217 ;; This function calls:
  6218 ;;		Nothing
  6219 ;; This function is called by:
  6220 ;;		_eaDogM_WriteString
  6221 ;;		_send_lcd_cmd_dma
  6222 ;; This function uses a reentrant model
  6223 ;;
  6224                           
  6225                           	psect	text29
  6226  018F70                     __ptext29:
  6227                           	opt callstack 0
  6228  018F70                     _wait_lcd_set:
  6229                           	opt callstack 21
  6230                           
  6231                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6232                           
  6233                           ; BSR set to: 59
  6234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6235                           ;incstack = 0
  6236  018F70  0100               	movlb	0	; () banked
  6237  018F72  8778               	bsf	_spi_link& (0+255),3,b	;volatile
  6238                           
  6239                           ; BSR set to: 0
  6240                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6241  018F74  0012               	return		;funcret
  6242  018F76                     __end_of_wait_lcd_set:
  6243                           	opt callstack 0
  6244                           
  6245 ;; *************** function _start_lcd *****************
  6246 ;; Defined at:
  6247 ;;		line 126 in file "eadog.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;		None
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;		None
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  1  [STACK] void 
  6254 ;; Registers used:
  6255 ;;		None
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/3B
  6258 ;;		On exit  : 3F/3B
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6265 ;;Total ram usage:        0 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; Hardware stack levels required when called:    6
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_eaDogM_WriteString
  6272 ;;		_send_lcd_cmd_dma
  6273 ;; This function uses a reentrant model
  6274 ;;
  6275                           
  6276                           	psect	text30
  6277  018F76                     __ptext30:
  6278                           	opt callstack 0
  6279  018F76                     _start_lcd:
  6280                           	opt callstack 21
  6281                           
  6282                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6283                           
  6284                           ; BSR set to: 0
  6285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6286                           ;incstack = 0
  6287  018F76  013B               	movlb	59	; () banked
  6288  018F78  8DFC               	bsf	252,6,b	;volatile
  6289                           
  6290                           ; BSR set to: 59
  6291                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6292  018F7A  0012               	return		;funcret
  6293  018F7C                     __end_of_start_lcd:
  6294                           	opt callstack 0
  6295                           
  6296 ;; *************** function _ringBufS_flush *****************
  6297 ;; Defined at:
  6298 ;;		line 76 in file "ringbufs.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6301 ;;		 -> ring_buf1(67), 
  6302 ;;  clearBuffer     1  [STACK] const char 
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;		None
  6305 ;; Return value:  Size  Location     Type
  6306 ;;                  1  [STACK] void 
  6307 ;; Registers used:
  6308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6309 ;; Tracked objects:
  6310 ;;		On entry : 3F/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6318 ;;Total ram usage:        0 bytes
  6319 ;; Hardware stack levels used:    1
  6320 ;; Hardware stack levels required when called:    7
  6321 ;; This function calls:
  6322 ;;		_memset
  6323 ;; This function is called by:
  6324 ;;		_eaDogM_WriteString
  6325 ;;		_send_lcd_cmd_dma
  6326 ;; This function uses a reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text31
  6330  017BA4                     __ptext31:
  6331                           	opt callstack 0
  6332  017BA4                     _ringBufS_flush:
  6333                           	opt callstack 20
  6334                           
  6335                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6336                           ;stkvar	__this @ sp[(0)+-2]
  6337                           
  6338                           ; BSR set to: 59
  6339                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6340                           ;incstack = 0
  6341  017BA4  0EFE               	movlw	-2
  6342  017BA6  006F FF8C  F03F    	movff	plusw1,btemp+10
  6343  017BAC  0EFF               	movlw	-1
  6344  017BAE  006F FF8C  F040    	movff	plusw1,btemp+11
  6345  017BB4  0E42               	movlw	66
  6346  017BB6  243F               	addwf	(btemp+10)^0,w,c
  6347  017BB8  6ED9               	movwf	fsr2l,c
  6348  017BBA  0E00               	movlw	0
  6349  017BBC  2040               	addwfc	(btemp+11)^0,w,c
  6350  017BBE  6EDA               	movwf	fsr2h,c
  6351  017BC0  0E00               	movlw	0
  6352  017BC2  6EDF               	movwf	indf2,c
  6353                           
  6354                           ;ringbufs.c: 79:  _this->head = 0;
  6355                           ;stkvar	__this @ sp[(0)+-2]
  6356  017BC4  0EFE               	movlw	-2
  6357  017BC6  006F FF8C  F03F    	movff	plusw1,btemp+10
  6358  017BCC  0EFF               	movlw	-1
  6359  017BCE  006F FF8C  F040    	movff	plusw1,btemp+11
  6360  017BD4  0E40               	movlw	64
  6361  017BD6  243F               	addwf	(btemp+10)^0,w,c
  6362  017BD8  6ED9               	movwf	fsr2l,c
  6363  017BDA  0E00               	movlw	0
  6364  017BDC  2040               	addwfc	(btemp+11)^0,w,c
  6365  017BDE  6EDA               	movwf	fsr2h,c
  6366  017BE0  0E00               	movlw	0
  6367  017BE2  6EDF               	movwf	indf2,c
  6368                           
  6369                           ;ringbufs.c: 80:  _this->tail = 0;
  6370                           ;stkvar	__this @ sp[(0)+-2]
  6371  017BE4  0EFE               	movlw	-2
  6372  017BE6  006F FF8C  F03F    	movff	plusw1,btemp+10
  6373  017BEC  0EFF               	movlw	-1
  6374  017BEE  006F FF8C  F040    	movff	plusw1,btemp+11
  6375  017BF4  0E41               	movlw	65
  6376  017BF6  243F               	addwf	(btemp+10)^0,w,c
  6377  017BF8  6ED9               	movwf	fsr2l,c
  6378  017BFA  0E00               	movlw	0
  6379  017BFC  2040               	addwfc	(btemp+11)^0,w,c
  6380  017BFE  6EDA               	movwf	fsr2h,c
  6381  017C00  0E00               	movlw	0
  6382  017C02  6EDF               	movwf	indf2,c
  6383                           
  6384                           ;ringbufs.c: 81:  if (clearBuffer) {
  6385                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6386  017C04  0EFD               	movlw	-3
  6387  017C06  50E3               	movf	plusw1,w,c
  6388  017C08  B4D8               	btfsc	status,2,c
  6389  017C0A  D011               	goto	l1469
  6390                           
  6391                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6392  017C0C  0E40               	movlw	64
  6393  017C0E  6EE6               	movwf	postinc1,c
  6394  017C10  0E00               	movlw	0
  6395  017C12  6EE6               	movwf	postinc1,c
  6396  017C14  0E00               	movlw	0
  6397  017C16  6EE6               	movwf	postinc1,c
  6398  017C18  0E00               	movlw	0
  6399  017C1A  6EE6               	movwf	postinc1,c
  6400                           
  6401                           ;stkvar	__this @ sp[(-4)+-2]
  6402  017C1C  0EFA               	movlw	-6
  6403  017C1E  006F FF8F FFE6     	movff	plusw1,postinc1
  6404  017C24  006F FF8F FFE6     	movff	plusw1,postinc1
  6405  017C2A  ECF9  F0A7         	call	_memset	;wreg free
  6406  017C2E                     l1469:
  6407                           
  6408                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6409  017C2E  52E5               	movf	postdec1,f,c
  6410  017C30  52E5               	movf	postdec1,f,c
  6411  017C32  52E5               	movf	postdec1,f,c
  6412  017C34  0012               	return		;funcret
  6413  017C36                     __end_of_ringBufS_flush:
  6414                           	opt callstack 0
  6415                           
  6416 ;; *************** function _memset *****************
  6417 ;; Defined at:
  6418 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  dest            2  [STACK] PTR void 
  6421 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6422 ;;  c               2  [STACK] int 
  6423 ;;  n               2  [STACK] unsigned int 
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;  s               2  [STACK] PTR unsigned char 
  6426 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6427 ;;  k               2  [STACK] unsigned int 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  2  [STACK] PTR void 
  6430 ;; Registers used:
  6431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6441 ;;Total ram usage:        0 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    6
  6444 ;; This function calls:
  6445 ;;		Nothing
  6446 ;; This function is called by:
  6447 ;;		_ringBufS_init
  6448 ;;		_ringBufS_flush
  6449 ;; This function uses a reentrant model
  6450 ;;
  6451                           
  6452                           	psect	text32
  6453  014FF2                     __ptext32:
  6454                           	opt callstack 0
  6455  014FF2                     _memset:
  6456                           	opt callstack 0
  6457                           
  6458                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6459  014FF2  52E6               	movf	postinc1,f,c
  6460  014FF4  52E6               	movf	postinc1,f,c
  6461  014FF6  52E6               	movf	postinc1,f,c
  6462  014FF8  52E6               	movf	postinc1,f,c
  6463                           
  6464                           ;stkvar	_dest @ sp[(-4)+-2]
  6465                           
  6466                           ;incstack = 0
  6467  014FFA  0EFA               	movlw	-6
  6468  014FFC  006F FF8C  F03F    	movff	plusw1,btemp+10
  6469  015002  0EFB               	movlw	-5
  6470  015004  006F FF8C  F040    	movff	plusw1,btemp+11
  6471                           
  6472                           ;stkvar	_s @ sp[(-4)+0]
  6473  01500A  0EFD               	movlw	-3
  6474  01500C  0060  F103  FFE3   	movff	btemp+11,plusw1
  6475  015012  0EFC               	movlw	-4
  6476  015014  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6477                           
  6478                           ;stkvar	_n @ sp[(-4)+-6]
  6479  01501A  0EF6               	movlw	-10
  6480  01501C  006F FF8C  F035    	movff	plusw1,btemp
  6481  015022  0EF7               	movlw	-9
  6482  015024  50E3               	movf	plusw1,w,c
  6483  015026  1035               	iorwf	btemp^0,w,c
  6484  015028  B4D8               	btfsc	status,2,c
  6485  01502A  D154               	goto	u10610
  6486                           
  6487                           ;stkvar	_c @ sp[(-4)+-4]
  6488                           ;stkvar	_s @ sp[(-4)+0]
  6489  01502C  0EFC               	movlw	-4
  6490  01502E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6491  015034  0EFD               	movlw	-3
  6492  015036  006F FF8F FFDA     	movff	plusw1,fsr2h
  6493  01503C  0EF8               	movlw	-8
  6494  01503E  006F FF8F FFDF     	movff	plusw1,indf2
  6495                           
  6496                           ;stkvar	_c @ sp[(-4)+-4]
  6497                           ;stkvar	_n @ sp[(-4)+-6]
  6498                           ;stkvar	_s @ sp[(-4)+0]
  6499  015044  0EFC               	movlw	-4
  6500  015046  006F FF8C  F03F    	movff	plusw1,btemp+10
  6501  01504C  0EFD               	movlw	-3
  6502  01504E  006F FF8C  F040    	movff	plusw1,btemp+11
  6503  015054  0EF6               	movlw	-10
  6504  015056  50E3               	movf	plusw1,w,c
  6505  015058  263F               	addwf	(btemp+10)^0,f,c
  6506  01505A  0EF7               	movlw	-9
  6507  01505C  50E3               	movf	plusw1,w,c
  6508  01505E  2240               	addwfc	(btemp+11)^0,f,c
  6509  015060  0EFF               	movlw	255
  6510  015062  243F               	addwf	(btemp+10)^0,w,c
  6511  015064  6ED9               	movwf	fsr2l,c
  6512  015066  0EFF               	movlw	255
  6513  015068  2040               	addwfc	(btemp+11)^0,w,c
  6514  01506A  6EDA               	movwf	fsr2h,c
  6515  01506C  0EF8               	movlw	-8
  6516  01506E  006F FF8F FFDF     	movff	plusw1,indf2
  6517                           
  6518                           ;stkvar	_n @ sp[(-4)+-6]
  6519  015074  0EF7               	movlw	-9
  6520  015076  50E3               	movf	plusw1,w,c
  6521  015078  E108               	bnz	l10072
  6522  01507A  0EF6               	movlw	-10
  6523  01507C  006F FF8C  F035    	movff	plusw1,btemp
  6524  015082  0E03               	movlw	3
  6525  015084  5E35               	subwf	btemp^0,f,c
  6526  015086  A0D8               	btfss	status,0,c
  6527  015088  D125               	goto	u10610
  6528  01508A                     l10072:
  6529                           
  6530                           ;stkvar	_c @ sp[(-4)+-4]
  6531                           ;stkvar	_s @ sp[(-4)+0]
  6532  01508A  0EFC               	movlw	-4
  6533  01508C  006F FF8C  F03F    	movff	plusw1,btemp+10
  6534  015092  0EFD               	movlw	-3
  6535  015094  006F FF8C  F040    	movff	plusw1,btemp+11
  6536  01509A  0E01               	movlw	1
  6537  01509C  243F               	addwf	(btemp+10)^0,w,c
  6538  01509E  6ED9               	movwf	fsr2l,c
  6539  0150A0  0E00               	movlw	0
  6540  0150A2  2040               	addwfc	(btemp+11)^0,w,c
  6541  0150A4  6EDA               	movwf	fsr2h,c
  6542  0150A6  0EF8               	movlw	-8
  6543  0150A8  006F FF8F FFDF     	movff	plusw1,indf2
  6544                           
  6545                           ;stkvar	_c @ sp[(-4)+-4]
  6546                           ;stkvar	_s @ sp[(-4)+0]
  6547  0150AE  0EFC               	movlw	-4
  6548  0150B0  006F FF8C  F03F    	movff	plusw1,btemp+10
  6549  0150B6  0EFD               	movlw	-3
  6550  0150B8  006F FF8C  F040    	movff	plusw1,btemp+11
  6551  0150BE  0E02               	movlw	2
  6552  0150C0  243F               	addwf	(btemp+10)^0,w,c
  6553  0150C2  6ED9               	movwf	fsr2l,c
  6554  0150C4  0E00               	movlw	0
  6555  0150C6  2040               	addwfc	(btemp+11)^0,w,c
  6556  0150C8  6EDA               	movwf	fsr2h,c
  6557  0150CA  0EF8               	movlw	-8
  6558  0150CC  006F FF8F FFDF     	movff	plusw1,indf2
  6559                           
  6560                           ;stkvar	_c @ sp[(-4)+-4]
  6561                           ;stkvar	_n @ sp[(-4)+-6]
  6562                           ;stkvar	_s @ sp[(-4)+0]
  6563  0150D2  0EFC               	movlw	-4
  6564  0150D4  006F FF8C  F03F    	movff	plusw1,btemp+10
  6565  0150DA  0EFD               	movlw	-3
  6566  0150DC  006F FF8C  F040    	movff	plusw1,btemp+11
  6567  0150E2  0EF6               	movlw	-10
  6568  0150E4  50E3               	movf	plusw1,w,c
  6569  0150E6  263F               	addwf	(btemp+10)^0,f,c
  6570  0150E8  0EF7               	movlw	-9
  6571  0150EA  50E3               	movf	plusw1,w,c
  6572  0150EC  2240               	addwfc	(btemp+11)^0,f,c
  6573  0150EE  0EFE               	movlw	254
  6574  0150F0  243F               	addwf	(btemp+10)^0,w,c
  6575  0150F2  6ED9               	movwf	fsr2l,c
  6576  0150F4  0EFF               	movlw	255
  6577  0150F6  2040               	addwfc	(btemp+11)^0,w,c
  6578  0150F8  6EDA               	movwf	fsr2h,c
  6579  0150FA  0EF8               	movlw	-8
  6580  0150FC  006F FF8F FFDF     	movff	plusw1,indf2
  6581                           
  6582                           ;stkvar	_c @ sp[(-4)+-4]
  6583                           ;stkvar	_n @ sp[(-4)+-6]
  6584                           ;stkvar	_s @ sp[(-4)+0]
  6585  015102  0EFC               	movlw	-4
  6586  015104  006F FF8C  F03F    	movff	plusw1,btemp+10
  6587  01510A  0EFD               	movlw	-3
  6588  01510C  006F FF8C  F040    	movff	plusw1,btemp+11
  6589  015112  0EF6               	movlw	-10
  6590  015114  50E3               	movf	plusw1,w,c
  6591  015116  263F               	addwf	(btemp+10)^0,f,c
  6592  015118  0EF7               	movlw	-9
  6593  01511A  50E3               	movf	plusw1,w,c
  6594  01511C  2240               	addwfc	(btemp+11)^0,f,c
  6595  01511E  0EFD               	movlw	253
  6596  015120  243F               	addwf	(btemp+10)^0,w,c
  6597  015122  6ED9               	movwf	fsr2l,c
  6598  015124  0EFF               	movlw	255
  6599  015126  2040               	addwfc	(btemp+11)^0,w,c
  6600  015128  6EDA               	movwf	fsr2h,c
  6601  01512A  0EF8               	movlw	-8
  6602  01512C  006F FF8F FFDF     	movff	plusw1,indf2
  6603                           
  6604                           ;stkvar	_n @ sp[(-4)+-6]
  6605  015132  0EF7               	movlw	-9
  6606  015134  50E3               	movf	plusw1,w,c
  6607  015136  E108               	bnz	l10078
  6608  015138  0EF6               	movlw	-10
  6609  01513A  006F FF8C  F035    	movff	plusw1,btemp
  6610  015140  0E07               	movlw	7
  6611  015142  5E35               	subwf	btemp^0,f,c
  6612  015144  A0D8               	btfss	status,0,c
  6613  015146  D0C6               	goto	u10610
  6614  015148                     l10078:
  6615                           
  6616                           ;stkvar	_c @ sp[(-4)+-4]
  6617                           ;stkvar	_s @ sp[(-4)+0]
  6618  015148  0EFC               	movlw	-4
  6619  01514A  006F FF8C  F03F    	movff	plusw1,btemp+10
  6620  015150  0EFD               	movlw	-3
  6621  015152  006F FF8C  F040    	movff	plusw1,btemp+11
  6622  015158  0E03               	movlw	3
  6623  01515A  243F               	addwf	(btemp+10)^0,w,c
  6624  01515C  6ED9               	movwf	fsr2l,c
  6625  01515E  0E00               	movlw	0
  6626  015160  2040               	addwfc	(btemp+11)^0,w,c
  6627  015162  6EDA               	movwf	fsr2h,c
  6628  015164  0EF8               	movlw	-8
  6629  015166  006F FF8F FFDF     	movff	plusw1,indf2
  6630                           
  6631                           ;stkvar	_c @ sp[(-4)+-4]
  6632                           ;stkvar	_n @ sp[(-4)+-6]
  6633                           ;stkvar	_s @ sp[(-4)+0]
  6634  01516C  0EFC               	movlw	-4
  6635  01516E  006F FF8C  F03F    	movff	plusw1,btemp+10
  6636  015174  0EFD               	movlw	-3
  6637  015176  006F FF8C  F040    	movff	plusw1,btemp+11
  6638  01517C  0EF6               	movlw	-10
  6639  01517E  50E3               	movf	plusw1,w,c
  6640  015180  263F               	addwf	(btemp+10)^0,f,c
  6641  015182  0EF7               	movlw	-9
  6642  015184  50E3               	movf	plusw1,w,c
  6643  015186  2240               	addwfc	(btemp+11)^0,f,c
  6644  015188  0EFC               	movlw	252
  6645  01518A  243F               	addwf	(btemp+10)^0,w,c
  6646  01518C  6ED9               	movwf	fsr2l,c
  6647  01518E  0EFF               	movlw	255
  6648  015190  2040               	addwfc	(btemp+11)^0,w,c
  6649  015192  6EDA               	movwf	fsr2h,c
  6650  015194  0EF8               	movlw	-8
  6651  015196  006F FF8F FFDF     	movff	plusw1,indf2
  6652                           
  6653                           ;stkvar	_n @ sp[(-4)+-6]
  6654  01519C  0EF7               	movlw	-9
  6655  01519E  50E3               	movf	plusw1,w,c
  6656  0151A0  E108               	bnz	l10084
  6657  0151A2  0EF6               	movlw	-10
  6658  0151A4  006F FF8C  F035    	movff	plusw1,btemp
  6659  0151AA  0E09               	movlw	9
  6660  0151AC  5E35               	subwf	btemp^0,f,c
  6661  0151AE  A0D8               	btfss	status,0,c
  6662  0151B0  D091               	goto	u10610
  6663  0151B2                     l10084:
  6664                           
  6665                           ;stkvar	_s @ sp[(-4)+0]
  6666  0151B2  0EFC               	movlw	-4
  6667  0151B4  006F FF8C  F03F    	movff	plusw1,btemp+10
  6668  0151BA  1E3F               	comf	(btemp+10)^0,f,c
  6669  0151BC  0EFD               	movlw	-3
  6670  0151BE  006F FF8C  F040    	movff	plusw1,btemp+11
  6671  0151C4  1E40               	comf	(btemp+11)^0,f,c
  6672  0151C6  2A3F               	incf	(btemp+10)^0,f,c
  6673  0151C8  B4D8               	btfsc	status,2,c
  6674  0151CA  2A40               	incf	(btemp+11)^0,f,c
  6675  0151CC  0E03               	movlw	3
  6676  0151CE  163F               	andwf	(btemp+10)^0,f,c
  6677  0151D0  0E00               	movlw	0
  6678  0151D2  1640               	andwf	(btemp+11)^0,f,c
  6679                           
  6680                           ;stkvar	_k @ sp[(-4)+2]
  6681  0151D4  0EFE               	movlw	-2
  6682  0151D6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6683  0151DC  0EFF               	movlw	-1
  6684  0151DE  0060  F103  FFE3   	movff	btemp+11,plusw1
  6685                           
  6686                           ;stkvar	_k @ sp[(-4)+2]
  6687                           ;stkvar	_s @ sp[(-4)+0]
  6688  0151E4  0EFC               	movlw	-4
  6689  0151E6  50E3               	movf	plusw1,w,c
  6690  0151E8  6E35               	movwf	btemp^0,c
  6691  0151EA  0EFE               	movlw	-2
  6692  0151EC  50E3               	movf	plusw1,w,c
  6693  0151EE  2635               	addwf	btemp^0,f,c
  6694  0151F0  0EFC               	movlw	-4
  6695  0151F2  0060  F0D7  FFE3   	movff	btemp,plusw1
  6696  0151F8  0EFD               	movlw	-3
  6697  0151FA  50E3               	movf	plusw1,w,c
  6698  0151FC  6E35               	movwf	btemp^0,c
  6699  0151FE  0EFF               	movlw	-1
  6700  015200  50E3               	movf	plusw1,w,c
  6701  015202  2235               	addwfc	btemp^0,f,c
  6702  015204  0EFD               	movlw	-3
  6703  015206  0060  F0D7  FFE3   	movff	btemp,plusw1
  6704                           
  6705                           ;stkvar	_k @ sp[(-4)+2]
  6706                           ;stkvar	_n @ sp[(-4)+-6]
  6707  01520C  0EF6               	movlw	-10
  6708  01520E  50E3               	movf	plusw1,w,c
  6709  015210  6E35               	movwf	btemp^0,c
  6710  015212  0EFE               	movlw	-2
  6711  015214  50E3               	movf	plusw1,w,c
  6712  015216  5E35               	subwf	btemp^0,f,c
  6713  015218  0EF6               	movlw	-10
  6714  01521A  0060  F0D7  FFE3   	movff	btemp,plusw1
  6715  015220  0EF7               	movlw	-9
  6716  015222  50E3               	movf	plusw1,w,c
  6717  015224  6E35               	movwf	btemp^0,c
  6718  015226  0EFF               	movlw	-1
  6719  015228  50E3               	movf	plusw1,w,c
  6720  01522A  5A35               	subwfb	btemp^0,f,c
  6721  01522C  0EF7               	movlw	-9
  6722  01522E  0060  F0D7  FFE3   	movff	btemp,plusw1
  6723  015234  0EFC               	movlw	252
  6724  015236  6E3F               	movwf	(btemp+10)^0,c
  6725  015238  0EFF               	movlw	255
  6726  01523A  6E40               	movwf	(btemp+11)^0,c
  6727                           
  6728                           ;stkvar	_n @ sp[(-4)+-6]
  6729  01523C  0EF6               	movlw	-10
  6730  01523E  006F FF8C  F035    	movff	plusw1,btemp
  6731  015244  503F               	movf	(btemp+10)^0,w,c
  6732  015246  1635               	andwf	btemp^0,f,c
  6733  015248  0EF6               	movlw	-10
  6734  01524A  0060  F0D7  FFE3   	movff	btemp,plusw1
  6735  015250  0EF7               	movlw	-9
  6736  015252  006F FF8C  F035    	movff	plusw1,btemp
  6737  015258  5040               	movf	(btemp+11)^0,w,c
  6738  01525A  1635               	andwf	btemp^0,f,c
  6739  01525C  0EF7               	movlw	-9
  6740  01525E  D02E               	goto	L4
  6741  015260                     l10092:
  6742                           
  6743                           ;stkvar	_c @ sp[(-4)+-4]
  6744                           ;stkvar	_s @ sp[(-4)+0]
  6745  015260  0EFC               	movlw	-4
  6746  015262  006F FF8F FFD9     	movff	plusw1,fsr2l
  6747  015268  0EFD               	movlw	-3
  6748  01526A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6749  015270  0EF8               	movlw	-8
  6750  015272  006F FF8F FFDF     	movff	plusw1,indf2
  6751                           
  6752                           ;stkvar	_n @ sp[(-4)+-6]
  6753  015278  0EF6               	movlw	-10
  6754  01527A  006F FF8C  F035    	movff	plusw1,btemp
  6755  015280  0E01               	movlw	1
  6756  015282  5E35               	subwf	btemp^0,f,c
  6757  015284  0EF6               	movlw	-10
  6758  015286  0060  F0D7  FFE3   	movff	btemp,plusw1
  6759  01528C  0EF7               	movlw	-9
  6760  01528E  006F FF8C  F035    	movff	plusw1,btemp
  6761  015294  0E00               	movlw	0
  6762  015296  5A35               	subwfb	btemp^0,f,c
  6763  015298  0EF7               	movlw	-9
  6764  01529A  0060  F0D7  FFE3   	movff	btemp,plusw1
  6765                           
  6766                           ;stkvar	_s @ sp[(-4)+0]
  6767  0152A0  0EFC               	movlw	-4
  6768  0152A2  50E3               	movf	plusw1,w,c
  6769  0152A4  0F01               	addlw	1
  6770  0152A6  6E35               	movwf	btemp^0,c
  6771  0152A8  0EFC               	movlw	-4
  6772  0152AA  0060  F0D7  FFE3   	movff	btemp,plusw1
  6773  0152B0  6A35               	clrf	btemp^0,c
  6774  0152B2  0EFD               	movlw	-3
  6775  0152B4  50E3               	movf	plusw1,w,c
  6776  0152B6  2035               	addwfc	btemp^0,w,c
  6777  0152B8  6E35               	movwf	btemp^0,c
  6778  0152BA  0EFD               	movlw	-3
  6779  0152BC                     L4:
  6780  0152BC  0060  F0D7  FFE3   	movff	btemp,plusw1
  6781                           
  6782                           ;stkvar	_n @ sp[(-4)+-6]
  6783  0152C2  0EF6               	movlw	-10
  6784  0152C4  006F FF8C  F035    	movff	plusw1,btemp
  6785  0152CA  0EF7               	movlw	-9
  6786  0152CC  50E3               	movf	plusw1,w,c
  6787  0152CE  1035               	iorwf	btemp^0,w,c
  6788  0152D0  A4D8               	btfss	status,2,c
  6789  0152D2  D7C6               	goto	l10092
  6790  0152D4                     u10610:
  6791                           
  6792                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6793  0152D4  0EF6               	movlw	246
  6794  0152D6  26E1               	addwf	fsr1l,f,c
  6795  0152D8  0EFF               	movlw	255
  6796  0152DA  22E2               	addwfc	fsr1h,f,c
  6797  0152DC  0012               	return		;funcret
  6798  0152DE                     __end_of_memset:
  6799                           	opt callstack 0
  6800                           
  6801 ;; *************** function _printf *****************
  6802 ;; Defined at:
  6803 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  fmt             2  [STACK] PTR const unsigned char 
  6806 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  ap              2  [STACK] PTR void [1]
  6809 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6810 ;;  ret             2    0        int 
  6811 ;; Return value:  Size  Location     Type
  6812 ;;                  2  [STACK] int 
  6813 ;; Registers used:
  6814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6815 ;; Tracked objects:
  6816 ;;		On entry : 3F/3B
  6817 ;;		On exit  : 0/0
  6818 ;;		Unchanged: 0/0
  6819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6824 ;;Total ram usage:        0 bytes
  6825 ;; Hardware stack levels used:    1
  6826 ;; Hardware stack levels required when called:   14
  6827 ;; This function calls:
  6828 ;;		_vfprintf
  6829 ;; This function is called by:
  6830 ;;		_eaDogM_WriteString
  6831 ;;		_send_lcd_cmd_dma
  6832 ;; This function uses a reentrant model
  6833 ;;
  6834                           
  6835                           	psect	text33
  6836  0181A0                     __ptext33:
  6837                           	opt callstack 0
  6838  0181A0                     _printf:
  6839                           	opt callstack 0
  6840                           
  6841                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6842  0181A0  52E6               	movf	postinc1,f,c
  6843  0181A2  52E6               	movf	postinc1,f,c
  6844                           
  6845                           ;stkvar	?_printf @ sp[(-2)+-3]
  6846                           
  6847                           ;incstack = 0
  6848  0181A4  0EFB               	movlw	251
  6849  0181A6  24E1               	addwf	fsr1l,w,c
  6850  0181A8  6E3F               	movwf	(btemp+10)^0,c
  6851  0181AA  0EFF               	movlw	255
  6852  0181AC  20E2               	addwfc	fsr1h,w,c
  6853  0181AE  6E40               	movwf	(btemp+11)^0,c
  6854                           
  6855                           ;stkvar	_ap @ sp[(-2)+0]
  6856  0181B0  0EFF               	movlw	-1
  6857  0181B2  0060  F103  FFE3   	movff	btemp+11,plusw1
  6858  0181B8  0EFE               	movlw	-2
  6859  0181BA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6860                           
  6861                           ;stkvar	_ap @ sp[(-2)+0]
  6862  0181C0  0EFE               	movlw	254
  6863  0181C2  24E1               	addwf	fsr1l,w,c
  6864  0181C4  6E35               	movwf	btemp^0,c
  6865  0181C6  0EFF               	movlw	255
  6866  0181C8  20E2               	addwfc	fsr1h,w,c
  6867  0181CA  6E36               	movwf	(btemp+1)^0,c
  6868  0181CC  0060  F0D7  FFE6   	movff	btemp,postinc1
  6869  0181D2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6870                           
  6871                           ;stkvar	_fmt @ sp[(-4)+-3]
  6872  0181D8  0EF9               	movlw	-7
  6873  0181DA  006F FF8F FFE6     	movff	plusw1,postinc1
  6874  0181E0  006F FF8F FFE6     	movff	plusw1,postinc1
  6875  0181E6  0E00               	movlw	0
  6876  0181E8  6EE6               	movwf	postinc1,c
  6877  0181EA  0E00               	movlw	0
  6878  0181EC  6EE6               	movwf	postinc1,c
  6879  0181EE  EC41  F0BC         	call	_vfprintf	;wreg free
  6880                           
  6881                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  6882  0181F2  52E5               	movf	postdec1,f,c
  6883  0181F4  52E5               	movf	postdec1,f,c
  6884  0181F6  52E5               	movf	postdec1,f,c
  6885  0181F8  50E7               	movf	indf1,w,c
  6886  0181FA  5EE1               	subwf	fsr1l,f,c
  6887  0181FC  0E00               	movlw	0
  6888  0181FE  5AE2               	subwfb	fsr1h,f,c
  6889  018200  0012               	return		;funcret
  6890  018202                     __end_of_printf:
  6891                           	opt callstack 0
  6892                           
  6893 ;; *************** function _vfprintf *****************
  6894 ;; Defined at:
  6895 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6896 ;; Parameters:    Size  Location     Type
  6897 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6898 ;;		 -> f(6), NULL(0), 
  6899 ;;  fmt             2  [STACK] PTR const unsigned char 
  6900 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  6901 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  6902 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  6903 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  6904 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
  6905 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  6906 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  6907 ;;  ap              2  [STACK] PTR PTR void 
  6908 ;;		 -> ap(2), ap(2), 
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;  cfmt            2  [STACK] PTR unsigned char 
  6911 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  6912 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  6913 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  6914 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  6915 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
  6916 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  6917 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  2  [STACK] int 
  6920 ;; Registers used:
  6921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/4
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6931 ;;Total ram usage:        0 bytes
  6932 ;; Hardware stack levels used:    1
  6933 ;; Hardware stack levels required when called:   13
  6934 ;; This function calls:
  6935 ;;		_vfpfcnvrt
  6936 ;; This function is called by:
  6937 ;;		_sprintf
  6938 ;;		_printf
  6939 ;; This function uses a reentrant model
  6940 ;;
  6941                           
  6942                           	psect	text34
  6943  017882                     __ptext34:
  6944                           	opt callstack 0
  6945  017882                     _vfprintf:
  6946                           	opt callstack 0
  6947                           
  6948                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6949  017882  52E6               	movf	postinc1,f,c
  6950  017884  52E6               	movf	postinc1,f,c
  6951                           
  6952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6953                           ;stkvar	_fmt @ sp[(-2)+-4]
  6954                           
  6955                           ;incstack = 0
  6956  017886  0EFA               	movlw	-6
  6957  017888  006F FF8C  F03F    	movff	plusw1,btemp+10
  6958  01788E  0EFB               	movlw	-5
  6959  017890  006F FF8C  F040    	movff	plusw1,btemp+11
  6960                           
  6961                           ;stkvar	_cfmt @ sp[(-2)+0]
  6962  017896  0EFF               	movlw	-1
  6963  017898  0060  F103  FFE3   	movff	btemp+11,plusw1
  6964  01789E  0EFE               	movlw	-2
  6965  0178A0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6966                           
  6967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6968  0178A6  6A1C               	clrf	_nout^0,c
  6969  0178A8  6A1D               	clrf	(_nout+1)^0,c
  6970                           
  6971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6972  0178AA  D020               	goto	l10106
  6973  0178AC                     l10104:
  6974                           
  6975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6976                           ;stkvar	_ap @ sp[(-2)+-6]
  6977  0178AC  0EF8               	movlw	-8
  6978  0178AE  006F FF8F FFE6     	movff	plusw1,postinc1
  6979  0178B4  006F FF8F FFE6     	movff	plusw1,postinc1
  6980                           
  6981                           ;stkvar	_cfmt @ sp[(-4)+0]
  6982  0178BA  0EFC               	movlw	252
  6983  0178BC  24E1               	addwf	fsr1l,w,c
  6984  0178BE  6E35               	movwf	btemp^0,c
  6985  0178C0  0EFF               	movlw	255
  6986  0178C2  20E2               	addwfc	fsr1h,w,c
  6987  0178C4  6E36               	movwf	(btemp+1)^0,c
  6988  0178C6  0060  F0D7  FFE6   	movff	btemp,postinc1
  6989  0178CC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6990                           
  6991                           ;stkvar	_fp @ sp[(-6)+-2]
  6992  0178D2  0EF8               	movlw	-8
  6993  0178D4  006F FF8F FFE6     	movff	plusw1,postinc1
  6994  0178DA  006F FF8F FFE6     	movff	plusw1,postinc1
  6995  0178E0  EC22  F089         	call	_vfpfcnvrt	;wreg free
  6996  0178E4  5035               	movf	btemp^0,w,c
  6997  0178E6  261C               	addwf	_nout^0,f,c
  6998  0178E8  5036               	movf	(btemp+1)^0,w,c
  6999  0178EA  221D               	addwfc	(_nout+1)^0,f,c
  7000  0178EC                     l10106:
  7001                           
  7002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7003                           ;stkvar	_cfmt @ sp[(-2)+0]
  7004  0178EC  50E1               	movf	fsr1l,w,c
  7005  0178EE  0FFE               	addlw	-2
  7006  0178F0  6ED9               	movwf	fsr2l,c
  7007  0178F2  50E2               	movf	fsr1h,w,c
  7008  0178F4  6EDA               	movwf	fsr2h,c
  7009  0178F6  0EFF               	movlw	255
  7010  0178F8  22DA               	addwfc	fsr2h,f,c
  7011  0178FA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7012  017900  006F FF77 FFF7     	movff	postdec2,tblptrh
  7013  017906                     	if	0	;tblptru may be non-zero
  7014  017906                     	endif
  7015  017906                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7016  017906  0E00               	movlw	low (__mediumconst shr (0+16))
  7017  017908  6EF8               	movwf	tblptru,c
  7018  01790A                     	endif
  7019  01790A  0008               	tblrd		*
  7020  01790C  50F5               	movf	tablat,w,c
  7021  01790E  0900               	iorlw	0
  7022  017910  A4D8               	btfss	status,2,c
  7023  017912  D7CC               	goto	l10104
  7024                           
  7025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7026  017914  0060  F070  F035   	movff	_nout,btemp
  7027  01791A  0060  F074  F036   	movff	_nout+1,btemp+1
  7028                           
  7029                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7030  017920  0EF8               	movlw	248
  7031  017922  26E1               	addwf	fsr1l,f,c
  7032  017924  0EFF               	movlw	255
  7033  017926  22E2               	addwfc	fsr1h,f,c
  7034  017928  0012               	return		;funcret
  7035  01792A                     __end_of_vfprintf:
  7036                           	opt callstack 0
  7037                           
  7038 ;; *************** function _vfpfcnvrt *****************
  7039 ;; Defined at:
  7040 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7043 ;;		 -> f(6), NULL(0), 
  7044 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7045 ;;		 -> cfmt(2), 
  7046 ;;  ap              2  [STACK] PTR PTR void 
  7047 ;;		 -> ap(2), ap(2), 
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;  llu             8  [STACK] unsigned long long 
  7050 ;;  ll              8  [STACK] long long 
  7051 ;;  f               4  [STACK] long long 
  7052 ;;  ct              3  [STACK] unsigned char [3]
  7053 ;;  vp              3    0        PTR void 
  7054 ;;  cp              2  [STACK] PTR unsigned char 
  7055 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  7056 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  7057 ;;		 -> STR_3(5), V(187), 
  7058 ;;  i               2    0        int 
  7059 ;;  done            2    0        int 
  7060 ;;  c               1  [STACK] unsigned char 
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  2  [STACK] int 
  7063 ;; Registers used:
  7064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/4
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7074 ;;Total ram usage:        0 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; Hardware stack levels required when called:   12
  7077 ;; This function calls:
  7078 ;;		_atoi
  7079 ;;		_ctoa
  7080 ;;		_dtoa
  7081 ;;		_efgtoa
  7082 ;;		_fputc
  7083 ;;		_isdigit
  7084 ;;		_isupper
  7085 ;;		_stoa
  7086 ;;		_strncmp
  7087 ;;		_tolower
  7088 ;;		_utoa
  7089 ;;		_xtoa
  7090 ;; This function is called by:
  7091 ;;		_vfprintf
  7092 ;; This function uses a reentrant model
  7093 ;;
  7094                           
  7095                           	psect	text35
  7096  011244                     __ptext35:
  7097                           	opt callstack 0
  7098  011244                     _vfpfcnvrt:
  7099                           	opt callstack 0
  7100                           
  7101                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7102  011244  0E20               	movlw	32
  7103  011246  26E1               	addwf	fsr1l,f,c
  7104  011248  0E00               	movlw	0
  7105  01124A  22E2               	addwfc	fsr1h,f,c
  7106                           
  7107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7108                           ;stkvar	_fmt @ sp[(-32)+-4]
  7109                           
  7110                           ;incstack = 0
  7111  01124C  0EDC               	movlw	-36
  7112  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7113  011254  0EDD               	movlw	-35
  7114  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7115  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7116  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7117  011268                     	if	0	;tblptru may be non-zero
  7118  011268                     	endif
  7119  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7120  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7121  01126A  6EF8               	movwf	tblptru,c
  7122  01126C                     	endif
  7123  01126C  0008               	tblrd		*
  7124  01126E  50F5               	movf	tablat,w,c
  7125  011270  0A25               	xorlw	37
  7126  011272  A4D8               	btfss	status,2,c
  7127  011274  EFC9  F090         	goto	l10050
  7128                           
  7129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7130                           ;stkvar	_fmt @ sp[(-32)+-4]
  7131  011278  0EDC               	movlw	-36
  7132  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7133  011280  0EDD               	movlw	-35
  7134  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7135  011288  2ADE               	incf	postinc2,f,c
  7136  01128A  0E00               	movlw	0
  7137  01128C  22DD               	addwfc	postdec2,f,c
  7138                           
  7139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7140  01128E  6A1E               	clrf	_width^0,c
  7141  011290  6A1F               	clrf	(_width+1)^0,c
  7142  011292  6A22               	clrf	_flags^0,c
  7143  011294  6A23               	clrf	(_flags+1)^0,c
  7144                           
  7145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7146  011296  6820               	setf	_prec^0,c
  7147  011298  6821               	setf	(_prec+1)^0,c
  7148                           
  7149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7150                           ;stkvar	_fmt @ sp[(-32)+-4]
  7151  01129A  0EDC               	movlw	-36
  7152  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7153  0112A2  0EDD               	movlw	-35
  7154  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7155  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7156  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7157  0112B6                     	if	0	;tblptru may be non-zero
  7158  0112B6                     	endif
  7159  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7160  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7161  0112B8  6EF8               	movwf	tblptru,c
  7162  0112BA                     	endif
  7163  0112BA  0008               	tblrd		*
  7164  0112BC  50F5               	movf	tablat,w,c
  7165  0112BE  0A2A               	xorlw	42
  7166  0112C0  A4D8               	btfss	status,2,c
  7167  0112C2  D031               	goto	l9868
  7168                           
  7169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7170                           ;stkvar	_fmt @ sp[(-32)+-4]
  7171  0112C4  0EDC               	movlw	-36
  7172  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7173  0112CC  0EDD               	movlw	-35
  7174  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7175  0112D4  2ADE               	incf	postinc2,f,c
  7176  0112D6  0E00               	movlw	0
  7177  0112D8  22DD               	addwfc	postdec2,f,c
  7178                           
  7179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7180                           ;stkvar	_ap @ sp[(-32)+-6]
  7181  0112DA  0EDA               	movlw	-38
  7182  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7183  0112E2  0EDB               	movlw	-37
  7184  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7185  0112EA  0E02               	movlw	2
  7186  0112EC  5EDE               	subwf	postinc2,f,c
  7187  0112EE  0E00               	movlw	0
  7188  0112F0  5ADD               	subwfb	postdec2,f,c
  7189  0112F2  006F FF78  F03F    	movff	postinc2,btemp+10
  7190  0112F8  006F FF74  F040    	movff	postdec2,btemp+11
  7191  0112FE  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7192  011304  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7193  01130A  006F FF78  F01E    	movff	postinc2,_width
  7194  011310  006F FF74  F01F    	movff	postdec2,_width+1
  7195                           
  7196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7197  011316  AE1F               	btfss	(_width+1)^0,7,c
  7198  011318  D066               	goto	u10310
  7199                           
  7200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7201  01131A  8022               	bsf	_flags^0,0,c
  7202                           
  7203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7204  01131C  6C1E               	negf	_width^0,c
  7205  01131E  1E1F               	comf	(_width+1)^0,f,c
  7206  011320  B0D8               	btfsc	status,0,c
  7207  011322  2A1F               	incf	(_width+1)^0,f,c
  7208  011324  D060               	goto	u10310
  7209  011326                     l9868:
  7210                           
  7211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7212                           ;stkvar	_fmt @ sp[(-32)+-4]
  7213  011326  0EDC               	movlw	-36
  7214  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7215  01132E  0EDD               	movlw	-35
  7216  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7217  011336  006F FF78  F03F    	movff	postinc2,btemp+10
  7218  01133C  006F FF74  F040    	movff	postdec2,btemp+11
  7219  011342  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7220  011348  0060  F103  FFE6   	movff	btemp+11,postinc1
  7221  01134E  EC0E  F0AC         	call	_atoi	;wreg free
  7222  011352  0060  F0D4  F01E   	movff	btemp,_width
  7223  011358  0060  F0D8  F01F   	movff	btemp+1,_width+1
  7224                           
  7225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7226  01135E  D00B               	goto	l9872
  7227  011360                     l9870:
  7228                           
  7229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7230                           ;stkvar	_fmt @ sp[(-32)+-4]
  7231  011360  0EDC               	movlw	-36
  7232  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7233  011368  0EDD               	movlw	-35
  7234  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7235  011370  2ADE               	incf	postinc2,f,c
  7236  011372  0E00               	movlw	0
  7237  011374  22DD               	addwfc	postdec2,f,c
  7238  011376                     l9872:
  7239  011376  0ED0               	movlw	208
  7240  011378  6E3F               	movwf	(btemp+10)^0,c
  7241  01137A  0EFF               	movlw	255
  7242  01137C  6E40               	movwf	(btemp+11)^0,c
  7243                           
  7244                           ;stkvar	_fmt @ sp[(-32)+-4]
  7245  01137E  0EDC               	movlw	-36
  7246  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7247  011386  0EDD               	movlw	-35
  7248  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7249  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7250  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7251  01139A                     	if	0	;tblptru may be non-zero
  7252  01139A                     	endif
  7253  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7254  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7255  01139C  6EF8               	movwf	tblptru,c
  7256  01139E                     	endif
  7257  01139E  0008               	tblrd		*
  7258  0113A0  50F5               	movf	tablat,w,c
  7259  0113A2  6E3D               	movwf	(btemp+8)^0,c
  7260  0113A4  6A3E               	clrf	(btemp+9)^0,c
  7261  0113A6  503F               	movf	(btemp+10)^0,w,c
  7262  0113A8  263D               	addwf	(btemp+8)^0,f,c
  7263  0113AA  5040               	movf	(btemp+11)^0,w,c
  7264  0113AC  223E               	addwfc	(btemp+9)^0,f,c
  7265  0113AE  503E               	movf	(btemp+9)^0,w,c
  7266  0113B0  E106               	bnz	u10290
  7267  0113B2  0E0A               	movlw	10
  7268  0113B4  5C3D               	subwf	(btemp+8)^0,w,c
  7269  0113B6  B0D8               	btfsc	status,0,c
  7270  0113B8  D002               	goto	u10290
  7271  0113BA  0E01               	movlw	1
  7272  0113BC  D001               	goto	u10300
  7273  0113BE                     u10290:
  7274  0113BE  0E00               	movlw	0
  7275  0113C0                     u10300:
  7276  0113C0  6E3F               	movwf	(btemp+10)^0,c
  7277  0113C2  6A40               	clrf	(btemp+11)^0,c
  7278                           
  7279                           ;stkvar	_vfpfcnvrt$4255 @ sp[(-32)+4]
  7280  0113C4  0EE4               	movlw	-28
  7281  0113C6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7282  0113CC  0EE5               	movlw	-27
  7283  0113CE  0060  F103  FFE3   	movff	btemp+11,plusw1
  7284                           
  7285                           ;stkvar	_vfpfcnvrt$4255 @ sp[(-32)+4]
  7286  0113D4  0EE4               	movlw	-28
  7287  0113D6  006F FF8C  F035    	movff	plusw1,btemp
  7288  0113DC  0EE5               	movlw	-27
  7289  0113DE  50E3               	movf	plusw1,w,c
  7290  0113E0  1035               	iorwf	btemp^0,w,c
  7291  0113E2  A4D8               	btfss	status,2,c
  7292  0113E4  D7BD               	goto	l9870
  7293  0113E6                     u10310:
  7294                           
  7295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7296                           ;stkvar	_fmt @ sp[(-32)+-4]
  7297  0113E6  0EDC               	movlw	-36
  7298  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7299  0113EE  0EDD               	movlw	-35
  7300  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7301  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7302  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7303  011402                     	if	0	;tblptru may be non-zero
  7304  011402                     	endif
  7305  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7306  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7307  011404  6EF8               	movwf	tblptru,c
  7308  011406                     	endif
  7309  011406  0008               	tblrd		*
  7310  011408  50F5               	movf	tablat,w,c
  7311  01140A  0A2E               	xorlw	46
  7312  01140C  A4D8               	btfss	status,2,c
  7313  01140E  D0AC               	goto	u10360
  7314                           
  7315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7316  011410  6A20               	clrf	_prec^0,c
  7317  011412  6A21               	clrf	(_prec+1)^0,c
  7318                           
  7319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7320                           ;stkvar	_fmt @ sp[(-32)+-4]
  7321  011414  0EDC               	movlw	-36
  7322  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7323  01141C  0EDD               	movlw	-35
  7324  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7325  011424  2ADE               	incf	postinc2,f,c
  7326  011426  0E00               	movlw	0
  7327  011428  22DD               	addwfc	postdec2,f,c
  7328                           
  7329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7330                           ;stkvar	_fmt @ sp[(-32)+-4]
  7331  01142A  0EDC               	movlw	-36
  7332  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7333  011432  0EDD               	movlw	-35
  7334  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7335  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7336  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7337  011446                     	if	0	;tblptru may be non-zero
  7338  011446                     	endif
  7339  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7340  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7341  011448  6EF8               	movwf	tblptru,c
  7342  01144A                     	endif
  7343  01144A  0008               	tblrd		*
  7344  01144C  50F5               	movf	tablat,w,c
  7345  01144E  0A2A               	xorlw	42
  7346  011450  A4D8               	btfss	status,2,c
  7347  011452  D02A               	goto	l9890
  7348                           
  7349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7350                           ;stkvar	_fmt @ sp[(-32)+-4]
  7351  011454  0EDC               	movlw	-36
  7352  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7353  01145C  0EDD               	movlw	-35
  7354  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7355  011464  2ADE               	incf	postinc2,f,c
  7356  011466  0E00               	movlw	0
  7357  011468  22DD               	addwfc	postdec2,f,c
  7358                           
  7359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7360                           ;stkvar	_ap @ sp[(-32)+-6]
  7361  01146A  0EDA               	movlw	-38
  7362  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7363  011472  0EDB               	movlw	-37
  7364  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7365  01147A  0E02               	movlw	2
  7366  01147C  5EDE               	subwf	postinc2,f,c
  7367  01147E  0E00               	movlw	0
  7368  011480  5ADD               	subwfb	postdec2,f,c
  7369  011482  006F FF78  F03F    	movff	postinc2,btemp+10
  7370  011488  006F FF74  F040    	movff	postdec2,btemp+11
  7371  01148E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7372  011494  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7373  01149A  006F FF78  F020    	movff	postinc2,_prec
  7374  0114A0  006F FF74  F021    	movff	postdec2,_prec+1
  7375                           
  7376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7377  0114A6  D060               	goto	u10360
  7378  0114A8                     l9890:
  7379                           
  7380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7381                           ;stkvar	_fmt @ sp[(-32)+-4]
  7382  0114A8  0EDC               	movlw	-36
  7383  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7384  0114B0  0EDD               	movlw	-35
  7385  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7386  0114B8  006F FF78  F03F    	movff	postinc2,btemp+10
  7387  0114BE  006F FF74  F040    	movff	postdec2,btemp+11
  7388  0114C4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7389  0114CA  0060  F103  FFE6   	movff	btemp+11,postinc1
  7390  0114D0  EC0E  F0AC         	call	_atoi	;wreg free
  7391  0114D4  0060  F0D4  F020   	movff	btemp,_prec
  7392  0114DA  0060  F0D8  F021   	movff	btemp+1,_prec+1
  7393                           
  7394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7395  0114E0  D00B               	goto	l9894
  7396  0114E2                     l9892:
  7397                           
  7398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7399                           ;stkvar	_fmt @ sp[(-32)+-4]
  7400  0114E2  0EDC               	movlw	-36
  7401  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7402  0114EA  0EDD               	movlw	-35
  7403  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7404  0114F2  2ADE               	incf	postinc2,f,c
  7405  0114F4  0E00               	movlw	0
  7406  0114F6  22DD               	addwfc	postdec2,f,c
  7407  0114F8                     l9894:
  7408  0114F8  0ED0               	movlw	208
  7409  0114FA  6E3F               	movwf	(btemp+10)^0,c
  7410  0114FC  0EFF               	movlw	255
  7411  0114FE  6E40               	movwf	(btemp+11)^0,c
  7412                           
  7413                           ;stkvar	_fmt @ sp[(-32)+-4]
  7414  011500  0EDC               	movlw	-36
  7415  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7416  011508  0EDD               	movlw	-35
  7417  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7418  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7419  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7420  01151C                     	if	0	;tblptru may be non-zero
  7421  01151C                     	endif
  7422  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7423  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7424  01151E  6EF8               	movwf	tblptru,c
  7425  011520                     	endif
  7426  011520  0008               	tblrd		*
  7427  011522  50F5               	movf	tablat,w,c
  7428  011524  6E3D               	movwf	(btemp+8)^0,c
  7429  011526  6A3E               	clrf	(btemp+9)^0,c
  7430  011528  503F               	movf	(btemp+10)^0,w,c
  7431  01152A  263D               	addwf	(btemp+8)^0,f,c
  7432  01152C  5040               	movf	(btemp+11)^0,w,c
  7433  01152E  223E               	addwfc	(btemp+9)^0,f,c
  7434  011530  503E               	movf	(btemp+9)^0,w,c
  7435  011532  E106               	bnz	u10340
  7436  011534  0E0A               	movlw	10
  7437  011536  5C3D               	subwf	(btemp+8)^0,w,c
  7438  011538  B0D8               	btfsc	status,0,c
  7439  01153A  D002               	goto	u10340
  7440  01153C  0E01               	movlw	1
  7441  01153E  D001               	goto	u10350
  7442  011540                     u10340:
  7443  011540  0E00               	movlw	0
  7444  011542                     u10350:
  7445  011542  6E3F               	movwf	(btemp+10)^0,c
  7446  011544  6A40               	clrf	(btemp+11)^0,c
  7447                           
  7448                           ;stkvar	_vfpfcnvrt$4256 @ sp[(-32)+0]
  7449  011546  0EE0               	movlw	-32
  7450  011548  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7451  01154E  0EE1               	movlw	-31
  7452  011550  0060  F103  FFE3   	movff	btemp+11,plusw1
  7453                           
  7454                           ;stkvar	_vfpfcnvrt$4256 @ sp[(-32)+0]
  7455  011556  0EE0               	movlw	-32
  7456  011558  006F FF8C  F035    	movff	plusw1,btemp
  7457  01155E  0EE1               	movlw	-31
  7458  011560  50E3               	movf	plusw1,w,c
  7459  011562  1035               	iorwf	btemp^0,w,c
  7460  011564  A4D8               	btfss	status,2,c
  7461  011566  D7BD               	goto	l9892
  7462  011568                     u10360:
  7463                           
  7464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7465                           ;stkvar	_fmt @ sp[(-32)+-4]
  7466  011568  0EDC               	movlw	-36
  7467  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7468  011570  0EDD               	movlw	-35
  7469  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7470  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7471  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7472  011584                     	if	0	;tblptru may be non-zero
  7473  011584                     	endif
  7474  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7475  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7476  011586  6EF8               	movwf	tblptru,c
  7477  011588                     	endif
  7478  011588  0008               	tblrd		*
  7479  01158A  50F5               	movf	tablat,w,c
  7480  01158C  6EE6               	movwf	postinc1,c
  7481  01158E  0E00               	movlw	0
  7482  011590  6EE6               	movwf	postinc1,c
  7483  011592  ECE9  F0BE         	call	_tolower	;wreg free
  7484                           
  7485                           ;stkvar	_ct @ sp[(-32)+26]
  7486  011596  0EFA               	movlw	-6
  7487  011598  0060  F0D7  FFE3   	movff	btemp,plusw1
  7488                           
  7489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7490                           ;stkvar	_ct @ sp[(-32)+26]
  7491  01159E  0EFA               	movlw	-6
  7492  0115A0  50E3               	movf	plusw1,w,c
  7493  0115A2  B4D8               	btfsc	status,2,c
  7494  0115A4  D05B               	goto	l9910
  7495                           
  7496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7497                           ;stkvar	_ct @ sp[(-32)+26]
  7498  0115A6  0EFB               	movlw	251
  7499  0115A8  24E1               	addwf	fsr1l,w,c
  7500  0115AA  6ED9               	movwf	fsr2l,c
  7501  0115AC  0EFF               	movlw	255
  7502  0115AE  20E2               	addwfc	fsr1h,w,c
  7503  0115B0  6EDA               	movwf	fsr2h,c
  7504                           
  7505                           ;stkvar	_fmt @ sp[(-32)+-4]
  7506  0115B2  0EDC               	movlw	-36
  7507  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7508  0115BA  0EDD               	movlw	-35
  7509  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7510  0115C2  006F FFB8  F03F    	movff	postinc0,btemp+10
  7511  0115C8  006F FFB4  F040    	movff	postdec0,btemp+11
  7512  0115CE  0E01               	movlw	1
  7513  0115D0  263F               	addwf	(btemp+10)^0,f,c
  7514  0115D2  0E00               	movlw	0
  7515  0115D4  2240               	addwfc	(btemp+11)^0,f,c
  7516  0115D6  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7517  0115DC  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7518  0115E2                     	if	0	;tblptru may be non-zero
  7519  0115E2                     	endif
  7520  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7521  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7522  0115E4  6EF8               	movwf	tblptru,c
  7523  0115E6                     	endif
  7524  0115E6  0008               	tblrd		*
  7525  0115E8  50F5               	movf	tablat,w,c
  7526  0115EA  6EE6               	movwf	postinc1,c
  7527  0115EC  0E00               	movlw	0
  7528  0115EE  6EE6               	movwf	postinc1,c
  7529  0115F0  ECE9  F0BE         	call	_tolower	;wreg free
  7530  0115F4  5035               	movf	btemp^0,w,c
  7531  0115F6  6EDF               	movwf	indf2,c
  7532                           
  7533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7534                           ;stkvar	_ct @ sp[(-32)+26]
  7535  0115F8  0EFB               	movlw	251
  7536  0115FA  24E1               	addwf	fsr1l,w,c
  7537  0115FC  6ED9               	movwf	fsr2l,c
  7538  0115FE  0EFF               	movlw	255
  7539  011600  20E2               	addwfc	fsr1h,w,c
  7540  011602  6EDA               	movwf	fsr2h,c
  7541  011604  50DF               	movf	indf2,w,c
  7542  011606  B4D8               	btfsc	status,2,c
  7543  011608  D029               	goto	l9910
  7544                           
  7545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7546                           ;stkvar	_ct @ sp[(-32)+26]
  7547  01160A  0EFC               	movlw	252
  7548  01160C  24E1               	addwf	fsr1l,w,c
  7549  01160E  6ED9               	movwf	fsr2l,c
  7550  011610  0EFF               	movlw	255
  7551  011612  20E2               	addwfc	fsr1h,w,c
  7552  011614  6EDA               	movwf	fsr2h,c
  7553                           
  7554                           ;stkvar	_fmt @ sp[(-32)+-4]
  7555  011616  0EDC               	movlw	-36
  7556  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7557  01161E  0EDD               	movlw	-35
  7558  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7559  011626  006F FFB8  F03F    	movff	postinc0,btemp+10
  7560  01162C  006F FFB4  F040    	movff	postdec0,btemp+11
  7561  011632  0E02               	movlw	2
  7562  011634  263F               	addwf	(btemp+10)^0,f,c
  7563  011636  0E00               	movlw	0
  7564  011638  2240               	addwfc	(btemp+11)^0,f,c
  7565  01163A  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7566  011640  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7567  011646                     	if	0	;tblptru may be non-zero
  7568  011646                     	endif
  7569  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7570  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7571  011648  6EF8               	movwf	tblptru,c
  7572  01164A                     	endif
  7573  01164A  0008               	tblrd		*
  7574  01164C  50F5               	movf	tablat,w,c
  7575  01164E  6EE6               	movwf	postinc1,c
  7576  011650  0E00               	movlw	0
  7577  011652  6EE6               	movwf	postinc1,c
  7578  011654  ECE9  F0BE         	call	_tolower	;wreg free
  7579  011658  5035               	movf	btemp^0,w,c
  7580  01165A  6EDF               	movwf	indf2,c
  7581  01165C                     l9910:
  7582                           
  7583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7584                           ;stkvar	_fmt @ sp[(-32)+-4]
  7585  01165C  0EDC               	movlw	-36
  7586  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7587  011664  0EDD               	movlw	-35
  7588  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7589  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7590  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7591  011678                     	if	0	;tblptru may be non-zero
  7592  011678                     	endif
  7593  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7594  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7595  01167A  6EF8               	movwf	tblptru,c
  7596  01167C                     	endif
  7597  01167C  0008               	tblrd		*
  7598  01167E  50F5               	movf	tablat,w,c
  7599  011680  0A63               	xorlw	99
  7600  011682  A4D8               	btfss	status,2,c
  7601  011684  D037               	goto	l9920
  7602                           
  7603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7604                           ;stkvar	_fmt @ sp[(-32)+-4]
  7605  011686  0EDC               	movlw	-36
  7606  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7607  01168E  0EDD               	movlw	-35
  7608  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7609  011696  2ADE               	incf	postinc2,f,c
  7610  011698  0E00               	movlw	0
  7611  01169A  22DD               	addwfc	postdec2,f,c
  7612                           
  7613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7614                           ;stkvar	_ap @ sp[(-32)+-6]
  7615  01169C  0EDA               	movlw	-38
  7616  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7617  0116A4  0EDB               	movlw	-37
  7618  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7619  0116AC  0E02               	movlw	2
  7620  0116AE  5EDE               	subwf	postinc2,f,c
  7621  0116B0  0E00               	movlw	0
  7622  0116B2  5ADD               	subwfb	postdec2,f,c
  7623  0116B4  006F FF78  F03F    	movff	postinc2,btemp+10
  7624  0116BA  006F FF74  F040    	movff	postdec2,btemp+11
  7625  0116C0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7626  0116C6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7627  0116CC  50DF               	movf	indf2,w,c
  7628  0116CE  6E40               	movwf	(btemp+11)^0,c
  7629                           
  7630                           ;stkvar	_c @ sp[(-32)+31]
  7631  0116D0  0EFF               	movlw	-1
  7632  0116D2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7633                           
  7634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7635                           ;stkvar	_c @ sp[(-32)+31]
  7636  0116D8  0EFF               	movlw	-1
  7637  0116DA  50E3               	movf	plusw1,w,c
  7638  0116DC  6EE6               	movwf	postinc1,c
  7639                           
  7640                           ;stkvar	_fp @ sp[(-33)+-2]
  7641  0116DE  0EDD               	movlw	-35
  7642  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7643  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7644  0116EC  EC63  F0BE         	call	_ctoa	;wreg free
  7645  0116F0  EFF3  F090         	goto	l1978
  7646  0116F4                     l9920:
  7647                           
  7648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7649                           ;stkvar	_fmt @ sp[(-32)+-4]
  7650  0116F4  0EDC               	movlw	-36
  7651  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7652  0116FC  0EDD               	movlw	-35
  7653  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7654  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
  7655  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7656  011710                     	if	0	;tblptru may be non-zero
  7657  011710                     	endif
  7658  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7659  011710  0E00               	movlw	low (__mediumconst shr (0+16))
  7660  011712  6EF8               	movwf	tblptru,c
  7661  011714                     	endif
  7662  011714  0008               	tblrd		*
  7663  011716  50F5               	movf	tablat,w,c
  7664  011718  0A64               	xorlw	100
  7665  01171A  B4D8               	btfsc	status,2,c
  7666  01171C  D015               	goto	u10410
  7667                           
  7668                           ;stkvar	_fmt @ sp[(-32)+-4]
  7669  01171E  0EDC               	movlw	-36
  7670  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
  7671  011726  0EDD               	movlw	-35
  7672  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
  7673  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7674  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
  7675  01173A                     	if	0	;tblptru may be non-zero
  7676  01173A                     	endif
  7677  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7678  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
  7679  01173C  6EF8               	movwf	tblptru,c
  7680  01173E                     	endif
  7681  01173E  0008               	tblrd		*
  7682  011740  50F5               	movf	tablat,w,c
  7683  011742  0A69               	xorlw	105
  7684  011744  A4D8               	btfss	status,2,c
  7685  011746  D076               	goto	l9932
  7686  011748                     u10410:
  7687                           
  7688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7689                           ;stkvar	_fmt @ sp[(-32)+-4]
  7690  011748  0EDC               	movlw	-36
  7691  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7692  011750  0EDD               	movlw	-35
  7693  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
  7694  011758  2ADE               	incf	postinc2,f,c
  7695  01175A  0E00               	movlw	0
  7696  01175C  22DD               	addwfc	postdec2,f,c
  7697                           
  7698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7699                           ;stkvar	_ap @ sp[(-32)+-6]
  7700  01175E  0EDA               	movlw	-38
  7701  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
  7702  011766  0EDB               	movlw	-37
  7703  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
  7704  01176E  0E02               	movlw	2
  7705  011770  5EDE               	subwf	postinc2,f,c
  7706  011772  0E00               	movlw	0
  7707  011774  5ADD               	subwfb	postdec2,f,c
  7708  011776  006F FF78  F03F    	movff	postinc2,btemp+10
  7709  01177C  006F FF74  F040    	movff	postdec2,btemp+11
  7710  011782  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7711  011788  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7712  01178E  006F FF78  F03F    	movff	postinc2,btemp+10
  7713  011794  006F FF74  F040    	movff	postdec2,btemp+11
  7714                           
  7715                           ;stkvar	_ll @ sp[(-32)+14]
  7716  01179A  0EEE               	movlw	-18
  7717  01179C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7718  0117A2  0EEF               	movlw	-17
  7719  0117A4  0060  F103  FFE3   	movff	btemp+11,plusw1
  7720  0117AA  6A35               	clrf	btemp^0,c
  7721  0117AC  BEE3               	btfsc	plusw1,7,c
  7722  0117AE  6835               	setf	btemp^0,c
  7723  0117B0  0EF0               	movlw	-16
  7724  0117B2  0060  F0D7  FFE3   	movff	btemp,plusw1
  7725  0117B8  0EF1               	movlw	-15
  7726  0117BA  0060  F0D7  FFE3   	movff	btemp,plusw1
  7727  0117C0  0EF2               	movlw	-14
  7728  0117C2  0060  F0D7  FFE3   	movff	btemp,plusw1
  7729  0117C8  0EF3               	movlw	-13
  7730  0117CA  0060  F0D7  FFE3   	movff	btemp,plusw1
  7731  0117D0  0EF4               	movlw	-12
  7732  0117D2  0060  F0D7  FFE3   	movff	btemp,plusw1
  7733  0117D8  0EF5               	movlw	-11
  7734  0117DA  0060  F0D7  FFE3   	movff	btemp,plusw1
  7735  0117E0                     l9928:
  7736                           
  7737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7738                           ;stkvar	_ll @ sp[(-32)+14]
  7739  0117E0  50E1               	movf	fsr1l,w,c
  7740  0117E2  0FEE               	addlw	-18
  7741  0117E4  6ED9               	movwf	fsr2l,c
  7742  0117E6  50E2               	movf	fsr1h,w,c
  7743  0117E8  6EDA               	movwf	fsr2h,c
  7744  0117EA  0EFF               	movlw	255
  7745  0117EC  22DA               	addwfc	fsr2h,f,c
  7746  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  7747  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  7748  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
  7749  011800  006F FF7B FFE6     	movff	postinc2,postinc1
  7750  011806  006F FF7B FFE6     	movff	postinc2,postinc1
  7751  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
  7752  011812  006F FF7B FFE6     	movff	postinc2,postinc1
  7753  011818  006F FF7B FFE6     	movff	postinc2,postinc1
  7754                           
  7755                           ;stkvar	_fp @ sp[(-40)+-2]
  7756  01181E  0ED6               	movlw	-42
  7757  011820  006F FF8F FFE6     	movff	plusw1,postinc1
  7758  011826  006F FF8F FFE6     	movff	plusw1,postinc1
  7759  01182C  EC8D  F09E         	call	_dtoa	;wreg free
  7760  011830  EFF3  F090         	goto	l1978
  7761  011834                     l9932:
  7762                           
  7763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  7764  011834  0E02               	movlw	2
  7765  011836  6EE6               	movwf	postinc1,c
  7766  011838  0E00               	movlw	0
  7767  01183A  6EE6               	movwf	postinc1,c
  7768  01183C  0EEA               	movlw	low STR_42
  7769  01183E  6EE6               	movwf	postinc1,c
  7770  011840  0EFF               	movlw	high STR_42
  7771  011842  6EE6               	movwf	postinc1,c
  7772                           
  7773                           ;stkvar	_fmt @ sp[(-36)+-4]
  7774  011844  0ED8               	movlw	-40
  7775  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
  7776  01184C  0ED9               	movlw	-39
  7777  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7778  011854  006F FF78  F03F    	movff	postinc2,btemp+10
  7779  01185A  006F FF74  F040    	movff	postdec2,btemp+11
  7780  011860  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7781  011866  0060  F103  FFE6   	movff	btemp+11,postinc1
  7782  01186C  EC68  F0AE         	call	_strncmp	;wreg free
  7783  011870  5035               	movf	btemp^0,w,c
  7784  011872  1036               	iorwf	(btemp+1)^0,w,c
  7785  011874  B4D8               	btfsc	status,2,c
  7786  011876  D022               	goto	u10430
  7787  011878  0E02               	movlw	2
  7788  01187A  6EE6               	movwf	postinc1,c
  7789  01187C  0E00               	movlw	0
  7790  01187E  6EE6               	movwf	postinc1,c
  7791  011880  0EF0               	movlw	low STR_46
  7792  011882  6EE6               	movwf	postinc1,c
  7793  011884  0EFF               	movlw	high STR_46
  7794  011886  6EE6               	movwf	postinc1,c
  7795                           
  7796                           ;stkvar	_fmt @ sp[(-36)+-4]
  7797  011888  0ED8               	movlw	-40
  7798  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7799  011890  0ED9               	movlw	-39
  7800  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
  7801  011898  006F FF78  F03F    	movff	postinc2,btemp+10
  7802  01189E  006F FF74  F040    	movff	postdec2,btemp+11
  7803  0118A4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7804  0118AA  0060  F103  FFE6   	movff	btemp+11,postinc1
  7805  0118B0  EC68  F0AE         	call	_strncmp	;wreg free
  7806  0118B4  5035               	movf	btemp^0,w,c
  7807  0118B6  1036               	iorwf	(btemp+1)^0,w,c
  7808  0118B8  A4D8               	btfss	status,2,c
  7809  0118BA  D069               	goto	l9944
  7810  0118BC                     u10430:
  7811                           
  7812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  7813                           ;stkvar	_fmt @ sp[(-32)+-4]
  7814  0118BC  0EDC               	movlw	-36
  7815  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7816  0118C4  0EDD               	movlw	-35
  7817  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7818  0118CC  0E02               	movlw	2
  7819  0118CE  26DE               	addwf	postinc2,f,c
  7820  0118D0  0E00               	movlw	0
  7821  0118D2  22DD               	addwfc	postdec2,f,c
  7822                           
  7823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  7824                           ;stkvar	_ap @ sp[(-32)+-6]
  7825  0118D4  0EDA               	movlw	-38
  7826  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7827  0118DC  0EDB               	movlw	-37
  7828  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7829  0118E4  0E04               	movlw	4
  7830  0118E6  5EDE               	subwf	postinc2,f,c
  7831  0118E8  0E00               	movlw	0
  7832  0118EA  5ADD               	subwfb	postdec2,f,c
  7833  0118EC  006F FF78  F03F    	movff	postinc2,btemp+10
  7834  0118F2  006F FF74  F040    	movff	postdec2,btemp+11
  7835  0118F8  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7836  0118FE  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7837  011904  006F FF78  F03D    	movff	postinc2,btemp+8
  7838  01190A  006F FF78  F03E    	movff	postinc2,btemp+9
  7839  011910  006F FF78  F03F    	movff	postinc2,btemp+10
  7840  011916  006F FF78  F040    	movff	postinc2,btemp+11
  7841  01191C  0060  F0F4  F045   	movff	btemp+8,btemp+16
  7842  011922  0060  F0F8  F046   	movff	btemp+9,btemp+17
  7843  011928  0060  F0FC  F047   	movff	btemp+10,btemp+18
  7844  01192E  0060  F100  F048   	movff	btemp+11,btemp+19
  7845  011934  6A49               	clrf	(btemp+20)^0,c
  7846  011936  BE48               	btfsc	(btemp+19)^0,7,c
  7847  011938  6849               	setf	(btemp+20)^0,c
  7848  01193A  0060  F124  F04A   	movff	btemp+20,btemp+21
  7849  011940  0060  F124  F04B   	movff	btemp+20,btemp+22
  7850  011946  0060  F124  F04C   	movff	btemp+20,btemp+23
  7851                           
  7852                           ;stkvar	_ll @ sp[(-32)+14]
  7853  01194C  0EEE               	movlw	-18
  7854  01194E  0060  F117  FFE3   	movff	btemp+16,plusw1
  7855  011954  0EEF               	movlw	-17
  7856  011956  0060  F11B  FFE3   	movff	btemp+17,plusw1
  7857  01195C  0EF0               	movlw	-16
  7858  01195E  0060  F11F  FFE3   	movff	btemp+18,plusw1
  7859  011964  0EF1               	movlw	-15
  7860  011966  0060  F123  FFE3   	movff	btemp+19,plusw1
  7861  01196C  0EF2               	movlw	-14
  7862  01196E  0060  F127  FFE3   	movff	btemp+20,plusw1
  7863  011974  0EF3               	movlw	-13
  7864  011976  0060  F12B  FFE3   	movff	btemp+21,plusw1
  7865  01197C  0EF4               	movlw	-12
  7866  01197E  0060  F12F  FFE3   	movff	btemp+22,plusw1
  7867  011984  0EF5               	movlw	-11
  7868  011986  0060  F133  FFE3   	movff	btemp+23,plusw1
  7869  01198C  D729               	goto	l9928
  7870  01198E                     l9944:
  7871                           
  7872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7873                           ;stkvar	_ct @ sp[(-32)+26]
  7874  01198E  0EFA               	movlw	-6
  7875  011990  006F FF8C  F035    	movff	plusw1,btemp
  7876  011996  0E66               	movlw	102
  7877  011998  1835               	xorwf	btemp^0,w,c
  7878  01199A  A4D8               	btfss	status,2,c
  7879  01199C  D06E               	goto	l9956
  7880                           
  7881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7882                           ;stkvar	_fmt @ sp[(-32)+-4]
  7883  01199E  0EDC               	movlw	-36
  7884  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7885  0119A6  0EDD               	movlw	-35
  7886  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7887  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
  7888  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
  7889  0119BA                     	if	0	;tblptru may be non-zero
  7890  0119BA                     	endif
  7891  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7892  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
  7893  0119BC  6EF8               	movwf	tblptru,c
  7894  0119BE                     	endif
  7895                           
  7896                           ;stkvar	_c @ sp[(-32)+31]
  7897  0119BE  0008               	tblrd		*
  7898  0119C0  0EFF               	movlw	-1
  7899  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
  7900                           
  7901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7902                           ;stkvar	_fmt @ sp[(-32)+-4]
  7903  0119C8  0EDC               	movlw	-36
  7904  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7905  0119D0  0EDD               	movlw	-35
  7906  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7907  0119D8  2ADE               	incf	postinc2,f,c
  7908  0119DA  0E00               	movlw	0
  7909  0119DC  22DD               	addwfc	postdec2,f,c
  7910                           
  7911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7912                           ;stkvar	_ap @ sp[(-32)+-6]
  7913  0119DE  0EDA               	movlw	-38
  7914  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7915  0119E6  0EDB               	movlw	-37
  7916  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7917  0119EE  0E04               	movlw	4
  7918  0119F0  5EDE               	subwf	postinc2,f,c
  7919  0119F2  0E00               	movlw	0
  7920  0119F4  5ADD               	subwfb	postdec2,f,c
  7921  0119F6  006F FF78  F03F    	movff	postinc2,btemp+10
  7922  0119FC  006F FF74  F040    	movff	postdec2,btemp+11
  7923  011A02  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7924  011A08  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7925  011A0E  006F FF78  F03D    	movff	postinc2,btemp+8
  7926  011A14  006F FF78  F03E    	movff	postinc2,btemp+9
  7927  011A1A  006F FF78  F03F    	movff	postinc2,btemp+10
  7928  011A20  006F FF78  F040    	movff	postinc2,btemp+11
  7929                           
  7930                           ;stkvar	_f @ sp[(-32)+22]
  7931  011A26  0EF6               	movlw	-10
  7932  011A28  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7933  011A2E  0EF7               	movlw	-9
  7934  011A30  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7935  011A36  0EF8               	movlw	-8
  7936  011A38  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7937  011A3E  0EF9               	movlw	-7
  7938  011A40  0060  F103  FFE3   	movff	btemp+11,plusw1
  7939  011A46                     l9952:
  7940                           
  7941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  7942                           ;stkvar	_c @ sp[(-32)+31]
  7943  011A46  0EFF               	movlw	-1
  7944  011A48  50E3               	movf	plusw1,w,c
  7945  011A4A  6EE6               	movwf	postinc1,c
  7946                           
  7947                           ;stkvar	_f @ sp[(-33)+22]
  7948  011A4C  0EF5               	movlw	-11
  7949  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
  7950  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
  7951  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
  7952  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
  7953                           
  7954                           ;stkvar	_fp @ sp[(-37)+-2]
  7955  011A66  0ED9               	movlw	-39
  7956  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
  7957  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
  7958  011A74  EC00  F080         	call	_efgtoa	;wreg free
  7959  011A78  D3B6               	goto	l1978
  7960  011A7A                     l9956:
  7961                           
  7962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7963  011A7A  0E02               	movlw	2
  7964  011A7C  6EE6               	movwf	postinc1,c
  7965  011A7E  0E00               	movlw	0
  7966  011A80  6EE6               	movwf	postinc1,c
  7967  011A82  0EED               	movlw	low STR_51
  7968  011A84  6EE6               	movwf	postinc1,c
  7969  011A86  0EFF               	movlw	high STR_51
  7970  011A88  6EE6               	movwf	postinc1,c
  7971                           
  7972                           ;stkvar	_ct @ sp[(-36)+26]
  7973  011A8A  0EF6               	movlw	246
  7974  011A8C  24E1               	addwf	fsr1l,w,c
  7975  011A8E  6E35               	movwf	btemp^0,c
  7976  011A90  0EFF               	movlw	255
  7977  011A92  20E2               	addwfc	fsr1h,w,c
  7978  011A94  6E36               	movwf	(btemp+1)^0,c
  7979  011A96  0060  F0D7  FFE6   	movff	btemp,postinc1
  7980  011A9C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  7981  011AA2  EC68  F0AE         	call	_strncmp	;wreg free
  7982  011AA6  5035               	movf	btemp^0,w,c
  7983  011AA8  1036               	iorwf	(btemp+1)^0,w,c
  7984  011AAA  A4D8               	btfss	status,2,c
  7985  011AAC  D096               	goto	l9976
  7986                           
  7987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7988                           ;stkvar	_fmt @ sp[(-32)+-4]
  7989  011AAE  0EDC               	movlw	-36
  7990  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7991  011AB6  0EDD               	movlw	-35
  7992  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7993  011ABE  006F FF78  F03F    	movff	postinc2,btemp+10
  7994  011AC4  006F FF74  F040    	movff	postdec2,btemp+11
  7995  011ACA  0E01               	movlw	1
  7996  011ACC  263F               	addwf	(btemp+10)^0,f,c
  7997  011ACE  0E00               	movlw	0
  7998  011AD0  2240               	addwfc	(btemp+11)^0,f,c
  7999  011AD2  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  8000  011AD8  0060  F103  FFF7   	movff	btemp+11,tblptrh
  8001  011ADE                     	if	0	;tblptru may be non-zero
  8002  011ADE                     	endif
  8003  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8004  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
  8005  011AE0  6EF8               	movwf	tblptru,c
  8006  011AE2                     	endif
  8007                           
  8008                           ;stkvar	_c @ sp[(-32)+31]
  8009  011AE2  0008               	tblrd		*
  8010  011AE4  0EFF               	movlw	-1
  8011  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
  8012  011AEC  0EBF               	movlw	191
  8013  011AEE  6E3F               	movwf	(btemp+10)^0,c
  8014  011AF0  0EFF               	movlw	255
  8015  011AF2  6E40               	movwf	(btemp+11)^0,c
  8016                           
  8017                           ;stkvar	_fmt @ sp[(-32)+-4]
  8018  011AF4  0EDC               	movlw	-36
  8019  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8020  011AFC  0EDD               	movlw	-35
  8021  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8022  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
  8023  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8024  011B10                     	if	0	;tblptru may be non-zero
  8025  011B10                     	endif
  8026  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8027  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
  8028  011B12  6EF8               	movwf	tblptru,c
  8029  011B14                     	endif
  8030  011B14  0008               	tblrd		*
  8031  011B16  50F5               	movf	tablat,w,c
  8032  011B18  6E3D               	movwf	(btemp+8)^0,c
  8033  011B1A  6A3E               	clrf	(btemp+9)^0,c
  8034  011B1C  503F               	movf	(btemp+10)^0,w,c
  8035  011B1E  263D               	addwf	(btemp+8)^0,f,c
  8036  011B20  5040               	movf	(btemp+11)^0,w,c
  8037  011B22  223E               	addwfc	(btemp+9)^0,f,c
  8038  011B24  503E               	movf	(btemp+9)^0,w,c
  8039  011B26  E106               	bnz	u10460
  8040  011B28  0E1A               	movlw	26
  8041  011B2A  5C3D               	subwf	(btemp+8)^0,w,c
  8042  011B2C  B0D8               	btfsc	status,0,c
  8043  011B2E  D002               	goto	u10460
  8044  011B30  0E01               	movlw	1
  8045  011B32  D001               	goto	u10470
  8046  011B34                     u10460:
  8047  011B34  0E00               	movlw	0
  8048  011B36                     u10470:
  8049  011B36  6E3F               	movwf	(btemp+10)^0,c
  8050  011B38  6A40               	clrf	(btemp+11)^0,c
  8051                           
  8052                           ;stkvar	_vfpfcnvrt$4267 @ sp[(-32)+2]
  8053  011B3A  0EE2               	movlw	-30
  8054  011B3C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8055  011B42  0EE3               	movlw	-29
  8056  011B44  0060  F103  FFE3   	movff	btemp+11,plusw1
  8057                           
  8058                           ;stkvar	_vfpfcnvrt$4267 @ sp[(-32)+2]
  8059  011B4A  0EE2               	movlw	-30
  8060  011B4C  006F FF8C  F035    	movff	plusw1,btemp
  8061  011B52  0EE3               	movlw	-29
  8062  011B54  50E3               	movf	plusw1,w,c
  8063  011B56  1035               	iorwf	btemp^0,w,c
  8064                           
  8065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8066                           ;stkvar	_ap @ sp[(-32)+-6]
  8067                           
  8068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  8069                           
  8070                           ;stkvar	_f @ sp[(-32)+22]
  8071                           
  8072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  8073                           ;stkvar	_ap @ sp[(-32)+-6]
  8074  011B58  0EDA               	movlw	-38
  8075  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8076  011B60  0EDB               	movlw	-37
  8077  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
  8078  011B68  0E04               	movlw	4
  8079  011B6A  5EDE               	subwf	postinc2,f,c
  8080  011B6C  0E00               	movlw	0
  8081  011B6E  5ADD               	subwfb	postdec2,f,c
  8082  011B70  006F FF78  F03F    	movff	postinc2,btemp+10
  8083  011B76  006F FF74  F040    	movff	postdec2,btemp+11
  8084  011B7C  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8085  011B82  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8086  011B88  006F FF78  F03D    	movff	postinc2,btemp+8
  8087  011B8E  006F FF78  F03E    	movff	postinc2,btemp+9
  8088  011B94  006F FF78  F03F    	movff	postinc2,btemp+10
  8089  011B9A  006F FF78  F040    	movff	postinc2,btemp+11
  8090                           
  8091                           ;stkvar	_f @ sp[(-32)+22]
  8092  011BA0  0EF6               	movlw	-10
  8093  011BA2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  8094  011BA8  0EF7               	movlw	-9
  8095  011BAA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  8096  011BB0  0EF8               	movlw	-8
  8097  011BB2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8098  011BB8  0EF9               	movlw	-7
  8099  011BBA  0060  F103  FFE3   	movff	btemp+11,plusw1
  8100                           
  8101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8102                           ;stkvar	_fmt @ sp[(-32)+-4]
  8103  011BC0  0EDC               	movlw	-36
  8104  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8105  011BC8  0EDD               	movlw	-35
  8106  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8107  011BD0  0E02               	movlw	2
  8108  011BD2  26DE               	addwf	postinc2,f,c
  8109  011BD4  0E00               	movlw	0
  8110  011BD6  22DD               	addwfc	postdec2,f,c
  8111  011BD8  D736               	goto	l9952
  8112  011BDA                     l9976:
  8113                           
  8114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8115                           ;stkvar	_fmt @ sp[(-32)+-4]
  8116  011BDA  0EDC               	movlw	-36
  8117  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8118  011BE2  0EDD               	movlw	-35
  8119  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8120  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8121  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8122  011BF6                     	if	0	;tblptru may be non-zero
  8123  011BF6                     	endif
  8124  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8125  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
  8126  011BF8  6EF8               	movwf	tblptru,c
  8127  011BFA                     	endif
  8128  011BFA  0008               	tblrd		*
  8129  011BFC  50F5               	movf	tablat,w,c
  8130  011BFE  0A73               	xorlw	115
  8131  011C00  A4D8               	btfss	status,2,c
  8132  011C02  D042               	goto	l9986
  8133                           
  8134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8135                           ;stkvar	_fmt @ sp[(-32)+-4]
  8136  011C04  0EDC               	movlw	-36
  8137  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8138  011C0C  0EDD               	movlw	-35
  8139  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8140  011C14  2ADE               	incf	postinc2,f,c
  8141  011C16  0E00               	movlw	0
  8142  011C18  22DD               	addwfc	postdec2,f,c
  8143                           
  8144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8145                           ;stkvar	_ap @ sp[(-32)+-6]
  8146  011C1A  0EDA               	movlw	-38
  8147  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8148  011C22  0EDB               	movlw	-37
  8149  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
  8150  011C2A  0E02               	movlw	2
  8151  011C2C  5EDE               	subwf	postinc2,f,c
  8152  011C2E  0E00               	movlw	0
  8153  011C30  5ADD               	subwfb	postdec2,f,c
  8154  011C32  006F FF78  F03F    	movff	postinc2,btemp+10
  8155  011C38  006F FF74  F040    	movff	postdec2,btemp+11
  8156  011C3E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8157  011C44  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8158  011C4A  006F FF78  F03F    	movff	postinc2,btemp+10
  8159  011C50  006F FF74  F040    	movff	postdec2,btemp+11
  8160                           
  8161                           ;stkvar	_cp @ sp[(-32)+29]
  8162  011C56  0EFE               	movlw	-2
  8163  011C58  0060  F103  FFE3   	movff	btemp+11,plusw1
  8164  011C5E  0EFD               	movlw	-3
  8165  011C60  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8166                           
  8167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8168                           ;stkvar	_cp @ sp[(-32)+29]
  8169  011C66  0EFD               	movlw	-3
  8170  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
  8171  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
  8172                           
  8173                           ;stkvar	_fp @ sp[(-34)+-2]
  8174  011C74  0EDC               	movlw	-36
  8175  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
  8176  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
  8177  011C82  EC6F  F0A9         	call	_stoa	;wreg free
  8178  011C86  D2AF               	goto	l1978
  8179  011C88                     l9986:
  8180                           
  8181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  8182                           ;stkvar	_fmt @ sp[(-32)+-4]
  8183  011C88  0EDC               	movlw	-36
  8184  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8185  011C90  0EDD               	movlw	-35
  8186  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
  8187  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
  8188  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8189  011CA4                     	if	0	;tblptru may be non-zero
  8190  011CA4                     	endif
  8191  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8192  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
  8193  011CA6  6EF8               	movwf	tblptru,c
  8194  011CA8                     	endif
  8195  011CA8  0008               	tblrd		*
  8196  011CAA  50F5               	movf	tablat,w,c
  8197  011CAC  0A75               	xorlw	117
  8198  011CAE  A4D8               	btfss	status,2,c
  8199  011CB0  D07C               	goto	l9996
  8200                           
  8201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  8202                           ;stkvar	_fmt @ sp[(-32)+-4]
  8203  011CB2  0EDC               	movlw	-36
  8204  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8205  011CBA  0EDD               	movlw	-35
  8206  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8207  011CC2  2ADE               	incf	postinc2,f,c
  8208  011CC4  0E00               	movlw	0
  8209  011CC6  22DD               	addwfc	postdec2,f,c
  8210                           
  8211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8212                           ;stkvar	_ap @ sp[(-32)+-6]
  8213  011CC8  0EDA               	movlw	-38
  8214  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8215  011CD0  0EDB               	movlw	-37
  8216  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8217  011CD8  0E02               	movlw	2
  8218  011CDA  5EDE               	subwf	postinc2,f,c
  8219  011CDC  0E00               	movlw	0
  8220  011CDE  5ADD               	subwfb	postdec2,f,c
  8221  011CE0  006F FF78  F03F    	movff	postinc2,btemp+10
  8222  011CE6  006F FF74  F040    	movff	postdec2,btemp+11
  8223  011CEC  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8224  011CF2  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8225  011CF8  006F FF78  F03F    	movff	postinc2,btemp+10
  8226  011CFE  006F FF74  F040    	movff	postdec2,btemp+11
  8227  011D04  503F               	movf	(btemp+10)^0,w,c
  8228  011D06  6E45               	movwf	(btemp+16)^0,c
  8229  011D08  5040               	movf	(btemp+11)^0,w,c
  8230  011D0A  6E46               	movwf	(btemp+17)^0,c
  8231  011D0C  6A47               	clrf	(btemp+18)^0,c
  8232  011D0E  6A48               	clrf	(btemp+19)^0,c
  8233  011D10  6A49               	clrf	(btemp+20)^0,c
  8234  011D12  6A4A               	clrf	(btemp+21)^0,c
  8235  011D14  6A4B               	clrf	(btemp+22)^0,c
  8236  011D16  6A4C               	clrf	(btemp+23)^0,c
  8237                           
  8238                           ;stkvar	_llu @ sp[(-32)+6]
  8239  011D18  0EE6               	movlw	-26
  8240  011D1A  0060  F117  FFE3   	movff	btemp+16,plusw1
  8241  011D20  0EE7               	movlw	-25
  8242  011D22  0060  F11B  FFE3   	movff	btemp+17,plusw1
  8243  011D28  0EE8               	movlw	-24
  8244  011D2A  0060  F11F  FFE3   	movff	btemp+18,plusw1
  8245  011D30  0EE9               	movlw	-23
  8246  011D32  0060  F123  FFE3   	movff	btemp+19,plusw1
  8247  011D38  0EEA               	movlw	-22
  8248  011D3A  0060  F127  FFE3   	movff	btemp+20,plusw1
  8249  011D40  0EEB               	movlw	-21
  8250  011D42  0060  F12B  FFE3   	movff	btemp+21,plusw1
  8251  011D48  0EEC               	movlw	-20
  8252  011D4A  0060  F12F  FFE3   	movff	btemp+22,plusw1
  8253  011D50  0EED               	movlw	-19
  8254  011D52  0060  F133  FFE3   	movff	btemp+23,plusw1
  8255                           
  8256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
  8257                           ;stkvar	_llu @ sp[(-32)+6]
  8258  011D58  50E1               	movf	fsr1l,w,c
  8259  011D5A  0FE6               	addlw	-26
  8260  011D5C  6ED9               	movwf	fsr2l,c
  8261  011D5E  50E2               	movf	fsr1h,w,c
  8262  011D60  6EDA               	movwf	fsr2h,c
  8263  011D62  0EFF               	movlw	255
  8264  011D64  22DA               	addwfc	fsr2h,f,c
  8265  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  8266  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
  8267  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
  8268  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
  8269  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  8270  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  8271  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  8272  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
  8273                           
  8274                           ;stkvar	_fp @ sp[(-40)+-2]
  8275  011D96  0ED6               	movlw	-42
  8276  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
  8277  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
  8278  011DA4  EC59  F0A6         	call	_utoa	;wreg free
  8279  011DA8  D21E               	goto	l1978
  8280  011DAA                     l9996:
  8281                           
  8282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  8283  011DAA  0E02               	movlw	2
  8284  011DAC  6EE6               	movwf	postinc1,c
  8285  011DAE  0E00               	movlw	0
  8286  011DB0  6EE6               	movwf	postinc1,c
  8287  011DB2  0EF3               	movlw	low STR_56
  8288  011DB4  6EE6               	movwf	postinc1,c
  8289  011DB6  0EFF               	movlw	high STR_56
  8290  011DB8  6EE6               	movwf	postinc1,c
  8291                           
  8292                           ;stkvar	_fmt @ sp[(-36)+-4]
  8293  011DBA  0ED8               	movlw	-40
  8294  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8295  011DC2  0ED9               	movlw	-39
  8296  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8297  011DCA  006F FF78  F03F    	movff	postinc2,btemp+10
  8298  011DD0  006F FF74  F040    	movff	postdec2,btemp+11
  8299  011DD6  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8300  011DDC  0060  F103  FFE6   	movff	btemp+11,postinc1
  8301  011DE2  EC68  F0AE         	call	_strncmp	;wreg free
  8302  011DE6  5035               	movf	btemp^0,w,c
  8303  011DE8  1036               	iorwf	(btemp+1)^0,w,c
  8304  011DEA  A4D8               	btfss	status,2,c
  8305  011DEC  D039               	goto	l10006
  8306                           
  8307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  8308                           ;stkvar	_fmt @ sp[(-32)+-4]
  8309  011DEE  0EDC               	movlw	-36
  8310  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8311  011DF6  0EDD               	movlw	-35
  8312  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8313  011DFE  0E02               	movlw	2
  8314  011E00  26DE               	addwf	postinc2,f,c
  8315  011E02  0E00               	movlw	0
  8316  011E04  22DD               	addwfc	postdec2,f,c
  8317                           
  8318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  8319                           ;stkvar	_ap @ sp[(-32)+-6]
  8320  011E06  0EDA               	movlw	-38
  8321  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
  8322  011E0E  0EDB               	movlw	-37
  8323  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
  8324  011E16  0E04               	movlw	4
  8325  011E18  5EDE               	subwf	postinc2,f,c
  8326  011E1A  0E00               	movlw	0
  8327  011E1C  5ADD               	subwfb	postdec2,f,c
  8328  011E1E  006F FF78  F03F    	movff	postinc2,btemp+10
  8329  011E24  006F FF74  F040    	movff	postdec2,btemp+11
  8330  011E2A  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8331  011E30  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8332  011E36  006F FF78  F03D    	movff	postinc2,btemp+8
  8333  011E3C  006F FF78  F03E    	movff	postinc2,btemp+9
  8334  011E42  006F FF78  F03F    	movff	postinc2,btemp+10
  8335  011E48  006F FF78  F040    	movff	postinc2,btemp+11
  8336  011E4E  503D               	movf	(btemp+8)^0,w,c
  8337  011E50  6E45               	movwf	(btemp+16)^0,c
  8338  011E52  503E               	movf	(btemp+9)^0,w,c
  8339  011E54  6E46               	movwf	(btemp+17)^0,c
  8340  011E56  503F               	movf	(btemp+10)^0,w,c
  8341  011E58  6E47               	movwf	(btemp+18)^0,c
  8342  011E5A  5040               	movf	(btemp+11)^0,w,c
  8343  011E5C  6E48               	movwf	(btemp+19)^0,c
  8344  011E5E  D758               	goto	L5
  8345  011E60                     l10006:
  8346                           
  8347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8348                           ;stkvar	_fmt @ sp[(-32)+-4]
  8349  011E60  0EDC               	movlw	-36
  8350  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8351  011E68  0EDD               	movlw	-35
  8352  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8353  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
  8354  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
  8355  011E7C                     	if	0	;tblptru may be non-zero
  8356  011E7C                     	endif
  8357  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8358  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
  8359  011E7E  6EF8               	movwf	tblptru,c
  8360  011E80                     	endif
  8361  011E80  0008               	tblrd		*
  8362  011E82  50F5               	movf	tablat,w,c
  8363  011E84  0A78               	xorlw	120
  8364  011E86  B4D8               	btfsc	status,2,c
  8365  011E88  D015               	goto	u10530
  8366                           
  8367                           ;stkvar	_fmt @ sp[(-32)+-4]
  8368  011E8A  0EDC               	movlw	-36
  8369  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8370  011E92  0EDD               	movlw	-35
  8371  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
  8372  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8373  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8374  011EA6                     	if	0	;tblptru may be non-zero
  8375  011EA6                     	endif
  8376  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8377  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
  8378  011EA8  6EF8               	movwf	tblptru,c
  8379  011EAA                     	endif
  8380  011EAA  0008               	tblrd		*
  8381  011EAC  50F5               	movf	tablat,w,c
  8382  011EAE  0A58               	xorlw	88
  8383  011EB0  A4D8               	btfss	status,2,c
  8384  011EB2  D094               	goto	l10020
  8385  011EB4                     u10530:
  8386                           
  8387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8388                           ;stkvar	_fmt @ sp[(-32)+-4]
  8389  011EB4  0EDC               	movlw	-36
  8390  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8391  011EBC  0EDD               	movlw	-35
  8392  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8393  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
  8394  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
  8395  011ED0                     	if	0	;tblptru may be non-zero
  8396  011ED0                     	endif
  8397  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8398  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
  8399  011ED2  6EF8               	movwf	tblptru,c
  8400  011ED4                     	endif
  8401                           
  8402                           ;stkvar	_c @ sp[(-32)+31]
  8403  011ED4  0008               	tblrd		*
  8404  011ED6  0EFF               	movlw	-1
  8405  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
  8406                           
  8407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8408                           ;stkvar	_fmt @ sp[(-32)+-4]
  8409  011EDE  0EDC               	movlw	-36
  8410  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8411  011EE6  0EDD               	movlw	-35
  8412  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8413  011EEE  2ADE               	incf	postinc2,f,c
  8414  011EF0  0E00               	movlw	0
  8415  011EF2  22DD               	addwfc	postdec2,f,c
  8416                           
  8417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8418                           ;stkvar	_ap @ sp[(-32)+-6]
  8419  011EF4  0EDA               	movlw	-38
  8420  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8421  011EFC  0EDB               	movlw	-37
  8422  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8423  011F04  0E02               	movlw	2
  8424  011F06  5EDE               	subwf	postinc2,f,c
  8425  011F08  0E00               	movlw	0
  8426  011F0A  5ADD               	subwfb	postdec2,f,c
  8427  011F0C  006F FF78  F03F    	movff	postinc2,btemp+10
  8428  011F12  006F FF74  F040    	movff	postdec2,btemp+11
  8429  011F18  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8430  011F1E  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8431  011F24  006F FF78  F03F    	movff	postinc2,btemp+10
  8432  011F2A  006F FF74  F040    	movff	postdec2,btemp+11
  8433  011F30  503F               	movf	(btemp+10)^0,w,c
  8434  011F32  6E45               	movwf	(btemp+16)^0,c
  8435  011F34  5040               	movf	(btemp+11)^0,w,c
  8436  011F36  6E46               	movwf	(btemp+17)^0,c
  8437  011F38  6A47               	clrf	(btemp+18)^0,c
  8438  011F3A  6A48               	clrf	(btemp+19)^0,c
  8439  011F3C  6A49               	clrf	(btemp+20)^0,c
  8440  011F3E  6A4A               	clrf	(btemp+21)^0,c
  8441  011F40  6A4B               	clrf	(btemp+22)^0,c
  8442  011F42  6A4C               	clrf	(btemp+23)^0,c
  8443                           
  8444                           ;stkvar	_llu @ sp[(-32)+6]
  8445  011F44  0EE6               	movlw	-26
  8446  011F46  0060  F117  FFE3   	movff	btemp+16,plusw1
  8447  011F4C  0EE7               	movlw	-25
  8448  011F4E  0060  F11B  FFE3   	movff	btemp+17,plusw1
  8449  011F54  0EE8               	movlw	-24
  8450  011F56  0060  F11F  FFE3   	movff	btemp+18,plusw1
  8451  011F5C  0EE9               	movlw	-23
  8452  011F5E  0060  F123  FFE3   	movff	btemp+19,plusw1
  8453  011F64  0EEA               	movlw	-22
  8454  011F66  0060  F127  FFE3   	movff	btemp+20,plusw1
  8455  011F6C  0EEB               	movlw	-21
  8456  011F6E  0060  F12B  FFE3   	movff	btemp+21,plusw1
  8457  011F74  0EEC               	movlw	-20
  8458  011F76  0060  F12F  FFE3   	movff	btemp+22,plusw1
  8459  011F7C  0EED               	movlw	-19
  8460  011F7E  0060  F133  FFE3   	movff	btemp+23,plusw1
  8461                           
  8462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8463                           ;stkvar	_c @ sp[(-32)+31]
  8464  011F84  0EFF               	movlw	-1
  8465  011F86  50E3               	movf	plusw1,w,c
  8466  011F88  6EE6               	movwf	postinc1,c
  8467                           
  8468                           ;stkvar	_llu @ sp[(-33)+6]
  8469  011F8A  50E1               	movf	fsr1l,w,c
  8470  011F8C  0FE5               	addlw	-27
  8471  011F8E  6ED9               	movwf	fsr2l,c
  8472  011F90  50E2               	movf	fsr1h,w,c
  8473  011F92  6EDA               	movwf	fsr2h,c
  8474  011F94  0EFF               	movlw	255
  8475  011F96  22DA               	addwfc	fsr2h,f,c
  8476  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
  8477  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
  8478  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
  8479  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
  8480  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  8481  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
  8482  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  8483  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  8484                           
  8485                           ;stkvar	_fp @ sp[(-41)+-2]
  8486  011FC8  0ED5               	movlw	-43
  8487  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
  8488  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
  8489  011FD6  ECC6  F0A2         	call	_xtoa	;wreg free
  8490  011FDA  D105               	goto	l1978
  8491  011FDC                     l10020:
  8492                           
  8493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  8494  011FDC  0E02               	movlw	2
  8495  011FDE  6EE6               	movwf	postinc1,c
  8496  011FE0  0E00               	movlw	0
  8497  011FE2  6EE6               	movwf	postinc1,c
  8498  011FE4  0EF6               	movlw	low STR_61
  8499  011FE6  6EE6               	movwf	postinc1,c
  8500  011FE8  0EFF               	movlw	high STR_61
  8501  011FEA  6EE6               	movwf	postinc1,c
  8502                           
  8503                           ;stkvar	_fmt @ sp[(-36)+-4]
  8504  011FEC  0ED8               	movlw	-40
  8505  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8506  011FF4  0ED9               	movlw	-39
  8507  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8508  011FFC  006F FF78  F03F    	movff	postinc2,btemp+10
  8509  012002  006F FF74  F040    	movff	postdec2,btemp+11
  8510  012008  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8511  01200E  0060  F103  FFE6   	movff	btemp+11,postinc1
  8512  012014  EC68  F0AE         	call	_strncmp	;wreg free
  8513  012018  5035               	movf	btemp^0,w,c
  8514  01201A  1036               	iorwf	(btemp+1)^0,w,c
  8515  01201C  B4D8               	btfsc	status,2,c
  8516  01201E  D022               	goto	u10550
  8517  012020  0E02               	movlw	2
  8518  012022  6EE6               	movwf	postinc1,c
  8519  012024  0E00               	movlw	0
  8520  012026  6EE6               	movwf	postinc1,c
  8521  012028  0EE7               	movlw	low STR_65
  8522  01202A  6EE6               	movwf	postinc1,c
  8523  01202C  0EFF               	movlw	high STR_65
  8524  01202E  6EE6               	movwf	postinc1,c
  8525                           
  8526                           ;stkvar	_fmt @ sp[(-36)+-4]
  8527  012030  0ED8               	movlw	-40
  8528  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
  8529  012038  0ED9               	movlw	-39
  8530  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8531  012040  006F FF78  F03F    	movff	postinc2,btemp+10
  8532  012046  006F FF74  F040    	movff	postdec2,btemp+11
  8533  01204C  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8534  012052  0060  F103  FFE6   	movff	btemp+11,postinc1
  8535  012058  EC68  F0AE         	call	_strncmp	;wreg free
  8536  01205C  5035               	movf	btemp^0,w,c
  8537  01205E  1036               	iorwf	(btemp+1)^0,w,c
  8538  012060  A4D8               	btfss	status,2,c
  8539  012062  D058               	goto	l10034
  8540  012064                     u10550:
  8541                           
  8542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  8543                           ;stkvar	_fmt @ sp[(-32)+-4]
  8544  012064  0EDC               	movlw	-36
  8545  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
  8546  01206C  0EDD               	movlw	-35
  8547  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8548  012074  006F FF78  F03F    	movff	postinc2,btemp+10
  8549  01207A  006F FF74  F040    	movff	postdec2,btemp+11
  8550  012080  0E01               	movlw	1
  8551  012082  263F               	addwf	(btemp+10)^0,f,c
  8552  012084  0E00               	movlw	0
  8553  012086  2240               	addwfc	(btemp+11)^0,f,c
  8554  012088  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  8555  01208E  0060  F103  FFF7   	movff	btemp+11,tblptrh
  8556  012094                     	if	0	;tblptru may be non-zero
  8557  012094                     	endif
  8558  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8559  012094  0E00               	movlw	low (__mediumconst shr (0+16))
  8560  012096  6EF8               	movwf	tblptru,c
  8561  012098                     	endif
  8562                           
  8563                           ;stkvar	_c @ sp[(-32)+31]
  8564  012098  0008               	tblrd		*
  8565  01209A  0EFF               	movlw	-1
  8566  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
  8567                           
  8568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  8569                           ;stkvar	_fmt @ sp[(-32)+-4]
  8570  0120A2  0EDC               	movlw	-36
  8571  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8572  0120AA  0EDD               	movlw	-35
  8573  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8574  0120B2  0E02               	movlw	2
  8575  0120B4  26DE               	addwf	postinc2,f,c
  8576  0120B6  0E00               	movlw	0
  8577  0120B8  22DD               	addwfc	postdec2,f,c
  8578                           
  8579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  8580                           ;stkvar	_ap @ sp[(-32)+-6]
  8581  0120BA  0EDA               	movlw	-38
  8582  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8583  0120C2  0EDB               	movlw	-37
  8584  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8585  0120CA  0E04               	movlw	4
  8586  0120CC  5EDE               	subwf	postinc2,f,c
  8587  0120CE  0E00               	movlw	0
  8588  0120D0  5ADD               	subwfb	postdec2,f,c
  8589  0120D2  006F FF78  F03F    	movff	postinc2,btemp+10
  8590  0120D8  006F FF74  F040    	movff	postdec2,btemp+11
  8591  0120DE  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8592  0120E4  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8593  0120EA  006F FF78  F03D    	movff	postinc2,btemp+8
  8594  0120F0  006F FF78  F03E    	movff	postinc2,btemp+9
  8595  0120F6  006F FF78  F03F    	movff	postinc2,btemp+10
  8596  0120FC  006F FF78  F040    	movff	postinc2,btemp+11
  8597  012102  503D               	movf	(btemp+8)^0,w,c
  8598  012104  6E45               	movwf	(btemp+16)^0,c
  8599  012106  503E               	movf	(btemp+9)^0,w,c
  8600  012108  6E46               	movwf	(btemp+17)^0,c
  8601  01210A  503F               	movf	(btemp+10)^0,w,c
  8602  01210C  6E47               	movwf	(btemp+18)^0,c
  8603  01210E  5040               	movf	(btemp+11)^0,w,c
  8604  012110  6E48               	movwf	(btemp+19)^0,c
  8605  012112  D714               	goto	L6
  8606  012114                     l10034:
  8607                           
  8608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8609                           ;stkvar	_fmt @ sp[(-32)+-4]
  8610  012114  0EDC               	movlw	-36
  8611  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
  8612  01211C  0EDD               	movlw	-35
  8613  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8614  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
  8615  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8616  012130                     	if	0	;tblptru may be non-zero
  8617  012130                     	endif
  8618  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8619  012130  0E00               	movlw	low (__mediumconst shr (0+16))
  8620  012132  6EF8               	movwf	tblptru,c
  8621  012134                     	endif
  8622  012134  0008               	tblrd		*
  8623  012136  50F5               	movf	tablat,w,c
  8624  012138  0A25               	xorlw	37
  8625  01213A  A4D8               	btfss	status,2,c
  8626  01213C  D01A               	goto	l10044
  8627                           
  8628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8629                           ;stkvar	_fmt @ sp[(-32)+-4]
  8630  01213E  0EDC               	movlw	-36
  8631  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
  8632  012146  0EDD               	movlw	-35
  8633  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
  8634  01214E  2ADE               	incf	postinc2,f,c
  8635  012150  0E00               	movlw	0
  8636  012152  22DD               	addwfc	postdec2,f,c
  8637                           
  8638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8639                           ;stkvar	_fp @ sp[(-32)+-2]
  8640  012154  0EDE               	movlw	-34
  8641  012156  006F FF8F FFE6     	movff	plusw1,postinc1
  8642  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
  8643  012162  0E25               	movlw	37
  8644  012164  6EE6               	movwf	postinc1,c
  8645  012166  0E00               	movlw	0
  8646  012168  6EE6               	movwf	postinc1,c
  8647  01216A  EC36  F0B7         	call	_fputc	;wreg free
  8648  01216E                     l10040:
  8649                           
  8650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8651  01216E  0E01               	movlw	1
  8652  012170  D00C               	goto	L7
  8653  012172                     l10044:
  8654                           
  8655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8656                           ;stkvar	_fmt @ sp[(-32)+-4]
  8657  012172  0EDC               	movlw	-36
  8658  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
  8659  01217A  0EDD               	movlw	-35
  8660  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8661  012182  2ADE               	incf	postinc2,f,c
  8662  012184  0E00               	movlw	0
  8663  012186  22DD               	addwfc	postdec2,f,c
  8664                           
  8665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8666  012188  0E00               	movlw	0
  8667  01218A                     L7:
  8668  01218A  6E35               	movwf	btemp^0,c
  8669  01218C  0E00               	movlw	0
  8670  01218E  6E36               	movwf	(btemp+1)^0,c
  8671  012190  D02A               	goto	l1978
  8672  012192                     l10050:
  8673                           
  8674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8675                           ;stkvar	_fp @ sp[(-32)+-2]
  8676  012192  0EDE               	movlw	-34
  8677  012194  006F FF8F FFE6     	movff	plusw1,postinc1
  8678  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
  8679                           
  8680                           ;stkvar	_fmt @ sp[(-34)+-4]
  8681  0121A0  0EDA               	movlw	-38
  8682  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8683  0121A8  0EDB               	movlw	-37
  8684  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8685  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
  8686  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
  8687  0121BC                     	if	0	;tblptru may be non-zero
  8688  0121BC                     	endif
  8689  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8690  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
  8691  0121BE  6EF8               	movwf	tblptru,c
  8692  0121C0                     	endif
  8693  0121C0  0008               	tblrd		*
  8694  0121C2  50F5               	movf	tablat,w,c
  8695  0121C4  6EE6               	movwf	postinc1,c
  8696  0121C6  0E00               	movlw	0
  8697  0121C8  6EE6               	movwf	postinc1,c
  8698  0121CA  EC36  F0B7         	call	_fputc	;wreg free
  8699                           
  8700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8701                           ;stkvar	_fmt @ sp[(-32)+-4]
  8702  0121CE  0EDC               	movlw	-36
  8703  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8704  0121D6  0EDD               	movlw	-35
  8705  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8706  0121DE  2ADE               	incf	postinc2,f,c
  8707  0121E0  0E00               	movlw	0
  8708  0121E2  22DD               	addwfc	postdec2,f,c
  8709  0121E4  D7C4               	goto	l10040
  8710  0121E6                     l1978:
  8711                           
  8712                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8713  0121E6  0EDA               	movlw	218
  8714  0121E8  26E1               	addwf	fsr1l,f,c
  8715  0121EA  0EFF               	movlw	255
  8716  0121EC  22E2               	addwfc	fsr1h,f,c
  8717  0121EE  0012               	return		;funcret
  8718  0121F0                     __end_of_vfpfcnvrt:
  8719                           	opt callstack 0
  8720                           
  8721 ;; *************** function _xtoa *****************
  8722 ;; Defined at:
  8723 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8726 ;;		 -> f(6), NULL(0), 
  8727 ;;  d               8  [STACK] unsigned long long 
  8728 ;;  x               1  [STACK] unsigned char 
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;  n               8  [STACK] unsigned long long 
  8731 ;;  c               2  [STACK] int 
  8732 ;;  i               2  [STACK] int 
  8733 ;;  w               2  [STACK] int 
  8734 ;;  p               2  [STACK] int 
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  2  [STACK] int 
  8737 ;; Registers used:
  8738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8739 ;; Tracked objects:
  8740 ;;		On entry : 0/4
  8741 ;;		On exit  : 0/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8748 ;;Total ram usage:        0 bytes
  8749 ;; Hardware stack levels used:    1
  8750 ;; Hardware stack levels required when called:   11
  8751 ;; This function calls:
  8752 ;;		_isalpha
  8753 ;;		_isupper
  8754 ;;		_pad
  8755 ;;		_toupper
  8756 ;; This function is called by:
  8757 ;;		_vfpfcnvrt
  8758 ;; This function uses a reentrant model
  8759 ;;
  8760                           
  8761                           	psect	text36
  8762  01458C                     __ptext36:
  8763                           	opt callstack 0
  8764  01458C                     _xtoa:
  8765                           	opt callstack 0
  8766                           
  8767                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8768  01458C  0E14               	movlw	20
  8769  01458E  26E1               	addwf	fsr1l,f,c
  8770  014590  0E00               	movlw	0
  8771  014592  22E2               	addwfc	fsr1h,f,c
  8772                           
  8773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8774                           
  8775                           ;incstack = 0
  8776  014594  AE21               	btfss	(_prec+1)^0,7,c
  8777                           
  8778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8779  014596  9222               	bcf	_flags^0,1,c
  8780                           
  8781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8782  014598  BE21               	btfsc	(_prec+1)^0,7,c
  8783  01459A  D005               	goto	u10090
  8784  01459C  5021               	movf	(_prec+1)^0,w,c
  8785  01459E  E110               	bnz	l9786
  8786  0145A0  0420               	decf	_prec^0,w,c
  8787  0145A2  B0D8               	btfsc	status,0,c
  8788  0145A4  D00D               	goto	l9786
  8789  0145A6                     u10090:
  8790  0145A6  0E01               	movlw	1
  8791  0145A8  6E3F               	movwf	(btemp+10)^0,c
  8792  0145AA  0E00               	movlw	0
  8793  0145AC  6E40               	movwf	(btemp+11)^0,c
  8794                           
  8795                           ;stkvar	_p @ sp[(-20)+18]
  8796  0145AE  0EFE               	movlw	-2
  8797  0145B0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8798  0145B6  0EFF               	movlw	-1
  8799  0145B8  0060  F103  FFE3   	movff	btemp+11,plusw1
  8800  0145BE  D008               	goto	l1928
  8801  0145C0                     l9786:
  8802                           
  8803                           ;stkvar	_p @ sp[(-20)+18]
  8804  0145C0  0EFE               	movlw	-2
  8805  0145C2  0060  F083  FFE3   	movff	_prec,plusw1
  8806  0145C8  0EFF               	movlw	-1
  8807  0145CA  0060  F087  FFE3   	movff	_prec+1,plusw1
  8808  0145D0                     l1928:
  8809                           
  8810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8811                           ;stkvar	_w @ sp[(-20)+16]
  8812  0145D0  0EFC               	movlw	-4
  8813  0145D2  0060  F07B  FFE3   	movff	_width,plusw1
  8814  0145D8  0EFD               	movlw	-3
  8815  0145DA  0060  F07F  FFE3   	movff	_width+1,plusw1
  8816                           
  8817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8818  0145E0  A822               	btfss	_flags^0,4,c
  8819  0145E2  D00B               	goto	l9792
  8820                           
  8821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8822                           ;stkvar	_w @ sp[(-20)+16]
  8823  0145E4  50E1               	movf	fsr1l,w,c
  8824  0145E6  0FFC               	addlw	-4
  8825  0145E8  6ED9               	movwf	fsr2l,c
  8826  0145EA  50E2               	movf	fsr1h,w,c
  8827  0145EC  6EDA               	movwf	fsr2h,c
  8828  0145EE  0EFF               	movlw	255
  8829  0145F0  22DA               	addwfc	fsr2h,f,c
  8830  0145F2  0EFE               	movlw	254
  8831  0145F4  26DE               	addwf	postinc2,f,c
  8832  0145F6  0EFF               	movlw	255
  8833  0145F8  22DD               	addwfc	postdec2,f,c
  8834  0145FA                     l9792:
  8835                           
  8836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8837                           ;stkvar	_d @ sp[(-20)+-10]
  8838  0145FA  0EE2               	movlw	226
  8839  0145FC  24E1               	addwf	fsr1l,w,c
  8840  0145FE  6ED9               	movwf	fsr2l,c
  8841  014600  0EFF               	movlw	255
  8842  014602  20E2               	addwfc	fsr1h,w,c
  8843  014604  6EDA               	movwf	fsr2h,c
  8844                           
  8845                           ;stkvar	_n @ sp[(-20)+4]
  8846  014606  0E08               	movlw	8
  8847  014608  6E35               	movwf	btemp^0,c
  8848  01460A  0EF0               	movlw	-16
  8849  01460C                     us1011999:
  8850  01460C  006F FF7B FFE3     	movff	postinc2,plusw1
  8851  014612  28E8               	incf	wreg,w,c
  8852  014614  2E35               	decfsz	btemp^0,f,c
  8853  014616  D7FA               	bra	us1011999
  8854                           
  8855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8856  014618  0E4F               	movlw	79
  8857  01461A  6E3F               	movwf	(btemp+10)^0,c
  8858  01461C  0E00               	movlw	0
  8859  01461E  6E40               	movwf	(btemp+11)^0,c
  8860                           
  8861                           ;stkvar	_i @ sp[(-20)+14]
  8862  014620  0EFA               	movlw	-6
  8863  014622  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8864  014628  0EFB               	movlw	-5
  8865  01462A  0060  F103  FFE3   	movff	btemp+11,plusw1
  8866                           
  8867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8868  014630  0102               	movlb	2	; () banked
  8869  014632  6BFB               	clrf	(_dbuf+79)& (0+255),b
  8870                           
  8871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8872  014634  D0EE               	goto	l9830
  8873  014636                     l9798:
  8874                           
  8875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8876                           ;stkvar	_i @ sp[(-20)+14]
  8877  014636  50E1               	movf	fsr1l,w,c
  8878  014638  0FFA               	addlw	-6
  8879  01463A  6ED9               	movwf	fsr2l,c
  8880  01463C  50E2               	movf	fsr1h,w,c
  8881  01463E  6EDA               	movwf	fsr2h,c
  8882  014640  0EFF               	movlw	255
  8883  014642  22DA               	addwfc	fsr2h,f,c
  8884  014644  06DE               	decf	postinc2,f,c
  8885  014646  0E00               	movlw	0
  8886  014648  5ADD               	subwfb	postdec2,f,c
  8887                           
  8888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8889                           ;stkvar	_n @ sp[(-20)+4]
  8890  01464A  0EF0               	movlw	-16
  8891  01464C  006F FF8C  F03F    	movff	plusw1,btemp+10
  8892  014652  0EF1               	movlw	-15
  8893  014654  006F FF8C  F040    	movff	plusw1,btemp+11
  8894  01465A  0E0F               	movlw	15
  8895  01465C  163F               	andwf	(btemp+10)^0,f,c
  8896  01465E  0E00               	movlw	0
  8897  014660  1640               	andwf	(btemp+11)^0,f,c
  8898                           
  8899                           ;stkvar	_c @ sp[(-20)+12]
  8900  014662  0EF8               	movlw	-8
  8901  014664  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8902  01466A  0EF9               	movlw	-7
  8903  01466C  0060  F103  FFE3   	movff	btemp+11,plusw1
  8904                           
  8905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8906                           ;stkvar	_c @ sp[(-20)+12]
  8907  014672  0EF9               	movlw	-7
  8908  014674  BEE3               	btfsc	plusw1,7,c
  8909  014676  D00F               	goto	l9806
  8910  014678  0EF9               	movlw	-7
  8911  01467A  50E3               	movf	plusw1,w,c
  8912  01467C  E108               	bnz	u10120
  8913  01467E  0EF8               	movlw	-8
  8914  014680  006F FF8C  F035    	movff	plusw1,btemp
  8915  014686  0E0A               	movlw	10
  8916  014688  5E35               	subwf	btemp^0,f,c
  8917  01468A  A0D8               	btfss	status,0,c
  8918  01468C  D004               	goto	l9806
  8919  01468E                     u10120:
  8920                           
  8921                           ;stkvar	_c @ sp[(-20)+12]
  8922  01468E  0EF8               	movlw	-8
  8923  014690  50E3               	movf	plusw1,w,c
  8924  014692  0F57               	addlw	87
  8925  014694  D003               	goto	L8
  8926  014696                     l9806:
  8927                           
  8928                           ;stkvar	_c @ sp[(-20)+12]
  8929  014696  0EF8               	movlw	-8
  8930  014698  50E3               	movf	plusw1,w,c
  8931  01469A  0F30               	addlw	48
  8932  01469C                     L8:
  8933  01469C  6E3F               	movwf	(btemp+10)^0,c
  8934  01469E  0EF9               	movlw	-7
  8935  0146A0  006F FF8C  F040    	movff	plusw1,btemp+11
  8936  0146A6  0E00               	movlw	0
  8937  0146A8  2240               	addwfc	(btemp+11)^0,f,c
  8938                           
  8939                           ;stkvar	_c @ sp[(-20)+12]
  8940  0146AA  0EF8               	movlw	-8
  8941  0146AC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8942  0146B2  0EF9               	movlw	-7
  8943  0146B4  0060  F103  FFE3   	movff	btemp+11,plusw1
  8944  0146BA  0EBF               	movlw	191
  8945  0146BC  6E3F               	movwf	(btemp+10)^0,c
  8946  0146BE  0EFF               	movlw	255
  8947  0146C0  6E40               	movwf	(btemp+11)^0,c
  8948                           
  8949                           ;stkvar	_x @ sp[(-20)+-11]
  8950  0146C2  0EE1               	movlw	-31
  8951  0146C4  50E3               	movf	plusw1,w,c
  8952  0146C6  6E3D               	movwf	(btemp+8)^0,c
  8953  0146C8  6A3E               	clrf	(btemp+9)^0,c
  8954  0146CA  503F               	movf	(btemp+10)^0,w,c
  8955  0146CC  263D               	addwf	(btemp+8)^0,f,c
  8956  0146CE  5040               	movf	(btemp+11)^0,w,c
  8957  0146D0  223E               	addwfc	(btemp+9)^0,f,c
  8958  0146D2  503E               	movf	(btemp+9)^0,w,c
  8959  0146D4  E106               	bnz	u10130
  8960  0146D6  0E1A               	movlw	26
  8961  0146D8  5C3D               	subwf	(btemp+8)^0,w,c
  8962  0146DA  B0D8               	btfsc	status,0,c
  8963  0146DC  D002               	goto	u10130
  8964  0146DE  0E01               	movlw	1
  8965  0146E0  D001               	goto	u10140
  8966  0146E2                     u10130:
  8967  0146E2  0E00               	movlw	0
  8968  0146E4                     u10140:
  8969  0146E4  6E3F               	movwf	(btemp+10)^0,c
  8970  0146E6  6A40               	clrf	(btemp+11)^0,c
  8971                           
  8972                           ;stkvar	_xtoa$4240 @ sp[(-20)+2]
  8973  0146E8  0EEE               	movlw	-18
  8974  0146EA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8975  0146F0  0EEF               	movlw	-17
  8976  0146F2  0060  F103  FFE3   	movff	btemp+11,plusw1
  8977                           
  8978                           ;stkvar	_xtoa$4240 @ sp[(-20)+2]
  8979  0146F8  0EEE               	movlw	-18
  8980  0146FA  006F FF8C  F035    	movff	plusw1,btemp
  8981  014700  0EEF               	movlw	-17
  8982  014702  50E3               	movf	plusw1,w,c
  8983  014704  1035               	iorwf	btemp^0,w,c
  8984  014706  B4D8               	btfsc	status,2,c
  8985  014708  D041               	goto	l9822
  8986  01470A  0E9F               	movlw	159
  8987  01470C  6E3F               	movwf	(btemp+10)^0,c
  8988  01470E  0EFF               	movlw	255
  8989  014710  6E40               	movwf	(btemp+11)^0,c
  8990                           
  8991                           ;stkvar	_c @ sp[(-20)+12]
  8992  014712  0EF8               	movlw	-8
  8993  014714  006F FF8C  F03D    	movff	plusw1,btemp+8
  8994  01471A  0EF9               	movlw	-7
  8995  01471C  006F FF8C  F03E    	movff	plusw1,btemp+9
  8996  014722  0E20               	movlw	32
  8997  014724  123D               	iorwf	(btemp+8)^0,f,c
  8998  014726  0E00               	movlw	0
  8999  014728  123E               	iorwf	(btemp+9)^0,f,c
  9000  01472A  503F               	movf	(btemp+10)^0,w,c
  9001  01472C  263D               	addwf	(btemp+8)^0,f,c
  9002  01472E  5040               	movf	(btemp+11)^0,w,c
  9003  014730  223E               	addwfc	(btemp+9)^0,f,c
  9004  014732  503E               	movf	(btemp+9)^0,w,c
  9005  014734  E106               	bnz	u10160
  9006  014736  0E1A               	movlw	26
  9007  014738  5C3D               	subwf	(btemp+8)^0,w,c
  9008  01473A  B0D8               	btfsc	status,0,c
  9009  01473C  D002               	goto	u10160
  9010  01473E  0E01               	movlw	1
  9011  014740  D001               	goto	u10170
  9012  014742                     u10160:
  9013  014742  0E00               	movlw	0
  9014  014744                     u10170:
  9015  014744  6E3F               	movwf	(btemp+10)^0,c
  9016  014746  6A40               	clrf	(btemp+11)^0,c
  9017                           
  9018                           ;stkvar	_xtoa$4241 @ sp[(-20)+0]
  9019  014748  0EEC               	movlw	-20
  9020  01474A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9021  014750  0EED               	movlw	-19
  9022  014752  0060  F103  FFE3   	movff	btemp+11,plusw1
  9023                           
  9024                           ;stkvar	_xtoa$4241 @ sp[(-20)+0]
  9025  014758  0EEC               	movlw	-20
  9026  01475A  006F FF8C  F035    	movff	plusw1,btemp
  9027  014760  0EED               	movlw	-19
  9028  014762  50E3               	movf	plusw1,w,c
  9029  014764  1035               	iorwf	btemp^0,w,c
  9030  014766  B4D8               	btfsc	status,2,c
  9031  014768  D011               	goto	l9822
  9032                           
  9033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  9034                           ;stkvar	_c @ sp[(-20)+12]
  9035  01476A  0EF8               	movlw	-8
  9036  01476C  006F FF8F FFE6     	movff	plusw1,postinc1
  9037  014772  006F FF8F FFE6     	movff	plusw1,postinc1
  9038  014778  ECA7  F0BE         	call	_toupper	;wreg free
  9039                           
  9040                           ;stkvar	_c @ sp[(-20)+12]
  9041  01477C  0EF8               	movlw	-8
  9042  01477E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9043  014784  0EF9               	movlw	-7
  9044  014786  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9045  01478C                     l9822:
  9046                           
  9047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  9048                           ;stkvar	_c @ sp[(-20)+12]
  9049                           ;stkvar	_i @ sp[(-20)+14]
  9050  01478C  0EFA               	movlw	-6
  9051  01478E  006F FF8C  F03F    	movff	plusw1,btemp+10
  9052  014794  0EFB               	movlw	-5
  9053  014796  006F FF8C  F040    	movff	plusw1,btemp+11
  9054  01479C  0EAC               	movlw	low _dbuf
  9055  01479E  243F               	addwf	(btemp+10)^0,w,c
  9056  0147A0  6ED9               	movwf	fsr2l,c
  9057  0147A2  0E02               	movlw	high _dbuf
  9058  0147A4  2040               	addwfc	(btemp+11)^0,w,c
  9059  0147A6  6EDA               	movwf	fsr2h,c
  9060  0147A8  0EF8               	movlw	-8
  9061  0147AA  006F FF8F FFDF     	movff	plusw1,indf2
  9062                           
  9063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  9064                           ;stkvar	_p @ sp[(-20)+18]
  9065  0147B0  50E1               	movf	fsr1l,w,c
  9066  0147B2  0FFE               	addlw	-2
  9067  0147B4  6ED9               	movwf	fsr2l,c
  9068  0147B6  50E2               	movf	fsr1h,w,c
  9069  0147B8  6EDA               	movwf	fsr2h,c
  9070  0147BA  0EFF               	movlw	255
  9071  0147BC  22DA               	addwfc	fsr2h,f,c
  9072  0147BE  06DE               	decf	postinc2,f,c
  9073  0147C0  0E00               	movlw	0
  9074  0147C2  5ADD               	subwfb	postdec2,f,c
  9075                           
  9076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  9077                           ;stkvar	_w @ sp[(-20)+16]
  9078  0147C4  50E1               	movf	fsr1l,w,c
  9079  0147C6  0FFC               	addlw	-4
  9080  0147C8  6ED9               	movwf	fsr2l,c
  9081  0147CA  50E2               	movf	fsr1h,w,c
  9082  0147CC  6EDA               	movwf	fsr2h,c
  9083  0147CE  0EFF               	movlw	255
  9084  0147D0  22DA               	addwfc	fsr2h,f,c
  9085  0147D2  06DE               	decf	postinc2,f,c
  9086  0147D4  0E00               	movlw	0
  9087  0147D6  5ADD               	subwfb	postdec2,f,c
  9088                           
  9089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  9090  0147D8  0E04               	movlw	4
  9091  0147DA  6E40               	movwf	(btemp+11)^0,c
  9092                           
  9093                           ;stkvar	_n @ sp[(-20)+4]
  9094  0147DC  50E1               	movf	fsr1l,w,c
  9095  0147DE  0FF0               	addlw	-16
  9096  0147E0  6ED9               	movwf	fsr2l,c
  9097  0147E2  50E2               	movf	fsr1h,w,c
  9098  0147E4  6EDA               	movwf	fsr2h,c
  9099  0147E6  0EFF               	movlw	255
  9100  0147E8  22DA               	addwfc	fsr2h,f,c
  9101  0147EA  2840               	incf	(btemp+11)^0,w,c
  9102  0147EC  52DE               	movf	postinc2,f,c
  9103  0147EE  D00F               	goto	u10190
  9104  0147F0                     u10195:
  9105  0147F0  52DE               	movf	postinc2,f,c
  9106  0147F2  52DE               	movf	postinc2,f,c
  9107  0147F4  52DE               	movf	postinc2,f,c
  9108  0147F6  52DE               	movf	postinc2,f,c
  9109  0147F8  52DE               	movf	postinc2,f,c
  9110  0147FA  52DE               	movf	postinc2,f,c
  9111  0147FC  90D8               	bcf	status,0,c
  9112  0147FE  32DD               	rrcf	postdec2,f,c
  9113  014800  32DD               	rrcf	postdec2,f,c
  9114  014802  32DD               	rrcf	postdec2,f,c
  9115  014804  32DD               	rrcf	postdec2,f,c
  9116  014806  32DD               	rrcf	postdec2,f,c
  9117  014808  32DD               	rrcf	postdec2,f,c
  9118  01480A  32DD               	rrcf	postdec2,f,c
  9119  01480C  32DE               	rrcf	postinc2,f,c
  9120  01480E                     u10190:
  9121  01480E  2EE8               	decfsz	wreg,f,c
  9122  014810  D7EF               	goto	u10195
  9123  014812                     l9830:
  9124                           
  9125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9126                           ;stkvar	_i @ sp[(-20)+14]
  9127  014812  0EFB               	movlw	-5
  9128  014814  BEE3               	btfsc	plusw1,7,c
  9129  014816  D03A               	goto	u10240
  9130  014818  0EFB               	movlw	-5
  9131  01481A  50E3               	movf	plusw1,w,c
  9132  01481C  E108               	bnz	u10200
  9133  01481E  0EFA               	movlw	-6
  9134  014820  006F FF8C  F035    	movff	plusw1,btemp
  9135  014826  0E02               	movlw	2
  9136  014828  5E35               	subwf	btemp^0,f,c
  9137  01482A  A0D8               	btfss	status,0,c
  9138  01482C  D02F               	goto	u10240
  9139  01482E                     u10200:
  9140                           
  9141                           ;stkvar	_n @ sp[(-20)+4]
  9142  01482E  0EF0               	movlw	-16
  9143  014830  50E3               	movf	plusw1,w,c
  9144  014832  E115               	bnz	u10211
  9145  014834  0EF1               	movlw	-15
  9146  014836  50E3               	movf	plusw1,w,c
  9147  014838  E112               	bnz	u10211
  9148  01483A  0EF2               	movlw	-14
  9149  01483C  50E3               	movf	plusw1,w,c
  9150  01483E  E10F               	bnz	u10211
  9151  014840  0EF3               	movlw	-13
  9152  014842  50E3               	movf	plusw1,w,c
  9153  014844  E10C               	bnz	u10211
  9154  014846  0EF4               	movlw	-12
  9155  014848  50E3               	movf	plusw1,w,c
  9156  01484A  E109               	bnz	u10211
  9157  01484C  0EF5               	movlw	-11
  9158  01484E  50E3               	movf	plusw1,w,c
  9159  014850  E106               	bnz	u10211
  9160  014852  0EF6               	movlw	-10
  9161  014854  50E3               	movf	plusw1,w,c
  9162  014856  E103               	bnz	u10211
  9163  014858  0EF7               	movlw	-9
  9164  01485A  50E3               	movf	plusw1,w,c
  9165  01485C  A4D8               	btfss	status,2,c
  9166  01485E                     u10211:
  9167  01485E  D6EB               	goto	l9798
  9168                           
  9169                           ;stkvar	_p @ sp[(-20)+18]
  9170  014860  0EFF               	movlw	-1
  9171  014862  BEE3               	btfsc	plusw1,7,c
  9172  014864  D007               	goto	u10220
  9173  014866  0EFF               	movlw	-1
  9174  014868  50E3               	movf	plusw1,w,c
  9175  01486A  E103               	bnz	u10221
  9176  01486C  0EFE               	movlw	-2
  9177  01486E  04E3               	decf	plusw1,w,c
  9178  014870  B0D8               	btfsc	status,0,c
  9179  014872                     u10221:
  9180  014872  D6E1               	goto	l9798
  9181  014874                     u10220:
  9182                           
  9183                           ;stkvar	_w @ sp[(-20)+16]
  9184  014874  0EFD               	movlw	-3
  9185  014876  BEE3               	btfsc	plusw1,7,c
  9186  014878  D009               	goto	u10240
  9187  01487A  0EFD               	movlw	-3
  9188  01487C  50E3               	movf	plusw1,w,c
  9189  01487E  E104               	bnz	u10230
  9190  014880  0EFC               	movlw	-4
  9191  014882  04E3               	decf	plusw1,w,c
  9192  014884  A0D8               	btfss	status,0,c
  9193  014886  D002               	goto	u10240
  9194  014888                     u10230:
  9195  014888  B222               	btfsc	_flags^0,1,c
  9196  01488A  D6D5               	goto	l9798
  9197  01488C                     u10240:
  9198                           
  9199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  9200  01488C  A822               	btfss	_flags^0,4,c
  9201  01488E  D036               	goto	l9846
  9202                           
  9203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9204                           ;stkvar	_i @ sp[(-20)+14]
  9205  014890  50E1               	movf	fsr1l,w,c
  9206  014892  0FFA               	addlw	-6
  9207  014894  6ED9               	movwf	fsr2l,c
  9208  014896  50E2               	movf	fsr1h,w,c
  9209  014898  6EDA               	movwf	fsr2h,c
  9210  01489A  0EFF               	movlw	255
  9211  01489C  22DA               	addwfc	fsr2h,f,c
  9212  01489E  06DE               	decf	postinc2,f,c
  9213  0148A0  0E00               	movlw	0
  9214  0148A2  5ADD               	subwfb	postdec2,f,c
  9215                           
  9216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9217                           ;stkvar	_x @ sp[(-20)+-11]
  9218                           ;stkvar	_i @ sp[(-20)+14]
  9219  0148A4  0EFA               	movlw	-6
  9220  0148A6  006F FF8C  F03F    	movff	plusw1,btemp+10
  9221  0148AC  0EFB               	movlw	-5
  9222  0148AE  006F FF8C  F040    	movff	plusw1,btemp+11
  9223  0148B4  0EAC               	movlw	low _dbuf
  9224  0148B6  243F               	addwf	(btemp+10)^0,w,c
  9225  0148B8  6ED9               	movwf	fsr2l,c
  9226  0148BA  0E02               	movlw	high _dbuf
  9227  0148BC  2040               	addwfc	(btemp+11)^0,w,c
  9228  0148BE  6EDA               	movwf	fsr2h,c
  9229  0148C0  0EE1               	movlw	-31
  9230  0148C2  006F FF8F FFDF     	movff	plusw1,indf2
  9231                           
  9232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9233                           ;stkvar	_i @ sp[(-20)+14]
  9234  0148C8  50E1               	movf	fsr1l,w,c
  9235  0148CA  0FFA               	addlw	-6
  9236  0148CC  6ED9               	movwf	fsr2l,c
  9237  0148CE  50E2               	movf	fsr1h,w,c
  9238  0148D0  6EDA               	movwf	fsr2h,c
  9239  0148D2  0EFF               	movlw	255
  9240  0148D4  22DA               	addwfc	fsr2h,f,c
  9241  0148D6  06DE               	decf	postinc2,f,c
  9242  0148D8  0E00               	movlw	0
  9243  0148DA  5ADD               	subwfb	postdec2,f,c
  9244                           
  9245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9246                           ;stkvar	_i @ sp[(-20)+14]
  9247  0148DC  0EFA               	movlw	-6
  9248  0148DE  006F FF8C  F03F    	movff	plusw1,btemp+10
  9249  0148E4  0EFB               	movlw	-5
  9250  0148E6  006F FF8C  F040    	movff	plusw1,btemp+11
  9251  0148EC  0EAC               	movlw	low _dbuf
  9252  0148EE  243F               	addwf	(btemp+10)^0,w,c
  9253  0148F0  6ED9               	movwf	fsr2l,c
  9254  0148F2  0E02               	movlw	high _dbuf
  9255  0148F4  2040               	addwfc	(btemp+11)^0,w,c
  9256  0148F6  6EDA               	movwf	fsr2h,c
  9257  0148F8  0E30               	movlw	48
  9258  0148FA  6EDF               	movwf	indf2,c
  9259  0148FC                     l9846:
  9260                           
  9261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  9262                           ;stkvar	_w @ sp[(-20)+16]
  9263  0148FC  0EFC               	movlw	-4
  9264  0148FE  006F FF8F FFE6     	movff	plusw1,postinc1
  9265  014904  006F FF8F FFE6     	movff	plusw1,postinc1
  9266                           
  9267                           ;stkvar	_i @ sp[(-22)+14]
  9268  01490A  0EAC               	movlw	low _dbuf
  9269  01490C  6E3F               	movwf	(btemp+10)^0,c
  9270  01490E  0E02               	movlw	high _dbuf
  9271  014910  6E40               	movwf	(btemp+11)^0,c
  9272  014912  0EF8               	movlw	-8
  9273  014914  50E3               	movf	plusw1,w,c
  9274  014916  263F               	addwf	(btemp+10)^0,f,c
  9275  014918  0EF9               	movlw	-7
  9276  01491A  50E3               	movf	plusw1,w,c
  9277  01491C  2240               	addwfc	(btemp+11)^0,f,c
  9278  01491E  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9279  014924  0060  F103  FFE6   	movff	btemp+11,postinc1
  9280                           
  9281                           ;stkvar	_fp @ sp[(-24)+-2]
  9282  01492A  0EE6               	movlw	-26
  9283  01492C  006F FF8F FFE6     	movff	plusw1,postinc1
  9284  014932  006F FF8F FFE6     	movff	plusw1,postinc1
  9285  014938  EC54  F0B8         	call	_pad	;wreg free
  9286                           
  9287                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9288  01493C  0EE1               	movlw	225
  9289  01493E  26E1               	addwf	fsr1l,f,c
  9290  014940  0EFF               	movlw	255
  9291  014942  22E2               	addwfc	fsr1h,f,c
  9292  014944  0012               	return		;funcret
  9293  014946                     __end_of_xtoa:
  9294                           	opt callstack 0
  9295                           
  9296 ;; *************** function _toupper *****************
  9297 ;; Defined at:
  9298 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9299 ;; Parameters:    Size  Location     Type
  9300 ;;  c               2  [STACK] int 
  9301 ;; Auto vars:     Size  Location     Type
  9302 ;;		None
  9303 ;; Return value:  Size  Location     Type
  9304 ;;                  2  [STACK] int 
  9305 ;; Registers used:
  9306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9307 ;; Tracked objects:
  9308 ;;		On entry : 0/2
  9309 ;;		On exit  : 0/0
  9310 ;;		Unchanged: 0/0
  9311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9316 ;;Total ram usage:        0 bytes
  9317 ;; Hardware stack levels used:    1
  9318 ;; Hardware stack levels required when called:    7
  9319 ;; This function calls:
  9320 ;;		_islower
  9321 ;; This function is called by:
  9322 ;;		_xtoa
  9323 ;; This function uses a reentrant model
  9324 ;;
  9325                           
  9326                           	psect	text37
  9327  017D4E                     __ptext37:
  9328                           	opt callstack 0
  9329  017D4E                     _toupper:
  9330                           	opt callstack 0
  9331                           
  9332                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9333  017D4E  52E6               	movf	postinc1,f,c
  9334  017D50  52E6               	movf	postinc1,f,c
  9335                           
  9336                           ;stkvar	_c @ sp[(-2)+-2]
  9337                           
  9338                           ;incstack = 0
  9339  017D52  0EFC               	movlw	-4
  9340  017D54  50E3               	movf	plusw1,w,c
  9341  017D56  0F9F               	addlw	159
  9342  017D58  6E3F               	movwf	(btemp+10)^0,c
  9343  017D5A  0EFD               	movlw	-3
  9344  017D5C  006F FF8C  F040    	movff	plusw1,btemp+11
  9345  017D62  0EFF               	movlw	255
  9346  017D64  2240               	addwfc	(btemp+11)^0,f,c
  9347  017D66  5040               	movf	(btemp+11)^0,w,c
  9348  017D68  E106               	bnz	u5410
  9349  017D6A  0E1A               	movlw	26
  9350  017D6C  5C3F               	subwf	(btemp+10)^0,w,c
  9351  017D6E  B0D8               	btfsc	status,0,c
  9352  017D70  D002               	goto	u5410
  9353  017D72  0E01               	movlw	1
  9354  017D74  D001               	goto	u5420
  9355  017D76                     u5410:
  9356  017D76  0E00               	movlw	0
  9357  017D78                     u5420:
  9358  017D78  6E3F               	movwf	(btemp+10)^0,c
  9359  017D7A  6A40               	clrf	(btemp+11)^0,c
  9360                           
  9361                           ;stkvar	_toupper$4925 @ sp[(-2)+0]
  9362  017D7C  0EFE               	movlw	-2
  9363  017D7E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9364  017D84  0EFF               	movlw	-1
  9365  017D86  0060  F103  FFE3   	movff	btemp+11,plusw1
  9366                           
  9367                           ;stkvar	_toupper$4925 @ sp[(-2)+0]
  9368  017D8C  0EFE               	movlw	-2
  9369  017D8E  006F FF8C  F035    	movff	plusw1,btemp
  9370  017D94  0EFF               	movlw	-1
  9371  017D96  50E3               	movf	plusw1,w,c
  9372  017D98  1035               	iorwf	btemp^0,w,c
  9373  017D9A  B4D8               	btfsc	status,2,c
  9374  017D9C  D00D               	goto	l6484
  9375                           
  9376                           ;stkvar	_c @ sp[(-2)+-2]
  9377  017D9E  0EFC               	movlw	-4
  9378  017DA0  006F FF8C  F035    	movff	plusw1,btemp
  9379  017DA6  0EFD               	movlw	-3
  9380  017DA8  006F FF8C  F036    	movff	plusw1,btemp+1
  9381  017DAE  0E5F               	movlw	95
  9382  017DB0  1635               	andwf	btemp^0,f,c
  9383  017DB2  0E00               	movlw	0
  9384  017DB4  1636               	andwf	(btemp+1)^0,f,c
  9385  017DB6  D008               	goto	l2869
  9386  017DB8                     l6484:
  9387                           
  9388                           ;stkvar	_c @ sp[(-2)+-2]
  9389  017DB8  0EFC               	movlw	-4
  9390  017DBA  006F FF8C  F035    	movff	plusw1,btemp
  9391  017DC0  0EFD               	movlw	-3
  9392  017DC2  006F FF8C  F036    	movff	plusw1,btemp+1
  9393  017DC8                     l2869:
  9394                           
  9395                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9396  017DC8  52E5               	movf	postdec1,f,c
  9397  017DCA  52E5               	movf	postdec1,f,c
  9398  017DCC  52E5               	movf	postdec1,f,c
  9399  017DCE  52E5               	movf	postdec1,f,c
  9400  017DD0  0012               	return		;funcret
  9401  017DD2                     __end_of_toupper:
  9402                           	opt callstack 0
  9403                           
  9404 ;; *************** function _islower *****************
  9405 ;; Defined at:
  9406 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9407 ;; Parameters:    Size  Location     Type
  9408 ;;  c               2  [STACK] int 
  9409 ;; Auto vars:     Size  Location     Type
  9410 ;;		None
  9411 ;; Return value:  Size  Location     Type
  9412 ;;                  2  [STACK] int 
  9413 ;; Registers used:
  9414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9415 ;; Tracked objects:
  9416 ;;		On entry : 0/0
  9417 ;;		On exit  : 0/0
  9418 ;;		Unchanged: 0/0
  9419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9424 ;;Total ram usage:        0 bytes
  9425 ;; Hardware stack levels used:    1
  9426 ;; Hardware stack levels required when called:    6
  9427 ;; This function calls:
  9428 ;;		Nothing
  9429 ;; This function is called by:
  9430 ;;		_toupper
  9431 ;; This function uses a reentrant model
  9432 ;;
  9433                           
  9434                           	psect	text38
  9435  018844                     __ptext38:
  9436                           	opt callstack 0
  9437  018844                     _islower:
  9438                           	opt callstack 16
  9439                           
  9440                           ;stkvar	_c @ sp[(0)+-2]
  9441                           
  9442                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9443                           ;incstack = 0
  9444  018844  0EFE               	movlw	-2
  9445  018846  50E3               	movf	plusw1,w,c
  9446  018848  0F9F               	addlw	159
  9447  01884A  6E3F               	movwf	(btemp+10)^0,c
  9448  01884C  0EFF               	movlw	-1
  9449  01884E  006F FF8C  F040    	movff	plusw1,btemp+11
  9450  018854  0EFF               	movlw	255
  9451  018856  2240               	addwfc	(btemp+11)^0,f,c
  9452  018858  5040               	movf	(btemp+11)^0,w,c
  9453  01885A  E106               	bnz	u5100
  9454  01885C  0E1A               	movlw	26
  9455  01885E  5C3F               	subwf	(btemp+10)^0,w,c
  9456  018860  B0D8               	btfsc	status,0,c
  9457  018862  D002               	goto	u5100
  9458  018864  0E01               	movlw	1
  9459  018866  D001               	goto	u5110
  9460  018868                     u5100:
  9461  018868  0E00               	movlw	0
  9462  01886A                     u5110:
  9463  01886A  6E35               	movwf	btemp^0,c
  9464  01886C  6A36               	clrf	(btemp+1)^0,c
  9465                           
  9466                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9467  01886E  52E5               	movf	postdec1,f,c
  9468  018870  52E5               	movf	postdec1,f,c
  9469  018872  0012               	return		;funcret
  9470  018874                     __end_of_islower:
  9471                           	opt callstack 0
  9472                           
  9473 ;; *************** function _isalpha *****************
  9474 ;; Defined at:
  9475 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9476 ;; Parameters:    Size  Location     Type
  9477 ;;  c               2  [STACK] int 
  9478 ;; Auto vars:     Size  Location     Type
  9479 ;;		None
  9480 ;; Return value:  Size  Location     Type
  9481 ;;                  2  [STACK] int 
  9482 ;; Registers used:
  9483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9484 ;; Tracked objects:
  9485 ;;		On entry : 0/0
  9486 ;;		On exit  : 0/0
  9487 ;;		Unchanged: 0/0
  9488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9493 ;;Total ram usage:        0 bytes
  9494 ;; Hardware stack levels used:    1
  9495 ;; Hardware stack levels required when called:    6
  9496 ;; This function calls:
  9497 ;;		Nothing
  9498 ;; This function is called by:
  9499 ;;		_xtoa
  9500 ;; This function uses a reentrant model
  9501 ;;
  9502                           
  9503                           	psect	text39
  9504  0185BA                     __ptext39:
  9505                           	opt callstack 0
  9506  0185BA                     _isalpha:
  9507                           	opt callstack 17
  9508                           
  9509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9510                           ;incstack = 0
  9511  0185BA  0E9F               	movlw	159
  9512  0185BC  6E3F               	movwf	(btemp+10)^0,c
  9513  0185BE  0EFF               	movlw	255
  9514  0185C0  6E40               	movwf	(btemp+11)^0,c
  9515                           
  9516                           ;stkvar	_c @ sp[(0)+-2]
  9517  0185C2  0EFE               	movlw	-2
  9518  0185C4  006F FF8C  F03D    	movff	plusw1,btemp+8
  9519  0185CA  0EFF               	movlw	-1
  9520  0185CC  006F FF8C  F03E    	movff	plusw1,btemp+9
  9521  0185D2  0E20               	movlw	32
  9522  0185D4  123D               	iorwf	(btemp+8)^0,f,c
  9523  0185D6  0E00               	movlw	0
  9524  0185D8  123E               	iorwf	(btemp+9)^0,f,c
  9525  0185DA  503F               	movf	(btemp+10)^0,w,c
  9526  0185DC  263D               	addwf	(btemp+8)^0,f,c
  9527  0185DE  5040               	movf	(btemp+11)^0,w,c
  9528  0185E0  223E               	addwfc	(btemp+9)^0,f,c
  9529  0185E2  503E               	movf	(btemp+9)^0,w,c
  9530  0185E4  E106               	bnz	u5390
  9531  0185E6  0E1A               	movlw	26
  9532  0185E8  5C3D               	subwf	(btemp+8)^0,w,c
  9533  0185EA  B0D8               	btfsc	status,0,c
  9534  0185EC  D002               	goto	u5390
  9535  0185EE  0E01               	movlw	1
  9536  0185F0  D001               	goto	u5400
  9537  0185F2                     u5390:
  9538  0185F2  0E00               	movlw	0
  9539  0185F4                     u5400:
  9540  0185F4  6E35               	movwf	btemp^0,c
  9541  0185F6  6A36               	clrf	(btemp+1)^0,c
  9542                           
  9543                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9544  0185F8  52E5               	movf	postdec1,f,c
  9545  0185FA  52E5               	movf	postdec1,f,c
  9546  0185FC  0012               	return		;funcret
  9547  0185FE                     __end_of_isalpha:
  9548                           	opt callstack 0
  9549                           
  9550 ;; *************** function _utoa *****************
  9551 ;; Defined at:
  9552 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9553 ;; Parameters:    Size  Location     Type
  9554 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9555 ;;		 -> f(6), NULL(0), 
  9556 ;;  d               8  [STACK] unsigned long long 
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;  n               8  [STACK] unsigned long long 
  9559 ;;  i               2  [STACK] int 
  9560 ;;  w               2  [STACK] int 
  9561 ;;  p               2  [STACK] int 
  9562 ;; Return value:  Size  Location     Type
  9563 ;;                  2  [STACK] int 
  9564 ;; Registers used:
  9565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9566 ;; Tracked objects:
  9567 ;;		On entry : 0/4
  9568 ;;		On exit  : 0/0
  9569 ;;		Unchanged: 0/0
  9570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9575 ;;Total ram usage:        0 bytes
  9576 ;; Hardware stack levels used:    1
  9577 ;; Hardware stack levels required when called:   11
  9578 ;; This function calls:
  9579 ;;		___lodiv
  9580 ;;		___lomod
  9581 ;;		_pad
  9582 ;; This function is called by:
  9583 ;;		_vfpfcnvrt
  9584 ;; This function uses a reentrant model
  9585 ;;
  9586                           
  9587                           	psect	text40
  9588  014CB2                     __ptext40:
  9589                           	opt callstack 0
  9590  014CB2                     _utoa:
  9591                           	opt callstack 0
  9592                           
  9593                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9594  014CB2  0E0E               	movlw	14
  9595  014CB4  26E1               	addwf	fsr1l,f,c
  9596  014CB6  0E00               	movlw	0
  9597  014CB8  22E2               	addwfc	fsr1h,f,c
  9598                           
  9599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  9600                           
  9601                           ;incstack = 0
  9602  014CBA  AE21               	btfss	(_prec+1)^0,7,c
  9603                           
  9604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  9605  014CBC  9222               	bcf	_flags^0,1,c
  9606                           
  9607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  9608  014CBE  BE21               	btfsc	(_prec+1)^0,7,c
  9609  014CC0  D005               	goto	u10010
  9610  014CC2  5021               	movf	(_prec+1)^0,w,c
  9611  014CC4  E110               	bnz	l9746
  9612  014CC6  0420               	decf	_prec^0,w,c
  9613  014CC8  B0D8               	btfsc	status,0,c
  9614  014CCA  D00D               	goto	l9746
  9615  014CCC                     u10010:
  9616  014CCC  0E01               	movlw	1
  9617  014CCE  6E3F               	movwf	(btemp+10)^0,c
  9618  014CD0  0E00               	movlw	0
  9619  014CD2  6E40               	movwf	(btemp+11)^0,c
  9620                           
  9621                           ;stkvar	_p @ sp[(-14)+12]
  9622  014CD4  0EFE               	movlw	-2
  9623  014CD6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9624  014CDC  0EFF               	movlw	-1
  9625  014CDE  0060  F103  FFE3   	movff	btemp+11,plusw1
  9626  014CE4  D008               	goto	l1913
  9627  014CE6                     l9746:
  9628                           
  9629                           ;stkvar	_p @ sp[(-14)+12]
  9630  014CE6  0EFE               	movlw	-2
  9631  014CE8  0060  F083  FFE3   	movff	_prec,plusw1
  9632  014CEE  0EFF               	movlw	-1
  9633  014CF0  0060  F087  FFE3   	movff	_prec+1,plusw1
  9634  014CF6                     l1913:
  9635                           
  9636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
  9637                           ;stkvar	_w @ sp[(-14)+10]
  9638  014CF6  0EFC               	movlw	-4
  9639  014CF8  0060  F07B  FFE3   	movff	_width,plusw1
  9640  014CFE  0EFD               	movlw	-3
  9641  014D00  0060  F07F  FFE3   	movff	_width+1,plusw1
  9642                           
  9643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
  9644                           ;stkvar	_d @ sp[(-14)+-10]
  9645  014D06  0EE8               	movlw	232
  9646  014D08  24E1               	addwf	fsr1l,w,c
  9647  014D0A  6ED9               	movwf	fsr2l,c
  9648  014D0C  0EFF               	movlw	255
  9649  014D0E  20E2               	addwfc	fsr1h,w,c
  9650  014D10  6EDA               	movwf	fsr2h,c
  9651                           
  9652                           ;stkvar	_n @ sp[(-14)+0]
  9653  014D12  0E08               	movlw	8
  9654  014D14  6E35               	movwf	btemp^0,c
  9655  014D16  0EF2               	movlw	-14
  9656  014D18                     us1002999:
  9657  014D18  006F FF7B FFE3     	movff	postinc2,plusw1
  9658  014D1E  28E8               	incf	wreg,w,c
  9659  014D20  2E35               	decfsz	btemp^0,f,c
  9660  014D22  D7FA               	bra	us1002999
  9661                           
  9662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  9663  014D24  0E4F               	movlw	79
  9664  014D26  6E3F               	movwf	(btemp+10)^0,c
  9665  014D28  0E00               	movlw	0
  9666  014D2A  6E40               	movwf	(btemp+11)^0,c
  9667                           
  9668                           ;stkvar	_i @ sp[(-14)+8]
  9669  014D2C  0EFA               	movlw	-6
  9670  014D2E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9671  014D34  0EFB               	movlw	-5
  9672  014D36  0060  F103  FFE3   	movff	btemp+11,plusw1
  9673                           
  9674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  9675  014D3C  0102               	movlb	2	; () banked
  9676  014D3E  6BFB               	clrf	(_dbuf+79)& (0+255),b
  9677                           
  9678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  9679  014D40  D0FB               	goto	l9764
  9680  014D42                     l9754:
  9681                           
  9682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
  9683                           ;stkvar	_i @ sp[(-14)+8]
  9684  014D42  50E1               	movf	fsr1l,w,c
  9685  014D44  0FFA               	addlw	-6
  9686  014D46  6ED9               	movwf	fsr2l,c
  9687  014D48  50E2               	movf	fsr1h,w,c
  9688  014D4A  6EDA               	movwf	fsr2h,c
  9689  014D4C  0EFF               	movlw	255
  9690  014D4E  22DA               	addwfc	fsr2h,f,c
  9691  014D50  06DE               	decf	postinc2,f,c
  9692  014D52  0E00               	movlw	0
  9693  014D54  5ADD               	subwfb	postdec2,f,c
  9694                           
  9695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  9696  014D56  0E0A               	movlw	10
  9697  014D58  6EE6               	movwf	postinc1,c
  9698  014D5A  0E00               	movlw	0
  9699  014D5C  6EE6               	movwf	postinc1,c
  9700  014D5E  0E00               	movlw	0
  9701  014D60  6EE6               	movwf	postinc1,c
  9702  014D62  0E00               	movlw	0
  9703  014D64  6EE6               	movwf	postinc1,c
  9704  014D66  0E00               	movlw	0
  9705  014D68  6EE6               	movwf	postinc1,c
  9706  014D6A  0E00               	movlw	0
  9707  014D6C  6EE6               	movwf	postinc1,c
  9708  014D6E  0E00               	movlw	0
  9709  014D70  6EE6               	movwf	postinc1,c
  9710  014D72  0E00               	movlw	0
  9711  014D74  6EE6               	movwf	postinc1,c
  9712                           
  9713                           ;stkvar	_n @ sp[(-22)+0]
  9714  014D76  50E1               	movf	fsr1l,w,c
  9715  014D78  0FEA               	addlw	-22
  9716  014D7A  6ED9               	movwf	fsr2l,c
  9717  014D7C  50E2               	movf	fsr1h,w,c
  9718  014D7E  6EDA               	movwf	fsr2h,c
  9719  014D80  0EFF               	movlw	255
  9720  014D82  22DA               	addwfc	fsr2h,f,c
  9721  014D84  006F FF7B FFE6     	movff	postinc2,postinc1
  9722  014D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  9723  014D90  006F FF7B FFE6     	movff	postinc2,postinc1
  9724  014D96  006F FF7B FFE6     	movff	postinc2,postinc1
  9725  014D9C  006F FF7B FFE6     	movff	postinc2,postinc1
  9726  014DA2  006F FF7B FFE6     	movff	postinc2,postinc1
  9727  014DA8  006F FF7B FFE6     	movff	postinc2,postinc1
  9728  014DAE  006F FF7B FFE6     	movff	postinc2,postinc1
  9729  014DB4  ECFF  F0B5         	call	___lomod	;wreg free
  9730  014DB8  52E5               	movf	postdec1,f,c
  9731  014DBA  006F FF9C  F04C    	movff	indf1,btemp+23
  9732  014DC0  52E5               	movf	postdec1,f,c
  9733  014DC2  006F FF9C  F04B    	movff	indf1,btemp+22
  9734  014DC8  52E5               	movf	postdec1,f,c
  9735  014DCA  006F FF9C  F04A    	movff	indf1,btemp+21
  9736  014DD0  52E5               	movf	postdec1,f,c
  9737  014DD2  006F FF9C  F049    	movff	indf1,btemp+20
  9738  014DD8  52E5               	movf	postdec1,f,c
  9739  014DDA  006F FF9C  F048    	movff	indf1,btemp+19
  9740  014DE0  52E5               	movf	postdec1,f,c
  9741  014DE2  006F FF9C  F047    	movff	indf1,btemp+18
  9742  014DE8  52E5               	movf	postdec1,f,c
  9743  014DEA  006F FF9C  F046    	movff	indf1,btemp+17
  9744  014DF0  52E5               	movf	postdec1,f,c
  9745  014DF2  006F FF9C  F045    	movff	indf1,btemp+16
  9746  014DF8  0EF8               	movlw	248
  9747  014DFA  26E1               	addwf	fsr1l,f,c
  9748  014DFC  0EFF               	movlw	255
  9749  014DFE  22E2               	addwfc	fsr1h,f,c
  9750  014E00  0E30               	movlw	48
  9751  014E02  2645               	addwf	(btemp+16)^0,f,c
  9752                           
  9753                           ;stkvar	_i @ sp[(-14)+8]
  9754  014E04  0EFA               	movlw	-6
  9755  014E06  006F FF8C  F03F    	movff	plusw1,btemp+10
  9756  014E0C  0EFB               	movlw	-5
  9757  014E0E  006F FF8C  F040    	movff	plusw1,btemp+11
  9758  014E14  0EAC               	movlw	low _dbuf
  9759  014E16  243F               	addwf	(btemp+10)^0,w,c
  9760  014E18  6ED9               	movwf	fsr2l,c
  9761  014E1A  0E02               	movlw	high _dbuf
  9762  014E1C  2040               	addwfc	(btemp+11)^0,w,c
  9763  014E1E  6EDA               	movwf	fsr2h,c
  9764  014E20  0060  F117  FFDF   	movff	btemp+16,indf2
  9765                           
  9766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
  9767                           ;stkvar	_p @ sp[(-14)+12]
  9768  014E26  50E1               	movf	fsr1l,w,c
  9769  014E28  0FFE               	addlw	-2
  9770  014E2A  6ED9               	movwf	fsr2l,c
  9771  014E2C  50E2               	movf	fsr1h,w,c
  9772  014E2E  6EDA               	movwf	fsr2h,c
  9773  014E30  0EFF               	movlw	255
  9774  014E32  22DA               	addwfc	fsr2h,f,c
  9775  014E34  06DE               	decf	postinc2,f,c
  9776  014E36  0E00               	movlw	0
  9777  014E38  5ADD               	subwfb	postdec2,f,c
  9778                           
  9779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
  9780                           ;stkvar	_w @ sp[(-14)+10]
  9781  014E3A  50E1               	movf	fsr1l,w,c
  9782  014E3C  0FFC               	addlw	-4
  9783  014E3E  6ED9               	movwf	fsr2l,c
  9784  014E40  50E2               	movf	fsr1h,w,c
  9785  014E42  6EDA               	movwf	fsr2h,c
  9786  014E44  0EFF               	movlw	255
  9787  014E46  22DA               	addwfc	fsr2h,f,c
  9788  014E48  06DE               	decf	postinc2,f,c
  9789  014E4A  0E00               	movlw	0
  9790  014E4C  5ADD               	subwfb	postdec2,f,c
  9791                           
  9792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  9793  014E4E  0E0A               	movlw	10
  9794  014E50  6EE6               	movwf	postinc1,c
  9795  014E52  0E00               	movlw	0
  9796  014E54  6EE6               	movwf	postinc1,c
  9797  014E56  0E00               	movlw	0
  9798  014E58  6EE6               	movwf	postinc1,c
  9799  014E5A  0E00               	movlw	0
  9800  014E5C  6EE6               	movwf	postinc1,c
  9801  014E5E  0E00               	movlw	0
  9802  014E60  6EE6               	movwf	postinc1,c
  9803  014E62  0E00               	movlw	0
  9804  014E64  6EE6               	movwf	postinc1,c
  9805  014E66  0E00               	movlw	0
  9806  014E68  6EE6               	movwf	postinc1,c
  9807  014E6A  0E00               	movlw	0
  9808  014E6C  6EE6               	movwf	postinc1,c
  9809                           
  9810                           ;stkvar	_n @ sp[(-22)+0]
  9811  014E6E  50E1               	movf	fsr1l,w,c
  9812  014E70  0FEA               	addlw	-22
  9813  014E72  6ED9               	movwf	fsr2l,c
  9814  014E74  50E2               	movf	fsr1h,w,c
  9815  014E76  6EDA               	movwf	fsr2h,c
  9816  014E78  0EFF               	movlw	255
  9817  014E7A  22DA               	addwfc	fsr2h,f,c
  9818  014E7C  006F FF7B FFE6     	movff	postinc2,postinc1
  9819  014E82  006F FF7B FFE6     	movff	postinc2,postinc1
  9820  014E88  006F FF7B FFE6     	movff	postinc2,postinc1
  9821  014E8E  006F FF7B FFE6     	movff	postinc2,postinc1
  9822  014E94  006F FF7B FFE6     	movff	postinc2,postinc1
  9823  014E9A  006F FF7B FFE6     	movff	postinc2,postinc1
  9824  014EA0  006F FF7B FFE6     	movff	postinc2,postinc1
  9825  014EA6  006F FF7B FFE6     	movff	postinc2,postinc1
  9826  014EAC  EC2E  F0B3         	call	___lodiv	;wreg free
  9827  014EB0  52E5               	movf	postdec1,f,c
  9828  014EB2  006F FF9C  F04C    	movff	indf1,btemp+23
  9829  014EB8  52E5               	movf	postdec1,f,c
  9830  014EBA  006F FF9C  F04B    	movff	indf1,btemp+22
  9831  014EC0  52E5               	movf	postdec1,f,c
  9832  014EC2  006F FF9C  F04A    	movff	indf1,btemp+21
  9833  014EC8  52E5               	movf	postdec1,f,c
  9834  014ECA  006F FF9C  F049    	movff	indf1,btemp+20
  9835  014ED0  52E5               	movf	postdec1,f,c
  9836  014ED2  006F FF9C  F048    	movff	indf1,btemp+19
  9837  014ED8  52E5               	movf	postdec1,f,c
  9838  014EDA  006F FF9C  F047    	movff	indf1,btemp+18
  9839  014EE0  52E5               	movf	postdec1,f,c
  9840  014EE2  006F FF9C  F046    	movff	indf1,btemp+17
  9841  014EE8  52E5               	movf	postdec1,f,c
  9842  014EEA  006F FF9C  F045    	movff	indf1,btemp+16
  9843  014EF0  0EF8               	movlw	248
  9844  014EF2  26E1               	addwf	fsr1l,f,c
  9845  014EF4  0EFF               	movlw	255
  9846  014EF6  22E2               	addwfc	fsr1h,f,c
  9847                           
  9848                           ;stkvar	_n @ sp[(-14)+0]
  9849  014EF8  0EF2               	movlw	-14
  9850  014EFA  0060  F117  FFE3   	movff	btemp+16,plusw1
  9851  014F00  0EF3               	movlw	-13
  9852  014F02  0060  F11B  FFE3   	movff	btemp+17,plusw1
  9853  014F08  0EF4               	movlw	-12
  9854  014F0A  0060  F11F  FFE3   	movff	btemp+18,plusw1
  9855  014F10  0EF5               	movlw	-11
  9856  014F12  0060  F123  FFE3   	movff	btemp+19,plusw1
  9857  014F18  0EF6               	movlw	-10
  9858  014F1A  0060  F127  FFE3   	movff	btemp+20,plusw1
  9859  014F20  0EF7               	movlw	-9
  9860  014F22  0060  F12B  FFE3   	movff	btemp+21,plusw1
  9861  014F28  0EF8               	movlw	-8
  9862  014F2A  0060  F12F  FFE3   	movff	btemp+22,plusw1
  9863  014F30  0EF9               	movlw	-7
  9864  014F32  0060  F133  FFE3   	movff	btemp+23,plusw1
  9865  014F38                     l9764:
  9866                           
  9867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  9868                           ;stkvar	_i @ sp[(-14)+8]
  9869  014F38  0EFA               	movlw	-6
  9870  014F3A  006F FF8C  F035    	movff	plusw1,btemp
  9871  014F40  0EFB               	movlw	-5
  9872  014F42  50E3               	movf	plusw1,w,c
  9873  014F44  1035               	iorwf	btemp^0,w,c
  9874  014F46  B4D8               	btfsc	status,2,c
  9875  014F48  D02F               	goto	u10070
  9876                           
  9877                           ;stkvar	_n @ sp[(-14)+0]
  9878  014F4A  0EF2               	movlw	-14
  9879  014F4C  50E3               	movf	plusw1,w,c
  9880  014F4E  E115               	bnz	u10041
  9881  014F50  0EF3               	movlw	-13
  9882  014F52  50E3               	movf	plusw1,w,c
  9883  014F54  E112               	bnz	u10041
  9884  014F56  0EF4               	movlw	-12
  9885  014F58  50E3               	movf	plusw1,w,c
  9886  014F5A  E10F               	bnz	u10041
  9887  014F5C  0EF5               	movlw	-11
  9888  014F5E  50E3               	movf	plusw1,w,c
  9889  014F60  E10C               	bnz	u10041
  9890  014F62  0EF6               	movlw	-10
  9891  014F64  50E3               	movf	plusw1,w,c
  9892  014F66  E109               	bnz	u10041
  9893  014F68  0EF7               	movlw	-9
  9894  014F6A  50E3               	movf	plusw1,w,c
  9895  014F6C  E106               	bnz	u10041
  9896  014F6E  0EF8               	movlw	-8
  9897  014F70  50E3               	movf	plusw1,w,c
  9898  014F72  E103               	bnz	u10041
  9899  014F74  0EF9               	movlw	-7
  9900  014F76  50E3               	movf	plusw1,w,c
  9901  014F78  A4D8               	btfss	status,2,c
  9902  014F7A                     u10041:
  9903  014F7A  D6E3               	goto	l9754
  9904                           
  9905                           ;stkvar	_p @ sp[(-14)+12]
  9906  014F7C  0EFF               	movlw	-1
  9907  014F7E  BEE3               	btfsc	plusw1,7,c
  9908  014F80  D007               	goto	u10050
  9909  014F82  0EFF               	movlw	-1
  9910  014F84  50E3               	movf	plusw1,w,c
  9911  014F86  E103               	bnz	u10051
  9912  014F88  0EFE               	movlw	-2
  9913  014F8A  04E3               	decf	plusw1,w,c
  9914  014F8C  B0D8               	btfsc	status,0,c
  9915  014F8E                     u10051:
  9916  014F8E  D6D9               	goto	l9754
  9917  014F90                     u10050:
  9918                           
  9919                           ;stkvar	_w @ sp[(-14)+10]
  9920  014F90  0EFD               	movlw	-3
  9921  014F92  BEE3               	btfsc	plusw1,7,c
  9922  014F94  D009               	goto	u10070
  9923  014F96  0EFD               	movlw	-3
  9924  014F98  50E3               	movf	plusw1,w,c
  9925  014F9A  E104               	bnz	u10060
  9926  014F9C  0EFC               	movlw	-4
  9927  014F9E  04E3               	decf	plusw1,w,c
  9928  014FA0  A0D8               	btfss	status,0,c
  9929  014FA2  D002               	goto	u10070
  9930  014FA4                     u10060:
  9931  014FA4  B222               	btfsc	_flags^0,1,c
  9932  014FA6  D6CD               	goto	l9754
  9933  014FA8                     u10070:
  9934                           
  9935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  9936                           ;stkvar	_w @ sp[(-14)+10]
  9937  014FA8  0EFC               	movlw	-4
  9938  014FAA  006F FF8F FFE6     	movff	plusw1,postinc1
  9939  014FB0  006F FF8F FFE6     	movff	plusw1,postinc1
  9940                           
  9941                           ;stkvar	_i @ sp[(-16)+8]
  9942  014FB6  0EAC               	movlw	low _dbuf
  9943  014FB8  6E3F               	movwf	(btemp+10)^0,c
  9944  014FBA  0E02               	movlw	high _dbuf
  9945  014FBC  6E40               	movwf	(btemp+11)^0,c
  9946  014FBE  0EF8               	movlw	-8
  9947  014FC0  50E3               	movf	plusw1,w,c
  9948  014FC2  263F               	addwf	(btemp+10)^0,f,c
  9949  014FC4  0EF9               	movlw	-7
  9950  014FC6  50E3               	movf	plusw1,w,c
  9951  014FC8  2240               	addwfc	(btemp+11)^0,f,c
  9952  014FCA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9953  014FD0  0060  F103  FFE6   	movff	btemp+11,postinc1
  9954                           
  9955                           ;stkvar	_fp @ sp[(-18)+-2]
  9956  014FD6  0EEC               	movlw	-20
  9957  014FD8  006F FF8F FFE6     	movff	plusw1,postinc1
  9958  014FDE  006F FF8F FFE6     	movff	plusw1,postinc1
  9959  014FE4  EC54  F0B8         	call	_pad	;wreg free
  9960                           
  9961                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  9962  014FE8  0EE8               	movlw	232
  9963  014FEA  26E1               	addwf	fsr1l,f,c
  9964  014FEC  0EFF               	movlw	255
  9965  014FEE  22E2               	addwfc	fsr1h,f,c
  9966  014FF0  0012               	return		;funcret
  9967  014FF2                     __end_of_utoa:
  9968                           	opt callstack 0
  9969                           
  9970 ;; *************** function ___lomod *****************
  9971 ;; Defined at:
  9972 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;  dividend        8  [STACK] unsigned long long 
  9975 ;;  divisor         8  [STACK] unsigned long long 
  9976 ;; Auto vars:     Size  Location     Type
  9977 ;;  counter         1  [STACK] unsigned char 
  9978 ;; Return value:  Size  Location     Type
  9979 ;;                  8  [STACK] unsigned long long 
  9980 ;; Registers used:
  9981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9982 ;; Tracked objects:
  9983 ;;		On entry : 0/2
  9984 ;;		On exit  : 0/0
  9985 ;;		Unchanged: 0/0
  9986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9991 ;;Total ram usage:        0 bytes
  9992 ;; Hardware stack levels used:    1
  9993 ;; Hardware stack levels required when called:    6
  9994 ;; This function calls:
  9995 ;;		Nothing
  9996 ;; This function is called by:
  9997 ;;		_utoa
  9998 ;; This function uses a reentrant model
  9999 ;;
 10000                           
 10001                           	psect	text41
 10002  016BFE                     __ptext41:
 10003                           	opt callstack 0
 10004  016BFE                     ___lomod:
 10005                           	opt callstack 0
 10006                           
 10007                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10008  016BFE  52E6               	movf	postinc1,f,c
 10009                           
 10010                           ;stkvar	_divisor @ sp[(-1)+-16]
 10011                           
 10012                           ;incstack = 0
 10013  016C00  0EEF               	movlw	-17
 10014  016C02  50E3               	movf	plusw1,w,c
 10015  016C04  E116               	bnz	u6540
 10016  016C06  0EF0               	movlw	-16
 10017  016C08  50E3               	movf	plusw1,w,c
 10018  016C0A  E113               	bnz	u6540
 10019  016C0C  0EF1               	movlw	-15
 10020  016C0E  50E3               	movf	plusw1,w,c
 10021  016C10  E110               	bnz	u6540
 10022  016C12  0EF2               	movlw	-14
 10023  016C14  50E3               	movf	plusw1,w,c
 10024  016C16  E10D               	bnz	u6540
 10025  016C18  0EF3               	movlw	-13
 10026  016C1A  50E3               	movf	plusw1,w,c
 10027  016C1C  E10A               	bnz	u6540
 10028  016C1E  0EF4               	movlw	-12
 10029  016C20  50E3               	movf	plusw1,w,c
 10030  016C22  E107               	bnz	u6540
 10031  016C24  0EF5               	movlw	-11
 10032  016C26  50E3               	movf	plusw1,w,c
 10033  016C28  E104               	bnz	u6540
 10034  016C2A  0EF6               	movlw	-10
 10035  016C2C  50E3               	movf	plusw1,w,c
 10036  016C2E  B4D8               	btfsc	status,2,c
 10037  016C30  D075               	goto	u6570
 10038  016C32                     u6540:
 10039                           
 10040                           ;stkvar	_counter @ sp[(-1)+0]
 10041  016C32  0EFF               	movlw	-1
 10042  016C34  6AE3               	clrf	plusw1,c
 10043  016C36  D012               	goto	L9
 10044  016C38                     l7094:
 10045                           
 10046                           ;stkvar	_divisor @ sp[(-1)+-16]
 10047  016C38  90D8               	bcf	status,0,c
 10048  016C3A  0EEF               	movlw	-17
 10049  016C3C  36E3               	rlcf	plusw1,f,c
 10050  016C3E  0EF0               	movlw	-16
 10051  016C40  36E3               	rlcf	plusw1,f,c
 10052  016C42  0EF1               	movlw	-15
 10053  016C44  36E3               	rlcf	plusw1,f,c
 10054  016C46  0EF2               	movlw	-14
 10055  016C48  36E3               	rlcf	plusw1,f,c
 10056  016C4A  0EF3               	movlw	-13
 10057  016C4C  36E3               	rlcf	plusw1,f,c
 10058  016C4E  0EF4               	movlw	-12
 10059  016C50  36E3               	rlcf	plusw1,f,c
 10060  016C52  0EF5               	movlw	-11
 10061  016C54  36E3               	rlcf	plusw1,f,c
 10062  016C56  0EF6               	movlw	-10
 10063  016C58  36E3               	rlcf	plusw1,f,c
 10064                           
 10065                           ;stkvar	_counter @ sp[(-1)+0]
 10066  016C5A  0EFF               	movlw	-1
 10067  016C5C                     L9:
 10068  016C5C  2AE3               	incf	plusw1,f,c
 10069                           
 10070                           ;stkvar	_divisor @ sp[(-1)+-16]
 10071  016C5E  0EF6               	movlw	-10
 10072  016C60  AEE3               	btfss	plusw1,7,c
 10073  016C62  D7EA               	goto	l7094
 10074  016C64                     u6550:
 10075                           
 10076                           ;stkvar	_divisor @ sp[(-1)+-16]
 10077                           ;stkvar	_dividend @ sp[(-1)+-8]
 10078  016C64  50E1               	movf	fsr1l,w,c
 10079  016C66  0FF7               	addlw	-9
 10080  016C68  6ED9               	movwf	fsr2l,c
 10081  016C6A  50E2               	movf	fsr1h,w,c
 10082  016C6C  6EDA               	movwf	fsr2h,c
 10083  016C6E  0EFF               	movlw	255
 10084  016C70  22DA               	addwfc	fsr2h,f,c
 10085  016C72  0EEF               	movlw	-17
 10086  016C74  50E3               	movf	plusw1,w,c
 10087  016C76  5CDE               	subwf	postinc2,w,c
 10088  016C78  0EF0               	movlw	-16
 10089  016C7A  50E3               	movf	plusw1,w,c
 10090  016C7C  58DE               	subwfb	postinc2,w,c
 10091  016C7E  0EF1               	movlw	-15
 10092  016C80  50E3               	movf	plusw1,w,c
 10093  016C82  58DE               	subwfb	postinc2,w,c
 10094  016C84  0EF2               	movlw	-14
 10095  016C86  50E3               	movf	plusw1,w,c
 10096  016C88  58DE               	subwfb	postinc2,w,c
 10097  016C8A  0EF3               	movlw	-13
 10098  016C8C  50E3               	movf	plusw1,w,c
 10099  016C8E  58DE               	subwfb	postinc2,w,c
 10100  016C90  0EF4               	movlw	-12
 10101  016C92  50E3               	movf	plusw1,w,c
 10102  016C94  58DE               	subwfb	postinc2,w,c
 10103  016C96  0EF5               	movlw	-11
 10104  016C98  50E3               	movf	plusw1,w,c
 10105  016C9A  58DE               	subwfb	postinc2,w,c
 10106  016C9C  0EF6               	movlw	-10
 10107  016C9E  50E3               	movf	plusw1,w,c
 10108  016CA0  58DE               	subwfb	postinc2,w,c
 10109  016CA2  A0D8               	btfss	status,0,c
 10110  016CA4  D01F               	goto	l7102
 10111                           
 10112                           ;stkvar	_divisor @ sp[(-1)+-16]
 10113                           ;stkvar	_dividend @ sp[(-1)+-8]
 10114  016CA6  50E1               	movf	fsr1l,w,c
 10115  016CA8  0FF7               	addlw	-9
 10116  016CAA  6ED9               	movwf	fsr2l,c
 10117  016CAC  50E2               	movf	fsr1h,w,c
 10118  016CAE  6EDA               	movwf	fsr2h,c
 10119  016CB0  0EFF               	movlw	255
 10120  016CB2  22DA               	addwfc	fsr2h,f,c
 10121  016CB4  0EEF               	movlw	-17
 10122  016CB6  50E3               	movf	plusw1,w,c
 10123  016CB8  5EDE               	subwf	postinc2,f,c
 10124  016CBA  0EF0               	movlw	-16
 10125  016CBC  50E3               	movf	plusw1,w,c
 10126  016CBE  5ADE               	subwfb	postinc2,f,c
 10127  016CC0  0EF1               	movlw	-15
 10128  016CC2  50E3               	movf	plusw1,w,c
 10129  016CC4  5ADE               	subwfb	postinc2,f,c
 10130  016CC6  0EF2               	movlw	-14
 10131  016CC8  50E3               	movf	plusw1,w,c
 10132  016CCA  5ADE               	subwfb	postinc2,f,c
 10133  016CCC  0EF3               	movlw	-13
 10134  016CCE  50E3               	movf	plusw1,w,c
 10135  016CD0  5ADE               	subwfb	postinc2,f,c
 10136  016CD2  0EF4               	movlw	-12
 10137  016CD4  50E3               	movf	plusw1,w,c
 10138  016CD6  5ADE               	subwfb	postinc2,f,c
 10139  016CD8  0EF5               	movlw	-11
 10140  016CDA  50E3               	movf	plusw1,w,c
 10141  016CDC  5ADE               	subwfb	postinc2,f,c
 10142  016CDE  0EF6               	movlw	-10
 10143  016CE0  50E3               	movf	plusw1,w,c
 10144  016CE2  5ADE               	subwfb	postinc2,f,c
 10145  016CE4                     l7102:
 10146                           
 10147                           ;stkvar	_divisor @ sp[(-1)+-16]
 10148  016CE4  90D8               	bcf	status,0,c
 10149  016CE6  0EF6               	movlw	-10
 10150  016CE8  32E3               	rrcf	plusw1,f,c
 10151  016CEA  0EF5               	movlw	-11
 10152  016CEC  32E3               	rrcf	plusw1,f,c
 10153  016CEE  0EF4               	movlw	-12
 10154  016CF0  32E3               	rrcf	plusw1,f,c
 10155  016CF2  0EF3               	movlw	-13
 10156  016CF4  32E3               	rrcf	plusw1,f,c
 10157  016CF6  0EF2               	movlw	-14
 10158  016CF8  32E3               	rrcf	plusw1,f,c
 10159  016CFA  0EF1               	movlw	-15
 10160  016CFC  32E3               	rrcf	plusw1,f,c
 10161  016CFE  0EF0               	movlw	-16
 10162  016D00  32E3               	rrcf	plusw1,f,c
 10163  016D02  0EEF               	movlw	-17
 10164  016D04  32E3               	rrcf	plusw1,f,c
 10165                           
 10166                           ;stkvar	_counter @ sp[(-1)+0]
 10167  016D06  0EFF               	movlw	-1
 10168  016D08  50E3               	movf	plusw1,w,c
 10169  016D0A  6E35               	movwf	btemp^0,c
 10170  016D0C  0E01               	movlw	1
 10171  016D0E  5E35               	subwf	btemp^0,f,c
 10172  016D10  0EFF               	movlw	-1
 10173  016D12  0060  F0D7  FFE3   	movff	btemp,plusw1
 10174  016D18  A4D8               	btfss	status,2,c
 10175  016D1A  D7A4               	goto	u6550
 10176  016D1C                     u6570:
 10177                           
 10178                           ;stkvar	_dividend @ sp[(-1)+-8]
 10179  016D1C  0EF7               	movlw	247
 10180  016D1E  24E1               	addwf	fsr1l,w,c
 10181  016D20  6ED9               	movwf	fsr2l,c
 10182  016D22  0EFF               	movlw	255
 10183  016D24  20E2               	addwfc	fsr1h,w,c
 10184  016D26  6EDA               	movwf	fsr2h,c
 10185                           
 10186                           ;stkvar	?___lomod @ sp[(-1)+-8]
 10187  016D28  0E08               	movlw	8
 10188  016D2A  6E35               	movwf	btemp^0,c
 10189  016D2C  0EF7               	movlw	-9
 10190  016D2E                     us658999:
 10191  016D2E  006F FF7B FFE3     	movff	postinc2,plusw1
 10192  016D34  28E8               	incf	wreg,w,c
 10193  016D36  2E35               	decfsz	btemp^0,f,c
 10194  016D38  D7FA               	bra	us658999
 10195                           
 10196                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10197  016D3A  52E5               	movf	postdec1,f,c
 10198  016D3C  0012               	return		;funcret
 10199  016D3E                     __end_of___lomod:
 10200                           	opt callstack 0
 10201                           
 10202 ;; *************** function ___lodiv *****************
 10203 ;; Defined at:
 10204 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;  dividend        8  [STACK] unsigned long long 
 10207 ;;  divisor         8  [STACK] unsigned long long 
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;  quotient        8  [STACK] unsigned long long 
 10210 ;;  counter         1  [STACK] unsigned char 
 10211 ;; Return value:  Size  Location     Type
 10212 ;;                  8  [STACK] unsigned long long 
 10213 ;; Registers used:
 10214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10215 ;; Tracked objects:
 10216 ;;		On entry : 0/2
 10217 ;;		On exit  : 0/0
 10218 ;;		Unchanged: 0/0
 10219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10224 ;;Total ram usage:        0 bytes
 10225 ;; Hardware stack levels used:    1
 10226 ;; Hardware stack levels required when called:    6
 10227 ;; This function calls:
 10228 ;;		Nothing
 10229 ;; This function is called by:
 10230 ;;		_utoa
 10231 ;; This function uses a reentrant model
 10232 ;;
 10233                           
 10234                           	psect	text42
 10235  01665C                     __ptext42:
 10236                           	opt callstack 0
 10237  01665C                     ___lodiv:
 10238                           	opt callstack 0
 10239                           
 10240                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10241  01665C  0E09               	movlw	9
 10242  01665E  26E1               	addwf	fsr1l,f,c
 10243  016660  0E00               	movlw	0
 10244  016662  22E2               	addwfc	fsr1h,f,c
 10245                           
 10246                           ;stkvar	_quotient @ sp[(-9)+0]
 10247                           
 10248                           ;incstack = 0
 10249  016664  0E07               	movlw	7
 10250  016666  6E35               	movwf	btemp^0,c
 10251  016668  0EF7               	movlw	-9
 10252  01666A                     u6481:
 10253  01666A  6AE3               	clrf	plusw1,c
 10254  01666C  2AE8               	incf	wreg,f,c
 10255  01666E  0635               	decf	btemp^0,f,c
 10256  016670  E2FC               	bc	u6481
 10257                           
 10258                           ;stkvar	_divisor @ sp[(-9)+-16]
 10259  016672  0EE7               	movlw	-25
 10260  016674  50E3               	movf	plusw1,w,c
 10261  016676  E116               	bnz	u6490
 10262  016678  0EE8               	movlw	-24
 10263  01667A  50E3               	movf	plusw1,w,c
 10264  01667C  E113               	bnz	u6490
 10265  01667E  0EE9               	movlw	-23
 10266  016680  50E3               	movf	plusw1,w,c
 10267  016682  E110               	bnz	u6490
 10268  016684  0EEA               	movlw	-22
 10269  016686  50E3               	movf	plusw1,w,c
 10270  016688  E10D               	bnz	u6490
 10271  01668A  0EEB               	movlw	-21
 10272  01668C  50E3               	movf	plusw1,w,c
 10273  01668E  E10A               	bnz	u6490
 10274  016690  0EEC               	movlw	-20
 10275  016692  50E3               	movf	plusw1,w,c
 10276  016694  E107               	bnz	u6490
 10277  016696  0EED               	movlw	-19
 10278  016698  50E3               	movf	plusw1,w,c
 10279  01669A  E104               	bnz	u6490
 10280  01669C  0EEE               	movlw	-18
 10281  01669E  50E3               	movf	plusw1,w,c
 10282  0166A0  B4D8               	btfsc	status,2,c
 10283  0166A2  D088               	goto	u6520
 10284  0166A4                     u6490:
 10285                           
 10286                           ;stkvar	_counter @ sp[(-9)+8]
 10287  0166A4  0EFF               	movlw	-1
 10288  0166A6  6AE3               	clrf	plusw1,c
 10289  0166A8  D012               	goto	L10
 10290  0166AA                     l7070:
 10291                           
 10292                           ;stkvar	_divisor @ sp[(-9)+-16]
 10293  0166AA  90D8               	bcf	status,0,c
 10294  0166AC  0EE7               	movlw	-25
 10295  0166AE  36E3               	rlcf	plusw1,f,c
 10296  0166B0  0EE8               	movlw	-24
 10297  0166B2  36E3               	rlcf	plusw1,f,c
 10298  0166B4  0EE9               	movlw	-23
 10299  0166B6  36E3               	rlcf	plusw1,f,c
 10300  0166B8  0EEA               	movlw	-22
 10301  0166BA  36E3               	rlcf	plusw1,f,c
 10302  0166BC  0EEB               	movlw	-21
 10303  0166BE  36E3               	rlcf	plusw1,f,c
 10304  0166C0  0EEC               	movlw	-20
 10305  0166C2  36E3               	rlcf	plusw1,f,c
 10306  0166C4  0EED               	movlw	-19
 10307  0166C6  36E3               	rlcf	plusw1,f,c
 10308  0166C8  0EEE               	movlw	-18
 10309  0166CA  36E3               	rlcf	plusw1,f,c
 10310                           
 10311                           ;stkvar	_counter @ sp[(-9)+8]
 10312  0166CC  0EFF               	movlw	-1
 10313  0166CE                     L10:
 10314  0166CE  2AE3               	incf	plusw1,f,c
 10315                           
 10316                           ;stkvar	_divisor @ sp[(-9)+-16]
 10317  0166D0  0EEE               	movlw	-18
 10318  0166D2  AEE3               	btfss	plusw1,7,c
 10319  0166D4  D7EA               	goto	l7070
 10320  0166D6                     u6500:
 10321                           
 10322                           ;stkvar	_quotient @ sp[(-9)+0]
 10323  0166D6  90D8               	bcf	status,0,c
 10324  0166D8  0EF7               	movlw	-9
 10325  0166DA  36E3               	rlcf	plusw1,f,c
 10326  0166DC  0EF8               	movlw	-8
 10327  0166DE  36E3               	rlcf	plusw1,f,c
 10328  0166E0  0EF9               	movlw	-7
 10329  0166E2  36E3               	rlcf	plusw1,f,c
 10330  0166E4  0EFA               	movlw	-6
 10331  0166E6  36E3               	rlcf	plusw1,f,c
 10332  0166E8  0EFB               	movlw	-5
 10333  0166EA  36E3               	rlcf	plusw1,f,c
 10334  0166EC  0EFC               	movlw	-4
 10335  0166EE  36E3               	rlcf	plusw1,f,c
 10336  0166F0  0EFD               	movlw	-3
 10337  0166F2  36E3               	rlcf	plusw1,f,c
 10338  0166F4  0EFE               	movlw	-2
 10339  0166F6  36E3               	rlcf	plusw1,f,c
 10340                           
 10341                           ;stkvar	_divisor @ sp[(-9)+-16]
 10342                           ;stkvar	_dividend @ sp[(-9)+-8]
 10343  0166F8  50E1               	movf	fsr1l,w,c
 10344  0166FA  0FEF               	addlw	-17
 10345  0166FC  6ED9               	movwf	fsr2l,c
 10346  0166FE  50E2               	movf	fsr1h,w,c
 10347  016700  6EDA               	movwf	fsr2h,c
 10348  016702  0EFF               	movlw	255
 10349  016704  22DA               	addwfc	fsr2h,f,c
 10350  016706  0EE7               	movlw	-25
 10351  016708  50E3               	movf	plusw1,w,c
 10352  01670A  5CDE               	subwf	postinc2,w,c
 10353  01670C  0EE8               	movlw	-24
 10354  01670E  50E3               	movf	plusw1,w,c
 10355  016710  58DE               	subwfb	postinc2,w,c
 10356  016712  0EE9               	movlw	-23
 10357  016714  50E3               	movf	plusw1,w,c
 10358  016716  58DE               	subwfb	postinc2,w,c
 10359  016718  0EEA               	movlw	-22
 10360  01671A  50E3               	movf	plusw1,w,c
 10361  01671C  58DE               	subwfb	postinc2,w,c
 10362  01671E  0EEB               	movlw	-21
 10363  016720  50E3               	movf	plusw1,w,c
 10364  016722  58DE               	subwfb	postinc2,w,c
 10365  016724  0EEC               	movlw	-20
 10366  016726  50E3               	movf	plusw1,w,c
 10367  016728  58DE               	subwfb	postinc2,w,c
 10368  01672A  0EED               	movlw	-19
 10369  01672C  50E3               	movf	plusw1,w,c
 10370  01672E  58DE               	subwfb	postinc2,w,c
 10371  016730  0EEE               	movlw	-18
 10372  016732  50E3               	movf	plusw1,w,c
 10373  016734  58DE               	subwfb	postinc2,w,c
 10374  016736  A0D8               	btfss	status,0,c
 10375  016738  D021               	goto	l7082
 10376                           
 10377                           ;stkvar	_divisor @ sp[(-9)+-16]
 10378                           ;stkvar	_dividend @ sp[(-9)+-8]
 10379  01673A  50E1               	movf	fsr1l,w,c
 10380  01673C  0FEF               	addlw	-17
 10381  01673E  6ED9               	movwf	fsr2l,c
 10382  016740  50E2               	movf	fsr1h,w,c
 10383  016742  6EDA               	movwf	fsr2h,c
 10384  016744  0EFF               	movlw	255
 10385  016746  22DA               	addwfc	fsr2h,f,c
 10386  016748  0EE7               	movlw	-25
 10387  01674A  50E3               	movf	plusw1,w,c
 10388  01674C  5EDE               	subwf	postinc2,f,c
 10389  01674E  0EE8               	movlw	-24
 10390  016750  50E3               	movf	plusw1,w,c
 10391  016752  5ADE               	subwfb	postinc2,f,c
 10392  016754  0EE9               	movlw	-23
 10393  016756  50E3               	movf	plusw1,w,c
 10394  016758  5ADE               	subwfb	postinc2,f,c
 10395  01675A  0EEA               	movlw	-22
 10396  01675C  50E3               	movf	plusw1,w,c
 10397  01675E  5ADE               	subwfb	postinc2,f,c
 10398  016760  0EEB               	movlw	-21
 10399  016762  50E3               	movf	plusw1,w,c
 10400  016764  5ADE               	subwfb	postinc2,f,c
 10401  016766  0EEC               	movlw	-20
 10402  016768  50E3               	movf	plusw1,w,c
 10403  01676A  5ADE               	subwfb	postinc2,f,c
 10404  01676C  0EED               	movlw	-19
 10405  01676E  50E3               	movf	plusw1,w,c
 10406  016770  5ADE               	subwfb	postinc2,f,c
 10407  016772  0EEE               	movlw	-18
 10408  016774  50E3               	movf	plusw1,w,c
 10409  016776  5ADE               	subwfb	postinc2,f,c
 10410                           
 10411                           ;stkvar	_quotient @ sp[(-9)+0]
 10412  016778  0EF7               	movlw	-9
 10413  01677A  80E3               	bsf	plusw1,0,c
 10414  01677C                     l7082:
 10415                           
 10416                           ;stkvar	_divisor @ sp[(-9)+-16]
 10417  01677C  90D8               	bcf	status,0,c
 10418  01677E  0EEE               	movlw	-18
 10419  016780  32E3               	rrcf	plusw1,f,c
 10420  016782  0EED               	movlw	-19
 10421  016784  32E3               	rrcf	plusw1,f,c
 10422  016786  0EEC               	movlw	-20
 10423  016788  32E3               	rrcf	plusw1,f,c
 10424  01678A  0EEB               	movlw	-21
 10425  01678C  32E3               	rrcf	plusw1,f,c
 10426  01678E  0EEA               	movlw	-22
 10427  016790  32E3               	rrcf	plusw1,f,c
 10428  016792  0EE9               	movlw	-23
 10429  016794  32E3               	rrcf	plusw1,f,c
 10430  016796  0EE8               	movlw	-24
 10431  016798  32E3               	rrcf	plusw1,f,c
 10432  01679A  0EE7               	movlw	-25
 10433  01679C  32E3               	rrcf	plusw1,f,c
 10434                           
 10435                           ;stkvar	_counter @ sp[(-9)+8]
 10436  01679E  0EFF               	movlw	-1
 10437  0167A0  50E3               	movf	plusw1,w,c
 10438  0167A2  6E35               	movwf	btemp^0,c
 10439  0167A4  0E01               	movlw	1
 10440  0167A6  5E35               	subwf	btemp^0,f,c
 10441  0167A8  0EFF               	movlw	-1
 10442  0167AA  0060  F0D7  FFE3   	movff	btemp,plusw1
 10443  0167B0  A4D8               	btfss	status,2,c
 10444  0167B2  D791               	goto	u6500
 10445  0167B4                     u6520:
 10446                           
 10447                           ;stkvar	_quotient @ sp[(-9)+0]
 10448  0167B4  0EF7               	movlw	247
 10449  0167B6  24E1               	addwf	fsr1l,w,c
 10450  0167B8  6ED9               	movwf	fsr2l,c
 10451  0167BA  0EFF               	movlw	255
 10452  0167BC  20E2               	addwfc	fsr1h,w,c
 10453  0167BE  6EDA               	movwf	fsr2h,c
 10454                           
 10455                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 10456  0167C0  0E08               	movlw	8
 10457  0167C2  6E35               	movwf	btemp^0,c
 10458  0167C4  0EEF               	movlw	-17
 10459  0167C6                     us653999:
 10460  0167C6  006F FF7B FFE3     	movff	postinc2,plusw1
 10461  0167CC  28E8               	incf	wreg,w,c
 10462  0167CE  2E35               	decfsz	btemp^0,f,c
 10463  0167D0  D7FA               	bra	us653999
 10464                           
 10465                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10466  0167D2  0EF7               	movlw	247
 10467  0167D4  26E1               	addwf	fsr1l,f,c
 10468  0167D6  0EFF               	movlw	255
 10469  0167D8  22E2               	addwfc	fsr1h,f,c
 10470  0167DA  0012               	return		;funcret
 10471  0167DC                     __end_of___lodiv:
 10472                           	opt callstack 0
 10473                           
 10474 ;; *************** function _strncmp *****************
 10475 ;; Defined at:
 10476 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10477 ;; Parameters:    Size  Location     Type
 10478 ;;  _l              2  [STACK] PTR const unsigned char 
 10479 ;;		 -> ct(3), STR_32(3), STR_31(3), STR_30(19), 
 10480 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 10481 ;;		 -> STR_25(19), STR_24(24), STR_23(15), STR_22(15), 
 10482 ;;		 -> STR_21(15), STR_20(10), STR_19(10), STR_18(19), 
 10483 ;;		 -> STR_17(19), STR_14(3), STR_13(3), STR_12(3), 
 10484 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
 10485 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 10486 ;;		 -> STR_1(17), 
 10487 ;;  _r              2  [STACK] PTR const unsigned char 
 10488 ;;		 -> STR_67(3), STR_63(3), STR_58(3), STR_53(3), 
 10489 ;;		 -> STR_48(3), STR_44(3), 
 10490 ;;  n               2  [STACK] unsigned int 
 10491 ;; Auto vars:     Size  Location     Type
 10492 ;;  r               2  [STACK] PTR const unsigned char 
 10493 ;;		 -> STR_67(3), STR_63(3), STR_58(3), STR_53(3), 
 10494 ;;		 -> STR_48(3), STR_44(3), 
 10495 ;;  l               2  [STACK] PTR const unsigned char 
 10496 ;;		 -> ct(3), STR_32(3), STR_31(3), STR_30(19), 
 10497 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 10498 ;;		 -> STR_25(19), STR_24(24), STR_23(15), STR_22(15), 
 10499 ;;		 -> STR_21(15), STR_20(10), STR_19(10), STR_18(19), 
 10500 ;;		 -> STR_17(19), STR_14(3), STR_13(3), STR_12(3), 
 10501 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
 10502 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 10503 ;;		 -> STR_1(17), 
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  2  [STACK] int 
 10506 ;; Registers used:
 10507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/4
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10517 ;;Total ram usage:        0 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; Hardware stack levels required when called:    6
 10520 ;; This function calls:
 10521 ;;		Nothing
 10522 ;; This function is called by:
 10523 ;;		_vfpfcnvrt
 10524 ;; This function uses a reentrant model
 10525 ;;
 10526                           
 10527                           	psect	text43
 10528  015CD0                     __ptext43:
 10529                           	opt callstack 0
 10530  015CD0                     _strncmp:
 10531                           	opt callstack 0
 10532                           
 10533                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10534  015CD0  52E6               	movf	postinc1,f,c
 10535  015CD2  52E6               	movf	postinc1,f,c
 10536  015CD4  52E6               	movf	postinc1,f,c
 10537  015CD6  52E6               	movf	postinc1,f,c
 10538                           
 10539                           ;stkvar	__l @ sp[(-4)+-2]
 10540                           
 10541                           ;incstack = 0
 10542  015CD8  0EFA               	movlw	-6
 10543  015CDA  006F FF8C  F03F    	movff	plusw1,btemp+10
 10544  015CE0  0EFB               	movlw	-5
 10545  015CE2  006F FF8C  F040    	movff	plusw1,btemp+11
 10546                           
 10547                           ;stkvar	_l @ sp[(-4)+2]
 10548  015CE8  0EFF               	movlw	-1
 10549  015CEA  0060  F103  FFE3   	movff	btemp+11,plusw1
 10550  015CF0  0EFE               	movlw	-2
 10551  015CF2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10552                           
 10553                           ;stkvar	__r @ sp[(-4)+-4]
 10554  015CF8  0EF8               	movlw	-8
 10555  015CFA  006F FF8C  F03F    	movff	plusw1,btemp+10
 10556  015D00  0EF9               	movlw	-7
 10557  015D02  006F FF8C  F040    	movff	plusw1,btemp+11
 10558                           
 10559                           ;stkvar	_r @ sp[(-4)+0]
 10560  015D08  0EFD               	movlw	-3
 10561  015D0A  0060  F103  FFE3   	movff	btemp+11,plusw1
 10562  015D10  0EFC               	movlw	-4
 10563  015D12  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10564                           
 10565                           ;stkvar	_n @ sp[(-4)+-6]
 10566  015D18  0EF6               	movlw	-10
 10567  015D1A  006F FF8C  F035    	movff	plusw1,btemp
 10568  015D20  0E01               	movlw	1
 10569  015D22  5E35               	subwf	btemp^0,f,c
 10570  015D24  0EF6               	movlw	-10
 10571  015D26  0060  F0D7  FFE3   	movff	btemp,plusw1
 10572  015D2C  0EF7               	movlw	-9
 10573  015D2E  006F FF8C  F035    	movff	plusw1,btemp
 10574  015D34  0E00               	movlw	0
 10575  015D36  5A35               	subwfb	btemp^0,f,c
 10576  015D38  0EF7               	movlw	-9
 10577  015D3A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10578  015D40  0EF6               	movlw	-10
 10579  015D42  28E3               	incf	plusw1,w,c
 10580  015D44  E13F               	bnz	l7726
 10581  015D46  0EF7               	movlw	-9
 10582  015D48  28E3               	incf	plusw1,w,c
 10583  015D4A  A4D8               	btfss	status,2,c
 10584  015D4C  D03B               	goto	l7726
 10585  015D4E  0E00               	movlw	0
 10586  015D50  6E35               	movwf	btemp^0,c
 10587  015D52  0E00               	movlw	0
 10588  015D54  6E36               	movwf	(btemp+1)^0,c
 10589  015D56  D0C7               	goto	l2841
 10590  015D58                     l7724:
 10591                           
 10592                           ;stkvar	_l @ sp[(-4)+2]
 10593  015D58  0EFE               	movlw	-2
 10594  015D5A  50E3               	movf	plusw1,w,c
 10595  015D5C  0F01               	addlw	1
 10596  015D5E  6E35               	movwf	btemp^0,c
 10597  015D60  0EFE               	movlw	-2
 10598  015D62  0060  F0D7  FFE3   	movff	btemp,plusw1
 10599  015D68  6A35               	clrf	btemp^0,c
 10600  015D6A  0EFF               	movlw	-1
 10601  015D6C  50E3               	movf	plusw1,w,c
 10602  015D6E  2035               	addwfc	btemp^0,w,c
 10603  015D70  6E35               	movwf	btemp^0,c
 10604  015D72  0EFF               	movlw	-1
 10605  015D74  0060  F0D7  FFE3   	movff	btemp,plusw1
 10606                           
 10607                           ;stkvar	_r @ sp[(-4)+0]
 10608  015D7A  0EFC               	movlw	-4
 10609  015D7C  50E3               	movf	plusw1,w,c
 10610  015D7E  0F01               	addlw	1
 10611  015D80  6E35               	movwf	btemp^0,c
 10612  015D82  0EFC               	movlw	-4
 10613  015D84  0060  F0D7  FFE3   	movff	btemp,plusw1
 10614  015D8A  6A35               	clrf	btemp^0,c
 10615  015D8C  0EFD               	movlw	-3
 10616  015D8E  50E3               	movf	plusw1,w,c
 10617  015D90  2035               	addwfc	btemp^0,w,c
 10618  015D92  6E35               	movwf	btemp^0,c
 10619  015D94  0EFD               	movlw	-3
 10620  015D96  0060  F0D7  FFE3   	movff	btemp,plusw1
 10621                           
 10622                           ;stkvar	_n @ sp[(-4)+-6]
 10623  015D9C  0EF6               	movlw	-10
 10624  015D9E  006F FF8C  F035    	movff	plusw1,btemp
 10625  015DA4  0E01               	movlw	1
 10626  015DA6  5E35               	subwf	btemp^0,f,c
 10627  015DA8  0EF6               	movlw	-10
 10628  015DAA  0060  F0D7  FFE3   	movff	btemp,plusw1
 10629  015DB0  0EF7               	movlw	-9
 10630  015DB2  006F FF8C  F035    	movff	plusw1,btemp
 10631  015DB8  0E00               	movlw	0
 10632  015DBA  5A35               	subwfb	btemp^0,f,c
 10633  015DBC  0EF7               	movlw	-9
 10634  015DBE  0060  F0D7  FFE3   	movff	btemp,plusw1
 10635  015DC4                     l7726:
 10636                           
 10637                           ;stkvar	_l @ sp[(-4)+2]
 10638  015DC4  0EFE               	movlw	-2
 10639  015DC6  006F FF8F FFF6     	movff	plusw1,tblptrl
 10640  015DCC  0EFF               	movlw	-1
 10641  015DCE  006F FF8F FFF7     	movff	plusw1,tblptrh
 10642  015DD4  0E00               	movlw	low (__mediumconst shr (0+16))
 10643  015DD6  6EF8               	movwf	tblptru,c
 10644  015DD8  0E1F               	movlw	(high __ramtop+-1)
 10645  015DDA  64F7               	cpfsgt	tblptrh,c
 10646  015DDC  D003               	bra	u7757
 10647  015DDE  0008               	tblrd		*
 10648  015DE0  50F5               	movf	tablat,w,c
 10649  015DE2  D007               	bra	u7750
 10650  015DE4                     u7757:
 10651  015DE4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10652  015DEA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10653  015DF0  50EF               	movf	indf0,w,c
 10654  015DF2                     u7750:
 10655  015DF2  0900               	iorlw	0
 10656  015DF4  B4D8               	btfsc	status,2,c
 10657  015DF6  D04A               	goto	u7790
 10658                           
 10659                           ;stkvar	_r @ sp[(-4)+0]
 10660  015DF8  50E1               	movf	fsr1l,w,c
 10661  015DFA  0FFC               	addlw	-4
 10662  015DFC  6ED9               	movwf	fsr2l,c
 10663  015DFE  50E2               	movf	fsr1h,w,c
 10664  015E00  6EDA               	movwf	fsr2h,c
 10665  015E02  0EFF               	movlw	255
 10666  015E04  22DA               	addwfc	fsr2h,f,c
 10667  015E06  006F FF7B FFF6     	movff	postinc2,tblptrl
 10668  015E0C  006F FF77 FFF7     	movff	postdec2,tblptrh
 10669  015E12                     	if	0	;tblptru may be non-zero
 10670  015E12                     	endif
 10671  015E12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10672  015E12  0E00               	movlw	low (__mediumconst shr (0+16))
 10673  015E14  6EF8               	movwf	tblptru,c
 10674  015E16                     	endif
 10675  015E16  0008               	tblrd		*
 10676  015E18  50F5               	movf	tablat,w,c
 10677  015E1A  0900               	iorlw	0
 10678  015E1C  B4D8               	btfsc	status,2,c
 10679  015E1E  D036               	goto	u7790
 10680                           
 10681                           ;stkvar	_n @ sp[(-4)+-6]
 10682  015E20  0EF6               	movlw	-10
 10683  015E22  006F FF8C  F035    	movff	plusw1,btemp
 10684  015E28  0EF7               	movlw	-9
 10685  015E2A  50E3               	movf	plusw1,w,c
 10686  015E2C  1035               	iorwf	btemp^0,w,c
 10687  015E2E  B4D8               	btfsc	status,2,c
 10688  015E30  D02D               	goto	u7790
 10689                           
 10690                           ;stkvar	_r @ sp[(-4)+0]
 10691  015E32  50E1               	movf	fsr1l,w,c
 10692  015E34  0FFC               	addlw	-4
 10693  015E36  6ED9               	movwf	fsr2l,c
 10694  015E38  50E2               	movf	fsr1h,w,c
 10695  015E3A  6EDA               	movwf	fsr2h,c
 10696  015E3C  0EFF               	movlw	255
 10697  015E3E  22DA               	addwfc	fsr2h,f,c
 10698  015E40  006F FF7B FFF6     	movff	postinc2,tblptrl
 10699  015E46  006F FF77 FFF7     	movff	postdec2,tblptrh
 10700  015E4C                     	if	0	;tblptru may be non-zero
 10701  015E4C                     	endif
 10702  015E4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10703  015E4C  0E00               	movlw	low (__mediumconst shr (0+16))
 10704  015E4E  6EF8               	movwf	tblptru,c
 10705  015E50                     	endif
 10706  015E50  0008               	tblrd		*
 10707  015E52  006F FFD4  F040    	movff	tablat,btemp+11
 10708                           
 10709                           ;stkvar	_l @ sp[(-4)+2]
 10710  015E58  0EFE               	movlw	-2
 10711  015E5A  006F FF8F FFF6     	movff	plusw1,tblptrl
 10712  015E60  0EFF               	movlw	-1
 10713  015E62  006F FF8F FFF7     	movff	plusw1,tblptrh
 10714  015E68  0E00               	movlw	low (__mediumconst shr (0+16))
 10715  015E6A  6EF8               	movwf	tblptru,c
 10716  015E6C  0E1F               	movlw	(high __ramtop+-1)
 10717  015E6E  64F7               	cpfsgt	tblptrh,c
 10718  015E70  D003               	bra	u7797
 10719  015E72  0008               	tblrd		*
 10720  015E74  50F5               	movf	tablat,w,c
 10721  015E76  D007               	bra	u7795
 10722  015E78                     u7797:
 10723  015E78  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10724  015E7E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10725  015E84  50EF               	movf	indf0,w,c
 10726  015E86                     u7795:
 10727  015E86  1840               	xorwf	(btemp+11)^0,w,c
 10728  015E88  B4D8               	btfsc	status,2,c
 10729  015E8A  D766               	goto	l7724
 10730  015E8C                     u7790:
 10731                           
 10732                           ;stkvar	_l @ sp[(-4)+2]
 10733  015E8C  0EFE               	movlw	-2
 10734  015E8E  006F FF8F FFF6     	movff	plusw1,tblptrl
 10735  015E94  0EFF               	movlw	-1
 10736  015E96  006F FF8F FFF7     	movff	plusw1,tblptrh
 10737  015E9C  0E00               	movlw	low (__mediumconst shr (0+16))
 10738  015E9E  6EF8               	movwf	tblptru,c
 10739  015EA0  0E1F               	movlw	(high __ramtop+-1)
 10740  015EA2  64F7               	cpfsgt	tblptrh,c
 10741  015EA4  D003               	bra	u7807
 10742  015EA6  0008               	tblrd		*
 10743  015EA8  50F5               	movf	tablat,w,c
 10744  015EAA  D007               	bra	u7800
 10745  015EAC                     u7807:
 10746  015EAC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10747  015EB2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10748  015EB8  50EF               	movf	indf0,w,c
 10749  015EBA                     u7800:
 10750  015EBA  6E35               	movwf	btemp^0,c
 10751  015EBC  6A36               	clrf	(btemp+1)^0,c
 10752                           
 10753                           ;stkvar	_r @ sp[(-4)+0]
 10754  015EBE  50E1               	movf	fsr1l,w,c
 10755  015EC0  0FFC               	addlw	-4
 10756  015EC2  6ED9               	movwf	fsr2l,c
 10757  015EC4  50E2               	movf	fsr1h,w,c
 10758  015EC6  6EDA               	movwf	fsr2h,c
 10759  015EC8  0EFF               	movlw	255
 10760  015ECA  22DA               	addwfc	fsr2h,f,c
 10761  015ECC  006F FF7B FFF6     	movff	postinc2,tblptrl
 10762  015ED2  006F FF77 FFF7     	movff	postdec2,tblptrh
 10763  015ED8                     	if	0	;tblptru may be non-zero
 10764  015ED8                     	endif
 10765  015ED8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10766  015ED8  0E00               	movlw	low (__mediumconst shr (0+16))
 10767  015EDA  6EF8               	movwf	tblptru,c
 10768  015EDC                     	endif
 10769  015EDC  0008               	tblrd		*
 10770  015EDE  50F5               	movf	tablat,w,c
 10771  015EE0  5E35               	subwf	btemp^0,f,c
 10772  015EE2  0E00               	movlw	0
 10773  015EE4  5A36               	subwfb	(btemp+1)^0,f,c
 10774  015EE6                     l2841:
 10775                           
 10776                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10777  015EE6  0EF6               	movlw	246
 10778  015EE8  26E1               	addwf	fsr1l,f,c
 10779  015EEA  0EFF               	movlw	255
 10780  015EEC  22E2               	addwfc	fsr1h,f,c
 10781  015EEE  0012               	return		;funcret
 10782  015EF0                     __end_of_strncmp:
 10783                           	opt callstack 0
 10784                           
 10785 ;; *************** function _stoa *****************
 10786 ;; Defined at:
 10787 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10788 ;; Parameters:    Size  Location     Type
 10789 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10790 ;;		 -> f(6), NULL(0), 
 10791 ;;  s               2  [STACK] PTR unsigned char 
 10792 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
 10793 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
 10794 ;;		 -> STR_3(5), V(187), 
 10795 ;; Auto vars:     Size  Location     Type
 10796 ;;  nuls            7  [STACK] unsigned char [7]
 10797 ;;  l               2  [STACK] int 
 10798 ;;  p               2  [STACK] int 
 10799 ;;  cp              2  [STACK] PTR unsigned char 
 10800 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_16(9), 
 10801 ;;		 -> STR_15(12), D.lcd(216), D(218), T(144), 
 10802 ;;		 -> STR_7(5), STR_3(5), V(187), 
 10803 ;;  w               2  [STACK] int 
 10804 ;;  i               2  [STACK] int 
 10805 ;; Return value:  Size  Location     Type
 10806 ;;                  2  [STACK] int 
 10807 ;; Registers used:
 10808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10809 ;; Tracked objects:
 10810 ;;		On entry : 0/4
 10811 ;;		On exit  : 0/0
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10818 ;;Total ram usage:        0 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; Hardware stack levels required when called:    9
 10821 ;; This function calls:
 10822 ;;		_fputc
 10823 ;;		_strlen
 10824 ;; This function is called by:
 10825 ;;		_vfpfcnvrt
 10826 ;; This function uses a reentrant model
 10827 ;;
 10828                           
 10829                           	psect	text44
 10830  0152DE                     __ptext44:
 10831                           	opt callstack 0
 10832  0152DE                     _stoa:
 10833                           	opt callstack 0
 10834                           
 10835                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10836  0152DE  0E11               	movlw	17
 10837  0152E0  26E1               	addwf	fsr1l,f,c
 10838  0152E2  0E00               	movlw	0
 10839  0152E4  22E2               	addwfc	fsr1h,f,c
 10840                           
 10841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10842                           
 10843                           ;incstack = 0
 10844  0152E6  EE20  F0CF         	lfsr	2,stoa@F1166
 10845                           
 10846                           ;stkvar	_nuls @ sp[(-17)+0]
 10847  0152EA  0E07               	movlw	7
 10848  0152EC  6E35               	movwf	btemp^0,c
 10849  0152EE  0EEF               	movlw	-17
 10850  0152F0                     us990999:
 10851  0152F0  006F FF7B FFE3     	movff	postinc2,plusw1
 10852  0152F6  28E8               	incf	wreg,w,c
 10853  0152F8  2E35               	decfsz	btemp^0,f,c
 10854  0152FA  D7FA               	bra	us990999
 10855                           
 10856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10857                           ;stkvar	_s @ sp[(-17)+-4]
 10858  0152FC  0EEB               	movlw	-21
 10859  0152FE  006F FF8C  F03F    	movff	plusw1,btemp+10
 10860  015304  0EEC               	movlw	-20
 10861  015306  006F FF8C  F040    	movff	plusw1,btemp+11
 10862                           
 10863                           ;stkvar	_cp @ sp[(-17)+11]
 10864  01530C  0EFB               	movlw	-5
 10865  01530E  0060  F103  FFE3   	movff	btemp+11,plusw1
 10866  015314  0EFA               	movlw	-6
 10867  015316  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10868                           
 10869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10870                           ;stkvar	_cp @ sp[(-17)+11]
 10871  01531C  0EFA               	movlw	-6
 10872  01531E  006F FF8C  F035    	movff	plusw1,btemp
 10873  015324  0EFB               	movlw	-5
 10874  015326  50E3               	movf	plusw1,w,c
 10875  015328  1035               	iorwf	btemp^0,w,c
 10876  01532A  A4D8               	btfss	status,2,c
 10877  01532C  D00E               	goto	l9694
 10878                           
 10879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10880                           ;stkvar	_nuls @ sp[(-17)+0]
 10881  01532E  0EEF               	movlw	239
 10882  015330  24E1               	addwf	fsr1l,w,c
 10883  015332  6E3F               	movwf	(btemp+10)^0,c
 10884  015334  0EFF               	movlw	255
 10885  015336  20E2               	addwfc	fsr1h,w,c
 10886  015338  6E40               	movwf	(btemp+11)^0,c
 10887                           
 10888                           ;stkvar	_cp @ sp[(-17)+11]
 10889  01533A  0EFB               	movlw	-5
 10890  01533C  0060  F103  FFE3   	movff	btemp+11,plusw1
 10891  015342  0EFA               	movlw	-6
 10892  015344  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10893  01534A                     l9694:
 10894                           
 10895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10896                           ;stkvar	_cp @ sp[(-17)+11]
 10897  01534A  0EFA               	movlw	-6
 10898  01534C  006F FF8F FFE6     	movff	plusw1,postinc1
 10899  015352  006F FF8F FFE6     	movff	plusw1,postinc1
 10900  015358  ECE8  F0BC         	call	_strlen	;wreg free
 10901                           
 10902                           ;stkvar	_l @ sp[(-17)+7]
 10903  01535C  0EF6               	movlw	-10
 10904  01535E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10905  015364  0EF7               	movlw	-9
 10906  015366  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10907                           
 10908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10909                           ;stkvar	_p @ sp[(-17)+9]
 10910  01536C  0EF8               	movlw	-8
 10911  01536E  0060  F083  FFE3   	movff	_prec,plusw1
 10912  015374  0EF9               	movlw	-7
 10913  015376  0060  F087  FFE3   	movff	_prec+1,plusw1
 10914                           
 10915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10916                           ;stkvar	_p @ sp[(-17)+9]
 10917  01537C  0EF9               	movlw	-7
 10918  01537E  BEE3               	btfsc	plusw1,7,c
 10919  015380  D023               	goto	l1892
 10920                           
 10921                           ;stkvar	_l @ sp[(-17)+7]
 10922                           ;stkvar	_p @ sp[(-17)+9]
 10923  015382  50E1               	movf	fsr1l,w,c
 10924  015384  0FF8               	addlw	-8
 10925  015386  6ED9               	movwf	fsr2l,c
 10926  015388  50E2               	movf	fsr1h,w,c
 10927  01538A  6EDA               	movwf	fsr2h,c
 10928  01538C  0EFF               	movlw	255
 10929  01538E  22DA               	addwfc	fsr2h,f,c
 10930  015390  0EF6               	movlw	-10
 10931  015392  50E3               	movf	plusw1,w,c
 10932  015394  5CDE               	subwf	postinc2,w,c
 10933  015396  50DE               	movf	postinc2,w,c
 10934  015398  0A80               	xorlw	128
 10935  01539A  6E35               	movwf	btemp^0,c
 10936  01539C  0EF7               	movlw	-9
 10937  01539E  50E3               	movf	plusw1,w,c
 10938  0153A0  0A80               	xorlw	128
 10939  0153A2  5835               	subwfb	btemp^0,w,c
 10940  0153A4  B0D8               	btfsc	status,0,c
 10941  0153A6  D010               	goto	l1892
 10942                           
 10943                           ;stkvar	_p @ sp[(-17)+9]
 10944                           ;stkvar	_l @ sp[(-17)+7]
 10945  0153A8  0EF8               	movlw	-8
 10946  0153AA  006F FF8C  F035    	movff	plusw1,btemp
 10947  0153B0  0EF6               	movlw	-10
 10948  0153B2  0060  F0D7  FFE3   	movff	btemp,plusw1
 10949  0153B8  0EF9               	movlw	-7
 10950  0153BA  006F FF8C  F035    	movff	plusw1,btemp
 10951  0153C0  0EF7               	movlw	-9
 10952  0153C2  0060  F0D7  FFE3   	movff	btemp,plusw1
 10953  0153C8                     l1892:
 10954                           
 10955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10956                           ;stkvar	_l @ sp[(-17)+7]
 10957                           ;stkvar	_p @ sp[(-17)+9]
 10958  0153C8  0EF6               	movlw	-10
 10959  0153CA  006F FF8C  F035    	movff	plusw1,btemp
 10960  0153D0  0EF8               	movlw	-8
 10961  0153D2  0060  F0D7  FFE3   	movff	btemp,plusw1
 10962  0153D8  0EF7               	movlw	-9
 10963  0153DA  006F FF8C  F035    	movff	plusw1,btemp
 10964  0153E0  0EF9               	movlw	-7
 10965  0153E2  0060  F0D7  FFE3   	movff	btemp,plusw1
 10966                           
 10967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10968                           ;stkvar	_w @ sp[(-17)+13]
 10969  0153E8  0EFC               	movlw	-4
 10970  0153EA  0060  F07B  FFE3   	movff	_width,plusw1
 10971  0153F0  0EFD               	movlw	-3
 10972  0153F2  0060  F07F  FFE3   	movff	_width+1,plusw1
 10973                           
 10974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10975  0153F8  A022               	btfss	_flags^0,0,c
 10976  0153FA  D01F               	goto	l9714
 10977  0153FC  D031               	goto	u9950
 10978  0153FE                     l9710:
 10979                           
 10980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10981                           ;stkvar	_fp @ sp[(-17)+-2]
 10982  0153FE  0EED               	movlw	-19
 10983  015400  006F FF8F FFE6     	movff	plusw1,postinc1
 10984  015406  006F FF8F FFE6     	movff	plusw1,postinc1
 10985  01540C  0E20               	movlw	32
 10986  01540E  6EE6               	movwf	postinc1,c
 10987  015410  0E00               	movlw	0
 10988  015412  6EE6               	movwf	postinc1,c
 10989  015414  EC36  F0B7         	call	_fputc	;wreg free
 10990                           
 10991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10992                           ;stkvar	_l @ sp[(-17)+7]
 10993  015418  0EF6               	movlw	-10
 10994  01541A  50E3               	movf	plusw1,w,c
 10995  01541C  0F01               	addlw	1
 10996  01541E  6E35               	movwf	btemp^0,c
 10997  015420  0EF6               	movlw	-10
 10998  015422  0060  F0D7  FFE3   	movff	btemp,plusw1
 10999  015428  6A35               	clrf	btemp^0,c
 11000  01542A  0EF7               	movlw	-9
 11001  01542C  50E3               	movf	plusw1,w,c
 11002  01542E  2035               	addwfc	btemp^0,w,c
 11003  015430  6E35               	movwf	btemp^0,c
 11004  015432  0EF7               	movlw	-9
 11005  015434  0060  F0D7  FFE3   	movff	btemp,plusw1
 11006  01543A                     l9714:
 11007                           
 11008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11009                           ;stkvar	_w @ sp[(-17)+13]
 11010                           ;stkvar	_l @ sp[(-17)+7]
 11011  01543A  50E1               	movf	fsr1l,w,c
 11012  01543C  0FF6               	addlw	-10
 11013  01543E  6ED9               	movwf	fsr2l,c
 11014  015440  50E2               	movf	fsr1h,w,c
 11015  015442  6EDA               	movwf	fsr2h,c
 11016  015444  0EFF               	movlw	255
 11017  015446  22DA               	addwfc	fsr2h,f,c
 11018  015448  0EFC               	movlw	-4
 11019  01544A  50E3               	movf	plusw1,w,c
 11020  01544C  5CDE               	subwf	postinc2,w,c
 11021  01544E  50DE               	movf	postinc2,w,c
 11022  015450  0A80               	xorlw	128
 11023  015452  6E35               	movwf	btemp^0,c
 11024  015454  0EFD               	movlw	-3
 11025  015456  50E3               	movf	plusw1,w,c
 11026  015458  0A80               	xorlw	128
 11027  01545A  5835               	subwfb	btemp^0,w,c
 11028  01545C  A0D8               	btfss	status,0,c
 11029  01545E  D7CF               	goto	l9710
 11030  015460                     u9950:
 11031                           
 11032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11033                           ;stkvar	_i @ sp[(-17)+15]
 11034  015460  0EFE               	movlw	-2
 11035  015462  6AE3               	clrf	plusw1,c
 11036  015464  0EFF               	movlw	-1
 11037  015466  6AE3               	clrf	plusw1,c
 11038                           
 11039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11040  015468  D045               	goto	l9724
 11041  01546A                     l9718:
 11042                           
 11043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11044                           ;stkvar	_fp @ sp[(-17)+-2]
 11045  01546A  0EED               	movlw	-19
 11046  01546C  006F FF8F FFE6     	movff	plusw1,postinc1
 11047  015472  006F FF8F FFE6     	movff	plusw1,postinc1
 11048                           
 11049                           ;stkvar	_cp @ sp[(-19)+11]
 11050  015478  0EF8               	movlw	-8
 11051  01547A  006F FF8F FFF6     	movff	plusw1,tblptrl
 11052  015480  0EF9               	movlw	-7
 11053  015482  006F FF8F FFF7     	movff	plusw1,tblptrh
 11054  015488  0E00               	movlw	low (__mediumconst shr (0+16))
 11055  01548A  6EF8               	movwf	tblptru,c
 11056  01548C  0E1F               	movlw	(high __ramtop+-1)
 11057  01548E  64F7               	cpfsgt	tblptrh,c
 11058  015490  D003               	bra	u9967
 11059  015492  0008               	tblrd		*
 11060  015494  50F5               	movf	tablat,w,c
 11061  015496  D007               	bra	u9960
 11062  015498                     u9967:
 11063  015498  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11064  01549E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11065  0154A4  50EF               	movf	indf0,w,c
 11066  0154A6                     u9960:
 11067  0154A6  6EE6               	movwf	postinc1,c
 11068  0154A8  0E00               	movlw	0
 11069  0154AA  6EE6               	movwf	postinc1,c
 11070  0154AC  EC36  F0B7         	call	_fputc	;wreg free
 11071                           
 11072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11073                           ;stkvar	_cp @ sp[(-17)+11]
 11074  0154B0  0EFA               	movlw	-6
 11075  0154B2  50E3               	movf	plusw1,w,c
 11076  0154B4  0F01               	addlw	1
 11077  0154B6  6E35               	movwf	btemp^0,c
 11078  0154B8  0EFA               	movlw	-6
 11079  0154BA  0060  F0D7  FFE3   	movff	btemp,plusw1
 11080  0154C0  6A35               	clrf	btemp^0,c
 11081  0154C2  0EFB               	movlw	-5
 11082  0154C4  50E3               	movf	plusw1,w,c
 11083  0154C6  2035               	addwfc	btemp^0,w,c
 11084  0154C8  6E35               	movwf	btemp^0,c
 11085  0154CA  0EFB               	movlw	-5
 11086  0154CC  0060  F0D7  FFE3   	movff	btemp,plusw1
 11087                           
 11088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11089                           ;stkvar	_i @ sp[(-17)+15]
 11090  0154D2  0EFE               	movlw	-2
 11091  0154D4  50E3               	movf	plusw1,w,c
 11092  0154D6  0F01               	addlw	1
 11093  0154D8  6E35               	movwf	btemp^0,c
 11094  0154DA  0EFE               	movlw	-2
 11095  0154DC  0060  F0D7  FFE3   	movff	btemp,plusw1
 11096  0154E2  6A35               	clrf	btemp^0,c
 11097  0154E4  0EFF               	movlw	-1
 11098  0154E6  50E3               	movf	plusw1,w,c
 11099  0154E8  2035               	addwfc	btemp^0,w,c
 11100  0154EA  6E35               	movwf	btemp^0,c
 11101  0154EC  0EFF               	movlw	-1
 11102  0154EE  0060  F0D7  FFE3   	movff	btemp,plusw1
 11103  0154F4                     l9724:
 11104                           
 11105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11106                           ;stkvar	_p @ sp[(-17)+9]
 11107                           ;stkvar	_i @ sp[(-17)+15]
 11108  0154F4  50E1               	movf	fsr1l,w,c
 11109  0154F6  0FFE               	addlw	-2
 11110  0154F8  6ED9               	movwf	fsr2l,c
 11111  0154FA  50E2               	movf	fsr1h,w,c
 11112  0154FC  6EDA               	movwf	fsr2h,c
 11113  0154FE  0EFF               	movlw	255
 11114  015500  22DA               	addwfc	fsr2h,f,c
 11115  015502  0EF8               	movlw	-8
 11116  015504  50E3               	movf	plusw1,w,c
 11117  015506  5CDE               	subwf	postinc2,w,c
 11118  015508  50DE               	movf	postinc2,w,c
 11119  01550A  0A80               	xorlw	128
 11120  01550C  6E35               	movwf	btemp^0,c
 11121  01550E  0EF9               	movlw	-7
 11122  015510  50E3               	movf	plusw1,w,c
 11123  015512  0A80               	xorlw	128
 11124  015514  5835               	subwfb	btemp^0,w,c
 11125  015516  A0D8               	btfss	status,0,c
 11126  015518  D7A8               	goto	l9718
 11127                           
 11128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11129  01551A  B022               	btfsc	_flags^0,0,c
 11130  01551C  D01F               	goto	l9732
 11131  01551E  D031               	goto	u9990
 11132  015520                     l9728:
 11133                           
 11134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11135                           ;stkvar	_fp @ sp[(-17)+-2]
 11136  015520  0EED               	movlw	-19
 11137  015522  006F FF8F FFE6     	movff	plusw1,postinc1
 11138  015528  006F FF8F FFE6     	movff	plusw1,postinc1
 11139  01552E  0E20               	movlw	32
 11140  015530  6EE6               	movwf	postinc1,c
 11141  015532  0E00               	movlw	0
 11142  015534  6EE6               	movwf	postinc1,c
 11143  015536  EC36  F0B7         	call	_fputc	;wreg free
 11144                           
 11145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11146                           ;stkvar	_l @ sp[(-17)+7]
 11147  01553A  0EF6               	movlw	-10
 11148  01553C  50E3               	movf	plusw1,w,c
 11149  01553E  0F01               	addlw	1
 11150  015540  6E35               	movwf	btemp^0,c
 11151  015542  0EF6               	movlw	-10
 11152  015544  0060  F0D7  FFE3   	movff	btemp,plusw1
 11153  01554A  6A35               	clrf	btemp^0,c
 11154  01554C  0EF7               	movlw	-9
 11155  01554E  50E3               	movf	plusw1,w,c
 11156  015550  2035               	addwfc	btemp^0,w,c
 11157  015552  6E35               	movwf	btemp^0,c
 11158  015554  0EF7               	movlw	-9
 11159  015556  0060  F0D7  FFE3   	movff	btemp,plusw1
 11160  01555C                     l9732:
 11161                           
 11162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11163                           ;stkvar	_w @ sp[(-17)+13]
 11164                           ;stkvar	_l @ sp[(-17)+7]
 11165  01555C  50E1               	movf	fsr1l,w,c
 11166  01555E  0FF6               	addlw	-10
 11167  015560  6ED9               	movwf	fsr2l,c
 11168  015562  50E2               	movf	fsr1h,w,c
 11169  015564  6EDA               	movwf	fsr2h,c
 11170  015566  0EFF               	movlw	255
 11171  015568  22DA               	addwfc	fsr2h,f,c
 11172  01556A  0EFC               	movlw	-4
 11173  01556C  50E3               	movf	plusw1,w,c
 11174  01556E  5CDE               	subwf	postinc2,w,c
 11175  015570  50DE               	movf	postinc2,w,c
 11176  015572  0A80               	xorlw	128
 11177  015574  6E35               	movwf	btemp^0,c
 11178  015576  0EFD               	movlw	-3
 11179  015578  50E3               	movf	plusw1,w,c
 11180  01557A  0A80               	xorlw	128
 11181  01557C  5835               	subwfb	btemp^0,w,c
 11182  01557E  A0D8               	btfss	status,0,c
 11183  015580  D7CF               	goto	l9728
 11184  015582                     u9990:
 11185                           
 11186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11187                           ;stkvar	_l @ sp[(-17)+7]
 11188  015582  0EF6               	movlw	-10
 11189  015584  006F FF8C  F035    	movff	plusw1,btemp
 11190  01558A  0EF7               	movlw	-9
 11191  01558C  006F FF8C  F036    	movff	plusw1,btemp+1
 11192                           
 11193                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11194  015592  0EEB               	movlw	235
 11195  015594  26E1               	addwf	fsr1l,f,c
 11196  015596  0EFF               	movlw	255
 11197  015598  22E2               	addwfc	fsr1h,f,c
 11198  01559A  0012               	return		;funcret
 11199  01559C                     __end_of_stoa:
 11200                           	opt callstack 0
 11201                           
 11202 ;; *************** function _efgtoa *****************
 11203 ;; Defined at:
 11204 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11205 ;; Parameters:    Size  Location     Type
 11206 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11207 ;;		 -> f(6), NULL(0), 
 11208 ;;  f               4  [STACK] PTR struct _IO_FILE
 11209 ;;  c               1  [STACK] unsigned char 
 11210 ;; Auto vars:     Size  Location     Type
 11211 ;;  u               4  [STACK] unsigned char 
 11212 ;;  g               4  [STACK] unsigned char 
 11213 ;;  l               4  [STACK] unsigned char 
 11214 ;;  h               4  [STACK] unsigned char 
 11215 ;;  ou              4  [STACK] unsigned char 
 11216 ;;  n               2  [STACK] int 
 11217 ;;  e               2  [STACK] int 
 11218 ;;  i               2  [STACK] int 
 11219 ;;  w               2  [STACK] int 
 11220 ;;  p               2  [STACK] int 
 11221 ;;  sign            2  [STACK] int 
 11222 ;;  d               2  [STACK] int 
 11223 ;;  ne              2  [STACK] int 
 11224 ;;  m               2  [STACK] int 
 11225 ;;  pp              2  [STACK] int 
 11226 ;;  t               2  [STACK] int 
 11227 ;;  mode            1  [STACK] unsigned char 
 11228 ;;  nmode           1  [STACK] unsigned char 
 11229 ;; Return value:  Size  Location     Type
 11230 ;;                  2  [STACK] int 
 11231 ;; Registers used:
 11232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11233 ;; Tracked objects:
 11234 ;;		On entry : 0/4
 11235 ;;		On exit  : 0/0
 11236 ;;		Unchanged: 0/0
 11237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11242 ;;Total ram usage:        0 bytes
 11243 ;; Hardware stack levels used:    1
 11244 ;; Hardware stack levels required when called:   11
 11245 ;; This function calls:
 11246 ;;		___awdiv
 11247 ;;		___awmod
 11248 ;;		___fladd
 11249 ;;		___fldiv
 11250 ;;		___fleq
 11251 ;;		___flge
 11252 ;;		___flmul
 11253 ;;		___flneg
 11254 ;;		___flsub
 11255 ;;		___fltol
 11256 ;;		___fpclassifyf
 11257 ;;		_floorf
 11258 ;;		_isupper
 11259 ;;		_pad
 11260 ;;		_strcpy
 11261 ;;		_tolower
 11262 ;; This function is called by:
 11263 ;;		_vfpfcnvrt
 11264 ;; This function uses a reentrant model
 11265 ;;
 11266                           
 11267                           	psect	text45
 11268  010000                     __ptext45:
 11269                           	opt callstack 0
 11270  010000                     _efgtoa:
 11271                           	opt callstack 0
 11272                           
 11273                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11274  010000  0E38               	movlw	56
 11275  010002  26E1               	addwf	fsr1l,f,c
 11276  010004  0E00               	movlw	0
 11277  010006  22E2               	addwfc	fsr1h,f,c
 11278                           
 11279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11280                           ;stkvar	_sign @ sp[(-56)+42]
 11281                           
 11282                           ;incstack = 0
 11283  010008  0EF2               	movlw	-14
 11284  01000A  6AE3               	clrf	plusw1,c
 11285  01000C  0EF3               	movlw	-13
 11286  01000E  6AE3               	clrf	plusw1,c
 11287                           
 11288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11289                           ;stkvar	_f @ sp[(-56)+-6]
 11290  010010  0EC2               	movlw	-62
 11291  010012  006F FF8C  F03D    	movff	plusw1,btemp+8
 11292  010018  0EC3               	movlw	-61
 11293  01001A  006F FF8C  F03E    	movff	plusw1,btemp+9
 11294  010020  0EC4               	movlw	-60
 11295  010022  006F FF8C  F03F    	movff	plusw1,btemp+10
 11296  010028  0EC5               	movlw	-59
 11297  01002A  006F FF8C  F040    	movff	plusw1,btemp+11
 11298                           
 11299                           ;stkvar	_g @ sp[(-56)+16]
 11300  010030  0ED8               	movlw	-40
 11301  010032  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11302  010038  0ED9               	movlw	-39
 11303  01003A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11304  010040  0EDA               	movlw	-38
 11305  010042  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11306  010048  0EDB               	movlw	-37
 11307  01004A  0060  F103  FFE3   	movff	btemp+11,plusw1
 11308                           
 11309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11310                           ;stkvar	_g @ sp[(-56)+16]
 11311  010050  0EDB               	movlw	-37
 11312  010052  AEE3               	btfss	plusw1,7,c
 11313  010054  D02B               	goto	l9392
 11314                           
 11315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11316  010056  0E01               	movlw	1
 11317  010058  6E3F               	movwf	(btemp+10)^0,c
 11318  01005A  0E00               	movlw	0
 11319  01005C  6E40               	movwf	(btemp+11)^0,c
 11320                           
 11321                           ;stkvar	_sign @ sp[(-56)+42]
 11322  01005E  0EF2               	movlw	-14
 11323  010060  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11324  010066  0EF3               	movlw	-13
 11325  010068  0060  F103  FFE3   	movff	btemp+11,plusw1
 11326                           
 11327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11328                           ;stkvar	_g @ sp[(-56)+16]
 11329  01006E  0ED8               	movlw	-40
 11330  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11331  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11332  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11333  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11334  010088  EC0A  F0C2         	call	___flneg	;wreg free
 11335                           
 11336                           ;stkvar	_g @ sp[(-56)+16]
 11337  01008C  0ED8               	movlw	-40
 11338  01008E  0060  F0D7  FFE3   	movff	btemp,plusw1
 11339  010094  0ED9               	movlw	-39
 11340  010096  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11341  01009C  0EDA               	movlw	-38
 11342  01009E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11343  0100A4  0EDB               	movlw	-37
 11344  0100A6  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11345  0100AC                     l9392:
 11346                           
 11347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11348                           ;stkvar	_n @ sp[(-56)+32]
 11349  0100AC  0EE8               	movlw	-24
 11350  0100AE  6AE3               	clrf	plusw1,c
 11351  0100B0  0EE9               	movlw	-23
 11352  0100B2  6AE3               	clrf	plusw1,c
 11353                           
 11354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11355                           ;stkvar	_w @ sp[(-56)+38]
 11356  0100B4  0EEE               	movlw	-18
 11357  0100B6  0060  F07B  FFE3   	movff	_width,plusw1
 11358  0100BC  0EEF               	movlw	-17
 11359  0100BE  0060  F07F  FFE3   	movff	_width+1,plusw1
 11360                           
 11361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11362                           ;stkvar	_sign @ sp[(-56)+42]
 11363  0100C4  0EF2               	movlw	-14
 11364  0100C6  006F FF8C  F035    	movff	plusw1,btemp
 11365  0100CC  0EF3               	movlw	-13
 11366  0100CE  50E3               	movf	plusw1,w,c
 11367  0100D0  1035               	iorwf	btemp^0,w,c
 11368  0100D2  A4D8               	btfss	status,2,c
 11369  0100D4  D002               	goto	u9400
 11370  0100D6  A422               	btfss	_flags^0,2,c
 11371  0100D8  D036               	goto	l9412
 11372  0100DA                     u9400:
 11373                           
 11374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11375                           ;stkvar	_sign @ sp[(-56)+42]
 11376  0100DA  0EF2               	movlw	-14
 11377  0100DC  006F FF8C  F035    	movff	plusw1,btemp
 11378  0100E2  0EF3               	movlw	-13
 11379  0100E4  50E3               	movf	plusw1,w,c
 11380  0100E6  1035               	iorwf	btemp^0,w,c
 11381  0100E8  A4D8               	btfss	status,2,c
 11382  0100EA  D002               	goto	l9404
 11383  0100EC  0E2B               	movlw	43
 11384  0100EE  D001               	goto	L11
 11385  0100F0                     l9404:
 11386  0100F0  0E2D               	movlw	45
 11387  0100F2                     L11:
 11388  0100F2  6E3F               	movwf	(btemp+10)^0,c
 11389  0100F4  0E00               	movlw	0
 11390  0100F6  6E40               	movwf	(btemp+11)^0,c
 11391                           
 11392                           ;stkvar	_efgtoa$4202 @ sp[(-56)+10]
 11393  0100F8  0ED2               	movlw	-46
 11394  0100FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11395  010100  0ED3               	movlw	-45
 11396  010102  0060  F103  FFE3   	movff	btemp+11,plusw1
 11397                           
 11398                           ;stkvar	_efgtoa$4202 @ sp[(-56)+10]
 11399  010108  0ED2               	movlw	-46
 11400  01010A  006F FF8C  F2AC    	movff	plusw1,_dbuf
 11401                           
 11402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11403                           ;stkvar	_n @ sp[(-56)+32]
 11404  010110  0EE8               	movlw	-24
 11405  010112  50E3               	movf	plusw1,w,c
 11406  010114  0F01               	addlw	1
 11407  010116  6E35               	movwf	btemp^0,c
 11408  010118  0EE8               	movlw	-24
 11409  01011A  0060  F0D7  FFE3   	movff	btemp,plusw1
 11410  010120  6A35               	clrf	btemp^0,c
 11411  010122  0EE9               	movlw	-23
 11412  010124  50E3               	movf	plusw1,w,c
 11413  010126  2035               	addwfc	btemp^0,w,c
 11414  010128  6E35               	movwf	btemp^0,c
 11415  01012A  0EE9               	movlw	-23
 11416  01012C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11417                           
 11418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11419                           ;stkvar	_w @ sp[(-56)+38]
 11420  010132  50E1               	movf	fsr1l,w,c
 11421  010134  0FEE               	addlw	-18
 11422  010136  6ED9               	movwf	fsr2l,c
 11423  010138  50E2               	movf	fsr1h,w,c
 11424  01013A  6EDA               	movwf	fsr2h,c
 11425  01013C  0EFF               	movlw	255
 11426  01013E  22DA               	addwfc	fsr2h,f,c
 11427  010140  06DE               	decf	postinc2,f,c
 11428  010142  0E00               	movlw	0
 11429  010144  5ADD               	subwfb	postdec2,f,c
 11430  010146                     l9412:
 11431                           
 11432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11433                           ;stkvar	_g @ sp[(-56)+16]
 11434  010146  0ED8               	movlw	-40
 11435  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11436  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11437  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11438  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11439  010160  EC63  F0B2         	call	___fpclassifyf	;wreg free
 11440  010164  0435               	decf	btemp^0,w,c
 11441  010166  1036               	iorwf	(btemp+1)^0,w,c
 11442  010168  A4D8               	btfss	status,2,c
 11443  01016A  D076               	goto	l9430
 11444  01016C  0EBF               	movlw	191
 11445  01016E  6E3F               	movwf	(btemp+10)^0,c
 11446  010170  0EFF               	movlw	255
 11447  010172  6E40               	movwf	(btemp+11)^0,c
 11448                           
 11449                           ;stkvar	_c @ sp[(-56)+-7]
 11450  010174  0EC1               	movlw	-63
 11451  010176  50E3               	movf	plusw1,w,c
 11452  010178  6E3D               	movwf	(btemp+8)^0,c
 11453  01017A  6A3E               	clrf	(btemp+9)^0,c
 11454  01017C  503F               	movf	(btemp+10)^0,w,c
 11455  01017E  263D               	addwf	(btemp+8)^0,f,c
 11456  010180  5040               	movf	(btemp+11)^0,w,c
 11457  010182  223E               	addwfc	(btemp+9)^0,f,c
 11458  010184  503E               	movf	(btemp+9)^0,w,c
 11459  010186  E106               	bnz	u9430
 11460  010188  0E1A               	movlw	26
 11461  01018A  5C3D               	subwf	(btemp+8)^0,w,c
 11462  01018C  B0D8               	btfsc	status,0,c
 11463  01018E  D002               	goto	u9430
 11464  010190  0E01               	movlw	1
 11465  010192  D001               	goto	u9440
 11466  010194                     u9430:
 11467  010194  0E00               	movlw	0
 11468  010196                     u9440:
 11469  010196  6E3F               	movwf	(btemp+10)^0,c
 11470  010198  6A40               	clrf	(btemp+11)^0,c
 11471                           
 11472                           ;stkvar	_efgtoa$4203 @ sp[(-56)+8]
 11473  01019A  0ED0               	movlw	-48
 11474  01019C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11475  0101A2  0ED1               	movlw	-47
 11476  0101A4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11477                           
 11478                           ;stkvar	_efgtoa$4203 @ sp[(-56)+8]
 11479  0101AA  0ED0               	movlw	-48
 11480  0101AC  006F FF8C  F035    	movff	plusw1,btemp
 11481  0101B2  0ED1               	movlw	-47
 11482  0101B4  50E3               	movf	plusw1,w,c
 11483  0101B6  1035               	iorwf	btemp^0,w,c
 11484  0101B8  B4D8               	btfsc	status,2,c
 11485  0101BA  D017               	goto	l9422
 11486                           
 11487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11488  0101BC  0ED7               	movlw	low STR_34
 11489  0101BE  6EE6               	movwf	postinc1,c
 11490  0101C0  0EFF               	movlw	high STR_34
 11491  0101C2  6EE6               	movwf	postinc1,c
 11492                           
 11493                           ;stkvar	_n @ sp[(-58)+32]
 11494  0101C4  0EAC               	movlw	low _dbuf
 11495  0101C6  6E3F               	movwf	(btemp+10)^0,c
 11496  0101C8  0E02               	movlw	high _dbuf
 11497  0101CA  6E40               	movwf	(btemp+11)^0,c
 11498  0101CC  0EE6               	movlw	-26
 11499  0101CE  50E3               	movf	plusw1,w,c
 11500  0101D0  263F               	addwf	(btemp+10)^0,f,c
 11501  0101D2  0EE7               	movlw	-25
 11502  0101D4  50E3               	movf	plusw1,w,c
 11503  0101D6  2240               	addwfc	(btemp+11)^0,f,c
 11504  0101D8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11505  0101DE  0060  F103  FFE6   	movff	btemp+11,postinc1
 11506  0101E4  EC5F  F0BA         	call	_strcpy	;wreg free
 11507                           
 11508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11509  0101E8  D016               	goto	l9424
 11510  0101EA                     l9422:
 11511                           
 11512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11513  0101EA  0EDF               	movlw	low STR_35
 11514  0101EC  6EE6               	movwf	postinc1,c
 11515  0101EE  0EFF               	movlw	high STR_35
 11516  0101F0  6EE6               	movwf	postinc1,c
 11517                           
 11518                           ;stkvar	_n @ sp[(-58)+32]
 11519  0101F2  0EAC               	movlw	low _dbuf
 11520  0101F4  6E3F               	movwf	(btemp+10)^0,c
 11521  0101F6  0E02               	movlw	high _dbuf
 11522  0101F8  6E40               	movwf	(btemp+11)^0,c
 11523  0101FA  0EE6               	movlw	-26
 11524  0101FC  50E3               	movf	plusw1,w,c
 11525  0101FE  263F               	addwf	(btemp+10)^0,f,c
 11526  010200  0EE7               	movlw	-25
 11527  010202  50E3               	movf	plusw1,w,c
 11528  010204  2240               	addwfc	(btemp+11)^0,f,c
 11529  010206  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11530  01020C  0060  F103  FFE6   	movff	btemp+11,postinc1
 11531  010212  EC5F  F0BA         	call	_strcpy	;wreg free
 11532  010216                     l9424:
 11533                           
 11534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11535                           ;stkvar	_w @ sp[(-56)+38]
 11536  010216  50E1               	movf	fsr1l,w,c
 11537  010218  0FEE               	addlw	-18
 11538  01021A  6ED9               	movwf	fsr2l,c
 11539  01021C  50E2               	movf	fsr1h,w,c
 11540  01021E  6EDA               	movwf	fsr2h,c
 11541  010220  0EFF               	movlw	255
 11542  010222  22DA               	addwfc	fsr2h,f,c
 11543  010224  0EFD               	movlw	253
 11544  010226  26DE               	addwf	postinc2,f,c
 11545  010228  0EFF               	movlw	255
 11546  01022A  22DD               	addwfc	postdec2,f,c
 11547  01022C                     l9426:
 11548                           
 11549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11550                           ;stkvar	_w @ sp[(-56)+38]
 11551  01022C  0EEE               	movlw	-18
 11552  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11553  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11554  01023A  0EAC               	movlw	low _dbuf
 11555  01023C  6EE6               	movwf	postinc1,c
 11556  01023E  0E02               	movlw	high _dbuf
 11557  010240  6EE6               	movwf	postinc1,c
 11558                           
 11559                           ;stkvar	_fp @ sp[(-60)+-2]
 11560  010242  0EC2               	movlw	-62
 11561  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11562  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11563  010250  EC54  F0B8         	call	_pad	;wreg free
 11564  010254  EF1D  F089         	goto	l1810
 11565  010258                     l9430:
 11566                           
 11567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11568                           ;stkvar	_g @ sp[(-56)+16]
 11569  010258  0ED8               	movlw	-40
 11570  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11571  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11572  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11573  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11574  010272  EC63  F0B2         	call	___fpclassifyf	;wreg free
 11575  010276  5035               	movf	btemp^0,w,c
 11576  010278  1036               	iorwf	(btemp+1)^0,w,c
 11577  01027A  A4D8               	btfss	status,2,c
 11578  01027C  D056               	goto	l9448
 11579  01027E  0EBF               	movlw	191
 11580  010280  6E3F               	movwf	(btemp+10)^0,c
 11581  010282  0EFF               	movlw	255
 11582  010284  6E40               	movwf	(btemp+11)^0,c
 11583                           
 11584                           ;stkvar	_c @ sp[(-56)+-7]
 11585  010286  0EC1               	movlw	-63
 11586  010288  50E3               	movf	plusw1,w,c
 11587  01028A  6E3D               	movwf	(btemp+8)^0,c
 11588  01028C  6A3E               	clrf	(btemp+9)^0,c
 11589  01028E  503F               	movf	(btemp+10)^0,w,c
 11590  010290  263D               	addwf	(btemp+8)^0,f,c
 11591  010292  5040               	movf	(btemp+11)^0,w,c
 11592  010294  223E               	addwfc	(btemp+9)^0,f,c
 11593  010296  503E               	movf	(btemp+9)^0,w,c
 11594  010298  E106               	bnz	u9470
 11595  01029A  0E1A               	movlw	26
 11596  01029C  5C3D               	subwf	(btemp+8)^0,w,c
 11597  01029E  B0D8               	btfsc	status,0,c
 11598  0102A0  D002               	goto	u9470
 11599  0102A2  0E01               	movlw	1
 11600  0102A4  D001               	goto	u9480
 11601  0102A6                     u9470:
 11602  0102A6  0E00               	movlw	0
 11603  0102A8                     u9480:
 11604  0102A8  6E3F               	movwf	(btemp+10)^0,c
 11605  0102AA  6A40               	clrf	(btemp+11)^0,c
 11606                           
 11607                           ;stkvar	_efgtoa$4207 @ sp[(-56)+6]
 11608  0102AC  0ECE               	movlw	-50
 11609  0102AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11610  0102B4  0ECF               	movlw	-49
 11611  0102B6  0060  F103  FFE3   	movff	btemp+11,plusw1
 11612                           
 11613                           ;stkvar	_efgtoa$4207 @ sp[(-56)+6]
 11614  0102BC  0ECE               	movlw	-50
 11615  0102BE  006F FF8C  F035    	movff	plusw1,btemp
 11616  0102C4  0ECF               	movlw	-49
 11617  0102C6  50E3               	movf	plusw1,w,c
 11618  0102C8  1035               	iorwf	btemp^0,w,c
 11619  0102CA  B4D8               	btfsc	status,2,c
 11620  0102CC  D017               	goto	l9440
 11621                           
 11622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11623  0102CE  0EDB               	movlw	low STR_38
 11624  0102D0  6EE6               	movwf	postinc1,c
 11625  0102D2  0EFF               	movlw	high STR_38
 11626  0102D4  6EE6               	movwf	postinc1,c
 11627                           
 11628                           ;stkvar	_n @ sp[(-58)+32]
 11629  0102D6  0EAC               	movlw	low _dbuf
 11630  0102D8  6E3F               	movwf	(btemp+10)^0,c
 11631  0102DA  0E02               	movlw	high _dbuf
 11632  0102DC  6E40               	movwf	(btemp+11)^0,c
 11633  0102DE  0EE6               	movlw	-26
 11634  0102E0  50E3               	movf	plusw1,w,c
 11635  0102E2  263F               	addwf	(btemp+10)^0,f,c
 11636  0102E4  0EE7               	movlw	-25
 11637  0102E6  50E3               	movf	plusw1,w,c
 11638  0102E8  2240               	addwfc	(btemp+11)^0,f,c
 11639  0102EA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11640  0102F0  0060  F103  FFE6   	movff	btemp+11,postinc1
 11641  0102F6  EC5F  F0BA         	call	_strcpy	;wreg free
 11642                           
 11643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11644  0102FA  D78D               	goto	l9424
 11645  0102FC                     l9440:
 11646                           
 11647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11648  0102FC  0EE3               	movlw	low STR_39
 11649  0102FE  6EE6               	movwf	postinc1,c
 11650  010300  0EFF               	movlw	high STR_39
 11651  010302  6EE6               	movwf	postinc1,c
 11652                           
 11653                           ;stkvar	_n @ sp[(-58)+32]
 11654  010304  0EAC               	movlw	low _dbuf
 11655  010306  6E3F               	movwf	(btemp+10)^0,c
 11656  010308  0E02               	movlw	high _dbuf
 11657  01030A  6E40               	movwf	(btemp+11)^0,c
 11658  01030C  0EE6               	movlw	-26
 11659  01030E  50E3               	movf	plusw1,w,c
 11660  010310  263F               	addwf	(btemp+10)^0,f,c
 11661  010312  0EE7               	movlw	-25
 11662  010314  50E3               	movf	plusw1,w,c
 11663  010316  2240               	addwfc	(btemp+11)^0,f,c
 11664  010318  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11665  01031E  0060  F103  FFE6   	movff	btemp+11,postinc1
 11666  010324  EC5F  F0BA         	call	_strcpy	;wreg free
 11667  010328  D776               	goto	l9424
 11668  01032A                     l9448:
 11669                           
 11670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11671  01032A  0E00               	movlw	0
 11672  01032C  6E3D               	movwf	(btemp+8)^0,c
 11673  01032E  0E00               	movlw	0
 11674  010330  6E3E               	movwf	(btemp+9)^0,c
 11675  010332  0E80               	movlw	128
 11676  010334  6E3F               	movwf	(btemp+10)^0,c
 11677  010336  0E3F               	movlw	63
 11678  010338  6E40               	movwf	(btemp+11)^0,c
 11679                           
 11680                           ;stkvar	_u @ sp[(-56)+12]
 11681  01033A  0ED4               	movlw	-44
 11682  01033C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11683  010342  0ED5               	movlw	-43
 11684  010344  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11685  01034A  0ED6               	movlw	-42
 11686  01034C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11687  010352  0ED7               	movlw	-41
 11688  010354  0060  F103  FFE3   	movff	btemp+11,plusw1
 11689                           
 11690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11691                           ;stkvar	_e @ sp[(-56)+34]
 11692  01035A  0EEA               	movlw	-22
 11693  01035C  6AE3               	clrf	plusw1,c
 11694  01035E  0EEB               	movlw	-21
 11695  010360  6AE3               	clrf	plusw1,c
 11696                           
 11697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11698  010362  0E00               	movlw	0
 11699  010364  6EE6               	movwf	postinc1,c
 11700  010366  0E00               	movlw	0
 11701  010368  6EE6               	movwf	postinc1,c
 11702  01036A  0E00               	movlw	0
 11703  01036C  6EE6               	movwf	postinc1,c
 11704  01036E  0E00               	movlw	0
 11705  010370  6EE6               	movwf	postinc1,c
 11706                           
 11707                           ;stkvar	_g @ sp[(-60)+16]
 11708  010372  0ED4               	movlw	-44
 11709  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11710  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11711  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11712  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11713  01038C  EC2C  F0BB         	call	___fleq	;wreg free
 11714  010390  A035               	btfss	btemp& (0+255),0,c
 11715  010392  D039               	goto	l9460
 11716  010394  D0BC               	goto	u9520
 11717  010396                     l9456:
 11718                           
 11719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11720  010396  0E00               	movlw	0
 11721  010398  6EE6               	movwf	postinc1,c
 11722  01039A  0E00               	movlw	0
 11723  01039C  6EE6               	movwf	postinc1,c
 11724  01039E  0E20               	movlw	32
 11725  0103A0  6EE6               	movwf	postinc1,c
 11726  0103A2  0E41               	movlw	65
 11727  0103A4  6EE6               	movwf	postinc1,c
 11728                           
 11729                           ;stkvar	_u @ sp[(-60)+12]
 11730  0103A6  0ED0               	movlw	-48
 11731  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11732  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11733  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11734  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11735  0103C0  ECF8  F090         	call	___flmul	;wreg free
 11736                           
 11737                           ;stkvar	_u @ sp[(-56)+12]
 11738  0103C4  0ED4               	movlw	-44
 11739  0103C6  0060  F0D7  FFE3   	movff	btemp,plusw1
 11740  0103CC  0ED5               	movlw	-43
 11741  0103CE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11742  0103D4  0ED6               	movlw	-42
 11743  0103D6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11744  0103DC  0ED7               	movlw	-41
 11745  0103DE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11746                           
 11747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11748                           ;stkvar	_e @ sp[(-56)+34]
 11749  0103E4  0EEA               	movlw	-22
 11750  0103E6  50E3               	movf	plusw1,w,c
 11751  0103E8  0F01               	addlw	1
 11752  0103EA  6E35               	movwf	btemp^0,c
 11753  0103EC  0EEA               	movlw	-22
 11754  0103EE  0060  F0D7  FFE3   	movff	btemp,plusw1
 11755  0103F4  6A35               	clrf	btemp^0,c
 11756  0103F6  0EEB               	movlw	-21
 11757  0103F8  50E3               	movf	plusw1,w,c
 11758  0103FA  2035               	addwfc	btemp^0,w,c
 11759  0103FC  6E35               	movwf	btemp^0,c
 11760  0103FE  0EEB               	movlw	-21
 11761  010400  0060  F0D7  FFE3   	movff	btemp,plusw1
 11762  010406                     l9460:
 11763                           
 11764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11765  010406  0E00               	movlw	0
 11766  010408  6EE6               	movwf	postinc1,c
 11767  01040A  0E00               	movlw	0
 11768  01040C  6EE6               	movwf	postinc1,c
 11769  01040E  0E20               	movlw	32
 11770  010410  6EE6               	movwf	postinc1,c
 11771  010412  0E41               	movlw	65
 11772  010414  6EE6               	movwf	postinc1,c
 11773                           
 11774                           ;stkvar	_u @ sp[(-60)+12]
 11775  010416  0ED0               	movlw	-48
 11776  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11777  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11778  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11779  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11780  010430  ECF8  F090         	call	___flmul	;wreg free
 11781  010434  0060  F0D7  FFE6   	movff	btemp,postinc1
 11782  01043A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 11783  010440  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 11784  010446  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 11785                           
 11786                           ;stkvar	_g @ sp[(-60)+16]
 11787  01044C  0ED4               	movlw	-44
 11788  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11789  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11790  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11791  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11792  010466  ECA7  F0B4         	call	___flge	;wreg free
 11793  01046A  A035               	btfss	btemp& (0+255),0,c
 11794  01046C  D032               	goto	l9466
 11795  01046E  D793               	goto	l9456
 11796  010470                     l9462:
 11797                           
 11798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11799  010470  0E00               	movlw	0
 11800  010472  6EE6               	movwf	postinc1,c
 11801  010474  0E00               	movlw	0
 11802  010476  6EE6               	movwf	postinc1,c
 11803  010478  0E20               	movlw	32
 11804  01047A  6EE6               	movwf	postinc1,c
 11805  01047C  0E41               	movlw	65
 11806  01047E  6EE6               	movwf	postinc1,c
 11807                           
 11808                           ;stkvar	_u @ sp[(-60)+12]
 11809  010480  0ED0               	movlw	-48
 11810  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11811  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11812  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11813  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11814  01049A  ECD0  F09B         	call	___fldiv	;wreg free
 11815                           
 11816                           ;stkvar	_u @ sp[(-56)+12]
 11817  01049E  0ED4               	movlw	-44
 11818  0104A0  0060  F0D7  FFE3   	movff	btemp,plusw1
 11819  0104A6  0ED5               	movlw	-43
 11820  0104A8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11821  0104AE  0ED6               	movlw	-42
 11822  0104B0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11823  0104B6  0ED7               	movlw	-41
 11824  0104B8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11825                           
 11826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11827                           ;stkvar	_e @ sp[(-56)+34]
 11828  0104BE  50E1               	movf	fsr1l,w,c
 11829  0104C0  0FEA               	addlw	-22
 11830  0104C2  6ED9               	movwf	fsr2l,c
 11831  0104C4  50E2               	movf	fsr1h,w,c
 11832  0104C6  6EDA               	movwf	fsr2h,c
 11833  0104C8  0EFF               	movlw	255
 11834  0104CA  22DA               	addwfc	fsr2h,f,c
 11835  0104CC  06DE               	decf	postinc2,f,c
 11836  0104CE  0E00               	movlw	0
 11837  0104D0  5ADD               	subwfb	postdec2,f,c
 11838  0104D2                     l9466:
 11839                           
 11840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11841                           ;stkvar	_u @ sp[(-56)+12]
 11842  0104D2  0ED4               	movlw	-44
 11843  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11844  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11845  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11846  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11847                           
 11848                           ;stkvar	_g @ sp[(-60)+16]
 11849  0104EC  0ED4               	movlw	-44
 11850  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11851  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11852  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11853  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11854  010506  ECA7  F0B4         	call	___flge	;wreg free
 11855  01050A  A035               	btfss	btemp& (0+255),0,c
 11856  01050C  D7B1               	goto	l9462
 11857  01050E                     u9520:
 11858                           
 11859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11860                           ;stkvar	_c @ sp[(-56)+-7]
 11861  01050E  0EC1               	movlw	-63
 11862  010510  50E3               	movf	plusw1,w,c
 11863  010512  6EE6               	movwf	postinc1,c
 11864  010514  0E00               	movlw	0
 11865  010516  6EE6               	movwf	postinc1,c
 11866  010518  ECE9  F0BE         	call	_tolower	;wreg free
 11867                           
 11868                           ;stkvar	_mode @ sp[(-56)+54]
 11869  01051C  0EFE               	movlw	-2
 11870  01051E  0060  F0D7  FFE3   	movff	btemp,plusw1
 11871                           
 11872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11873                           ;stkvar	_mode @ sp[(-56)+54]
 11874                           ;stkvar	_nmode @ sp[(-56)+55]
 11875  010524  0EFE               	movlw	-2
 11876  010526  006F FF8C  F035    	movff	plusw1,btemp
 11877  01052C  0EFF               	movlw	-1
 11878  01052E  0060  F0D7  FFE3   	movff	btemp,plusw1
 11879                           
 11880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11881                           ;stkvar	_mode @ sp[(-56)+54]
 11882  010534  0EFE               	movlw	-2
 11883  010536  006F FF8C  F035    	movff	plusw1,btemp
 11884  01053C  0E67               	movlw	103
 11885  01053E  1835               	xorwf	btemp^0,w,c
 11886  010540  A4D8               	btfss	status,2,c
 11887  010542  D025               	goto	l9484
 11888                           
 11889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11890  010544  5020               	movf	_prec^0,w,c
 11891  010546  1021               	iorwf	(_prec+1)^0,w,c
 11892  010548  A4D8               	btfss	status,2,c
 11893  01054A  D004               	goto	l9478
 11894                           
 11895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 11896  01054C  0E00               	movlw	0
 11897  01054E  6E21               	movwf	(_prec+1)^0,c
 11898  010550  0E01               	movlw	1
 11899  010552  6E20               	movwf	_prec^0,c
 11900  010554                     l9478:
 11901                           
 11902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 11903  010554  BE21               	btfsc	(_prec+1)^0,7,c
 11904  010556  D005               	goto	u9550
 11905  010558  5021               	movf	(_prec+1)^0,w,c
 11906  01055A  E110               	bnz	l9482
 11907  01055C  0420               	decf	_prec^0,w,c
 11908  01055E  B0D8               	btfsc	status,0,c
 11909  010560  D00D               	goto	l9482
 11910  010562                     u9550:
 11911  010562  0E06               	movlw	6
 11912  010564  6E3F               	movwf	(btemp+10)^0,c
 11913  010566  0E00               	movlw	0
 11914  010568  6E40               	movwf	(btemp+11)^0,c
 11915                           
 11916                           ;stkvar	_p @ sp[(-56)+40]
 11917  01056A  0EF0               	movlw	-16
 11918  01056C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11919  010572  0EF1               	movlw	-15
 11920  010574  0060  F103  FFE3   	movff	btemp+11,plusw1
 11921  01057A  D00C               	goto	l9490
 11922  01057C                     l9482:
 11923                           
 11924                           ;stkvar	_p @ sp[(-56)+40]
 11925  01057C  0EF0               	movlw	-16
 11926  01057E  0060  F083  FFE3   	movff	_prec,plusw1
 11927  010584  0EF1               	movlw	-15
 11928  010586  0060  F087  FFE3   	movff	_prec+1,plusw1
 11929  01058C  D003               	goto	l9490
 11930  01058E                     l9484:
 11931                           
 11932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 11933  01058E  AE21               	btfss	(_prec+1)^0,7,c
 11934  010590  D7F5               	goto	l9482
 11935  010592  D7E7               	goto	u9550
 11936  010594                     l9490:
 11937                           
 11938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 11939                           ;stkvar	_mode @ sp[(-56)+54]
 11940  010594  0EFE               	movlw	-2
 11941  010596  006F FF8C  F035    	movff	plusw1,btemp
 11942  01059C  0E67               	movlw	103
 11943  01059E  1835               	xorwf	btemp^0,w,c
 11944  0105A0  A4D8               	btfss	status,2,c
 11945  0105A2  D02F               	goto	l9500
 11946                           
 11947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 11948                           ;stkvar	_e @ sp[(-56)+34]
 11949  0105A4  0EEB               	movlw	-21
 11950  0105A6  AEE3               	btfss	plusw1,7,c
 11951  0105A8  D00E               	goto	u9580
 11952  0105AA  0EEA               	movlw	-22
 11953  0105AC  006F FF8C  F035    	movff	plusw1,btemp
 11954  0105B2  0EFC               	movlw	252
 11955  0105B4  5E35               	subwf	btemp^0,f,c
 11956  0105B6  0EEB               	movlw	-21
 11957  0105B8  006F FF8C  F035    	movff	plusw1,btemp
 11958  0105BE  0EFF               	movlw	255
 11959  0105C0  5A35               	subwfb	btemp^0,f,c
 11960  0105C2  A0D8               	btfss	status,0,c
 11961  0105C4  D018               	goto	l9498
 11962  0105C6                     u9580:
 11963                           
 11964                           ;stkvar	_e @ sp[(-56)+34]
 11965                           ;stkvar	_p @ sp[(-56)+40]
 11966  0105C6  0EF0               	movlw	-16
 11967  0105C8  50E3               	movf	plusw1,w,c
 11968  0105CA  0FFF               	addlw	255
 11969  0105CC  6E3F               	movwf	(btemp+10)^0,c
 11970  0105CE  0EF1               	movlw	-15
 11971  0105D0  006F FF8C  F040    	movff	plusw1,btemp+11
 11972  0105D6  0EFF               	movlw	255
 11973  0105D8  2240               	addwfc	(btemp+11)^0,f,c
 11974  0105DA  0EEA               	movlw	-22
 11975  0105DC  50E3               	movf	plusw1,w,c
 11976  0105DE  5C3F               	subwf	(btemp+10)^0,w,c
 11977  0105E0  5040               	movf	(btemp+11)^0,w,c
 11978  0105E2  0A80               	xorlw	128
 11979  0105E4  6E35               	movwf	btemp^0,c
 11980  0105E6  0EEB               	movlw	-21
 11981  0105E8  50E3               	movf	plusw1,w,c
 11982  0105EA  0A80               	xorlw	128
 11983  0105EC  5835               	subwfb	btemp^0,w,c
 11984  0105EE  A0D8               	btfss	status,0,c
 11985  0105F0  D002               	goto	l9498
 11986                           
 11987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 11988  0105F2  0E66               	movlw	102
 11989  0105F4  D001               	goto	L12
 11990  0105F6                     l9498:
 11991                           
 11992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 11993  0105F6  0E65               	movlw	101
 11994  0105F8                     L12:
 11995  0105F8  6E40               	movwf	(btemp+11)^0,c
 11996                           
 11997                           ;stkvar	_nmode @ sp[(-56)+55]
 11998  0105FA  0EFF               	movlw	-1
 11999  0105FC  0060  F103  FFE3   	movff	btemp+11,plusw1
 12000  010602                     l9500:
 12001                           
 12002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 12003                           ;stkvar	_p @ sp[(-56)+40]
 12004                           ;stkvar	_m @ sp[(-56)+48]
 12005  010602  0EF0               	movlw	-16
 12006  010604  006F FF8C  F035    	movff	plusw1,btemp
 12007  01060A  0EF8               	movlw	-8
 12008  01060C  0060  F0D7  FFE3   	movff	btemp,plusw1
 12009  010612  0EF1               	movlw	-15
 12010  010614  006F FF8C  F035    	movff	plusw1,btemp
 12011  01061A  0EF9               	movlw	-7
 12012  01061C  0060  F0D7  FFE3   	movff	btemp,plusw1
 12013                           
 12014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 12015                           ;stkvar	_mode @ sp[(-56)+54]
 12016  010622  0EFE               	movlw	-2
 12017  010624  006F FF8C  F035    	movff	plusw1,btemp
 12018  01062A  0E67               	movlw	103
 12019  01062C  1835               	xorwf	btemp^0,w,c
 12020  01062E  A4D8               	btfss	status,2,c
 12021  010630  D00B               	goto	u9620
 12022                           
 12023                           ;stkvar	_nmode @ sp[(-56)+55]
 12024  010632  0EFF               	movlw	-1
 12025  010634  006F FF8C  F035    	movff	plusw1,btemp
 12026  01063A  0E66               	movlw	102
 12027  01063C  1835               	xorwf	btemp^0,w,c
 12028  01063E  A4D8               	btfss	status,2,c
 12029  010640  D014               	goto	l1839
 12030                           
 12031                           ;stkvar	_e @ sp[(-56)+34]
 12032  010642  0EEB               	movlw	-21
 12033  010644  AEE3               	btfss	plusw1,7,c
 12034  010646  D011               	goto	l1839
 12035  010648                     u9620:
 12036                           
 12037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 12038                           ;stkvar	_m @ sp[(-56)+48]
 12039  010648  0EF8               	movlw	-8
 12040  01064A  50E3               	movf	plusw1,w,c
 12041  01064C  0F01               	addlw	1
 12042  01064E  6E35               	movwf	btemp^0,c
 12043  010650  0EF8               	movlw	-8
 12044  010652  0060  F0D7  FFE3   	movff	btemp,plusw1
 12045  010658  6A35               	clrf	btemp^0,c
 12046  01065A  0EF9               	movlw	-7
 12047  01065C  50E3               	movf	plusw1,w,c
 12048  01065E  2035               	addwfc	btemp^0,w,c
 12049  010660  6E35               	movwf	btemp^0,c
 12050  010662  0EF9               	movlw	-7
 12051  010664  0060  F0D7  FFE3   	movff	btemp,plusw1
 12052  01066A                     l1839:
 12053                           
 12054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 12055                           ;stkvar	_nmode @ sp[(-56)+55]
 12056  01066A  0EFF               	movlw	-1
 12057  01066C  006F FF8C  F035    	movff	plusw1,btemp
 12058  010672  0E66               	movlw	102
 12059  010674  1835               	xorwf	btemp^0,w,c
 12060  010676  A4D8               	btfss	status,2,c
 12061  010678  D03B               	goto	l9520
 12062                           
 12063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 12064                           ;stkvar	_e @ sp[(-56)+34]
 12065  01067A  0EEB               	movlw	-21
 12066  01067C  AEE3               	btfss	plusw1,7,c
 12067  01067E  D01C               	goto	l9516
 12068                           
 12069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 12070  010680  0E00               	movlw	0
 12071  010682  6E3D               	movwf	(btemp+8)^0,c
 12072  010684  0E00               	movlw	0
 12073  010686  6E3E               	movwf	(btemp+9)^0,c
 12074  010688  0E80               	movlw	128
 12075  01068A  6E3F               	movwf	(btemp+10)^0,c
 12076  01068C  0E3F               	movlw	63
 12077  01068E  6E40               	movwf	(btemp+11)^0,c
 12078                           
 12079                           ;stkvar	_u @ sp[(-56)+12]
 12080  010690  0ED4               	movlw	-44
 12081  010692  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12082  010698  0ED5               	movlw	-43
 12083  01069A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12084  0106A0  0ED6               	movlw	-42
 12085  0106A2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12086  0106A8  0ED7               	movlw	-41
 12087  0106AA  0060  F103  FFE3   	movff	btemp+11,plusw1
 12088                           
 12089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 12090                           ;stkvar	_e @ sp[(-56)+34]
 12091  0106B0  0EEA               	movlw	-22
 12092  0106B2  6AE3               	clrf	plusw1,c
 12093  0106B4  0EEB               	movlw	-21
 12094  0106B6  6AE3               	clrf	plusw1,c
 12095  0106B8                     l9516:
 12096                           
 12097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 12098                           ;stkvar	_mode @ sp[(-56)+54]
 12099  0106B8  0EFE               	movlw	-2
 12100  0106BA  006F FF8C  F035    	movff	plusw1,btemp
 12101  0106C0  0E67               	movlw	103
 12102  0106C2  1835               	xorwf	btemp^0,w,c
 12103  0106C4  B4D8               	btfsc	status,2,c
 12104  0106C6  D014               	goto	l9520
 12105                           
 12106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12107                           ;stkvar	_e @ sp[(-56)+34]
 12108                           ;stkvar	_m @ sp[(-56)+48]
 12109  0106C8  0EF8               	movlw	-8
 12110  0106CA  50E3               	movf	plusw1,w,c
 12111  0106CC  6E35               	movwf	btemp^0,c
 12112  0106CE  0EEA               	movlw	-22
 12113  0106D0  50E3               	movf	plusw1,w,c
 12114  0106D2  2635               	addwf	btemp^0,f,c
 12115  0106D4  0EF8               	movlw	-8
 12116  0106D6  0060  F0D7  FFE3   	movff	btemp,plusw1
 12117  0106DC  0EF9               	movlw	-7
 12118  0106DE  50E3               	movf	plusw1,w,c
 12119  0106E0  6E35               	movwf	btemp^0,c
 12120  0106E2  0EEB               	movlw	-21
 12121  0106E4  50E3               	movf	plusw1,w,c
 12122  0106E6  2235               	addwfc	btemp^0,f,c
 12123  0106E8  0EF9               	movlw	-7
 12124  0106EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 12125  0106F0                     l9520:
 12126                           
 12127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12128                           ;stkvar	_i @ sp[(-56)+36]
 12129  0106F0  0EEC               	movlw	-20
 12130  0106F2  6AE3               	clrf	plusw1,c
 12131  0106F4  0EED               	movlw	-19
 12132  0106F6  6AE3               	clrf	plusw1,c
 12133                           
 12134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12135                           ;stkvar	_g @ sp[(-56)+16]
 12136  0106F8  0ED8               	movlw	-40
 12137  0106FA  006F FF8C  F03D    	movff	plusw1,btemp+8
 12138  010700  0ED9               	movlw	-39
 12139  010702  006F FF8C  F03E    	movff	plusw1,btemp+9
 12140  010708  0EDA               	movlw	-38
 12141  01070A  006F FF8C  F03F    	movff	plusw1,btemp+10
 12142  010710  0EDB               	movlw	-37
 12143  010712  006F FF8C  F040    	movff	plusw1,btemp+11
 12144                           
 12145                           ;stkvar	_h @ sp[(-56)+24]
 12146  010718  0EE0               	movlw	-32
 12147  01071A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12148  010720  0EE1               	movlw	-31
 12149  010722  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12150  010728  0EE2               	movlw	-30
 12151  01072A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12152  010730  0EE3               	movlw	-29
 12153  010732  0060  F103  FFE3   	movff	btemp+11,plusw1
 12154                           
 12155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12156                           ;stkvar	_u @ sp[(-56)+12]
 12157  010738  0ED4               	movlw	-44
 12158  01073A  006F FF8C  F03D    	movff	plusw1,btemp+8
 12159  010740  0ED5               	movlw	-43
 12160  010742  006F FF8C  F03E    	movff	plusw1,btemp+9
 12161  010748  0ED6               	movlw	-42
 12162  01074A  006F FF8C  F03F    	movff	plusw1,btemp+10
 12163  010750  0ED7               	movlw	-41
 12164  010752  006F FF8C  F040    	movff	plusw1,btemp+11
 12165                           
 12166                           ;stkvar	_ou @ sp[(-56)+28]
 12167  010758  0EE4               	movlw	-28
 12168  01075A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12169  010760  0EE5               	movlw	-27
 12170  010762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12171  010768  0EE6               	movlw	-26
 12172  01076A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12173  010770  0EE7               	movlw	-25
 12174  010772  0060  F103  FFE3   	movff	btemp+11,plusw1
 12175                           
 12176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12177  010778  D0D6               	goto	l9536
 12178  01077A                     l9526:
 12179                           
 12180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12181                           ;stkvar	_u @ sp[(-56)+12]
 12182  01077A  0ED4               	movlw	-44
 12183  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12184  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12185  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12186  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12187                           
 12188                           ;stkvar	_h @ sp[(-60)+24]
 12189  010794  0EDC               	movlw	-36
 12190  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12191  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12192  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12193  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12194  0107AE  ECD0  F09B         	call	___fldiv	;wreg free
 12195  0107B2  0060  F0D7  FFE6   	movff	btemp,postinc1
 12196  0107B8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 12197  0107BE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 12198  0107C4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 12199  0107CA  ECA3  F0A4         	call	_floorf	;wreg free
 12200                           
 12201                           ;stkvar	_l @ sp[(-56)+20]
 12202  0107CE  0EDC               	movlw	-36
 12203  0107D0  0060  F0D7  FFE3   	movff	btemp,plusw1
 12204  0107D6  0EDD               	movlw	-35
 12205  0107D8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12206  0107DE  0EDE               	movlw	-34
 12207  0107E0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12208  0107E6  0EDF               	movlw	-33
 12209  0107E8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12210                           
 12211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12212                           ;stkvar	_l @ sp[(-56)+20]
 12213  0107EE  0EDC               	movlw	-36
 12214  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12215  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12216  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12217  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12218  010808  ECEE  F0B3         	call	___fltol	;wreg free
 12219  01080C  0060  F0D4  F03F   	movff	btemp,btemp+10
 12220  010812  0060  F0D8  F040   	movff	btemp+1,btemp+11
 12221                           
 12222                           ;stkvar	_d @ sp[(-56)+44]
 12223  010818  0EF4               	movlw	-12
 12224  01081A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12225  010820  0EF5               	movlw	-11
 12226  010822  0060  F103  FFE3   	movff	btemp+11,plusw1
 12227                           
 12228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12229                           ;stkvar	_u @ sp[(-56)+12]
 12230  010828  0ED4               	movlw	-44
 12231  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12232  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12233  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12234  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12235                           
 12236                           ;stkvar	_l @ sp[(-60)+20]
 12237  010842  0ED8               	movlw	-40
 12238  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12239  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12240  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12241  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12242  01085C  ECF8  F090         	call	___flmul	;wreg free
 12243  010860  0060  F0D7  FFE6   	movff	btemp,postinc1
 12244  010866  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 12245  01086C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 12246  010872  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 12247                           
 12248                           ;stkvar	_h @ sp[(-60)+24]
 12249  010878  0EDC               	movlw	-36
 12250  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12251  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12252  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12253  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12254  010892  EC2E  F0C2         	call	___flsub	;wreg free
 12255                           
 12256                           ;stkvar	_h @ sp[(-56)+24]
 12257  010896  0EE0               	movlw	-32
 12258  010898  0060  F0D7  FFE3   	movff	btemp,plusw1
 12259  01089E  0EE1               	movlw	-31
 12260  0108A0  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12261  0108A6  0EE2               	movlw	-30
 12262  0108A8  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12263  0108AE  0EE3               	movlw	-29
 12264  0108B0  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12265                           
 12266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12267  0108B6  0E00               	movlw	0
 12268  0108B8  6EE6               	movwf	postinc1,c
 12269  0108BA  0E00               	movlw	0
 12270  0108BC  6EE6               	movwf	postinc1,c
 12271  0108BE  0E20               	movlw	32
 12272  0108C0  6EE6               	movwf	postinc1,c
 12273  0108C2  0E41               	movlw	65
 12274  0108C4  6EE6               	movwf	postinc1,c
 12275                           
 12276                           ;stkvar	_u @ sp[(-60)+12]
 12277  0108C6  0ED0               	movlw	-48
 12278  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12279  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12280  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12281  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12282  0108E0  ECD0  F09B         	call	___fldiv	;wreg free
 12283                           
 12284                           ;stkvar	_u @ sp[(-56)+12]
 12285  0108E4  0ED4               	movlw	-44
 12286  0108E6  0060  F0D7  FFE3   	movff	btemp,plusw1
 12287  0108EC  0ED5               	movlw	-43
 12288  0108EE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12289  0108F4  0ED6               	movlw	-42
 12290  0108F6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12291  0108FC  0ED7               	movlw	-41
 12292  0108FE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12293                           
 12294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12295                           ;stkvar	_i @ sp[(-56)+36]
 12296  010904  0EEC               	movlw	-20
 12297  010906  50E3               	movf	plusw1,w,c
 12298  010908  0F01               	addlw	1
 12299  01090A  6E35               	movwf	btemp^0,c
 12300  01090C  0EEC               	movlw	-20
 12301  01090E  0060  F0D7  FFE3   	movff	btemp,plusw1
 12302  010914  6A35               	clrf	btemp^0,c
 12303  010916  0EED               	movlw	-19
 12304  010918  50E3               	movf	plusw1,w,c
 12305  01091A  2035               	addwfc	btemp^0,w,c
 12306  01091C  6E35               	movwf	btemp^0,c
 12307  01091E  0EED               	movlw	-19
 12308  010920  0060  F0D7  FFE3   	movff	btemp,plusw1
 12309  010926                     l9536:
 12310                           
 12311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12312                           ;stkvar	_m @ sp[(-56)+48]
 12313                           ;stkvar	_i @ sp[(-56)+36]
 12314  010926  50E1               	movf	fsr1l,w,c
 12315  010928  0FEC               	addlw	-20
 12316  01092A  6ED9               	movwf	fsr2l,c
 12317  01092C  50E2               	movf	fsr1h,w,c
 12318  01092E  6EDA               	movwf	fsr2h,c
 12319  010930  0EFF               	movlw	255
 12320  010932  22DA               	addwfc	fsr2h,f,c
 12321  010934  0EF8               	movlw	-8
 12322  010936  50E3               	movf	plusw1,w,c
 12323  010938  5CDE               	subwf	postinc2,w,c
 12324  01093A  50DE               	movf	postinc2,w,c
 12325  01093C  0A80               	xorlw	128
 12326  01093E  6E35               	movwf	btemp^0,c
 12327  010940  0EF9               	movlw	-7
 12328  010942  50E3               	movf	plusw1,w,c
 12329  010944  0A80               	xorlw	128
 12330  010946  5835               	subwfb	btemp^0,w,c
 12331  010948  A0D8               	btfss	status,0,c
 12332  01094A  D717               	goto	l9526
 12333                           
 12334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12335  01094C  0E00               	movlw	0
 12336  01094E  6EE6               	movwf	postinc1,c
 12337  010950  0E00               	movlw	0
 12338  010952  6EE6               	movwf	postinc1,c
 12339  010954  0EA0               	movlw	160
 12340  010956  6EE6               	movwf	postinc1,c
 12341  010958  0E40               	movlw	64
 12342  01095A  6EE6               	movwf	postinc1,c
 12343                           
 12344                           ;stkvar	_u @ sp[(-60)+12]
 12345  01095C  0ED0               	movlw	-48
 12346  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12347  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12348  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12349  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12350  010976  ECF8  F090         	call	___flmul	;wreg free
 12351                           
 12352                           ;stkvar	_l @ sp[(-56)+20]
 12353  01097A  0EDC               	movlw	-36
 12354  01097C  0060  F0D7  FFE3   	movff	btemp,plusw1
 12355  010982  0EDD               	movlw	-35
 12356  010984  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12357  01098A  0EDE               	movlw	-34
 12358  01098C  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12359  010992  0EDF               	movlw	-33
 12360  010994  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12361                           
 12362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12363                           ;stkvar	_l @ sp[(-56)+20]
 12364  01099A  0EDC               	movlw	-36
 12365  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12366  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12367  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12368  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12369                           
 12370                           ;stkvar	_h @ sp[(-60)+24]
 12371  0109B4  0EDC               	movlw	-36
 12372  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12373  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12374  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12375  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12376  0109CE  ECA7  F0B4         	call	___flge	;wreg free
 12377  0109D2  A035               	btfss	btemp& (0+255),0,c
 12378  0109D4  D021               	goto	u9690
 12379                           
 12380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12381                           ;stkvar	_l @ sp[(-56)+20]
 12382                           
 12383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12384                           
 12385                           ;stkvar	_l @ sp[(-56)+20]
 12386                           
 12387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12388  0109D6  0EDC               	movlw	-36
 12389  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12390  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12391  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12392  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12393                           
 12394                           ;stkvar	_h @ sp[(-60)+24]
 12395  0109F0  0EDC               	movlw	-36
 12396  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12397  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12398  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12399  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12400  010A0A  EC2C  F0BB         	call	___fleq	;wreg free
 12401  010A0E  A035               	btfss	btemp& (0+255),0,c
 12402  010A10  D01B               	goto	l9550
 12403                           
 12404                           ;stkvar	_d @ sp[(-56)+44]
 12405  010A12  0EF4               	movlw	-12
 12406  010A14  B0E3               	btfsc	plusw1,0,c
 12407  010A16  D018               	goto	l9550
 12408  010A18                     u9690:
 12409                           
 12410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12411  010A18  0E00               	movlw	0
 12412  010A1A  6E3D               	movwf	(btemp+8)^0,c
 12413  010A1C  0E00               	movlw	0
 12414  010A1E  6E3E               	movwf	(btemp+9)^0,c
 12415  010A20  0E00               	movlw	0
 12416  010A22  6E3F               	movwf	(btemp+10)^0,c
 12417  010A24  0E00               	movlw	0
 12418  010A26  6E40               	movwf	(btemp+11)^0,c
 12419                           
 12420                           ;stkvar	_l @ sp[(-56)+20]
 12421  010A28  0EDC               	movlw	-36
 12422  010A2A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12423  010A30  0EDD               	movlw	-35
 12424  010A32  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12425  010A38  0EDE               	movlw	-34
 12426  010A3A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12427  010A40  0EDF               	movlw	-33
 12428  010A42  0060  F103  FFE3   	movff	btemp+11,plusw1
 12429  010A48                     l9550:
 12430                           
 12431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12432                           ;stkvar	_l @ sp[(-56)+20]
 12433  010A48  0EDC               	movlw	-36
 12434  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12435  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12436  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12437  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12438                           
 12439                           ;stkvar	_g @ sp[(-60)+16]
 12440  010A62  0ED4               	movlw	-44
 12441  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12442  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12443  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12444  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12445  010A7C  EC0D  F095         	call	___fladd	;wreg free
 12446                           
 12447                           ;stkvar	_h @ sp[(-56)+24]
 12448  010A80  0EE0               	movlw	-32
 12449  010A82  0060  F0D7  FFE3   	movff	btemp,plusw1
 12450  010A88  0EE1               	movlw	-31
 12451  010A8A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12452  010A90  0EE2               	movlw	-30
 12453  010A92  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12454  010A98  0EE3               	movlw	-29
 12455  010A9A  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12456                           
 12457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12458                           ;stkvar	_ou @ sp[(-56)+28]
 12459  010AA0  0EE4               	movlw	-28
 12460  010AA2  006F FF8C  F03D    	movff	plusw1,btemp+8
 12461  010AA8  0EE5               	movlw	-27
 12462  010AAA  006F FF8C  F03E    	movff	plusw1,btemp+9
 12463  010AB0  0EE6               	movlw	-26
 12464  010AB2  006F FF8C  F03F    	movff	plusw1,btemp+10
 12465  010AB8  0EE7               	movlw	-25
 12466  010ABA  006F FF8C  F040    	movff	plusw1,btemp+11
 12467                           
 12468                           ;stkvar	_u @ sp[(-56)+12]
 12469  010AC0  0ED4               	movlw	-44
 12470  010AC2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12471  010AC8  0ED5               	movlw	-43
 12472  010ACA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12473  010AD0  0ED6               	movlw	-42
 12474  010AD2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12475  010AD8  0ED7               	movlw	-41
 12476  010ADA  0060  F103  FFE3   	movff	btemp+11,plusw1
 12477                           
 12478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12479                           ;stkvar	_nmode @ sp[(-56)+55]
 12480  010AE0  0EFF               	movlw	-1
 12481  010AE2  006F FF8C  F035    	movff	plusw1,btemp
 12482  010AE8  0E65               	movlw	101
 12483  010AEA  1835               	xorwf	btemp^0,w,c
 12484  010AEC  B4D8               	btfsc	status,2,c
 12485  010AEE  D011               	goto	l9558
 12486                           
 12487                           ;stkvar	_e @ sp[(-56)+34]
 12488                           ;stkvar	_ne @ sp[(-56)+46]
 12489  010AF0  0EEA               	movlw	-22
 12490  010AF2  006F FF8C  F035    	movff	plusw1,btemp
 12491  010AF8  0EF6               	movlw	-10
 12492  010AFA  0060  F0D7  FFE3   	movff	btemp,plusw1
 12493  010B00  0EEB               	movlw	-21
 12494  010B02  006F FF8C  F035    	movff	plusw1,btemp
 12495  010B08  0EF7               	movlw	-9
 12496  010B0A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12497  010B10  D004               	goto	l1854
 12498  010B12                     l9558:
 12499                           
 12500                           ;stkvar	_ne @ sp[(-56)+46]
 12501  010B12  0EF6               	movlw	-10
 12502  010B14  6AE3               	clrf	plusw1,c
 12503  010B16  0EF7               	movlw	-9
 12504  010B18  6AE3               	clrf	plusw1,c
 12505  010B1A                     l1854:
 12506                           
 12507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12508                           ;stkvar	_pp @ sp[(-56)+50]
 12509  010B1A  0EFA               	movlw	-6
 12510  010B1C  6AE3               	clrf	plusw1,c
 12511  010B1E  0EFB               	movlw	-5
 12512  010B20  6AE3               	clrf	plusw1,c
 12513                           
 12514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12515                           ;stkvar	_t @ sp[(-56)+52]
 12516  010B22  0EFC               	movlw	-4
 12517  010B24  6AE3               	clrf	plusw1,c
 12518  010B26  0EFD               	movlw	-3
 12519  010B28  6AE3               	clrf	plusw1,c
 12520                           
 12521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12522                           ;stkvar	_i @ sp[(-56)+36]
 12523  010B2A  0EEC               	movlw	-20
 12524  010B2C  6AE3               	clrf	plusw1,c
 12525  010B2E  0EED               	movlw	-19
 12526  010B30  6AE3               	clrf	plusw1,c
 12527                           
 12528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12529  010B32  D1B7               	goto	l9610
 12530  010B34                     l9560:
 12531                           
 12532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12533                           ;stkvar	_u @ sp[(-56)+12]
 12534  010B34  0ED4               	movlw	-44
 12535  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12536  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12537  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12538  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12539                           
 12540                           ;stkvar	_h @ sp[(-60)+24]
 12541  010B4E  0EDC               	movlw	-36
 12542  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12543  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12544  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12545  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12546  010B68  ECD0  F09B         	call	___fldiv	;wreg free
 12547  010B6C  0060  F0D7  FFE6   	movff	btemp,postinc1
 12548  010B72  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 12549  010B78  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 12550  010B7E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 12551  010B84  ECA3  F0A4         	call	_floorf	;wreg free
 12552                           
 12553                           ;stkvar	_l @ sp[(-56)+20]
 12554  010B88  0EDC               	movlw	-36
 12555  010B8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12556  010B90  0EDD               	movlw	-35
 12557  010B92  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12558  010B98  0EDE               	movlw	-34
 12559  010B9A  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12560  010BA0  0EDF               	movlw	-33
 12561  010BA2  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12562                           
 12563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12564                           ;stkvar	_l @ sp[(-56)+20]
 12565  010BA8  0EDC               	movlw	-36
 12566  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12567  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12568  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12569  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12570  010BC2  ECEE  F0B3         	call	___fltol	;wreg free
 12571  010BC6  0060  F0D4  F03F   	movff	btemp,btemp+10
 12572  010BCC  0060  F0D8  F040   	movff	btemp+1,btemp+11
 12573                           
 12574                           ;stkvar	_d @ sp[(-56)+44]
 12575  010BD2  0EF4               	movlw	-12
 12576  010BD4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12577  010BDA  0EF5               	movlw	-11
 12578  010BDC  0060  F103  FFE3   	movff	btemp+11,plusw1
 12579                           
 12580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12581  010BE2  B822               	btfsc	_flags^0,4,c
 12582  010BE4  D026               	goto	l9574
 12583                           
 12584                           ;stkvar	_d @ sp[(-56)+44]
 12585  010BE6  0EF4               	movlw	-12
 12586  010BE8  006F FF8C  F035    	movff	plusw1,btemp
 12587  010BEE  0EF5               	movlw	-11
 12588  010BF0  50E3               	movf	plusw1,w,c
 12589  010BF2  1035               	iorwf	btemp^0,w,c
 12590  010BF4  A4D8               	btfss	status,2,c
 12591  010BF6  D01D               	goto	l9574
 12592                           
 12593                           ;stkvar	_mode @ sp[(-56)+54]
 12594  010BF8  0EFE               	movlw	-2
 12595  010BFA  006F FF8C  F035    	movff	plusw1,btemp
 12596  010C00  0E67               	movlw	103
 12597  010C02  1835               	xorwf	btemp^0,w,c
 12598  010C04  A4D8               	btfss	status,2,c
 12599  010C06  D015               	goto	l9574
 12600                           
 12601                           ;stkvar	_ne @ sp[(-56)+46]
 12602  010C08  0EF7               	movlw	-9
 12603  010C0A  AEE3               	btfss	plusw1,7,c
 12604  010C0C  D012               	goto	l9574
 12605                           
 12606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12607                           ;stkvar	_t @ sp[(-56)+52]
 12608  010C0E  0EFC               	movlw	-4
 12609  010C10  50E3               	movf	plusw1,w,c
 12610  010C12  0F01               	addlw	1
 12611  010C14  6E35               	movwf	btemp^0,c
 12612  010C16  0EFC               	movlw	-4
 12613  010C18  0060  F0D7  FFE3   	movff	btemp,plusw1
 12614  010C1E  6A35               	clrf	btemp^0,c
 12615  010C20  0EFD               	movlw	-3
 12616  010C22  50E3               	movf	plusw1,w,c
 12617  010C24  2035               	addwfc	btemp^0,w,c
 12618  010C26  6E35               	movwf	btemp^0,c
 12619  010C28  0EFD               	movlw	-3
 12620  010C2A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12621                           
 12622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12623  010C30  D0AF               	goto	l9602
 12624  010C32                     l9574:
 12625                           
 12626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12627                           ;stkvar	_pp @ sp[(-56)+50]
 12628  010C32  0EFA               	movlw	-6
 12629  010C34  006F FF8C  F035    	movff	plusw1,btemp
 12630  010C3A  0EFB               	movlw	-5
 12631  010C3C  50E3               	movf	plusw1,w,c
 12632  010C3E  1035               	iorwf	btemp^0,w,c
 12633  010C40  A4D8               	btfss	status,2,c
 12634  010C42  D070               	goto	l9594
 12635                           
 12636                           ;stkvar	_ne @ sp[(-56)+46]
 12637  010C44  0EF7               	movlw	-9
 12638  010C46  AEE3               	btfss	plusw1,7,c
 12639  010C48  D06D               	goto	l9594
 12640                           
 12641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12642                           ;stkvar	_n @ sp[(-56)+32]
 12643  010C4A  0EE8               	movlw	-24
 12644  010C4C  006F FF8C  F03F    	movff	plusw1,btemp+10
 12645  010C52  0EE9               	movlw	-23
 12646  010C54  006F FF8C  F040    	movff	plusw1,btemp+11
 12647  010C5A  0EAC               	movlw	low _dbuf
 12648  010C5C  243F               	addwf	(btemp+10)^0,w,c
 12649  010C5E  6ED9               	movwf	fsr2l,c
 12650  010C60  0E02               	movlw	high _dbuf
 12651  010C62  2040               	addwfc	(btemp+11)^0,w,c
 12652  010C64  6EDA               	movwf	fsr2h,c
 12653  010C66  0E2E               	movlw	46
 12654  010C68  6EDF               	movwf	indf2,c
 12655                           
 12656                           ;stkvar	_n @ sp[(-56)+32]
 12657  010C6A  0EE8               	movlw	-24
 12658  010C6C  50E3               	movf	plusw1,w,c
 12659  010C6E  0F01               	addlw	1
 12660  010C70  6E35               	movwf	btemp^0,c
 12661  010C72  0EE8               	movlw	-24
 12662  010C74  0060  F0D7  FFE3   	movff	btemp,plusw1
 12663  010C7A  6A35               	clrf	btemp^0,c
 12664  010C7C  0EE9               	movlw	-23
 12665  010C7E  50E3               	movf	plusw1,w,c
 12666  010C80  2035               	addwfc	btemp^0,w,c
 12667  010C82  6E35               	movwf	btemp^0,c
 12668  010C84  0EE9               	movlw	-23
 12669  010C86  0060  F0D7  FFE3   	movff	btemp,plusw1
 12670                           
 12671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12672                           ;stkvar	_w @ sp[(-56)+38]
 12673  010C8C  50E1               	movf	fsr1l,w,c
 12674  010C8E  0FEE               	addlw	-18
 12675  010C90  6ED9               	movwf	fsr2l,c
 12676  010C92  50E2               	movf	fsr1h,w,c
 12677  010C94  6EDA               	movwf	fsr2h,c
 12678  010C96  0EFF               	movlw	255
 12679  010C98  22DA               	addwfc	fsr2h,f,c
 12680  010C9A  06DE               	decf	postinc2,f,c
 12681  010C9C  0E00               	movlw	0
 12682  010C9E  5ADD               	subwfb	postdec2,f,c
 12683                           
 12684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12685  010CA0  0E01               	movlw	1
 12686  010CA2  6E3F               	movwf	(btemp+10)^0,c
 12687  010CA4  0E00               	movlw	0
 12688  010CA6  6E40               	movwf	(btemp+11)^0,c
 12689                           
 12690                           ;stkvar	_pp @ sp[(-56)+50]
 12691  010CA8  0EFA               	movlw	-6
 12692  010CAA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12693  010CB0  0EFB               	movlw	-5
 12694  010CB2  0060  F103  FFE3   	movff	btemp+11,plusw1
 12695  010CB8  D035               	goto	l9594
 12696  010CBA                     l9586:
 12697                           
 12698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12699                           ;stkvar	_n @ sp[(-56)+32]
 12700  010CBA  0EE8               	movlw	-24
 12701  010CBC  006F FF8C  F03F    	movff	plusw1,btemp+10
 12702  010CC2  0EE9               	movlw	-23
 12703  010CC4  006F FF8C  F040    	movff	plusw1,btemp+11
 12704  010CCA  0EAC               	movlw	low _dbuf
 12705  010CCC  243F               	addwf	(btemp+10)^0,w,c
 12706  010CCE  6ED9               	movwf	fsr2l,c
 12707  010CD0  0E02               	movlw	high _dbuf
 12708  010CD2  2040               	addwfc	(btemp+11)^0,w,c
 12709  010CD4  6EDA               	movwf	fsr2h,c
 12710  010CD6  0E30               	movlw	48
 12711  010CD8  6EDF               	movwf	indf2,c
 12712                           
 12713                           ;stkvar	_n @ sp[(-56)+32]
 12714  010CDA  0EE8               	movlw	-24
 12715  010CDC  50E3               	movf	plusw1,w,c
 12716  010CDE  0F01               	addlw	1
 12717  010CE0  6E35               	movwf	btemp^0,c
 12718  010CE2  0EE8               	movlw	-24
 12719  010CE4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12720  010CEA  6A35               	clrf	btemp^0,c
 12721  010CEC  0EE9               	movlw	-23
 12722  010CEE  50E3               	movf	plusw1,w,c
 12723  010CF0  2035               	addwfc	btemp^0,w,c
 12724  010CF2  6E35               	movwf	btemp^0,c
 12725  010CF4  0EE9               	movlw	-23
 12726  010CF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 12727                           
 12728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12729                           ;stkvar	_w @ sp[(-56)+38]
 12730  010CFC  50E1               	movf	fsr1l,w,c
 12731  010CFE  0FEE               	addlw	-18
 12732  010D00  6ED9               	movwf	fsr2l,c
 12733  010D02  50E2               	movf	fsr1h,w,c
 12734  010D04  6EDA               	movwf	fsr2h,c
 12735  010D06  0EFF               	movlw	255
 12736  010D08  22DA               	addwfc	fsr2h,f,c
 12737  010D0A  06DE               	decf	postinc2,f,c
 12738  010D0C  0E00               	movlw	0
 12739  010D0E  5ADD               	subwfb	postdec2,f,c
 12740                           
 12741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12742                           ;stkvar	_t @ sp[(-56)+52]
 12743  010D10  50E1               	movf	fsr1l,w,c
 12744  010D12  0FFC               	addlw	-4
 12745  010D14  6ED9               	movwf	fsr2l,c
 12746  010D16  50E2               	movf	fsr1h,w,c
 12747  010D18  6EDA               	movwf	fsr2h,c
 12748  010D1A  0EFF               	movlw	255
 12749  010D1C  22DA               	addwfc	fsr2h,f,c
 12750  010D1E  06DE               	decf	postinc2,f,c
 12751  010D20  0E00               	movlw	0
 12752  010D22  5ADD               	subwfb	postdec2,f,c
 12753  010D24                     l9594:
 12754                           
 12755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12756                           ;stkvar	_t @ sp[(-56)+52]
 12757  010D24  0EFC               	movlw	-4
 12758  010D26  006F FF8C  F035    	movff	plusw1,btemp
 12759  010D2C  0EFD               	movlw	-3
 12760  010D2E  50E3               	movf	plusw1,w,c
 12761  010D30  1035               	iorwf	btemp^0,w,c
 12762  010D32  A4D8               	btfss	status,2,c
 12763  010D34  D7C2               	goto	l9586
 12764                           
 12765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12766                           ;stkvar	_n @ sp[(-56)+32]
 12767  010D36  0EE8               	movlw	-24
 12768  010D38  006F FF8C  F03F    	movff	plusw1,btemp+10
 12769  010D3E  0EE9               	movlw	-23
 12770  010D40  006F FF8C  F040    	movff	plusw1,btemp+11
 12771  010D46  0EAC               	movlw	low _dbuf
 12772  010D48  243F               	addwf	(btemp+10)^0,w,c
 12773  010D4A  6ED9               	movwf	fsr2l,c
 12774  010D4C  0E02               	movlw	high _dbuf
 12775  010D4E  2040               	addwfc	(btemp+11)^0,w,c
 12776  010D50  6EDA               	movwf	fsr2h,c
 12777                           
 12778                           ;stkvar	_d @ sp[(-56)+44]
 12779  010D52  0EF4               	movlw	-12
 12780  010D54  50E3               	movf	plusw1,w,c
 12781  010D56  0F30               	addlw	48
 12782  010D58  6EDF               	movwf	indf2,c
 12783                           
 12784                           ;stkvar	_n @ sp[(-56)+32]
 12785  010D5A  0EE8               	movlw	-24
 12786  010D5C  50E3               	movf	plusw1,w,c
 12787  010D5E  0F01               	addlw	1
 12788  010D60  6E35               	movwf	btemp^0,c
 12789  010D62  0EE8               	movlw	-24
 12790  010D64  0060  F0D7  FFE3   	movff	btemp,plusw1
 12791  010D6A  6A35               	clrf	btemp^0,c
 12792  010D6C  0EE9               	movlw	-23
 12793  010D6E  50E3               	movf	plusw1,w,c
 12794  010D70  2035               	addwfc	btemp^0,w,c
 12795  010D72  6E35               	movwf	btemp^0,c
 12796  010D74  0EE9               	movlw	-23
 12797  010D76  0060  F0D7  FFE3   	movff	btemp,plusw1
 12798                           
 12799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12800                           ;stkvar	_w @ sp[(-56)+38]
 12801  010D7C  50E1               	movf	fsr1l,w,c
 12802  010D7E  0FEE               	addlw	-18
 12803  010D80  6ED9               	movwf	fsr2l,c
 12804  010D82  50E2               	movf	fsr1h,w,c
 12805  010D84  6EDA               	movwf	fsr2h,c
 12806  010D86  0EFF               	movlw	255
 12807  010D88  22DA               	addwfc	fsr2h,f,c
 12808  010D8A  06DE               	decf	postinc2,f,c
 12809  010D8C  0E00               	movlw	0
 12810  010D8E  5ADD               	subwfb	postdec2,f,c
 12811  010D90                     l9602:
 12812                           
 12813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12814                           ;stkvar	_u @ sp[(-56)+12]
 12815  010D90  0ED4               	movlw	-44
 12816  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12817  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12818  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12819  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12820                           
 12821                           ;stkvar	_l @ sp[(-60)+20]
 12822  010DAA  0ED8               	movlw	-40
 12823  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12824  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12825  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12826  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12827  010DC4  ECF8  F090         	call	___flmul	;wreg free
 12828  010DC8  0060  F0D7  FFE6   	movff	btemp,postinc1
 12829  010DCE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 12830  010DD4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 12831  010DDA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 12832                           
 12833                           ;stkvar	_h @ sp[(-60)+24]
 12834  010DE0  0EDC               	movlw	-36
 12835  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12836  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12837  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12838  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12839  010DFA  EC2E  F0C2         	call	___flsub	;wreg free
 12840                           
 12841                           ;stkvar	_h @ sp[(-56)+24]
 12842  010DFE  0EE0               	movlw	-32
 12843  010E00  0060  F0D7  FFE3   	movff	btemp,plusw1
 12844  010E06  0EE1               	movlw	-31
 12845  010E08  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12846  010E0E  0EE2               	movlw	-30
 12847  010E10  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12848  010E16  0EE3               	movlw	-29
 12849  010E18  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12850                           
 12851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12852  010E1E  0E00               	movlw	0
 12853  010E20  6EE6               	movwf	postinc1,c
 12854  010E22  0E00               	movlw	0
 12855  010E24  6EE6               	movwf	postinc1,c
 12856  010E26  0E20               	movlw	32
 12857  010E28  6EE6               	movwf	postinc1,c
 12858  010E2A  0E41               	movlw	65
 12859  010E2C  6EE6               	movwf	postinc1,c
 12860                           
 12861                           ;stkvar	_u @ sp[(-60)+12]
 12862  010E2E  0ED0               	movlw	-48
 12863  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12864  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12865  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12866  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12867  010E48  ECD0  F09B         	call	___fldiv	;wreg free
 12868                           
 12869                           ;stkvar	_u @ sp[(-56)+12]
 12870  010E4C  0ED4               	movlw	-44
 12871  010E4E  0060  F0D7  FFE3   	movff	btemp,plusw1
 12872  010E54  0ED5               	movlw	-43
 12873  010E56  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12874  010E5C  0ED6               	movlw	-42
 12875  010E5E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12876  010E64  0ED7               	movlw	-41
 12877  010E66  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12878                           
 12879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12880                           ;stkvar	_ne @ sp[(-56)+46]
 12881  010E6C  50E1               	movf	fsr1l,w,c
 12882  010E6E  0FF6               	addlw	-10
 12883  010E70  6ED9               	movwf	fsr2l,c
 12884  010E72  50E2               	movf	fsr1h,w,c
 12885  010E74  6EDA               	movwf	fsr2h,c
 12886  010E76  0EFF               	movlw	255
 12887  010E78  22DA               	addwfc	fsr2h,f,c
 12888  010E7A  06DE               	decf	postinc2,f,c
 12889  010E7C  0E00               	movlw	0
 12890  010E7E  5ADD               	subwfb	postdec2,f,c
 12891                           
 12892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 12893                           ;stkvar	_i @ sp[(-56)+36]
 12894  010E80  0EEC               	movlw	-20
 12895  010E82  50E3               	movf	plusw1,w,c
 12896  010E84  0F01               	addlw	1
 12897  010E86  6E35               	movwf	btemp^0,c
 12898  010E88  0EEC               	movlw	-20
 12899  010E8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12900  010E90  6A35               	clrf	btemp^0,c
 12901  010E92  0EED               	movlw	-19
 12902  010E94  50E3               	movf	plusw1,w,c
 12903  010E96  2035               	addwfc	btemp^0,w,c
 12904  010E98  6E35               	movwf	btemp^0,c
 12905  010E9A  0EED               	movlw	-19
 12906  010E9C  0060  F0D7  FFE3   	movff	btemp,plusw1
 12907  010EA2                     l9610:
 12908                           
 12909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12910                           ;stkvar	_m @ sp[(-56)+48]
 12911                           ;stkvar	_i @ sp[(-56)+36]
 12912  010EA2  50E1               	movf	fsr1l,w,c
 12913  010EA4  0FEC               	addlw	-20
 12914  010EA6  6ED9               	movwf	fsr2l,c
 12915  010EA8  50E2               	movf	fsr1h,w,c
 12916  010EAA  6EDA               	movwf	fsr2h,c
 12917  010EAC  0EFF               	movlw	255
 12918  010EAE  22DA               	addwfc	fsr2h,f,c
 12919  010EB0  0EF8               	movlw	-8
 12920  010EB2  50E3               	movf	plusw1,w,c
 12921  010EB4  5CDE               	subwf	postinc2,w,c
 12922  010EB6  50DE               	movf	postinc2,w,c
 12923  010EB8  0A80               	xorlw	128
 12924  010EBA  6E35               	movwf	btemp^0,c
 12925  010EBC  0EF9               	movlw	-7
 12926  010EBE  50E3               	movf	plusw1,w,c
 12927  010EC0  0A80               	xorlw	128
 12928  010EC2  5835               	subwfb	btemp^0,w,c
 12929  010EC4  B0D8               	btfsc	status,0,c
 12930  010EC6  D00E               	goto	u9790
 12931                           
 12932                           ;stkvar	_n @ sp[(-56)+32]
 12933  010EC8  0EE9               	movlw	-23
 12934  010ECA  BEE3               	btfsc	plusw1,7,c
 12935  010ECC  D633               	goto	l9560
 12936  010ECE  0EE9               	movlw	-23
 12937  010ED0  50E3               	movf	plusw1,w,c
 12938  010ED2  E108               	bnz	u9790
 12939  010ED4  0EE8               	movlw	-24
 12940  010ED6  006F FF8C  F035    	movff	plusw1,btemp
 12941  010EDC  0E4B               	movlw	75
 12942  010EDE  5E35               	subwf	btemp^0,f,c
 12943  010EE0  A0D8               	btfss	status,0,c
 12944  010EE2  D628               	goto	l9560
 12945  010EE4                     u9790:
 12946                           
 12947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 12948                           ;stkvar	_pp @ sp[(-56)+50]
 12949  010EE4  0EFA               	movlw	-6
 12950  010EE6  006F FF8C  F035    	movff	plusw1,btemp
 12951  010EEC  0EFB               	movlw	-5
 12952  010EEE  50E3               	movf	plusw1,w,c
 12953  010EF0  1035               	iorwf	btemp^0,w,c
 12954  010EF2  B4D8               	btfsc	status,2,c
 12955  010EF4  A822               	btfss	_flags^0,4,c
 12956  010EF6  D021               	goto	l9622
 12957                           
 12958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 12959                           ;stkvar	_n @ sp[(-56)+32]
 12960  010EF8  0EE8               	movlw	-24
 12961  010EFA  006F FF8C  F03F    	movff	plusw1,btemp+10
 12962  010F00  0EE9               	movlw	-23
 12963  010F02  006F FF8C  F040    	movff	plusw1,btemp+11
 12964  010F08  0EAC               	movlw	low _dbuf
 12965  010F0A  243F               	addwf	(btemp+10)^0,w,c
 12966  010F0C  6ED9               	movwf	fsr2l,c
 12967  010F0E  0E02               	movlw	high _dbuf
 12968  010F10  2040               	addwfc	(btemp+11)^0,w,c
 12969  010F12  6EDA               	movwf	fsr2h,c
 12970  010F14  0E2E               	movlw	46
 12971  010F16  6EDF               	movwf	indf2,c
 12972                           
 12973                           ;stkvar	_n @ sp[(-56)+32]
 12974  010F18  0EE8               	movlw	-24
 12975  010F1A  50E3               	movf	plusw1,w,c
 12976  010F1C  0F01               	addlw	1
 12977  010F1E  6E35               	movwf	btemp^0,c
 12978  010F20  0EE8               	movlw	-24
 12979  010F22  0060  F0D7  FFE3   	movff	btemp,plusw1
 12980  010F28  6A35               	clrf	btemp^0,c
 12981  010F2A  0EE9               	movlw	-23
 12982  010F2C  50E3               	movf	plusw1,w,c
 12983  010F2E  2035               	addwfc	btemp^0,w,c
 12984  010F30  6E35               	movwf	btemp^0,c
 12985  010F32  0EE9               	movlw	-23
 12986  010F34  0060  F0D7  FFE3   	movff	btemp,plusw1
 12987  010F3A                     l9622:
 12988                           
 12989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 12990                           ;stkvar	_n @ sp[(-56)+32]
 12991  010F3A  0EE8               	movlw	-24
 12992  010F3C  006F FF8C  F03F    	movff	plusw1,btemp+10
 12993  010F42  0EE9               	movlw	-23
 12994  010F44  006F FF8C  F040    	movff	plusw1,btemp+11
 12995  010F4A  0EAC               	movlw	low _dbuf
 12996  010F4C  243F               	addwf	(btemp+10)^0,w,c
 12997  010F4E  6ED9               	movwf	fsr2l,c
 12998  010F50  0E02               	movlw	high _dbuf
 12999  010F52  2040               	addwfc	(btemp+11)^0,w,c
 13000  010F54  6EDA               	movwf	fsr2h,c
 13001  010F56  0E00               	movlw	0
 13002  010F58  6EDF               	movwf	indf2,c
 13003                           
 13004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 13005                           ;stkvar	_nmode @ sp[(-56)+55]
 13006  010F5A  0EFF               	movlw	-1
 13007  010F5C  006F FF8C  F035    	movff	plusw1,btemp
 13008  010F62  0E65               	movlw	101
 13009  010F64  1835               	xorwf	btemp^0,w,c
 13010  010F66  A4D8               	btfss	status,2,c
 13011  010F68  EF16  F081         	goto	l9426
 13012                           
 13013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 13014  010F6C  0E4F               	movlw	79
 13015  010F6E  6E3F               	movwf	(btemp+10)^0,c
 13016  010F70  0E00               	movlw	0
 13017  010F72  6E40               	movwf	(btemp+11)^0,c
 13018                           
 13019                           ;stkvar	_i @ sp[(-56)+36]
 13020  010F74  0EEC               	movlw	-20
 13021  010F76  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13022  010F7C  0EED               	movlw	-19
 13023  010F7E  0060  F103  FFE3   	movff	btemp+11,plusw1
 13024                           
 13025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 13026                           ;stkvar	_i @ sp[(-56)+36]
 13027  010F84  0EEC               	movlw	-20
 13028  010F86  006F FF8C  F03F    	movff	plusw1,btemp+10
 13029  010F8C  0EED               	movlw	-19
 13030  010F8E  006F FF8C  F040    	movff	plusw1,btemp+11
 13031  010F94  0EAC               	movlw	low _dbuf
 13032  010F96  243F               	addwf	(btemp+10)^0,w,c
 13033  010F98  6ED9               	movwf	fsr2l,c
 13034  010F9A  0E02               	movlw	high _dbuf
 13035  010F9C  2040               	addwfc	(btemp+11)^0,w,c
 13036  010F9E  6EDA               	movwf	fsr2h,c
 13037  010FA0  0E00               	movlw	0
 13038  010FA2  6EDF               	movwf	indf2,c
 13039                           
 13040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 13041                           ;stkvar	_sign @ sp[(-56)+42]
 13042  010FA4  0EF2               	movlw	-14
 13043  010FA6  6AE3               	clrf	plusw1,c
 13044  010FA8  0EF3               	movlw	-13
 13045  010FAA  6AE3               	clrf	plusw1,c
 13046                           
 13047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 13048                           ;stkvar	_e @ sp[(-56)+34]
 13049  010FAC  0EEB               	movlw	-21
 13050  010FAE  AEE3               	btfss	plusw1,7,c
 13051  010FB0  D012               	goto	l9636
 13052                           
 13053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 13054  010FB2  0E01               	movlw	1
 13055  010FB4  6E3F               	movwf	(btemp+10)^0,c
 13056  010FB6  0E00               	movlw	0
 13057  010FB8  6E40               	movwf	(btemp+11)^0,c
 13058                           
 13059                           ;stkvar	_sign @ sp[(-56)+42]
 13060  010FBA  0EF2               	movlw	-14
 13061  010FBC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13062  010FC2  0EF3               	movlw	-13
 13063  010FC4  0060  F103  FFE3   	movff	btemp+11,plusw1
 13064                           
 13065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 13066                           ;stkvar	_e @ sp[(-56)+34]
 13067                           ;stkvar	_e @ sp[(-56)+34]
 13068  010FCA  0EEA               	movlw	-22
 13069  010FCC  6CE3               	negf	plusw1,c
 13070  010FCE  0EEB               	movlw	-21
 13071  010FD0  1EE3               	comf	plusw1,f,c
 13072  010FD2  B0D8               	btfsc	status,0,c
 13073  010FD4  2AE3               	incf	plusw1,f,c
 13074  010FD6                     l9636:
 13075                           
 13076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 13077  010FD6  0E02               	movlw	2
 13078  010FD8  6E3F               	movwf	(btemp+10)^0,c
 13079  010FDA  0E00               	movlw	0
 13080  010FDC  6E40               	movwf	(btemp+11)^0,c
 13081                           
 13082                           ;stkvar	_p @ sp[(-56)+40]
 13083  010FDE  0EF0               	movlw	-16
 13084  010FE0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13085  010FE6  0EF1               	movlw	-15
 13086  010FE8  0060  F103  FFE3   	movff	btemp+11,plusw1
 13087                           
 13088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13089  010FEE  D051               	goto	l9648
 13090  010FF0                     l9638:
 13091                           
 13092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 13093                           ;stkvar	_i @ sp[(-56)+36]
 13094  010FF0  50E1               	movf	fsr1l,w,c
 13095  010FF2  0FEC               	addlw	-20
 13096  010FF4  6ED9               	movwf	fsr2l,c
 13097  010FF6  50E2               	movf	fsr1h,w,c
 13098  010FF8  6EDA               	movwf	fsr2h,c
 13099  010FFA  0EFF               	movlw	255
 13100  010FFC  22DA               	addwfc	fsr2h,f,c
 13101  010FFE  06DE               	decf	postinc2,f,c
 13102  011000  0E00               	movlw	0
 13103  011002  5ADD               	subwfb	postdec2,f,c
 13104                           
 13105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13106                           ;stkvar	_i @ sp[(-56)+36]
 13107  011004  0EEC               	movlw	-20
 13108  011006  006F FF8C  F03F    	movff	plusw1,btemp+10
 13109  01100C  0EED               	movlw	-19
 13110  01100E  006F FF8C  F040    	movff	plusw1,btemp+11
 13111  011014  0EAC               	movlw	low _dbuf
 13112  011016  243F               	addwf	(btemp+10)^0,w,c
 13113  011018  6ED9               	movwf	fsr2l,c
 13114  01101A  0E02               	movlw	high _dbuf
 13115  01101C  2040               	addwfc	(btemp+11)^0,w,c
 13116  01101E  6EDA               	movwf	fsr2h,c
 13117  011020  0E0A               	movlw	10
 13118  011022  6EE6               	movwf	postinc1,c
 13119  011024  0E00               	movlw	0
 13120  011026  6EE6               	movwf	postinc1,c
 13121                           
 13122                           ;stkvar	_e @ sp[(-58)+34]
 13123  011028  0EE8               	movlw	-24
 13124  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13125  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13126  011036  ECC8  F0B7         	call	___awmod	;wreg free
 13127  01103A  5035               	movf	btemp^0,w,c
 13128  01103C  0F30               	addlw	48
 13129  01103E  6EDF               	movwf	indf2,c
 13130                           
 13131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13132  011040  0E0A               	movlw	10
 13133  011042  6EE6               	movwf	postinc1,c
 13134  011044  0E00               	movlw	0
 13135  011046  6EE6               	movwf	postinc1,c
 13136                           
 13137                           ;stkvar	_e @ sp[(-58)+34]
 13138  011048  0EE8               	movlw	-24
 13139  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13140  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13141  011056  EC58  F0B5         	call	___awdiv	;wreg free
 13142                           
 13143                           ;stkvar	_e @ sp[(-56)+34]
 13144  01105A  0EEA               	movlw	-22
 13145  01105C  0060  F0D7  FFE3   	movff	btemp,plusw1
 13146  011062  0EEB               	movlw	-21
 13147  011064  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 13148                           
 13149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13150                           ;stkvar	_p @ sp[(-56)+40]
 13151  01106A  50E1               	movf	fsr1l,w,c
 13152  01106C  0FF0               	addlw	-16
 13153  01106E  6ED9               	movwf	fsr2l,c
 13154  011070  50E2               	movf	fsr1h,w,c
 13155  011072  6EDA               	movwf	fsr2h,c
 13156  011074  0EFF               	movlw	255
 13157  011076  22DA               	addwfc	fsr2h,f,c
 13158  011078  06DE               	decf	postinc2,f,c
 13159  01107A  0E00               	movlw	0
 13160  01107C  5ADD               	subwfb	postdec2,f,c
 13161                           
 13162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13163                           ;stkvar	_w @ sp[(-56)+38]
 13164  01107E  50E1               	movf	fsr1l,w,c
 13165  011080  0FEE               	addlw	-18
 13166  011082  6ED9               	movwf	fsr2l,c
 13167  011084  50E2               	movf	fsr1h,w,c
 13168  011086  6EDA               	movwf	fsr2h,c
 13169  011088  0EFF               	movlw	255
 13170  01108A  22DA               	addwfc	fsr2h,f,c
 13171  01108C  06DE               	decf	postinc2,f,c
 13172  01108E  0E00               	movlw	0
 13173  011090  5ADD               	subwfb	postdec2,f,c
 13174  011092                     l9648:
 13175                           
 13176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13177                           ;stkvar	_e @ sp[(-56)+34]
 13178  011092  0EEA               	movlw	-22
 13179  011094  006F FF8C  F035    	movff	plusw1,btemp
 13180  01109A  0EEB               	movlw	-21
 13181  01109C  50E3               	movf	plusw1,w,c
 13182  01109E  1035               	iorwf	btemp^0,w,c
 13183  0110A0  A4D8               	btfss	status,2,c
 13184  0110A2  D7A6               	goto	l9638
 13185                           
 13186                           ;stkvar	_p @ sp[(-56)+40]
 13187  0110A4  0EF1               	movlw	-15
 13188  0110A6  BEE3               	btfsc	plusw1,7,c
 13189  0110A8  D007               	goto	u9850
 13190  0110AA  0EF1               	movlw	-15
 13191  0110AC  50E3               	movf	plusw1,w,c
 13192  0110AE  E1A0               	bnz	l9638
 13193  0110B0  0EF0               	movlw	-16
 13194  0110B2  04E3               	decf	plusw1,w,c
 13195  0110B4  B0D8               	btfsc	status,0,c
 13196  0110B6  D79C               	goto	l9638
 13197  0110B8                     u9850:
 13198                           
 13199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13200                           ;stkvar	_i @ sp[(-56)+36]
 13201  0110B8  50E1               	movf	fsr1l,w,c
 13202  0110BA  0FEC               	addlw	-20
 13203  0110BC  6ED9               	movwf	fsr2l,c
 13204  0110BE  50E2               	movf	fsr1h,w,c
 13205  0110C0  6EDA               	movwf	fsr2h,c
 13206  0110C2  0EFF               	movlw	255
 13207  0110C4  22DA               	addwfc	fsr2h,f,c
 13208  0110C6  06DE               	decf	postinc2,f,c
 13209  0110C8  0E00               	movlw	0
 13210  0110CA  5ADD               	subwfb	postdec2,f,c
 13211                           
 13212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13213                           ;stkvar	_sign @ sp[(-56)+42]
 13214  0110CC  0EF2               	movlw	-14
 13215  0110CE  006F FF8C  F035    	movff	plusw1,btemp
 13216  0110D4  0EF3               	movlw	-13
 13217  0110D6  50E3               	movf	plusw1,w,c
 13218  0110D8  1035               	iorwf	btemp^0,w,c
 13219  0110DA  A4D8               	btfss	status,2,c
 13220  0110DC  D002               	goto	l9658
 13221  0110DE  0E2B               	movlw	43
 13222  0110E0  D001               	goto	L13
 13223  0110E2                     l9658:
 13224  0110E2  0E2D               	movlw	45
 13225  0110E4                     L13:
 13226  0110E4  6E3F               	movwf	(btemp+10)^0,c
 13227  0110E6  0E00               	movlw	0
 13228  0110E8  6E40               	movwf	(btemp+11)^0,c
 13229                           
 13230                           ;stkvar	_efgtoa$4211 @ sp[(-56)+4]
 13231  0110EA  0ECC               	movlw	-52
 13232  0110EC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13233  0110F2  0ECD               	movlw	-51
 13234  0110F4  0060  F103  FFE3   	movff	btemp+11,plusw1
 13235                           
 13236                           ;stkvar	_efgtoa$4211 @ sp[(-56)+4]
 13237                           ;stkvar	_i @ sp[(-56)+36]
 13238  0110FA  0EEC               	movlw	-20
 13239  0110FC  006F FF8C  F03F    	movff	plusw1,btemp+10
 13240  011102  0EED               	movlw	-19
 13241  011104  006F FF8C  F040    	movff	plusw1,btemp+11
 13242  01110A  0EAC               	movlw	low _dbuf
 13243  01110C  243F               	addwf	(btemp+10)^0,w,c
 13244  01110E  6ED9               	movwf	fsr2l,c
 13245  011110  0E02               	movlw	high _dbuf
 13246  011112  2040               	addwfc	(btemp+11)^0,w,c
 13247  011114  6EDA               	movwf	fsr2h,c
 13248  011116  0ECC               	movlw	-52
 13249  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13250                           
 13251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13252                           ;stkvar	_w @ sp[(-56)+38]
 13253  01111E  50E1               	movf	fsr1l,w,c
 13254  011120  0FEE               	addlw	-18
 13255  011122  6ED9               	movwf	fsr2l,c
 13256  011124  50E2               	movf	fsr1h,w,c
 13257  011126  6EDA               	movwf	fsr2h,c
 13258  011128  0EFF               	movlw	255
 13259  01112A  22DA               	addwfc	fsr2h,f,c
 13260  01112C  06DE               	decf	postinc2,f,c
 13261  01112E  0E00               	movlw	0
 13262  011130  5ADD               	subwfb	postdec2,f,c
 13263                           
 13264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13265                           ;stkvar	_i @ sp[(-56)+36]
 13266  011132  50E1               	movf	fsr1l,w,c
 13267  011134  0FEC               	addlw	-20
 13268  011136  6ED9               	movwf	fsr2l,c
 13269  011138  50E2               	movf	fsr1h,w,c
 13270  01113A  6EDA               	movwf	fsr2h,c
 13271  01113C  0EFF               	movlw	255
 13272  01113E  22DA               	addwfc	fsr2h,f,c
 13273  011140  06DE               	decf	postinc2,f,c
 13274  011142  0E00               	movlw	0
 13275  011144  5ADD               	subwfb	postdec2,f,c
 13276  011146  0EBF               	movlw	191
 13277  011148  6E3F               	movwf	(btemp+10)^0,c
 13278  01114A  0EFF               	movlw	255
 13279  01114C  6E40               	movwf	(btemp+11)^0,c
 13280                           
 13281                           ;stkvar	_c @ sp[(-56)+-7]
 13282  01114E  0EC1               	movlw	-63
 13283  011150  50E3               	movf	plusw1,w,c
 13284  011152  6E3D               	movwf	(btemp+8)^0,c
 13285  011154  6A3E               	clrf	(btemp+9)^0,c
 13286  011156  503F               	movf	(btemp+10)^0,w,c
 13287  011158  263D               	addwf	(btemp+8)^0,f,c
 13288  01115A  5040               	movf	(btemp+11)^0,w,c
 13289  01115C  223E               	addwfc	(btemp+9)^0,f,c
 13290  01115E  503E               	movf	(btemp+9)^0,w,c
 13291  011160  E106               	bnz	u9870
 13292  011162  0E1A               	movlw	26
 13293  011164  5C3D               	subwf	(btemp+8)^0,w,c
 13294  011166  B0D8               	btfsc	status,0,c
 13295  011168  D002               	goto	u9870
 13296  01116A  0E01               	movlw	1
 13297  01116C  D001               	goto	u9880
 13298  01116E                     u9870:
 13299  01116E  0E00               	movlw	0
 13300  011170                     u9880:
 13301  011170  6E3F               	movwf	(btemp+10)^0,c
 13302  011172  6A40               	clrf	(btemp+11)^0,c
 13303                           
 13304                           ;stkvar	_efgtoa$4213 @ sp[(-56)+0]
 13305  011174  0EC8               	movlw	-56
 13306  011176  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13307  01117C  0EC9               	movlw	-55
 13308  01117E  0060  F103  FFE3   	movff	btemp+11,plusw1
 13309                           
 13310                           ;stkvar	_efgtoa$4213 @ sp[(-56)+0]
 13311  011184  0EC8               	movlw	-56
 13312  011186  006F FF8C  F035    	movff	plusw1,btemp
 13313  01118C  0EC9               	movlw	-55
 13314  01118E  50E3               	movf	plusw1,w,c
 13315  011190  1035               	iorwf	btemp^0,w,c
 13316  011192  A4D8               	btfss	status,2,c
 13317  011194  D002               	goto	l9674
 13318  011196  0E65               	movlw	101
 13319  011198  D001               	goto	L14
 13320  01119A                     l9674:
 13321  01119A  0E45               	movlw	69
 13322  01119C                     L14:
 13323  01119C  6E3F               	movwf	(btemp+10)^0,c
 13324  01119E  0E00               	movlw	0
 13325  0111A0  6E40               	movwf	(btemp+11)^0,c
 13326                           
 13327                           ;stkvar	_efgtoa$4212 @ sp[(-56)+2]
 13328  0111A2  0ECA               	movlw	-54
 13329  0111A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13330  0111AA  0ECB               	movlw	-53
 13331  0111AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 13332                           
 13333                           ;stkvar	_efgtoa$4212 @ sp[(-56)+2]
 13334                           ;stkvar	_i @ sp[(-56)+36]
 13335  0111B2  0EEC               	movlw	-20
 13336  0111B4  006F FF8C  F03F    	movff	plusw1,btemp+10
 13337  0111BA  0EED               	movlw	-19
 13338  0111BC  006F FF8C  F040    	movff	plusw1,btemp+11
 13339  0111C2  0EAC               	movlw	low _dbuf
 13340  0111C4  243F               	addwf	(btemp+10)^0,w,c
 13341  0111C6  6ED9               	movwf	fsr2l,c
 13342  0111C8  0E02               	movlw	high _dbuf
 13343  0111CA  2040               	addwfc	(btemp+11)^0,w,c
 13344  0111CC  6EDA               	movwf	fsr2h,c
 13345  0111CE  0ECA               	movlw	-54
 13346  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13347                           
 13348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13349                           ;stkvar	_w @ sp[(-56)+38]
 13350  0111D6  50E1               	movf	fsr1l,w,c
 13351  0111D8  0FEE               	addlw	-18
 13352  0111DA  6ED9               	movwf	fsr2l,c
 13353  0111DC  50E2               	movf	fsr1h,w,c
 13354  0111DE  6EDA               	movwf	fsr2h,c
 13355  0111E0  0EFF               	movlw	255
 13356  0111E2  22DA               	addwfc	fsr2h,f,c
 13357  0111E4  06DE               	decf	postinc2,f,c
 13358  0111E6  0E00               	movlw	0
 13359  0111E8  5ADD               	subwfb	postdec2,f,c
 13360                           
 13361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13362                           ;stkvar	_i @ sp[(-56)+36]
 13363  0111EA  0EEC               	movlw	-20
 13364  0111EC  006F FF8C  F03F    	movff	plusw1,btemp+10
 13365  0111F2  0EED               	movlw	-19
 13366  0111F4  006F FF8C  F040    	movff	plusw1,btemp+11
 13367  0111FA  0EAC               	movlw	low _dbuf
 13368  0111FC  243F               	addwf	(btemp+10)^0,w,c
 13369  0111FE  6E3D               	movwf	(btemp+8)^0,c
 13370  011200  0E02               	movlw	high _dbuf
 13371  011202  2040               	addwfc	(btemp+11)^0,w,c
 13372  011204  6E3E               	movwf	(btemp+9)^0,c
 13373  011206  0060  F0F7  FFE6   	movff	btemp+8,postinc1
 13374  01120C  0060  F0FB  FFE6   	movff	btemp+9,postinc1
 13375                           
 13376                           ;stkvar	_n @ sp[(-58)+32]
 13377  011212  0EAC               	movlw	low _dbuf
 13378  011214  6E3F               	movwf	(btemp+10)^0,c
 13379  011216  0E02               	movlw	high _dbuf
 13380  011218  6E40               	movwf	(btemp+11)^0,c
 13381  01121A  0EE6               	movlw	-26
 13382  01121C  50E3               	movf	plusw1,w,c
 13383  01121E  263F               	addwf	(btemp+10)^0,f,c
 13384  011220  0EE7               	movlw	-25
 13385  011222  50E3               	movf	plusw1,w,c
 13386  011224  2240               	addwfc	(btemp+11)^0,f,c
 13387  011226  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 13388  01122C  0060  F103  FFE6   	movff	btemp+11,postinc1
 13389  011232  EC5F  F0BA         	call	_strcpy	;wreg free
 13390  011236  EF16  F081         	goto	l9426
 13391  01123A                     l1810:
 13392                           
 13393                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13394  01123A  0EC1               	movlw	193
 13395  01123C  26E1               	addwf	fsr1l,f,c
 13396  01123E  0EFF               	movlw	255
 13397  011240  22E2               	addwfc	fsr1h,f,c
 13398  011242  0012               	return		;funcret
 13399  011244                     __end_of_efgtoa:
 13400                           	opt callstack 0
 13401                           
 13402 ;; *************** function _tolower *****************
 13403 ;; Defined at:
 13404 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13405 ;; Parameters:    Size  Location     Type
 13406 ;;  c               2  [STACK] int 
 13407 ;; Auto vars:     Size  Location     Type
 13408 ;;		None
 13409 ;; Return value:  Size  Location     Type
 13410 ;;                  2  [STACK] int 
 13411 ;; Registers used:
 13412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13413 ;; Tracked objects:
 13414 ;;		On entry : 0/4
 13415 ;;		On exit  : 0/0
 13416 ;;		Unchanged: 0/0
 13417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13422 ;;Total ram usage:        0 bytes
 13423 ;; Hardware stack levels used:    1
 13424 ;; Hardware stack levels required when called:    7
 13425 ;; This function calls:
 13426 ;;		_isupper
 13427 ;; This function is called by:
 13428 ;;		_efgtoa
 13429 ;;		_vfpfcnvrt
 13430 ;; This function uses a reentrant model
 13431 ;;
 13432                           
 13433                           	psect	text46
 13434  017DD2                     __ptext46:
 13435                           	opt callstack 0
 13436  017DD2                     _tolower:
 13437                           	opt callstack 0
 13438                           
 13439                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13440  017DD2  52E6               	movf	postinc1,f,c
 13441  017DD4  52E6               	movf	postinc1,f,c
 13442                           
 13443                           ;stkvar	_c @ sp[(-2)+-2]
 13444                           
 13445                           ;incstack = 0
 13446  017DD6  0EFC               	movlw	-4
 13447  017DD8  50E3               	movf	plusw1,w,c
 13448  017DDA  0FBF               	addlw	191
 13449  017DDC  6E3F               	movwf	(btemp+10)^0,c
 13450  017DDE  0EFD               	movlw	-3
 13451  017DE0  006F FF8C  F040    	movff	plusw1,btemp+11
 13452  017DE6  0EFF               	movlw	255
 13453  017DE8  2240               	addwfc	(btemp+11)^0,f,c
 13454  017DEA  5040               	movf	(btemp+11)^0,w,c
 13455  017DEC  E106               	bnz	u5260
 13456  017DEE  0E1A               	movlw	26
 13457  017DF0  5C3F               	subwf	(btemp+10)^0,w,c
 13458  017DF2  B0D8               	btfsc	status,0,c
 13459  017DF4  D002               	goto	u5260
 13460  017DF6  0E01               	movlw	1
 13461  017DF8  D001               	goto	u5270
 13462  017DFA                     u5260:
 13463  017DFA  0E00               	movlw	0
 13464  017DFC                     u5270:
 13465  017DFC  6E3F               	movwf	(btemp+10)^0,c
 13466  017DFE  6A40               	clrf	(btemp+11)^0,c
 13467                           
 13468                           ;stkvar	_tolower$4910 @ sp[(-2)+0]
 13469  017E00  0EFE               	movlw	-2
 13470  017E02  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13471  017E08  0EFF               	movlw	-1
 13472  017E0A  0060  F103  FFE3   	movff	btemp+11,plusw1
 13473                           
 13474                           ;stkvar	_tolower$4910 @ sp[(-2)+0]
 13475  017E10  0EFE               	movlw	-2
 13476  017E12  006F FF8C  F035    	movff	plusw1,btemp
 13477  017E18  0EFF               	movlw	-1
 13478  017E1A  50E3               	movf	plusw1,w,c
 13479  017E1C  1035               	iorwf	btemp^0,w,c
 13480  017E1E  B4D8               	btfsc	status,2,c
 13481  017E20  D00D               	goto	l6428
 13482                           
 13483                           ;stkvar	_c @ sp[(-2)+-2]
 13484  017E22  0EFC               	movlw	-4
 13485  017E24  006F FF8C  F035    	movff	plusw1,btemp
 13486  017E2A  0EFD               	movlw	-3
 13487  017E2C  006F FF8C  F036    	movff	plusw1,btemp+1
 13488  017E32  0E20               	movlw	32
 13489  017E34  1235               	iorwf	btemp^0,f,c
 13490  017E36  0E00               	movlw	0
 13491  017E38  1236               	iorwf	(btemp+1)^0,f,c
 13492  017E3A  D008               	goto	l2856
 13493  017E3C                     l6428:
 13494                           
 13495                           ;stkvar	_c @ sp[(-2)+-2]
 13496  017E3C  0EFC               	movlw	-4
 13497  017E3E  006F FF8C  F035    	movff	plusw1,btemp
 13498  017E44  0EFD               	movlw	-3
 13499  017E46  006F FF8C  F036    	movff	plusw1,btemp+1
 13500  017E4C                     l2856:
 13501                           
 13502                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13503  017E4C  52E5               	movf	postdec1,f,c
 13504  017E4E  52E5               	movf	postdec1,f,c
 13505  017E50  52E5               	movf	postdec1,f,c
 13506  017E52  52E5               	movf	postdec1,f,c
 13507  017E54  0012               	return		;funcret
 13508  017E56                     __end_of_tolower:
 13509                           	opt callstack 0
 13510                           
 13511 ;; *************** function _isupper *****************
 13512 ;; Defined at:
 13513 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13514 ;; Parameters:    Size  Location     Type
 13515 ;;  c               2  [STACK] int 
 13516 ;; Auto vars:     Size  Location     Type
 13517 ;;		None
 13518 ;; Return value:  Size  Location     Type
 13519 ;;                  2  [STACK] int 
 13520 ;; Registers used:
 13521 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13522 ;; Tracked objects:
 13523 ;;		On entry : 0/0
 13524 ;;		On exit  : 0/0
 13525 ;;		Unchanged: 0/0
 13526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13531 ;;Total ram usage:        0 bytes
 13532 ;; Hardware stack levels used:    1
 13533 ;; Hardware stack levels required when called:    6
 13534 ;; This function calls:
 13535 ;;		Nothing
 13536 ;; This function is called by:
 13537 ;;		_efgtoa
 13538 ;;		_xtoa
 13539 ;;		_vfpfcnvrt
 13540 ;;		_tolower
 13541 ;; This function uses a reentrant model
 13542 ;;
 13543                           
 13544                           	psect	text47
 13545  018874                     __ptext47:
 13546                           	opt callstack 0
 13547  018874                     _isupper:
 13548                           	opt callstack 17
 13549                           
 13550                           ;stkvar	_c @ sp[(0)+-2]
 13551                           
 13552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13553                           ;incstack = 0
 13554  018874  0EFE               	movlw	-2
 13555  018876  50E3               	movf	plusw1,w,c
 13556  018878  0FBF               	addlw	191
 13557  01887A  6E3F               	movwf	(btemp+10)^0,c
 13558  01887C  0EFF               	movlw	-1
 13559  01887E  006F FF8C  F040    	movff	plusw1,btemp+11
 13560  018884  0EFF               	movlw	255
 13561  018886  2240               	addwfc	(btemp+11)^0,f,c
 13562  018888  5040               	movf	(btemp+11)^0,w,c
 13563  01888A  E106               	bnz	u4660
 13564  01888C  0E1A               	movlw	26
 13565  01888E  5C3F               	subwf	(btemp+10)^0,w,c
 13566  018890  B0D8               	btfsc	status,0,c
 13567  018892  D002               	goto	u4660
 13568  018894  0E01               	movlw	1
 13569  018896  D001               	goto	u4670
 13570  018898                     u4660:
 13571  018898  0E00               	movlw	0
 13572  01889A                     u4670:
 13573  01889A  6E35               	movwf	btemp^0,c
 13574  01889C  6A36               	clrf	(btemp+1)^0,c
 13575                           
 13576                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13577  01889E  52E5               	movf	postdec1,f,c
 13578  0188A0  52E5               	movf	postdec1,f,c
 13579  0188A2  0012               	return		;funcret
 13580  0188A4                     __end_of_isupper:
 13581                           	opt callstack 0
 13582                           
 13583 ;; *************** function _strcpy *****************
 13584 ;; Defined at:
 13585 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13586 ;; Parameters:    Size  Location     Type
 13587 ;;  dest            2  [STACK] PTR unsigned char 
 13588 ;;		 -> dbuf(80), 
 13589 ;;  src             2  [STACK] PTR const unsigned char 
 13590 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 13591 ;;		 -> dbuf(80), 
 13592 ;; Auto vars:     Size  Location     Type
 13593 ;;  d               2  [STACK] PTR unsigned char 
 13594 ;;		 -> dbuf(80), 
 13595 ;;  s               2  [STACK] PTR const unsigned char 
 13596 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 13597 ;;		 -> dbuf(80), 
 13598 ;; Return value:  Size  Location     Type
 13599 ;;                  2  [STACK] PTR unsigned char 
 13600 ;; Registers used:
 13601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13602 ;; Tracked objects:
 13603 ;;		On entry : 0/4
 13604 ;;		On exit  : 0/0
 13605 ;;		Unchanged: 0/0
 13606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13611 ;;Total ram usage:        0 bytes
 13612 ;; Hardware stack levels used:    1
 13613 ;; Hardware stack levels required when called:    6
 13614 ;; This function calls:
 13615 ;;		Nothing
 13616 ;; This function is called by:
 13617 ;;		_efgtoa
 13618 ;; This function uses a reentrant model
 13619 ;;
 13620                           
 13621                           	psect	text48
 13622  0174BE                     __ptext48:
 13623                           	opt callstack 0
 13624  0174BE                     _strcpy:
 13625                           	opt callstack 0
 13626                           
 13627                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13628  0174BE  52E6               	movf	postinc1,f,c
 13629  0174C0  52E6               	movf	postinc1,f,c
 13630  0174C2  52E6               	movf	postinc1,f,c
 13631  0174C4  52E6               	movf	postinc1,f,c
 13632                           
 13633                           ;stkvar	_src @ sp[(-4)+-4]
 13634                           
 13635                           ;incstack = 0
 13636  0174C6  0EF8               	movlw	-8
 13637  0174C8  006F FF8C  F03F    	movff	plusw1,btemp+10
 13638  0174CE  0EF9               	movlw	-7
 13639  0174D0  006F FF8C  F040    	movff	plusw1,btemp+11
 13640                           
 13641                           ;stkvar	_s @ sp[(-4)+2]
 13642  0174D6  0EFF               	movlw	-1
 13643  0174D8  0060  F103  FFE3   	movff	btemp+11,plusw1
 13644  0174DE  0EFE               	movlw	-2
 13645  0174E0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13646                           
 13647                           ;stkvar	_dest @ sp[(-4)+-2]
 13648  0174E6  0EFA               	movlw	-6
 13649  0174E8  006F FF8C  F03F    	movff	plusw1,btemp+10
 13650  0174EE  0EFB               	movlw	-5
 13651  0174F0  006F FF8C  F040    	movff	plusw1,btemp+11
 13652                           
 13653                           ;stkvar	_d @ sp[(-4)+0]
 13654  0174F6  0EFD               	movlw	-3
 13655  0174F8  0060  F103  FFE3   	movff	btemp+11,plusw1
 13656  0174FE  0EFC               	movlw	-4
 13657  017500  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13658  017506                     l9300:
 13659                           
 13660                           ;stkvar	_s @ sp[(-4)+2]
 13661  017506  50E1               	movf	fsr1l,w,c
 13662  017508  0FFE               	addlw	-2
 13663  01750A  6ED9               	movwf	fsr2l,c
 13664  01750C  50E2               	movf	fsr1h,w,c
 13665  01750E  6EDA               	movwf	fsr2h,c
 13666  017510  0EFF               	movlw	255
 13667  017512  22DA               	addwfc	fsr2h,f,c
 13668  017514  006F FF7C  F03F    	movff	indf2,btemp+10
 13669  01751A  0E01               	movlw	1
 13670  01751C  26DE               	addwf	postinc2,f,c
 13671  01751E  006F FF7C  F040    	movff	indf2,btemp+11
 13672  017524  0E00               	movlw	0
 13673  017526  22DD               	addwfc	postdec2,f,c
 13674  017528  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
 13675  01752E  0060  F103  FFF7   	movff	btemp+11,tblptrh
 13676  017534  0E00               	movlw	low (__mediumconst shr (0+16))
 13677  017536  6EF8               	movwf	tblptru,c
 13678                           
 13679                           ;stkvar	_d @ sp[(-4)+0]
 13680  017538  50E1               	movf	fsr1l,w,c
 13681  01753A  0FFC               	addlw	-4
 13682  01753C  6ED9               	movwf	fsr2l,c
 13683  01753E  50E2               	movf	fsr1h,w,c
 13684  017540  6EDA               	movwf	fsr2h,c
 13685  017542  0EFF               	movlw	255
 13686  017544  22DA               	addwfc	fsr2h,f,c
 13687  017546  006F FF7C  F03F    	movff	indf2,btemp+10
 13688  01754C  0E01               	movlw	1
 13689  01754E  26DE               	addwf	postinc2,f,c
 13690  017550  006F FF7C  F040    	movff	indf2,btemp+11
 13691  017556  0E00               	movlw	0
 13692  017558  22DD               	addwfc	postdec2,f,c
 13693  01755A  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
 13694  017560  0060  F103  FFDA   	movff	btemp+11,fsr2h
 13695  017566  0E1F               	movlw	(high __ramtop+-1)
 13696  017568  64F7               	cpfsgt	tblptrh,c
 13697  01756A  D003               	bra	u9187
 13698  01756C  0008               	tblrd		*
 13699  01756E  50F5               	movf	tablat,w,c
 13700  017570  D007               	bra	u9180
 13701  017572                     u9187:
 13702  017572  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13703  017578  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13704  01757E  50EF               	movf	indf0,w,c
 13705  017580                     u9180:
 13706  017580  6EDF               	movwf	indf2,c
 13707  017582  50DF               	movf	indf2,w,c
 13708  017584  A4D8               	btfss	status,2,c
 13709  017586  D7BF               	goto	l9300
 13710                           
 13711                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13712  017588  0EF8               	movlw	248
 13713  01758A  26E1               	addwf	fsr1l,f,c
 13714  01758C  0EFF               	movlw	255
 13715  01758E  22E2               	addwfc	fsr1h,f,c
 13716  017590  0012               	return		;funcret
 13717  017592                     __end_of_strcpy:
 13718                           	opt callstack 0
 13719                           
 13720 ;; *************** function _floorf *****************
 13721 ;; Defined at:
 13722 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13723 ;; Parameters:    Size  Location     Type
 13724 ;;  x               4  [STACK] float 
 13725 ;; Auto vars:     Size  Location     Type
 13726 ;;  u               4  [STACK] struct .
 13727 ;;  m               4  [STACK] unsigned long 
 13728 ;;  e               2  [STACK] int 
 13729 ;; Return value:  Size  Location     Type
 13730 ;;                  4  [STACK] float 
 13731 ;; Registers used:
 13732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13733 ;; Tracked objects:
 13734 ;;		On entry : 0/4
 13735 ;;		On exit  : 0/0
 13736 ;;		Unchanged: 0/0
 13737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13742 ;;Total ram usage:        0 bytes
 13743 ;; Hardware stack levels used:    1
 13744 ;; Hardware stack levels required when called:    6
 13745 ;; This function calls:
 13746 ;;		Nothing
 13747 ;; This function is called by:
 13748 ;;		_efgtoa
 13749 ;; This function uses a reentrant model
 13750 ;;
 13751                           
 13752                           	psect	text49
 13753  014946                     __ptext49:
 13754                           	opt callstack 0
 13755  014946                     _floorf:
 13756                           	opt callstack 0
 13757                           
 13758                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13759  014946  0E0A               	movlw	10
 13760  014948  26E1               	addwf	fsr1l,f,c
 13761  01494A  0E00               	movlw	0
 13762  01494C  22E2               	addwfc	fsr1h,f,c
 13763                           
 13764                           ;incstack = 0
 13765  01494E  0060  F210  F03D   	movff	floorf@F524,btemp+8
 13766  014954  0060  F214  F03E   	movff	floorf@F524+1,btemp+9
 13767  01495A  0060  F218  F03F   	movff	floorf@F524+2,btemp+10
 13768  014960  0060  F21C  F040   	movff	floorf@F524+3,btemp+11
 13769                           
 13770                           ;stkvar	_u @ sp[(-10)+0]
 13771  014966  0EF6               	movlw	-10
 13772  014968  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13773  01496E  0EF7               	movlw	-9
 13774  014970  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13775  014976  0EF8               	movlw	-8
 13776  014978  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13777  01497E  0EF9               	movlw	-7
 13778  014980  0060  F103  FFE3   	movff	btemp+11,plusw1
 13779                           
 13780                           ;stkvar	_x @ sp[(-10)+-4]
 13781  014986  0EF2               	movlw	-14
 13782  014988  006F FF8C  F03D    	movff	plusw1,btemp+8
 13783  01498E  0EF3               	movlw	-13
 13784  014990  006F FF8C  F03E    	movff	plusw1,btemp+9
 13785  014996  0EF4               	movlw	-12
 13786  014998  006F FF8C  F03F    	movff	plusw1,btemp+10
 13787  01499E  0EF5               	movlw	-11
 13788  0149A0  006F FF8C  F040    	movff	plusw1,btemp+11
 13789                           
 13790                           ;stkvar	_u @ sp[(-10)+0]
 13791  0149A6  0EF6               	movlw	-10
 13792  0149A8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13793  0149AE  0EF7               	movlw	-9
 13794  0149B0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13795  0149B6  0EF8               	movlw	-8
 13796  0149B8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13797  0149BE  0EF9               	movlw	-7
 13798  0149C0  0060  F103  FFE3   	movff	btemp+11,plusw1
 13799  0149C6  0E81               	movlw	129
 13800  0149C8  6E3F               	movwf	(btemp+10)^0,c
 13801  0149CA  0EFF               	movlw	255
 13802  0149CC  6E40               	movwf	(btemp+11)^0,c
 13803                           
 13804                           ;stkvar	_u @ sp[(-10)+0]
 13805  0149CE  0EF6               	movlw	-10
 13806  0149D0  006F FF8C  F039    	movff	plusw1,btemp+4
 13807  0149D6  0EF7               	movlw	-9
 13808  0149D8  006F FF8C  F03A    	movff	plusw1,btemp+5
 13809  0149DE  0EF8               	movlw	-8
 13810  0149E0  006F FF8C  F03B    	movff	plusw1,btemp+6
 13811  0149E6  0EF9               	movlw	-7
 13812  0149E8  006F FF8C  F03C    	movff	plusw1,btemp+7
 13813  0149EE  0E18               	movlw	24
 13814  0149F0  D005               	goto	u5290
 13815  0149F2                     u5295:
 13816  0149F2  90D8               	bcf	status,0,c
 13817  0149F4  323C               	rrcf	(btemp+7)^0,f,c
 13818  0149F6  323B               	rrcf	(btemp+6)^0,f,c
 13819  0149F8  323A               	rrcf	(btemp+5)^0,f,c
 13820  0149FA  3239               	rrcf	(btemp+4)^0,f,c
 13821  0149FC                     u5290:
 13822  0149FC  2EE8               	decfsz	wreg,f,c
 13823  0149FE  D7F9               	goto	u5295
 13824  014A00  0060  F0E4  F03D   	movff	btemp+4,btemp+8
 13825  014A06  0060  F0E8  F03E   	movff	btemp+5,btemp+9
 13826  014A0C  0EFF               	movlw	255
 13827  014A0E  163D               	andwf	(btemp+8)^0,f,c
 13828  014A10  0E00               	movlw	0
 13829  014A12  163E               	andwf	(btemp+9)^0,f,c
 13830  014A14  503F               	movf	(btemp+10)^0,w,c
 13831  014A16  263D               	addwf	(btemp+8)^0,f,c
 13832  014A18  5040               	movf	(btemp+11)^0,w,c
 13833  014A1A  223E               	addwfc	(btemp+9)^0,f,c
 13834                           
 13835                           ;stkvar	_e @ sp[(-10)+8]
 13836  014A1C  0EFE               	movlw	-2
 13837  014A1E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13838  014A24  0EFF               	movlw	-1
 13839  014A26  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13840                           
 13841                           ;stkvar	_e @ sp[(-10)+8]
 13842  014A2C  0EFF               	movlw	-1
 13843  014A2E  BEE3               	btfsc	plusw1,7,c
 13844  014A30  D019               	goto	l6442
 13845  014A32  0EFF               	movlw	-1
 13846  014A34  50E3               	movf	plusw1,w,c
 13847  014A36  E108               	bnz	u5300
 13848  014A38  0EFE               	movlw	-2
 13849  014A3A  006F FF8C  F035    	movff	plusw1,btemp
 13850  014A40  0E17               	movlw	23
 13851  014A42  5E35               	subwf	btemp^0,f,c
 13852  014A44  A0D8               	btfss	status,0,c
 13853  014A46  D00E               	goto	l6442
 13854  014A48                     u5300:
 13855                           
 13856                           ;stkvar	_x @ sp[(-10)+-4]
 13857  014A48  0EF2               	movlw	-14
 13858  014A4A  006F FF8C  F035    	movff	plusw1,btemp
 13859  014A50  0EF3               	movlw	-13
 13860  014A52  006F FF8C  F036    	movff	plusw1,btemp+1
 13861  014A58  0EF4               	movlw	-12
 13862  014A5A  006F FF8C  F037    	movff	plusw1,btemp+2
 13863  014A60  0EF5               	movlw	-11
 13864  014A62  D11F               	goto	L15
 13865  014A64                     l6442:
 13866                           
 13867                           ;stkvar	_e @ sp[(-10)+8]
 13868  014A64  0EFF               	movlw	-1
 13869  014A66  BEE3               	btfsc	plusw1,7,c
 13870  014A68  D0B4               	goto	l6458
 13871                           
 13872                           ;stkvar	_e @ sp[(-10)+8]
 13873  014A6A  0EFE               	movlw	-2
 13874  014A6C  006F FF8C  F040    	movff	plusw1,btemp+11
 13875  014A72  0EFF               	movlw	255
 13876  014A74  6E39               	movwf	(btemp+4)^0,c
 13877  014A76  0EFF               	movlw	255
 13878  014A78  6E3A               	movwf	(btemp+5)^0,c
 13879  014A7A  0E7F               	movlw	127
 13880  014A7C  6E3B               	movwf	(btemp+6)^0,c
 13881  014A7E  0E00               	movlw	0
 13882  014A80  6E3C               	movwf	(btemp+7)^0,c
 13883  014A82                     u5325:
 13884  014A82  6640               	tstfsz	(btemp+11)^0,c
 13885  014A84  D001               	goto	u5326
 13886  014A86  D007               	goto	u5327
 13887  014A88                     u5326:
 13888  014A88  343C               	rlcf	(btemp+7)^0,w,c
 13889  014A8A  323C               	rrcf	(btemp+7)^0,f,c
 13890  014A8C  323B               	rrcf	(btemp+6)^0,f,c
 13891  014A8E  323A               	rrcf	(btemp+5)^0,f,c
 13892  014A90  3239               	rrcf	(btemp+4)^0,f,c
 13893  014A92  2E40               	decfsz	(btemp+11)^0,f,c
 13894  014A94  D7F6               	goto	u5325
 13895  014A96                     u5327:
 13896                           
 13897                           ;stkvar	_m @ sp[(-10)+4]
 13898  014A96  0EFA               	movlw	-6
 13899  014A98  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 13900  014A9E  0EFB               	movlw	-5
 13901  014AA0  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 13902  014AA6  0EFC               	movlw	-4
 13903  014AA8  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 13904  014AAE  0EFD               	movlw	-3
 13905  014AB0  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 13906                           
 13907                           ;stkvar	_m @ sp[(-10)+4]
 13908                           ;stkvar	_u @ sp[(-10)+0]
 13909  014AB6  0EF6               	movlw	-10
 13910  014AB8  006F FF8C  F03D    	movff	plusw1,btemp+8
 13911  014ABE  0EF7               	movlw	-9
 13912  014AC0  006F FF8C  F03E    	movff	plusw1,btemp+9
 13913  014AC6  0EF8               	movlw	-8
 13914  014AC8  006F FF8C  F03F    	movff	plusw1,btemp+10
 13915  014ACE  0EF9               	movlw	-7
 13916  014AD0  006F FF8C  F040    	movff	plusw1,btemp+11
 13917  014AD6  0EFA               	movlw	-6
 13918  014AD8  50E3               	movf	plusw1,w,c
 13919  014ADA  163D               	andwf	(btemp+8)^0,f,c
 13920  014ADC  0EFB               	movlw	-5
 13921  014ADE  50E3               	movf	plusw1,w,c
 13922  014AE0  163E               	andwf	(btemp+9)^0,f,c
 13923  014AE2  0EFC               	movlw	-4
 13924  014AE4  50E3               	movf	plusw1,w,c
 13925  014AE6  163F               	andwf	(btemp+10)^0,f,c
 13926  014AE8  0EFD               	movlw	-3
 13927  014AEA  50E3               	movf	plusw1,w,c
 13928  014AEC  1640               	andwf	(btemp+11)^0,f,c
 13929  014AEE  503D               	movf	(btemp+8)^0,w,c
 13930  014AF0  103E               	iorwf	(btemp+9)^0,w,c
 13931  014AF2  103F               	iorwf	(btemp+10)^0,w,c
 13932  014AF4  1040               	iorwf	(btemp+11)^0,w,c
 13933  014AF6  B4D8               	btfsc	status,2,c
 13934  014AF8  D7A7               	goto	u5300
 13935                           
 13936                           ;stkvar	_u @ sp[(-10)+0]
 13937  014AFA  0EF6               	movlw	-10
 13938  014AFC  006F FF8C  F03D    	movff	plusw1,btemp+8
 13939  014B02  0EF7               	movlw	-9
 13940  014B04  006F FF8C  F03E    	movff	plusw1,btemp+9
 13941  014B0A  0EF8               	movlw	-8
 13942  014B0C  006F FF8C  F03F    	movff	plusw1,btemp+10
 13943  014B12  0EF9               	movlw	-7
 13944  014B14  006F FF8C  F040    	movff	plusw1,btemp+11
 13945  014B1A  0E20               	movlw	32
 13946  014B1C  D005               	goto	u5340
 13947  014B1E                     u5345:
 13948  014B1E  90D8               	bcf	status,0,c
 13949  014B20  3240               	rrcf	(btemp+11)^0,f,c
 13950  014B22  323F               	rrcf	(btemp+10)^0,f,c
 13951  014B24  323E               	rrcf	(btemp+9)^0,f,c
 13952  014B26  323D               	rrcf	(btemp+8)^0,f,c
 13953  014B28                     u5340:
 13954  014B28  2EE8               	decfsz	wreg,f,c
 13955  014B2A  D7F9               	goto	u5345
 13956  014B2C  503D               	movf	(btemp+8)^0,w,c
 13957  014B2E  B4D8               	btfsc	status,2,c
 13958  014B30  D028               	goto	l6456
 13959                           
 13960                           ;stkvar	_m @ sp[(-10)+4]
 13961                           ;stkvar	_u @ sp[(-10)+0]
 13962  014B32  0EF6               	movlw	-10
 13963  014B34  50E3               	movf	plusw1,w,c
 13964  014B36  6E35               	movwf	btemp^0,c
 13965  014B38  0EFA               	movlw	-6
 13966  014B3A  50E3               	movf	plusw1,w,c
 13967  014B3C  2635               	addwf	btemp^0,f,c
 13968  014B3E  0EF6               	movlw	-10
 13969  014B40  0060  F0D7  FFE3   	movff	btemp,plusw1
 13970  014B46  0EF7               	movlw	-9
 13971  014B48  50E3               	movf	plusw1,w,c
 13972  014B4A  6E35               	movwf	btemp^0,c
 13973  014B4C  0EFB               	movlw	-5
 13974  014B4E  50E3               	movf	plusw1,w,c
 13975  014B50  2235               	addwfc	btemp^0,f,c
 13976  014B52  0EF7               	movlw	-9
 13977  014B54  0060  F0D7  FFE3   	movff	btemp,plusw1
 13978  014B5A  0EF8               	movlw	-8
 13979  014B5C  50E3               	movf	plusw1,w,c
 13980  014B5E  6E35               	movwf	btemp^0,c
 13981  014B60  0EFC               	movlw	-4
 13982  014B62  50E3               	movf	plusw1,w,c
 13983  014B64  2235               	addwfc	btemp^0,f,c
 13984  014B66  0EF8               	movlw	-8
 13985  014B68  0060  F0D7  FFE3   	movff	btemp,plusw1
 13986  014B6E  0EF9               	movlw	-7
 13987  014B70  50E3               	movf	plusw1,w,c
 13988  014B72  6E35               	movwf	btemp^0,c
 13989  014B74  0EFD               	movlw	-3
 13990  014B76  50E3               	movf	plusw1,w,c
 13991  014B78  2235               	addwfc	btemp^0,f,c
 13992  014B7A  0EF9               	movlw	-7
 13993  014B7C  0060  F0D7  FFE3   	movff	btemp,plusw1
 13994  014B82                     l6456:
 13995                           
 13996                           ;stkvar	_m @ sp[(-10)+4]
 13997  014B82  0EFA               	movlw	-6
 13998  014B84  006F FF8C  F03D    	movff	plusw1,btemp+8
 13999  014B8A  0EFB               	movlw	-5
 14000  014B8C  006F FF8C  F03E    	movff	plusw1,btemp+9
 14001  014B92  0EFC               	movlw	-4
 14002  014B94  006F FF8C  F03F    	movff	plusw1,btemp+10
 14003  014B9A  0EFD               	movlw	-3
 14004  014B9C  006F FF8C  F040    	movff	plusw1,btemp+11
 14005  014BA2  1C3D               	comf	(btemp+8)^0,w,c
 14006  014BA4  6E39               	movwf	(btemp+4)^0,c
 14007  014BA6  1C3E               	comf	(btemp+9)^0,w,c
 14008  014BA8  6E3A               	movwf	(btemp+5)^0,c
 14009  014BAA  1C3F               	comf	(btemp+10)^0,w,c
 14010  014BAC  6E3B               	movwf	(btemp+6)^0,c
 14011  014BAE  1C40               	comf	(btemp+11)^0,w,c
 14012  014BB0  6E3C               	movwf	(btemp+7)^0,c
 14013                           
 14014                           ;stkvar	_u @ sp[(-10)+0]
 14015  014BB2  50E1               	movf	fsr1l,w,c
 14016  014BB4  0FF6               	addlw	-10
 14017  014BB6  6ED9               	movwf	fsr2l,c
 14018  014BB8  50E2               	movf	fsr1h,w,c
 14019  014BBA  6EDA               	movwf	fsr2h,c
 14020  014BBC  0EFF               	movlw	255
 14021  014BBE  22DA               	addwfc	fsr2h,f,c
 14022  014BC0  5039               	movf	(btemp+4)^0,w,c
 14023  014BC2  16DE               	andwf	postinc2,f,c
 14024  014BC4  503A               	movf	(btemp+5)^0,w,c
 14025  014BC6  16DE               	andwf	postinc2,f,c
 14026  014BC8  503B               	movf	(btemp+6)^0,w,c
 14027  014BCA  16DE               	andwf	postinc2,f,c
 14028  014BCC  503C               	movf	(btemp+7)^0,w,c
 14029  014BCE  16DE               	andwf	postinc2,f,c
 14030  014BD0  D05B               	goto	l6466
 14031  014BD2                     l6458:
 14032                           
 14033                           ;stkvar	_u @ sp[(-10)+0]
 14034  014BD2  0EF6               	movlw	-10
 14035  014BD4  006F FF8C  F03D    	movff	plusw1,btemp+8
 14036  014BDA  0EF7               	movlw	-9
 14037  014BDC  006F FF8C  F03E    	movff	plusw1,btemp+9
 14038  014BE2  0EF8               	movlw	-8
 14039  014BE4  006F FF8C  F03F    	movff	plusw1,btemp+10
 14040  014BEA  0EF9               	movlw	-7
 14041  014BEC  006F FF8C  F040    	movff	plusw1,btemp+11
 14042  014BF2  0E20               	movlw	32
 14043  014BF4  D005               	goto	u5360
 14044  014BF6                     u5365:
 14045  014BF6  90D8               	bcf	status,0,c
 14046  014BF8  3240               	rrcf	(btemp+11)^0,f,c
 14047  014BFA  323F               	rrcf	(btemp+10)^0,f,c
 14048  014BFC  323E               	rrcf	(btemp+9)^0,f,c
 14049  014BFE  323D               	rrcf	(btemp+8)^0,f,c
 14050  014C00                     u5360:
 14051  014C00  2EE8               	decfsz	wreg,f,c
 14052  014C02  D7F9               	goto	u5365
 14053  014C04  663D               	tstfsz	(btemp+8)^0,c
 14054  014C06  D009               	goto	l6462
 14055                           
 14056                           ;stkvar	_u @ sp[(-10)+0]
 14057  014C08  0EF6               	movlw	-10
 14058  014C0A  6AE3               	clrf	plusw1,c
 14059  014C0C  0EF7               	movlw	-9
 14060  014C0E  6AE3               	clrf	plusw1,c
 14061  014C10  0EF8               	movlw	-8
 14062  014C12  6AE3               	clrf	plusw1,c
 14063  014C14  0EF9               	movlw	-7
 14064  014C16  6AE3               	clrf	plusw1,c
 14065  014C18  D037               	goto	l6466
 14066  014C1A                     l6462:
 14067                           
 14068                           ;stkvar	_u @ sp[(-10)+0]
 14069  014C1A  0EF6               	movlw	-10
 14070  014C1C  006F FF8C  F03D    	movff	plusw1,btemp+8
 14071  014C22  0EF7               	movlw	-9
 14072  014C24  006F FF8C  F03E    	movff	plusw1,btemp+9
 14073  014C2A  0EF8               	movlw	-8
 14074  014C2C  006F FF8C  F03F    	movff	plusw1,btemp+10
 14075  014C32  0EF9               	movlw	-7
 14076  014C34  006F FF8C  F040    	movff	plusw1,btemp+11
 14077  014C3A  90D8               	bcf	status,0,c
 14078  014C3C  343D               	rlcf	(btemp+8)^0,w,c
 14079  014C3E  6E39               	movwf	(btemp+4)^0,c
 14080  014C40  343E               	rlcf	(btemp+9)^0,w,c
 14081  014C42  6E3A               	movwf	(btemp+5)^0,c
 14082  014C44  343F               	rlcf	(btemp+10)^0,w,c
 14083  014C46  6E3B               	movwf	(btemp+6)^0,c
 14084  014C48  3440               	rlcf	(btemp+11)^0,w,c
 14085  014C4A  6E3C               	movwf	(btemp+7)^0,c
 14086  014C4C  5039               	movf	(btemp+4)^0,w,c
 14087  014C4E  103A               	iorwf	(btemp+5)^0,w,c
 14088  014C50  103B               	iorwf	(btemp+6)^0,w,c
 14089  014C52  103C               	iorwf	(btemp+7)^0,w,c
 14090  014C54  B4D8               	btfsc	status,2,c
 14091  014C56  D018               	goto	l6466
 14092  014C58  0E00               	movlw	0
 14093  014C5A  6E3D               	movwf	(btemp+8)^0,c
 14094  014C5C  0E00               	movlw	0
 14095  014C5E  6E3E               	movwf	(btemp+9)^0,c
 14096  014C60  0E80               	movlw	128
 14097  014C62  6E3F               	movwf	(btemp+10)^0,c
 14098  014C64  0EBF               	movlw	191
 14099  014C66  6E40               	movwf	(btemp+11)^0,c
 14100                           
 14101                           ;stkvar	_u @ sp[(-10)+0]
 14102  014C68  0EF6               	movlw	-10
 14103  014C6A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14104  014C70  0EF7               	movlw	-9
 14105  014C72  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14106  014C78  0EF8               	movlw	-8
 14107  014C7A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14108  014C80  0EF9               	movlw	-7
 14109  014C82  0060  F103  FFE3   	movff	btemp+11,plusw1
 14110  014C88                     l6466:
 14111                           
 14112                           ;stkvar	_u @ sp[(-10)+0]
 14113  014C88  0EF6               	movlw	-10
 14114  014C8A  006F FF8C  F035    	movff	plusw1,btemp
 14115  014C90  0EF7               	movlw	-9
 14116  014C92  006F FF8C  F036    	movff	plusw1,btemp+1
 14117  014C98  0EF8               	movlw	-8
 14118  014C9A  006F FF8C  F037    	movff	plusw1,btemp+2
 14119  014CA0  0EF9               	movlw	-7
 14120  014CA2                     L15:
 14121  014CA2  006F FF8C  F038    	movff	plusw1,btemp+3
 14122                           
 14123                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14124  014CA8  0EF2               	movlw	242
 14125  014CAA  26E1               	addwf	fsr1l,f,c
 14126  014CAC  0EFF               	movlw	255
 14127  014CAE  22E2               	addwfc	fsr1h,f,c
 14128  014CB0  0012               	return		;funcret
 14129  014CB2                     __end_of_floorf:
 14130                           	opt callstack 0
 14131                           
 14132 ;; *************** function ___fpclassifyf *****************
 14133 ;; Defined at:
 14134 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14135 ;; Parameters:    Size  Location     Type
 14136 ;;  x               4  [STACK] float 
 14137 ;; Auto vars:     Size  Location     Type
 14138 ;;  u               4  [STACK] struct .
 14139 ;;  e               2  [STACK] int 
 14140 ;; Return value:  Size  Location     Type
 14141 ;;                  2  [STACK] int 
 14142 ;; Registers used:
 14143 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14144 ;; Tracked objects:
 14145 ;;		On entry : 0/4
 14146 ;;		On exit  : 0/0
 14147 ;;		Unchanged: 0/0
 14148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14153 ;;Total ram usage:        0 bytes
 14154 ;; Hardware stack levels used:    1
 14155 ;; Hardware stack levels required when called:    6
 14156 ;; This function calls:
 14157 ;;		Nothing
 14158 ;; This function is called by:
 14159 ;;		_efgtoa
 14160 ;; This function uses a reentrant model
 14161 ;;
 14162                           
 14163                           	psect	text50
 14164  0164C6                     __ptext50:
 14165                           	opt callstack 0
 14166  0164C6                     ___fpclassifyf:
 14167                           	opt callstack 0
 14168                           
 14169                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14170  0164C6  0E06               	movlw	6
 14171  0164C8  26E1               	addwf	fsr1l,f,c
 14172  0164CA  0E00               	movlw	0
 14173  0164CC  22E2               	addwfc	fsr1h,f,c
 14174                           
 14175                           ;incstack = 0
 14176  0164CE  0060  F220  F03D   	movff	___fpclassifyf@F463,btemp+8
 14177  0164D4  0060  F224  F03E   	movff	___fpclassifyf@F463+1,btemp+9
 14178  0164DA  0060  F228  F03F   	movff	___fpclassifyf@F463+2,btemp+10
 14179  0164E0  0060  F22C  F040   	movff	___fpclassifyf@F463+3,btemp+11
 14180                           
 14181                           ;stkvar	_u @ sp[(-6)+0]
 14182  0164E6  0EFA               	movlw	-6
 14183  0164E8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14184  0164EE  0EFB               	movlw	-5
 14185  0164F0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14186  0164F6  0EFC               	movlw	-4
 14187  0164F8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14188  0164FE  0EFD               	movlw	-3
 14189  016500  0060  F103  FFE3   	movff	btemp+11,plusw1
 14190                           
 14191                           ;stkvar	_x @ sp[(-6)+-4]
 14192  016506  0EF6               	movlw	-10
 14193  016508  006F FF8C  F03D    	movff	plusw1,btemp+8
 14194  01650E  0EF7               	movlw	-9
 14195  016510  006F FF8C  F03E    	movff	plusw1,btemp+9
 14196  016516  0EF8               	movlw	-8
 14197  016518  006F FF8C  F03F    	movff	plusw1,btemp+10
 14198  01651E  0EF9               	movlw	-7
 14199  016520  006F FF8C  F040    	movff	plusw1,btemp+11
 14200                           
 14201                           ;stkvar	_u @ sp[(-6)+0]
 14202  016526  0EFA               	movlw	-6
 14203  016528  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14204  01652E  0EFB               	movlw	-5
 14205  016530  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14206  016536  0EFC               	movlw	-4
 14207  016538  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14208  01653E  0EFD               	movlw	-3
 14209  016540  0060  F103  FFE3   	movff	btemp+11,plusw1
 14210                           
 14211                           ;stkvar	_u @ sp[(-6)+0]
 14212  016546  0EFA               	movlw	-6
 14213  016548  006F FF8C  F03D    	movff	plusw1,btemp+8
 14214  01654E  0EFB               	movlw	-5
 14215  016550  006F FF8C  F03E    	movff	plusw1,btemp+9
 14216  016556  0EFC               	movlw	-4
 14217  016558  006F FF8C  F03F    	movff	plusw1,btemp+10
 14218  01655E  0EFD               	movlw	-3
 14219  016560  006F FF8C  F040    	movff	plusw1,btemp+11
 14220  016566  0E18               	movlw	24
 14221  016568  D005               	goto	u5170
 14222  01656A                     u5175:
 14223  01656A  90D8               	bcf	status,0,c
 14224  01656C  3240               	rrcf	(btemp+11)^0,f,c
 14225  01656E  323F               	rrcf	(btemp+10)^0,f,c
 14226  016570  323E               	rrcf	(btemp+9)^0,f,c
 14227  016572  323D               	rrcf	(btemp+8)^0,f,c
 14228  016574                     u5170:
 14229  016574  2EE8               	decfsz	wreg,f,c
 14230  016576  D7F9               	goto	u5175
 14231  016578  0060  F0F4  F03B   	movff	btemp+8,btemp+6
 14232  01657E  0060  F0F8  F03C   	movff	btemp+9,btemp+7
 14233  016584  0EFF               	movlw	255
 14234  016586  163B               	andwf	(btemp+6)^0,f,c
 14235  016588  0E00               	movlw	0
 14236  01658A  163C               	andwf	(btemp+7)^0,f,c
 14237                           
 14238                           ;stkvar	_e @ sp[(-6)+4]
 14239  01658C  0EFE               	movlw	-2
 14240  01658E  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 14241  016594  0EFF               	movlw	-1
 14242  016596  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 14243                           
 14244                           ;stkvar	_e @ sp[(-6)+4]
 14245  01659C  0EFE               	movlw	-2
 14246  01659E  006F FF8C  F035    	movff	plusw1,btemp
 14247  0165A4  0EFF               	movlw	-1
 14248  0165A6  50E3               	movf	plusw1,w,c
 14249  0165A8  1035               	iorwf	btemp^0,w,c
 14250  0165AA  A4D8               	btfss	status,2,c
 14251  0165AC  D023               	goto	l6404
 14252                           
 14253                           ;stkvar	_u @ sp[(-6)+0]
 14254  0165AE  0EFA               	movlw	-6
 14255  0165B0  006F FF8C  F03D    	movff	plusw1,btemp+8
 14256  0165B6  0EFB               	movlw	-5
 14257  0165B8  006F FF8C  F03E    	movff	plusw1,btemp+9
 14258  0165BE  0EFC               	movlw	-4
 14259  0165C0  006F FF8C  F03F    	movff	plusw1,btemp+10
 14260  0165C6  0EFD               	movlw	-3
 14261  0165C8  006F FF8C  F040    	movff	plusw1,btemp+11
 14262  0165CE  90D8               	bcf	status,0,c
 14263  0165D0  343D               	rlcf	(btemp+8)^0,w,c
 14264  0165D2  6E39               	movwf	(btemp+4)^0,c
 14265  0165D4  343E               	rlcf	(btemp+9)^0,w,c
 14266  0165D6  6E3A               	movwf	(btemp+5)^0,c
 14267  0165D8  343F               	rlcf	(btemp+10)^0,w,c
 14268  0165DA  6E3B               	movwf	(btemp+6)^0,c
 14269  0165DC  3440               	rlcf	(btemp+11)^0,w,c
 14270  0165DE  6E3C               	movwf	(btemp+7)^0,c
 14271  0165E0  5039               	movf	(btemp+4)^0,w,c
 14272  0165E2  103A               	iorwf	(btemp+5)^0,w,c
 14273  0165E4  103B               	iorwf	(btemp+6)^0,w,c
 14274  0165E6  103C               	iorwf	(btemp+7)^0,w,c
 14275  0165E8  A4D8               	btfss	status,2,c
 14276  0165EA  D002               	goto	l6400
 14277  0165EC  0E02               	movlw	2
 14278  0165EE  D02E               	goto	L16
 14279  0165F0                     l6400:
 14280  0165F0  0E03               	movlw	3
 14281  0165F2  D02C               	goto	L16
 14282  0165F4                     l6404:
 14283                           
 14284                           ;stkvar	_e @ sp[(-6)+4]
 14285  0165F4  0EFE               	movlw	-2
 14286  0165F6  28E3               	incf	plusw1,w,c
 14287  0165F8  E128               	bnz	l6410
 14288  0165FA  0EFF               	movlw	-1
 14289  0165FC  50E3               	movf	plusw1,w,c
 14290  0165FE  A4D8               	btfss	status,2,c
 14291  016600  D024               	goto	l6410
 14292                           
 14293                           ;stkvar	_u @ sp[(-6)+0]
 14294  016602  0EFA               	movlw	-6
 14295  016604  006F FF8C  F03D    	movff	plusw1,btemp+8
 14296  01660A  0EFB               	movlw	-5
 14297  01660C  006F FF8C  F03E    	movff	plusw1,btemp+9
 14298  016612  0EFC               	movlw	-4
 14299  016614  006F FF8C  F03F    	movff	plusw1,btemp+10
 14300  01661A  0EFD               	movlw	-3
 14301  01661C  006F FF8C  F040    	movff	plusw1,btemp+11
 14302  016622  0E09               	movlw	9
 14303  016624                     u5215:
 14304  016624  90D8               	bcf	status,0,c
 14305  016626  363D               	rlcf	(btemp+8)^0,f,c
 14306  016628  363E               	rlcf	(btemp+9)^0,f,c
 14307  01662A  363F               	rlcf	(btemp+10)^0,f,c
 14308  01662C  3640               	rlcf	(btemp+11)^0,f,c
 14309  01662E  2EE8               	decfsz	wreg,f,c
 14310  016630  D7F9               	goto	u5215
 14311  016632  503D               	movf	(btemp+8)^0,w,c
 14312  016634  103E               	iorwf	(btemp+9)^0,w,c
 14313  016636  103F               	iorwf	(btemp+10)^0,w,c
 14314  016638  1040               	iorwf	(btemp+11)^0,w,c
 14315  01663A  A4D8               	btfss	status,2,c
 14316  01663C  D002               	goto	u5220
 14317  01663E  0E01               	movlw	1
 14318  016640  D001               	goto	u5230
 14319  016642                     u5220:
 14320  016642  0E00               	movlw	0
 14321  016644                     u5230:
 14322  016644  6E35               	movwf	btemp^0,c
 14323  016646  6A36               	clrf	(btemp+1)^0,c
 14324  016648  D004               	goto	l2692
 14325  01664A                     l6410:
 14326  01664A  0E04               	movlw	4
 14327  01664C                     L16:
 14328  01664C  6E35               	movwf	btemp^0,c
 14329  01664E  0E00               	movlw	0
 14330  016650  6E36               	movwf	(btemp+1)^0,c
 14331  016652                     l2692:
 14332                           
 14333                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14334  016652  0EF6               	movlw	246
 14335  016654  26E1               	addwf	fsr1l,f,c
 14336  016656  0EFF               	movlw	255
 14337  016658  22E2               	addwfc	fsr1h,f,c
 14338  01665A  0012               	return		;funcret
 14339  01665C                     __end_of___fpclassifyf:
 14340                           	opt callstack 0
 14341                           
 14342 ;; *************** function ___fltol *****************
 14343 ;; Defined at:
 14344 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14345 ;; Parameters:    Size  Location     Type
 14346 ;;  f1              4  [STACK] int 
 14347 ;; Auto vars:     Size  Location     Type
 14348 ;;  exp1            1  [STACK] unsigned char 
 14349 ;;  sign1           1  [STACK] unsigned char 
 14350 ;; Return value:  Size  Location     Type
 14351 ;;                  4  [STACK] long 
 14352 ;; Registers used:
 14353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14354 ;; Tracked objects:
 14355 ;;		On entry : 0/4
 14356 ;;		On exit  : 0/0
 14357 ;;		Unchanged: 0/0
 14358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14363 ;;Total ram usage:        0 bytes
 14364 ;; Hardware stack levels used:    1
 14365 ;; Hardware stack levels required when called:    6
 14366 ;; This function calls:
 14367 ;;		Nothing
 14368 ;; This function is called by:
 14369 ;;		_efgtoa
 14370 ;; This function uses a reentrant model
 14371 ;;
 14372                           
 14373                           	psect	text51
 14374  0167DC                     __ptext51:
 14375                           	opt callstack 0
 14376  0167DC                     ___fltol:
 14377                           	opt callstack 0
 14378                           
 14379                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14380  0167DC  52E6               	movf	postinc1,f,c
 14381  0167DE  52E6               	movf	postinc1,f,c
 14382                           
 14383                           ;stkvar	_f1 @ sp[(-2)+-4]
 14384                           
 14385                           ;incstack = 0
 14386  0167E0  0EFA               	movlw	-6
 14387  0167E2  006F FF8C  F03D    	movff	plusw1,btemp+8
 14388  0167E8  0EFB               	movlw	-5
 14389  0167EA  006F FF8C  F03E    	movff	plusw1,btemp+9
 14390  0167F0  0EFC               	movlw	-4
 14391  0167F2  006F FF8C  F03F    	movff	plusw1,btemp+10
 14392  0167F8  0EFD               	movlw	-3
 14393  0167FA  006F FF8C  F040    	movff	plusw1,btemp+11
 14394  016800  0E18               	movlw	24
 14395  016802  D005               	goto	u6380
 14396  016804                     u6385:
 14397  016804  90D8               	bcf	status,0,c
 14398  016806  3240               	rrcf	(btemp+11)^0,f,c
 14399  016808  323F               	rrcf	(btemp+10)^0,f,c
 14400  01680A  323E               	rrcf	(btemp+9)^0,f,c
 14401  01680C  323D               	rrcf	(btemp+8)^0,f,c
 14402  01680E                     u6380:
 14403  01680E  2EE8               	decfsz	wreg,f,c
 14404  016810  D7F9               	goto	u6385
 14405                           
 14406                           ;stkvar	_exp1 @ sp[(-2)+0]
 14407  016812  0EFE               	movlw	-2
 14408  016814  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14409  01681A  0EFE               	movlw	-2
 14410  01681C  50E3               	movf	plusw1,w,c
 14411  01681E  A4D8               	btfss	status,2,c
 14412  016820  D006               	goto	l7030
 14413  016822                     u6390:
 14414  016822  0E00               	movlw	0
 14415  016824  6E35               	movwf	btemp^0,c
 14416  016826  6A36               	clrf	(btemp+1)^0,c
 14417  016828  6A37               	clrf	(btemp+2)^0,c
 14418  01682A  6A38               	clrf	(btemp+3)^0,c
 14419  01682C  D08B               	goto	l2308
 14420  01682E                     l7030:
 14421                           
 14422                           ;stkvar	_f1 @ sp[(-2)+-4]
 14423  01682E  0EFA               	movlw	-6
 14424  016830  006F FF8C  F03D    	movff	plusw1,btemp+8
 14425  016836  0EFB               	movlw	-5
 14426  016838  006F FF8C  F03E    	movff	plusw1,btemp+9
 14427  01683E  0EFC               	movlw	-4
 14428  016840  006F FF8C  F03F    	movff	plusw1,btemp+10
 14429  016846  0EFD               	movlw	-3
 14430  016848  006F FF8C  F040    	movff	plusw1,btemp+11
 14431  01684E  0E20               	movlw	32
 14432  016850  D005               	goto	u6400
 14433  016852                     u6405:
 14434  016852  90D8               	bcf	status,0,c
 14435  016854  3240               	rrcf	(btemp+11)^0,f,c
 14436  016856  323F               	rrcf	(btemp+10)^0,f,c
 14437  016858  323E               	rrcf	(btemp+9)^0,f,c
 14438  01685A  323D               	rrcf	(btemp+8)^0,f,c
 14439  01685C                     u6400:
 14440  01685C  2EE8               	decfsz	wreg,f,c
 14441  01685E  D7F9               	goto	u6405
 14442                           
 14443                           ;stkvar	_sign1 @ sp[(-2)+1]
 14444  016860  0EFF               	movlw	-1
 14445  016862  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14446                           
 14447                           ;stkvar	_f1 @ sp[(-2)+-4]
 14448  016868  0EFC               	movlw	-4
 14449  01686A  8EE3               	bsf	plusw1,7,c
 14450                           
 14451                           ;stkvar	_f1 @ sp[(-2)+-4]
 14452  01686C  50E1               	movf	fsr1l,w,c
 14453  01686E  0FFA               	addlw	-6
 14454  016870  6ED9               	movwf	fsr2l,c
 14455  016872  50E2               	movf	fsr1h,w,c
 14456  016874  6EDA               	movwf	fsr2h,c
 14457  016876  0EFF               	movlw	255
 14458  016878  22DA               	addwfc	fsr2h,f,c
 14459  01687A  0EFF               	movlw	255
 14460  01687C  16DE               	andwf	postinc2,f,c
 14461  01687E  0EFF               	movlw	255
 14462  016880  16DE               	andwf	postinc2,f,c
 14463  016882  0EFF               	movlw	255
 14464  016884  16DE               	andwf	postinc2,f,c
 14465  016886  0E00               	movlw	0
 14466  016888  16DE               	andwf	postinc2,f,c
 14467                           
 14468                           ;stkvar	_exp1 @ sp[(-2)+0]
 14469  01688A  0EFE               	movlw	-2
 14470  01688C  006F FF8C  F035    	movff	plusw1,btemp
 14471  016892  0E96               	movlw	150
 14472  016894  5E35               	subwf	btemp^0,f,c
 14473  016896  0EFE               	movlw	-2
 14474  016898  0060  F0D7  FFE3   	movff	btemp,plusw1
 14475                           
 14476                           ;stkvar	_exp1 @ sp[(-2)+0]
 14477  01689E  0EFE               	movlw	-2
 14478  0168A0  AEE3               	btfss	plusw1,7,c
 14479  0168A2  D014               	goto	l7048
 14480                           
 14481                           ;stkvar	_exp1 @ sp[(-2)+0]
 14482  0168A4  0EFE               	movlw	-2
 14483  0168A6  50E3               	movf	plusw1,w,c
 14484  0168A8  0A80               	xorlw	128
 14485  0168AA  0F97               	addlw	151
 14486  0168AC  A0D8               	btfss	status,0,c
 14487  0168AE  D7B9               	goto	u6390
 14488  0168B0                     l7046:
 14489                           
 14490                           ;stkvar	_f1 @ sp[(-2)+-4]
 14491  0168B0  90D8               	bcf	status,0,c
 14492  0168B2  0EFD               	movlw	-3
 14493  0168B4  32E3               	rrcf	plusw1,f,c
 14494  0168B6  0EFC               	movlw	-4
 14495  0168B8  32E3               	rrcf	plusw1,f,c
 14496  0168BA  0EFB               	movlw	-5
 14497  0168BC  32E3               	rrcf	plusw1,f,c
 14498  0168BE  0EFA               	movlw	-6
 14499  0168C0  32E3               	rrcf	plusw1,f,c
 14500                           
 14501                           ;stkvar	_exp1 @ sp[(-2)+0]
 14502  0168C2  0EFE               	movlw	-2
 14503  0168C4  2AE3               	incf	plusw1,f,c
 14504  0168C6  B4D8               	btfsc	status,2,c
 14505  0168C8  D018               	goto	u6450
 14506  0168CA  D7F2               	goto	l7046
 14507  0168CC                     l7048:
 14508                           
 14509                           ;stkvar	_exp1 @ sp[(-2)+0]
 14510  0168CC  0EFE               	movlw	-2
 14511  0168CE  006F FF8C  F035    	movff	plusw1,btemp
 14512  0168D4  0E1F               	movlw	31
 14513  0168D6  6435               	cpfsgt	btemp^0,c
 14514  0168D8  D00C               	goto	l7056
 14515  0168DA  D7A3               	goto	u6390
 14516  0168DC                     l7054:
 14517                           
 14518                           ;stkvar	_f1 @ sp[(-2)+-4]
 14519  0168DC  90D8               	bcf	status,0,c
 14520  0168DE  0EFA               	movlw	-6
 14521  0168E0  36E3               	rlcf	plusw1,f,c
 14522  0168E2  0EFB               	movlw	-5
 14523  0168E4  36E3               	rlcf	plusw1,f,c
 14524  0168E6  0EFC               	movlw	-4
 14525  0168E8  36E3               	rlcf	plusw1,f,c
 14526  0168EA  0EFD               	movlw	-3
 14527  0168EC  36E3               	rlcf	plusw1,f,c
 14528                           
 14529                           ;stkvar	_exp1 @ sp[(-2)+0]
 14530  0168EE  0EFE               	movlw	-2
 14531  0168F0  06E3               	decf	plusw1,f,c
 14532  0168F2                     l7056:
 14533                           
 14534                           ;stkvar	_exp1 @ sp[(-2)+0]
 14535  0168F2  0EFE               	movlw	-2
 14536  0168F4  50E3               	movf	plusw1,w,c
 14537  0168F6  A4D8               	btfss	status,2,c
 14538  0168F8  D7F1               	goto	l7054
 14539  0168FA                     u6450:
 14540                           
 14541                           ;stkvar	_sign1 @ sp[(-2)+1]
 14542  0168FA  0EFF               	movlw	-1
 14543  0168FC  50E3               	movf	plusw1,w,c
 14544  0168FE  B4D8               	btfsc	status,2,c
 14545  016900  D011               	goto	u6470
 14546                           
 14547                           ;stkvar	_f1 @ sp[(-2)+-4]
 14548                           ;stkvar	_f1 @ sp[(-2)+-4]
 14549  016902  0EFA               	movlw	-6
 14550  016904  6CE3               	negf	plusw1,c
 14551  016906  0EFB               	movlw	-5
 14552  016908  1EE3               	comf	plusw1,f,c
 14553  01690A  0EFC               	movlw	-4
 14554  01690C  1EE3               	comf	plusw1,f,c
 14555  01690E  0EFD               	movlw	-3
 14556  016910  1EE3               	comf	plusw1,f,c
 14557  016912  E308               	bnc	u6470
 14558  016914  0EFB               	movlw	-5
 14559  016916  2AE3               	incf	plusw1,f,c
 14560  016918  E305               	bnc	u6470
 14561  01691A  0EFC               	movlw	-4
 14562  01691C  2AE3               	incf	plusw1,f,c
 14563  01691E  E302               	bnc	u6470
 14564  016920  0EFD               	movlw	-3
 14565  016922  2AE3               	incf	plusw1,f,c
 14566  016924                     u6470:
 14567                           
 14568                           ;stkvar	_f1 @ sp[(-2)+-4]
 14569  016924  0EFA               	movlw	-6
 14570  016926  006F FF8C  F035    	movff	plusw1,btemp
 14571  01692C  0EFB               	movlw	-5
 14572  01692E  006F FF8C  F036    	movff	plusw1,btemp+1
 14573  016934  0EFC               	movlw	-4
 14574  016936  006F FF8C  F037    	movff	plusw1,btemp+2
 14575  01693C  0EFD               	movlw	-3
 14576  01693E  006F FF8C  F038    	movff	plusw1,btemp+3
 14577  016944                     l2308:
 14578                           
 14579                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14580  016944  0EFA               	movlw	250
 14581  016946  26E1               	addwf	fsr1l,f,c
 14582  016948  0EFF               	movlw	255
 14583  01694A  22E2               	addwfc	fsr1h,f,c
 14584  01694C  0012               	return		;funcret
 14585  01694E                     __end_of___fltol:
 14586                           	opt callstack 0
 14587                           
 14588 ;; *************** function ___flsub *****************
 14589 ;; Defined at:
 14590 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 14591 ;; Parameters:    Size  Location     Type
 14592 ;;  b               4  [STACK] long 
 14593 ;;  a               4  [STACK] long 
 14594 ;; Auto vars:     Size  Location     Type
 14595 ;;		None
 14596 ;; Return value:  Size  Location     Type
 14597 ;;                  4  [STACK] long 
 14598 ;; Registers used:
 14599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14600 ;; Tracked objects:
 14601 ;;		On entry : 0/4
 14602 ;;		On exit  : 0/0
 14603 ;;		Unchanged: 0/0
 14604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14609 ;;Total ram usage:        0 bytes
 14610 ;; Hardware stack levels used:    1
 14611 ;; Hardware stack levels required when called:    7
 14612 ;; This function calls:
 14613 ;;		___fladd
 14614 ;; This function is called by:
 14615 ;;		_conv_raw_result
 14616 ;;		_lp_filter
 14617 ;;		_efgtoa
 14618 ;; This function uses a reentrant model
 14619 ;;
 14620                           
 14621                           	psect	text52
 14622  01845C                     __ptext52:
 14623                           	opt callstack 0
 14624  01845C                     ___flsub:
 14625                           	opt callstack 16
 14626                           
 14627                           ;stkvar	_a @ sp[(0)+-8]
 14628                           
 14629                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14630                           ;incstack = 0
 14631  01845C  0EFB               	movlw	-5
 14632  01845E  7EE3               	btg	plusw1,7,c
 14633                           
 14634                           ;stkvar	_a @ sp[(0)+-8]
 14635  018460  0EF8               	movlw	-8
 14636  018462  006F FF8F FFE6     	movff	plusw1,postinc1
 14637  018468  006F FF8F FFE6     	movff	plusw1,postinc1
 14638  01846E  006F FF8F FFE6     	movff	plusw1,postinc1
 14639  018474  006F FF8F FFE6     	movff	plusw1,postinc1
 14640                           
 14641                           ;stkvar	_b @ sp[(-4)+-4]
 14642  01847A  0EF8               	movlw	-8
 14643  01847C  006F FF8F FFE6     	movff	plusw1,postinc1
 14644  018482  006F FF8F FFE6     	movff	plusw1,postinc1
 14645  018488  006F FF8F FFE6     	movff	plusw1,postinc1
 14646  01848E  006F FF8F FFE6     	movff	plusw1,postinc1
 14647  018494  EC0D  F095         	call	___fladd	;wreg free
 14648                           
 14649                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14650  018498  0EF8               	movlw	248
 14651  01849A  26E1               	addwf	fsr1l,f,c
 14652  01849C  0EFF               	movlw	255
 14653  01849E  22E2               	addwfc	fsr1h,f,c
 14654  0184A0  0012               	return		;funcret
 14655  0184A2                     __end_of___flsub:
 14656                           	opt callstack 0
 14657                           
 14658 ;; *************** function ___fladd *****************
 14659 ;; Defined at:
 14660 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 14661 ;; Parameters:    Size  Location     Type
 14662 ;;  b               4  [STACK] long 
 14663 ;;  a               4  [STACK] long 
 14664 ;; Auto vars:     Size  Location     Type
 14665 ;;  grs             1  [STACK] unsigned char 
 14666 ;;  bexp            1  [STACK] unsigned char 
 14667 ;;  aexp            1  [STACK] unsigned char 
 14668 ;;  signs           1  [STACK] unsigned char 
 14669 ;; Return value:  Size  Location     Type
 14670 ;;                  4  [STACK] unsigned char 
 14671 ;; Registers used:
 14672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14673 ;; Tracked objects:
 14674 ;;		On entry : 0/4
 14675 ;;		On exit  : 0/0
 14676 ;;		Unchanged: 0/0
 14677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14682 ;;Total ram usage:        0 bytes
 14683 ;; Hardware stack levels used:    1
 14684 ;; Hardware stack levels required when called:    6
 14685 ;; This function calls:
 14686 ;;		Nothing
 14687 ;; This function is called by:
 14688 ;;		_lp_filter
 14689 ;;		_efgtoa
 14690 ;;		___flsub
 14691 ;; This function uses a reentrant model
 14692 ;;
 14693                           
 14694                           	psect	text53
 14695  012A1A                     __ptext53:
 14696                           	opt callstack 0
 14697  012A1A                     ___fladd:
 14698                           	opt callstack 0
 14699                           
 14700                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14701  012A1A  52E6               	movf	postinc1,f,c
 14702  012A1C  52E6               	movf	postinc1,f,c
 14703  012A1E  52E6               	movf	postinc1,f,c
 14704  012A20  52E6               	movf	postinc1,f,c
 14705                           
 14706                           ;stkvar	_b @ sp[(-4)+-4]
 14707                           
 14708                           ;incstack = 0
 14709  012A22  0EFB               	movlw	251
 14710  012A24  24E1               	addwf	fsr1l,w,c
 14711  012A26  6ED9               	movwf	fsr2l,c
 14712  012A28  0EFF               	movlw	255
 14713  012A2A  20E2               	addwfc	fsr1h,w,c
 14714  012A2C  6EDA               	movwf	fsr2h,c
 14715  012A2E  50DF               	movf	indf2,w,c
 14716  012A30  6E40               	movwf	(btemp+11)^0,c
 14717  012A32  0E80               	movlw	128
 14718  012A34  1640               	andwf	(btemp+11)^0,f,c
 14719                           
 14720                           ;stkvar	_signs @ sp[(-4)+3]
 14721  012A36  0EFF               	movlw	-1
 14722  012A38  0060  F103  FFE3   	movff	btemp+11,plusw1
 14723                           
 14724                           ;stkvar	_b @ sp[(-4)+-4]
 14725  012A3E  0EFB               	movlw	251
 14726  012A40  24E1               	addwf	fsr1l,w,c
 14727  012A42  6ED9               	movwf	fsr2l,c
 14728  012A44  0EFF               	movlw	255
 14729  012A46  20E2               	addwfc	fsr1h,w,c
 14730  012A48  6EDA               	movwf	fsr2h,c
 14731  012A4A  50DF               	movf	indf2,w,c
 14732  012A4C  6E40               	movwf	(btemp+11)^0,c
 14733  012A4E  90D8               	bcf	status,0,c
 14734  012A50  3440               	rlcf	(btemp+11)^0,w,c
 14735  012A52  6E3F               	movwf	(btemp+10)^0,c
 14736                           
 14737                           ;stkvar	_bexp @ sp[(-4)+1]
 14738  012A54  0EFD               	movlw	-3
 14739  012A56  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14740                           
 14741                           ;stkvar	_b @ sp[(-4)+-4]
 14742  012A5C  0EFA               	movlw	250
 14743  012A5E  24E1               	addwf	fsr1l,w,c
 14744  012A60  6ED9               	movwf	fsr2l,c
 14745  012A62  0EFF               	movlw	255
 14746  012A64  20E2               	addwfc	fsr1h,w,c
 14747  012A66  6EDA               	movwf	fsr2h,c
 14748  012A68  AEDF               	btfss	indf2,7,c
 14749  012A6A  D002               	goto	l6144
 14750                           
 14751                           ;stkvar	_bexp @ sp[(-4)+1]
 14752  012A6C  0EFD               	movlw	-3
 14753  012A6E  80E3               	bsf	plusw1,0,c
 14754  012A70                     l6144:
 14755                           
 14756                           ;stkvar	_bexp @ sp[(-4)+1]
 14757  012A70  0EFD               	movlw	-3
 14758  012A72  50E3               	movf	plusw1,w,c
 14759  012A74  B4D8               	btfsc	status,2,c
 14760  012A76  D027               	goto	l6154
 14761                           
 14762                           ;stkvar	_bexp @ sp[(-4)+1]
 14763  012A78  0EFD               	movlw	-3
 14764  012A7A  28E3               	incf	plusw1,w,c
 14765  012A7C  A4D8               	btfss	status,2,c
 14766  012A7E  D018               	goto	l6150
 14767  012A80  0E00               	movlw	0
 14768  012A82  6E3D               	movwf	(btemp+8)^0,c
 14769  012A84  0E00               	movlw	0
 14770  012A86  6E3E               	movwf	(btemp+9)^0,c
 14771  012A88  0E00               	movlw	0
 14772  012A8A  6E3F               	movwf	(btemp+10)^0,c
 14773  012A8C  0E00               	movlw	0
 14774  012A8E  6E40               	movwf	(btemp+11)^0,c
 14775                           
 14776                           ;stkvar	_b @ sp[(-4)+-4]
 14777  012A90  0EF8               	movlw	-8
 14778  012A92  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14779  012A98  0EF9               	movlw	-7
 14780  012A9A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14781  012AA0  0EFA               	movlw	-6
 14782  012AA2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14783  012AA8  0EFB               	movlw	-5
 14784  012AAA  0060  F103  FFE3   	movff	btemp+11,plusw1
 14785  012AB0                     l6150:
 14786                           
 14787                           ;stkvar	_b @ sp[(-4)+-4]
 14788  012AB0  0EFA               	movlw	-6
 14789  012AB2  8EE3               	bsf	plusw1,7,c
 14790                           
 14791                           ;stkvar	_b @ sp[(-4)+-4]
 14792  012AB4  0EFB               	movlw	251
 14793  012AB6  24E1               	addwf	fsr1l,w,c
 14794  012AB8  6ED9               	movwf	fsr2l,c
 14795  012ABA  0EFF               	movlw	255
 14796  012ABC  20E2               	addwfc	fsr1h,w,c
 14797  012ABE  6EDA               	movwf	fsr2h,c
 14798  012AC0  0E00               	movlw	0
 14799  012AC2  6EDF               	movwf	indf2,c
 14800  012AC4  D018               	goto	l6156
 14801  012AC6                     l6154:
 14802  012AC6  0E00               	movlw	0
 14803  012AC8  6E3D               	movwf	(btemp+8)^0,c
 14804  012ACA  0E00               	movlw	0
 14805  012ACC  6E3E               	movwf	(btemp+9)^0,c
 14806  012ACE  0E00               	movlw	0
 14807  012AD0  6E3F               	movwf	(btemp+10)^0,c
 14808  012AD2  0E00               	movlw	0
 14809  012AD4  6E40               	movwf	(btemp+11)^0,c
 14810                           
 14811                           ;stkvar	_b @ sp[(-4)+-4]
 14812  012AD6  0EF8               	movlw	-8
 14813  012AD8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14814  012ADE  0EF9               	movlw	-7
 14815  012AE0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14816  012AE6  0EFA               	movlw	-6
 14817  012AE8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14818  012AEE  0EFB               	movlw	-5
 14819  012AF0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14820  012AF6                     l6156:
 14821                           
 14822                           ;stkvar	_a @ sp[(-4)+-8]
 14823  012AF6  0EF7               	movlw	247
 14824  012AF8  24E1               	addwf	fsr1l,w,c
 14825  012AFA  6ED9               	movwf	fsr2l,c
 14826  012AFC  0EFF               	movlw	255
 14827  012AFE  20E2               	addwfc	fsr1h,w,c
 14828  012B00  6EDA               	movwf	fsr2h,c
 14829  012B02  50DF               	movf	indf2,w,c
 14830  012B04  6E40               	movwf	(btemp+11)^0,c
 14831  012B06  0E80               	movlw	128
 14832  012B08  1640               	andwf	(btemp+11)^0,f,c
 14833                           
 14834                           ;stkvar	_aexp @ sp[(-4)+2]
 14835  012B0A  0EFE               	movlw	-2
 14836  012B0C  0060  F103  FFE3   	movff	btemp+11,plusw1
 14837                           
 14838                           ;stkvar	_signs @ sp[(-4)+3]
 14839                           ;stkvar	_aexp @ sp[(-4)+2]
 14840  012B12  50E1               	movf	fsr1l,w,c
 14841  012B14  0FFE               	addlw	-2
 14842  012B16  6ED9               	movwf	fsr2l,c
 14843  012B18  50E2               	movf	fsr1h,w,c
 14844  012B1A  6EDA               	movwf	fsr2h,c
 14845  012B1C  0EFF               	movlw	255
 14846  012B1E  22DA               	addwfc	fsr2h,f,c
 14847  012B20  0EFF               	movlw	-1
 14848  012B22  50E3               	movf	plusw1,w,c
 14849  012B24  18DE               	xorwf	postinc2,w,c
 14850  012B26  B4D8               	btfsc	status,2,c
 14851  012B28  D002               	goto	l6162
 14852                           
 14853                           ;stkvar	_signs @ sp[(-4)+3]
 14854  012B2A  0EFF               	movlw	-1
 14855  012B2C  8CE3               	bsf	plusw1,6,c
 14856  012B2E                     l6162:
 14857                           
 14858                           ;stkvar	_a @ sp[(-4)+-8]
 14859  012B2E  0EF7               	movlw	247
 14860  012B30  24E1               	addwf	fsr1l,w,c
 14861  012B32  6ED9               	movwf	fsr2l,c
 14862  012B34  0EFF               	movlw	255
 14863  012B36  20E2               	addwfc	fsr1h,w,c
 14864  012B38  6EDA               	movwf	fsr2h,c
 14865  012B3A  50DF               	movf	indf2,w,c
 14866  012B3C  6E40               	movwf	(btemp+11)^0,c
 14867  012B3E  90D8               	bcf	status,0,c
 14868  012B40  3440               	rlcf	(btemp+11)^0,w,c
 14869  012B42  6E3F               	movwf	(btemp+10)^0,c
 14870                           
 14871                           ;stkvar	_aexp @ sp[(-4)+2]
 14872  012B44  0EFE               	movlw	-2
 14873  012B46  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14874                           
 14875                           ;stkvar	_a @ sp[(-4)+-8]
 14876  012B4C  0EF6               	movlw	246
 14877  012B4E  24E1               	addwf	fsr1l,w,c
 14878  012B50  6ED9               	movwf	fsr2l,c
 14879  012B52  0EFF               	movlw	255
 14880  012B54  20E2               	addwfc	fsr1h,w,c
 14881  012B56  6EDA               	movwf	fsr2h,c
 14882  012B58  AEDF               	btfss	indf2,7,c
 14883  012B5A  D002               	goto	l6168
 14884                           
 14885                           ;stkvar	_aexp @ sp[(-4)+2]
 14886  012B5C  0EFE               	movlw	-2
 14887  012B5E  80E3               	bsf	plusw1,0,c
 14888  012B60                     l6168:
 14889                           
 14890                           ;stkvar	_aexp @ sp[(-4)+2]
 14891  012B60  0EFE               	movlw	-2
 14892  012B62  50E3               	movf	plusw1,w,c
 14893  012B64  B4D8               	btfsc	status,2,c
 14894  012B66  D027               	goto	l6178
 14895                           
 14896                           ;stkvar	_aexp @ sp[(-4)+2]
 14897  012B68  0EFE               	movlw	-2
 14898  012B6A  28E3               	incf	plusw1,w,c
 14899  012B6C  A4D8               	btfss	status,2,c
 14900  012B6E  D018               	goto	l6174
 14901  012B70  0E00               	movlw	0
 14902  012B72  6E3D               	movwf	(btemp+8)^0,c
 14903  012B74  0E00               	movlw	0
 14904  012B76  6E3E               	movwf	(btemp+9)^0,c
 14905  012B78  0E00               	movlw	0
 14906  012B7A  6E3F               	movwf	(btemp+10)^0,c
 14907  012B7C  0E00               	movlw	0
 14908  012B7E  6E40               	movwf	(btemp+11)^0,c
 14909                           
 14910                           ;stkvar	_a @ sp[(-4)+-8]
 14911  012B80  0EF4               	movlw	-12
 14912  012B82  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14913  012B88  0EF5               	movlw	-11
 14914  012B8A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14915  012B90  0EF6               	movlw	-10
 14916  012B92  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14917  012B98  0EF7               	movlw	-9
 14918  012B9A  0060  F103  FFE3   	movff	btemp+11,plusw1
 14919  012BA0                     l6174:
 14920                           
 14921                           ;stkvar	_a @ sp[(-4)+-8]
 14922  012BA0  0EF6               	movlw	-10
 14923  012BA2  8EE3               	bsf	plusw1,7,c
 14924                           
 14925                           ;stkvar	_a @ sp[(-4)+-8]
 14926  012BA4  0EF7               	movlw	247
 14927  012BA6  24E1               	addwf	fsr1l,w,c
 14928  012BA8  6ED9               	movwf	fsr2l,c
 14929  012BAA  0EFF               	movlw	255
 14930  012BAC  20E2               	addwfc	fsr1h,w,c
 14931  012BAE  6EDA               	movwf	fsr2h,c
 14932  012BB0  0E00               	movlw	0
 14933  012BB2  6EDF               	movwf	indf2,c
 14934  012BB4  D018               	goto	l6180
 14935  012BB6                     l6178:
 14936  012BB6  0E00               	movlw	0
 14937  012BB8  6E3D               	movwf	(btemp+8)^0,c
 14938  012BBA  0E00               	movlw	0
 14939  012BBC  6E3E               	movwf	(btemp+9)^0,c
 14940  012BBE  0E00               	movlw	0
 14941  012BC0  6E3F               	movwf	(btemp+10)^0,c
 14942  012BC2  0E00               	movlw	0
 14943  012BC4  6E40               	movwf	(btemp+11)^0,c
 14944                           
 14945                           ;stkvar	_a @ sp[(-4)+-8]
 14946  012BC6  0EF4               	movlw	-12
 14947  012BC8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14948  012BCE  0EF5               	movlw	-11
 14949  012BD0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14950  012BD6  0EF6               	movlw	-10
 14951  012BD8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14952  012BDE  0EF7               	movlw	-9
 14953  012BE0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14954  012BE6                     l6180:
 14955                           
 14956                           ;stkvar	_bexp @ sp[(-4)+1]
 14957                           ;stkvar	_aexp @ sp[(-4)+2]
 14958  012BE6  50E1               	movf	fsr1l,w,c
 14959  012BE8  0FFE               	addlw	-2
 14960  012BEA  6ED9               	movwf	fsr2l,c
 14961  012BEC  50E2               	movf	fsr1h,w,c
 14962  012BEE  6EDA               	movwf	fsr2h,c
 14963  012BF0  0EFF               	movlw	255
 14964  012BF2  22DA               	addwfc	fsr2h,f,c
 14965  012BF4  0EFD               	movlw	-3
 14966  012BF6  50E3               	movf	plusw1,w,c
 14967  012BF8  5CDE               	subwf	postinc2,w,c
 14968  012BFA  B0D8               	btfsc	status,0,c
 14969  012BFC  D0A4               	goto	l6216
 14970                           
 14971                           ;stkvar	_signs @ sp[(-4)+3]
 14972  012BFE  0EFF               	movlw	-1
 14973  012C00  ACE3               	btfss	plusw1,6,c
 14974  012C02  D002               	goto	l6186
 14975                           
 14976                           ;stkvar	_signs @ sp[(-4)+3]
 14977  012C04  0EFF               	movlw	-1
 14978  012C06  7EE3               	btg	plusw1,7,c
 14979  012C08                     l6186:
 14980                           
 14981                           ;stkvar	_bexp @ sp[(-4)+1]
 14982                           ;stkvar	_grs @ sp[(-4)+0]
 14983  012C08  0EFD               	movlw	-3
 14984  012C0A  006F FF8C  F035    	movff	plusw1,btemp
 14985  012C10  0EFC               	movlw	-4
 14986  012C12  0060  F0D7  FFE3   	movff	btemp,plusw1
 14987                           
 14988                           ;stkvar	_aexp @ sp[(-4)+2]
 14989                           ;stkvar	_bexp @ sp[(-4)+1]
 14990  012C18  0EFE               	movlw	-2
 14991  012C1A  006F FF8C  F035    	movff	plusw1,btemp
 14992  012C20  0EFD               	movlw	-3
 14993  012C22  0060  F0D7  FFE3   	movff	btemp,plusw1
 14994                           
 14995                           ;stkvar	_grs @ sp[(-4)+0]
 14996                           ;stkvar	_aexp @ sp[(-4)+2]
 14997  012C28  0EFC               	movlw	-4
 14998  012C2A  006F FF8C  F035    	movff	plusw1,btemp
 14999  012C30  0EFE               	movlw	-2
 15000  012C32  0060  F0D7  FFE3   	movff	btemp,plusw1
 15001                           
 15002                           ;stkvar	_b @ sp[(-4)+-4]
 15003                           ;stkvar	_grs @ sp[(-4)+0]
 15004  012C38  0EF8               	movlw	-8
 15005  012C3A  006F FF8C  F035    	movff	plusw1,btemp
 15006  012C40  0EFC               	movlw	-4
 15007  012C42  0060  F0D7  FFE3   	movff	btemp,plusw1
 15008                           
 15009                           ;stkvar	_a @ sp[(-4)+-8]
 15010                           ;stkvar	_b @ sp[(-4)+-4]
 15011  012C48  0EF4               	movlw	-12
 15012  012C4A  006F FF8C  F035    	movff	plusw1,btemp
 15013  012C50  0EF8               	movlw	-8
 15014  012C52  0060  F0D7  FFE3   	movff	btemp,plusw1
 15015                           
 15016                           ;stkvar	_grs @ sp[(-4)+0]
 15017                           ;stkvar	_a @ sp[(-4)+-8]
 15018  012C58  0EFC               	movlw	-4
 15019  012C5A  006F FF8C  F035    	movff	plusw1,btemp
 15020  012C60  0EF4               	movlw	-12
 15021  012C62  0060  F0D7  FFE3   	movff	btemp,plusw1
 15022                           
 15023                           ;stkvar	_b @ sp[(-4)+-4]
 15024  012C68  0EF9               	movlw	249
 15025  012C6A  24E1               	addwf	fsr1l,w,c
 15026  012C6C  6ED9               	movwf	fsr2l,c
 15027  012C6E  0EFF               	movlw	255
 15028  012C70  20E2               	addwfc	fsr1h,w,c
 15029  012C72  6EDA               	movwf	fsr2h,c
 15030  012C74  50DF               	movf	indf2,w,c
 15031  012C76  6E40               	movwf	(btemp+11)^0,c
 15032                           
 15033                           ;stkvar	_grs @ sp[(-4)+0]
 15034  012C78  0EFC               	movlw	-4
 15035  012C7A  0060  F103  FFE3   	movff	btemp+11,plusw1
 15036                           
 15037                           ;stkvar	_a @ sp[(-4)+-8]
 15038  012C80  0EF5               	movlw	245
 15039  012C82  24E1               	addwf	fsr1l,w,c
 15040  012C84  6ED9               	movwf	fsr2l,c
 15041  012C86  0EFF               	movlw	255
 15042  012C88  20E2               	addwfc	fsr1h,w,c
 15043  012C8A  6EDA               	movwf	fsr2h,c
 15044                           
 15045                           ;stkvar	_b @ sp[(-4)+-4]
 15046  012C8C  0EF9               	movlw	249
 15047  012C8E  24E1               	addwf	fsr1l,w,c
 15048  012C90  6EE9               	movwf	fsr0l,c
 15049  012C92  0EFF               	movlw	255
 15050  012C94  20E2               	addwfc	fsr1h,w,c
 15051  012C96  6EEA               	movwf	fsr0h,c
 15052  012C98  006F FF7F FFEF     	movff	indf2,indf0
 15053                           
 15054                           ;stkvar	_grs @ sp[(-4)+0]
 15055                           ;stkvar	_a @ sp[(-4)+-8]
 15056  012C9E  0EF5               	movlw	245
 15057  012CA0  24E1               	addwf	fsr1l,w,c
 15058  012CA2  6ED9               	movwf	fsr2l,c
 15059  012CA4  0EFF               	movlw	255
 15060  012CA6  20E2               	addwfc	fsr1h,w,c
 15061  012CA8  6EDA               	movwf	fsr2h,c
 15062  012CAA  0EFC               	movlw	-4
 15063  012CAC  006F FF8F FFDF     	movff	plusw1,indf2
 15064                           
 15065                           ;stkvar	_b @ sp[(-4)+-4]
 15066  012CB2  0EFA               	movlw	250
 15067  012CB4  24E1               	addwf	fsr1l,w,c
 15068  012CB6  6ED9               	movwf	fsr2l,c
 15069  012CB8  0EFF               	movlw	255
 15070  012CBA  20E2               	addwfc	fsr1h,w,c
 15071  012CBC  6EDA               	movwf	fsr2h,c
 15072  012CBE  50DF               	movf	indf2,w,c
 15073  012CC0  6E40               	movwf	(btemp+11)^0,c
 15074                           
 15075                           ;stkvar	_grs @ sp[(-4)+0]
 15076  012CC2  0EFC               	movlw	-4
 15077  012CC4  0060  F103  FFE3   	movff	btemp+11,plusw1
 15078                           
 15079                           ;stkvar	_a @ sp[(-4)+-8]
 15080  012CCA  0EF6               	movlw	246
 15081  012CCC  24E1               	addwf	fsr1l,w,c
 15082  012CCE  6ED9               	movwf	fsr2l,c
 15083  012CD0  0EFF               	movlw	255
 15084  012CD2  20E2               	addwfc	fsr1h,w,c
 15085  012CD4  6EDA               	movwf	fsr2h,c
 15086                           
 15087                           ;stkvar	_b @ sp[(-4)+-4]
 15088  012CD6  0EFA               	movlw	250
 15089  012CD8  24E1               	addwf	fsr1l,w,c
 15090  012CDA  6EE9               	movwf	fsr0l,c
 15091  012CDC  0EFF               	movlw	255
 15092  012CDE  20E2               	addwfc	fsr1h,w,c
 15093  012CE0  6EEA               	movwf	fsr0h,c
 15094  012CE2  006F FF7F FFEF     	movff	indf2,indf0
 15095                           
 15096                           ;stkvar	_grs @ sp[(-4)+0]
 15097                           ;stkvar	_a @ sp[(-4)+-8]
 15098  012CE8  0EF6               	movlw	246
 15099  012CEA  24E1               	addwf	fsr1l,w,c
 15100  012CEC  6ED9               	movwf	fsr2l,c
 15101  012CEE  0EFF               	movlw	255
 15102  012CF0  20E2               	addwfc	fsr1h,w,c
 15103  012CF2  6EDA               	movwf	fsr2h,c
 15104  012CF4  0EFC               	movlw	-4
 15105  012CF6  006F FF8F FFDF     	movff	plusw1,indf2
 15106                           
 15107                           ;stkvar	_b @ sp[(-4)+-4]
 15108  012CFC  0EFB               	movlw	251
 15109  012CFE  24E1               	addwf	fsr1l,w,c
 15110  012D00  6ED9               	movwf	fsr2l,c
 15111  012D02  0EFF               	movlw	255
 15112  012D04  20E2               	addwfc	fsr1h,w,c
 15113  012D06  6EDA               	movwf	fsr2h,c
 15114  012D08  50DF               	movf	indf2,w,c
 15115  012D0A  6E40               	movwf	(btemp+11)^0,c
 15116                           
 15117                           ;stkvar	_grs @ sp[(-4)+0]
 15118  012D0C  0EFC               	movlw	-4
 15119  012D0E  0060  F103  FFE3   	movff	btemp+11,plusw1
 15120                           
 15121                           ;stkvar	_a @ sp[(-4)+-8]
 15122  012D14  0EF7               	movlw	247
 15123  012D16  24E1               	addwf	fsr1l,w,c
 15124  012D18  6ED9               	movwf	fsr2l,c
 15125  012D1A  0EFF               	movlw	255
 15126  012D1C  20E2               	addwfc	fsr1h,w,c
 15127  012D1E  6EDA               	movwf	fsr2h,c
 15128                           
 15129                           ;stkvar	_b @ sp[(-4)+-4]
 15130  012D20  0EFB               	movlw	251
 15131  012D22  24E1               	addwf	fsr1l,w,c
 15132  012D24  6EE9               	movwf	fsr0l,c
 15133  012D26  0EFF               	movlw	255
 15134  012D28  20E2               	addwfc	fsr1h,w,c
 15135  012D2A  6EEA               	movwf	fsr0h,c
 15136  012D2C  006F FF7F FFEF     	movff	indf2,indf0
 15137                           
 15138                           ;stkvar	_grs @ sp[(-4)+0]
 15139                           ;stkvar	_a @ sp[(-4)+-8]
 15140  012D32  0EF7               	movlw	247
 15141  012D34  24E1               	addwf	fsr1l,w,c
 15142  012D36  6ED9               	movwf	fsr2l,c
 15143  012D38  0EFF               	movlw	255
 15144  012D3A  20E2               	addwfc	fsr1h,w,c
 15145  012D3C  6EDA               	movwf	fsr2h,c
 15146  012D3E  0EFC               	movlw	-4
 15147  012D40  006F FF8F FFDF     	movff	plusw1,indf2
 15148  012D46                     l6216:
 15149                           
 15150                           ;stkvar	_grs @ sp[(-4)+0]
 15151  012D46  0EFC               	movlw	-4
 15152  012D48  6AE3               	clrf	plusw1,c
 15153                           
 15154                           ;stkvar	_aexp @ sp[(-4)+2]
 15155  012D4A  0EFE               	movlw	-2
 15156  012D4C  50E3               	movf	plusw1,w,c
 15157  012D4E  6E3F               	movwf	(btemp+10)^0,c
 15158  012D50  6A40               	clrf	(btemp+11)^0,c
 15159                           
 15160                           ;stkvar	_bexp @ sp[(-4)+1]
 15161  012D52  0EFD               	movlw	-3
 15162  012D54  50E3               	movf	plusw1,w,c
 15163  012D56  5E3F               	subwf	(btemp+10)^0,f,c
 15164  012D58  0E00               	movlw	0
 15165  012D5A  5A40               	subwfb	(btemp+11)^0,f,c
 15166  012D5C  BE40               	btfsc	(btemp+11)^0,7,c
 15167  012D5E  D062               	goto	l6240
 15168  012D60  5040               	movf	(btemp+11)^0,w,c
 15169  012D62  E104               	bnz	u4770
 15170  012D64  0E1A               	movlw	26
 15171  012D66  5C3F               	subwf	(btemp+10)^0,w,c
 15172  012D68  A0D8               	btfss	status,0,c
 15173  012D6A  D05C               	goto	l6240
 15174  012D6C                     u4770:
 15175                           
 15176                           ;stkvar	_b @ sp[(-4)+-4]
 15177  012D6C  0EF8               	movlw	-8
 15178  012D6E  50E3               	movf	plusw1,w,c
 15179  012D70  E10A               	bnz	u4781
 15180  012D72  0EF9               	movlw	-7
 15181  012D74  50E3               	movf	plusw1,w,c
 15182  012D76  E107               	bnz	u4781
 15183  012D78  0EFA               	movlw	-6
 15184  012D7A  50E3               	movf	plusw1,w,c
 15185  012D7C  E104               	bnz	u4781
 15186  012D7E  0EFB               	movlw	-5
 15187  012D80  50E3               	movf	plusw1,w,c
 15188  012D82  B4D8               	btfsc	status,2,c
 15189  012D84  D003               	goto	u4780
 15190  012D86                     u4781:
 15191  012D86  6A40               	clrf	(btemp+11)^0,c
 15192  012D88  2A40               	incf	(btemp+11)^0,f,c
 15193  012D8A  D001               	goto	u4798
 15194  012D8C                     u4780:
 15195  012D8C  6A40               	clrf	(btemp+11)^0,c
 15196  012D8E                     u4798:
 15197                           
 15198                           ;stkvar	_grs @ sp[(-4)+0]
 15199  012D8E  0EFC               	movlw	-4
 15200  012D90  0060  F103  FFE3   	movff	btemp+11,plusw1
 15201                           
 15202                           ;stkvar	_b @ sp[(-4)+-4]
 15203  012D96  0EF8               	movlw	-8
 15204  012D98  6AE3               	clrf	plusw1,c
 15205  012D9A  0EF9               	movlw	-7
 15206  012D9C  6AE3               	clrf	plusw1,c
 15207  012D9E  0EFA               	movlw	-6
 15208  012DA0  6AE3               	clrf	plusw1,c
 15209  012DA2  0EFB               	movlw	-5
 15210  012DA4  6AE3               	clrf	plusw1,c
 15211                           
 15212                           ;stkvar	_aexp @ sp[(-4)+2]
 15213                           ;stkvar	_bexp @ sp[(-4)+1]
 15214  012DA6  0EFE               	movlw	-2
 15215  012DA8  006F FF8C  F035    	movff	plusw1,btemp
 15216  012DAE  0EFD               	movlw	-3
 15217  012DB0  0060  F0D7  FFE3   	movff	btemp,plusw1
 15218  012DB6  D042               	goto	u4830
 15219  012DB8                     l6226:
 15220                           
 15221                           ;stkvar	_grs @ sp[(-4)+0]
 15222  012DB8  0EFC               	movlw	-4
 15223  012DBA  A0E3               	btfss	plusw1,0,c
 15224  012DBC  D00D               	goto	l6230
 15225                           
 15226                           ;stkvar	_grs @ sp[(-4)+0]
 15227  012DBE  0EFC               	movlw	-4
 15228  012DC0  006F FF8C  F040    	movff	plusw1,btemp+11
 15229  012DC6  90D8               	bcf	status,0,c
 15230  012DC8  3240               	rrcf	(btemp+11)^0,f,c
 15231  012DCA  0E01               	movlw	1
 15232  012DCC  1240               	iorwf	(btemp+11)^0,f,c
 15233                           
 15234                           ;stkvar	_grs @ sp[(-4)+0]
 15235  012DCE  0EFC               	movlw	-4
 15236  012DD0  0060  F103  FFE3   	movff	btemp+11,plusw1
 15237  012DD6  D009               	goto	l6232
 15238  012DD8                     l6230:
 15239                           
 15240                           ;stkvar	_grs @ sp[(-4)+0]
 15241  012DD8  50E1               	movf	fsr1l,w,c
 15242  012DDA  0FFC               	addlw	-4
 15243  012DDC  6ED9               	movwf	fsr2l,c
 15244  012DDE  50E2               	movf	fsr1h,w,c
 15245  012DE0  6EDA               	movwf	fsr2h,c
 15246  012DE2  0EFF               	movlw	255
 15247  012DE4  22DA               	addwfc	fsr2h,f,c
 15248  012DE6  90D8               	bcf	status,0,c
 15249  012DE8  32DF               	rrcf	indf2,f,c
 15250  012DEA                     l6232:
 15251                           
 15252                           ;stkvar	_b @ sp[(-4)+-4]
 15253  012DEA  0EF8               	movlw	-8
 15254  012DEC  A0E3               	btfss	plusw1,0,c
 15255  012DEE  D002               	goto	l6236
 15256                           
 15257                           ;stkvar	_grs @ sp[(-4)+0]
 15258  012DF0  0EFC               	movlw	-4
 15259  012DF2  8EE3               	bsf	plusw1,7,c
 15260  012DF4                     l6236:
 15261  012DF4  0E01               	movlw	1
 15262  012DF6  6E40               	movwf	(btemp+11)^0,c
 15263                           
 15264                           ;stkvar	_b @ sp[(-4)+-4]
 15265  012DF8  50E1               	movf	fsr1l,w,c
 15266  012DFA  0FF8               	addlw	-8
 15267  012DFC  6ED9               	movwf	fsr2l,c
 15268  012DFE  50E2               	movf	fsr1h,w,c
 15269  012E00  6EDA               	movwf	fsr2h,c
 15270  012E02  0EFF               	movlw	255
 15271  012E04  22DA               	addwfc	fsr2h,f,c
 15272  012E06  2840               	incf	(btemp+11)^0,w,c
 15273  012E08  52DE               	movf	postinc2,f,c
 15274  012E0A  D008               	goto	u4820
 15275  012E0C                     u4825:
 15276  012E0C  52DE               	movf	postinc2,f,c
 15277  012E0E  90D8               	bcf	status,0,c
 15278  012E10  BEDC               	btfsc	preinc2,7,c
 15279  012E12  80D8               	bsf	status,0,c
 15280  012E14  32DD               	rrcf	postdec2,f,c
 15281  012E16  32DD               	rrcf	postdec2,f,c
 15282  012E18  32DD               	rrcf	postdec2,f,c
 15283  012E1A  32DE               	rrcf	postinc2,f,c
 15284  012E1C                     u4820:
 15285  012E1C  2EE8               	decfsz	wreg,f,c
 15286  012E1E  D7F6               	goto	u4825
 15287                           
 15288                           ;stkvar	_bexp @ sp[(-4)+1]
 15289  012E20  0EFD               	movlw	-3
 15290  012E22  2AE3               	incf	plusw1,f,c
 15291  012E24                     l6240:
 15292                           
 15293                           ;stkvar	_aexp @ sp[(-4)+2]
 15294                           ;stkvar	_bexp @ sp[(-4)+1]
 15295  012E24  50E1               	movf	fsr1l,w,c
 15296  012E26  0FFD               	addlw	-3
 15297  012E28  6ED9               	movwf	fsr2l,c
 15298  012E2A  50E2               	movf	fsr1h,w,c
 15299  012E2C  6EDA               	movwf	fsr2h,c
 15300  012E2E  0EFF               	movlw	255
 15301  012E30  22DA               	addwfc	fsr2h,f,c
 15302  012E32  0EFE               	movlw	-2
 15303  012E34  50E3               	movf	plusw1,w,c
 15304  012E36  5CDE               	subwf	postinc2,w,c
 15305  012E38  A0D8               	btfss	status,0,c
 15306  012E3A  D7BE               	goto	l6226
 15307  012E3C                     u4830:
 15308                           
 15309                           ;stkvar	_signs @ sp[(-4)+3]
 15310  012E3C  0EFF               	movlw	-1
 15311  012E3E  BCE3               	btfsc	plusw1,6,c
 15312  012E40  D066               	goto	l6268
 15313                           
 15314                           ;stkvar	_bexp @ sp[(-4)+1]
 15315  012E42  0EFD               	movlw	-3
 15316  012E44  50E3               	movf	plusw1,w,c
 15317  012E46  B4D8               	btfsc	status,2,c
 15318  012E48  D0F2               	goto	u4930
 15319                           
 15320                           ;stkvar	_a @ sp[(-4)+-8]
 15321                           ;stkvar	_b @ sp[(-4)+-4]
 15322  012E4A  0EF8               	movlw	-8
 15323  012E4C  50E3               	movf	plusw1,w,c
 15324  012E4E  6E35               	movwf	btemp^0,c
 15325  012E50  0EF4               	movlw	-12
 15326  012E52  50E3               	movf	plusw1,w,c
 15327  012E54  2635               	addwf	btemp^0,f,c
 15328  012E56  0EF8               	movlw	-8
 15329  012E58  0060  F0D7  FFE3   	movff	btemp,plusw1
 15330  012E5E  0EF9               	movlw	-7
 15331  012E60  50E3               	movf	plusw1,w,c
 15332  012E62  6E35               	movwf	btemp^0,c
 15333  012E64  0EF5               	movlw	-11
 15334  012E66  50E3               	movf	plusw1,w,c
 15335  012E68  2235               	addwfc	btemp^0,f,c
 15336  012E6A  0EF9               	movlw	-7
 15337  012E6C  0060  F0D7  FFE3   	movff	btemp,plusw1
 15338  012E72  0EFA               	movlw	-6
 15339  012E74  50E3               	movf	plusw1,w,c
 15340  012E76  6E35               	movwf	btemp^0,c
 15341  012E78  0EF6               	movlw	-10
 15342  012E7A  50E3               	movf	plusw1,w,c
 15343  012E7C  2235               	addwfc	btemp^0,f,c
 15344  012E7E  0EFA               	movlw	-6
 15345  012E80  0060  F0D7  FFE3   	movff	btemp,plusw1
 15346  012E86  0EFB               	movlw	-5
 15347  012E88  50E3               	movf	plusw1,w,c
 15348  012E8A  6E35               	movwf	btemp^0,c
 15349  012E8C  0EF7               	movlw	-9
 15350  012E8E  50E3               	movf	plusw1,w,c
 15351  012E90  2235               	addwfc	btemp^0,f,c
 15352  012E92  0EFB               	movlw	-5
 15353  012E94  0060  F0D7  FFE3   	movff	btemp,plusw1
 15354                           
 15355                           ;stkvar	_b @ sp[(-4)+-4]
 15356  012E9A  0EFB               	movlw	-5
 15357  012E9C  A0E3               	btfss	plusw1,0,c
 15358  012E9E  D101               	goto	u4970
 15359                           
 15360                           ;stkvar	_grs @ sp[(-4)+0]
 15361  012EA0  0EFC               	movlw	-4
 15362  012EA2  A0E3               	btfss	plusw1,0,c
 15363  012EA4  D00D               	goto	l6258
 15364                           
 15365                           ;stkvar	_grs @ sp[(-4)+0]
 15366  012EA6  0EFC               	movlw	-4
 15367  012EA8  006F FF8C  F040    	movff	plusw1,btemp+11
 15368  012EAE  90D8               	bcf	status,0,c
 15369  012EB0  3240               	rrcf	(btemp+11)^0,f,c
 15370  012EB2  0E01               	movlw	1
 15371  012EB4  1240               	iorwf	(btemp+11)^0,f,c
 15372                           
 15373                           ;stkvar	_grs @ sp[(-4)+0]
 15374  012EB6  0EFC               	movlw	-4
 15375  012EB8  0060  F103  FFE3   	movff	btemp+11,plusw1
 15376  012EBE  D009               	goto	l6260
 15377  012EC0                     l6258:
 15378                           
 15379                           ;stkvar	_grs @ sp[(-4)+0]
 15380  012EC0  50E1               	movf	fsr1l,w,c
 15381  012EC2  0FFC               	addlw	-4
 15382  012EC4  6ED9               	movwf	fsr2l,c
 15383  012EC6  50E2               	movf	fsr1h,w,c
 15384  012EC8  6EDA               	movwf	fsr2h,c
 15385  012ECA  0EFF               	movlw	255
 15386  012ECC  22DA               	addwfc	fsr2h,f,c
 15387  012ECE  90D8               	bcf	status,0,c
 15388  012ED0  32DF               	rrcf	indf2,f,c
 15389  012ED2                     l6260:
 15390                           
 15391                           ;stkvar	_b @ sp[(-4)+-4]
 15392  012ED2  0EF8               	movlw	-8
 15393  012ED4  A0E3               	btfss	plusw1,0,c
 15394  012ED6  D002               	goto	l6264
 15395                           
 15396                           ;stkvar	_grs @ sp[(-4)+0]
 15397  012ED8  0EFC               	movlw	-4
 15398  012EDA  8EE3               	bsf	plusw1,7,c
 15399  012EDC                     l6264:
 15400  012EDC  0E01               	movlw	1
 15401  012EDE  6E40               	movwf	(btemp+11)^0,c
 15402                           
 15403                           ;stkvar	_b @ sp[(-4)+-4]
 15404  012EE0  50E1               	movf	fsr1l,w,c
 15405  012EE2  0FF8               	addlw	-8
 15406  012EE4  6ED9               	movwf	fsr2l,c
 15407  012EE6  50E2               	movf	fsr1h,w,c
 15408  012EE8  6EDA               	movwf	fsr2h,c
 15409  012EEA  0EFF               	movlw	255
 15410  012EEC  22DA               	addwfc	fsr2h,f,c
 15411  012EEE  2840               	incf	(btemp+11)^0,w,c
 15412  012EF0  52DE               	movf	postinc2,f,c
 15413  012EF2  D008               	goto	u4890
 15414  012EF4                     u4895:
 15415  012EF4  52DE               	movf	postinc2,f,c
 15416  012EF6  90D8               	bcf	status,0,c
 15417  012EF8  BEDC               	btfsc	preinc2,7,c
 15418  012EFA  80D8               	bsf	status,0,c
 15419  012EFC  32DD               	rrcf	postdec2,f,c
 15420  012EFE  32DD               	rrcf	postdec2,f,c
 15421  012F00  32DD               	rrcf	postdec2,f,c
 15422  012F02  32DE               	rrcf	postinc2,f,c
 15423  012F04                     u4890:
 15424  012F04  2EE8               	decfsz	wreg,f,c
 15425  012F06  D7F6               	goto	u4895
 15426                           
 15427                           ;stkvar	_bexp @ sp[(-4)+1]
 15428  012F08  0EFD               	movlw	-3
 15429  012F0A  2AE3               	incf	plusw1,f,c
 15430  012F0C  D0CA               	goto	u4970
 15431  012F0E                     l6268:
 15432                           
 15433                           ;stkvar	_a @ sp[(-4)+-8]
 15434                           ;stkvar	_b @ sp[(-4)+-4]
 15435  012F0E  50E1               	movf	fsr1l,w,c
 15436  012F10  0FF8               	addlw	-8
 15437  012F12  6ED9               	movwf	fsr2l,c
 15438  012F14  50E2               	movf	fsr1h,w,c
 15439  012F16  6EDA               	movwf	fsr2h,c
 15440  012F18  0EFF               	movlw	255
 15441  012F1A  22DA               	addwfc	fsr2h,f,c
 15442  012F1C  0EF4               	movlw	-12
 15443  012F1E  50E3               	movf	plusw1,w,c
 15444  012F20  5CDE               	subwf	postinc2,w,c
 15445  012F22  0EF5               	movlw	-11
 15446  012F24  50E3               	movf	plusw1,w,c
 15447  012F26  58DE               	subwfb	postinc2,w,c
 15448  012F28  0EF6               	movlw	-10
 15449  012F2A  50E3               	movf	plusw1,w,c
 15450  012F2C  58DE               	subwfb	postinc2,w,c
 15451  012F2E  50DE               	movf	postinc2,w,c
 15452  012F30  0A80               	xorlw	128
 15453  012F32  6E35               	movwf	btemp^0,c
 15454  012F34  0EF7               	movlw	-9
 15455  012F36  50E3               	movf	plusw1,w,c
 15456  012F38  0A80               	xorlw	128
 15457  012F3A  5835               	subwfb	btemp^0,w,c
 15458  012F3C  B0D8               	btfsc	status,0,c
 15459  012F3E  D053               	goto	l6280
 15460                           
 15461                           ;stkvar	_b @ sp[(-4)+-4]
 15462                           ;stkvar	_a @ sp[(-4)+-8]
 15463  012F40  0EF4               	movlw	-12
 15464  012F42  006F FF8C  F03D    	movff	plusw1,btemp+8
 15465  012F48  0EF5               	movlw	-11
 15466  012F4A  006F FF8C  F03E    	movff	plusw1,btemp+9
 15467  012F50  0EF6               	movlw	-10
 15468  012F52  006F FF8C  F03F    	movff	plusw1,btemp+10
 15469  012F58  0EF7               	movlw	-9
 15470  012F5A  006F FF8C  F040    	movff	plusw1,btemp+11
 15471  012F60  0EF8               	movlw	-8
 15472  012F62  50E3               	movf	plusw1,w,c
 15473  012F64  5E3D               	subwf	(btemp+8)^0,f,c
 15474  012F66  0EF9               	movlw	-7
 15475  012F68  50E3               	movf	plusw1,w,c
 15476  012F6A  5A3E               	subwfb	(btemp+9)^0,f,c
 15477  012F6C  0EFA               	movlw	-6
 15478  012F6E  50E3               	movf	plusw1,w,c
 15479  012F70  5A3F               	subwfb	(btemp+10)^0,f,c
 15480  012F72  0EFB               	movlw	-5
 15481  012F74  50E3               	movf	plusw1,w,c
 15482  012F76  5A40               	subwfb	(btemp+11)^0,f,c
 15483  012F78  0EFF               	movlw	255
 15484  012F7A  243D               	addwf	(btemp+8)^0,w,c
 15485  012F7C  6E39               	movwf	(btemp+4)^0,c
 15486  012F7E  0EFF               	movlw	255
 15487  012F80  203E               	addwfc	(btemp+9)^0,w,c
 15488  012F82  6E3A               	movwf	(btemp+5)^0,c
 15489  012F84  0EFF               	movlw	255
 15490  012F86  203F               	addwfc	(btemp+10)^0,w,c
 15491  012F88  6E3B               	movwf	(btemp+6)^0,c
 15492  012F8A  0EFF               	movlw	255
 15493  012F8C  2040               	addwfc	(btemp+11)^0,w,c
 15494  012F8E  6E3C               	movwf	(btemp+7)^0,c
 15495                           
 15496                           ;stkvar	_b @ sp[(-4)+-4]
 15497  012F90  0EF8               	movlw	-8
 15498  012F92  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 15499  012F98  0EF9               	movlw	-7
 15500  012F9A  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 15501  012FA0  0EFA               	movlw	-6
 15502  012FA2  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 15503  012FA8  0EFB               	movlw	-5
 15504  012FAA  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 15505                           
 15506                           ;stkvar	_signs @ sp[(-4)+3]
 15507  012FB0  0EFF               	movlw	-1
 15508  012FB2  7EE3               	btg	plusw1,7,c
 15509                           
 15510                           ;stkvar	_grs @ sp[(-4)+0]
 15511  012FB4  0EFC               	movlw	-4
 15512  012FB6  50E3               	movf	plusw1,w,c
 15513  012FB8  0800               	sublw	0
 15514  012FBA  6E40               	movwf	(btemp+11)^0,c
 15515                           
 15516                           ;stkvar	_grs @ sp[(-4)+0]
 15517  012FBC  0EFC               	movlw	-4
 15518  012FBE  0060  F103  FFE3   	movff	btemp+11,plusw1
 15519                           
 15520                           ;stkvar	_grs @ sp[(-4)+0]
 15521  012FC4  0EFC               	movlw	-4
 15522  012FC6  50E3               	movf	plusw1,w,c
 15523  012FC8  A4D8               	btfss	status,2,c
 15524  012FCA  D020               	goto	l6282
 15525                           
 15526                           ;stkvar	_b @ sp[(-4)+-4]
 15527  012FCC  50E1               	movf	fsr1l,w,c
 15528  012FCE  0FF8               	addlw	-8
 15529  012FD0  6ED9               	movwf	fsr2l,c
 15530  012FD2  50E2               	movf	fsr1h,w,c
 15531  012FD4  6EDA               	movwf	fsr2h,c
 15532  012FD6  0EFF               	movlw	255
 15533  012FD8  22DA               	addwfc	fsr2h,f,c
 15534  012FDA  2ADE               	incf	postinc2,f,c
 15535  012FDC  0E00               	movlw	0
 15536  012FDE  22DE               	addwfc	postinc2,f,c
 15537  012FE0  22DE               	addwfc	postinc2,f,c
 15538  012FE2  22DE               	addwfc	postinc2,f,c
 15539  012FE4  D013               	goto	l6282
 15540  012FE6                     l6280:
 15541                           
 15542                           ;stkvar	_a @ sp[(-4)+-8]
 15543                           ;stkvar	_b @ sp[(-4)+-4]
 15544  012FE6  50E1               	movf	fsr1l,w,c
 15545  012FE8  0FF8               	addlw	-8
 15546  012FEA  6ED9               	movwf	fsr2l,c
 15547  012FEC  50E2               	movf	fsr1h,w,c
 15548  012FEE  6EDA               	movwf	fsr2h,c
 15549  012FF0  0EFF               	movlw	255
 15550  012FF2  22DA               	addwfc	fsr2h,f,c
 15551  012FF4  0EF4               	movlw	-12
 15552  012FF6  50E3               	movf	plusw1,w,c
 15553  012FF8  5EDE               	subwf	postinc2,f,c
 15554  012FFA  0EF5               	movlw	-11
 15555  012FFC  50E3               	movf	plusw1,w,c
 15556  012FFE  5ADE               	subwfb	postinc2,f,c
 15557  013000  0EF6               	movlw	-10
 15558  013002  50E3               	movf	plusw1,w,c
 15559  013004  5ADE               	subwfb	postinc2,f,c
 15560  013006  0EF7               	movlw	-9
 15561  013008  50E3               	movf	plusw1,w,c
 15562  01300A  5ADE               	subwfb	postinc2,f,c
 15563  01300C                     l6282:
 15564                           
 15565                           ;stkvar	_b @ sp[(-4)+-4]
 15566  01300C  0EF8               	movlw	-8
 15567  01300E  50E3               	movf	plusw1,w,c
 15568  013010  E145               	bnz	l6304
 15569  013012  0EF9               	movlw	-7
 15570  013014  50E3               	movf	plusw1,w,c
 15571  013016  E142               	bnz	l6304
 15572  013018  0EFA               	movlw	-6
 15573  01301A  50E3               	movf	plusw1,w,c
 15574  01301C  E13F               	bnz	l6304
 15575  01301E  0EFB               	movlw	-5
 15576  013020  50E3               	movf	plusw1,w,c
 15577  013022  A4D8               	btfss	status,2,c
 15578  013024  D03B               	goto	l6304
 15579                           
 15580                           ;stkvar	_grs @ sp[(-4)+0]
 15581  013026  0EFC               	movlw	-4
 15582  013028  50E3               	movf	plusw1,w,c
 15583  01302A  A4D8               	btfss	status,2,c
 15584  01302C  D037               	goto	l6304
 15585  01302E                     u4930:
 15586  01302E  0E00               	movlw	0
 15587  013030  6E35               	movwf	btemp^0,c
 15588  013032  0E00               	movlw	0
 15589  013034  6E36               	movwf	(btemp+1)^0,c
 15590  013036  0E00               	movlw	0
 15591  013038  6E37               	movwf	(btemp+2)^0,c
 15592  01303A  0E00               	movlw	0
 15593  01303C  6E38               	movwf	(btemp+3)^0,c
 15594  01303E  D0C6               	goto	l2548
 15595  013040                     l6290:
 15596                           
 15597                           ;stkvar	_b @ sp[(-4)+-4]
 15598  013040  90D8               	bcf	status,0,c
 15599  013042  0EF8               	movlw	-8
 15600  013044  36E3               	rlcf	plusw1,f,c
 15601  013046  0EF9               	movlw	-7
 15602  013048  36E3               	rlcf	plusw1,f,c
 15603  01304A  0EFA               	movlw	-6
 15604  01304C  36E3               	rlcf	plusw1,f,c
 15605  01304E  0EFB               	movlw	-5
 15606  013050  36E3               	rlcf	plusw1,f,c
 15607                           
 15608                           ;stkvar	_grs @ sp[(-4)+0]
 15609  013052  0EFC               	movlw	-4
 15610  013054  AEE3               	btfss	plusw1,7,c
 15611  013056  D002               	goto	l2560
 15612                           
 15613                           ;stkvar	_b @ sp[(-4)+-4]
 15614  013058  0EF8               	movlw	-8
 15615  01305A  80E3               	bsf	plusw1,0,c
 15616  01305C                     l2560:
 15617                           
 15618                           ;stkvar	_grs @ sp[(-4)+0]
 15619  01305C  0EFC               	movlw	-4
 15620  01305E  A0E3               	btfss	plusw1,0,c
 15621  013060  D00E               	goto	l6298
 15622                           
 15623                           ;stkvar	_grs @ sp[(-4)+0]
 15624  013062  0EFC               	movlw	-4
 15625  013064  006F FF8C  F040    	movff	plusw1,btemp+11
 15626  01306A  90D8               	bcf	status,0,c
 15627  01306C  3440               	rlcf	(btemp+11)^0,w,c
 15628  01306E  6E3F               	movwf	(btemp+10)^0,c
 15629  013070  0E01               	movlw	1
 15630  013072  123F               	iorwf	(btemp+10)^0,f,c
 15631                           
 15632                           ;stkvar	_grs @ sp[(-4)+0]
 15633  013074  0EFC               	movlw	-4
 15634  013076  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15635  01307C  D009               	goto	l6300
 15636  01307E                     l6298:
 15637                           
 15638                           ;stkvar	_grs @ sp[(-4)+0]
 15639  01307E  50E1               	movf	fsr1l,w,c
 15640  013080  0FFC               	addlw	-4
 15641  013082  6ED9               	movwf	fsr2l,c
 15642  013084  50E2               	movf	fsr1h,w,c
 15643  013086  6EDA               	movwf	fsr2h,c
 15644  013088  0EFF               	movlw	255
 15645  01308A  22DA               	addwfc	fsr2h,f,c
 15646  01308C  90D8               	bcf	status,0,c
 15647  01308E  36DF               	rlcf	indf2,f,c
 15648  013090                     l6300:
 15649                           
 15650                           ;stkvar	_bexp @ sp[(-4)+1]
 15651  013090  0EFD               	movlw	-3
 15652  013092  50E3               	movf	plusw1,w,c
 15653  013094  B4D8               	btfsc	status,2,c
 15654  013096  D002               	goto	l6304
 15655                           
 15656                           ;stkvar	_bexp @ sp[(-4)+1]
 15657  013098  0EFD               	movlw	-3
 15658  01309A  06E3               	decf	plusw1,f,c
 15659  01309C                     l6304:
 15660                           
 15661                           ;stkvar	_b @ sp[(-4)+-4]
 15662  01309C  0EFA               	movlw	-6
 15663  01309E  AEE3               	btfss	plusw1,7,c
 15664  0130A0  D7CF               	goto	l6290
 15665  0130A2                     u4970:
 15666                           
 15667                           ;stkvar	_aexp @ sp[(-4)+2]
 15668  0130A2  0EFE               	movlw	-2
 15669  0130A4  6AE3               	clrf	plusw1,c
 15670                           
 15671                           ;stkvar	_grs @ sp[(-4)+0]
 15672  0130A6  0EFC               	movlw	-4
 15673  0130A8  AEE3               	btfss	plusw1,7,c
 15674  0130AA  D00F               	goto	l6318
 15675                           
 15676                           ;stkvar	_grs @ sp[(-4)+0]
 15677  0130AC  0EFC               	movlw	-4
 15678  0130AE  006F FF8C  F040    	movff	plusw1,btemp+11
 15679  0130B4  0E7F               	movlw	127
 15680  0130B6  1640               	andwf	(btemp+11)^0,f,c
 15681  0130B8  B4D8               	btfsc	status,2,c
 15682  0130BA  D004               	goto	l6314
 15683  0130BC                     u4990:
 15684                           
 15685                           ;stkvar	_aexp @ sp[(-4)+2]
 15686  0130BC  0EFE               	movlw	-2
 15687  0130BE  6AE3               	clrf	plusw1,c
 15688  0130C0  2AE3               	incf	plusw1,f,c
 15689  0130C2  D003               	goto	l6318
 15690  0130C4                     l6314:
 15691                           
 15692                           ;stkvar	_b @ sp[(-4)+-4]
 15693  0130C4  0EF8               	movlw	-8
 15694  0130C6  B0E3               	btfsc	plusw1,0,c
 15695  0130C8  D7F9               	goto	u4990
 15696  0130CA                     l6318:
 15697                           
 15698                           ;stkvar	_aexp @ sp[(-4)+2]
 15699  0130CA  0EFE               	movlw	-2
 15700  0130CC  50E3               	movf	plusw1,w,c
 15701  0130CE  B4D8               	btfsc	status,2,c
 15702  0130D0  D02B               	goto	l6330
 15703                           
 15704                           ;stkvar	_b @ sp[(-4)+-4]
 15705  0130D2  50E1               	movf	fsr1l,w,c
 15706  0130D4  0FF8               	addlw	-8
 15707  0130D6  6ED9               	movwf	fsr2l,c
 15708  0130D8  50E2               	movf	fsr1h,w,c
 15709  0130DA  6EDA               	movwf	fsr2h,c
 15710  0130DC  0EFF               	movlw	255
 15711  0130DE  22DA               	addwfc	fsr2h,f,c
 15712  0130E0  2ADE               	incf	postinc2,f,c
 15713  0130E2  0E00               	movlw	0
 15714  0130E4  22DE               	addwfc	postinc2,f,c
 15715  0130E6  22DE               	addwfc	postinc2,f,c
 15716  0130E8  22DE               	addwfc	postinc2,f,c
 15717                           
 15718                           ;stkvar	_b @ sp[(-4)+-4]
 15719  0130EA  0EFB               	movlw	-5
 15720  0130EC  A0E3               	btfss	plusw1,0,c
 15721  0130EE  D01C               	goto	l6330
 15722  0130F0  0E01               	movlw	1
 15723  0130F2  6E40               	movwf	(btemp+11)^0,c
 15724                           
 15725                           ;stkvar	_b @ sp[(-4)+-4]
 15726  0130F4  50E1               	movf	fsr1l,w,c
 15727  0130F6  0FF8               	addlw	-8
 15728  0130F8  6ED9               	movwf	fsr2l,c
 15729  0130FA  50E2               	movf	fsr1h,w,c
 15730  0130FC  6EDA               	movwf	fsr2h,c
 15731  0130FE  0EFF               	movlw	255
 15732  013100  22DA               	addwfc	fsr2h,f,c
 15733  013102  2840               	incf	(btemp+11)^0,w,c
 15734  013104  52DE               	movf	postinc2,f,c
 15735  013106  D008               	goto	u5030
 15736  013108                     u5035:
 15737  013108  52DE               	movf	postinc2,f,c
 15738  01310A  90D8               	bcf	status,0,c
 15739  01310C  BEDC               	btfsc	preinc2,7,c
 15740  01310E  80D8               	bsf	status,0,c
 15741  013110  32DD               	rrcf	postdec2,f,c
 15742  013112  32DD               	rrcf	postdec2,f,c
 15743  013114  32DD               	rrcf	postdec2,f,c
 15744  013116  32DE               	rrcf	postinc2,f,c
 15745  013118                     u5030:
 15746  013118  2EE8               	decfsz	wreg,f,c
 15747  01311A  D7F6               	goto	u5035
 15748                           
 15749                           ;stkvar	_bexp @ sp[(-4)+1]
 15750  01311C  0EFD               	movlw	-3
 15751  01311E  28E3               	incf	plusw1,w,c
 15752  013120  B4D8               	btfsc	status,2,c
 15753  013122  D002               	goto	l6330
 15754                           
 15755                           ;stkvar	_bexp @ sp[(-4)+1]
 15756  013124  0EFD               	movlw	-3
 15757  013126  2AE3               	incf	plusw1,f,c
 15758  013128                     l6330:
 15759                           
 15760                           ;stkvar	_bexp @ sp[(-4)+1]
 15761  013128  0EFD               	movlw	-3
 15762  01312A  28E3               	incf	plusw1,w,c
 15763  01312C  B4D8               	btfsc	status,2,c
 15764  01312E  D004               	goto	u5060
 15765                           
 15766                           ;stkvar	_bexp @ sp[(-4)+1]
 15767  013130  0EFD               	movlw	-3
 15768  013132  50E3               	movf	plusw1,w,c
 15769  013134  A4D8               	btfss	status,2,c
 15770  013136  D00E               	goto	l6340
 15771  013138                     u5060:
 15772                           
 15773                           ;stkvar	_b @ sp[(-4)+-4]
 15774  013138  0EF8               	movlw	-8
 15775  01313A  6AE3               	clrf	plusw1,c
 15776  01313C  0EF9               	movlw	-7
 15777  01313E  6AE3               	clrf	plusw1,c
 15778  013140  0EFA               	movlw	-6
 15779  013142  6AE3               	clrf	plusw1,c
 15780  013144  0EFB               	movlw	-5
 15781  013146  6AE3               	clrf	plusw1,c
 15782                           
 15783                           ;stkvar	_bexp @ sp[(-4)+1]
 15784  013148  0EFD               	movlw	-3
 15785  01314A  50E3               	movf	plusw1,w,c
 15786  01314C  A4D8               	btfss	status,2,c
 15787  01314E  D002               	goto	l6340
 15788                           
 15789                           ;stkvar	_signs @ sp[(-4)+3]
 15790  013150  0EFF               	movlw	-1
 15791  013152  6AE3               	clrf	plusw1,c
 15792  013154                     l6340:
 15793                           
 15794                           ;stkvar	_bexp @ sp[(-4)+1]
 15795  013154  0EFD               	movlw	-3
 15796  013156  A0E3               	btfss	plusw1,0,c
 15797  013158  D009               	goto	l6344
 15798                           
 15799                           ;stkvar	_b @ sp[(-4)+-4]
 15800  01315A  0EFA               	movlw	250
 15801  01315C  24E1               	addwf	fsr1l,w,c
 15802  01315E  6ED9               	movwf	fsr2l,c
 15803  013160  0EFF               	movlw	255
 15804  013162  20E2               	addwfc	fsr1h,w,c
 15805  013164  6EDA               	movwf	fsr2h,c
 15806  013166  0E00               	movlw	0
 15807  013168  8EDB               	bsf	plusw2,7,c
 15808  01316A  D008               	goto	l6346
 15809  01316C                     l6344:
 15810                           
 15811                           ;stkvar	_b @ sp[(-4)+-4]
 15812  01316C  0EFA               	movlw	250
 15813  01316E  24E1               	addwf	fsr1l,w,c
 15814  013170  6ED9               	movwf	fsr2l,c
 15815  013172  0EFF               	movlw	255
 15816  013174  20E2               	addwfc	fsr1h,w,c
 15817  013176  6EDA               	movwf	fsr2h,c
 15818  013178  0E7F               	movlw	127
 15819  01317A  16DF               	andwf	indf2,f,c
 15820  01317C                     l6346:
 15821                           
 15822                           ;stkvar	_b @ sp[(-4)+-4]
 15823  01317C  0EFB               	movlw	251
 15824  01317E  24E1               	addwf	fsr1l,w,c
 15825  013180  6ED9               	movwf	fsr2l,c
 15826  013182  0EFF               	movlw	255
 15827  013184  20E2               	addwfc	fsr1h,w,c
 15828  013186  6EDA               	movwf	fsr2h,c
 15829                           
 15830                           ;stkvar	_bexp @ sp[(-4)+1]
 15831  013188  0EFD               	movlw	-3
 15832  01318A  006F FF8C  F040    	movff	plusw1,btemp+11
 15833  013190  90D8               	bcf	status,0,c
 15834  013192  3040               	rrcf	(btemp+11)^0,w,c
 15835  013194  6EDF               	movwf	indf2,c
 15836                           
 15837                           ;stkvar	_signs @ sp[(-4)+3]
 15838  013196  0EFF               	movlw	-1
 15839  013198  AEE3               	btfss	plusw1,7,c
 15840  01319A  D008               	goto	l6352
 15841                           
 15842                           ;stkvar	_b @ sp[(-4)+-4]
 15843  01319C  0EFB               	movlw	251
 15844  01319E  24E1               	addwf	fsr1l,w,c
 15845  0131A0  6ED9               	movwf	fsr2l,c
 15846  0131A2  0EFF               	movlw	255
 15847  0131A4  20E2               	addwfc	fsr1h,w,c
 15848  0131A6  6EDA               	movwf	fsr2h,c
 15849  0131A8  0E00               	movlw	0
 15850  0131AA  8EDB               	bsf	plusw2,7,c
 15851  0131AC                     l6352:
 15852                           
 15853                           ;stkvar	_b @ sp[(-4)+-4]
 15854  0131AC  0EF8               	movlw	-8
 15855  0131AE  006F FF8C  F035    	movff	plusw1,btemp
 15856  0131B4  0EF9               	movlw	-7
 15857  0131B6  006F FF8C  F036    	movff	plusw1,btemp+1
 15858  0131BC  0EFA               	movlw	-6
 15859  0131BE  006F FF8C  F037    	movff	plusw1,btemp+2
 15860  0131C4  0EFB               	movlw	-5
 15861  0131C6  006F FF8C  F038    	movff	plusw1,btemp+3
 15862  0131CC                     l2548:
 15863                           
 15864                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 15865  0131CC  0EF4               	movlw	244
 15866  0131CE  26E1               	addwf	fsr1l,f,c
 15867  0131D0  0EFF               	movlw	255
 15868  0131D2  22E2               	addwfc	fsr1h,f,c
 15869  0131D4  0012               	return		;funcret
 15870  0131D6                     __end_of___fladd:
 15871                           	opt callstack 0
 15872                           
 15873 ;; *************** function ___flneg *****************
 15874 ;; Defined at:
 15875 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 15876 ;; Parameters:    Size  Location     Type
 15877 ;;  f1              4  [STACK] unsigned char 
 15878 ;; Auto vars:     Size  Location     Type
 15879 ;;		None
 15880 ;; Return value:  Size  Location     Type
 15881 ;;                  4  [STACK] unsigned char 
 15882 ;; Registers used:
 15883 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 15884 ;; Tracked objects:
 15885 ;;		On entry : 0/4
 15886 ;;		On exit  : 0/0
 15887 ;;		Unchanged: 0/0
 15888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15893 ;;Total ram usage:        0 bytes
 15894 ;; Hardware stack levels used:    1
 15895 ;; Hardware stack levels required when called:    6
 15896 ;; This function calls:
 15897 ;;		Nothing
 15898 ;; This function is called by:
 15899 ;;		_efgtoa
 15900 ;; This function uses a reentrant model
 15901 ;;
 15902                           
 15903                           	psect	text54
 15904  018414                     __ptext54:
 15905                           	opt callstack 0
 15906  018414                     ___flneg:
 15907                           	opt callstack 17
 15908                           
 15909                           ;stkvar	_f1 @ sp[(0)+-4]
 15910                           
 15911                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15912                           ;incstack = 0
 15913  018414  0EFC               	movlw	-4
 15914  018416  50E3               	movf	plusw1,w,c
 15915  018418  E10A               	bnz	u6370
 15916  01841A  0EFD               	movlw	-3
 15917  01841C  50E3               	movf	plusw1,w,c
 15918  01841E  E107               	bnz	u6370
 15919  018420  0EFE               	movlw	-2
 15920  018422  50E3               	movf	plusw1,w,c
 15921  018424  E104               	bnz	u6370
 15922  018426  0EFF               	movlw	-1
 15923  018428  50E3               	movf	plusw1,w,c
 15924  01842A  B4D8               	btfsc	status,2,c
 15925  01842C  D002               	goto	l7020
 15926  01842E                     u6370:
 15927                           
 15928                           ;stkvar	_f1 @ sp[(0)+-4]
 15929  01842E  0EFF               	movlw	-1
 15930  018430  7EE3               	btg	plusw1,7,c
 15931  018432                     l7020:
 15932                           
 15933                           ;stkvar	_f1 @ sp[(0)+-4]
 15934  018432  0EFC               	movlw	-4
 15935  018434  006F FF8C  F035    	movff	plusw1,btemp
 15936  01843A  0EFD               	movlw	-3
 15937  01843C  006F FF8C  F036    	movff	plusw1,btemp+1
 15938  018442  0EFE               	movlw	-2
 15939  018444  006F FF8C  F037    	movff	plusw1,btemp+2
 15940  01844A  0EFF               	movlw	-1
 15941  01844C  006F FF8C  F038    	movff	plusw1,btemp+3
 15942                           
 15943                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15944  018452  52E5               	movf	postdec1,f,c
 15945  018454  52E5               	movf	postdec1,f,c
 15946  018456  52E5               	movf	postdec1,f,c
 15947  018458  52E5               	movf	postdec1,f,c
 15948  01845A  0012               	return		;funcret
 15949  01845C                     __end_of___flneg:
 15950                           	opt callstack 0
 15951                           
 15952 ;; *************** function ___flmul *****************
 15953 ;; Defined at:
 15954 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 15955 ;; Parameters:    Size  Location     Type
 15956 ;;  b               4  [STACK] unsigned char 
 15957 ;;  a               4  [STACK] unsigned char 
 15958 ;; Auto vars:     Size  Location     Type
 15959 ;;  prod            4  [STACK] struct .
 15960 ;;  grs             4  [STACK] unsigned long 
 15961 ;;  temp            2  [STACK] struct .
 15962 ;;  bexp            1  [STACK] unsigned char 
 15963 ;;  aexp            1  [STACK] unsigned char 
 15964 ;;  sign            1  [STACK] unsigned char 
 15965 ;; Return value:  Size  Location     Type
 15966 ;;                  4  [STACK] unsigned char 
 15967 ;; Registers used:
 15968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 15969 ;; Tracked objects:
 15970 ;;		On entry : 0/4
 15971 ;;		On exit  : 0/0
 15972 ;;		Unchanged: 0/0
 15973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15978 ;;Total ram usage:        0 bytes
 15979 ;; Hardware stack levels used:    1
 15980 ;; Hardware stack levels required when called:    6
 15981 ;; This function calls:
 15982 ;;		Nothing
 15983 ;; This function is called by:
 15984 ;;		_conv_raw_result
 15985 ;;		_lp_filter
 15986 ;;		_efgtoa
 15987 ;; This function uses a reentrant model
 15988 ;;
 15989                           
 15990                           	psect	text55
 15991  0121F0                     __ptext55:
 15992                           	opt callstack 0
 15993  0121F0                     ___flmul:
 15994                           	opt callstack 0
 15995                           
 15996                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15997  0121F0  0E0D               	movlw	13
 15998  0121F2  26E1               	addwf	fsr1l,f,c
 15999  0121F4  0E00               	movlw	0
 16000  0121F6  22E2               	addwfc	fsr1h,f,c
 16001                           
 16002                           ;stkvar	_b @ sp[(-13)+-4]
 16003                           
 16004                           ;incstack = 0
 16005  0121F8  0EF2               	movlw	242
 16006  0121FA  24E1               	addwf	fsr1l,w,c
 16007  0121FC  6ED9               	movwf	fsr2l,c
 16008  0121FE  0EFF               	movlw	255
 16009  012200  20E2               	addwfc	fsr1h,w,c
 16010  012202  6EDA               	movwf	fsr2h,c
 16011  012204  50DF               	movf	indf2,w,c
 16012  012206  6E40               	movwf	(btemp+11)^0,c
 16013  012208  0E80               	movlw	128
 16014  01220A  1640               	andwf	(btemp+11)^0,f,c
 16015                           
 16016                           ;stkvar	_sign @ sp[(-13)+12]
 16017  01220C  0EFF               	movlw	-1
 16018  01220E  0060  F103  FFE3   	movff	btemp+11,plusw1
 16019                           
 16020                           ;stkvar	_b @ sp[(-13)+-4]
 16021  012214  0EF2               	movlw	242
 16022  012216  24E1               	addwf	fsr1l,w,c
 16023  012218  6ED9               	movwf	fsr2l,c
 16024  01221A  0EFF               	movlw	255
 16025  01221C  20E2               	addwfc	fsr1h,w,c
 16026  01221E  6EDA               	movwf	fsr2h,c
 16027  012220  50DF               	movf	indf2,w,c
 16028  012222  6E40               	movwf	(btemp+11)^0,c
 16029  012224  90D8               	bcf	status,0,c
 16030  012226  3440               	rlcf	(btemp+11)^0,w,c
 16031  012228  6E3F               	movwf	(btemp+10)^0,c
 16032                           
 16033                           ;stkvar	_bexp @ sp[(-13)+10]
 16034  01222A  0EFD               	movlw	-3
 16035  01222C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16036                           
 16037                           ;stkvar	_b @ sp[(-13)+-4]
 16038  012232  0EF1               	movlw	241
 16039  012234  24E1               	addwf	fsr1l,w,c
 16040  012236  6ED9               	movwf	fsr2l,c
 16041  012238  0EFF               	movlw	255
 16042  01223A  20E2               	addwfc	fsr1h,w,c
 16043  01223C  6EDA               	movwf	fsr2h,c
 16044  01223E  AEDF               	btfss	indf2,7,c
 16045  012240  D002               	goto	l6736
 16046                           
 16047                           ;stkvar	_bexp @ sp[(-13)+10]
 16048  012242  0EFD               	movlw	-3
 16049  012244  80E3               	bsf	plusw1,0,c
 16050  012246                     l6736:
 16051                           
 16052                           ;stkvar	_bexp @ sp[(-13)+10]
 16053  012246  0EFD               	movlw	-3
 16054  012248  50E3               	movf	plusw1,w,c
 16055  01224A  B4D8               	btfsc	status,2,c
 16056  01224C  D01F               	goto	l6744
 16057                           
 16058                           ;stkvar	_bexp @ sp[(-13)+10]
 16059  01224E  0EFD               	movlw	-3
 16060  012250  28E3               	incf	plusw1,w,c
 16061  012252  A4D8               	btfss	status,2,c
 16062  012254  D018               	goto	l6742
 16063  012256  0E00               	movlw	0
 16064  012258  6E3D               	movwf	(btemp+8)^0,c
 16065  01225A  0E00               	movlw	0
 16066  01225C  6E3E               	movwf	(btemp+9)^0,c
 16067  01225E  0E00               	movlw	0
 16068  012260  6E3F               	movwf	(btemp+10)^0,c
 16069  012262  0E00               	movlw	0
 16070  012264  6E40               	movwf	(btemp+11)^0,c
 16071                           
 16072                           ;stkvar	_b @ sp[(-13)+-4]
 16073  012266  0EEF               	movlw	-17
 16074  012268  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16075  01226E  0EF0               	movlw	-16
 16076  012270  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16077  012276  0EF1               	movlw	-15
 16078  012278  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16079  01227E  0EF2               	movlw	-14
 16080  012280  0060  F103  FFE3   	movff	btemp+11,plusw1
 16081  012286                     l6742:
 16082                           
 16083                           ;stkvar	_b @ sp[(-13)+-4]
 16084  012286  0EF1               	movlw	-15
 16085  012288  8EE3               	bsf	plusw1,7,c
 16086  01228A  D018               	goto	l6746
 16087  01228C                     l6744:
 16088  01228C  0E00               	movlw	0
 16089  01228E  6E3D               	movwf	(btemp+8)^0,c
 16090  012290  0E00               	movlw	0
 16091  012292  6E3E               	movwf	(btemp+9)^0,c
 16092  012294  0E00               	movlw	0
 16093  012296  6E3F               	movwf	(btemp+10)^0,c
 16094  012298  0E00               	movlw	0
 16095  01229A  6E40               	movwf	(btemp+11)^0,c
 16096                           
 16097                           ;stkvar	_b @ sp[(-13)+-4]
 16098  01229C  0EEF               	movlw	-17
 16099  01229E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16100  0122A4  0EF0               	movlw	-16
 16101  0122A6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16102  0122AC  0EF1               	movlw	-15
 16103  0122AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16104  0122B4  0EF2               	movlw	-14
 16105  0122B6  0060  F103  FFE3   	movff	btemp+11,plusw1
 16106  0122BC                     l6746:
 16107                           
 16108                           ;stkvar	_a @ sp[(-13)+-8]
 16109  0122BC  0EEE               	movlw	238
 16110  0122BE  24E1               	addwf	fsr1l,w,c
 16111  0122C0  6ED9               	movwf	fsr2l,c
 16112  0122C2  0EFF               	movlw	255
 16113  0122C4  20E2               	addwfc	fsr1h,w,c
 16114  0122C6  6EDA               	movwf	fsr2h,c
 16115  0122C8  50DF               	movf	indf2,w,c
 16116  0122CA  6E40               	movwf	(btemp+11)^0,c
 16117  0122CC  0E80               	movlw	128
 16118  0122CE  1640               	andwf	(btemp+11)^0,f,c
 16119                           
 16120                           ;stkvar	_sign @ sp[(-13)+12]
 16121  0122D0  50E1               	movf	fsr1l,w,c
 16122  0122D2  0FFF               	addlw	-1
 16123  0122D4  6ED9               	movwf	fsr2l,c
 16124  0122D6  50E2               	movf	fsr1h,w,c
 16125  0122D8  6EDA               	movwf	fsr2h,c
 16126  0122DA  0EFF               	movlw	255
 16127  0122DC  22DA               	addwfc	fsr2h,f,c
 16128  0122DE  5040               	movf	(btemp+11)^0,w,c
 16129  0122E0  1ADF               	xorwf	indf2,f,c
 16130                           
 16131                           ;stkvar	_a @ sp[(-13)+-8]
 16132  0122E2  0EEE               	movlw	238
 16133  0122E4  24E1               	addwf	fsr1l,w,c
 16134  0122E6  6ED9               	movwf	fsr2l,c
 16135  0122E8  0EFF               	movlw	255
 16136  0122EA  20E2               	addwfc	fsr1h,w,c
 16137  0122EC  6EDA               	movwf	fsr2h,c
 16138  0122EE  50DF               	movf	indf2,w,c
 16139  0122F0  6E40               	movwf	(btemp+11)^0,c
 16140  0122F2  90D8               	bcf	status,0,c
 16141  0122F4  3440               	rlcf	(btemp+11)^0,w,c
 16142  0122F6  6E3F               	movwf	(btemp+10)^0,c
 16143                           
 16144                           ;stkvar	_aexp @ sp[(-13)+11]
 16145  0122F8  0EFE               	movlw	-2
 16146  0122FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16147                           
 16148                           ;stkvar	_a @ sp[(-13)+-8]
 16149  012300  0EED               	movlw	237
 16150  012302  24E1               	addwf	fsr1l,w,c
 16151  012304  6ED9               	movwf	fsr2l,c
 16152  012306  0EFF               	movlw	255
 16153  012308  20E2               	addwfc	fsr1h,w,c
 16154  01230A  6EDA               	movwf	fsr2h,c
 16155  01230C  AEDF               	btfss	indf2,7,c
 16156  01230E  D002               	goto	l6754
 16157                           
 16158                           ;stkvar	_aexp @ sp[(-13)+11]
 16159  012310  0EFE               	movlw	-2
 16160  012312  80E3               	bsf	plusw1,0,c
 16161  012314                     l6754:
 16162                           
 16163                           ;stkvar	_aexp @ sp[(-13)+11]
 16164  012314  0EFE               	movlw	-2
 16165  012316  50E3               	movf	plusw1,w,c
 16166  012318  B4D8               	btfsc	status,2,c
 16167  01231A  D01F               	goto	l6762
 16168                           
 16169                           ;stkvar	_aexp @ sp[(-13)+11]
 16170  01231C  0EFE               	movlw	-2
 16171  01231E  28E3               	incf	plusw1,w,c
 16172  012320  A4D8               	btfss	status,2,c
 16173  012322  D018               	goto	l6760
 16174  012324  0E00               	movlw	0
 16175  012326  6E3D               	movwf	(btemp+8)^0,c
 16176  012328  0E00               	movlw	0
 16177  01232A  6E3E               	movwf	(btemp+9)^0,c
 16178  01232C  0E00               	movlw	0
 16179  01232E  6E3F               	movwf	(btemp+10)^0,c
 16180  012330  0E00               	movlw	0
 16181  012332  6E40               	movwf	(btemp+11)^0,c
 16182                           
 16183                           ;stkvar	_a @ sp[(-13)+-8]
 16184  012334  0EEB               	movlw	-21
 16185  012336  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16186  01233C  0EEC               	movlw	-20
 16187  01233E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16188  012344  0EED               	movlw	-19
 16189  012346  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16190  01234C  0EEE               	movlw	-18
 16191  01234E  0060  F103  FFE3   	movff	btemp+11,plusw1
 16192  012354                     l6760:
 16193                           
 16194                           ;stkvar	_a @ sp[(-13)+-8]
 16195  012354  0EED               	movlw	-19
 16196  012356  8EE3               	bsf	plusw1,7,c
 16197  012358  D018               	goto	l6764
 16198  01235A                     l6762:
 16199  01235A  0E00               	movlw	0
 16200  01235C  6E3D               	movwf	(btemp+8)^0,c
 16201  01235E  0E00               	movlw	0
 16202  012360  6E3E               	movwf	(btemp+9)^0,c
 16203  012362  0E00               	movlw	0
 16204  012364  6E3F               	movwf	(btemp+10)^0,c
 16205  012366  0E00               	movlw	0
 16206  012368  6E40               	movwf	(btemp+11)^0,c
 16207                           
 16208                           ;stkvar	_a @ sp[(-13)+-8]
 16209  01236A  0EEB               	movlw	-21
 16210  01236C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16211  012372  0EEC               	movlw	-20
 16212  012374  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16213  01237A  0EED               	movlw	-19
 16214  01237C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16215  012382  0EEE               	movlw	-18
 16216  012384  0060  F103  FFE3   	movff	btemp+11,plusw1
 16217  01238A                     l6764:
 16218                           
 16219                           ;stkvar	_aexp @ sp[(-13)+11]
 16220  01238A  0EFE               	movlw	-2
 16221  01238C  50E3               	movf	plusw1,w,c
 16222  01238E  B4D8               	btfsc	status,2,c
 16223  012390  D004               	goto	u6000
 16224                           
 16225                           ;stkvar	_bexp @ sp[(-13)+10]
 16226  012392  0EFD               	movlw	-3
 16227  012394  50E3               	movf	plusw1,w,c
 16228  012396  A4D8               	btfss	status,2,c
 16229  012398  D009               	goto	l6772
 16230  01239A                     u6000:
 16231  01239A  0E00               	movlw	0
 16232  01239C  6E35               	movwf	btemp^0,c
 16233  01239E  0E00               	movlw	0
 16234  0123A0  6E36               	movwf	(btemp+1)^0,c
 16235  0123A2  0E00               	movlw	0
 16236  0123A4  6E37               	movwf	(btemp+2)^0,c
 16237  0123A6  0E00               	movlw	0
 16238  0123A8  6E38               	movwf	(btemp+3)^0,c
 16239  0123AA  D332               	goto	l2629
 16240  0123AC                     l6772:
 16241                           
 16242                           ;stkvar	_b @ sp[(-13)+-4]
 16243  0123AC  0EEF               	movlw	-17
 16244  0123AE  006F FF8C  F040    	movff	plusw1,btemp+11
 16245                           
 16246                           ;stkvar	_a @ sp[(-13)+-8]
 16247  0123B4  0EED               	movlw	237
 16248  0123B6  24E1               	addwf	fsr1l,w,c
 16249  0123B8  6ED9               	movwf	fsr2l,c
 16250  0123BA  0EFF               	movlw	255
 16251  0123BC  20E2               	addwfc	fsr1h,w,c
 16252  0123BE  6EDA               	movwf	fsr2h,c
 16253  0123C0  50DF               	movf	indf2,w,c
 16254  0123C2  0240               	mulwf	(btemp+11)^0,c
 16255                           
 16256                           ;stkvar	_temp @ sp[(-13)+8]
 16257  0123C4  0EFB               	movlw	-5
 16258  0123C6  006F FFCF FFE3     	movff	prodl,plusw1
 16259  0123CC  0EFC               	movlw	-4
 16260  0123CE  006F FFD3 FFE3     	movff	prodh,plusw1
 16261                           
 16262                           ;stkvar	_temp @ sp[(-13)+8]
 16263  0123D4  0EFB               	movlw	-5
 16264  0123D6  006F FF8C  F040    	movff	plusw1,btemp+11
 16265  0123DC  0060  F100  F039   	movff	btemp+11,btemp+4
 16266  0123E2  6A3A               	clrf	(btemp+5)^0,c
 16267  0123E4  6A3B               	clrf	(btemp+6)^0,c
 16268  0123E6  6A3C               	clrf	(btemp+7)^0,c
 16269                           
 16270                           ;stkvar	_grs @ sp[(-13)+4]
 16271  0123E8  0EF7               	movlw	-9
 16272  0123EA  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 16273  0123F0  0EF8               	movlw	-8
 16274  0123F2  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 16275  0123F8  0EF9               	movlw	-7
 16276  0123FA  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 16277  012400  0EFA               	movlw	-6
 16278  012402  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 16279                           
 16280                           ;stkvar	_temp @ sp[(-13)+8]
 16281  012408  0EFC               	movlw	252
 16282  01240A  24E1               	addwf	fsr1l,w,c
 16283  01240C  6ED9               	movwf	fsr2l,c
 16284  01240E  0EFF               	movlw	255
 16285  012410  20E2               	addwfc	fsr1h,w,c
 16286  012412  6EDA               	movwf	fsr2h,c
 16287  012414  50DF               	movf	indf2,w,c
 16288  012416  6E40               	movwf	(btemp+11)^0,c
 16289  012418  0060  F100  F039   	movff	btemp+11,btemp+4
 16290  01241E  6A3A               	clrf	(btemp+5)^0,c
 16291  012420  6A3B               	clrf	(btemp+6)^0,c
 16292  012422  6A3C               	clrf	(btemp+7)^0,c
 16293                           
 16294                           ;stkvar	_prod @ sp[(-13)+0]
 16295  012424  0EF3               	movlw	-13
 16296  012426  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 16297  01242C  0EF4               	movlw	-12
 16298  01242E  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 16299  012434  0EF5               	movlw	-11
 16300  012436  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 16301  01243C  0EF6               	movlw	-10
 16302  01243E  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 16303                           
 16304                           ;stkvar	_b @ sp[(-13)+-4]
 16305  012444  0EF0               	movlw	240
 16306  012446  24E1               	addwf	fsr1l,w,c
 16307  012448  6ED9               	movwf	fsr2l,c
 16308  01244A  0EFF               	movlw	255
 16309  01244C  20E2               	addwfc	fsr1h,w,c
 16310  01244E  6EDA               	movwf	fsr2h,c
 16311  012450  50DF               	movf	indf2,w,c
 16312  012452  6E40               	movwf	(btemp+11)^0,c
 16313                           
 16314                           ;stkvar	_a @ sp[(-13)+-8]
 16315  012454  0EEC               	movlw	236
 16316  012456  24E1               	addwf	fsr1l,w,c
 16317  012458  6ED9               	movwf	fsr2l,c
 16318  01245A  0EFF               	movlw	255
 16319  01245C  20E2               	addwfc	fsr1h,w,c
 16320  01245E  6EDA               	movwf	fsr2h,c
 16321  012460  50DF               	movf	indf2,w,c
 16322  012462  0240               	mulwf	(btemp+11)^0,c
 16323                           
 16324                           ;stkvar	_temp @ sp[(-13)+8]
 16325  012464  0EFB               	movlw	-5
 16326  012466  006F FFCF FFE3     	movff	prodl,plusw1
 16327  01246C  0EFC               	movlw	-4
 16328  01246E  006F FFD3 FFE3     	movff	prodh,plusw1
 16329                           
 16330                           ;stkvar	_grs @ sp[(-13)+4]
 16331  012474  50E1               	movf	fsr1l,w,c
 16332  012476  0FF7               	addlw	-9
 16333  012478  6ED9               	movwf	fsr2l,c
 16334  01247A  50E2               	movf	fsr1h,w,c
 16335  01247C  6EDA               	movwf	fsr2h,c
 16336  01247E  0EFF               	movlw	255
 16337  012480  22DA               	addwfc	fsr2h,f,c
 16338                           
 16339                           ;stkvar	_temp @ sp[(-13)+8]
 16340  012482  0EFB               	movlw	-5
 16341  012484  50E3               	movf	plusw1,w,c
 16342  012486  26DE               	addwf	postinc2,f,c
 16343  012488  0E00               	movlw	0
 16344  01248A  22DE               	addwfc	postinc2,f,c
 16345  01248C  22DE               	addwfc	postinc2,f,c
 16346  01248E  22DE               	addwfc	postinc2,f,c
 16347                           
 16348                           ;stkvar	_prod @ sp[(-13)+0]
 16349  012490  50E1               	movf	fsr1l,w,c
 16350  012492  0FF3               	addlw	-13
 16351  012494  6ED9               	movwf	fsr2l,c
 16352  012496  50E2               	movf	fsr1h,w,c
 16353  012498  6EDA               	movwf	fsr2h,c
 16354  01249A  0EFF               	movlw	255
 16355  01249C  22DA               	addwfc	fsr2h,f,c
 16356                           
 16357                           ;stkvar	_temp @ sp[(-13)+8]
 16358  01249E  0EFC               	movlw	252
 16359  0124A0  24E1               	addwf	fsr1l,w,c
 16360  0124A2  6EE9               	movwf	fsr0l,c
 16361  0124A4  0EFF               	movlw	255
 16362  0124A6  20E2               	addwfc	fsr1h,w,c
 16363  0124A8  6EEA               	movwf	fsr0h,c
 16364  0124AA  50EF               	movf	indf0,w,c
 16365  0124AC  26DE               	addwf	postinc2,f,c
 16366  0124AE  0E00               	movlw	0
 16367  0124B0  22DE               	addwfc	postinc2,f,c
 16368  0124B2  22DE               	addwfc	postinc2,f,c
 16369  0124B4  22DE               	addwfc	postinc2,f,c
 16370                           
 16371                           ;stkvar	_b @ sp[(-13)+-4]
 16372  0124B6  0EF1               	movlw	241
 16373  0124B8  24E1               	addwf	fsr1l,w,c
 16374  0124BA  6ED9               	movwf	fsr2l,c
 16375  0124BC  0EFF               	movlw	255
 16376  0124BE  20E2               	addwfc	fsr1h,w,c
 16377  0124C0  6EDA               	movwf	fsr2h,c
 16378  0124C2  50DF               	movf	indf2,w,c
 16379  0124C4  6E40               	movwf	(btemp+11)^0,c
 16380                           
 16381                           ;stkvar	_a @ sp[(-13)+-8]
 16382  0124C6  0EEB               	movlw	-21
 16383  0124C8  50E3               	movf	plusw1,w,c
 16384  0124CA  0240               	mulwf	(btemp+11)^0,c
 16385                           
 16386                           ;stkvar	_temp @ sp[(-13)+8]
 16387  0124CC  0EFB               	movlw	-5
 16388  0124CE  006F FFCF FFE3     	movff	prodl,plusw1
 16389  0124D4  0EFC               	movlw	-4
 16390  0124D6  006F FFD3 FFE3     	movff	prodh,plusw1
 16391                           
 16392                           ;stkvar	_grs @ sp[(-13)+4]
 16393  0124DC  50E1               	movf	fsr1l,w,c
 16394  0124DE  0FF7               	addlw	-9
 16395  0124E0  6ED9               	movwf	fsr2l,c
 16396  0124E2  50E2               	movf	fsr1h,w,c
 16397  0124E4  6EDA               	movwf	fsr2h,c
 16398  0124E6  0EFF               	movlw	255
 16399  0124E8  22DA               	addwfc	fsr2h,f,c
 16400                           
 16401                           ;stkvar	_temp @ sp[(-13)+8]
 16402  0124EA  0EFB               	movlw	-5
 16403  0124EC  50E3               	movf	plusw1,w,c
 16404  0124EE  26DE               	addwf	postinc2,f,c
 16405  0124F0  0E00               	movlw	0
 16406  0124F2  22DE               	addwfc	postinc2,f,c
 16407  0124F4  22DE               	addwfc	postinc2,f,c
 16408  0124F6  22DE               	addwfc	postinc2,f,c
 16409                           
 16410                           ;stkvar	_prod @ sp[(-13)+0]
 16411  0124F8  50E1               	movf	fsr1l,w,c
 16412  0124FA  0FF3               	addlw	-13
 16413  0124FC  6ED9               	movwf	fsr2l,c
 16414  0124FE  50E2               	movf	fsr1h,w,c
 16415  012500  6EDA               	movwf	fsr2h,c
 16416  012502  0EFF               	movlw	255
 16417  012504  22DA               	addwfc	fsr2h,f,c
 16418                           
 16419                           ;stkvar	_temp @ sp[(-13)+8]
 16420  012506  0EFC               	movlw	252
 16421  012508  24E1               	addwf	fsr1l,w,c
 16422  01250A  6EE9               	movwf	fsr0l,c
 16423  01250C  0EFF               	movlw	255
 16424  01250E  20E2               	addwfc	fsr1h,w,c
 16425  012510  6EEA               	movwf	fsr0h,c
 16426  012512  50EF               	movf	indf0,w,c
 16427  012514  26DE               	addwf	postinc2,f,c
 16428  012516  0E00               	movlw	0
 16429  012518  22DE               	addwfc	postinc2,f,c
 16430  01251A  22DE               	addwfc	postinc2,f,c
 16431  01251C  22DE               	addwfc	postinc2,f,c
 16432                           
 16433                           ;stkvar	_grs @ sp[(-13)+4]
 16434  01251E  50E1               	movf	fsr1l,w,c
 16435  012520  0FF7               	addlw	-9
 16436  012522  6ED9               	movwf	fsr2l,c
 16437  012524  50E2               	movf	fsr1h,w,c
 16438  012526  6EDA               	movwf	fsr2h,c
 16439  012528  0EFF               	movlw	255
 16440  01252A  22DA               	addwfc	fsr2h,f,c
 16441  01252C  0E08               	movlw	8
 16442  01252E                     u6015:
 16443  01252E  90D8               	bcf	status,0,c
 16444  012530  36DE               	rlcf	postinc2,f,c
 16445  012532  36DE               	rlcf	postinc2,f,c
 16446  012534  36DE               	rlcf	postinc2,f,c
 16447  012536  36DD               	rlcf	postdec2,f,c
 16448  012538  52DD               	movf	postdec2,f,c
 16449  01253A  52DD               	movf	postdec2,f,c
 16450  01253C  2EE8               	decfsz	wreg,f,c
 16451  01253E  D7F7               	goto	u6015
 16452                           
 16453                           ;stkvar	_b @ sp[(-13)+-4]
 16454  012540  0EF0               	movlw	240
 16455  012542  24E1               	addwf	fsr1l,w,c
 16456  012544  6ED9               	movwf	fsr2l,c
 16457  012546  0EFF               	movlw	255
 16458  012548  20E2               	addwfc	fsr1h,w,c
 16459  01254A  6EDA               	movwf	fsr2h,c
 16460  01254C  50DF               	movf	indf2,w,c
 16461  01254E  6E40               	movwf	(btemp+11)^0,c
 16462                           
 16463                           ;stkvar	_a @ sp[(-13)+-8]
 16464  012550  0EEB               	movlw	-21
 16465  012552  50E3               	movf	plusw1,w,c
 16466  012554  0240               	mulwf	(btemp+11)^0,c
 16467                           
 16468                           ;stkvar	_temp @ sp[(-13)+8]
 16469  012556  0EFB               	movlw	-5
 16470  012558  006F FFCF FFE3     	movff	prodl,plusw1
 16471  01255E  0EFC               	movlw	-4
 16472  012560  006F FFD3 FFE3     	movff	prodh,plusw1
 16473                           
 16474                           ;stkvar	_temp @ sp[(-13)+8]
 16475  012566  0EFB               	movlw	-5
 16476  012568  006F FF8C  F03F    	movff	plusw1,btemp+10
 16477  01256E  0EFC               	movlw	-4
 16478  012570  006F FF8C  F040    	movff	plusw1,btemp+11
 16479                           
 16480                           ;stkvar	_grs @ sp[(-13)+4]
 16481  012576  50E1               	movf	fsr1l,w,c
 16482  012578  0FF7               	addlw	-9
 16483  01257A  6ED9               	movwf	fsr2l,c
 16484  01257C  50E2               	movf	fsr1h,w,c
 16485  01257E  6EDA               	movwf	fsr2h,c
 16486  012580  0EFF               	movlw	255
 16487  012582  22DA               	addwfc	fsr2h,f,c
 16488  012584  503F               	movf	(btemp+10)^0,w,c
 16489  012586  26DE               	addwf	postinc2,f,c
 16490  012588  5040               	movf	(btemp+11)^0,w,c
 16491  01258A  22DE               	addwfc	postinc2,f,c
 16492  01258C  0E00               	movlw	0
 16493  01258E  22DE               	addwfc	postinc2,f,c
 16494  012590  22DE               	addwfc	postinc2,f,c
 16495                           
 16496                           ;stkvar	_b @ sp[(-13)+-4]
 16497  012592  0EEF               	movlw	-17
 16498  012594  006F FF8C  F040    	movff	plusw1,btemp+11
 16499                           
 16500                           ;stkvar	_a @ sp[(-13)+-8]
 16501  01259A  0EEC               	movlw	236
 16502  01259C  24E1               	addwf	fsr1l,w,c
 16503  01259E  6ED9               	movwf	fsr2l,c
 16504  0125A0  0EFF               	movlw	255
 16505  0125A2  20E2               	addwfc	fsr1h,w,c
 16506  0125A4  6EDA               	movwf	fsr2h,c
 16507  0125A6  50DF               	movf	indf2,w,c
 16508  0125A8  0240               	mulwf	(btemp+11)^0,c
 16509                           
 16510                           ;stkvar	_temp @ sp[(-13)+8]
 16511  0125AA  0EFB               	movlw	-5
 16512  0125AC  006F FFCF FFE3     	movff	prodl,plusw1
 16513  0125B2  0EFC               	movlw	-4
 16514  0125B4  006F FFD3 FFE3     	movff	prodh,plusw1
 16515                           
 16516                           ;stkvar	_temp @ sp[(-13)+8]
 16517  0125BA  0EFB               	movlw	-5
 16518  0125BC  006F FF8C  F03F    	movff	plusw1,btemp+10
 16519  0125C2  0EFC               	movlw	-4
 16520  0125C4  006F FF8C  F040    	movff	plusw1,btemp+11
 16521                           
 16522                           ;stkvar	_grs @ sp[(-13)+4]
 16523  0125CA  50E1               	movf	fsr1l,w,c
 16524  0125CC  0FF7               	addlw	-9
 16525  0125CE  6ED9               	movwf	fsr2l,c
 16526  0125D0  50E2               	movf	fsr1h,w,c
 16527  0125D2  6EDA               	movwf	fsr2h,c
 16528  0125D4  0EFF               	movlw	255
 16529  0125D6  22DA               	addwfc	fsr2h,f,c
 16530  0125D8  503F               	movf	(btemp+10)^0,w,c
 16531  0125DA  26DE               	addwf	postinc2,f,c
 16532  0125DC  5040               	movf	(btemp+11)^0,w,c
 16533  0125DE  22DE               	addwfc	postinc2,f,c
 16534  0125E0  0E00               	movlw	0
 16535  0125E2  22DE               	addwfc	postinc2,f,c
 16536  0125E4  22DE               	addwfc	postinc2,f,c
 16537                           
 16538                           ;stkvar	_grs @ sp[(-13)+4]
 16539  0125E6  50E1               	movf	fsr1l,w,c
 16540  0125E8  0FF7               	addlw	-9
 16541  0125EA  6ED9               	movwf	fsr2l,c
 16542  0125EC  50E2               	movf	fsr1h,w,c
 16543  0125EE  6EDA               	movwf	fsr2h,c
 16544  0125F0  0EFF               	movlw	255
 16545  0125F2  22DA               	addwfc	fsr2h,f,c
 16546  0125F4  0E08               	movlw	8
 16547  0125F6                     u6025:
 16548  0125F6  90D8               	bcf	status,0,c
 16549  0125F8  36DE               	rlcf	postinc2,f,c
 16550  0125FA  36DE               	rlcf	postinc2,f,c
 16551  0125FC  36DE               	rlcf	postinc2,f,c
 16552  0125FE  36DD               	rlcf	postdec2,f,c
 16553  012600  52DD               	movf	postdec2,f,c
 16554  012602  52DD               	movf	postdec2,f,c
 16555  012604  2EE8               	decfsz	wreg,f,c
 16556  012606  D7F7               	goto	u6025
 16557                           
 16558                           ;stkvar	_b @ sp[(-13)+-4]
 16559  012608  0EEF               	movlw	-17
 16560  01260A  006F FF8C  F040    	movff	plusw1,btemp+11
 16561                           
 16562                           ;stkvar	_a @ sp[(-13)+-8]
 16563  012610  0EEB               	movlw	-21
 16564  012612  50E3               	movf	plusw1,w,c
 16565  012614  0240               	mulwf	(btemp+11)^0,c
 16566                           
 16567                           ;stkvar	_temp @ sp[(-13)+8]
 16568  012616  0EFB               	movlw	-5
 16569  012618  006F FFCF FFE3     	movff	prodl,plusw1
 16570  01261E  0EFC               	movlw	-4
 16571  012620  006F FFD3 FFE3     	movff	prodh,plusw1
 16572                           
 16573                           ;stkvar	_temp @ sp[(-13)+8]
 16574  012626  0EFB               	movlw	-5
 16575  012628  006F FF8C  F03F    	movff	plusw1,btemp+10
 16576  01262E  0EFC               	movlw	-4
 16577  012630  006F FF8C  F040    	movff	plusw1,btemp+11
 16578                           
 16579                           ;stkvar	_grs @ sp[(-13)+4]
 16580  012636  50E1               	movf	fsr1l,w,c
 16581  012638  0FF7               	addlw	-9
 16582  01263A  6ED9               	movwf	fsr2l,c
 16583  01263C  50E2               	movf	fsr1h,w,c
 16584  01263E  6EDA               	movwf	fsr2h,c
 16585  012640  0EFF               	movlw	255
 16586  012642  22DA               	addwfc	fsr2h,f,c
 16587  012644  503F               	movf	(btemp+10)^0,w,c
 16588  012646  26DE               	addwf	postinc2,f,c
 16589  012648  5040               	movf	(btemp+11)^0,w,c
 16590  01264A  22DE               	addwfc	postinc2,f,c
 16591  01264C  0E00               	movlw	0
 16592  01264E  22DE               	addwfc	postinc2,f,c
 16593  012650  22DE               	addwfc	postinc2,f,c
 16594                           
 16595                           ;stkvar	_b @ sp[(-13)+-4]
 16596  012652  0EF0               	movlw	240
 16597  012654  24E1               	addwf	fsr1l,w,c
 16598  012656  6ED9               	movwf	fsr2l,c
 16599  012658  0EFF               	movlw	255
 16600  01265A  20E2               	addwfc	fsr1h,w,c
 16601  01265C  6EDA               	movwf	fsr2h,c
 16602  01265E  50DF               	movf	indf2,w,c
 16603  012660  6E40               	movwf	(btemp+11)^0,c
 16604                           
 16605                           ;stkvar	_a @ sp[(-13)+-8]
 16606  012662  0EED               	movlw	237
 16607  012664  24E1               	addwf	fsr1l,w,c
 16608  012666  6ED9               	movwf	fsr2l,c
 16609  012668  0EFF               	movlw	255
 16610  01266A  20E2               	addwfc	fsr1h,w,c
 16611  01266C  6EDA               	movwf	fsr2h,c
 16612  01266E  50DF               	movf	indf2,w,c
 16613  012670  0240               	mulwf	(btemp+11)^0,c
 16614                           
 16615                           ;stkvar	_temp @ sp[(-13)+8]
 16616  012672  0EFB               	movlw	-5
 16617  012674  006F FFCF FFE3     	movff	prodl,plusw1
 16618  01267A  0EFC               	movlw	-4
 16619  01267C  006F FFD3 FFE3     	movff	prodh,plusw1
 16620                           
 16621                           ;stkvar	_temp @ sp[(-13)+8]
 16622  012682  0EFB               	movlw	-5
 16623  012684  006F FF8C  F03F    	movff	plusw1,btemp+10
 16624  01268A  0EFC               	movlw	-4
 16625  01268C  006F FF8C  F040    	movff	plusw1,btemp+11
 16626                           
 16627                           ;stkvar	_prod @ sp[(-13)+0]
 16628  012692  50E1               	movf	fsr1l,w,c
 16629  012694  0FF3               	addlw	-13
 16630  012696  6ED9               	movwf	fsr2l,c
 16631  012698  50E2               	movf	fsr1h,w,c
 16632  01269A  6EDA               	movwf	fsr2h,c
 16633  01269C  0EFF               	movlw	255
 16634  01269E  22DA               	addwfc	fsr2h,f,c
 16635  0126A0  503F               	movf	(btemp+10)^0,w,c
 16636  0126A2  26DE               	addwf	postinc2,f,c
 16637  0126A4  5040               	movf	(btemp+11)^0,w,c
 16638  0126A6  22DE               	addwfc	postinc2,f,c
 16639  0126A8  0E00               	movlw	0
 16640  0126AA  22DE               	addwfc	postinc2,f,c
 16641  0126AC  22DE               	addwfc	postinc2,f,c
 16642                           
 16643                           ;stkvar	_b @ sp[(-13)+-4]
 16644  0126AE  0EF1               	movlw	241
 16645  0126B0  24E1               	addwf	fsr1l,w,c
 16646  0126B2  6ED9               	movwf	fsr2l,c
 16647  0126B4  0EFF               	movlw	255
 16648  0126B6  20E2               	addwfc	fsr1h,w,c
 16649  0126B8  6EDA               	movwf	fsr2h,c
 16650  0126BA  50DF               	movf	indf2,w,c
 16651  0126BC  6E40               	movwf	(btemp+11)^0,c
 16652                           
 16653                           ;stkvar	_a @ sp[(-13)+-8]
 16654  0126BE  0EEC               	movlw	236
 16655  0126C0  24E1               	addwf	fsr1l,w,c
 16656  0126C2  6ED9               	movwf	fsr2l,c
 16657  0126C4  0EFF               	movlw	255
 16658  0126C6  20E2               	addwfc	fsr1h,w,c
 16659  0126C8  6EDA               	movwf	fsr2h,c
 16660  0126CA  50DF               	movf	indf2,w,c
 16661  0126CC  0240               	mulwf	(btemp+11)^0,c
 16662                           
 16663                           ;stkvar	_temp @ sp[(-13)+8]
 16664  0126CE  0EFB               	movlw	-5
 16665  0126D0  006F FFCF FFE3     	movff	prodl,plusw1
 16666  0126D6  0EFC               	movlw	-4
 16667  0126D8  006F FFD3 FFE3     	movff	prodh,plusw1
 16668                           
 16669                           ;stkvar	_temp @ sp[(-13)+8]
 16670  0126DE  0EFB               	movlw	-5
 16671  0126E0  006F FF8C  F03F    	movff	plusw1,btemp+10
 16672  0126E6  0EFC               	movlw	-4
 16673  0126E8  006F FF8C  F040    	movff	plusw1,btemp+11
 16674                           
 16675                           ;stkvar	_prod @ sp[(-13)+0]
 16676  0126EE  50E1               	movf	fsr1l,w,c
 16677  0126F0  0FF3               	addlw	-13
 16678  0126F2  6ED9               	movwf	fsr2l,c
 16679  0126F4  50E2               	movf	fsr1h,w,c
 16680  0126F6  6EDA               	movwf	fsr2h,c
 16681  0126F8  0EFF               	movlw	255
 16682  0126FA  22DA               	addwfc	fsr2h,f,c
 16683  0126FC  503F               	movf	(btemp+10)^0,w,c
 16684  0126FE  26DE               	addwf	postinc2,f,c
 16685  012700  5040               	movf	(btemp+11)^0,w,c
 16686  012702  22DE               	addwfc	postinc2,f,c
 16687  012704  0E00               	movlw	0
 16688  012706  22DE               	addwfc	postinc2,f,c
 16689  012708  22DE               	addwfc	postinc2,f,c
 16690                           
 16691                           ;stkvar	_b @ sp[(-13)+-4]
 16692  01270A  0EF1               	movlw	241
 16693  01270C  24E1               	addwf	fsr1l,w,c
 16694  01270E  6ED9               	movwf	fsr2l,c
 16695  012710  0EFF               	movlw	255
 16696  012712  20E2               	addwfc	fsr1h,w,c
 16697  012714  6EDA               	movwf	fsr2h,c
 16698  012716  50DF               	movf	indf2,w,c
 16699  012718  6E40               	movwf	(btemp+11)^0,c
 16700                           
 16701                           ;stkvar	_a @ sp[(-13)+-8]
 16702  01271A  0EED               	movlw	237
 16703  01271C  24E1               	addwf	fsr1l,w,c
 16704  01271E  6ED9               	movwf	fsr2l,c
 16705  012720  0EFF               	movlw	255
 16706  012722  20E2               	addwfc	fsr1h,w,c
 16707  012724  6EDA               	movwf	fsr2h,c
 16708  012726  50DF               	movf	indf2,w,c
 16709  012728  0240               	mulwf	(btemp+11)^0,c
 16710                           
 16711                           ;stkvar	_temp @ sp[(-13)+8]
 16712  01272A  0EFB               	movlw	-5
 16713  01272C  006F FFCF FFE3     	movff	prodl,plusw1
 16714  012732  0EFC               	movlw	-4
 16715  012734  006F FFD3 FFE3     	movff	prodh,plusw1
 16716                           
 16717                           ;stkvar	_temp @ sp[(-13)+8]
 16718  01273A  0EFB               	movlw	-5
 16719  01273C  006F FF8C  F03F    	movff	plusw1,btemp+10
 16720  012742  0EFC               	movlw	-4
 16721  012744  006F FF8C  F040    	movff	plusw1,btemp+11
 16722  01274A  503F               	movf	(btemp+10)^0,w,c
 16723  01274C  6E39               	movwf	(btemp+4)^0,c
 16724  01274E  5040               	movf	(btemp+11)^0,w,c
 16725  012750  6E3A               	movwf	(btemp+5)^0,c
 16726  012752  6A3B               	clrf	(btemp+6)^0,c
 16727  012754  6A3C               	clrf	(btemp+7)^0,c
 16728  012756  0060  F0EC  F03C   	movff	btemp+6,btemp+7
 16729  01275C  0060  F0E8  F03B   	movff	btemp+5,btemp+6
 16730  012762  0060  F0E4  F03A   	movff	btemp+4,btemp+5
 16731  012768  6A39               	clrf	(btemp+4)^0,c
 16732                           
 16733                           ;stkvar	_prod @ sp[(-13)+0]
 16734  01276A  50E1               	movf	fsr1l,w,c
 16735  01276C  0FF3               	addlw	-13
 16736  01276E  6ED9               	movwf	fsr2l,c
 16737  012770  50E2               	movf	fsr1h,w,c
 16738  012772  6EDA               	movwf	fsr2h,c
 16739  012774  0EFF               	movlw	255
 16740  012776  22DA               	addwfc	fsr2h,f,c
 16741  012778  5039               	movf	(btemp+4)^0,w,c
 16742  01277A  26DE               	addwf	postinc2,f,c
 16743  01277C  503A               	movf	(btemp+5)^0,w,c
 16744  01277E  22DE               	addwfc	postinc2,f,c
 16745  012780  503B               	movf	(btemp+6)^0,w,c
 16746  012782  22DE               	addwfc	postinc2,f,c
 16747  012784  503C               	movf	(btemp+7)^0,w,c
 16748  012786  22DE               	addwfc	postinc2,f,c
 16749                           
 16750                           ;stkvar	_prod @ sp[(-13)+0]
 16751  012788  50E1               	movf	fsr1l,w,c
 16752  01278A  0FF3               	addlw	-13
 16753  01278C  6ED9               	movwf	fsr2l,c
 16754  01278E  50E2               	movf	fsr1h,w,c
 16755  012790  6EDA               	movwf	fsr2h,c
 16756  012792  0EFF               	movlw	255
 16757  012794  22DA               	addwfc	fsr2h,f,c
 16758                           
 16759                           ;stkvar	_grs @ sp[(-13)+4]
 16760  012796  0EFA               	movlw	250
 16761  012798  24E1               	addwf	fsr1l,w,c
 16762  01279A  6EE9               	movwf	fsr0l,c
 16763  01279C  0EFF               	movlw	255
 16764  01279E  20E2               	addwfc	fsr1h,w,c
 16765  0127A0  6EEA               	movwf	fsr0h,c
 16766  0127A2  50EF               	movf	indf0,w,c
 16767  0127A4  26DE               	addwf	postinc2,f,c
 16768  0127A6  0E00               	movlw	0
 16769  0127A8  22DE               	addwfc	postinc2,f,c
 16770  0127AA  22DE               	addwfc	postinc2,f,c
 16771  0127AC  22DE               	addwfc	postinc2,f,c
 16772                           
 16773                           ;stkvar	_grs @ sp[(-13)+4]
 16774  0127AE  50E1               	movf	fsr1l,w,c
 16775  0127B0  0FF7               	addlw	-9
 16776  0127B2  6ED9               	movwf	fsr2l,c
 16777  0127B4  50E2               	movf	fsr1h,w,c
 16778  0127B6  6EDA               	movwf	fsr2h,c
 16779  0127B8  0EFF               	movlw	255
 16780  0127BA  22DA               	addwfc	fsr2h,f,c
 16781  0127BC  0E08               	movlw	8
 16782  0127BE                     u6035:
 16783  0127BE  90D8               	bcf	status,0,c
 16784  0127C0  36DE               	rlcf	postinc2,f,c
 16785  0127C2  36DE               	rlcf	postinc2,f,c
 16786  0127C4  36DE               	rlcf	postinc2,f,c
 16787  0127C6  36DD               	rlcf	postdec2,f,c
 16788  0127C8  52DD               	movf	postdec2,f,c
 16789  0127CA  52DD               	movf	postdec2,f,c
 16790  0127CC  2EE8               	decfsz	wreg,f,c
 16791  0127CE  D7F7               	goto	u6035
 16792  0127D0  0E82               	movlw	130
 16793  0127D2  6E3F               	movwf	(btemp+10)^0,c
 16794  0127D4  0EFF               	movlw	255
 16795  0127D6  6E40               	movwf	(btemp+11)^0,c
 16796                           
 16797                           ;stkvar	_bexp @ sp[(-13)+10]
 16798  0127D8  0EFD               	movlw	-3
 16799  0127DA  50E3               	movf	plusw1,w,c
 16800  0127DC  6E3D               	movwf	(btemp+8)^0,c
 16801  0127DE  6A3E               	clrf	(btemp+9)^0,c
 16802                           
 16803                           ;stkvar	_aexp @ sp[(-13)+11]
 16804  0127E0  0EFE               	movlw	-2
 16805  0127E2  50E3               	movf	plusw1,w,c
 16806  0127E4  263D               	addwf	(btemp+8)^0,f,c
 16807  0127E6  0E00               	movlw	0
 16808  0127E8  223E               	addwfc	(btemp+9)^0,f,c
 16809  0127EA  503F               	movf	(btemp+10)^0,w,c
 16810  0127EC  263D               	addwf	(btemp+8)^0,f,c
 16811  0127EE  5040               	movf	(btemp+11)^0,w,c
 16812  0127F0  223E               	addwfc	(btemp+9)^0,f,c
 16813                           
 16814                           ;stkvar	_temp @ sp[(-13)+8]
 16815  0127F2  0EFB               	movlw	-5
 16816  0127F4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16817  0127FA  0EFC               	movlw	-4
 16818  0127FC  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16819  012802  D021               	goto	l6834
 16820  012804                     l6824:
 16821                           
 16822                           ;stkvar	_prod @ sp[(-13)+0]
 16823  012804  90D8               	bcf	status,0,c
 16824  012806  0EF3               	movlw	-13
 16825  012808  36E3               	rlcf	plusw1,f,c
 16826  01280A  0EF4               	movlw	-12
 16827  01280C  36E3               	rlcf	plusw1,f,c
 16828  01280E  0EF5               	movlw	-11
 16829  012810  36E3               	rlcf	plusw1,f,c
 16830  012812  0EF6               	movlw	-10
 16831  012814  36E3               	rlcf	plusw1,f,c
 16832                           
 16833                           ;stkvar	_grs @ sp[(-13)+4]
 16834  012816  0EFA               	movlw	-6
 16835  012818  AEE3               	btfss	plusw1,7,c
 16836  01281A  D002               	goto	l6830
 16837                           
 16838                           ;stkvar	_prod @ sp[(-13)+0]
 16839  01281C  0EF3               	movlw	-13
 16840  01281E  80E3               	bsf	plusw1,0,c
 16841  012820                     l6830:
 16842                           
 16843                           ;stkvar	_grs @ sp[(-13)+4]
 16844  012820  90D8               	bcf	status,0,c
 16845  012822  0EF7               	movlw	-9
 16846  012824  36E3               	rlcf	plusw1,f,c
 16847  012826  0EF8               	movlw	-8
 16848  012828  36E3               	rlcf	plusw1,f,c
 16849  01282A  0EF9               	movlw	-7
 16850  01282C  36E3               	rlcf	plusw1,f,c
 16851  01282E  0EFA               	movlw	-6
 16852  012830  36E3               	rlcf	plusw1,f,c
 16853                           
 16854                           ;stkvar	_temp @ sp[(-13)+8]
 16855  012832  50E1               	movf	fsr1l,w,c
 16856  012834  0FFB               	addlw	-5
 16857  012836  6ED9               	movwf	fsr2l,c
 16858  012838  50E2               	movf	fsr1h,w,c
 16859  01283A  6EDA               	movwf	fsr2h,c
 16860  01283C  0EFF               	movlw	255
 16861  01283E  22DA               	addwfc	fsr2h,f,c
 16862  012840  06DE               	decf	postinc2,f,c
 16863  012842  0E00               	movlw	0
 16864  012844  5ADD               	subwfb	postdec2,f,c
 16865  012846                     l6834:
 16866                           
 16867                           ;stkvar	_prod @ sp[(-13)+0]
 16868  012846  0EF5               	movlw	-11
 16869  012848  AEE3               	btfss	plusw1,7,c
 16870  01284A  D7DC               	goto	l6824
 16871                           
 16872                           ;stkvar	_aexp @ sp[(-13)+11]
 16873  01284C  0EFE               	movlw	-2
 16874  01284E  6AE3               	clrf	plusw1,c
 16875                           
 16876                           ;stkvar	_grs @ sp[(-13)+4]
 16877  012850  0EFA               	movlw	-6
 16878  012852  AEE3               	btfss	plusw1,7,c
 16879  012854  D020               	goto	l6848
 16880                           
 16881                           ;stkvar	_grs @ sp[(-13)+4]
 16882  012856  50E1               	movf	fsr1l,w,c
 16883  012858  0FF7               	addlw	-9
 16884  01285A  6ED9               	movwf	fsr2l,c
 16885  01285C  50E2               	movf	fsr1h,w,c
 16886  01285E  6EDA               	movwf	fsr2h,c
 16887  012860  0EFF               	movlw	255
 16888  012862  22DA               	addwfc	fsr2h,f,c
 16889  012864  0EFF               	movlw	255
 16890  012866  14DE               	andwf	postinc2,w,c
 16891  012868  6E3D               	movwf	(btemp+8)^0,c
 16892  01286A  0EFF               	movlw	255
 16893  01286C  14DE               	andwf	postinc2,w,c
 16894  01286E  6E3E               	movwf	(btemp+9)^0,c
 16895  012870  0EFF               	movlw	255
 16896  012872  14DE               	andwf	postinc2,w,c
 16897  012874  6E3F               	movwf	(btemp+10)^0,c
 16898  012876  0E7F               	movlw	127
 16899  012878  14DE               	andwf	postinc2,w,c
 16900  01287A  6E40               	movwf	(btemp+11)^0,c
 16901  01287C  503D               	movf	(btemp+8)^0,w,c
 16902  01287E  103E               	iorwf	(btemp+9)^0,w,c
 16903  012880  103F               	iorwf	(btemp+10)^0,w,c
 16904  012882  1040               	iorwf	(btemp+11)^0,w,c
 16905  012884  B4D8               	btfsc	status,2,c
 16906  012886  D004               	goto	l6844
 16907  012888                     u6070:
 16908                           
 16909                           ;stkvar	_aexp @ sp[(-13)+11]
 16910  012888  0EFE               	movlw	-2
 16911  01288A  6AE3               	clrf	plusw1,c
 16912  01288C  2AE3               	incf	plusw1,f,c
 16913  01288E  D003               	goto	l6848
 16914  012890                     l6844:
 16915                           
 16916                           ;stkvar	_prod @ sp[(-13)+0]
 16917  012890  0EF3               	movlw	-13
 16918  012892  B0E3               	btfsc	plusw1,0,c
 16919  012894  D7F9               	goto	u6070
 16920  012896                     l6848:
 16921                           
 16922                           ;stkvar	_aexp @ sp[(-13)+11]
 16923  012896  0EFE               	movlw	-2
 16924  012898  50E3               	movf	plusw1,w,c
 16925  01289A  B4D8               	btfsc	status,2,c
 16926  01289C  D036               	goto	l6858
 16927                           
 16928                           ;stkvar	_prod @ sp[(-13)+0]
 16929  01289E  50E1               	movf	fsr1l,w,c
 16930  0128A0  0FF3               	addlw	-13
 16931  0128A2  6ED9               	movwf	fsr2l,c
 16932  0128A4  50E2               	movf	fsr1h,w,c
 16933  0128A6  6EDA               	movwf	fsr2h,c
 16934  0128A8  0EFF               	movlw	255
 16935  0128AA  22DA               	addwfc	fsr2h,f,c
 16936  0128AC  2ADE               	incf	postinc2,f,c
 16937  0128AE  0E00               	movlw	0
 16938  0128B0  22DE               	addwfc	postinc2,f,c
 16939  0128B2  22DE               	addwfc	postinc2,f,c
 16940  0128B4  22DE               	addwfc	postinc2,f,c
 16941                           
 16942                           ;stkvar	_prod @ sp[(-13)+0]
 16943  0128B6  0EF6               	movlw	-10
 16944  0128B8  A0E3               	btfss	plusw1,0,c
 16945  0128BA  D027               	goto	l6858
 16946  0128BC  0E01               	movlw	1
 16947  0128BE  6E40               	movwf	(btemp+11)^0,c
 16948                           
 16949                           ;stkvar	_prod @ sp[(-13)+0]
 16950  0128C0  50E1               	movf	fsr1l,w,c
 16951  0128C2  0FF3               	addlw	-13
 16952  0128C4  6ED9               	movwf	fsr2l,c
 16953  0128C6  50E2               	movf	fsr1h,w,c
 16954  0128C8  6EDA               	movwf	fsr2h,c
 16955  0128CA  0EFF               	movlw	255
 16956  0128CC  22DA               	addwfc	fsr2h,f,c
 16957  0128CE  2840               	incf	(btemp+11)^0,w,c
 16958  0128D0  52DE               	movf	postinc2,f,c
 16959  0128D2  D008               	goto	u6110
 16960  0128D4                     u6115:
 16961  0128D4  52DE               	movf	postinc2,f,c
 16962  0128D6  90D8               	bcf	status,0,c
 16963  0128D8  BEDC               	btfsc	preinc2,7,c
 16964  0128DA  80D8               	bsf	status,0,c
 16965  0128DC  32DD               	rrcf	postdec2,f,c
 16966  0128DE  32DD               	rrcf	postdec2,f,c
 16967  0128E0  32DD               	rrcf	postdec2,f,c
 16968  0128E2  32DE               	rrcf	postinc2,f,c
 16969  0128E4                     u6110:
 16970  0128E4  2EE8               	decfsz	wreg,f,c
 16971  0128E6  D7F6               	goto	u6115
 16972                           
 16973                           ;stkvar	_temp @ sp[(-13)+8]
 16974  0128E8  0EFB               	movlw	-5
 16975  0128EA  50E3               	movf	plusw1,w,c
 16976  0128EC  0F01               	addlw	1
 16977  0128EE  6E35               	movwf	btemp^0,c
 16978  0128F0  0EFB               	movlw	-5
 16979  0128F2  0060  F0D7  FFE3   	movff	btemp,plusw1
 16980  0128F8  6A35               	clrf	btemp^0,c
 16981  0128FA  0EFC               	movlw	-4
 16982  0128FC  50E3               	movf	plusw1,w,c
 16983  0128FE  2035               	addwfc	btemp^0,w,c
 16984  012900  6E35               	movwf	btemp^0,c
 16985  012902  0EFC               	movlw	-4
 16986  012904  0060  F0D7  FFE3   	movff	btemp,plusw1
 16987  01290A                     l6858:
 16988                           
 16989                           ;stkvar	_temp @ sp[(-13)+8]
 16990  01290A  0EFC               	movlw	-4
 16991  01290C  BEE3               	btfsc	plusw1,7,c
 16992  01290E  D020               	goto	l6862
 16993  012910  0EFC               	movlw	-4
 16994  012912  50E3               	movf	plusw1,w,c
 16995  012914  E104               	bnz	u6120
 16996  012916  0EFB               	movlw	-5
 16997  012918  28E3               	incf	plusw1,w,c
 16998  01291A  A0D8               	btfss	status,0,c
 16999  01291C  D019               	goto	l6862
 17000  01291E                     u6120:
 17001  01291E  0E00               	movlw	0
 17002  012920  6E3D               	movwf	(btemp+8)^0,c
 17003  012922  0E00               	movlw	0
 17004  012924  6E3E               	movwf	(btemp+9)^0,c
 17005  012926  0E80               	movlw	128
 17006  012928  6E3F               	movwf	(btemp+10)^0,c
 17007  01292A  0E7F               	movlw	127
 17008  01292C  6E40               	movwf	(btemp+11)^0,c
 17009                           
 17010                           ;stkvar	_prod @ sp[(-13)+0]
 17011  01292E  0EF3               	movlw	-13
 17012  012930  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17013  012936  0EF4               	movlw	-12
 17014  012938  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17015  01293E  0EF5               	movlw	-11
 17016  012940  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17017  012946  0EF6               	movlw	-10
 17018  012948  0060  F103  FFE3   	movff	btemp+11,plusw1
 17019  01294E  D044               	goto	l6878
 17020  012950                     l6862:
 17021                           
 17022                           ;stkvar	_temp @ sp[(-13)+8]
 17023  012950  0EFC               	movlw	-4
 17024  012952  BEE3               	btfsc	plusw1,7,c
 17025  012954  D007               	goto	u6130
 17026  012956  0EFC               	movlw	-4
 17027  012958  50E3               	movf	plusw1,w,c
 17028  01295A  E10F               	bnz	l6868
 17029  01295C  0EFB               	movlw	-5
 17030  01295E  04E3               	decf	plusw1,w,c
 17031  012960  B0D8               	btfsc	status,0,c
 17032  012962  D00B               	goto	l6868
 17033  012964                     u6130:
 17034                           
 17035                           ;stkvar	_prod @ sp[(-13)+0]
 17036  012964  0EF3               	movlw	-13
 17037  012966  6AE3               	clrf	plusw1,c
 17038  012968  0EF4               	movlw	-12
 17039  01296A  6AE3               	clrf	plusw1,c
 17040  01296C  0EF5               	movlw	-11
 17041  01296E  6AE3               	clrf	plusw1,c
 17042  012970  0EF6               	movlw	-10
 17043  012972  6AE3               	clrf	plusw1,c
 17044                           
 17045                           ;stkvar	_sign @ sp[(-13)+12]
 17046  012974  0EFF               	movlw	-1
 17047  012976  6AE3               	clrf	plusw1,c
 17048  012978  D02F               	goto	l6878
 17049  01297A                     l6868:
 17050                           
 17051                           ;stkvar	_temp @ sp[(-13)+8]
 17052                           ;stkvar	_bexp @ sp[(-13)+10]
 17053  01297A  0EFB               	movlw	-5
 17054  01297C  006F FF8C  F035    	movff	plusw1,btemp
 17055  012982  0EFD               	movlw	-3
 17056  012984  0060  F0D7  FFE3   	movff	btemp,plusw1
 17057                           
 17058                           ;stkvar	_prod @ sp[(-13)+0]
 17059  01298A  50E1               	movf	fsr1l,w,c
 17060  01298C  0FF3               	addlw	-13
 17061  01298E  6ED9               	movwf	fsr2l,c
 17062  012990  50E2               	movf	fsr1h,w,c
 17063  012992  6EDA               	movwf	fsr2h,c
 17064  012994  0EFF               	movlw	255
 17065  012996  22DA               	addwfc	fsr2h,f,c
 17066  012998  0EFF               	movlw	255
 17067  01299A  16DE               	andwf	postinc2,f,c
 17068  01299C  0EFF               	movlw	255
 17069  01299E  16DE               	andwf	postinc2,f,c
 17070  0129A0  0E7F               	movlw	127
 17071  0129A2  16DE               	andwf	postinc2,f,c
 17072  0129A4  0E00               	movlw	0
 17073  0129A6  16DE               	andwf	postinc2,f,c
 17074                           
 17075                           ;stkvar	_bexp @ sp[(-13)+10]
 17076  0129A8  0EFD               	movlw	-3
 17077  0129AA  A0E3               	btfss	plusw1,0,c
 17078  0129AC  D008               	goto	l6876
 17079                           
 17080                           ;stkvar	_prod @ sp[(-13)+0]
 17081  0129AE  0EF5               	movlw	245
 17082  0129B0  24E1               	addwf	fsr1l,w,c
 17083  0129B2  6ED9               	movwf	fsr2l,c
 17084  0129B4  0EFF               	movlw	255
 17085  0129B6  20E2               	addwfc	fsr1h,w,c
 17086  0129B8  6EDA               	movwf	fsr2h,c
 17087  0129BA  0E00               	movlw	0
 17088  0129BC  8EDB               	bsf	plusw2,7,c
 17089  0129BE                     l6876:
 17090                           
 17091                           ;stkvar	_prod @ sp[(-13)+0]
 17092  0129BE  0EF6               	movlw	246
 17093  0129C0  24E1               	addwf	fsr1l,w,c
 17094  0129C2  6ED9               	movwf	fsr2l,c
 17095  0129C4  0EFF               	movlw	255
 17096  0129C6  20E2               	addwfc	fsr1h,w,c
 17097  0129C8  6EDA               	movwf	fsr2h,c
 17098                           
 17099                           ;stkvar	_bexp @ sp[(-13)+10]
 17100  0129CA  0EFD               	movlw	-3
 17101  0129CC  006F FF8C  F040    	movff	plusw1,btemp+11
 17102  0129D2  90D8               	bcf	status,0,c
 17103  0129D4  3040               	rrcf	(btemp+11)^0,w,c
 17104  0129D6  6EDF               	movwf	indf2,c
 17105  0129D8                     l6878:
 17106                           
 17107                           ;stkvar	_sign @ sp[(-13)+12]
 17108  0129D8  0EFF               	movlw	-1
 17109  0129DA  006F FF8C  F040    	movff	plusw1,btemp+11
 17110                           
 17111                           ;stkvar	_prod @ sp[(-13)+0]
 17112  0129E0  0EF6               	movlw	246
 17113  0129E2  24E1               	addwf	fsr1l,w,c
 17114  0129E4  6ED9               	movwf	fsr2l,c
 17115  0129E6  0EFF               	movlw	255
 17116  0129E8  20E2               	addwfc	fsr1h,w,c
 17117  0129EA  6EDA               	movwf	fsr2h,c
 17118  0129EC  5040               	movf	(btemp+11)^0,w,c
 17119  0129EE  12DF               	iorwf	indf2,f,c
 17120                           
 17121                           ;stkvar	_prod @ sp[(-13)+0]
 17122  0129F0  0EF3               	movlw	-13
 17123  0129F2  006F FF8C  F035    	movff	plusw1,btemp
 17124  0129F8  0EF4               	movlw	-12
 17125  0129FA  006F FF8C  F036    	movff	plusw1,btemp+1
 17126  012A00  0EF5               	movlw	-11
 17127  012A02  006F FF8C  F037    	movff	plusw1,btemp+2
 17128  012A08  0EF6               	movlw	-10
 17129  012A0A  006F FF8C  F038    	movff	plusw1,btemp+3
 17130  012A10                     l2629:
 17131                           
 17132                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 17133  012A10  0EEB               	movlw	235
 17134  012A12  26E1               	addwf	fsr1l,f,c
 17135  012A14  0EFF               	movlw	255
 17136  012A16  22E2               	addwfc	fsr1h,f,c
 17137  012A18  0012               	return		;funcret
 17138  012A1A                     __end_of___flmul:
 17139                           	opt callstack 0
 17140                           
 17141 ;; *************** function ___flge *****************
 17142 ;; Defined at:
 17143 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 17144 ;; Parameters:    Size  Location     Type
 17145 ;;  ff1             4  [STACK] unsigned char 
 17146 ;;  ff2             4  [STACK] unsigned char 
 17147 ;; Auto vars:     Size  Location     Type
 17148 ;;		None
 17149 ;; Return value:  Size  Location     Type
 17150 ;;		None               void
 17151 ;; Registers used:
 17152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17153 ;; Tracked objects:
 17154 ;;		On entry : 0/4
 17155 ;;		On exit  : 0/0
 17156 ;;		Unchanged: 0/0
 17157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17162 ;;Total ram usage:        0 bytes
 17163 ;; Hardware stack levels used:    1
 17164 ;; Hardware stack levels required when called:    6
 17165 ;; This function calls:
 17166 ;;		Nothing
 17167 ;; This function is called by:
 17168 ;;		_efgtoa
 17169 ;; This function uses a reentrant model
 17170 ;;
 17171                           
 17172                           	psect	text56
 17173  01694E                     __ptext56:
 17174                           	opt callstack 0
 17175  01694E                     ___flge:
 17176                           	opt callstack 17
 17177                           
 17178                           ;stkvar	_ff1 @ sp[(0)+-4]
 17179                           
 17180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17181                           ;incstack = 0
 17182  01694E  50E1               	movf	fsr1l,w,c
 17183  016950  0FFC               	addlw	-4
 17184  016952  6ED9               	movwf	fsr2l,c
 17185  016954  50E2               	movf	fsr1h,w,c
 17186  016956  6EDA               	movwf	fsr2h,c
 17187  016958  0EFF               	movlw	255
 17188  01695A  22DA               	addwfc	fsr2h,f,c
 17189  01695C  0E00               	movlw	0
 17190  01695E  14DE               	andwf	postinc2,w,c
 17191  016960  6E3D               	movwf	(btemp+8)^0,c
 17192  016962  0E00               	movlw	0
 17193  016964  14DE               	andwf	postinc2,w,c
 17194  016966  6E3E               	movwf	(btemp+9)^0,c
 17195  016968  0E80               	movlw	128
 17196  01696A  14DE               	andwf	postinc2,w,c
 17197  01696C  6E3F               	movwf	(btemp+10)^0,c
 17198  01696E  0E7F               	movlw	127
 17199  016970  14DE               	andwf	postinc2,w,c
 17200  016972  6E40               	movwf	(btemp+11)^0,c
 17201  016974  503D               	movf	(btemp+8)^0,w,c
 17202  016976  103E               	iorwf	(btemp+9)^0,w,c
 17203  016978  103F               	iorwf	(btemp+10)^0,w,c
 17204  01697A  1040               	iorwf	(btemp+11)^0,w,c
 17205  01697C  A4D8               	btfss	status,2,c
 17206  01697E  D008               	goto	l6994
 17207                           
 17208                           ;stkvar	_ff1 @ sp[(0)+-4]
 17209  016980  0EFC               	movlw	-4
 17210  016982  6AE3               	clrf	plusw1,c
 17211  016984  0EFD               	movlw	-3
 17212  016986  6AE3               	clrf	plusw1,c
 17213  016988  0EFE               	movlw	-2
 17214  01698A  6AE3               	clrf	plusw1,c
 17215  01698C  0EFF               	movlw	-1
 17216  01698E  6AE3               	clrf	plusw1,c
 17217  016990                     l6994:
 17218                           
 17219                           ;stkvar	_ff2 @ sp[(0)+-8]
 17220  016990  50E1               	movf	fsr1l,w,c
 17221  016992  0FF8               	addlw	-8
 17222  016994  6ED9               	movwf	fsr2l,c
 17223  016996  50E2               	movf	fsr1h,w,c
 17224  016998  6EDA               	movwf	fsr2h,c
 17225  01699A  0EFF               	movlw	255
 17226  01699C  22DA               	addwfc	fsr2h,f,c
 17227  01699E  0E00               	movlw	0
 17228  0169A0  14DE               	andwf	postinc2,w,c
 17229  0169A2  6E3D               	movwf	(btemp+8)^0,c
 17230  0169A4  0E00               	movlw	0
 17231  0169A6  14DE               	andwf	postinc2,w,c
 17232  0169A8  6E3E               	movwf	(btemp+9)^0,c
 17233  0169AA  0E80               	movlw	128
 17234  0169AC  14DE               	andwf	postinc2,w,c
 17235  0169AE  6E3F               	movwf	(btemp+10)^0,c
 17236  0169B0  0E7F               	movlw	127
 17237  0169B2  14DE               	andwf	postinc2,w,c
 17238  0169B4  6E40               	movwf	(btemp+11)^0,c
 17239  0169B6  503D               	movf	(btemp+8)^0,w,c
 17240  0169B8  103E               	iorwf	(btemp+9)^0,w,c
 17241  0169BA  103F               	iorwf	(btemp+10)^0,w,c
 17242  0169BC  1040               	iorwf	(btemp+11)^0,w,c
 17243  0169BE  A4D8               	btfss	status,2,c
 17244  0169C0  D008               	goto	l2274
 17245                           
 17246                           ;stkvar	_ff2 @ sp[(0)+-8]
 17247  0169C2  0EF8               	movlw	-8
 17248  0169C4  6AE3               	clrf	plusw1,c
 17249  0169C6  0EF9               	movlw	-7
 17250  0169C8  6AE3               	clrf	plusw1,c
 17251  0169CA  0EFA               	movlw	-6
 17252  0169CC  6AE3               	clrf	plusw1,c
 17253  0169CE  0EFB               	movlw	-5
 17254  0169D0  6AE3               	clrf	plusw1,c
 17255  0169D2                     l2274:
 17256                           
 17257                           ;stkvar	_ff1 @ sp[(0)+-4]
 17258  0169D2  0EFF               	movlw	-1
 17259  0169D4  AEE3               	btfss	plusw1,7,c
 17260  0169D6  D024               	goto	l7000
 17261                           
 17262                           ;stkvar	_ff1 @ sp[(0)+-4]
 17263  0169D8  0E00               	movlw	0
 17264  0169DA  6E3D               	movwf	(btemp+8)^0,c
 17265  0169DC  0E00               	movlw	0
 17266  0169DE  6E3E               	movwf	(btemp+9)^0,c
 17267  0169E0  0E00               	movlw	0
 17268  0169E2  6E3F               	movwf	(btemp+10)^0,c
 17269  0169E4  0E80               	movlw	128
 17270  0169E6  6E40               	movwf	(btemp+11)^0,c
 17271  0169E8  0EFC               	movlw	-4
 17272  0169EA  50E3               	movf	plusw1,w,c
 17273  0169EC  5E3D               	subwf	(btemp+8)^0,f,c
 17274  0169EE  0EFD               	movlw	-3
 17275  0169F0  50E3               	movf	plusw1,w,c
 17276  0169F2  5A3E               	subwfb	(btemp+9)^0,f,c
 17277  0169F4  0EFE               	movlw	-2
 17278  0169F6  50E3               	movf	plusw1,w,c
 17279  0169F8  5A3F               	subwfb	(btemp+10)^0,f,c
 17280  0169FA  0EFF               	movlw	-1
 17281  0169FC  50E3               	movf	plusw1,w,c
 17282  0169FE  5A40               	subwfb	(btemp+11)^0,f,c
 17283                           
 17284                           ;stkvar	_ff1 @ sp[(0)+-4]
 17285  016A00  0EFC               	movlw	-4
 17286  016A02  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17287  016A08  0EFD               	movlw	-3
 17288  016A0A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17289  016A10  0EFE               	movlw	-2
 17290  016A12  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17291  016A18  0EFF               	movlw	-1
 17292  016A1A  0060  F103  FFE3   	movff	btemp+11,plusw1
 17293  016A20                     l7000:
 17294                           
 17295                           ;stkvar	_ff2 @ sp[(0)+-8]
 17296  016A20  0EFB               	movlw	-5
 17297  016A22  AEE3               	btfss	plusw1,7,c
 17298  016A24  D024               	goto	l7004
 17299                           
 17300                           ;stkvar	_ff2 @ sp[(0)+-8]
 17301  016A26  0E00               	movlw	0
 17302  016A28  6E3D               	movwf	(btemp+8)^0,c
 17303  016A2A  0E00               	movlw	0
 17304  016A2C  6E3E               	movwf	(btemp+9)^0,c
 17305  016A2E  0E00               	movlw	0
 17306  016A30  6E3F               	movwf	(btemp+10)^0,c
 17307  016A32  0E80               	movlw	128
 17308  016A34  6E40               	movwf	(btemp+11)^0,c
 17309  016A36  0EF8               	movlw	-8
 17310  016A38  50E3               	movf	plusw1,w,c
 17311  016A3A  5E3D               	subwf	(btemp+8)^0,f,c
 17312  016A3C  0EF9               	movlw	-7
 17313  016A3E  50E3               	movf	plusw1,w,c
 17314  016A40  5A3E               	subwfb	(btemp+9)^0,f,c
 17315  016A42  0EFA               	movlw	-6
 17316  016A44  50E3               	movf	plusw1,w,c
 17317  016A46  5A3F               	subwfb	(btemp+10)^0,f,c
 17318  016A48  0EFB               	movlw	-5
 17319  016A4A  50E3               	movf	plusw1,w,c
 17320  016A4C  5A40               	subwfb	(btemp+11)^0,f,c
 17321                           
 17322                           ;stkvar	_ff2 @ sp[(0)+-8]
 17323  016A4E  0EF8               	movlw	-8
 17324  016A50  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17325  016A56  0EF9               	movlw	-7
 17326  016A58  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17327  016A5E  0EFA               	movlw	-6
 17328  016A60  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17329  016A66  0EFB               	movlw	-5
 17330  016A68  0060  F103  FFE3   	movff	btemp+11,plusw1
 17331  016A6E                     l7004:
 17332                           
 17333                           ;stkvar	_ff1 @ sp[(0)+-4]
 17334  016A6E  0EFF               	movlw	-1
 17335  016A70  7EE3               	btg	plusw1,7,c
 17336                           
 17337                           ;stkvar	_ff2 @ sp[(0)+-8]
 17338  016A72  0EFB               	movlw	-5
 17339  016A74  7EE3               	btg	plusw1,7,c
 17340                           
 17341                           ;stkvar	_ff2 @ sp[(0)+-8]
 17342                           ;stkvar	_ff1 @ sp[(0)+-4]
 17343  016A76  50E1               	movf	fsr1l,w,c
 17344  016A78  0FFC               	addlw	-4
 17345  016A7A  6ED9               	movwf	fsr2l,c
 17346  016A7C  50E2               	movf	fsr1h,w,c
 17347  016A7E  6EDA               	movwf	fsr2h,c
 17348  016A80  0EFF               	movlw	255
 17349  016A82  22DA               	addwfc	fsr2h,f,c
 17350  016A84  0EF8               	movlw	-8
 17351  016A86  50E3               	movf	plusw1,w,c
 17352  016A88  5CDE               	subwf	postinc2,w,c
 17353  016A8A  0EF9               	movlw	-7
 17354  016A8C  50E3               	movf	plusw1,w,c
 17355  016A8E  58DE               	subwfb	postinc2,w,c
 17356  016A90  0EFA               	movlw	-6
 17357  016A92  50E3               	movf	plusw1,w,c
 17358  016A94  58DE               	subwfb	postinc2,w,c
 17359  016A96  0EFB               	movlw	-5
 17360  016A98  50E3               	movf	plusw1,w,c
 17361  016A9A  58DE               	subwfb	postinc2,w,c
 17362  016A9C  B0D8               	btfsc	status,0,c
 17363  016A9E  D002               	goto	l7012
 17364  016AA0  9035               	bcf	btemp& (0+255),0,c
 17365  016AA2  D001               	goto	l2281
 17366  016AA4                     l7012:
 17367  016AA4  8035               	bsf	btemp& (0+255),0,c
 17368  016AA6                     l2281:
 17369                           
 17370                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17371  016AA6  0EF8               	movlw	248
 17372  016AA8  26E1               	addwf	fsr1l,f,c
 17373  016AAA  0EFF               	movlw	255
 17374  016AAC  22E2               	addwfc	fsr1h,f,c
 17375  016AAE  0012               	return		;funcret
 17376  016AB0                     __end_of___flge:
 17377                           	opt callstack 0
 17378                           
 17379 ;; *************** function ___fleq *****************
 17380 ;; Defined at:
 17381 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 17382 ;; Parameters:    Size  Location     Type
 17383 ;;  ff1             4  [STACK] unsigned char 
 17384 ;;  ff2             4  [STACK] unsigned char 
 17385 ;; Auto vars:     Size  Location     Type
 17386 ;;		None
 17387 ;; Return value:  Size  Location     Type
 17388 ;;		None               void
 17389 ;; Registers used:
 17390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17391 ;; Tracked objects:
 17392 ;;		On entry : 0/4
 17393 ;;		On exit  : 0/0
 17394 ;;		Unchanged: 0/0
 17395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17400 ;;Total ram usage:        0 bytes
 17401 ;; Hardware stack levels used:    1
 17402 ;; Hardware stack levels required when called:    6
 17403 ;; This function calls:
 17404 ;;		Nothing
 17405 ;; This function is called by:
 17406 ;;		_efgtoa
 17407 ;; This function uses a reentrant model
 17408 ;;
 17409                           
 17410                           	psect	text57
 17411  017658                     __ptext57:
 17412                           	opt callstack 0
 17413  017658                     ___fleq:
 17414                           	opt callstack 17
 17415                           
 17416                           ;stkvar	_ff1 @ sp[(0)+-4]
 17417                           
 17418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17419                           ;incstack = 0
 17420  017658  50E1               	movf	fsr1l,w,c
 17421  01765A  0FFC               	addlw	-4
 17422  01765C  6ED9               	movwf	fsr2l,c
 17423  01765E  50E2               	movf	fsr1h,w,c
 17424  017660  6EDA               	movwf	fsr2h,c
 17425  017662  0EFF               	movlw	255
 17426  017664  22DA               	addwfc	fsr2h,f,c
 17427  017666  0E00               	movlw	0
 17428  017668  14DE               	andwf	postinc2,w,c
 17429  01766A  6E3D               	movwf	(btemp+8)^0,c
 17430  01766C  0E00               	movlw	0
 17431  01766E  14DE               	andwf	postinc2,w,c
 17432  017670  6E3E               	movwf	(btemp+9)^0,c
 17433  017672  0E80               	movlw	128
 17434  017674  14DE               	andwf	postinc2,w,c
 17435  017676  6E3F               	movwf	(btemp+10)^0,c
 17436  017678  0E7F               	movlw	127
 17437  01767A  14DE               	andwf	postinc2,w,c
 17438  01767C  6E40               	movwf	(btemp+11)^0,c
 17439  01767E  503D               	movf	(btemp+8)^0,w,c
 17440  017680  103E               	iorwf	(btemp+9)^0,w,c
 17441  017682  103F               	iorwf	(btemp+10)^0,w,c
 17442  017684  1040               	iorwf	(btemp+11)^0,w,c
 17443  017686  A4D8               	btfss	status,2,c
 17444  017688  D008               	goto	l6978
 17445                           
 17446                           ;stkvar	_ff1 @ sp[(0)+-4]
 17447  01768A  0EFC               	movlw	-4
 17448  01768C  6AE3               	clrf	plusw1,c
 17449  01768E  0EFD               	movlw	-3
 17450  017690  6AE3               	clrf	plusw1,c
 17451  017692  0EFE               	movlw	-2
 17452  017694  6AE3               	clrf	plusw1,c
 17453  017696  0EFF               	movlw	-1
 17454  017698  6AE3               	clrf	plusw1,c
 17455  01769A                     l6978:
 17456                           
 17457                           ;stkvar	_ff2 @ sp[(0)+-8]
 17458  01769A  50E1               	movf	fsr1l,w,c
 17459  01769C  0FF8               	addlw	-8
 17460  01769E  6ED9               	movwf	fsr2l,c
 17461  0176A0  50E2               	movf	fsr1h,w,c
 17462  0176A2  6EDA               	movwf	fsr2h,c
 17463  0176A4  0EFF               	movlw	255
 17464  0176A6  22DA               	addwfc	fsr2h,f,c
 17465  0176A8  0E00               	movlw	0
 17466  0176AA  14DE               	andwf	postinc2,w,c
 17467  0176AC  6E3D               	movwf	(btemp+8)^0,c
 17468  0176AE  0E00               	movlw	0
 17469  0176B0  14DE               	andwf	postinc2,w,c
 17470  0176B2  6E3E               	movwf	(btemp+9)^0,c
 17471  0176B4  0E80               	movlw	128
 17472  0176B6  14DE               	andwf	postinc2,w,c
 17473  0176B8  6E3F               	movwf	(btemp+10)^0,c
 17474  0176BA  0E7F               	movlw	127
 17475  0176BC  14DE               	andwf	postinc2,w,c
 17476  0176BE  6E40               	movwf	(btemp+11)^0,c
 17477  0176C0  503D               	movf	(btemp+8)^0,w,c
 17478  0176C2  103E               	iorwf	(btemp+9)^0,w,c
 17479  0176C4  103F               	iorwf	(btemp+10)^0,w,c
 17480  0176C6  1040               	iorwf	(btemp+11)^0,w,c
 17481  0176C8  A4D8               	btfss	status,2,c
 17482  0176CA  D008               	goto	l6982
 17483                           
 17484                           ;stkvar	_ff2 @ sp[(0)+-8]
 17485  0176CC  0EF8               	movlw	-8
 17486  0176CE  6AE3               	clrf	plusw1,c
 17487  0176D0  0EF9               	movlw	-7
 17488  0176D2  6AE3               	clrf	plusw1,c
 17489  0176D4  0EFA               	movlw	-6
 17490  0176D6  6AE3               	clrf	plusw1,c
 17491  0176D8  0EFB               	movlw	-5
 17492  0176DA  6AE3               	clrf	plusw1,c
 17493  0176DC                     l6982:
 17494                           
 17495                           ;stkvar	_ff2 @ sp[(0)+-8]
 17496                           ;stkvar	_ff1 @ sp[(0)+-4]
 17497  0176DC  50E1               	movf	fsr1l,w,c
 17498  0176DE  0FFC               	addlw	-4
 17499  0176E0  6ED9               	movwf	fsr2l,c
 17500  0176E2  50E2               	movf	fsr1h,w,c
 17501  0176E4  6EDA               	movwf	fsr2h,c
 17502  0176E6  0EFF               	movlw	255
 17503  0176E8  22DA               	addwfc	fsr2h,f,c
 17504  0176EA  0EF8               	movlw	-8
 17505  0176EC  50E3               	movf	plusw1,w,c
 17506  0176EE  18DE               	xorwf	postinc2,w,c
 17507  0176F0  E10D               	bnz	u6310
 17508  0176F2  0EF9               	movlw	-7
 17509  0176F4  50E3               	movf	plusw1,w,c
 17510  0176F6  18DE               	xorwf	postinc2,w,c
 17511  0176F8  E109               	bnz	u6310
 17512  0176FA  0EFA               	movlw	-6
 17513  0176FC  50E3               	movf	plusw1,w,c
 17514  0176FE  18DE               	xorwf	postinc2,w,c
 17515  017700  E105               	bnz	u6310
 17516  017702  0EFB               	movlw	-5
 17517  017704  50E3               	movf	plusw1,w,c
 17518  017706  18DE               	xorwf	postinc2,w,c
 17519  017708  B4D8               	btfsc	status,2,c
 17520  01770A  D002               	goto	l6986
 17521  01770C                     u6310:
 17522  01770C  9035               	bcf	btemp& (0+255),0,c
 17523  01770E  D001               	goto	l2270
 17524  017710                     l6986:
 17525  017710  8035               	bsf	btemp& (0+255),0,c
 17526  017712                     l2270:
 17527                           
 17528                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17529  017712  0EF8               	movlw	248
 17530  017714  26E1               	addwf	fsr1l,f,c
 17531  017716  0EFF               	movlw	255
 17532  017718  22E2               	addwfc	fsr1h,f,c
 17533  01771A  0012               	return		;funcret
 17534  01771C                     __end_of___fleq:
 17535                           	opt callstack 0
 17536                           
 17537 ;; *************** function ___fldiv *****************
 17538 ;; Defined at:
 17539 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 17540 ;; Parameters:    Size  Location     Type
 17541 ;;  b               4  [STACK] unsigned char 
 17542 ;;  a               4  [STACK] unsigned char 
 17543 ;; Auto vars:     Size  Location     Type
 17544 ;;  grs             4  [STACK] unsigned long 
 17545 ;;  rem             4  [STACK] unsigned long 
 17546 ;;  new_exp         2  [STACK] short 
 17547 ;;  aexp            1  [STACK] unsigned char 
 17548 ;;  bexp            1  [STACK] unsigned char 
 17549 ;;  sign            1  [STACK] unsigned char 
 17550 ;; Return value:  Size  Location     Type
 17551 ;;                  4  [STACK] unsigned char 
 17552 ;; Registers used:
 17553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17554 ;; Tracked objects:
 17555 ;;		On entry : 0/4
 17556 ;;		On exit  : 0/0
 17557 ;;		Unchanged: 0/0
 17558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17563 ;;Total ram usage:        0 bytes
 17564 ;; Hardware stack levels used:    1
 17565 ;; Hardware stack levels required when called:    6
 17566 ;; This function calls:
 17567 ;;		Nothing
 17568 ;; This function is called by:
 17569 ;;		_conv_raw_result
 17570 ;;		_efgtoa
 17571 ;; This function uses a reentrant model
 17572 ;;
 17573                           
 17574                           	psect	text58
 17575  0137A0                     __ptext58:
 17576                           	opt callstack 0
 17577  0137A0                     ___fldiv:
 17578                           	opt callstack 0
 17579                           
 17580                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17581  0137A0  0E0D               	movlw	13
 17582  0137A2  26E1               	addwf	fsr1l,f,c
 17583  0137A4  0E00               	movlw	0
 17584  0137A6  22E2               	addwfc	fsr1h,f,c
 17585                           
 17586                           ;stkvar	_b @ sp[(-13)+-4]
 17587                           
 17588                           ;incstack = 0
 17589  0137A8  0EF2               	movlw	242
 17590  0137AA  24E1               	addwf	fsr1l,w,c
 17591  0137AC  6ED9               	movwf	fsr2l,c
 17592  0137AE  0EFF               	movlw	255
 17593  0137B0  20E2               	addwfc	fsr1h,w,c
 17594  0137B2  6EDA               	movwf	fsr2h,c
 17595  0137B4  50DF               	movf	indf2,w,c
 17596  0137B6  6E40               	movwf	(btemp+11)^0,c
 17597  0137B8  0E80               	movlw	128
 17598  0137BA  1640               	andwf	(btemp+11)^0,f,c
 17599                           
 17600                           ;stkvar	_sign @ sp[(-13)+12]
 17601  0137BC  0EFF               	movlw	-1
 17602  0137BE  0060  F103  FFE3   	movff	btemp+11,plusw1
 17603                           
 17604                           ;stkvar	_b @ sp[(-13)+-4]
 17605  0137C4  0EF2               	movlw	242
 17606  0137C6  24E1               	addwf	fsr1l,w,c
 17607  0137C8  6ED9               	movwf	fsr2l,c
 17608  0137CA  0EFF               	movlw	255
 17609  0137CC  20E2               	addwfc	fsr1h,w,c
 17610  0137CE  6EDA               	movwf	fsr2h,c
 17611  0137D0  50DF               	movf	indf2,w,c
 17612  0137D2  6E40               	movwf	(btemp+11)^0,c
 17613  0137D4  90D8               	bcf	status,0,c
 17614  0137D6  3440               	rlcf	(btemp+11)^0,w,c
 17615  0137D8  6E3F               	movwf	(btemp+10)^0,c
 17616                           
 17617                           ;stkvar	_bexp @ sp[(-13)+11]
 17618  0137DA  0EFE               	movlw	-2
 17619  0137DC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17620                           
 17621                           ;stkvar	_b @ sp[(-13)+-4]
 17622  0137E2  0EF1               	movlw	241
 17623  0137E4  24E1               	addwf	fsr1l,w,c
 17624  0137E6  6ED9               	movwf	fsr2l,c
 17625  0137E8  0EFF               	movlw	255
 17626  0137EA  20E2               	addwfc	fsr1h,w,c
 17627  0137EC  6EDA               	movwf	fsr2h,c
 17628  0137EE  AEDF               	btfss	indf2,7,c
 17629  0137F0  D002               	goto	l6580
 17630                           
 17631                           ;stkvar	_bexp @ sp[(-13)+11]
 17632  0137F2  0EFE               	movlw	-2
 17633  0137F4  80E3               	bsf	plusw1,0,c
 17634  0137F6                     l6580:
 17635                           
 17636                           ;stkvar	_bexp @ sp[(-13)+11]
 17637  0137F6  0EFE               	movlw	-2
 17638  0137F8  50E3               	movf	plusw1,w,c
 17639  0137FA  B4D8               	btfsc	status,2,c
 17640  0137FC  D027               	goto	l6590
 17641                           
 17642                           ;stkvar	_bexp @ sp[(-13)+11]
 17643  0137FE  0EFE               	movlw	-2
 17644  013800  28E3               	incf	plusw1,w,c
 17645  013802  A4D8               	btfss	status,2,c
 17646  013804  D018               	goto	l6586
 17647  013806  0E00               	movlw	0
 17648  013808  6E3D               	movwf	(btemp+8)^0,c
 17649  01380A  0E00               	movlw	0
 17650  01380C  6E3E               	movwf	(btemp+9)^0,c
 17651  01380E  0E00               	movlw	0
 17652  013810  6E3F               	movwf	(btemp+10)^0,c
 17653  013812  0E00               	movlw	0
 17654  013814  6E40               	movwf	(btemp+11)^0,c
 17655                           
 17656                           ;stkvar	_b @ sp[(-13)+-4]
 17657  013816  0EEF               	movlw	-17
 17658  013818  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17659  01381E  0EF0               	movlw	-16
 17660  013820  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17661  013826  0EF1               	movlw	-15
 17662  013828  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17663  01382E  0EF2               	movlw	-14
 17664  013830  0060  F103  FFE3   	movff	btemp+11,plusw1
 17665  013836                     l6586:
 17666                           
 17667                           ;stkvar	_b @ sp[(-13)+-4]
 17668  013836  0EF1               	movlw	-15
 17669  013838  8EE3               	bsf	plusw1,7,c
 17670                           
 17671                           ;stkvar	_b @ sp[(-13)+-4]
 17672  01383A  0EF2               	movlw	242
 17673  01383C  24E1               	addwf	fsr1l,w,c
 17674  01383E  6ED9               	movwf	fsr2l,c
 17675  013840  0EFF               	movlw	255
 17676  013842  20E2               	addwfc	fsr1h,w,c
 17677  013844  6EDA               	movwf	fsr2h,c
 17678  013846  0E00               	movlw	0
 17679  013848  6EDF               	movwf	indf2,c
 17680  01384A  D018               	goto	l6592
 17681  01384C                     l6590:
 17682  01384C  0E00               	movlw	0
 17683  01384E  6E3D               	movwf	(btemp+8)^0,c
 17684  013850  0E00               	movlw	0
 17685  013852  6E3E               	movwf	(btemp+9)^0,c
 17686  013854  0E00               	movlw	0
 17687  013856  6E3F               	movwf	(btemp+10)^0,c
 17688  013858  0E00               	movlw	0
 17689  01385A  6E40               	movwf	(btemp+11)^0,c
 17690                           
 17691                           ;stkvar	_b @ sp[(-13)+-4]
 17692  01385C  0EEF               	movlw	-17
 17693  01385E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17694  013864  0EF0               	movlw	-16
 17695  013866  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17696  01386C  0EF1               	movlw	-15
 17697  01386E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17698  013874  0EF2               	movlw	-14
 17699  013876  0060  F103  FFE3   	movff	btemp+11,plusw1
 17700  01387C                     l6592:
 17701                           
 17702                           ;stkvar	_a @ sp[(-13)+-8]
 17703  01387C  0EEE               	movlw	238
 17704  01387E  24E1               	addwf	fsr1l,w,c
 17705  013880  6ED9               	movwf	fsr2l,c
 17706  013882  0EFF               	movlw	255
 17707  013884  20E2               	addwfc	fsr1h,w,c
 17708  013886  6EDA               	movwf	fsr2h,c
 17709  013888  50DF               	movf	indf2,w,c
 17710  01388A  6E40               	movwf	(btemp+11)^0,c
 17711  01388C  0E80               	movlw	128
 17712  01388E  1640               	andwf	(btemp+11)^0,f,c
 17713                           
 17714                           ;stkvar	_sign @ sp[(-13)+12]
 17715  013890  50E1               	movf	fsr1l,w,c
 17716  013892  0FFF               	addlw	-1
 17717  013894  6ED9               	movwf	fsr2l,c
 17718  013896  50E2               	movf	fsr1h,w,c
 17719  013898  6EDA               	movwf	fsr2h,c
 17720  01389A  0EFF               	movlw	255
 17721  01389C  22DA               	addwfc	fsr2h,f,c
 17722  01389E  5040               	movf	(btemp+11)^0,w,c
 17723  0138A0  1ADF               	xorwf	indf2,f,c
 17724                           
 17725                           ;stkvar	_a @ sp[(-13)+-8]
 17726  0138A2  0EEE               	movlw	238
 17727  0138A4  24E1               	addwf	fsr1l,w,c
 17728  0138A6  6ED9               	movwf	fsr2l,c
 17729  0138A8  0EFF               	movlw	255
 17730  0138AA  20E2               	addwfc	fsr1h,w,c
 17731  0138AC  6EDA               	movwf	fsr2h,c
 17732  0138AE  50DF               	movf	indf2,w,c
 17733  0138B0  6E40               	movwf	(btemp+11)^0,c
 17734  0138B2  90D8               	bcf	status,0,c
 17735  0138B4  3440               	rlcf	(btemp+11)^0,w,c
 17736  0138B6  6E3F               	movwf	(btemp+10)^0,c
 17737                           
 17738                           ;stkvar	_aexp @ sp[(-13)+10]
 17739  0138B8  0EFD               	movlw	-3
 17740  0138BA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17741                           
 17742                           ;stkvar	_a @ sp[(-13)+-8]
 17743  0138C0  0EED               	movlw	237
 17744  0138C2  24E1               	addwf	fsr1l,w,c
 17745  0138C4  6ED9               	movwf	fsr2l,c
 17746  0138C6  0EFF               	movlw	255
 17747  0138C8  20E2               	addwfc	fsr1h,w,c
 17748  0138CA  6EDA               	movwf	fsr2h,c
 17749  0138CC  AEDF               	btfss	indf2,7,c
 17750  0138CE  D002               	goto	l6600
 17751                           
 17752                           ;stkvar	_aexp @ sp[(-13)+10]
 17753  0138D0  0EFD               	movlw	-3
 17754  0138D2  80E3               	bsf	plusw1,0,c
 17755  0138D4                     l6600:
 17756                           
 17757                           ;stkvar	_aexp @ sp[(-13)+10]
 17758  0138D4  0EFD               	movlw	-3
 17759  0138D6  50E3               	movf	plusw1,w,c
 17760  0138D8  B4D8               	btfsc	status,2,c
 17761  0138DA  D027               	goto	l6610
 17762                           
 17763                           ;stkvar	_aexp @ sp[(-13)+10]
 17764  0138DC  0EFD               	movlw	-3
 17765  0138DE  28E3               	incf	plusw1,w,c
 17766  0138E0  A4D8               	btfss	status,2,c
 17767  0138E2  D018               	goto	l6606
 17768  0138E4  0E00               	movlw	0
 17769  0138E6  6E3D               	movwf	(btemp+8)^0,c
 17770  0138E8  0E00               	movlw	0
 17771  0138EA  6E3E               	movwf	(btemp+9)^0,c
 17772  0138EC  0E00               	movlw	0
 17773  0138EE  6E3F               	movwf	(btemp+10)^0,c
 17774  0138F0  0E00               	movlw	0
 17775  0138F2  6E40               	movwf	(btemp+11)^0,c
 17776                           
 17777                           ;stkvar	_a @ sp[(-13)+-8]
 17778  0138F4  0EEB               	movlw	-21
 17779  0138F6  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17780  0138FC  0EEC               	movlw	-20
 17781  0138FE  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17782  013904  0EED               	movlw	-19
 17783  013906  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17784  01390C  0EEE               	movlw	-18
 17785  01390E  0060  F103  FFE3   	movff	btemp+11,plusw1
 17786  013914                     l6606:
 17787                           
 17788                           ;stkvar	_a @ sp[(-13)+-8]
 17789  013914  0EED               	movlw	-19
 17790  013916  8EE3               	bsf	plusw1,7,c
 17791                           
 17792                           ;stkvar	_a @ sp[(-13)+-8]
 17793  013918  0EEE               	movlw	238
 17794  01391A  24E1               	addwf	fsr1l,w,c
 17795  01391C  6ED9               	movwf	fsr2l,c
 17796  01391E  0EFF               	movlw	255
 17797  013920  20E2               	addwfc	fsr1h,w,c
 17798  013922  6EDA               	movwf	fsr2h,c
 17799  013924  0E00               	movlw	0
 17800  013926  6EDF               	movwf	indf2,c
 17801  013928  D018               	goto	l6612
 17802  01392A                     l6610:
 17803  01392A  0E00               	movlw	0
 17804  01392C  6E3D               	movwf	(btemp+8)^0,c
 17805  01392E  0E00               	movlw	0
 17806  013930  6E3E               	movwf	(btemp+9)^0,c
 17807  013932  0E00               	movlw	0
 17808  013934  6E3F               	movwf	(btemp+10)^0,c
 17809  013936  0E00               	movlw	0
 17810  013938  6E40               	movwf	(btemp+11)^0,c
 17811                           
 17812                           ;stkvar	_a @ sp[(-13)+-8]
 17813  01393A  0EEB               	movlw	-21
 17814  01393C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17815  013942  0EEC               	movlw	-20
 17816  013944  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17817  01394A  0EED               	movlw	-19
 17818  01394C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17819  013952  0EEE               	movlw	-18
 17820  013954  0060  F103  FFE3   	movff	btemp+11,plusw1
 17821  01395A                     l6612:
 17822                           
 17823                           ;stkvar	_a @ sp[(-13)+-8]
 17824  01395A  0EEB               	movlw	-21
 17825  01395C  50E3               	movf	plusw1,w,c
 17826  01395E  E139               	bnz	l6624
 17827  013960  0EEC               	movlw	-20
 17828  013962  50E3               	movf	plusw1,w,c
 17829  013964  E136               	bnz	l6624
 17830  013966  0EED               	movlw	-19
 17831  013968  50E3               	movf	plusw1,w,c
 17832  01396A  E133               	bnz	l6624
 17833  01396C  0EEE               	movlw	-18
 17834  01396E  50E3               	movf	plusw1,w,c
 17835  013970  A4D8               	btfss	status,2,c
 17836  013972  D02F               	goto	l6624
 17837                           
 17838                           ;stkvar	_b @ sp[(-13)+-4]
 17839  013974  0EEF               	movlw	-17
 17840  013976  6AE3               	clrf	plusw1,c
 17841  013978  0EF0               	movlw	-16
 17842  01397A  6AE3               	clrf	plusw1,c
 17843  01397C  0EF1               	movlw	-15
 17844  01397E  6AE3               	clrf	plusw1,c
 17845  013980  0EF2               	movlw	-14
 17846  013982  6AE3               	clrf	plusw1,c
 17847                           
 17848                           ;stkvar	_b @ sp[(-13)+-4]
 17849  013984  0EF1               	movlw	241
 17850  013986  24E1               	addwf	fsr1l,w,c
 17851  013988  6ED9               	movwf	fsr2l,c
 17852  01398A  0EFF               	movlw	255
 17853  01398C  20E2               	addwfc	fsr1h,w,c
 17854  01398E  6EDA               	movwf	fsr2h,c
 17855  013990  0E80               	movlw	128
 17856  013992  12DE               	iorwf	postinc2,f,c
 17857  013994  0E7F               	movlw	127
 17858  013996  12DD               	iorwf	postdec2,f,c
 17859  013998                     l6618:
 17860                           
 17861                           ;stkvar	_sign @ sp[(-13)+12]
 17862  013998  0EFF               	movlw	-1
 17863  01399A  006F FF8C  F040    	movff	plusw1,btemp+11
 17864                           
 17865                           ;stkvar	_b @ sp[(-13)+-4]
 17866  0139A0  0EF2               	movlw	242
 17867  0139A2  24E1               	addwf	fsr1l,w,c
 17868  0139A4  6ED9               	movwf	fsr2l,c
 17869  0139A6  0EFF               	movlw	255
 17870  0139A8  20E2               	addwfc	fsr1h,w,c
 17871  0139AA  6EDA               	movwf	fsr2h,c
 17872  0139AC  5040               	movf	(btemp+11)^0,w,c
 17873  0139AE  12DF               	iorwf	indf2,f,c
 17874                           
 17875                           ;stkvar	_b @ sp[(-13)+-4]
 17876  0139B0  0EEF               	movlw	-17
 17877  0139B2  006F FF8C  F035    	movff	plusw1,btemp
 17878  0139B8  0EF0               	movlw	-16
 17879  0139BA  006F FF8C  F036    	movff	plusw1,btemp+1
 17880  0139C0  0EF1               	movlw	-15
 17881  0139C2  006F FF8C  F037    	movff	plusw1,btemp+2
 17882  0139C8  0EF2               	movlw	-14
 17883  0139CA  006F FF8C  F038    	movff	plusw1,btemp+3
 17884  0139D0  D19F               	goto	l2593
 17885  0139D2                     l6624:
 17886                           
 17887                           ;stkvar	_bexp @ sp[(-13)+11]
 17888  0139D2  0EFE               	movlw	-2
 17889  0139D4  50E3               	movf	plusw1,w,c
 17890  0139D6  A4D8               	btfss	status,2,c
 17891  0139D8  D009               	goto	l6632
 17892  0139DA  0E00               	movlw	0
 17893  0139DC  6E35               	movwf	btemp^0,c
 17894  0139DE  0E00               	movlw	0
 17895  0139E0  6E36               	movwf	(btemp+1)^0,c
 17896  0139E2  0E00               	movlw	0
 17897  0139E4  6E37               	movwf	(btemp+2)^0,c
 17898  0139E6  0E00               	movlw	0
 17899  0139E8  6E38               	movwf	(btemp+3)^0,c
 17900  0139EA  D192               	goto	l2593
 17901  0139EC                     l6632:
 17902                           
 17903                           ;stkvar	_bexp @ sp[(-13)+11]
 17904  0139EC  0EFE               	movlw	-2
 17905  0139EE  50E3               	movf	plusw1,w,c
 17906  0139F0  6E3F               	movwf	(btemp+10)^0,c
 17907  0139F2  6A40               	clrf	(btemp+11)^0,c
 17908                           
 17909                           ;stkvar	_aexp @ sp[(-13)+10]
 17910  0139F4  0EFD               	movlw	-3
 17911  0139F6  50E3               	movf	plusw1,w,c
 17912  0139F8  5E3F               	subwf	(btemp+10)^0,f,c
 17913  0139FA  0E00               	movlw	0
 17914  0139FC  5A40               	subwfb	(btemp+11)^0,f,c
 17915  0139FE  0E7F               	movlw	127
 17916  013A00  263F               	addwf	(btemp+10)^0,f,c
 17917  013A02  0E00               	movlw	0
 17918  013A04  2240               	addwfc	(btemp+11)^0,f,c
 17919                           
 17920                           ;stkvar	_new_exp @ sp[(-13)+8]
 17921  013A06  0EFB               	movlw	-5
 17922  013A08  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17923  013A0E  0EFC               	movlw	-4
 17924  013A10  0060  F103  FFE3   	movff	btemp+11,plusw1
 17925                           
 17926                           ;stkvar	_b @ sp[(-13)+-4]
 17927  013A16  0EEF               	movlw	-17
 17928  013A18  006F FF8C  F03D    	movff	plusw1,btemp+8
 17929  013A1E  0EF0               	movlw	-16
 17930  013A20  006F FF8C  F03E    	movff	plusw1,btemp+9
 17931  013A26  0EF1               	movlw	-15
 17932  013A28  006F FF8C  F03F    	movff	plusw1,btemp+10
 17933  013A2E  0EF2               	movlw	-14
 17934  013A30  006F FF8C  F040    	movff	plusw1,btemp+11
 17935                           
 17936                           ;stkvar	_rem @ sp[(-13)+4]
 17937  013A36  0EF7               	movlw	-9
 17938  013A38  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17939  013A3E  0EF8               	movlw	-8
 17940  013A40  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17941  013A46  0EF9               	movlw	-7
 17942  013A48  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17943  013A4E  0EFA               	movlw	-6
 17944  013A50  0060  F103  FFE3   	movff	btemp+11,plusw1
 17945                           
 17946                           ;stkvar	_b @ sp[(-13)+-4]
 17947  013A56  0EEF               	movlw	-17
 17948  013A58  6AE3               	clrf	plusw1,c
 17949  013A5A  0EF0               	movlw	-16
 17950  013A5C  6AE3               	clrf	plusw1,c
 17951  013A5E  0EF1               	movlw	-15
 17952  013A60  6AE3               	clrf	plusw1,c
 17953  013A62  0EF2               	movlw	-14
 17954  013A64  6AE3               	clrf	plusw1,c
 17955                           
 17956                           ;stkvar	_grs @ sp[(-13)+0]
 17957  013A66  0EF3               	movlw	-13
 17958  013A68  6AE3               	clrf	plusw1,c
 17959  013A6A  0EF4               	movlw	-12
 17960  013A6C  6AE3               	clrf	plusw1,c
 17961  013A6E  0EF5               	movlw	-11
 17962  013A70  6AE3               	clrf	plusw1,c
 17963  013A72  0EF6               	movlw	-10
 17964  013A74  6AE3               	clrf	plusw1,c
 17965                           
 17966                           ;stkvar	_aexp @ sp[(-13)+10]
 17967  013A76  0EFD               	movlw	-3
 17968  013A78  6AE3               	clrf	plusw1,c
 17969  013A7A  D050               	goto	l6660
 17970  013A7C                     l6642:
 17971                           
 17972                           ;stkvar	_aexp @ sp[(-13)+10]
 17973  013A7C  0EFD               	movlw	-3
 17974  013A7E  50E3               	movf	plusw1,w,c
 17975  013A80  B4D8               	btfsc	status,2,c
 17976  013A82  D020               	goto	l6652
 17977                           
 17978                           ;stkvar	_rem @ sp[(-13)+4]
 17979  013A84  90D8               	bcf	status,0,c
 17980  013A86  0EF7               	movlw	-9
 17981  013A88  36E3               	rlcf	plusw1,f,c
 17982  013A8A  0EF8               	movlw	-8
 17983  013A8C  36E3               	rlcf	plusw1,f,c
 17984  013A8E  0EF9               	movlw	-7
 17985  013A90  36E3               	rlcf	plusw1,f,c
 17986  013A92  0EFA               	movlw	-6
 17987  013A94  36E3               	rlcf	plusw1,f,c
 17988                           
 17989                           ;stkvar	_b @ sp[(-13)+-4]
 17990  013A96  90D8               	bcf	status,0,c
 17991  013A98  0EEF               	movlw	-17
 17992  013A9A  36E3               	rlcf	plusw1,f,c
 17993  013A9C  0EF0               	movlw	-16
 17994  013A9E  36E3               	rlcf	plusw1,f,c
 17995  013AA0  0EF1               	movlw	-15
 17996  013AA2  36E3               	rlcf	plusw1,f,c
 17997  013AA4  0EF2               	movlw	-14
 17998  013AA6  36E3               	rlcf	plusw1,f,c
 17999                           
 18000                           ;stkvar	_grs @ sp[(-13)+0]
 18001  013AA8  0EF6               	movlw	-10
 18002  013AAA  AEE3               	btfss	plusw1,7,c
 18003  013AAC  D002               	goto	l6650
 18004                           
 18005                           ;stkvar	_b @ sp[(-13)+-4]
 18006  013AAE  0EEF               	movlw	-17
 18007  013AB0  80E3               	bsf	plusw1,0,c
 18008  013AB2                     l6650:
 18009                           
 18010                           ;stkvar	_grs @ sp[(-13)+0]
 18011  013AB2  90D8               	bcf	status,0,c
 18012  013AB4  0EF3               	movlw	-13
 18013  013AB6  36E3               	rlcf	plusw1,f,c
 18014  013AB8  0EF4               	movlw	-12
 18015  013ABA  36E3               	rlcf	plusw1,f,c
 18016  013ABC  0EF5               	movlw	-11
 18017  013ABE  36E3               	rlcf	plusw1,f,c
 18018  013AC0  0EF6               	movlw	-10
 18019  013AC2  36E3               	rlcf	plusw1,f,c
 18020  013AC4                     l6652:
 18021                           
 18022                           ;stkvar	_a @ sp[(-13)+-8]
 18023                           ;stkvar	_rem @ sp[(-13)+4]
 18024  013AC4  50E1               	movf	fsr1l,w,c
 18025  013AC6  0FF7               	addlw	-9
 18026  013AC8  6ED9               	movwf	fsr2l,c
 18027  013ACA  50E2               	movf	fsr1h,w,c
 18028  013ACC  6EDA               	movwf	fsr2h,c
 18029  013ACE  0EFF               	movlw	255
 18030  013AD0  22DA               	addwfc	fsr2h,f,c
 18031  013AD2  0EEB               	movlw	-21
 18032  013AD4  50E3               	movf	plusw1,w,c
 18033  013AD6  5CDE               	subwf	postinc2,w,c
 18034  013AD8  0EEC               	movlw	-20
 18035  013ADA  50E3               	movf	plusw1,w,c
 18036  013ADC  58DE               	subwfb	postinc2,w,c
 18037  013ADE  0EED               	movlw	-19
 18038  013AE0  50E3               	movf	plusw1,w,c
 18039  013AE2  58DE               	subwfb	postinc2,w,c
 18040  013AE4  0EEE               	movlw	-18
 18041  013AE6  50E3               	movf	plusw1,w,c
 18042  013AE8  58DE               	subwfb	postinc2,w,c
 18043  013AEA  A0D8               	btfss	status,0,c
 18044  013AEC  D015               	goto	l6658
 18045                           
 18046                           ;stkvar	_grs @ sp[(-13)+0]
 18047  013AEE  0EF6               	movlw	-10
 18048  013AF0  8CE3               	bsf	plusw1,6,c
 18049                           
 18050                           ;stkvar	_a @ sp[(-13)+-8]
 18051                           ;stkvar	_rem @ sp[(-13)+4]
 18052  013AF2  50E1               	movf	fsr1l,w,c
 18053  013AF4  0FF7               	addlw	-9
 18054  013AF6  6ED9               	movwf	fsr2l,c
 18055  013AF8  50E2               	movf	fsr1h,w,c
 18056  013AFA  6EDA               	movwf	fsr2h,c
 18057  013AFC  0EFF               	movlw	255
 18058  013AFE  22DA               	addwfc	fsr2h,f,c
 18059  013B00  0EEB               	movlw	-21
 18060  013B02  50E3               	movf	plusw1,w,c
 18061  013B04  5EDE               	subwf	postinc2,f,c
 18062  013B06  0EEC               	movlw	-20
 18063  013B08  50E3               	movf	plusw1,w,c
 18064  013B0A  5ADE               	subwfb	postinc2,f,c
 18065  013B0C  0EED               	movlw	-19
 18066  013B0E  50E3               	movf	plusw1,w,c
 18067  013B10  5ADE               	subwfb	postinc2,f,c
 18068  013B12  0EEE               	movlw	-18
 18069  013B14  50E3               	movf	plusw1,w,c
 18070  013B16  5ADE               	subwfb	postinc2,f,c
 18071  013B18                     l6658:
 18072                           
 18073                           ;stkvar	_aexp @ sp[(-13)+10]
 18074  013B18  0EFD               	movlw	-3
 18075  013B1A  2AE3               	incf	plusw1,f,c
 18076  013B1C                     l6660:
 18077                           
 18078                           ;stkvar	_aexp @ sp[(-13)+10]
 18079  013B1C  0EFD               	movlw	-3
 18080  013B1E  006F FF8C  F035    	movff	plusw1,btemp
 18081  013B24  0E19               	movlw	25
 18082  013B26  6435               	cpfsgt	btemp^0,c
 18083  013B28  D7A9               	goto	l6642
 18084                           
 18085                           ;stkvar	_rem @ sp[(-13)+4]
 18086  013B2A  0EF7               	movlw	-9
 18087  013B2C  50E3               	movf	plusw1,w,c
 18088  013B2E  E10A               	bnz	u5810
 18089  013B30  0EF8               	movlw	-8
 18090  013B32  50E3               	movf	plusw1,w,c
 18091  013B34  E107               	bnz	u5810
 18092  013B36  0EF9               	movlw	-7
 18093  013B38  50E3               	movf	plusw1,w,c
 18094  013B3A  E104               	bnz	u5810
 18095  013B3C  0EFA               	movlw	-6
 18096  013B3E  50E3               	movf	plusw1,w,c
 18097  013B40  B4D8               	btfsc	status,2,c
 18098  013B42  D024               	goto	l6676
 18099  013B44                     u5810:
 18100                           
 18101                           ;stkvar	_grs @ sp[(-13)+0]
 18102  013B44  0EF3               	movlw	-13
 18103  013B46  80E3               	bsf	plusw1,0,c
 18104  013B48  D021               	goto	l6676
 18105  013B4A                     l6666:
 18106                           
 18107                           ;stkvar	_b @ sp[(-13)+-4]
 18108  013B4A  90D8               	bcf	status,0,c
 18109  013B4C  0EEF               	movlw	-17
 18110  013B4E  36E3               	rlcf	plusw1,f,c
 18111  013B50  0EF0               	movlw	-16
 18112  013B52  36E3               	rlcf	plusw1,f,c
 18113  013B54  0EF1               	movlw	-15
 18114  013B56  36E3               	rlcf	plusw1,f,c
 18115  013B58  0EF2               	movlw	-14
 18116  013B5A  36E3               	rlcf	plusw1,f,c
 18117                           
 18118                           ;stkvar	_grs @ sp[(-13)+0]
 18119  013B5C  0EF6               	movlw	-10
 18120  013B5E  AEE3               	btfss	plusw1,7,c
 18121  013B60  D002               	goto	l6672
 18122                           
 18123                           ;stkvar	_b @ sp[(-13)+-4]
 18124  013B62  0EEF               	movlw	-17
 18125  013B64  80E3               	bsf	plusw1,0,c
 18126  013B66                     l6672:
 18127                           
 18128                           ;stkvar	_grs @ sp[(-13)+0]
 18129  013B66  90D8               	bcf	status,0,c
 18130  013B68  0EF3               	movlw	-13
 18131  013B6A  36E3               	rlcf	plusw1,f,c
 18132  013B6C  0EF4               	movlw	-12
 18133  013B6E  36E3               	rlcf	plusw1,f,c
 18134  013B70  0EF5               	movlw	-11
 18135  013B72  36E3               	rlcf	plusw1,f,c
 18136  013B74  0EF6               	movlw	-10
 18137  013B76  36E3               	rlcf	plusw1,f,c
 18138                           
 18139                           ;stkvar	_new_exp @ sp[(-13)+8]
 18140  013B78  50E1               	movf	fsr1l,w,c
 18141  013B7A  0FFB               	addlw	-5
 18142  013B7C  6ED9               	movwf	fsr2l,c
 18143  013B7E  50E2               	movf	fsr1h,w,c
 18144  013B80  6EDA               	movwf	fsr2h,c
 18145  013B82  0EFF               	movlw	255
 18146  013B84  22DA               	addwfc	fsr2h,f,c
 18147  013B86  06DE               	decf	postinc2,f,c
 18148  013B88  0E00               	movlw	0
 18149  013B8A  5ADD               	subwfb	postdec2,f,c
 18150  013B8C                     l6676:
 18151                           
 18152                           ;stkvar	_b @ sp[(-13)+-4]
 18153  013B8C  0EF1               	movlw	-15
 18154  013B8E  AEE3               	btfss	plusw1,7,c
 18155  013B90  D7DC               	goto	l6666
 18156                           
 18157                           ;stkvar	_aexp @ sp[(-13)+10]
 18158  013B92  0EFD               	movlw	-3
 18159  013B94  6AE3               	clrf	plusw1,c
 18160                           
 18161                           ;stkvar	_grs @ sp[(-13)+0]
 18162  013B96  0EF6               	movlw	-10
 18163  013B98  AEE3               	btfss	plusw1,7,c
 18164  013B9A  D020               	goto	l6690
 18165                           
 18166                           ;stkvar	_grs @ sp[(-13)+0]
 18167  013B9C  50E1               	movf	fsr1l,w,c
 18168  013B9E  0FF3               	addlw	-13
 18169  013BA0  6ED9               	movwf	fsr2l,c
 18170  013BA2  50E2               	movf	fsr1h,w,c
 18171  013BA4  6EDA               	movwf	fsr2h,c
 18172  013BA6  0EFF               	movlw	255
 18173  013BA8  22DA               	addwfc	fsr2h,f,c
 18174  013BAA  0EFF               	movlw	255
 18175  013BAC  14DE               	andwf	postinc2,w,c
 18176  013BAE  6E3D               	movwf	(btemp+8)^0,c
 18177  013BB0  0EFF               	movlw	255
 18178  013BB2  14DE               	andwf	postinc2,w,c
 18179  013BB4  6E3E               	movwf	(btemp+9)^0,c
 18180  013BB6  0EFF               	movlw	255
 18181  013BB8  14DE               	andwf	postinc2,w,c
 18182  013BBA  6E3F               	movwf	(btemp+10)^0,c
 18183  013BBC  0E7F               	movlw	127
 18184  013BBE  14DE               	andwf	postinc2,w,c
 18185  013BC0  6E40               	movwf	(btemp+11)^0,c
 18186  013BC2  503D               	movf	(btemp+8)^0,w,c
 18187  013BC4  103E               	iorwf	(btemp+9)^0,w,c
 18188  013BC6  103F               	iorwf	(btemp+10)^0,w,c
 18189  013BC8  1040               	iorwf	(btemp+11)^0,w,c
 18190  013BCA  B4D8               	btfsc	status,2,c
 18191  013BCC  D004               	goto	l6686
 18192  013BCE                     u5850:
 18193                           
 18194                           ;stkvar	_aexp @ sp[(-13)+10]
 18195  013BCE  0EFD               	movlw	-3
 18196  013BD0  6AE3               	clrf	plusw1,c
 18197  013BD2  2AE3               	incf	plusw1,f,c
 18198  013BD4  D003               	goto	l6690
 18199  013BD6                     l6686:
 18200                           
 18201                           ;stkvar	_b @ sp[(-13)+-4]
 18202  013BD6  0EEF               	movlw	-17
 18203  013BD8  B0E3               	btfsc	plusw1,0,c
 18204  013BDA  D7F9               	goto	u5850
 18205  013BDC                     l6690:
 18206                           
 18207                           ;stkvar	_aexp @ sp[(-13)+10]
 18208  013BDC  0EFD               	movlw	-3
 18209  013BDE  50E3               	movf	plusw1,w,c
 18210  013BE0  B4D8               	btfsc	status,2,c
 18211  013BE2  D036               	goto	l6700
 18212                           
 18213                           ;stkvar	_b @ sp[(-13)+-4]
 18214  013BE4  50E1               	movf	fsr1l,w,c
 18215  013BE6  0FEF               	addlw	-17
 18216  013BE8  6ED9               	movwf	fsr2l,c
 18217  013BEA  50E2               	movf	fsr1h,w,c
 18218  013BEC  6EDA               	movwf	fsr2h,c
 18219  013BEE  0EFF               	movlw	255
 18220  013BF0  22DA               	addwfc	fsr2h,f,c
 18221  013BF2  2ADE               	incf	postinc2,f,c
 18222  013BF4  0E00               	movlw	0
 18223  013BF6  22DE               	addwfc	postinc2,f,c
 18224  013BF8  22DE               	addwfc	postinc2,f,c
 18225  013BFA  22DE               	addwfc	postinc2,f,c
 18226                           
 18227                           ;stkvar	_b @ sp[(-13)+-4]
 18228  013BFC  0EF2               	movlw	-14
 18229  013BFE  A0E3               	btfss	plusw1,0,c
 18230  013C00  D027               	goto	l6700
 18231  013C02  0E01               	movlw	1
 18232  013C04  6E40               	movwf	(btemp+11)^0,c
 18233                           
 18234                           ;stkvar	_b @ sp[(-13)+-4]
 18235  013C06  50E1               	movf	fsr1l,w,c
 18236  013C08  0FEF               	addlw	-17
 18237  013C0A  6ED9               	movwf	fsr2l,c
 18238  013C0C  50E2               	movf	fsr1h,w,c
 18239  013C0E  6EDA               	movwf	fsr2h,c
 18240  013C10  0EFF               	movlw	255
 18241  013C12  22DA               	addwfc	fsr2h,f,c
 18242  013C14  2840               	incf	(btemp+11)^0,w,c
 18243  013C16  52DE               	movf	postinc2,f,c
 18244  013C18  D008               	goto	u5890
 18245  013C1A                     u5895:
 18246  013C1A  52DE               	movf	postinc2,f,c
 18247  013C1C  90D8               	bcf	status,0,c
 18248  013C1E  BEDC               	btfsc	preinc2,7,c
 18249  013C20  80D8               	bsf	status,0,c
 18250  013C22  32DD               	rrcf	postdec2,f,c
 18251  013C24  32DD               	rrcf	postdec2,f,c
 18252  013C26  32DD               	rrcf	postdec2,f,c
 18253  013C28  32DE               	rrcf	postinc2,f,c
 18254  013C2A                     u5890:
 18255  013C2A  2EE8               	decfsz	wreg,f,c
 18256  013C2C  D7F6               	goto	u5895
 18257                           
 18258                           ;stkvar	_new_exp @ sp[(-13)+8]
 18259  013C2E  0EFB               	movlw	-5
 18260  013C30  50E3               	movf	plusw1,w,c
 18261  013C32  0F01               	addlw	1
 18262  013C34  6E35               	movwf	btemp^0,c
 18263  013C36  0EFB               	movlw	-5
 18264  013C38  0060  F0D7  FFE3   	movff	btemp,plusw1
 18265  013C3E  6A35               	clrf	btemp^0,c
 18266  013C40  0EFC               	movlw	-4
 18267  013C42  50E3               	movf	plusw1,w,c
 18268  013C44  2035               	addwfc	btemp^0,w,c
 18269  013C46  6E35               	movwf	btemp^0,c
 18270  013C48  0EFC               	movlw	-4
 18271  013C4A  0060  F0D7  FFE3   	movff	btemp,plusw1
 18272  013C50                     l6700:
 18273                           
 18274                           ;stkvar	_new_exp @ sp[(-13)+8]
 18275  013C50  0EFC               	movlw	-4
 18276  013C52  BEE3               	btfsc	plusw1,7,c
 18277  013C54  D01B               	goto	l6706
 18278  013C56  0EFC               	movlw	-4
 18279  013C58  50E3               	movf	plusw1,w,c
 18280  013C5A  E104               	bnz	u5900
 18281  013C5C  0EFB               	movlw	-5
 18282  013C5E  28E3               	incf	plusw1,w,c
 18283  013C60  A0D8               	btfss	status,0,c
 18284  013C62  D014               	goto	l6706
 18285  013C64                     u5900:
 18286  013C64  0EFF               	movlw	255
 18287  013C66  6E3F               	movwf	(btemp+10)^0,c
 18288  013C68  0E00               	movlw	0
 18289  013C6A  6E40               	movwf	(btemp+11)^0,c
 18290                           
 18291                           ;stkvar	_new_exp @ sp[(-13)+8]
 18292  013C6C  0EFB               	movlw	-5
 18293  013C6E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18294  013C74  0EFC               	movlw	-4
 18295  013C76  0060  F103  FFE3   	movff	btemp+11,plusw1
 18296                           
 18297                           ;stkvar	_b @ sp[(-13)+-4]
 18298  013C7C  0EEF               	movlw	-17
 18299  013C7E  6AE3               	clrf	plusw1,c
 18300  013C80  0EF0               	movlw	-16
 18301  013C82  6AE3               	clrf	plusw1,c
 18302  013C84  0EF1               	movlw	-15
 18303  013C86  6AE3               	clrf	plusw1,c
 18304  013C88  0EF2               	movlw	-14
 18305  013C8A  6AE3               	clrf	plusw1,c
 18306  013C8C                     l6706:
 18307                           
 18308                           ;stkvar	_new_exp @ sp[(-13)+8]
 18309  013C8C  0EFC               	movlw	-4
 18310  013C8E  BEE3               	btfsc	plusw1,7,c
 18311  013C90  D007               	goto	u5910
 18312  013C92  0EFC               	movlw	-4
 18313  013C94  50E3               	movf	plusw1,w,c
 18314  013C96  E112               	bnz	l6712
 18315  013C98  0EFB               	movlw	-5
 18316  013C9A  04E3               	decf	plusw1,w,c
 18317  013C9C  B0D8               	btfsc	status,0,c
 18318  013C9E  D00E               	goto	l6712
 18319  013CA0                     u5910:
 18320                           
 18321                           ;stkvar	_new_exp @ sp[(-13)+8]
 18322  013CA0  0EFB               	movlw	-5
 18323  013CA2  6AE3               	clrf	plusw1,c
 18324  013CA4  0EFC               	movlw	-4
 18325  013CA6  6AE3               	clrf	plusw1,c
 18326                           
 18327                           ;stkvar	_b @ sp[(-13)+-4]
 18328  013CA8  0EEF               	movlw	-17
 18329  013CAA  6AE3               	clrf	plusw1,c
 18330  013CAC  0EF0               	movlw	-16
 18331  013CAE  6AE3               	clrf	plusw1,c
 18332  013CB0  0EF1               	movlw	-15
 18333  013CB2  6AE3               	clrf	plusw1,c
 18334  013CB4  0EF2               	movlw	-14
 18335  013CB6  6AE3               	clrf	plusw1,c
 18336                           
 18337                           ;stkvar	_sign @ sp[(-13)+12]
 18338  013CB8  0EFF               	movlw	-1
 18339  013CBA  6AE3               	clrf	plusw1,c
 18340  013CBC                     l6712:
 18341                           
 18342                           ;stkvar	_new_exp @ sp[(-13)+8]
 18343                           ;stkvar	_bexp @ sp[(-13)+11]
 18344  013CBC  0EFB               	movlw	-5
 18345  013CBE  006F FF8C  F035    	movff	plusw1,btemp
 18346  013CC4  0EFE               	movlw	-2
 18347  013CC6  0060  F0D7  FFE3   	movff	btemp,plusw1
 18348                           
 18349                           ;stkvar	_bexp @ sp[(-13)+11]
 18350  013CCC  0EFE               	movlw	-2
 18351  013CCE  A0E3               	btfss	plusw1,0,c
 18352  013CD0  D009               	goto	l6718
 18353                           
 18354                           ;stkvar	_b @ sp[(-13)+-4]
 18355  013CD2  0EF1               	movlw	241
 18356  013CD4  24E1               	addwf	fsr1l,w,c
 18357  013CD6  6ED9               	movwf	fsr2l,c
 18358  013CD8  0EFF               	movlw	255
 18359  013CDA  20E2               	addwfc	fsr1h,w,c
 18360  013CDC  6EDA               	movwf	fsr2h,c
 18361  013CDE  0E00               	movlw	0
 18362  013CE0  8EDB               	bsf	plusw2,7,c
 18363  013CE2  D008               	goto	l6720
 18364  013CE4                     l6718:
 18365                           
 18366                           ;stkvar	_b @ sp[(-13)+-4]
 18367  013CE4  0EF1               	movlw	241
 18368  013CE6  24E1               	addwf	fsr1l,w,c
 18369  013CE8  6ED9               	movwf	fsr2l,c
 18370  013CEA  0EFF               	movlw	255
 18371  013CEC  20E2               	addwfc	fsr1h,w,c
 18372  013CEE  6EDA               	movwf	fsr2h,c
 18373  013CF0  0E7F               	movlw	127
 18374  013CF2  16DF               	andwf	indf2,f,c
 18375  013CF4                     l6720:
 18376                           
 18377                           ;stkvar	_b @ sp[(-13)+-4]
 18378  013CF4  0EF2               	movlw	242
 18379  013CF6  24E1               	addwf	fsr1l,w,c
 18380  013CF8  6ED9               	movwf	fsr2l,c
 18381  013CFA  0EFF               	movlw	255
 18382  013CFC  20E2               	addwfc	fsr1h,w,c
 18383  013CFE  6EDA               	movwf	fsr2h,c
 18384                           
 18385                           ;stkvar	_bexp @ sp[(-13)+11]
 18386  013D00  0EFE               	movlw	-2
 18387  013D02  006F FF8C  F040    	movff	plusw1,btemp+11
 18388  013D08  90D8               	bcf	status,0,c
 18389  013D0A  3040               	rrcf	(btemp+11)^0,w,c
 18390  013D0C  6EDF               	movwf	indf2,c
 18391  013D0E  D644               	goto	l6618
 18392  013D10                     l2593:
 18393                           
 18394                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 18395  013D10  0EEB               	movlw	235
 18396  013D12  26E1               	addwf	fsr1l,f,c
 18397  013D14  0EFF               	movlw	255
 18398  013D16  22E2               	addwfc	fsr1h,f,c
 18399  013D18  0012               	return		;funcret
 18400  013D1A                     __end_of___fldiv:
 18401                           	opt callstack 0
 18402                           
 18403 ;; *************** function ___awmod *****************
 18404 ;; Defined at:
 18405 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18406 ;; Parameters:    Size  Location     Type
 18407 ;;  dividend        2  [STACK] int 
 18408 ;;  divisor         2  [STACK] int 
 18409 ;; Auto vars:     Size  Location     Type
 18410 ;;  sign            1  [STACK] unsigned char 
 18411 ;;  counter         1  [STACK] unsigned char 
 18412 ;; Return value:  Size  Location     Type
 18413 ;;                  2  [STACK] int 
 18414 ;; Registers used:
 18415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18416 ;; Tracked objects:
 18417 ;;		On entry : 0/4
 18418 ;;		On exit  : 0/0
 18419 ;;		Unchanged: 0/0
 18420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18425 ;;Total ram usage:        0 bytes
 18426 ;; Hardware stack levels used:    1
 18427 ;; Hardware stack levels required when called:    6
 18428 ;; This function calls:
 18429 ;;		Nothing
 18430 ;; This function is called by:
 18431 ;;		_efgtoa
 18432 ;; This function uses a reentrant model
 18433 ;;
 18434                           
 18435                           	psect	text59
 18436  016F90                     __ptext59:
 18437                           	opt callstack 0
 18438  016F90                     ___awmod:
 18439                           	opt callstack 0
 18440                           
 18441                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18442  016F90  52E6               	movf	postinc1,f,c
 18443  016F92  52E6               	movf	postinc1,f,c
 18444                           
 18445                           ;stkvar	_sign @ sp[(-2)+0]
 18446                           
 18447                           ;incstack = 0
 18448  016F94  0EFE               	movlw	-2
 18449  016F96  6AE3               	clrf	plusw1,c
 18450                           
 18451                           ;stkvar	_dividend @ sp[(-2)+-2]
 18452  016F98  0EFD               	movlw	-3
 18453  016F9A  AEE3               	btfss	plusw1,7,c
 18454  016F9C  D009               	goto	l6944
 18455                           
 18456                           ;stkvar	_dividend @ sp[(-2)+-2]
 18457                           ;stkvar	_dividend @ sp[(-2)+-2]
 18458  016F9E  0EFC               	movlw	-4
 18459  016FA0  6CE3               	negf	plusw1,c
 18460  016FA2  0EFD               	movlw	-3
 18461  016FA4  1EE3               	comf	plusw1,f,c
 18462  016FA6  B0D8               	btfsc	status,0,c
 18463  016FA8  2AE3               	incf	plusw1,f,c
 18464                           
 18465                           ;stkvar	_sign @ sp[(-2)+0]
 18466  016FAA  0EFE               	movlw	-2
 18467  016FAC  6AE3               	clrf	plusw1,c
 18468  016FAE  2AE3               	incf	plusw1,f,c
 18469  016FB0                     l6944:
 18470                           
 18471                           ;stkvar	_divisor @ sp[(-2)+-4]
 18472  016FB0  0EFB               	movlw	-5
 18473  016FB2  AEE3               	btfss	plusw1,7,c
 18474  016FB4  D006               	goto	l6948
 18475                           
 18476                           ;stkvar	_divisor @ sp[(-2)+-4]
 18477                           ;stkvar	_divisor @ sp[(-2)+-4]
 18478  016FB6  0EFA               	movlw	-6
 18479  016FB8  6CE3               	negf	plusw1,c
 18480  016FBA  0EFB               	movlw	-5
 18481  016FBC  1EE3               	comf	plusw1,f,c
 18482  016FBE  B0D8               	btfsc	status,0,c
 18483  016FC0  2AE3               	incf	plusw1,f,c
 18484  016FC2                     l6948:
 18485                           
 18486                           ;stkvar	_divisor @ sp[(-2)+-4]
 18487  016FC2  0EFA               	movlw	-6
 18488  016FC4  006F FF8C  F035    	movff	plusw1,btemp
 18489  016FCA  0EFB               	movlw	-5
 18490  016FCC  50E3               	movf	plusw1,w,c
 18491  016FCE  1035               	iorwf	btemp^0,w,c
 18492  016FD0  B4D8               	btfsc	status,2,c
 18493  016FD2  D053               	goto	u6270
 18494                           
 18495                           ;stkvar	_counter @ sp[(-2)+1]
 18496  016FD4  0EFF               	movlw	-1
 18497  016FD6  6AE3               	clrf	plusw1,c
 18498  016FD8  D012               	goto	L17
 18499  016FDA                     l6952:
 18500                           
 18501                           ;stkvar	_divisor @ sp[(-2)+-4]
 18502  016FDA  0EFA               	movlw	-6
 18503  016FDC  50E3               	movf	plusw1,w,c
 18504  016FDE  90D8               	bcf	status,0,c
 18505  016FE0  34E8               	rlcf	wreg,w,c
 18506  016FE2  6E35               	movwf	btemp^0,c
 18507  016FE4  0EFA               	movlw	-6
 18508  016FE6  0060  F0D7  FFE3   	movff	btemp,plusw1
 18509  016FEC  0EFB               	movlw	-5
 18510  016FEE  50E3               	movf	plusw1,w,c
 18511  016FF0  34E8               	rlcf	wreg,w,c
 18512  016FF2  6E35               	movwf	btemp^0,c
 18513  016FF4  0EFB               	movlw	-5
 18514  016FF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 18515                           
 18516                           ;stkvar	_counter @ sp[(-2)+1]
 18517  016FFC  0EFF               	movlw	-1
 18518  016FFE                     L17:
 18519  016FFE  2AE3               	incf	plusw1,f,c
 18520                           
 18521                           ;stkvar	_divisor @ sp[(-2)+-4]
 18522  017000  0EFB               	movlw	-5
 18523  017002  AEE3               	btfss	plusw1,7,c
 18524  017004  D7EA               	goto	l6952
 18525  017006                     u6250:
 18526                           
 18527                           ;stkvar	_divisor @ sp[(-2)+-4]
 18528  017006  0EFA               	movlw	-6
 18529  017008  006F FF8C  F03F    	movff	plusw1,btemp+10
 18530  01700E  0EFB               	movlw	-5
 18531  017010  006F FF8C  F040    	movff	plusw1,btemp+11
 18532                           
 18533                           ;stkvar	_dividend @ sp[(-2)+-2]
 18534  017016  0EFC               	movlw	-4
 18535  017018  006F FF8C  F03D    	movff	plusw1,btemp+8
 18536  01701E  0EFD               	movlw	-3
 18537  017020  006F FF8C  F03E    	movff	plusw1,btemp+9
 18538  017026  503F               	movf	(btemp+10)^0,w,c
 18539  017028  5C3D               	subwf	(btemp+8)^0,w,c
 18540  01702A  5040               	movf	(btemp+11)^0,w,c
 18541  01702C  583E               	subwfb	(btemp+9)^0,w,c
 18542  01702E  A0D8               	btfss	status,0,c
 18543  017030  D014               	goto	l6962
 18544                           
 18545                           ;stkvar	_divisor @ sp[(-2)+-4]
 18546                           ;stkvar	_dividend @ sp[(-2)+-2]
 18547  017032  0EFC               	movlw	-4
 18548  017034  50E3               	movf	plusw1,w,c
 18549  017036  6E35               	movwf	btemp^0,c
 18550  017038  0EFA               	movlw	-6
 18551  01703A  50E3               	movf	plusw1,w,c
 18552  01703C  5E35               	subwf	btemp^0,f,c
 18553  01703E  0EFC               	movlw	-4
 18554  017040  0060  F0D7  FFE3   	movff	btemp,plusw1
 18555  017046  0EFD               	movlw	-3
 18556  017048  50E3               	movf	plusw1,w,c
 18557  01704A  6E35               	movwf	btemp^0,c
 18558  01704C  0EFB               	movlw	-5
 18559  01704E  50E3               	movf	plusw1,w,c
 18560  017050  5A35               	subwfb	btemp^0,f,c
 18561  017052  0EFD               	movlw	-3
 18562  017054  0060  F0D7  FFE3   	movff	btemp,plusw1
 18563  01705A                     l6962:
 18564                           
 18565                           ;stkvar	_divisor @ sp[(-2)+-4]
 18566  01705A  90D8               	bcf	status,0,c
 18567  01705C  0EFB               	movlw	-5
 18568  01705E  32E3               	rrcf	plusw1,f,c
 18569  017060  0EFA               	movlw	-6
 18570  017062  32E3               	rrcf	plusw1,f,c
 18571                           
 18572                           ;stkvar	_counter @ sp[(-2)+1]
 18573  017064  0EFF               	movlw	-1
 18574  017066  50E3               	movf	plusw1,w,c
 18575  017068  6E35               	movwf	btemp^0,c
 18576  01706A  0E01               	movlw	1
 18577  01706C  5E35               	subwf	btemp^0,f,c
 18578  01706E  0EFF               	movlw	-1
 18579  017070  0060  F0D7  FFE3   	movff	btemp,plusw1
 18580  017076  A4D8               	btfss	status,2,c
 18581  017078  D7C6               	goto	u6250
 18582  01707A                     u6270:
 18583                           
 18584                           ;stkvar	_sign @ sp[(-2)+0]
 18585  01707A  0EFE               	movlw	-2
 18586  01707C  50E3               	movf	plusw1,w,c
 18587  01707E  B4D8               	btfsc	status,2,c
 18588  017080  D006               	goto	l6970
 18589                           
 18590                           ;stkvar	_dividend @ sp[(-2)+-2]
 18591                           ;stkvar	_dividend @ sp[(-2)+-2]
 18592  017082  0EFC               	movlw	-4
 18593  017084  6CE3               	negf	plusw1,c
 18594  017086  0EFD               	movlw	-3
 18595  017088  1EE3               	comf	plusw1,f,c
 18596  01708A  B0D8               	btfsc	status,0,c
 18597  01708C  2AE3               	incf	plusw1,f,c
 18598  01708E                     l6970:
 18599                           
 18600                           ;stkvar	_dividend @ sp[(-2)+-2]
 18601  01708E  0EFC               	movlw	-4
 18602  017090  006F FF8C  F035    	movff	plusw1,btemp
 18603  017096  0EFD               	movlw	-3
 18604  017098  006F FF8C  F036    	movff	plusw1,btemp+1
 18605                           
 18606                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18607  01709E  0EFA               	movlw	250
 18608  0170A0  26E1               	addwf	fsr1l,f,c
 18609  0170A2  0EFF               	movlw	255
 18610  0170A4  22E2               	addwfc	fsr1h,f,c
 18611  0170A6  0012               	return		;funcret
 18612  0170A8                     __end_of___awmod:
 18613                           	opt callstack 0
 18614                           
 18615 ;; *************** function ___awdiv *****************
 18616 ;; Defined at:
 18617 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 18618 ;; Parameters:    Size  Location     Type
 18619 ;;  dividend        2  [STACK] int 
 18620 ;;  divisor         2  [STACK] int 
 18621 ;; Auto vars:     Size  Location     Type
 18622 ;;  quotient        2  [STACK] int 
 18623 ;;  sign            1  [STACK] unsigned char 
 18624 ;;  counter         1  [STACK] unsigned char 
 18625 ;; Return value:  Size  Location     Type
 18626 ;;                  2  [STACK] int 
 18627 ;; Registers used:
 18628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18629 ;; Tracked objects:
 18630 ;;		On entry : 0/4
 18631 ;;		On exit  : 0/0
 18632 ;;		Unchanged: 0/0
 18633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18638 ;;Total ram usage:        0 bytes
 18639 ;; Hardware stack levels used:    1
 18640 ;; Hardware stack levels required when called:    6
 18641 ;; This function calls:
 18642 ;;		Nothing
 18643 ;; This function is called by:
 18644 ;;		_efgtoa
 18645 ;; This function uses a reentrant model
 18646 ;;
 18647                           
 18648                           	psect	text60
 18649  016AB0                     __ptext60:
 18650                           	opt callstack 0
 18651  016AB0                     ___awdiv:
 18652                           	opt callstack 0
 18653                           
 18654                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18655  016AB0  52E6               	movf	postinc1,f,c
 18656  016AB2  52E6               	movf	postinc1,f,c
 18657  016AB4  52E6               	movf	postinc1,f,c
 18658  016AB6  52E6               	movf	postinc1,f,c
 18659                           
 18660                           ;stkvar	_sign @ sp[(-4)+2]
 18661                           
 18662                           ;incstack = 0
 18663  016AB8  0EFE               	movlw	-2
 18664  016ABA  6AE3               	clrf	plusw1,c
 18665                           
 18666                           ;stkvar	_divisor @ sp[(-4)+-4]
 18667  016ABC  0EF9               	movlw	-7
 18668  016ABE  AEE3               	btfss	plusw1,7,c
 18669  016AC0  D009               	goto	l6898
 18670                           
 18671                           ;stkvar	_divisor @ sp[(-4)+-4]
 18672                           ;stkvar	_divisor @ sp[(-4)+-4]
 18673  016AC2  0EF8               	movlw	-8
 18674  016AC4  6CE3               	negf	plusw1,c
 18675  016AC6  0EF9               	movlw	-7
 18676  016AC8  1EE3               	comf	plusw1,f,c
 18677  016ACA  B0D8               	btfsc	status,0,c
 18678  016ACC  2AE3               	incf	plusw1,f,c
 18679                           
 18680                           ;stkvar	_sign @ sp[(-4)+2]
 18681  016ACE  0EFE               	movlw	-2
 18682  016AD0  6AE3               	clrf	plusw1,c
 18683  016AD2  2AE3               	incf	plusw1,f,c
 18684  016AD4                     l6898:
 18685                           
 18686                           ;stkvar	_dividend @ sp[(-4)+-2]
 18687  016AD4  0EFB               	movlw	-5
 18688  016AD6  AEE3               	btfss	plusw1,7,c
 18689  016AD8  D008               	goto	l6904
 18690                           
 18691                           ;stkvar	_dividend @ sp[(-4)+-2]
 18692                           ;stkvar	_dividend @ sp[(-4)+-2]
 18693  016ADA  0EFA               	movlw	-6
 18694  016ADC  6CE3               	negf	plusw1,c
 18695  016ADE  0EFB               	movlw	-5
 18696  016AE0  1EE3               	comf	plusw1,f,c
 18697  016AE2  B0D8               	btfsc	status,0,c
 18698  016AE4  2AE3               	incf	plusw1,f,c
 18699                           
 18700                           ;stkvar	_sign @ sp[(-4)+2]
 18701  016AE6  0EFE               	movlw	-2
 18702  016AE8  70E3               	btg	plusw1,0,c
 18703  016AEA                     l6904:
 18704                           
 18705                           ;stkvar	_quotient @ sp[(-4)+0]
 18706  016AEA  0EFC               	movlw	-4
 18707  016AEC  6AE3               	clrf	plusw1,c
 18708  016AEE  0EFD               	movlw	-3
 18709  016AF0  6AE3               	clrf	plusw1,c
 18710                           
 18711                           ;stkvar	_divisor @ sp[(-4)+-4]
 18712  016AF2  0EF8               	movlw	-8
 18713  016AF4  006F FF8C  F035    	movff	plusw1,btemp
 18714  016AFA  0EF9               	movlw	-7
 18715  016AFC  50E3               	movf	plusw1,w,c
 18716  016AFE  1035               	iorwf	btemp^0,w,c
 18717  016B00  B4D8               	btfsc	status,2,c
 18718  016B02  D066               	goto	u6200
 18719                           
 18720                           ;stkvar	_counter @ sp[(-4)+3]
 18721  016B04  0EFF               	movlw	-1
 18722  016B06  6AE3               	clrf	plusw1,c
 18723  016B08  D012               	goto	L18
 18724  016B0A                     l6910:
 18725                           
 18726                           ;stkvar	_divisor @ sp[(-4)+-4]
 18727  016B0A  0EF8               	movlw	-8
 18728  016B0C  50E3               	movf	plusw1,w,c
 18729  016B0E  90D8               	bcf	status,0,c
 18730  016B10  34E8               	rlcf	wreg,w,c
 18731  016B12  6E35               	movwf	btemp^0,c
 18732  016B14  0EF8               	movlw	-8
 18733  016B16  0060  F0D7  FFE3   	movff	btemp,plusw1
 18734  016B1C  0EF9               	movlw	-7
 18735  016B1E  50E3               	movf	plusw1,w,c
 18736  016B20  34E8               	rlcf	wreg,w,c
 18737  016B22  6E35               	movwf	btemp^0,c
 18738  016B24  0EF9               	movlw	-7
 18739  016B26  0060  F0D7  FFE3   	movff	btemp,plusw1
 18740                           
 18741                           ;stkvar	_counter @ sp[(-4)+3]
 18742  016B2C  0EFF               	movlw	-1
 18743  016B2E                     L18:
 18744  016B2E  2AE3               	incf	plusw1,f,c
 18745                           
 18746                           ;stkvar	_divisor @ sp[(-4)+-4]
 18747  016B30  0EF9               	movlw	-7
 18748  016B32  AEE3               	btfss	plusw1,7,c
 18749  016B34  D7EA               	goto	l6910
 18750  016B36                     u6180:
 18751                           
 18752                           ;stkvar	_quotient @ sp[(-4)+0]
 18753  016B36  0EFC               	movlw	-4
 18754  016B38  50E3               	movf	plusw1,w,c
 18755  016B3A  90D8               	bcf	status,0,c
 18756  016B3C  34E8               	rlcf	wreg,w,c
 18757  016B3E  6E35               	movwf	btemp^0,c
 18758  016B40  0EFC               	movlw	-4
 18759  016B42  0060  F0D7  FFE3   	movff	btemp,plusw1
 18760  016B48  0EFD               	movlw	-3
 18761  016B4A  50E3               	movf	plusw1,w,c
 18762  016B4C  34E8               	rlcf	wreg,w,c
 18763  016B4E  6E35               	movwf	btemp^0,c
 18764  016B50  0EFD               	movlw	-3
 18765  016B52  0060  F0D7  FFE3   	movff	btemp,plusw1
 18766                           
 18767                           ;stkvar	_divisor @ sp[(-4)+-4]
 18768  016B58  0EF8               	movlw	-8
 18769  016B5A  006F FF8C  F03F    	movff	plusw1,btemp+10
 18770  016B60  0EF9               	movlw	-7
 18771  016B62  006F FF8C  F040    	movff	plusw1,btemp+11
 18772                           
 18773                           ;stkvar	_dividend @ sp[(-4)+-2]
 18774  016B68  0EFA               	movlw	-6
 18775  016B6A  006F FF8C  F03D    	movff	plusw1,btemp+8
 18776  016B70  0EFB               	movlw	-5
 18777  016B72  006F FF8C  F03E    	movff	plusw1,btemp+9
 18778  016B78  503F               	movf	(btemp+10)^0,w,c
 18779  016B7A  5C3D               	subwf	(btemp+8)^0,w,c
 18780  016B7C  5040               	movf	(btemp+11)^0,w,c
 18781  016B7E  583E               	subwfb	(btemp+9)^0,w,c
 18782  016B80  A0D8               	btfss	status,0,c
 18783  016B82  D016               	goto	l6924
 18784                           
 18785                           ;stkvar	_divisor @ sp[(-4)+-4]
 18786                           ;stkvar	_dividend @ sp[(-4)+-2]
 18787  016B84  0EFA               	movlw	-6
 18788  016B86  50E3               	movf	plusw1,w,c
 18789  016B88  6E35               	movwf	btemp^0,c
 18790  016B8A  0EF8               	movlw	-8
 18791  016B8C  50E3               	movf	plusw1,w,c
 18792  016B8E  5E35               	subwf	btemp^0,f,c
 18793  016B90  0EFA               	movlw	-6
 18794  016B92  0060  F0D7  FFE3   	movff	btemp,plusw1
 18795  016B98  0EFB               	movlw	-5
 18796  016B9A  50E3               	movf	plusw1,w,c
 18797  016B9C  6E35               	movwf	btemp^0,c
 18798  016B9E  0EF9               	movlw	-7
 18799  016BA0  50E3               	movf	plusw1,w,c
 18800  016BA2  5A35               	subwfb	btemp^0,f,c
 18801  016BA4  0EFB               	movlw	-5
 18802  016BA6  0060  F0D7  FFE3   	movff	btemp,plusw1
 18803                           
 18804                           ;stkvar	_quotient @ sp[(-4)+0]
 18805  016BAC  0EFC               	movlw	-4
 18806  016BAE  80E3               	bsf	plusw1,0,c
 18807  016BB0                     l6924:
 18808                           
 18809                           ;stkvar	_divisor @ sp[(-4)+-4]
 18810  016BB0  90D8               	bcf	status,0,c
 18811  016BB2  0EF9               	movlw	-7
 18812  016BB4  32E3               	rrcf	plusw1,f,c
 18813  016BB6  0EF8               	movlw	-8
 18814  016BB8  32E3               	rrcf	plusw1,f,c
 18815                           
 18816                           ;stkvar	_counter @ sp[(-4)+3]
 18817  016BBA  0EFF               	movlw	-1
 18818  016BBC  50E3               	movf	plusw1,w,c
 18819  016BBE  6E35               	movwf	btemp^0,c
 18820  016BC0  0E01               	movlw	1
 18821  016BC2  5E35               	subwf	btemp^0,f,c
 18822  016BC4  0EFF               	movlw	-1
 18823  016BC6  0060  F0D7  FFE3   	movff	btemp,plusw1
 18824  016BCC  A4D8               	btfss	status,2,c
 18825  016BCE  D7B3               	goto	u6180
 18826  016BD0                     u6200:
 18827                           
 18828                           ;stkvar	_sign @ sp[(-4)+2]
 18829  016BD0  0EFE               	movlw	-2
 18830  016BD2  50E3               	movf	plusw1,w,c
 18831  016BD4  B4D8               	btfsc	status,2,c
 18832  016BD6  D006               	goto	l6932
 18833                           
 18834                           ;stkvar	_quotient @ sp[(-4)+0]
 18835                           ;stkvar	_quotient @ sp[(-4)+0]
 18836  016BD8  0EFC               	movlw	-4
 18837  016BDA  6CE3               	negf	plusw1,c
 18838  016BDC  0EFD               	movlw	-3
 18839  016BDE  1EE3               	comf	plusw1,f,c
 18840  016BE0  B0D8               	btfsc	status,0,c
 18841  016BE2  2AE3               	incf	plusw1,f,c
 18842  016BE4                     l6932:
 18843                           
 18844                           ;stkvar	_quotient @ sp[(-4)+0]
 18845  016BE4  0EFC               	movlw	-4
 18846  016BE6  006F FF8C  F035    	movff	plusw1,btemp
 18847  016BEC  0EFD               	movlw	-3
 18848  016BEE  006F FF8C  F036    	movff	plusw1,btemp+1
 18849                           
 18850                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18851  016BF4  0EF8               	movlw	248
 18852  016BF6  26E1               	addwf	fsr1l,f,c
 18853  016BF8  0EFF               	movlw	255
 18854  016BFA  22E2               	addwfc	fsr1h,f,c
 18855  016BFC  0012               	return		;funcret
 18856  016BFE                     __end_of___awdiv:
 18857                           	opt callstack 0
 18858                           
 18859 ;; *************** function _dtoa *****************
 18860 ;; Defined at:
 18861 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18862 ;; Parameters:    Size  Location     Type
 18863 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18864 ;;		 -> f(6), NULL(0), 
 18865 ;;  d               8  [STACK] long long 
 18866 ;; Auto vars:     Size  Location     Type
 18867 ;;  n               8  [STACK] long long 
 18868 ;;  i               2  [STACK] int 
 18869 ;;  s               2  [STACK] int 
 18870 ;;  w               2  [STACK] int 
 18871 ;;  p               2  [STACK] int 
 18872 ;; Return value:  Size  Location     Type
 18873 ;;                  2  [STACK] int 
 18874 ;; Registers used:
 18875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 18876 ;; Tracked objects:
 18877 ;;		On entry : 0/4
 18878 ;;		On exit  : 0/0
 18879 ;;		Unchanged: 0/0
 18880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18885 ;;Total ram usage:        0 bytes
 18886 ;; Hardware stack levels used:    1
 18887 ;; Hardware stack levels required when called:   11
 18888 ;; This function calls:
 18889 ;;		___aodiv
 18890 ;;		___aomod
 18891 ;;		_abs
 18892 ;;		_pad
 18893 ;; This function is called by:
 18894 ;;		_vfpfcnvrt
 18895 ;; This function uses a reentrant model
 18896 ;;
 18897                           
 18898                           	psect	text61
 18899  013D1A                     __ptext61:
 18900                           	opt callstack 0
 18901  013D1A                     _dtoa:
 18902                           	opt callstack 0
 18903                           
 18904                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18905  013D1A  0E12               	movlw	18
 18906  013D1C  26E1               	addwf	fsr1l,f,c
 18907  013D1E  0E00               	movlw	0
 18908  013D20  22E2               	addwfc	fsr1h,f,c
 18909                           
 18910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 18911                           ;stkvar	_d @ sp[(-18)+-10]
 18912                           
 18913                           ;incstack = 0
 18914  013D22  0EE4               	movlw	228
 18915  013D24  24E1               	addwf	fsr1l,w,c
 18916  013D26  6ED9               	movwf	fsr2l,c
 18917  013D28  0EFF               	movlw	255
 18918  013D2A  20E2               	addwfc	fsr1h,w,c
 18919  013D2C  6EDA               	movwf	fsr2h,c
 18920                           
 18921                           ;stkvar	_n @ sp[(-18)+2]
 18922  013D2E  0E08               	movlw	8
 18923  013D30  6E35               	movwf	btemp^0,c
 18924  013D32  0EF0               	movlw	-16
 18925  013D34                     us921999:
 18926  013D34  006F FF7B FFE3     	movff	postinc2,plusw1
 18927  013D3A  28E8               	incf	wreg,w,c
 18928  013D3C  2E35               	decfsz	btemp^0,f,c
 18929  013D3E  D7FA               	bra	us921999
 18930                           
 18931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 18932                           ;stkvar	_n @ sp[(-18)+2]
 18933  013D40  0EF7               	movlw	-9
 18934  013D42  AEE3               	btfss	plusw1,7,c
 18935  013D44  D002               	goto	u9220
 18936  013D46  0E01               	movlw	1
 18937  013D48  D001               	goto	u9230
 18938  013D4A                     u9220:
 18939  013D4A  0E00               	movlw	0
 18940  013D4C                     u9230:
 18941  013D4C  6E3F               	movwf	(btemp+10)^0,c
 18942  013D4E  6A40               	clrf	(btemp+11)^0,c
 18943                           
 18944                           ;stkvar	_s @ sp[(-18)+12]
 18945  013D50  0EFA               	movlw	-6
 18946  013D52  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18947  013D58  0EFB               	movlw	-5
 18948  013D5A  0060  F103  FFE3   	movff	btemp+11,plusw1
 18949                           
 18950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 18951                           ;stkvar	_s @ sp[(-18)+12]
 18952  013D60  0EFA               	movlw	-6
 18953  013D62  006F FF8C  F035    	movff	plusw1,btemp
 18954  013D68  0EFB               	movlw	-5
 18955  013D6A  50E3               	movf	plusw1,w,c
 18956  013D6C  1035               	iorwf	btemp^0,w,c
 18957  013D6E  B4D8               	btfsc	status,2,c
 18958  013D70  D025               	goto	u9250
 18959                           
 18960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 18961                           ;stkvar	_n @ sp[(-18)+2]
 18962                           ;stkvar	_n @ sp[(-18)+2]
 18963  013D72  0EF0               	movlw	-16
 18964  013D74  6CE3               	negf	plusw1,c
 18965  013D76  0EF1               	movlw	-15
 18966  013D78  1EE3               	comf	plusw1,f,c
 18967  013D7A  0EF2               	movlw	-14
 18968  013D7C  1EE3               	comf	plusw1,f,c
 18969  013D7E  0EF3               	movlw	-13
 18970  013D80  1EE3               	comf	plusw1,f,c
 18971  013D82  0EF4               	movlw	-12
 18972  013D84  1EE3               	comf	plusw1,f,c
 18973  013D86  0EF5               	movlw	-11
 18974  013D88  1EE3               	comf	plusw1,f,c
 18975  013D8A  0EF6               	movlw	-10
 18976  013D8C  1EE3               	comf	plusw1,f,c
 18977  013D8E  0EF7               	movlw	-9
 18978  013D90  1EE3               	comf	plusw1,f,c
 18979  013D92  E314               	bnc	u9250
 18980  013D94  0EF1               	movlw	-15
 18981  013D96  2AE3               	incf	plusw1,f,c
 18982  013D98  E311               	bnc	u9250
 18983  013D9A  0EF2               	movlw	-14
 18984  013D9C  2AE3               	incf	plusw1,f,c
 18985  013D9E  E30E               	bnc	u9250
 18986  013DA0  0EF3               	movlw	-13
 18987  013DA2  2AE3               	incf	plusw1,f,c
 18988  013DA4  E30B               	bnc	u9250
 18989  013DA6  0EF4               	movlw	-12
 18990  013DA8  2AE3               	incf	plusw1,f,c
 18991  013DAA  E308               	bnc	u9250
 18992  013DAC  0EF5               	movlw	-11
 18993  013DAE  2AE3               	incf	plusw1,f,c
 18994  013DB0  E305               	bnc	u9250
 18995  013DB2  0EF6               	movlw	-10
 18996  013DB4  2AE3               	incf	plusw1,f,c
 18997  013DB6  E302               	bnc	u9250
 18998  013DB8  0EF7               	movlw	-9
 18999  013DBA  2AE3               	incf	plusw1,f,c
 19000  013DBC                     u9250:
 19001                           
 19002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19003  013DBC  AE21               	btfss	(_prec+1)^0,7,c
 19004                           
 19005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19006  013DBE  9222               	bcf	_flags^0,1,c
 19007                           
 19008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19009  013DC0  BE21               	btfsc	(_prec+1)^0,7,c
 19010  013DC2  D005               	goto	u9270
 19011  013DC4  5021               	movf	(_prec+1)^0,w,c
 19012  013DC6  E110               	bnz	l9332
 19013  013DC8  0420               	decf	_prec^0,w,c
 19014  013DCA  B0D8               	btfsc	status,0,c
 19015  013DCC  D00D               	goto	l9332
 19016  013DCE                     u9270:
 19017  013DCE  0E01               	movlw	1
 19018  013DD0  6E3F               	movwf	(btemp+10)^0,c
 19019  013DD2  0E00               	movlw	0
 19020  013DD4  6E40               	movwf	(btemp+11)^0,c
 19021                           
 19022                           ;stkvar	_p @ sp[(-18)+16]
 19023  013DD6  0EFE               	movlw	-2
 19024  013DD8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19025  013DDE  0EFF               	movlw	-1
 19026  013DE0  0060  F103  FFE3   	movff	btemp+11,plusw1
 19027  013DE6  D008               	goto	l1774
 19028  013DE8                     l9332:
 19029                           
 19030                           ;stkvar	_p @ sp[(-18)+16]
 19031  013DE8  0EFE               	movlw	-2
 19032  013DEA  0060  F083  FFE3   	movff	_prec,plusw1
 19033  013DF0  0EFF               	movlw	-1
 19034  013DF2  0060  F087  FFE3   	movff	_prec+1,plusw1
 19035  013DF8                     l1774:
 19036                           
 19037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19038                           ;stkvar	_w @ sp[(-18)+14]
 19039  013DF8  0EFC               	movlw	-4
 19040  013DFA  0060  F07B  FFE3   	movff	_width,plusw1
 19041  013E00  0EFD               	movlw	-3
 19042  013E02  0060  F07F  FFE3   	movff	_width+1,plusw1
 19043                           
 19044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19045                           ;stkvar	_s @ sp[(-18)+12]
 19046  013E08  0EFA               	movlw	-6
 19047  013E0A  006F FF8C  F035    	movff	plusw1,btemp
 19048  013E10  0EFB               	movlw	-5
 19049  013E12  50E3               	movf	plusw1,w,c
 19050  013E14  1035               	iorwf	btemp^0,w,c
 19051  013E16  A4D8               	btfss	status,2,c
 19052  013E18  D002               	goto	u9290
 19053  013E1A  A422               	btfss	_flags^0,2,c
 19054  013E1C  D00A               	goto	l9340
 19055  013E1E                     u9290:
 19056                           
 19057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19058                           ;stkvar	_w @ sp[(-18)+14]
 19059  013E1E  50E1               	movf	fsr1l,w,c
 19060  013E20  0FFC               	addlw	-4
 19061  013E22  6ED9               	movwf	fsr2l,c
 19062  013E24  50E2               	movf	fsr1h,w,c
 19063  013E26  6EDA               	movwf	fsr2h,c
 19064  013E28  0EFF               	movlw	255
 19065  013E2A  22DA               	addwfc	fsr2h,f,c
 19066  013E2C  06DE               	decf	postinc2,f,c
 19067  013E2E  0E00               	movlw	0
 19068  013E30  5ADD               	subwfb	postdec2,f,c
 19069  013E32                     l9340:
 19070                           
 19071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19072  013E32  0E4F               	movlw	79
 19073  013E34  6E3F               	movwf	(btemp+10)^0,c
 19074  013E36  0E00               	movlw	0
 19075  013E38  6E40               	movwf	(btemp+11)^0,c
 19076                           
 19077                           ;stkvar	_i @ sp[(-18)+10]
 19078  013E3A  0EF8               	movlw	-8
 19079  013E3C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19080  013E42  0EF9               	movlw	-7
 19081  013E44  0060  F103  FFE3   	movff	btemp+11,plusw1
 19082                           
 19083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19084  013E4A  0102               	movlb	2	; () banked
 19085  013E4C  6BFB               	clrf	(_dbuf+79)& (0+255),b
 19086                           
 19087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19088  013E4E  D109               	goto	l9354
 19089  013E50                     l9344:
 19090                           
 19091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19092                           ;stkvar	_i @ sp[(-18)+10]
 19093  013E50  50E1               	movf	fsr1l,w,c
 19094  013E52  0FF8               	addlw	-8
 19095  013E54  6ED9               	movwf	fsr2l,c
 19096  013E56  50E2               	movf	fsr1h,w,c
 19097  013E58  6EDA               	movwf	fsr2h,c
 19098  013E5A  0EFF               	movlw	255
 19099  013E5C  22DA               	addwfc	fsr2h,f,c
 19100  013E5E  06DE               	decf	postinc2,f,c
 19101  013E60  0E00               	movlw	0
 19102  013E62  5ADD               	subwfb	postdec2,f,c
 19103                           
 19104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19105  013E64  0E0A               	movlw	10
 19106  013E66  6EE6               	movwf	postinc1,c
 19107  013E68  0E00               	movlw	0
 19108  013E6A  6EE6               	movwf	postinc1,c
 19109  013E6C  0E00               	movlw	0
 19110  013E6E  6EE6               	movwf	postinc1,c
 19111  013E70  0E00               	movlw	0
 19112  013E72  6EE6               	movwf	postinc1,c
 19113  013E74  0E00               	movlw	0
 19114  013E76  6EE6               	movwf	postinc1,c
 19115  013E78  0E00               	movlw	0
 19116  013E7A  6EE6               	movwf	postinc1,c
 19117  013E7C  0E00               	movlw	0
 19118  013E7E  6EE6               	movwf	postinc1,c
 19119  013E80  0E00               	movlw	0
 19120  013E82  6EE6               	movwf	postinc1,c
 19121                           
 19122                           ;stkvar	_n @ sp[(-26)+2]
 19123  013E84  50E1               	movf	fsr1l,w,c
 19124  013E86  0FE8               	addlw	-24
 19125  013E88  6ED9               	movwf	fsr2l,c
 19126  013E8A  50E2               	movf	fsr1h,w,c
 19127  013E8C  6EDA               	movwf	fsr2h,c
 19128  013E8E  0EFF               	movlw	255
 19129  013E90  22DA               	addwfc	fsr2h,f,c
 19130  013E92  006F FF7B FFE6     	movff	postinc2,postinc1
 19131  013E98  006F FF7B FFE6     	movff	postinc2,postinc1
 19132  013E9E  006F FF7B FFE6     	movff	postinc2,postinc1
 19133  013EA4  006F FF7B FFE6     	movff	postinc2,postinc1
 19134  013EAA  006F FF7B FFE6     	movff	postinc2,postinc1
 19135  013EB0  006F FF7B FFE6     	movff	postinc2,postinc1
 19136  013EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 19137  013EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 19138  013EC2  EC48  F0AD         	call	___aomod	;wreg free
 19139  013EC6  52E5               	movf	postdec1,f,c
 19140  013EC8  006F FF9C  F04C    	movff	indf1,btemp+23
 19141  013ECE  52E5               	movf	postdec1,f,c
 19142  013ED0  006F FF9C  F04B    	movff	indf1,btemp+22
 19143  013ED6  52E5               	movf	postdec1,f,c
 19144  013ED8  006F FF9C  F04A    	movff	indf1,btemp+21
 19145  013EDE  52E5               	movf	postdec1,f,c
 19146  013EE0  006F FF9C  F049    	movff	indf1,btemp+20
 19147  013EE6  52E5               	movf	postdec1,f,c
 19148  013EE8  006F FF9C  F048    	movff	indf1,btemp+19
 19149  013EEE  52E5               	movf	postdec1,f,c
 19150  013EF0  006F FF9C  F047    	movff	indf1,btemp+18
 19151  013EF6  52E5               	movf	postdec1,f,c
 19152  013EF8  006F FF9C  F046    	movff	indf1,btemp+17
 19153  013EFE  52E5               	movf	postdec1,f,c
 19154  013F00  006F FF9C  F045    	movff	indf1,btemp+16
 19155  013F06  0EF8               	movlw	248
 19156  013F08  26E1               	addwf	fsr1l,f,c
 19157  013F0A  0EFF               	movlw	255
 19158  013F0C  22E2               	addwfc	fsr1h,f,c
 19159  013F0E  0060  F114  F03F   	movff	btemp+16,btemp+10
 19160  013F14  0060  F118  F040   	movff	btemp+17,btemp+11
 19161  013F1A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 19162  013F20  0060  F103  FFE6   	movff	btemp+11,postinc1
 19163  013F26  EC51  F0C2         	call	_abs	;wreg free
 19164  013F2A  0E30               	movlw	48
 19165  013F2C  2635               	addwf	btemp^0,f,c
 19166                           
 19167                           ;stkvar	_i @ sp[(-18)+10]
 19168  013F2E  0EF8               	movlw	-8
 19169  013F30  006F FF8C  F03F    	movff	plusw1,btemp+10
 19170  013F36  0EF9               	movlw	-7
 19171  013F38  006F FF8C  F040    	movff	plusw1,btemp+11
 19172  013F3E  0EAC               	movlw	low _dbuf
 19173  013F40  243F               	addwf	(btemp+10)^0,w,c
 19174  013F42  6ED9               	movwf	fsr2l,c
 19175  013F44  0E02               	movlw	high _dbuf
 19176  013F46  2040               	addwfc	(btemp+11)^0,w,c
 19177  013F48  6EDA               	movwf	fsr2h,c
 19178  013F4A  0060  F0D7  FFDF   	movff	btemp,indf2
 19179                           
 19180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19181                           ;stkvar	_p @ sp[(-18)+16]
 19182  013F50  50E1               	movf	fsr1l,w,c
 19183  013F52  0FFE               	addlw	-2
 19184  013F54  6ED9               	movwf	fsr2l,c
 19185  013F56  50E2               	movf	fsr1h,w,c
 19186  013F58  6EDA               	movwf	fsr2h,c
 19187  013F5A  0EFF               	movlw	255
 19188  013F5C  22DA               	addwfc	fsr2h,f,c
 19189  013F5E  06DE               	decf	postinc2,f,c
 19190  013F60  0E00               	movlw	0
 19191  013F62  5ADD               	subwfb	postdec2,f,c
 19192                           
 19193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19194                           ;stkvar	_w @ sp[(-18)+14]
 19195  013F64  50E1               	movf	fsr1l,w,c
 19196  013F66  0FFC               	addlw	-4
 19197  013F68  6ED9               	movwf	fsr2l,c
 19198  013F6A  50E2               	movf	fsr1h,w,c
 19199  013F6C  6EDA               	movwf	fsr2h,c
 19200  013F6E  0EFF               	movlw	255
 19201  013F70  22DA               	addwfc	fsr2h,f,c
 19202  013F72  06DE               	decf	postinc2,f,c
 19203  013F74  0E00               	movlw	0
 19204  013F76  5ADD               	subwfb	postdec2,f,c
 19205                           
 19206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19207  013F78  0E0A               	movlw	10
 19208  013F7A  6EE6               	movwf	postinc1,c
 19209  013F7C  0E00               	movlw	0
 19210  013F7E  6EE6               	movwf	postinc1,c
 19211  013F80  0E00               	movlw	0
 19212  013F82  6EE6               	movwf	postinc1,c
 19213  013F84  0E00               	movlw	0
 19214  013F86  6EE6               	movwf	postinc1,c
 19215  013F88  0E00               	movlw	0
 19216  013F8A  6EE6               	movwf	postinc1,c
 19217  013F8C  0E00               	movlw	0
 19218  013F8E  6EE6               	movwf	postinc1,c
 19219  013F90  0E00               	movlw	0
 19220  013F92  6EE6               	movwf	postinc1,c
 19221  013F94  0E00               	movlw	0
 19222  013F96  6EE6               	movwf	postinc1,c
 19223                           
 19224                           ;stkvar	_n @ sp[(-26)+2]
 19225  013F98  50E1               	movf	fsr1l,w,c
 19226  013F9A  0FE8               	addlw	-24
 19227  013F9C  6ED9               	movwf	fsr2l,c
 19228  013F9E  50E2               	movf	fsr1h,w,c
 19229  013FA0  6EDA               	movwf	fsr2h,c
 19230  013FA2  0EFF               	movlw	255
 19231  013FA4  22DA               	addwfc	fsr2h,f,c
 19232  013FA6  006F FF7B FFE6     	movff	postinc2,postinc1
 19233  013FAC  006F FF7B FFE6     	movff	postinc2,postinc1
 19234  013FB2  006F FF7B FFE6     	movff	postinc2,postinc1
 19235  013FB8  006F FF7B FFE6     	movff	postinc2,postinc1
 19236  013FBE  006F FF7B FFE6     	movff	postinc2,postinc1
 19237  013FC4  006F FF7B FFE6     	movff	postinc2,postinc1
 19238  013FCA  006F FF7B FFE6     	movff	postinc2,postinc1
 19239  013FD0  006F FF7B FFE6     	movff	postinc2,postinc1
 19240  013FD6  ECCE  F0AA         	call	___aodiv	;wreg free
 19241  013FDA  52E5               	movf	postdec1,f,c
 19242  013FDC  006F FF9C  F04C    	movff	indf1,btemp+23
 19243  013FE2  52E5               	movf	postdec1,f,c
 19244  013FE4  006F FF9C  F04B    	movff	indf1,btemp+22
 19245  013FEA  52E5               	movf	postdec1,f,c
 19246  013FEC  006F FF9C  F04A    	movff	indf1,btemp+21
 19247  013FF2  52E5               	movf	postdec1,f,c
 19248  013FF4  006F FF9C  F049    	movff	indf1,btemp+20
 19249  013FFA  52E5               	movf	postdec1,f,c
 19250  013FFC  006F FF9C  F048    	movff	indf1,btemp+19
 19251  014002  52E5               	movf	postdec1,f,c
 19252  014004  006F FF9C  F047    	movff	indf1,btemp+18
 19253  01400A  52E5               	movf	postdec1,f,c
 19254  01400C  006F FF9C  F046    	movff	indf1,btemp+17
 19255  014012  52E5               	movf	postdec1,f,c
 19256  014014  006F FF9C  F045    	movff	indf1,btemp+16
 19257  01401A  0EF8               	movlw	248
 19258  01401C  26E1               	addwf	fsr1l,f,c
 19259  01401E  0EFF               	movlw	255
 19260  014020  22E2               	addwfc	fsr1h,f,c
 19261                           
 19262                           ;stkvar	_n @ sp[(-18)+2]
 19263  014022  0EF0               	movlw	-16
 19264  014024  0060  F117  FFE3   	movff	btemp+16,plusw1
 19265  01402A  0EF1               	movlw	-15
 19266  01402C  0060  F11B  FFE3   	movff	btemp+17,plusw1
 19267  014032  0EF2               	movlw	-14
 19268  014034  0060  F11F  FFE3   	movff	btemp+18,plusw1
 19269  01403A  0EF3               	movlw	-13
 19270  01403C  0060  F123  FFE3   	movff	btemp+19,plusw1
 19271  014042  0EF4               	movlw	-12
 19272  014044  0060  F127  FFE3   	movff	btemp+20,plusw1
 19273  01404A  0EF5               	movlw	-11
 19274  01404C  0060  F12B  FFE3   	movff	btemp+21,plusw1
 19275  014052  0EF6               	movlw	-10
 19276  014054  0060  F12F  FFE3   	movff	btemp+22,plusw1
 19277  01405A  0EF7               	movlw	-9
 19278  01405C  0060  F133  FFE3   	movff	btemp+23,plusw1
 19279  014062                     l9354:
 19280                           
 19281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19282                           ;stkvar	_i @ sp[(-18)+10]
 19283  014062  0EF9               	movlw	-7
 19284  014064  BEE3               	btfsc	plusw1,7,c
 19285  014066  D036               	goto	u9340
 19286  014068  0EF9               	movlw	-7
 19287  01406A  50E3               	movf	plusw1,w,c
 19288  01406C  E104               	bnz	u9300
 19289  01406E  0EF8               	movlw	-8
 19290  014070  04E3               	decf	plusw1,w,c
 19291  014072  A0D8               	btfss	status,0,c
 19292  014074  D02F               	goto	u9340
 19293  014076                     u9300:
 19294                           
 19295                           ;stkvar	_n @ sp[(-18)+2]
 19296  014076  0EF0               	movlw	-16
 19297  014078  50E3               	movf	plusw1,w,c
 19298  01407A  E115               	bnz	u9311
 19299  01407C  0EF1               	movlw	-15
 19300  01407E  50E3               	movf	plusw1,w,c
 19301  014080  E112               	bnz	u9311
 19302  014082  0EF2               	movlw	-14
 19303  014084  50E3               	movf	plusw1,w,c
 19304  014086  E10F               	bnz	u9311
 19305  014088  0EF3               	movlw	-13
 19306  01408A  50E3               	movf	plusw1,w,c
 19307  01408C  E10C               	bnz	u9311
 19308  01408E  0EF4               	movlw	-12
 19309  014090  50E3               	movf	plusw1,w,c
 19310  014092  E109               	bnz	u9311
 19311  014094  0EF5               	movlw	-11
 19312  014096  50E3               	movf	plusw1,w,c
 19313  014098  E106               	bnz	u9311
 19314  01409A  0EF6               	movlw	-10
 19315  01409C  50E3               	movf	plusw1,w,c
 19316  01409E  E103               	bnz	u9311
 19317  0140A0  0EF7               	movlw	-9
 19318  0140A2  50E3               	movf	plusw1,w,c
 19319  0140A4  A4D8               	btfss	status,2,c
 19320  0140A6                     u9311:
 19321  0140A6  D6D4               	goto	l9344
 19322                           
 19323                           ;stkvar	_p @ sp[(-18)+16]
 19324  0140A8  0EFF               	movlw	-1
 19325  0140AA  BEE3               	btfsc	plusw1,7,c
 19326  0140AC  D007               	goto	u9320
 19327  0140AE  0EFF               	movlw	-1
 19328  0140B0  50E3               	movf	plusw1,w,c
 19329  0140B2  E103               	bnz	u9321
 19330  0140B4  0EFE               	movlw	-2
 19331  0140B6  04E3               	decf	plusw1,w,c
 19332  0140B8  B0D8               	btfsc	status,0,c
 19333  0140BA                     u9321:
 19334  0140BA  D6CA               	goto	l9344
 19335  0140BC                     u9320:
 19336                           
 19337                           ;stkvar	_w @ sp[(-18)+14]
 19338  0140BC  0EFD               	movlw	-3
 19339  0140BE  BEE3               	btfsc	plusw1,7,c
 19340  0140C0  D009               	goto	u9340
 19341  0140C2  0EFD               	movlw	-3
 19342  0140C4  50E3               	movf	plusw1,w,c
 19343  0140C6  E104               	bnz	u9330
 19344  0140C8  0EFC               	movlw	-4
 19345  0140CA  04E3               	decf	plusw1,w,c
 19346  0140CC  A0D8               	btfss	status,0,c
 19347  0140CE  D002               	goto	u9340
 19348  0140D0                     u9330:
 19349  0140D0  B222               	btfsc	_flags^0,1,c
 19350  0140D2  D6BE               	goto	l9344
 19351  0140D4                     u9340:
 19352                           
 19353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19354                           ;stkvar	_s @ sp[(-18)+12]
 19355  0140D4  0EFA               	movlw	-6
 19356  0140D6  006F FF8C  F035    	movff	plusw1,btemp
 19357  0140DC  0EFB               	movlw	-5
 19358  0140DE  50E3               	movf	plusw1,w,c
 19359  0140E0  1035               	iorwf	btemp^0,w,c
 19360  0140E2  A4D8               	btfss	status,2,c
 19361  0140E4  D002               	goto	u9360
 19362  0140E6  A422               	btfss	_flags^0,2,c
 19363  0140E8  D033               	goto	l9378
 19364  0140EA                     u9360:
 19365                           
 19366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19367                           ;stkvar	_i @ sp[(-18)+10]
 19368  0140EA  50E1               	movf	fsr1l,w,c
 19369  0140EC  0FF8               	addlw	-8
 19370  0140EE  6ED9               	movwf	fsr2l,c
 19371  0140F0  50E2               	movf	fsr1h,w,c
 19372  0140F2  6EDA               	movwf	fsr2h,c
 19373  0140F4  0EFF               	movlw	255
 19374  0140F6  22DA               	addwfc	fsr2h,f,c
 19375  0140F8  06DE               	decf	postinc2,f,c
 19376  0140FA  0E00               	movlw	0
 19377  0140FC  5ADD               	subwfb	postdec2,f,c
 19378                           
 19379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19380                           ;stkvar	_s @ sp[(-18)+12]
 19381  0140FE  0EFA               	movlw	-6
 19382  014100  006F FF8C  F035    	movff	plusw1,btemp
 19383  014106  0EFB               	movlw	-5
 19384  014108  50E3               	movf	plusw1,w,c
 19385  01410A  1035               	iorwf	btemp^0,w,c
 19386  01410C  A4D8               	btfss	status,2,c
 19387  01410E  D002               	goto	l9374
 19388  014110  0E2B               	movlw	43
 19389  014112  D001               	goto	L19
 19390  014114                     l9374:
 19391  014114  0E2D               	movlw	45
 19392  014116                     L19:
 19393  014116  6E3F               	movwf	(btemp+10)^0,c
 19394  014118  0E00               	movlw	0
 19395  01411A  6E40               	movwf	(btemp+11)^0,c
 19396                           
 19397                           ;stkvar	_dtoa$4179 @ sp[(-18)+0]
 19398  01411C  0EEE               	movlw	-18
 19399  01411E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19400  014124  0EEF               	movlw	-17
 19401  014126  0060  F103  FFE3   	movff	btemp+11,plusw1
 19402                           
 19403                           ;stkvar	_dtoa$4179 @ sp[(-18)+0]
 19404                           ;stkvar	_i @ sp[(-18)+10]
 19405  01412C  0EF8               	movlw	-8
 19406  01412E  006F FF8C  F03F    	movff	plusw1,btemp+10
 19407  014134  0EF9               	movlw	-7
 19408  014136  006F FF8C  F040    	movff	plusw1,btemp+11
 19409  01413C  0EAC               	movlw	low _dbuf
 19410  01413E  243F               	addwf	(btemp+10)^0,w,c
 19411  014140  6ED9               	movwf	fsr2l,c
 19412  014142  0E02               	movlw	high _dbuf
 19413  014144  2040               	addwfc	(btemp+11)^0,w,c
 19414  014146  6EDA               	movwf	fsr2h,c
 19415  014148  0EEE               	movlw	-18
 19416  01414A  006F FF8F FFDF     	movff	plusw1,indf2
 19417  014150                     l9378:
 19418                           
 19419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19420                           ;stkvar	_w @ sp[(-18)+14]
 19421  014150  0EFC               	movlw	-4
 19422  014152  006F FF8F FFE6     	movff	plusw1,postinc1
 19423  014158  006F FF8F FFE6     	movff	plusw1,postinc1
 19424                           
 19425                           ;stkvar	_i @ sp[(-20)+10]
 19426  01415E  0EAC               	movlw	low _dbuf
 19427  014160  6E3F               	movwf	(btemp+10)^0,c
 19428  014162  0E02               	movlw	high _dbuf
 19429  014164  6E40               	movwf	(btemp+11)^0,c
 19430  014166  0EF6               	movlw	-10
 19431  014168  50E3               	movf	plusw1,w,c
 19432  01416A  263F               	addwf	(btemp+10)^0,f,c
 19433  01416C  0EF7               	movlw	-9
 19434  01416E  50E3               	movf	plusw1,w,c
 19435  014170  2240               	addwfc	(btemp+11)^0,f,c
 19436  014172  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 19437  014178  0060  F103  FFE6   	movff	btemp+11,postinc1
 19438                           
 19439                           ;stkvar	_fp @ sp[(-22)+-2]
 19440  01417E  0EE8               	movlw	-24
 19441  014180  006F FF8F FFE6     	movff	plusw1,postinc1
 19442  014186  006F FF8F FFE6     	movff	plusw1,postinc1
 19443  01418C  EC54  F0B8         	call	_pad	;wreg free
 19444                           
 19445                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19446  014190  0EE4               	movlw	228
 19447  014192  26E1               	addwf	fsr1l,f,c
 19448  014194  0EFF               	movlw	255
 19449  014196  22E2               	addwfc	fsr1h,f,c
 19450  014198  0012               	return		;funcret
 19451  01419A                     __end_of_dtoa:
 19452                           	opt callstack 0
 19453                           
 19454 ;; *************** function _abs *****************
 19455 ;; Defined at:
 19456 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19457 ;; Parameters:    Size  Location     Type
 19458 ;;  a               2  [STACK] int 
 19459 ;; Auto vars:     Size  Location     Type
 19460 ;;		None
 19461 ;; Return value:  Size  Location     Type
 19462 ;;                  2  [STACK] int 
 19463 ;; Registers used:
 19464 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19465 ;; Tracked objects:
 19466 ;;		On entry : 0/2
 19467 ;;		On exit  : 0/0
 19468 ;;		Unchanged: 0/0
 19469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19474 ;;Total ram usage:        0 bytes
 19475 ;; Hardware stack levels used:    1
 19476 ;; Hardware stack levels required when called:    6
 19477 ;; This function calls:
 19478 ;;		Nothing
 19479 ;; This function is called by:
 19480 ;;		_dtoa
 19481 ;; This function uses a reentrant model
 19482 ;;
 19483                           
 19484                           	psect	text62
 19485  0184A2                     __ptext62:
 19486                           	opt callstack 0
 19487  0184A2                     _abs:
 19488                           	opt callstack 17
 19489                           
 19490                           ;stkvar	_a @ sp[(0)+-2]
 19491                           
 19492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19493                           ;incstack = 0
 19494  0184A2  0EFF               	movlw	-1
 19495  0184A4  BEE3               	btfsc	plusw1,7,c
 19496  0184A6  D007               	goto	u5160
 19497  0184A8  0EFF               	movlw	-1
 19498  0184AA  50E3               	movf	plusw1,w,c
 19499  0184AC  E112               	bnz	l6386
 19500  0184AE  0EFE               	movlw	-2
 19501  0184B0  04E3               	decf	plusw1,w,c
 19502  0184B2  B0D8               	btfsc	status,0,c
 19503  0184B4  D00E               	goto	l6386
 19504  0184B6                     u5160:
 19505                           
 19506                           ;stkvar	_a @ sp[(0)+-2]
 19507  0184B6  0EFE               	movlw	-2
 19508  0184B8  006F FF8C  F035    	movff	plusw1,btemp
 19509  0184BE  1E35               	comf	btemp^0,f,c
 19510  0184C0  0EFF               	movlw	-1
 19511  0184C2  006F FF8C  F036    	movff	plusw1,btemp+1
 19512  0184C8  1E36               	comf	(btemp+1)^0,f,c
 19513  0184CA  2A35               	incf	btemp^0,f,c
 19514  0184CC  B4D8               	btfsc	status,2,c
 19515  0184CE  2A36               	incf	(btemp+1)^0,f,c
 19516  0184D0  D008               	goto	l2700
 19517  0184D2                     l6386:
 19518                           
 19519                           ;stkvar	_a @ sp[(0)+-2]
 19520  0184D2  0EFE               	movlw	-2
 19521  0184D4  006F FF8C  F035    	movff	plusw1,btemp
 19522  0184DA  0EFF               	movlw	-1
 19523  0184DC  006F FF8C  F036    	movff	plusw1,btemp+1
 19524  0184E2                     l2700:
 19525                           
 19526                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19527  0184E2  52E5               	movf	postdec1,f,c
 19528  0184E4  52E5               	movf	postdec1,f,c
 19529  0184E6  0012               	return		;funcret
 19530  0184E8                     __end_of_abs:
 19531                           	opt callstack 0
 19532                           
 19533 ;; *************** function ___aomod *****************
 19534 ;; Defined at:
 19535 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19536 ;; Parameters:    Size  Location     Type
 19537 ;;  dividend        8  [STACK] long long 
 19538 ;;  divisor         8  [STACK] long long 
 19539 ;; Auto vars:     Size  Location     Type
 19540 ;;  sign            1  [STACK] unsigned char 
 19541 ;;  counter         1  [STACK] unsigned char 
 19542 ;; Return value:  Size  Location     Type
 19543 ;;                  8  [STACK] long long 
 19544 ;; Registers used:
 19545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19546 ;; Tracked objects:
 19547 ;;		On entry : 0/2
 19548 ;;		On exit  : 0/0
 19549 ;;		Unchanged: 0/0
 19550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19555 ;;Total ram usage:        0 bytes
 19556 ;; Hardware stack levels used:    1
 19557 ;; Hardware stack levels required when called:    6
 19558 ;; This function calls:
 19559 ;;		Nothing
 19560 ;; This function is called by:
 19561 ;;		_dtoa
 19562 ;; This function uses a reentrant model
 19563 ;;
 19564                           
 19565                           	psect	text63
 19566  015A90                     __ptext63:
 19567                           	opt callstack 0
 19568  015A90                     ___aomod:
 19569                           	opt callstack 0
 19570                           
 19571                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19572  015A90  52E6               	movf	postinc1,f,c
 19573  015A92  52E6               	movf	postinc1,f,c
 19574                           
 19575                           ;stkvar	_sign @ sp[(-2)+0]
 19576                           
 19577                           ;incstack = 0
 19578  015A94  0EFE               	movlw	-2
 19579  015A96  6AE3               	clrf	plusw1,c
 19580                           
 19581                           ;stkvar	_dividend @ sp[(-2)+-8]
 19582  015A98  0EFD               	movlw	-3
 19583  015A9A  AEE3               	btfss	plusw1,7,c
 19584  015A9C  D028               	goto	l6544
 19585                           
 19586                           ;stkvar	_dividend @ sp[(-2)+-8]
 19587                           ;stkvar	_dividend @ sp[(-2)+-8]
 19588  015A9E  0EF6               	movlw	-10
 19589  015AA0  6CE3               	negf	plusw1,c
 19590  015AA2  0EF7               	movlw	-9
 19591  015AA4  1EE3               	comf	plusw1,f,c
 19592  015AA6  0EF8               	movlw	-8
 19593  015AA8  1EE3               	comf	plusw1,f,c
 19594  015AAA  0EF9               	movlw	-7
 19595  015AAC  1EE3               	comf	plusw1,f,c
 19596  015AAE  0EFA               	movlw	-6
 19597  015AB0  1EE3               	comf	plusw1,f,c
 19598  015AB2  0EFB               	movlw	-5
 19599  015AB4  1EE3               	comf	plusw1,f,c
 19600  015AB6  0EFC               	movlw	-4
 19601  015AB8  1EE3               	comf	plusw1,f,c
 19602  015ABA  0EFD               	movlw	-3
 19603  015ABC  1EE3               	comf	plusw1,f,c
 19604  015ABE  E314               	bnc	u5590
 19605  015AC0  0EF7               	movlw	-9
 19606  015AC2  2AE3               	incf	plusw1,f,c
 19607  015AC4  E311               	bnc	u5590
 19608  015AC6  0EF8               	movlw	-8
 19609  015AC8  2AE3               	incf	plusw1,f,c
 19610  015ACA  E30E               	bnc	u5590
 19611  015ACC  0EF9               	movlw	-7
 19612  015ACE  2AE3               	incf	plusw1,f,c
 19613  015AD0  E30B               	bnc	u5590
 19614  015AD2  0EFA               	movlw	-6
 19615  015AD4  2AE3               	incf	plusw1,f,c
 19616  015AD6  E308               	bnc	u5590
 19617  015AD8  0EFB               	movlw	-5
 19618  015ADA  2AE3               	incf	plusw1,f,c
 19619  015ADC  E305               	bnc	u5590
 19620  015ADE  0EFC               	movlw	-4
 19621  015AE0  2AE3               	incf	plusw1,f,c
 19622  015AE2  E302               	bnc	u5590
 19623  015AE4  0EFD               	movlw	-3
 19624  015AE6  2AE3               	incf	plusw1,f,c
 19625  015AE8                     u5590:
 19626                           
 19627                           ;stkvar	_sign @ sp[(-2)+0]
 19628  015AE8  0EFE               	movlw	-2
 19629  015AEA  6AE3               	clrf	plusw1,c
 19630  015AEC  2AE3               	incf	plusw1,f,c
 19631  015AEE                     l6544:
 19632                           
 19633                           ;stkvar	_divisor @ sp[(-2)+-16]
 19634  015AEE  0EF5               	movlw	-11
 19635  015AF0  AEE3               	btfss	plusw1,7,c
 19636  015AF2  D025               	goto	u5610
 19637                           
 19638                           ;stkvar	_divisor @ sp[(-2)+-16]
 19639                           ;stkvar	_divisor @ sp[(-2)+-16]
 19640  015AF4  0EEE               	movlw	-18
 19641  015AF6  6CE3               	negf	plusw1,c
 19642  015AF8  0EEF               	movlw	-17
 19643  015AFA  1EE3               	comf	plusw1,f,c
 19644  015AFC  0EF0               	movlw	-16
 19645  015AFE  1EE3               	comf	plusw1,f,c
 19646  015B00  0EF1               	movlw	-15
 19647  015B02  1EE3               	comf	plusw1,f,c
 19648  015B04  0EF2               	movlw	-14
 19649  015B06  1EE3               	comf	plusw1,f,c
 19650  015B08  0EF3               	movlw	-13
 19651  015B0A  1EE3               	comf	plusw1,f,c
 19652  015B0C  0EF4               	movlw	-12
 19653  015B0E  1EE3               	comf	plusw1,f,c
 19654  015B10  0EF5               	movlw	-11
 19655  015B12  1EE3               	comf	plusw1,f,c
 19656  015B14  E314               	bnc	u5610
 19657  015B16  0EEF               	movlw	-17
 19658  015B18  2AE3               	incf	plusw1,f,c
 19659  015B1A  E311               	bnc	u5610
 19660  015B1C  0EF0               	movlw	-16
 19661  015B1E  2AE3               	incf	plusw1,f,c
 19662  015B20  E30E               	bnc	u5610
 19663  015B22  0EF1               	movlw	-15
 19664  015B24  2AE3               	incf	plusw1,f,c
 19665  015B26  E30B               	bnc	u5610
 19666  015B28  0EF2               	movlw	-14
 19667  015B2A  2AE3               	incf	plusw1,f,c
 19668  015B2C  E308               	bnc	u5610
 19669  015B2E  0EF3               	movlw	-13
 19670  015B30  2AE3               	incf	plusw1,f,c
 19671  015B32  E305               	bnc	u5610
 19672  015B34  0EF4               	movlw	-12
 19673  015B36  2AE3               	incf	plusw1,f,c
 19674  015B38  E302               	bnc	u5610
 19675  015B3A  0EF5               	movlw	-11
 19676  015B3C  2AE3               	incf	plusw1,f,c
 19677  015B3E                     u5610:
 19678                           
 19679                           ;stkvar	_divisor @ sp[(-2)+-16]
 19680  015B3E  0EEE               	movlw	-18
 19681  015B40  50E3               	movf	plusw1,w,c
 19682  015B42  E116               	bnz	u5620
 19683  015B44  0EEF               	movlw	-17
 19684  015B46  50E3               	movf	plusw1,w,c
 19685  015B48  E113               	bnz	u5620
 19686  015B4A  0EF0               	movlw	-16
 19687  015B4C  50E3               	movf	plusw1,w,c
 19688  015B4E  E110               	bnz	u5620
 19689  015B50  0EF1               	movlw	-15
 19690  015B52  50E3               	movf	plusw1,w,c
 19691  015B54  E10D               	bnz	u5620
 19692  015B56  0EF2               	movlw	-14
 19693  015B58  50E3               	movf	plusw1,w,c
 19694  015B5A  E10A               	bnz	u5620
 19695  015B5C  0EF3               	movlw	-13
 19696  015B5E  50E3               	movf	plusw1,w,c
 19697  015B60  E107               	bnz	u5620
 19698  015B62  0EF4               	movlw	-12
 19699  015B64  50E3               	movf	plusw1,w,c
 19700  015B66  E104               	bnz	u5620
 19701  015B68  0EF5               	movlw	-11
 19702  015B6A  50E3               	movf	plusw1,w,c
 19703  015B6C  B4D8               	btfsc	status,2,c
 19704  015B6E  D075               	goto	u5650
 19705  015B70                     u5620:
 19706                           
 19707                           ;stkvar	_counter @ sp[(-2)+1]
 19708  015B70  0EFF               	movlw	-1
 19709  015B72  6AE3               	clrf	plusw1,c
 19710  015B74  D012               	goto	L20
 19711  015B76                     l6552:
 19712                           
 19713                           ;stkvar	_divisor @ sp[(-2)+-16]
 19714  015B76  90D8               	bcf	status,0,c
 19715  015B78  0EEE               	movlw	-18
 19716  015B7A  36E3               	rlcf	plusw1,f,c
 19717  015B7C  0EEF               	movlw	-17
 19718  015B7E  36E3               	rlcf	plusw1,f,c
 19719  015B80  0EF0               	movlw	-16
 19720  015B82  36E3               	rlcf	plusw1,f,c
 19721  015B84  0EF1               	movlw	-15
 19722  015B86  36E3               	rlcf	plusw1,f,c
 19723  015B88  0EF2               	movlw	-14
 19724  015B8A  36E3               	rlcf	plusw1,f,c
 19725  015B8C  0EF3               	movlw	-13
 19726  015B8E  36E3               	rlcf	plusw1,f,c
 19727  015B90  0EF4               	movlw	-12
 19728  015B92  36E3               	rlcf	plusw1,f,c
 19729  015B94  0EF5               	movlw	-11
 19730  015B96  36E3               	rlcf	plusw1,f,c
 19731                           
 19732                           ;stkvar	_counter @ sp[(-2)+1]
 19733  015B98  0EFF               	movlw	-1
 19734  015B9A                     L20:
 19735  015B9A  2AE3               	incf	plusw1,f,c
 19736                           
 19737                           ;stkvar	_divisor @ sp[(-2)+-16]
 19738  015B9C  0EF5               	movlw	-11
 19739  015B9E  AEE3               	btfss	plusw1,7,c
 19740  015BA0  D7EA               	goto	l6552
 19741  015BA2                     u5630:
 19742                           
 19743                           ;stkvar	_divisor @ sp[(-2)+-16]
 19744                           ;stkvar	_dividend @ sp[(-2)+-8]
 19745  015BA2  50E1               	movf	fsr1l,w,c
 19746  015BA4  0FF6               	addlw	-10
 19747  015BA6  6ED9               	movwf	fsr2l,c
 19748  015BA8  50E2               	movf	fsr1h,w,c
 19749  015BAA  6EDA               	movwf	fsr2h,c
 19750  015BAC  0EFF               	movlw	255
 19751  015BAE  22DA               	addwfc	fsr2h,f,c
 19752  015BB0  0EEE               	movlw	-18
 19753  015BB2  50E3               	movf	plusw1,w,c
 19754  015BB4  5CDE               	subwf	postinc2,w,c
 19755  015BB6  0EEF               	movlw	-17
 19756  015BB8  50E3               	movf	plusw1,w,c
 19757  015BBA  58DE               	subwfb	postinc2,w,c
 19758  015BBC  0EF0               	movlw	-16
 19759  015BBE  50E3               	movf	plusw1,w,c
 19760  015BC0  58DE               	subwfb	postinc2,w,c
 19761  015BC2  0EF1               	movlw	-15
 19762  015BC4  50E3               	movf	plusw1,w,c
 19763  015BC6  58DE               	subwfb	postinc2,w,c
 19764  015BC8  0EF2               	movlw	-14
 19765  015BCA  50E3               	movf	plusw1,w,c
 19766  015BCC  58DE               	subwfb	postinc2,w,c
 19767  015BCE  0EF3               	movlw	-13
 19768  015BD0  50E3               	movf	plusw1,w,c
 19769  015BD2  58DE               	subwfb	postinc2,w,c
 19770  015BD4  0EF4               	movlw	-12
 19771  015BD6  50E3               	movf	plusw1,w,c
 19772  015BD8  58DE               	subwfb	postinc2,w,c
 19773  015BDA  0EF5               	movlw	-11
 19774  015BDC  50E3               	movf	plusw1,w,c
 19775  015BDE  58DE               	subwfb	postinc2,w,c
 19776  015BE0  A0D8               	btfss	status,0,c
 19777  015BE2  D01F               	goto	l6560
 19778                           
 19779                           ;stkvar	_divisor @ sp[(-2)+-16]
 19780                           ;stkvar	_dividend @ sp[(-2)+-8]
 19781  015BE4  50E1               	movf	fsr1l,w,c
 19782  015BE6  0FF6               	addlw	-10
 19783  015BE8  6ED9               	movwf	fsr2l,c
 19784  015BEA  50E2               	movf	fsr1h,w,c
 19785  015BEC  6EDA               	movwf	fsr2h,c
 19786  015BEE  0EFF               	movlw	255
 19787  015BF0  22DA               	addwfc	fsr2h,f,c
 19788  015BF2  0EEE               	movlw	-18
 19789  015BF4  50E3               	movf	plusw1,w,c
 19790  015BF6  5EDE               	subwf	postinc2,f,c
 19791  015BF8  0EEF               	movlw	-17
 19792  015BFA  50E3               	movf	plusw1,w,c
 19793  015BFC  5ADE               	subwfb	postinc2,f,c
 19794  015BFE  0EF0               	movlw	-16
 19795  015C00  50E3               	movf	plusw1,w,c
 19796  015C02  5ADE               	subwfb	postinc2,f,c
 19797  015C04  0EF1               	movlw	-15
 19798  015C06  50E3               	movf	plusw1,w,c
 19799  015C08  5ADE               	subwfb	postinc2,f,c
 19800  015C0A  0EF2               	movlw	-14
 19801  015C0C  50E3               	movf	plusw1,w,c
 19802  015C0E  5ADE               	subwfb	postinc2,f,c
 19803  015C10  0EF3               	movlw	-13
 19804  015C12  50E3               	movf	plusw1,w,c
 19805  015C14  5ADE               	subwfb	postinc2,f,c
 19806  015C16  0EF4               	movlw	-12
 19807  015C18  50E3               	movf	plusw1,w,c
 19808  015C1A  5ADE               	subwfb	postinc2,f,c
 19809  015C1C  0EF5               	movlw	-11
 19810  015C1E  50E3               	movf	plusw1,w,c
 19811  015C20  5ADE               	subwfb	postinc2,f,c
 19812  015C22                     l6560:
 19813                           
 19814                           ;stkvar	_divisor @ sp[(-2)+-16]
 19815  015C22  90D8               	bcf	status,0,c
 19816  015C24  0EF5               	movlw	-11
 19817  015C26  32E3               	rrcf	plusw1,f,c
 19818  015C28  0EF4               	movlw	-12
 19819  015C2A  32E3               	rrcf	plusw1,f,c
 19820  015C2C  0EF3               	movlw	-13
 19821  015C2E  32E3               	rrcf	plusw1,f,c
 19822  015C30  0EF2               	movlw	-14
 19823  015C32  32E3               	rrcf	plusw1,f,c
 19824  015C34  0EF1               	movlw	-15
 19825  015C36  32E3               	rrcf	plusw1,f,c
 19826  015C38  0EF0               	movlw	-16
 19827  015C3A  32E3               	rrcf	plusw1,f,c
 19828  015C3C  0EEF               	movlw	-17
 19829  015C3E  32E3               	rrcf	plusw1,f,c
 19830  015C40  0EEE               	movlw	-18
 19831  015C42  32E3               	rrcf	plusw1,f,c
 19832                           
 19833                           ;stkvar	_counter @ sp[(-2)+1]
 19834  015C44  0EFF               	movlw	-1
 19835  015C46  50E3               	movf	plusw1,w,c
 19836  015C48  6E35               	movwf	btemp^0,c
 19837  015C4A  0E01               	movlw	1
 19838  015C4C  5E35               	subwf	btemp^0,f,c
 19839  015C4E  0EFF               	movlw	-1
 19840  015C50  0060  F0D7  FFE3   	movff	btemp,plusw1
 19841  015C56  A4D8               	btfss	status,2,c
 19842  015C58  D7A4               	goto	u5630
 19843  015C5A                     u5650:
 19844                           
 19845                           ;stkvar	_sign @ sp[(-2)+0]
 19846  015C5A  0EFE               	movlw	-2
 19847  015C5C  50E3               	movf	plusw1,w,c
 19848  015C5E  B4D8               	btfsc	status,2,c
 19849  015C60  D025               	goto	u5670
 19850                           
 19851                           ;stkvar	_dividend @ sp[(-2)+-8]
 19852                           ;stkvar	_dividend @ sp[(-2)+-8]
 19853  015C62  0EF6               	movlw	-10
 19854  015C64  6CE3               	negf	plusw1,c
 19855  015C66  0EF7               	movlw	-9
 19856  015C68  1EE3               	comf	plusw1,f,c
 19857  015C6A  0EF8               	movlw	-8
 19858  015C6C  1EE3               	comf	plusw1,f,c
 19859  015C6E  0EF9               	movlw	-7
 19860  015C70  1EE3               	comf	plusw1,f,c
 19861  015C72  0EFA               	movlw	-6
 19862  015C74  1EE3               	comf	plusw1,f,c
 19863  015C76  0EFB               	movlw	-5
 19864  015C78  1EE3               	comf	plusw1,f,c
 19865  015C7A  0EFC               	movlw	-4
 19866  015C7C  1EE3               	comf	plusw1,f,c
 19867  015C7E  0EFD               	movlw	-3
 19868  015C80  1EE3               	comf	plusw1,f,c
 19869  015C82  E314               	bnc	u5670
 19870  015C84  0EF7               	movlw	-9
 19871  015C86  2AE3               	incf	plusw1,f,c
 19872  015C88  E311               	bnc	u5670
 19873  015C8A  0EF8               	movlw	-8
 19874  015C8C  2AE3               	incf	plusw1,f,c
 19875  015C8E  E30E               	bnc	u5670
 19876  015C90  0EF9               	movlw	-7
 19877  015C92  2AE3               	incf	plusw1,f,c
 19878  015C94  E30B               	bnc	u5670
 19879  015C96  0EFA               	movlw	-6
 19880  015C98  2AE3               	incf	plusw1,f,c
 19881  015C9A  E308               	bnc	u5670
 19882  015C9C  0EFB               	movlw	-5
 19883  015C9E  2AE3               	incf	plusw1,f,c
 19884  015CA0  E305               	bnc	u5670
 19885  015CA2  0EFC               	movlw	-4
 19886  015CA4  2AE3               	incf	plusw1,f,c
 19887  015CA6  E302               	bnc	u5670
 19888  015CA8  0EFD               	movlw	-3
 19889  015CAA  2AE3               	incf	plusw1,f,c
 19890  015CAC                     u5670:
 19891                           
 19892                           ;stkvar	_dividend @ sp[(-2)+-8]
 19893  015CAC  0EF6               	movlw	246
 19894  015CAE  24E1               	addwf	fsr1l,w,c
 19895  015CB0  6ED9               	movwf	fsr2l,c
 19896  015CB2  0EFF               	movlw	255
 19897  015CB4  20E2               	addwfc	fsr1h,w,c
 19898  015CB6  6EDA               	movwf	fsr2h,c
 19899                           
 19900                           ;stkvar	?___aomod @ sp[(-2)+-8]
 19901  015CB8  0E08               	movlw	8
 19902  015CBA  6E35               	movwf	btemp^0,c
 19903  015CBC  0EF6               	movlw	-10
 19904  015CBE                     us568999:
 19905  015CBE  006F FF7B FFE3     	movff	postinc2,plusw1
 19906  015CC4  28E8               	incf	wreg,w,c
 19907  015CC6  2E35               	decfsz	btemp^0,f,c
 19908  015CC8  D7FA               	bra	us568999
 19909                           
 19910                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19911  015CCA  52E5               	movf	postdec1,f,c
 19912  015CCC  52E5               	movf	postdec1,f,c
 19913  015CCE  0012               	return		;funcret
 19914  015CD0                     __end_of___aomod:
 19915                           	opt callstack 0
 19916                           
 19917 ;; *************** function ___aodiv *****************
 19918 ;; Defined at:
 19919 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 19920 ;; Parameters:    Size  Location     Type
 19921 ;;  dividend        8  [STACK] long long 
 19922 ;;  divisor         8  [STACK] long long 
 19923 ;; Auto vars:     Size  Location     Type
 19924 ;;  quotient        8  [STACK] long long 
 19925 ;;  sign            1  [STACK] unsigned char 
 19926 ;;  counter         1  [STACK] unsigned char 
 19927 ;; Return value:  Size  Location     Type
 19928 ;;                  8  [STACK] long long 
 19929 ;; Registers used:
 19930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19931 ;; Tracked objects:
 19932 ;;		On entry : 0/2
 19933 ;;		On exit  : 0/0
 19934 ;;		Unchanged: 0/0
 19935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19940 ;;Total ram usage:        0 bytes
 19941 ;; Hardware stack levels used:    1
 19942 ;; Hardware stack levels required when called:    6
 19943 ;; This function calls:
 19944 ;;		Nothing
 19945 ;; This function is called by:
 19946 ;;		_dtoa
 19947 ;; This function uses a reentrant model
 19948 ;;
 19949                           
 19950                           	psect	text64
 19951  01559C                     __ptext64:
 19952                           	opt callstack 0
 19953  01559C                     ___aodiv:
 19954                           	opt callstack 0
 19955                           
 19956                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 19957  01559C  0E0A               	movlw	10
 19958  01559E  26E1               	addwf	fsr1l,f,c
 19959  0155A0  0E00               	movlw	0
 19960  0155A2  22E2               	addwfc	fsr1h,f,c
 19961                           
 19962                           ;stkvar	_sign @ sp[(-10)+8]
 19963                           
 19964                           ;incstack = 0
 19965  0155A4  0EFE               	movlw	-2
 19966  0155A6  6AE3               	clrf	plusw1,c
 19967                           
 19968                           ;stkvar	_divisor @ sp[(-10)+-16]
 19969  0155A8  0EED               	movlw	-19
 19970  0155AA  AEE3               	btfss	plusw1,7,c
 19971  0155AC  D028               	goto	l6500
 19972                           
 19973                           ;stkvar	_divisor @ sp[(-10)+-16]
 19974                           ;stkvar	_divisor @ sp[(-10)+-16]
 19975  0155AE  0EE6               	movlw	-26
 19976  0155B0  6CE3               	negf	plusw1,c
 19977  0155B2  0EE7               	movlw	-25
 19978  0155B4  1EE3               	comf	plusw1,f,c
 19979  0155B6  0EE8               	movlw	-24
 19980  0155B8  1EE3               	comf	plusw1,f,c
 19981  0155BA  0EE9               	movlw	-23
 19982  0155BC  1EE3               	comf	plusw1,f,c
 19983  0155BE  0EEA               	movlw	-22
 19984  0155C0  1EE3               	comf	plusw1,f,c
 19985  0155C2  0EEB               	movlw	-21
 19986  0155C4  1EE3               	comf	plusw1,f,c
 19987  0155C6  0EEC               	movlw	-20
 19988  0155C8  1EE3               	comf	plusw1,f,c
 19989  0155CA  0EED               	movlw	-19
 19990  0155CC  1EE3               	comf	plusw1,f,c
 19991  0155CE  E314               	bnc	u5470
 19992  0155D0  0EE7               	movlw	-25
 19993  0155D2  2AE3               	incf	plusw1,f,c
 19994  0155D4  E311               	bnc	u5470
 19995  0155D6  0EE8               	movlw	-24
 19996  0155D8  2AE3               	incf	plusw1,f,c
 19997  0155DA  E30E               	bnc	u5470
 19998  0155DC  0EE9               	movlw	-23
 19999  0155DE  2AE3               	incf	plusw1,f,c
 20000  0155E0  E30B               	bnc	u5470
 20001  0155E2  0EEA               	movlw	-22
 20002  0155E4  2AE3               	incf	plusw1,f,c
 20003  0155E6  E308               	bnc	u5470
 20004  0155E8  0EEB               	movlw	-21
 20005  0155EA  2AE3               	incf	plusw1,f,c
 20006  0155EC  E305               	bnc	u5470
 20007  0155EE  0EEC               	movlw	-20
 20008  0155F0  2AE3               	incf	plusw1,f,c
 20009  0155F2  E302               	bnc	u5470
 20010  0155F4  0EED               	movlw	-19
 20011  0155F6  2AE3               	incf	plusw1,f,c
 20012  0155F8                     u5470:
 20013                           
 20014                           ;stkvar	_sign @ sp[(-10)+8]
 20015  0155F8  0EFE               	movlw	-2
 20016  0155FA  6AE3               	clrf	plusw1,c
 20017  0155FC  2AE3               	incf	plusw1,f,c
 20018  0155FE                     l6500:
 20019                           
 20020                           ;stkvar	_dividend @ sp[(-10)+-8]
 20021  0155FE  0EF5               	movlw	-11
 20022  015600  AEE3               	btfss	plusw1,7,c
 20023  015602  D027               	goto	l6506
 20024                           
 20025                           ;stkvar	_dividend @ sp[(-10)+-8]
 20026                           ;stkvar	_dividend @ sp[(-10)+-8]
 20027  015604  0EEE               	movlw	-18
 20028  015606  6CE3               	negf	plusw1,c
 20029  015608  0EEF               	movlw	-17
 20030  01560A  1EE3               	comf	plusw1,f,c
 20031  01560C  0EF0               	movlw	-16
 20032  01560E  1EE3               	comf	plusw1,f,c
 20033  015610  0EF1               	movlw	-15
 20034  015612  1EE3               	comf	plusw1,f,c
 20035  015614  0EF2               	movlw	-14
 20036  015616  1EE3               	comf	plusw1,f,c
 20037  015618  0EF3               	movlw	-13
 20038  01561A  1EE3               	comf	plusw1,f,c
 20039  01561C  0EF4               	movlw	-12
 20040  01561E  1EE3               	comf	plusw1,f,c
 20041  015620  0EF5               	movlw	-11
 20042  015622  1EE3               	comf	plusw1,f,c
 20043  015624  E314               	bnc	u5490
 20044  015626  0EEF               	movlw	-17
 20045  015628  2AE3               	incf	plusw1,f,c
 20046  01562A  E311               	bnc	u5490
 20047  01562C  0EF0               	movlw	-16
 20048  01562E  2AE3               	incf	plusw1,f,c
 20049  015630  E30E               	bnc	u5490
 20050  015632  0EF1               	movlw	-15
 20051  015634  2AE3               	incf	plusw1,f,c
 20052  015636  E30B               	bnc	u5490
 20053  015638  0EF2               	movlw	-14
 20054  01563A  2AE3               	incf	plusw1,f,c
 20055  01563C  E308               	bnc	u5490
 20056  01563E  0EF3               	movlw	-13
 20057  015640  2AE3               	incf	plusw1,f,c
 20058  015642  E305               	bnc	u5490
 20059  015644  0EF4               	movlw	-12
 20060  015646  2AE3               	incf	plusw1,f,c
 20061  015648  E302               	bnc	u5490
 20062  01564A  0EF5               	movlw	-11
 20063  01564C  2AE3               	incf	plusw1,f,c
 20064  01564E                     u5490:
 20065                           
 20066                           ;stkvar	_sign @ sp[(-10)+8]
 20067  01564E  0EFE               	movlw	-2
 20068  015650  70E3               	btg	plusw1,0,c
 20069  015652                     l6506:
 20070                           
 20071                           ;stkvar	_quotient @ sp[(-10)+0]
 20072  015652  0E07               	movlw	7
 20073  015654  6E35               	movwf	btemp^0,c
 20074  015656  0EF6               	movlw	-10
 20075  015658                     u5501:
 20076  015658  6AE3               	clrf	plusw1,c
 20077  01565A  2AE8               	incf	wreg,f,c
 20078  01565C  0635               	decf	btemp^0,f,c
 20079  01565E  E2FC               	bc	u5501
 20080                           
 20081                           ;stkvar	_divisor @ sp[(-10)+-16]
 20082  015660  0EE6               	movlw	-26
 20083  015662  50E3               	movf	plusw1,w,c
 20084  015664  E116               	bnz	u5510
 20085  015666  0EE7               	movlw	-25
 20086  015668  50E3               	movf	plusw1,w,c
 20087  01566A  E113               	bnz	u5510
 20088  01566C  0EE8               	movlw	-24
 20089  01566E  50E3               	movf	plusw1,w,c
 20090  015670  E110               	bnz	u5510
 20091  015672  0EE9               	movlw	-23
 20092  015674  50E3               	movf	plusw1,w,c
 20093  015676  E10D               	bnz	u5510
 20094  015678  0EEA               	movlw	-22
 20095  01567A  50E3               	movf	plusw1,w,c
 20096  01567C  E10A               	bnz	u5510
 20097  01567E  0EEB               	movlw	-21
 20098  015680  50E3               	movf	plusw1,w,c
 20099  015682  E107               	bnz	u5510
 20100  015684  0EEC               	movlw	-20
 20101  015686  50E3               	movf	plusw1,w,c
 20102  015688  E104               	bnz	u5510
 20103  01568A  0EED               	movlw	-19
 20104  01568C  50E3               	movf	plusw1,w,c
 20105  01568E  B4D8               	btfsc	status,2,c
 20106  015690  D088               	goto	u5540
 20107  015692                     u5510:
 20108                           
 20109                           ;stkvar	_counter @ sp[(-10)+9]
 20110  015692  0EFF               	movlw	-1
 20111  015694  6AE3               	clrf	plusw1,c
 20112  015696  D012               	goto	L21
 20113  015698                     l6512:
 20114                           
 20115                           ;stkvar	_divisor @ sp[(-10)+-16]
 20116  015698  90D8               	bcf	status,0,c
 20117  01569A  0EE6               	movlw	-26
 20118  01569C  36E3               	rlcf	plusw1,f,c
 20119  01569E  0EE7               	movlw	-25
 20120  0156A0  36E3               	rlcf	plusw1,f,c
 20121  0156A2  0EE8               	movlw	-24
 20122  0156A4  36E3               	rlcf	plusw1,f,c
 20123  0156A6  0EE9               	movlw	-23
 20124  0156A8  36E3               	rlcf	plusw1,f,c
 20125  0156AA  0EEA               	movlw	-22
 20126  0156AC  36E3               	rlcf	plusw1,f,c
 20127  0156AE  0EEB               	movlw	-21
 20128  0156B0  36E3               	rlcf	plusw1,f,c
 20129  0156B2  0EEC               	movlw	-20
 20130  0156B4  36E3               	rlcf	plusw1,f,c
 20131  0156B6  0EED               	movlw	-19
 20132  0156B8  36E3               	rlcf	plusw1,f,c
 20133                           
 20134                           ;stkvar	_counter @ sp[(-10)+9]
 20135  0156BA  0EFF               	movlw	-1
 20136  0156BC                     L21:
 20137  0156BC  2AE3               	incf	plusw1,f,c
 20138                           
 20139                           ;stkvar	_divisor @ sp[(-10)+-16]
 20140  0156BE  0EED               	movlw	-19
 20141  0156C0  AEE3               	btfss	plusw1,7,c
 20142  0156C2  D7EA               	goto	l6512
 20143  0156C4                     u5520:
 20144                           
 20145                           ;stkvar	_quotient @ sp[(-10)+0]
 20146  0156C4  90D8               	bcf	status,0,c
 20147  0156C6  0EF6               	movlw	-10
 20148  0156C8  36E3               	rlcf	plusw1,f,c
 20149  0156CA  0EF7               	movlw	-9
 20150  0156CC  36E3               	rlcf	plusw1,f,c
 20151  0156CE  0EF8               	movlw	-8
 20152  0156D0  36E3               	rlcf	plusw1,f,c
 20153  0156D2  0EF9               	movlw	-7
 20154  0156D4  36E3               	rlcf	plusw1,f,c
 20155  0156D6  0EFA               	movlw	-6
 20156  0156D8  36E3               	rlcf	plusw1,f,c
 20157  0156DA  0EFB               	movlw	-5
 20158  0156DC  36E3               	rlcf	plusw1,f,c
 20159  0156DE  0EFC               	movlw	-4
 20160  0156E0  36E3               	rlcf	plusw1,f,c
 20161  0156E2  0EFD               	movlw	-3
 20162  0156E4  36E3               	rlcf	plusw1,f,c
 20163                           
 20164                           ;stkvar	_divisor @ sp[(-10)+-16]
 20165                           ;stkvar	_dividend @ sp[(-10)+-8]
 20166  0156E6  50E1               	movf	fsr1l,w,c
 20167  0156E8  0FEE               	addlw	-18
 20168  0156EA  6ED9               	movwf	fsr2l,c
 20169  0156EC  50E2               	movf	fsr1h,w,c
 20170  0156EE  6EDA               	movwf	fsr2h,c
 20171  0156F0  0EFF               	movlw	255
 20172  0156F2  22DA               	addwfc	fsr2h,f,c
 20173  0156F4  0EE6               	movlw	-26
 20174  0156F6  50E3               	movf	plusw1,w,c
 20175  0156F8  5CDE               	subwf	postinc2,w,c
 20176  0156FA  0EE7               	movlw	-25
 20177  0156FC  50E3               	movf	plusw1,w,c
 20178  0156FE  58DE               	subwfb	postinc2,w,c
 20179  015700  0EE8               	movlw	-24
 20180  015702  50E3               	movf	plusw1,w,c
 20181  015704  58DE               	subwfb	postinc2,w,c
 20182  015706  0EE9               	movlw	-23
 20183  015708  50E3               	movf	plusw1,w,c
 20184  01570A  58DE               	subwfb	postinc2,w,c
 20185  01570C  0EEA               	movlw	-22
 20186  01570E  50E3               	movf	plusw1,w,c
 20187  015710  58DE               	subwfb	postinc2,w,c
 20188  015712  0EEB               	movlw	-21
 20189  015714  50E3               	movf	plusw1,w,c
 20190  015716  58DE               	subwfb	postinc2,w,c
 20191  015718  0EEC               	movlw	-20
 20192  01571A  50E3               	movf	plusw1,w,c
 20193  01571C  58DE               	subwfb	postinc2,w,c
 20194  01571E  0EED               	movlw	-19
 20195  015720  50E3               	movf	plusw1,w,c
 20196  015722  58DE               	subwfb	postinc2,w,c
 20197  015724  A0D8               	btfss	status,0,c
 20198  015726  D021               	goto	l6524
 20199                           
 20200                           ;stkvar	_divisor @ sp[(-10)+-16]
 20201                           ;stkvar	_dividend @ sp[(-10)+-8]
 20202  015728  50E1               	movf	fsr1l,w,c
 20203  01572A  0FEE               	addlw	-18
 20204  01572C  6ED9               	movwf	fsr2l,c
 20205  01572E  50E2               	movf	fsr1h,w,c
 20206  015730  6EDA               	movwf	fsr2h,c
 20207  015732  0EFF               	movlw	255
 20208  015734  22DA               	addwfc	fsr2h,f,c
 20209  015736  0EE6               	movlw	-26
 20210  015738  50E3               	movf	plusw1,w,c
 20211  01573A  5EDE               	subwf	postinc2,f,c
 20212  01573C  0EE7               	movlw	-25
 20213  01573E  50E3               	movf	plusw1,w,c
 20214  015740  5ADE               	subwfb	postinc2,f,c
 20215  015742  0EE8               	movlw	-24
 20216  015744  50E3               	movf	plusw1,w,c
 20217  015746  5ADE               	subwfb	postinc2,f,c
 20218  015748  0EE9               	movlw	-23
 20219  01574A  50E3               	movf	plusw1,w,c
 20220  01574C  5ADE               	subwfb	postinc2,f,c
 20221  01574E  0EEA               	movlw	-22
 20222  015750  50E3               	movf	plusw1,w,c
 20223  015752  5ADE               	subwfb	postinc2,f,c
 20224  015754  0EEB               	movlw	-21
 20225  015756  50E3               	movf	plusw1,w,c
 20226  015758  5ADE               	subwfb	postinc2,f,c
 20227  01575A  0EEC               	movlw	-20
 20228  01575C  50E3               	movf	plusw1,w,c
 20229  01575E  5ADE               	subwfb	postinc2,f,c
 20230  015760  0EED               	movlw	-19
 20231  015762  50E3               	movf	plusw1,w,c
 20232  015764  5ADE               	subwfb	postinc2,f,c
 20233                           
 20234                           ;stkvar	_quotient @ sp[(-10)+0]
 20235  015766  0EF6               	movlw	-10
 20236  015768  80E3               	bsf	plusw1,0,c
 20237  01576A                     l6524:
 20238                           
 20239                           ;stkvar	_divisor @ sp[(-10)+-16]
 20240  01576A  90D8               	bcf	status,0,c
 20241  01576C  0EED               	movlw	-19
 20242  01576E  32E3               	rrcf	plusw1,f,c
 20243  015770  0EEC               	movlw	-20
 20244  015772  32E3               	rrcf	plusw1,f,c
 20245  015774  0EEB               	movlw	-21
 20246  015776  32E3               	rrcf	plusw1,f,c
 20247  015778  0EEA               	movlw	-22
 20248  01577A  32E3               	rrcf	plusw1,f,c
 20249  01577C  0EE9               	movlw	-23
 20250  01577E  32E3               	rrcf	plusw1,f,c
 20251  015780  0EE8               	movlw	-24
 20252  015782  32E3               	rrcf	plusw1,f,c
 20253  015784  0EE7               	movlw	-25
 20254  015786  32E3               	rrcf	plusw1,f,c
 20255  015788  0EE6               	movlw	-26
 20256  01578A  32E3               	rrcf	plusw1,f,c
 20257                           
 20258                           ;stkvar	_counter @ sp[(-10)+9]
 20259  01578C  0EFF               	movlw	-1
 20260  01578E  50E3               	movf	plusw1,w,c
 20261  015790  6E35               	movwf	btemp^0,c
 20262  015792  0E01               	movlw	1
 20263  015794  5E35               	subwf	btemp^0,f,c
 20264  015796  0EFF               	movlw	-1
 20265  015798  0060  F0D7  FFE3   	movff	btemp,plusw1
 20266  01579E  A4D8               	btfss	status,2,c
 20267  0157A0  D791               	goto	u5520
 20268  0157A2                     u5540:
 20269                           
 20270                           ;stkvar	_sign @ sp[(-10)+8]
 20271  0157A2  0EFE               	movlw	-2
 20272  0157A4  50E3               	movf	plusw1,w,c
 20273  0157A6  B4D8               	btfsc	status,2,c
 20274  0157A8  D025               	goto	u5560
 20275                           
 20276                           ;stkvar	_quotient @ sp[(-10)+0]
 20277                           ;stkvar	_quotient @ sp[(-10)+0]
 20278  0157AA  0EF6               	movlw	-10
 20279  0157AC  6CE3               	negf	plusw1,c
 20280  0157AE  0EF7               	movlw	-9
 20281  0157B0  1EE3               	comf	plusw1,f,c
 20282  0157B2  0EF8               	movlw	-8
 20283  0157B4  1EE3               	comf	plusw1,f,c
 20284  0157B6  0EF9               	movlw	-7
 20285  0157B8  1EE3               	comf	plusw1,f,c
 20286  0157BA  0EFA               	movlw	-6
 20287  0157BC  1EE3               	comf	plusw1,f,c
 20288  0157BE  0EFB               	movlw	-5
 20289  0157C0  1EE3               	comf	plusw1,f,c
 20290  0157C2  0EFC               	movlw	-4
 20291  0157C4  1EE3               	comf	plusw1,f,c
 20292  0157C6  0EFD               	movlw	-3
 20293  0157C8  1EE3               	comf	plusw1,f,c
 20294  0157CA  E314               	bnc	u5560
 20295  0157CC  0EF7               	movlw	-9
 20296  0157CE  2AE3               	incf	plusw1,f,c
 20297  0157D0  E311               	bnc	u5560
 20298  0157D2  0EF8               	movlw	-8
 20299  0157D4  2AE3               	incf	plusw1,f,c
 20300  0157D6  E30E               	bnc	u5560
 20301  0157D8  0EF9               	movlw	-7
 20302  0157DA  2AE3               	incf	plusw1,f,c
 20303  0157DC  E30B               	bnc	u5560
 20304  0157DE  0EFA               	movlw	-6
 20305  0157E0  2AE3               	incf	plusw1,f,c
 20306  0157E2  E308               	bnc	u5560
 20307  0157E4  0EFB               	movlw	-5
 20308  0157E6  2AE3               	incf	plusw1,f,c
 20309  0157E8  E305               	bnc	u5560
 20310  0157EA  0EFC               	movlw	-4
 20311  0157EC  2AE3               	incf	plusw1,f,c
 20312  0157EE  E302               	bnc	u5560
 20313  0157F0  0EFD               	movlw	-3
 20314  0157F2  2AE3               	incf	plusw1,f,c
 20315  0157F4                     u5560:
 20316                           
 20317                           ;stkvar	_quotient @ sp[(-10)+0]
 20318  0157F4  0EF6               	movlw	246
 20319  0157F6  24E1               	addwf	fsr1l,w,c
 20320  0157F8  6ED9               	movwf	fsr2l,c
 20321  0157FA  0EFF               	movlw	255
 20322  0157FC  20E2               	addwfc	fsr1h,w,c
 20323  0157FE  6EDA               	movwf	fsr2h,c
 20324                           
 20325                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20326  015800  0E08               	movlw	8
 20327  015802  6E35               	movwf	btemp^0,c
 20328  015804  0EEE               	movlw	-18
 20329  015806                     us557999:
 20330  015806  006F FF7B FFE3     	movff	postinc2,plusw1
 20331  01580C  28E8               	incf	wreg,w,c
 20332  01580E  2E35               	decfsz	btemp^0,f,c
 20333  015810  D7FA               	bra	us557999
 20334                           
 20335                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20336  015812  0EF6               	movlw	246
 20337  015814  26E1               	addwf	fsr1l,f,c
 20338  015816  0EFF               	movlw	255
 20339  015818  22E2               	addwfc	fsr1h,f,c
 20340  01581A  0012               	return		;funcret
 20341  01581C                     __end_of___aodiv:
 20342                           	opt callstack 0
 20343                           
 20344 ;; *************** function _ctoa *****************
 20345 ;; Defined at:
 20346 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20347 ;; Parameters:    Size  Location     Type
 20348 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20349 ;;		 -> f(6), NULL(0), 
 20350 ;;  c               1  [STACK] unsigned char 
 20351 ;; Auto vars:     Size  Location     Type
 20352 ;;  w               2  [STACK] int 
 20353 ;;  l               2    0        int 
 20354 ;; Return value:  Size  Location     Type
 20355 ;;                  2  [STACK] int 
 20356 ;; Registers used:
 20357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20358 ;; Tracked objects:
 20359 ;;		On entry : 0/4
 20360 ;;		On exit  : 0/0
 20361 ;;		Unchanged: 0/0
 20362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20367 ;;Total ram usage:        0 bytes
 20368 ;; Hardware stack levels used:    1
 20369 ;; Hardware stack levels required when called:   11
 20370 ;; This function calls:
 20371 ;;		_pad
 20372 ;; This function is called by:
 20373 ;;		_vfpfcnvrt
 20374 ;; This function uses a reentrant model
 20375 ;;
 20376                           
 20377                           	psect	text65
 20378  017CC6                     __ptext65:
 20379                           	opt callstack 0
 20380  017CC6                     _ctoa:
 20381                           	opt callstack 0
 20382                           
 20383                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20384  017CC6  52E6               	movf	postinc1,f,c
 20385  017CC8  52E6               	movf	postinc1,f,c
 20386                           
 20387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20388                           
 20389                           ;incstack = 0
 20390  017CCA  501E               	movf	_width^0,w,c
 20391  017CCC  101F               	iorwf	(_width+1)^0,w,c
 20392  017CCE  A4D8               	btfss	status,2,c
 20393  017CD0  D009               	goto	l9306
 20394                           
 20395                           ;stkvar	_w @ sp[(-2)+0]
 20396  017CD2  0EFE               	movlw	-2
 20397  017CD4  0060  F07B  FFE3   	movff	_width,plusw1
 20398  017CDA  0EFF               	movlw	-1
 20399  017CDC  0060  F07F  FFE3   	movff	_width+1,plusw1
 20400  017CE2  D016               	goto	l9308
 20401  017CE4                     l9306:
 20402  017CE4  0EFF               	movlw	255
 20403  017CE6  6E3F               	movwf	(btemp+10)^0,c
 20404  017CE8  0EFF               	movlw	255
 20405  017CEA  6E40               	movwf	(btemp+11)^0,c
 20406  017CEC  0060  F078  F03D   	movff	_width,btemp+8
 20407  017CF2  0060  F07C  F03E   	movff	_width+1,btemp+9
 20408  017CF8  503F               	movf	(btemp+10)^0,w,c
 20409  017CFA  263D               	addwf	(btemp+8)^0,f,c
 20410  017CFC  5040               	movf	(btemp+11)^0,w,c
 20411  017CFE  223E               	addwfc	(btemp+9)^0,f,c
 20412                           
 20413                           ;stkvar	_w @ sp[(-2)+0]
 20414  017D00  0EFE               	movlw	-2
 20415  017D02  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 20416  017D08  0EFF               	movlw	-1
 20417  017D0A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 20418  017D10                     l9308:
 20419                           
 20420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20421                           ;stkvar	_c @ sp[(-2)+-3]
 20422  017D10  0EFB               	movlw	-5
 20423  017D12  006F FF8C  F2AC    	movff	plusw1,_dbuf
 20424                           
 20425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20426  017D18  0102               	movlb	2	; () banked
 20427  017D1A  6BAD               	clrf	(_dbuf+1)& (0+255),b
 20428                           
 20429                           ; BSR set to: 2
 20430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20431                           ;stkvar	_w @ sp[(-2)+0]
 20432  017D1C  0EFE               	movlw	-2
 20433  017D1E  006F FF8F FFE6     	movff	plusw1,postinc1
 20434  017D24  006F FF8F FFE6     	movff	plusw1,postinc1
 20435  017D2A  0EAC               	movlw	low _dbuf
 20436  017D2C  6EE6               	movwf	postinc1,c
 20437  017D2E  0E02               	movlw	high _dbuf
 20438  017D30  6EE6               	movwf	postinc1,c
 20439                           
 20440                           ;stkvar	_fp @ sp[(-6)+-2]
 20441  017D32  0EF8               	movlw	-8
 20442  017D34  006F FF8F FFE6     	movff	plusw1,postinc1
 20443  017D3A  006F FF8F FFE6     	movff	plusw1,postinc1
 20444  017D40  EC54  F0B8         	call	_pad	;wreg free
 20445                           
 20446                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20447  017D44  0EFB               	movlw	251
 20448  017D46  26E1               	addwf	fsr1l,f,c
 20449  017D48  0EFF               	movlw	255
 20450  017D4A  22E2               	addwfc	fsr1h,f,c
 20451  017D4C  0012               	return		;funcret
 20452  017D4E                     __end_of_ctoa:
 20453                           	opt callstack 0
 20454                           
 20455 ;; *************** function _pad *****************
 20456 ;; Defined at:
 20457 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20458 ;; Parameters:    Size  Location     Type
 20459 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20460 ;;		 -> f(6), NULL(0), 
 20461 ;;  buf             2  [STACK] PTR unsigned char 
 20462 ;;		 -> dbuf(80), 
 20463 ;;  p               2  [STACK] int 
 20464 ;; Auto vars:     Size  Location     Type
 20465 ;;  w               2  [STACK] int 
 20466 ;;  i               2  [STACK] int 
 20467 ;; Return value:  Size  Location     Type
 20468 ;;                  2  [STACK] int 
 20469 ;; Registers used:
 20470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20471 ;; Tracked objects:
 20472 ;;		On entry : 0/2
 20473 ;;		On exit  : 0/0
 20474 ;;		Unchanged: 0/0
 20475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20480 ;;Total ram usage:        0 bytes
 20481 ;; Hardware stack levels used:    1
 20482 ;; Hardware stack levels required when called:   10
 20483 ;; This function calls:
 20484 ;;		_fputc
 20485 ;;		_fputs
 20486 ;;		_strlen
 20487 ;; This function is called by:
 20488 ;;		_ctoa
 20489 ;;		_dtoa
 20490 ;;		_efgtoa
 20491 ;;		_utoa
 20492 ;;		_xtoa
 20493 ;; This function uses a reentrant model
 20494 ;;
 20495                           
 20496                           	psect	text66
 20497  0170A8                     __ptext66:
 20498                           	opt callstack 0
 20499  0170A8                     _pad:
 20500                           	opt callstack 0
 20501                           
 20502                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20503  0170A8  52E6               	movf	postinc1,f,c
 20504  0170AA  52E6               	movf	postinc1,f,c
 20505  0170AC  52E6               	movf	postinc1,f,c
 20506  0170AE  52E6               	movf	postinc1,f,c
 20507                           
 20508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20509                           
 20510                           ;incstack = 0
 20511  0170B0  A022               	btfss	_flags^0,0,c
 20512  0170B2  D010               	goto	l9280
 20513                           
 20514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20515                           ;stkvar	_fp @ sp[(-4)+-2]
 20516  0170B4  0EFA               	movlw	-6
 20517  0170B6  006F FF8F FFE6     	movff	plusw1,postinc1
 20518  0170BC  006F FF8F FFE6     	movff	plusw1,postinc1
 20519                           
 20520                           ;stkvar	_buf @ sp[(-6)+-4]
 20521  0170C2  0EF6               	movlw	-10
 20522  0170C4  006F FF8F FFE6     	movff	plusw1,postinc1
 20523  0170CA  006F FF8F FFE6     	movff	plusw1,postinc1
 20524  0170D0  EC86  F0BD         	call	_fputs	;wreg free
 20525  0170D4                     l9280:
 20526                           
 20527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20528                           ;stkvar	_p @ sp[(-4)+-6]
 20529  0170D4  0EF7               	movlw	-9
 20530  0170D6  BEE3               	btfsc	plusw1,7,c
 20531  0170D8  D011               	goto	l9284
 20532                           
 20533                           ;stkvar	_p @ sp[(-4)+-6]
 20534                           ;stkvar	_w @ sp[(-4)+0]
 20535  0170DA  0EF6               	movlw	-10
 20536  0170DC  006F FF8C  F035    	movff	plusw1,btemp
 20537  0170E2  0EFC               	movlw	-4
 20538  0170E4  0060  F0D7  FFE3   	movff	btemp,plusw1
 20539  0170EA  0EF7               	movlw	-9
 20540  0170EC  006F FF8C  F035    	movff	plusw1,btemp
 20541  0170F2  0EFD               	movlw	-3
 20542  0170F4  0060  F0D7  FFE3   	movff	btemp,plusw1
 20543  0170FA  D004               	goto	l1754
 20544  0170FC                     l9284:
 20545                           
 20546                           ;stkvar	_w @ sp[(-4)+0]
 20547  0170FC  0EFC               	movlw	-4
 20548  0170FE  6AE3               	clrf	plusw1,c
 20549  017100  0EFD               	movlw	-3
 20550  017102  6AE3               	clrf	plusw1,c
 20551  017104                     l1754:
 20552                           
 20553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20554                           ;stkvar	_i @ sp[(-4)+2]
 20555  017104  0EFE               	movlw	-2
 20556  017106  6AE3               	clrf	plusw1,c
 20557  017108  0EFF               	movlw	-1
 20558  01710A  6AE3               	clrf	plusw1,c
 20559                           
 20560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20561  01710C  D01E               	goto	l9290
 20562  01710E                     l9286:
 20563                           
 20564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20565                           ;stkvar	_fp @ sp[(-4)+-2]
 20566  01710E  0EFA               	movlw	-6
 20567  017110  006F FF8F FFE6     	movff	plusw1,postinc1
 20568  017116  006F FF8F FFE6     	movff	plusw1,postinc1
 20569  01711C  0E20               	movlw	32
 20570  01711E  6EE6               	movwf	postinc1,c
 20571  017120  0E00               	movlw	0
 20572  017122  6EE6               	movwf	postinc1,c
 20573  017124  EC36  F0B7         	call	_fputc	;wreg free
 20574                           
 20575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20576                           ;stkvar	_i @ sp[(-4)+2]
 20577  017128  0EFE               	movlw	-2
 20578  01712A  50E3               	movf	plusw1,w,c
 20579  01712C  0F01               	addlw	1
 20580  01712E  6E35               	movwf	btemp^0,c
 20581  017130  0EFE               	movlw	-2
 20582  017132  0060  F0D7  FFE3   	movff	btemp,plusw1
 20583  017138  6A35               	clrf	btemp^0,c
 20584  01713A  0EFF               	movlw	-1
 20585  01713C  50E3               	movf	plusw1,w,c
 20586  01713E  2035               	addwfc	btemp^0,w,c
 20587  017140  6E35               	movwf	btemp^0,c
 20588  017142  0EFF               	movlw	-1
 20589  017144  0060  F0D7  FFE3   	movff	btemp,plusw1
 20590  01714A                     l9290:
 20591                           
 20592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20593                           ;stkvar	_w @ sp[(-4)+0]
 20594                           ;stkvar	_i @ sp[(-4)+2]
 20595  01714A  50E1               	movf	fsr1l,w,c
 20596  01714C  0FFE               	addlw	-2
 20597  01714E  6ED9               	movwf	fsr2l,c
 20598  017150  50E2               	movf	fsr1h,w,c
 20599  017152  6EDA               	movwf	fsr2h,c
 20600  017154  0EFF               	movlw	255
 20601  017156  22DA               	addwfc	fsr2h,f,c
 20602  017158  0EFC               	movlw	-4
 20603  01715A  50E3               	movf	plusw1,w,c
 20604  01715C  5CDE               	subwf	postinc2,w,c
 20605  01715E  50DE               	movf	postinc2,w,c
 20606  017160  0A80               	xorlw	128
 20607  017162  6E35               	movwf	btemp^0,c
 20608  017164  0EFD               	movlw	-3
 20609  017166  50E3               	movf	plusw1,w,c
 20610  017168  0A80               	xorlw	128
 20611  01716A  5835               	subwfb	btemp^0,w,c
 20612  01716C  A0D8               	btfss	status,0,c
 20613  01716E  D7CF               	goto	l9286
 20614                           
 20615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 20616  017170  B022               	btfsc	_flags^0,0,c
 20617  017172  D010               	goto	l9294
 20618                           
 20619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 20620                           ;stkvar	_fp @ sp[(-4)+-2]
 20621  017174  0EFA               	movlw	-6
 20622  017176  006F FF8F FFE6     	movff	plusw1,postinc1
 20623  01717C  006F FF8F FFE6     	movff	plusw1,postinc1
 20624                           
 20625                           ;stkvar	_buf @ sp[(-6)+-4]
 20626  017182  0EF6               	movlw	-10
 20627  017184  006F FF8F FFE6     	movff	plusw1,postinc1
 20628  01718A  006F FF8F FFE6     	movff	plusw1,postinc1
 20629  017190  EC86  F0BD         	call	_fputs	;wreg free
 20630  017194                     l9294:
 20631                           
 20632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 20633                           ;stkvar	_w @ sp[(-4)+0]
 20634                           ;stkvar	_buf @ sp[(-4)+-4]
 20635  017194  0EF8               	movlw	-8
 20636  017196  006F FF8F FFE6     	movff	plusw1,postinc1
 20637  01719C  006F FF8F FFE6     	movff	plusw1,postinc1
 20638  0171A2  ECE8  F0BC         	call	_strlen	;wreg free
 20639  0171A6  0EFC               	movlw	-4
 20640  0171A8  50E3               	movf	plusw1,w,c
 20641  0171AA  2635               	addwf	btemp^0,f,c
 20642  0171AC  0EFD               	movlw	-3
 20643  0171AE  50E3               	movf	plusw1,w,c
 20644  0171B0  2236               	addwfc	(btemp+1)^0,f,c
 20645                           
 20646                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 20647  0171B2  0EF6               	movlw	246
 20648  0171B4  26E1               	addwf	fsr1l,f,c
 20649  0171B6  0EFF               	movlw	255
 20650  0171B8  22E2               	addwfc	fsr1h,f,c
 20651  0171BA  0012               	return		;funcret
 20652  0171BC                     __end_of_pad:
 20653                           	opt callstack 0
 20654                           
 20655 ;; *************** function _strlen *****************
 20656 ;; Defined at:
 20657 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 20658 ;; Parameters:    Size  Location     Type
 20659 ;;  s               2  [STACK] PTR const unsigned char 
 20660 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20661 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 20662 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 20663 ;; Auto vars:     Size  Location     Type
 20664 ;;  a               2  [STACK] PTR const unsigned char 
 20665 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20666 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 20667 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 20668 ;; Return value:  Size  Location     Type
 20669 ;;                  2  [STACK] unsigned int 
 20670 ;; Registers used:
 20671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 20672 ;; Tracked objects:
 20673 ;;		On entry : 0/0
 20674 ;;		On exit  : 0/0
 20675 ;;		Unchanged: 0/0
 20676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20681 ;;Total ram usage:        0 bytes
 20682 ;; Hardware stack levels used:    1
 20683 ;; Hardware stack levels required when called:    6
 20684 ;; This function calls:
 20685 ;;		Nothing
 20686 ;; This function is called by:
 20687 ;;		_eaDogM_WriteString
 20688 ;;		_pad
 20689 ;;		_stoa
 20690 ;; This function uses a reentrant model
 20691 ;;
 20692                           
 20693                           	psect	text67
 20694  0179D0                     __ptext67:
 20695                           	opt callstack 0
 20696  0179D0                     _strlen:
 20697                           	opt callstack 0
 20698                           
 20699                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20700  0179D0  52E6               	movf	postinc1,f,c
 20701  0179D2  52E6               	movf	postinc1,f,c
 20702                           
 20703                           ;stkvar	_s @ sp[(-2)+-2]
 20704                           
 20705                           ;incstack = 0
 20706  0179D4  0EFC               	movlw	-4
 20707  0179D6  006F FF8C  F03F    	movff	plusw1,btemp+10
 20708  0179DC  0EFD               	movlw	-3
 20709  0179DE  006F FF8C  F040    	movff	plusw1,btemp+11
 20710                           
 20711                           ;stkvar	_a @ sp[(-2)+0]
 20712  0179E4  0EFF               	movlw	-1
 20713  0179E6  0060  F103  FFE3   	movff	btemp+11,plusw1
 20714  0179EC  0EFE               	movlw	-2
 20715  0179EE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 20716  0179F4  D011               	goto	l6118
 20717  0179F6                     l6116:
 20718                           
 20719                           ;stkvar	_s @ sp[(-2)+-2]
 20720  0179F6  0EFC               	movlw	-4
 20721  0179F8  50E3               	movf	plusw1,w,c
 20722  0179FA  0F01               	addlw	1
 20723  0179FC  6E35               	movwf	btemp^0,c
 20724  0179FE  0EFC               	movlw	-4
 20725  017A00  0060  F0D7  FFE3   	movff	btemp,plusw1
 20726  017A06  6A35               	clrf	btemp^0,c
 20727  017A08  0EFD               	movlw	-3
 20728  017A0A  50E3               	movf	plusw1,w,c
 20729  017A0C  2035               	addwfc	btemp^0,w,c
 20730  017A0E  6E35               	movwf	btemp^0,c
 20731  017A10  0EFD               	movlw	-3
 20732  017A12  0060  F0D7  FFE3   	movff	btemp,plusw1
 20733  017A18                     l6118:
 20734                           
 20735                           ;stkvar	_s @ sp[(-2)+-2]
 20736  017A18  0EFC               	movlw	-4
 20737  017A1A  006F FF8F FFF6     	movff	plusw1,tblptrl
 20738  017A20  0EFD               	movlw	-3
 20739  017A22  006F FF8F FFF7     	movff	plusw1,tblptrh
 20740  017A28  0E00               	movlw	low (__mediumconst shr (0+16))
 20741  017A2A  6EF8               	movwf	tblptru,c
 20742  017A2C  0E1F               	movlw	(high __ramtop+-1)
 20743  017A2E  64F7               	cpfsgt	tblptrh,c
 20744  017A30  D003               	bra	u4637
 20745  017A32  0008               	tblrd		*
 20746  017A34  50F5               	movf	tablat,w,c
 20747  017A36  D007               	bra	u4630
 20748  017A38                     u4637:
 20749  017A38  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20750  017A3E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20751  017A44  50EF               	movf	indf0,w,c
 20752  017A46                     u4630:
 20753  017A46  0900               	iorlw	0
 20754  017A48  A4D8               	btfss	status,2,c
 20755  017A4A  D7D5               	goto	l6116
 20756                           
 20757                           ;stkvar	_a @ sp[(-2)+0]
 20758                           ;stkvar	_s @ sp[(-2)+-2]
 20759  017A4C  0EFC               	movlw	-4
 20760  017A4E  006F FF8C  F035    	movff	plusw1,btemp
 20761  017A54  0EFD               	movlw	-3
 20762  017A56  006F FF8C  F036    	movff	plusw1,btemp+1
 20763  017A5C  0EFE               	movlw	-2
 20764  017A5E  50E3               	movf	plusw1,w,c
 20765  017A60  5E35               	subwf	btemp^0,f,c
 20766  017A62  0EFF               	movlw	-1
 20767  017A64  50E3               	movf	plusw1,w,c
 20768  017A66  5A36               	subwfb	(btemp+1)^0,f,c
 20769                           
 20770                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 20771  017A68  52E5               	movf	postdec1,f,c
 20772  017A6A  52E5               	movf	postdec1,f,c
 20773  017A6C  52E5               	movf	postdec1,f,c
 20774  017A6E  52E5               	movf	postdec1,f,c
 20775  017A70  0012               	return		;funcret
 20776  017A72                     __end_of_strlen:
 20777                           	opt callstack 0
 20778                           
 20779 ;; *************** function _fputs *****************
 20780 ;; Defined at:
 20781 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 20782 ;; Parameters:    Size  Location     Type
 20783 ;;  s               2  [STACK] PTR const unsigned char 
 20784 ;;		 -> dbuf(80), 
 20785 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20786 ;;		 -> f(6), NULL(0), 
 20787 ;; Auto vars:     Size  Location     Type
 20788 ;;  i               2  [STACK] int 
 20789 ;;  c               1  [STACK] unsigned char 
 20790 ;; Return value:  Size  Location     Type
 20791 ;;                  2  [STACK] int 
 20792 ;; Registers used:
 20793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20794 ;; Tracked objects:
 20795 ;;		On entry : 0/2
 20796 ;;		On exit  : 0/0
 20797 ;;		Unchanged: 0/0
 20798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20803 ;;Total ram usage:        0 bytes
 20804 ;; Hardware stack levels used:    1
 20805 ;; Hardware stack levels required when called:    9
 20806 ;; This function calls:
 20807 ;;		_fputc
 20808 ;; This function is called by:
 20809 ;;		_pad
 20810 ;; This function uses a reentrant model
 20811 ;;
 20812                           
 20813                           	psect	text68
 20814  017B0C                     __ptext68:
 20815                           	opt callstack 0
 20816  017B0C                     _fputs:
 20817                           	opt callstack 0
 20818                           
 20819                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20820  017B0C  52E6               	movf	postinc1,f,c
 20821  017B0E  52E6               	movf	postinc1,f,c
 20822  017B10  52E6               	movf	postinc1,f,c
 20823                           
 20824                           ;stkvar	_i @ sp[(-3)+0]
 20825                           
 20826                           ;incstack = 0
 20827  017B12  0EFD               	movlw	-3
 20828  017B14  6AE3               	clrf	plusw1,c
 20829  017B16  0EFE               	movlw	-2
 20830  017B18  6AE3               	clrf	plusw1,c
 20831  017B1A  D01F               	goto	l9274
 20832  017B1C                     l9270:
 20833                           
 20834                           ;stkvar	_fp @ sp[(-3)+-4]
 20835  017B1C  0EF9               	movlw	-7
 20836  017B1E  006F FF8F FFE6     	movff	plusw1,postinc1
 20837  017B24  006F FF8F FFE6     	movff	plusw1,postinc1
 20838                           
 20839                           ;stkvar	_c @ sp[(-5)+2]
 20840  017B2A  0EFD               	movlw	-3
 20841  017B2C  50E3               	movf	plusw1,w,c
 20842  017B2E  6EE6               	movwf	postinc1,c
 20843  017B30  0E00               	movlw	0
 20844  017B32  6EE6               	movwf	postinc1,c
 20845  017B34  EC36  F0B7         	call	_fputc	;wreg free
 20846                           
 20847                           ;stkvar	_i @ sp[(-3)+0]
 20848  017B38  0EFD               	movlw	-3
 20849  017B3A  50E3               	movf	plusw1,w,c
 20850  017B3C  0F01               	addlw	1
 20851  017B3E  6E35               	movwf	btemp^0,c
 20852  017B40  0EFD               	movlw	-3
 20853  017B42  0060  F0D7  FFE3   	movff	btemp,plusw1
 20854  017B48  6A35               	clrf	btemp^0,c
 20855  017B4A  0EFE               	movlw	-2
 20856  017B4C  50E3               	movf	plusw1,w,c
 20857  017B4E  2035               	addwfc	btemp^0,w,c
 20858  017B50  6E35               	movwf	btemp^0,c
 20859  017B52  0EFE               	movlw	-2
 20860  017B54  0060  F0D7  FFE3   	movff	btemp,plusw1
 20861  017B5A                     l9274:
 20862                           
 20863                           ;stkvar	_i @ sp[(-3)+0]
 20864  017B5A  0EFD               	movlw	-3
 20865  017B5C  006F FF8C  F03F    	movff	plusw1,btemp+10
 20866  017B62  0EFE               	movlw	-2
 20867  017B64  006F FF8C  F040    	movff	plusw1,btemp+11
 20868                           
 20869                           ;stkvar	_s @ sp[(-3)+-2]
 20870  017B6A  0EFB               	movlw	-5
 20871  017B6C  006F FF8C  F03D    	movff	plusw1,btemp+8
 20872  017B72  0EFC               	movlw	-4
 20873  017B74  006F FF8C  F03E    	movff	plusw1,btemp+9
 20874  017B7A  503F               	movf	(btemp+10)^0,w,c
 20875  017B7C  243D               	addwf	(btemp+8)^0,w,c
 20876  017B7E  6ED9               	movwf	fsr2l,c
 20877  017B80  5040               	movf	(btemp+11)^0,w,c
 20878  017B82  203E               	addwfc	(btemp+9)^0,w,c
 20879  017B84  6EDA               	movwf	fsr2h,c
 20880  017B86  50DF               	movf	indf2,w,c
 20881  017B88  6E40               	movwf	(btemp+11)^0,c
 20882                           
 20883                           ;stkvar	_c @ sp[(-3)+2]
 20884  017B8A  0EFF               	movlw	-1
 20885  017B8C  0060  F103  FFE3   	movff	btemp+11,plusw1
 20886  017B92  0EFF               	movlw	-1
 20887  017B94  50E3               	movf	plusw1,w,c
 20888  017B96  A4D8               	btfss	status,2,c
 20889  017B98  D7C1               	goto	l9270
 20890                           
 20891                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20892  017B9A  0EF9               	movlw	249
 20893  017B9C  26E1               	addwf	fsr1l,f,c
 20894  017B9E  0EFF               	movlw	255
 20895  017BA0  22E2               	addwfc	fsr1h,f,c
 20896  017BA2  0012               	return		;funcret
 20897  017BA4                     __end_of_fputs:
 20898                           	opt callstack 0
 20899                           
 20900 ;; *************** function _fputc *****************
 20901 ;; Defined at:
 20902 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 20903 ;; Parameters:    Size  Location     Type
 20904 ;;  c               2  [STACK] int 
 20905 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20906 ;;		 -> f(6), NULL(0), 
 20907 ;; Auto vars:     Size  Location     Type
 20908 ;;		None
 20909 ;; Return value:  Size  Location     Type
 20910 ;;                  2  [STACK] int 
 20911 ;; Registers used:
 20912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20913 ;; Tracked objects:
 20914 ;;		On entry : 0/4
 20915 ;;		On exit  : 0/0
 20916 ;;		Unchanged: 0/0
 20917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20922 ;;Total ram usage:        0 bytes
 20923 ;; Hardware stack levels used:    1
 20924 ;; Hardware stack levels required when called:    8
 20925 ;; This function calls:
 20926 ;;		_putch
 20927 ;; This function is called by:
 20928 ;;		_pad
 20929 ;;		_stoa
 20930 ;;		_vfpfcnvrt
 20931 ;;		_fputs
 20932 ;; This function uses a reentrant model
 20933 ;;
 20934                           
 20935                           	psect	text69
 20936  016E6C                     __ptext69:
 20937                           	opt callstack 0
 20938  016E6C                     _fputc:
 20939                           	opt callstack 13
 20940                           
 20941                           ;stkvar	_fp @ sp[(0)+-4]
 20942                           
 20943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20944                           ;incstack = 0
 20945  016E6C  0EFC               	movlw	-4
 20946  016E6E  006F FF8C  F035    	movff	plusw1,btemp
 20947  016E74  0EFD               	movlw	-3
 20948  016E76  50E3               	movf	plusw1,w,c
 20949  016E78  1035               	iorwf	btemp^0,w,c
 20950  016E7A  B4D8               	btfsc	status,2,c
 20951  016E7C  D009               	goto	u9100
 20952                           
 20953                           ;stkvar	_fp @ sp[(0)+-4]
 20954  016E7E  0EFC               	movlw	-4
 20955  016E80  006F FF8C  F035    	movff	plusw1,btemp
 20956  016E86  0EFD               	movlw	-3
 20957  016E88  50E3               	movf	plusw1,w,c
 20958  016E8A  1035               	iorwf	btemp^0,w,c
 20959  016E8C  A4D8               	btfss	status,2,c
 20960  016E8E  D006               	goto	l9258
 20961  016E90                     u9100:
 20962                           
 20963                           ;stkvar	_c @ sp[(0)+-2]
 20964  016E90  0EFE               	movlw	-2
 20965  016E92  50E3               	movf	plusw1,w,c
 20966  016E94  6EE6               	movwf	postinc1,c
 20967  016E96  ECF6  F0C6         	call	_putch	;wreg free
 20968  016E9A  D075               	goto	l2795
 20969  016E9C                     l9258:
 20970                           
 20971                           ;stkvar	_fp @ sp[(0)+-4]
 20972  016E9C  0EFC               	movlw	-4
 20973  016E9E  006F FF8C  F03F    	movff	plusw1,btemp+10
 20974  016EA4  0EFD               	movlw	-3
 20975  016EA6  006F FF8C  F040    	movff	plusw1,btemp+11
 20976  016EAC  0E04               	movlw	4
 20977  016EAE  243F               	addwf	(btemp+10)^0,w,c
 20978  016EB0  6ED9               	movwf	fsr2l,c
 20979  016EB2  0E00               	movlw	0
 20980  016EB4  2040               	addwfc	(btemp+11)^0,w,c
 20981  016EB6  6EDA               	movwf	fsr2h,c
 20982  016EB8  50DE               	movf	postinc2,w,c
 20983  016EBA  10DE               	iorwf	postinc2,w,c
 20984  016EBC  B4D8               	btfsc	status,2,c
 20985  016EBE  D026               	goto	u9120
 20986                           
 20987                           ;stkvar	_fp @ sp[(0)+-4]
 20988  016EC0  0EFC               	movlw	-4
 20989  016EC2  006F FF8C  F03F    	movff	plusw1,btemp+10
 20990  016EC8  0EFD               	movlw	-3
 20991  016ECA  006F FF8C  F040    	movff	plusw1,btemp+11
 20992  016ED0  0E04               	movlw	4
 20993  016ED2  243F               	addwf	(btemp+10)^0,w,c
 20994  016ED4  6ED9               	movwf	fsr2l,c
 20995  016ED6  0E00               	movlw	0
 20996  016ED8  2040               	addwfc	(btemp+11)^0,w,c
 20997  016EDA  6EDA               	movwf	fsr2h,c
 20998                           
 20999                           ;stkvar	_fp @ sp[(0)+-4]
 21000  016EDC  0EFC               	movlw	-4
 21001  016EDE  006F FF8C  F03F    	movff	plusw1,btemp+10
 21002  016EE4  0EFD               	movlw	-3
 21003  016EE6  006F FF8C  F040    	movff	plusw1,btemp+11
 21004  016EEC  0E02               	movlw	2
 21005  016EEE  243F               	addwf	(btemp+10)^0,w,c
 21006  016EF0  6EE9               	movwf	fsr0l,c
 21007  016EF2  0E00               	movlw	0
 21008  016EF4  2040               	addwfc	(btemp+11)^0,w,c
 21009  016EF6  6EEA               	movwf	fsr0h,c
 21010  016EF8  50DE               	movf	postinc2,w,c
 21011  016EFA  5CEE               	subwf	postinc0,w,c
 21012  016EFC  50EE               	movf	postinc0,w,c
 21013  016EFE  0A80               	xorlw	128
 21014  016F00  6E35               	movwf	btemp^0,c
 21015  016F02  50DE               	movf	postinc2,w,c
 21016  016F04  0A80               	xorlw	128
 21017  016F06  5835               	subwfb	btemp^0,w,c
 21018  016F08  B0D8               	btfsc	status,0,c
 21019  016F0A  D03D               	goto	l2795
 21020  016F0C                     u9120:
 21021                           
 21022                           ;stkvar	_c @ sp[(0)+-2]
 21023                           ;stkvar	_fp @ sp[(0)+-4]
 21024  016F0C  0EFC               	movlw	-4
 21025  016F0E  006F FF8C  F03F    	movff	plusw1,btemp+10
 21026  016F14  0EFD               	movlw	-3
 21027  016F16  006F FF8C  F040    	movff	plusw1,btemp+11
 21028  016F1C  0E02               	movlw	2
 21029  016F1E  243F               	addwf	(btemp+10)^0,w,c
 21030  016F20  6ED9               	movwf	fsr2l,c
 21031  016F22  0E00               	movlw	0
 21032  016F24  2040               	addwfc	(btemp+11)^0,w,c
 21033  016F26  6EDA               	movwf	fsr2h,c
 21034  016F28  006F FF78  F03F    	movff	postinc2,btemp+10
 21035  016F2E  006F FF74  F040    	movff	postdec2,btemp+11
 21036                           
 21037                           ;stkvar	_fp @ sp[(0)+-4]
 21038  016F34  0EFC               	movlw	-4
 21039  016F36  006F FF8F FFD9     	movff	plusw1,fsr2l
 21040  016F3C  0EFD               	movlw	-3
 21041  016F3E  006F FF8F FFDA     	movff	plusw1,fsr2h
 21042  016F44  006F FF78  F03D    	movff	postinc2,btemp+8
 21043  016F4A  006F FF74  F03E    	movff	postdec2,btemp+9
 21044  016F50  503F               	movf	(btemp+10)^0,w,c
 21045  016F52  243D               	addwf	(btemp+8)^0,w,c
 21046  016F54  6ED9               	movwf	fsr2l,c
 21047  016F56  5040               	movf	(btemp+11)^0,w,c
 21048  016F58  203E               	addwfc	(btemp+9)^0,w,c
 21049  016F5A  6EDA               	movwf	fsr2h,c
 21050  016F5C  0EFE               	movlw	-2
 21051  016F5E  006F FF8F FFDF     	movff	plusw1,indf2
 21052                           
 21053                           ;stkvar	_fp @ sp[(0)+-4]
 21054  016F64  0EFC               	movlw	-4
 21055  016F66  006F FF8C  F03F    	movff	plusw1,btemp+10
 21056  016F6C  0EFD               	movlw	-3
 21057  016F6E  006F FF8C  F040    	movff	plusw1,btemp+11
 21058  016F74  0E02               	movlw	2
 21059  016F76  243F               	addwf	(btemp+10)^0,w,c
 21060  016F78  6ED9               	movwf	fsr2l,c
 21061  016F7A  0E00               	movlw	0
 21062  016F7C  2040               	addwfc	(btemp+11)^0,w,c
 21063  016F7E  6EDA               	movwf	fsr2h,c
 21064  016F80  2ADE               	incf	postinc2,f,c
 21065  016F82  0E00               	movlw	0
 21066  016F84  22DD               	addwfc	postdec2,f,c
 21067  016F86                     l2795:
 21068                           
 21069                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21070  016F86  52E5               	movf	postdec1,f,c
 21071  016F88  52E5               	movf	postdec1,f,c
 21072  016F8A  52E5               	movf	postdec1,f,c
 21073  016F8C  52E5               	movf	postdec1,f,c
 21074  016F8E  0012               	return		;funcret
 21075  016F90                     __end_of_fputc:
 21076                           	opt callstack 0
 21077                           
 21078 ;; *************** function _putch *****************
 21079 ;; Defined at:
 21080 ;;		line 155 in file "eadog.c"
 21081 ;; Parameters:    Size  Location     Type
 21082 ;;  c               1  [STACK] unsigned char 
 21083 ;; Auto vars:     Size  Location     Type
 21084 ;;		None
 21085 ;; Return value:  Size  Location     Type
 21086 ;;                  1  [STACK] void 
 21087 ;; Registers used:
 21088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21089 ;; Tracked objects:
 21090 ;;		On entry : 0/4
 21091 ;;		On exit  : 0/0
 21092 ;;		Unchanged: 0/0
 21093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21098 ;;Total ram usage:        0 bytes
 21099 ;; Hardware stack levels used:    1
 21100 ;; Hardware stack levels required when called:    7
 21101 ;; This function calls:
 21102 ;;		_ringBufS_put_dma
 21103 ;; This function is called by:
 21104 ;;		_fputc
 21105 ;; This function uses a reentrant model
 21106 ;;
 21107                           
 21108                           	psect	text70
 21109  018DEC                     __ptext70:
 21110                           	opt callstack 0
 21111  018DEC                     _putch:
 21112                           	opt callstack 13
 21113                           
 21114                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21115                           ;stkvar	_c @ sp[(0)+-1]
 21116                           
 21117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21118                           ;incstack = 0
 21119  018DEC  0EFF               	movlw	-1
 21120  018DEE  50E3               	movf	plusw1,w,c
 21121  018DF0  6EE6               	movwf	postinc1,c
 21122  018DF2  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
 21123  018DF8  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
 21124  018DFE  ECEC  F0BB         	call	_ringBufS_put_dma	;wreg free
 21125                           
 21126                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21127  018E02  52E5               	movf	postdec1,f,c
 21128  018E04  0012               	return		;funcret
 21129  018E06                     __end_of_putch:
 21130                           	opt callstack 0
 21131                           
 21132 ;; *************** function _ringBufS_put_dma *****************
 21133 ;; Defined at:
 21134 ;;		line 67 in file "ringbufs.c"
 21135 ;; Parameters:    Size  Location     Type
 21136 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21137 ;;		 -> ring_buf1(67), 
 21138 ;;  c               1  [STACK] const unsigned char 
 21139 ;; Auto vars:     Size  Location     Type
 21140 ;;		None
 21141 ;; Return value:  Size  Location     Type
 21142 ;;                  1  [STACK] void 
 21143 ;; Registers used:
 21144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21145 ;; Tracked objects:
 21146 ;;		On entry : 0/4
 21147 ;;		On exit  : 0/0
 21148 ;;		Unchanged: 0/0
 21149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21154 ;;Total ram usage:        0 bytes
 21155 ;; Hardware stack levels used:    1
 21156 ;; Hardware stack levels required when called:    6
 21157 ;; This function calls:
 21158 ;;		Nothing
 21159 ;; This function is called by:
 21160 ;;		_putch
 21161 ;; This function uses a reentrant model
 21162 ;;
 21163                           
 21164                           	psect	text71
 21165  0177D8                     __ptext71:
 21166                           	opt callstack 0
 21167  0177D8                     _ringBufS_put_dma:
 21168                           	opt callstack 13
 21169                           
 21170                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21171                           ;stkvar	__this @ sp[(0)+-2]
 21172                           
 21173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21174                           ;incstack = 0
 21175  0177D8  0EFE               	movlw	-2
 21176  0177DA  006F FF8C  F03F    	movff	plusw1,btemp+10
 21177  0177E0  0EFF               	movlw	-1
 21178  0177E2  006F FF8C  F040    	movff	plusw1,btemp+11
 21179  0177E8  0E42               	movlw	66
 21180  0177EA  243F               	addwf	(btemp+10)^0,w,c
 21181  0177EC  6ED9               	movwf	fsr2l,c
 21182  0177EE  0E00               	movlw	0
 21183  0177F0  2040               	addwfc	(btemp+11)^0,w,c
 21184  0177F2  6EDA               	movwf	fsr2h,c
 21185  0177F4  0E40               	movlw	64
 21186  0177F6  60DF               	cpfslt	indf2,c
 21187  0177F8  D040               	goto	l1465
 21188                           
 21189                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21190                           ;stkvar	_c @ sp[(0)+-3]
 21191                           ;stkvar	__this @ sp[(0)+-2]
 21192  0177FA  0EFE               	movlw	-2
 21193  0177FC  006F FF8C  F03F    	movff	plusw1,btemp+10
 21194  017802  0EFF               	movlw	-1
 21195  017804  006F FF8C  F040    	movff	plusw1,btemp+11
 21196  01780A  0E40               	movlw	64
 21197  01780C  243F               	addwf	(btemp+10)^0,w,c
 21198  01780E  6ED9               	movwf	fsr2l,c
 21199  017810  0E00               	movlw	0
 21200  017812  2040               	addwfc	(btemp+11)^0,w,c
 21201  017814  6EDA               	movwf	fsr2h,c
 21202  017816  50DF               	movf	indf2,w,c
 21203  017818  6E40               	movwf	(btemp+11)^0,c
 21204                           
 21205                           ;stkvar	__this @ sp[(0)+-2]
 21206  01781A  0EFE               	movlw	-2
 21207  01781C  006F FF8C  F03D    	movff	plusw1,btemp+8
 21208  017822  0EFF               	movlw	-1
 21209  017824  006F FF8C  F03E    	movff	plusw1,btemp+9
 21210  01782A  5040               	movf	(btemp+11)^0,w,c
 21211  01782C  243D               	addwf	(btemp+8)^0,w,c
 21212  01782E  6ED9               	movwf	fsr2l,c
 21213  017830  0E00               	movlw	0
 21214  017832  203E               	addwfc	(btemp+9)^0,w,c
 21215  017834  6EDA               	movwf	fsr2h,c
 21216  017836  0EFD               	movlw	-3
 21217  017838  006F FF8F FFDF     	movff	plusw1,indf2
 21218                           
 21219                           ;ringbufs.c: 71:   ++_this->head;
 21220                           ;stkvar	__this @ sp[(0)+-2]
 21221  01783E  0EFE               	movlw	-2
 21222  017840  006F FF8C  F03F    	movff	plusw1,btemp+10
 21223  017846  0EFF               	movlw	-1
 21224  017848  006F FF8C  F040    	movff	plusw1,btemp+11
 21225  01784E  0E40               	movlw	64
 21226  017850  243F               	addwf	(btemp+10)^0,w,c
 21227  017852  6ED9               	movwf	fsr2l,c
 21228  017854  0E00               	movlw	0
 21229  017856  2040               	addwfc	(btemp+11)^0,w,c
 21230  017858  6EDA               	movwf	fsr2h,c
 21231  01785A  2ADF               	incf	indf2,f,c
 21232                           
 21233                           ;ringbufs.c: 72:   ++_this->count;
 21234                           ;stkvar	__this @ sp[(0)+-2]
 21235  01785C  0EFE               	movlw	-2
 21236  01785E  006F FF8C  F03F    	movff	plusw1,btemp+10
 21237  017864  0EFF               	movlw	-1
 21238  017866  006F FF8C  F040    	movff	plusw1,btemp+11
 21239  01786C  0E42               	movlw	66
 21240  01786E  243F               	addwf	(btemp+10)^0,w,c
 21241  017870  6ED9               	movwf	fsr2l,c
 21242  017872  0E00               	movlw	0
 21243  017874  2040               	addwfc	(btemp+11)^0,w,c
 21244  017876  6EDA               	movwf	fsr2h,c
 21245  017878  2ADF               	incf	indf2,f,c
 21246  01787A                     l1465:
 21247                           
 21248                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21249  01787A  52E5               	movf	postdec1,f,c
 21250  01787C  52E5               	movf	postdec1,f,c
 21251  01787E  52E5               	movf	postdec1,f,c
 21252  017880  0012               	return		;funcret
 21253  017882                     __end_of_ringBufS_put_dma:
 21254                           	opt callstack 0
 21255                           
 21256 ;; *************** function _atoi *****************
 21257 ;; Defined at:
 21258 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21259 ;; Parameters:    Size  Location     Type
 21260 ;;  s               2  [STACK] PTR const unsigned char 
 21261 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
 21262 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
 21263 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
 21264 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
 21265 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
 21266 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
 21267 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 21268 ;; Auto vars:     Size  Location     Type
 21269 ;;  n               2  [STACK] int 
 21270 ;;  neg             2  [STACK] int 
 21271 ;; Return value:  Size  Location     Type
 21272 ;;                  2  [STACK] int 
 21273 ;; Registers used:
 21274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21275 ;; Tracked objects:
 21276 ;;		On entry : 0/4
 21277 ;;		On exit  : 0/0
 21278 ;;		Unchanged: 0/0
 21279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21284 ;;Total ram usage:        0 bytes
 21285 ;; Hardware stack levels used:    1
 21286 ;; Hardware stack levels required when called:    7
 21287 ;; This function calls:
 21288 ;;		_isdigit
 21289 ;;		_isspace
 21290 ;; This function is called by:
 21291 ;;		_vfpfcnvrt
 21292 ;; This function uses a reentrant model
 21293 ;;
 21294                           
 21295                           	psect	text72
 21296  01581C                     __ptext72:
 21297                           	opt callstack 0
 21298  01581C                     _atoi:
 21299                           	opt callstack 0
 21300                           
 21301                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21302  01581C  0E09               	movlw	9
 21303  01581E  26E1               	addwf	fsr1l,f,c
 21304  015820  0E00               	movlw	0
 21305  015822  22E2               	addwfc	fsr1h,f,c
 21306                           
 21307                           ;stkvar	_n @ sp[(-9)+5]
 21308                           
 21309                           ;incstack = 0
 21310  015824  0EFC               	movlw	-4
 21311  015826  6AE3               	clrf	plusw1,c
 21312  015828  0EFD               	movlw	-3
 21313  01582A  6AE3               	clrf	plusw1,c
 21314                           
 21315                           ;stkvar	_neg @ sp[(-9)+7]
 21316  01582C  0EFE               	movlw	-2
 21317  01582E  6AE3               	clrf	plusw1,c
 21318  015830  0EFF               	movlw	-1
 21319  015832  6AE3               	clrf	plusw1,c
 21320  015834  D011               	goto	l7674
 21321  015836                     l7672:
 21322                           
 21323                           ;stkvar	_s @ sp[(-9)+-2]
 21324  015836  0EF5               	movlw	-11
 21325  015838  50E3               	movf	plusw1,w,c
 21326  01583A  0F01               	addlw	1
 21327  01583C  6E35               	movwf	btemp^0,c
 21328  01583E  0EF5               	movlw	-11
 21329  015840  0060  F0D7  FFE3   	movff	btemp,plusw1
 21330  015846  6A35               	clrf	btemp^0,c
 21331  015848  0EF6               	movlw	-10
 21332  01584A  50E3               	movf	plusw1,w,c
 21333  01584C  2035               	addwfc	btemp^0,w,c
 21334  01584E  6E35               	movwf	btemp^0,c
 21335  015850  0EF6               	movlw	-10
 21336  015852  0060  F0D7  FFE3   	movff	btemp,plusw1
 21337  015858                     l7674:
 21338                           
 21339                           ;stkvar	_atoi$4762 @ sp[(-9)+4]
 21340  015858  0EFB               	movlw	-5
 21341  01585A  6AE3               	clrf	plusw1,c
 21342  01585C  2AE3               	incf	plusw1,f,c
 21343                           
 21344                           ;stkvar	_s @ sp[(-9)+-2]
 21345  01585E  50E1               	movf	fsr1l,w,c
 21346  015860  0FF5               	addlw	-11
 21347  015862  6ED9               	movwf	fsr2l,c
 21348  015864  50E2               	movf	fsr1h,w,c
 21349  015866  6EDA               	movwf	fsr2h,c
 21350  015868  0EFF               	movlw	255
 21351  01586A  22DA               	addwfc	fsr2h,f,c
 21352  01586C  006F FF7B FFF6     	movff	postinc2,tblptrl
 21353  015872  006F FF77 FFF7     	movff	postdec2,tblptrh
 21354  015878                     	if	0	;tblptru may be non-zero
 21355  015878                     	endif
 21356  015878                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21357  015878  0E00               	movlw	low (__mediumconst shr (0+16))
 21358  01587A  6EF8               	movwf	tblptru,c
 21359  01587C                     	endif
 21360  01587C  0008               	tblrd		*
 21361  01587E  50F5               	movf	tablat,w,c
 21362  015880  0A20               	xorlw	32
 21363  015882  B4D8               	btfsc	status,2,c
 21364  015884  D023               	goto	l7682
 21365  015886  0EF7               	movlw	247
 21366  015888  6E3F               	movwf	(btemp+10)^0,c
 21367  01588A  0EFF               	movlw	255
 21368  01588C  6E40               	movwf	(btemp+11)^0,c
 21369                           
 21370                           ;stkvar	_s @ sp[(-9)+-2]
 21371  01588E  50E1               	movf	fsr1l,w,c
 21372  015890  0FF5               	addlw	-11
 21373  015892  6ED9               	movwf	fsr2l,c
 21374  015894  50E2               	movf	fsr1h,w,c
 21375  015896  6EDA               	movwf	fsr2h,c
 21376  015898  0EFF               	movlw	255
 21377  01589A  22DA               	addwfc	fsr2h,f,c
 21378  01589C  006F FF7B FFF6     	movff	postinc2,tblptrl
 21379  0158A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 21380  0158A8                     	if	0	;tblptru may be non-zero
 21381  0158A8                     	endif
 21382  0158A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21383  0158A8  0E00               	movlw	low (__mediumconst shr (0+16))
 21384  0158AA  6EF8               	movwf	tblptru,c
 21385  0158AC                     	endif
 21386  0158AC  0008               	tblrd		*
 21387  0158AE  50F5               	movf	tablat,w,c
 21388  0158B0  6E3D               	movwf	(btemp+8)^0,c
 21389  0158B2  6A3E               	clrf	(btemp+9)^0,c
 21390  0158B4  503F               	movf	(btemp+10)^0,w,c
 21391  0158B6  263D               	addwf	(btemp+8)^0,f,c
 21392  0158B8  5040               	movf	(btemp+11)^0,w,c
 21393  0158BA  223E               	addwfc	(btemp+9)^0,f,c
 21394  0158BC  503E               	movf	(btemp+9)^0,w,c
 21395  0158BE  E104               	bnz	u7680
 21396  0158C0  0E05               	movlw	5
 21397  0158C2  5C3D               	subwf	(btemp+8)^0,w,c
 21398  0158C4  A0D8               	btfss	status,0,c
 21399  0158C6  D002               	goto	l7682
 21400  0158C8                     u7680:
 21401                           
 21402                           ;stkvar	_atoi$4762 @ sp[(-9)+4]
 21403  0158C8  0EFB               	movlw	-5
 21404  0158CA  6AE3               	clrf	plusw1,c
 21405  0158CC                     l7682:
 21406                           
 21407                           ;stkvar	_atoi$4762 @ sp[(-9)+4]
 21408  0158CC  0EFB               	movlw	-5
 21409  0158CE  50E3               	movf	plusw1,w,c
 21410  0158D0  6E3F               	movwf	(btemp+10)^0,c
 21411  0158D2  6A40               	clrf	(btemp+11)^0,c
 21412                           
 21413                           ;stkvar	_atoi$4761 @ sp[(-9)+2]
 21414  0158D4  0EF9               	movlw	-7
 21415  0158D6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 21416  0158DC  0EFA               	movlw	-6
 21417  0158DE  0060  F103  FFE3   	movff	btemp+11,plusw1
 21418                           
 21419                           ;stkvar	_atoi$4761 @ sp[(-9)+2]
 21420  0158E4  0EF9               	movlw	-7
 21421  0158E6  006F FF8C  F035    	movff	plusw1,btemp
 21422  0158EC  0EFA               	movlw	-6
 21423  0158EE  50E3               	movf	plusw1,w,c
 21424  0158F0  1035               	iorwf	btemp^0,w,c
 21425  0158F2  B4D8               	btfsc	status,2,c
 21426  0158F4  D01F               	goto	l7692
 21427  0158F6  D79F               	goto	l7672
 21428  0158F8                     l7688:
 21429  0158F8  0E01               	movlw	1
 21430  0158FA  6E3F               	movwf	(btemp+10)^0,c
 21431  0158FC  0E00               	movlw	0
 21432  0158FE  6E40               	movwf	(btemp+11)^0,c
 21433                           
 21434                           ;stkvar	_neg @ sp[(-9)+7]
 21435  015900  0EFE               	movlw	-2
 21436  015902  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 21437  015908  0EFF               	movlw	-1
 21438  01590A  0060  F103  FFE3   	movff	btemp+11,plusw1
 21439  015910                     l7690:
 21440                           
 21441                           ;stkvar	_s @ sp[(-9)+-2]
 21442  015910  0EF5               	movlw	-11
 21443  015912  50E3               	movf	plusw1,w,c
 21444  015914  0F01               	addlw	1
 21445  015916  6E35               	movwf	btemp^0,c
 21446  015918  0EF5               	movlw	-11
 21447  01591A  0060  F0D7  FFE3   	movff	btemp,plusw1
 21448  015920  6A35               	clrf	btemp^0,c
 21449  015922  0EF6               	movlw	-10
 21450  015924  50E3               	movf	plusw1,w,c
 21451  015926  2035               	addwfc	btemp^0,w,c
 21452  015928  6E35               	movwf	btemp^0,c
 21453  01592A  0EF6               	movlw	-10
 21454  01592C  0060  F0D7  FFE3   	movff	btemp,plusw1
 21455  015932  D053               	goto	l7698
 21456  015934                     l7692:
 21457                           
 21458                           ;stkvar	_s @ sp[(-9)+-2]
 21459  015934  50E1               	movf	fsr1l,w,c
 21460  015936  0FF5               	addlw	-11
 21461  015938  6ED9               	movwf	fsr2l,c
 21462  01593A  50E2               	movf	fsr1h,w,c
 21463  01593C  6EDA               	movwf	fsr2h,c
 21464  01593E  0EFF               	movlw	255
 21465  015940  22DA               	addwfc	fsr2h,f,c
 21466  015942  006F FF7B FFF6     	movff	postinc2,tblptrl
 21467  015948  006F FF77 FFF7     	movff	postdec2,tblptrh
 21468  01594E                     	if	0	;tblptru may be non-zero
 21469  01594E                     	endif
 21470  01594E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21471  01594E  0E00               	movlw	low (__mediumconst shr (0+16))
 21472  015950  6EF8               	movwf	tblptru,c
 21473  015952                     	endif
 21474  015952  0008               	tblrd		*
 21475  015954  50F5               	movf	tablat,w,c
 21476  015956  6E3F               	movwf	(btemp+10)^0,c
 21477  015958  6A40               	clrf	(btemp+11)^0,c
 21478                           
 21479                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21480                           ; Switch size 1, requested type "simple"
 21481                           ; Number of cases is 1, Range of values is 0 to 0
 21482                           ; switch strategies available:
 21483                           ; Name         Instructions Cycles
 21484                           ; simple_byte            4     3 (average)
 21485                           ;	Chosen strategy is simple_byte
 21486  01595A  5040               	movf	(btemp+11)^0,w,c
 21487  01595C  0A00               	xorlw	0	; case 0
 21488  01595E  A4D8               	btfss	status,2,c
 21489  015960  D03C               	goto	l7698
 21490                           
 21491                           ; Switch size 1, requested type "simple"
 21492                           ; Number of cases is 2, Range of values is 43 to 45
 21493                           ; switch strategies available:
 21494                           ; Name         Instructions Cycles
 21495                           ; simple_byte            7     4 (average)
 21496                           ;	Chosen strategy is simple_byte
 21497  015962  503F               	movf	(btemp+10)^0,w,c
 21498  015964  0A2B               	xorlw	43	; case 43
 21499  015966  B4D8               	btfsc	status,2,c
 21500  015968  D7D3               	goto	l7690
 21501  01596A  0A06               	xorlw	6	; case 45
 21502  01596C  B4D8               	btfsc	status,2,c
 21503  01596E  D7C4               	goto	l7688
 21504  015970  D034               	goto	l7698
 21505  015972                     l7694:
 21506                           
 21507                           ;stkvar	_n @ sp[(-9)+5]
 21508  015972  0EFC               	movlw	-4
 21509  015974  006F FF8C  F03F    	movff	plusw1,btemp+10
 21510  01597A  0EFD               	movlw	-3
 21511  01597C  006F FF8C  F040    	movff	plusw1,btemp+11
 21512  015982  0E0A               	movlw	10
 21513  015984  023F               	mulwf	(btemp+10)^0,c
 21514  015986  006F FFCC  F03D    	movff	prodl,btemp+8
 21515  01598C  006F FFD0  F03E    	movff	prodh,btemp+9
 21516  015992  0240               	mulwf	(btemp+11)^0,c
 21517  015994  50F3               	movf	prodl,w,c
 21518  015996  263E               	addwf	(btemp+9)^0,f,c
 21519                           
 21520                           ;stkvar	_s @ sp[(-9)+-2]
 21521  015998  50E1               	movf	fsr1l,w,c
 21522  01599A  0FF5               	addlw	-11
 21523  01599C  6ED9               	movwf	fsr2l,c
 21524  01599E  50E2               	movf	fsr1h,w,c
 21525  0159A0  6EDA               	movwf	fsr2h,c
 21526  0159A2  0EFF               	movlw	255
 21527  0159A4  22DA               	addwfc	fsr2h,f,c
 21528  0159A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 21529  0159AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 21530  0159B2                     	if	0	;tblptru may be non-zero
 21531  0159B2                     	endif
 21532  0159B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21533  0159B2  0E00               	movlw	low (__mediumconst shr (0+16))
 21534  0159B4  6EF8               	movwf	tblptru,c
 21535  0159B6                     	endif
 21536  0159B6  0008               	tblrd		*
 21537  0159B8  50F5               	movf	tablat,w,c
 21538  0159BA  5E3D               	subwf	(btemp+8)^0,f,c
 21539  0159BC  0E00               	movlw	0
 21540  0159BE  5A3E               	subwfb	(btemp+9)^0,f,c
 21541  0159C0  0E30               	movlw	48
 21542  0159C2  263D               	addwf	(btemp+8)^0,f,c
 21543  0159C4  0E00               	movlw	0
 21544  0159C6  223E               	addwfc	(btemp+9)^0,f,c
 21545                           
 21546                           ;stkvar	_n @ sp[(-9)+5]
 21547  0159C8  0EFC               	movlw	-4
 21548  0159CA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 21549  0159D0  0EFD               	movlw	-3
 21550  0159D2  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 21551  0159D8  D79B               	goto	l7690
 21552  0159DA                     l7698:
 21553  0159DA  0ED0               	movlw	208
 21554  0159DC  6E3F               	movwf	(btemp+10)^0,c
 21555  0159DE  0EFF               	movlw	255
 21556  0159E0  6E40               	movwf	(btemp+11)^0,c
 21557                           
 21558                           ;stkvar	_s @ sp[(-9)+-2]
 21559  0159E2  50E1               	movf	fsr1l,w,c
 21560  0159E4  0FF5               	addlw	-11
 21561  0159E6  6ED9               	movwf	fsr2l,c
 21562  0159E8  50E2               	movf	fsr1h,w,c
 21563  0159EA  6EDA               	movwf	fsr2h,c
 21564  0159EC  0EFF               	movlw	255
 21565  0159EE  22DA               	addwfc	fsr2h,f,c
 21566  0159F0  006F FF7B FFF6     	movff	postinc2,tblptrl
 21567  0159F6  006F FF77 FFF7     	movff	postdec2,tblptrh
 21568  0159FC                     	if	0	;tblptru may be non-zero
 21569  0159FC                     	endif
 21570  0159FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21571  0159FC  0E00               	movlw	low (__mediumconst shr (0+16))
 21572  0159FE  6EF8               	movwf	tblptru,c
 21573  015A00                     	endif
 21574  015A00  0008               	tblrd		*
 21575  015A02  50F5               	movf	tablat,w,c
 21576  015A04  6E3D               	movwf	(btemp+8)^0,c
 21577  015A06  6A3E               	clrf	(btemp+9)^0,c
 21578  015A08  503F               	movf	(btemp+10)^0,w,c
 21579  015A0A  263D               	addwf	(btemp+8)^0,f,c
 21580  015A0C  5040               	movf	(btemp+11)^0,w,c
 21581  015A0E  223E               	addwfc	(btemp+9)^0,f,c
 21582  015A10  503E               	movf	(btemp+9)^0,w,c
 21583  015A12  E106               	bnz	u7700
 21584  015A14  0E0A               	movlw	10
 21585  015A16  5C3D               	subwf	(btemp+8)^0,w,c
 21586  015A18  B0D8               	btfsc	status,0,c
 21587  015A1A  D002               	goto	u7700
 21588  015A1C  0E01               	movlw	1
 21589  015A1E  D001               	goto	u7710
 21590  015A20                     u7700:
 21591  015A20  0E00               	movlw	0
 21592  015A22                     u7710:
 21593  015A22  6E3F               	movwf	(btemp+10)^0,c
 21594  015A24  6A40               	clrf	(btemp+11)^0,c
 21595                           
 21596                           ;stkvar	_atoi$4763 @ sp[(-9)+0]
 21597  015A26  0EF7               	movlw	-9
 21598  015A28  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 21599  015A2E  0EF8               	movlw	-8
 21600  015A30  0060  F103  FFE3   	movff	btemp+11,plusw1
 21601                           
 21602                           ;stkvar	_atoi$4763 @ sp[(-9)+0]
 21603  015A36  0EF7               	movlw	-9
 21604  015A38  006F FF8C  F035    	movff	plusw1,btemp
 21605  015A3E  0EF8               	movlw	-8
 21606  015A40  50E3               	movf	plusw1,w,c
 21607  015A42  1035               	iorwf	btemp^0,w,c
 21608  015A44  A4D8               	btfss	status,2,c
 21609  015A46  D795               	goto	l7694
 21610                           
 21611                           ;stkvar	_neg @ sp[(-9)+7]
 21612  015A48  0EFE               	movlw	-2
 21613  015A4A  006F FF8C  F035    	movff	plusw1,btemp
 21614  015A50  0EFF               	movlw	-1
 21615  015A52  50E3               	movf	plusw1,w,c
 21616  015A54  1035               	iorwf	btemp^0,w,c
 21617  015A56  A4D8               	btfss	status,2,c
 21618  015A58  D00E               	goto	l7708
 21619                           
 21620                           ;stkvar	_n @ sp[(-9)+5]
 21621  015A5A  0EFC               	movlw	-4
 21622  015A5C  006F FF8C  F035    	movff	plusw1,btemp
 21623  015A62  1E35               	comf	btemp^0,f,c
 21624  015A64  0EFD               	movlw	-3
 21625  015A66  006F FF8C  F036    	movff	plusw1,btemp+1
 21626  015A6C  1E36               	comf	(btemp+1)^0,f,c
 21627  015A6E  2A35               	incf	btemp^0,f,c
 21628  015A70  B4D8               	btfsc	status,2,c
 21629  015A72  2A36               	incf	(btemp+1)^0,f,c
 21630  015A74  D008               	goto	l2731
 21631  015A76                     l7708:
 21632                           
 21633                           ;stkvar	_n @ sp[(-9)+5]
 21634  015A76  0EFC               	movlw	-4
 21635  015A78  006F FF8C  F035    	movff	plusw1,btemp
 21636  015A7E  0EFD               	movlw	-3
 21637  015A80  006F FF8C  F036    	movff	plusw1,btemp+1
 21638  015A86                     l2731:
 21639                           
 21640                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 21641  015A86  0EF5               	movlw	245
 21642  015A88  26E1               	addwf	fsr1l,f,c
 21643  015A8A  0EFF               	movlw	255
 21644  015A8C  22E2               	addwfc	fsr1h,f,c
 21645  015A8E  0012               	return		;funcret
 21646  015A90                     __end_of_atoi:
 21647                           	opt callstack 0
 21648                           
 21649 ;; *************** function _isspace *****************
 21650 ;; Defined at:
 21651 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 21652 ;; Parameters:    Size  Location     Type
 21653 ;;  c               2  [STACK] int 
 21654 ;; Auto vars:     Size  Location     Type
 21655 ;;		None
 21656 ;; Return value:  Size  Location     Type
 21657 ;;                  2  [STACK] int 
 21658 ;; Registers used:
 21659 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21660 ;; Tracked objects:
 21661 ;;		On entry : 0/0
 21662 ;;		On exit  : 0/0
 21663 ;;		Unchanged: 0/0
 21664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21669 ;;Total ram usage:        0 bytes
 21670 ;; Hardware stack levels used:    1
 21671 ;; Hardware stack levels required when called:    6
 21672 ;; This function calls:
 21673 ;;		Nothing
 21674 ;; This function is called by:
 21675 ;;		_atoi
 21676 ;; This function uses a reentrant model
 21677 ;;
 21678                           
 21679                           	psect	text73
 21680  0183C2                     __ptext73:
 21681                           	opt callstack 0
 21682  0183C2                     _isspace:
 21683                           	opt callstack 0
 21684                           
 21685                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21686  0183C2  52E6               	movf	postinc1,f,c
 21687                           
 21688                           ;stkvar	_isspace$4801 @ sp[(-1)+0]
 21689                           
 21690                           ;incstack = 0
 21691  0183C4  0EFF               	movlw	-1
 21692  0183C6  6AE3               	clrf	plusw1,c
 21693  0183C8  2AE3               	incf	plusw1,f,c
 21694                           
 21695                           ;stkvar	_c @ sp[(-1)+-2]
 21696  0183CA  0EFD               	movlw	-3
 21697  0183CC  006F FF8C  F035    	movff	plusw1,btemp
 21698  0183D2  0E20               	movlw	32
 21699  0183D4  1835               	xorwf	btemp^0,w,c
 21700  0183D6  E104               	bnz	u6590
 21701  0183D8  0EFE               	movlw	-2
 21702  0183DA  50E3               	movf	plusw1,w,c
 21703  0183DC  B4D8               	btfsc	status,2,c
 21704  0183DE  D012               	goto	l7118
 21705  0183E0                     u6590:
 21706                           
 21707                           ;stkvar	_c @ sp[(-1)+-2]
 21708  0183E0  0EFD               	movlw	-3
 21709  0183E2  50E3               	movf	plusw1,w,c
 21710  0183E4  0FF7               	addlw	247
 21711  0183E6  6E3F               	movwf	(btemp+10)^0,c
 21712  0183E8  0EFE               	movlw	-2
 21713  0183EA  006F FF8C  F040    	movff	plusw1,btemp+11
 21714  0183F0  0EFF               	movlw	255
 21715  0183F2  2240               	addwfc	(btemp+11)^0,f,c
 21716  0183F4  5040               	movf	(btemp+11)^0,w,c
 21717  0183F6  E104               	bnz	u6600
 21718  0183F8  0E05               	movlw	5
 21719  0183FA  5C3F               	subwf	(btemp+10)^0,w,c
 21720  0183FC  A0D8               	btfss	status,0,c
 21721  0183FE  D002               	goto	l7118
 21722  018400                     u6600:
 21723                           
 21724                           ;stkvar	_isspace$4801 @ sp[(-1)+0]
 21725  018400  0EFF               	movlw	-1
 21726  018402  6AE3               	clrf	plusw1,c
 21727  018404                     l7118:
 21728                           
 21729                           ;stkvar	_isspace$4801 @ sp[(-1)+0]
 21730  018404  0EFF               	movlw	-1
 21731  018406  50E3               	movf	plusw1,w,c
 21732  018408  6E35               	movwf	btemp^0,c
 21733  01840A  6A36               	clrf	(btemp+1)^0,c
 21734                           
 21735                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21736  01840C  52E5               	movf	postdec1,f,c
 21737  01840E  52E5               	movf	postdec1,f,c
 21738  018410  52E5               	movf	postdec1,f,c
 21739  018412  0012               	return		;funcret
 21740  018414                     __end_of_isspace:
 21741                           	opt callstack 0
 21742                           
 21743 ;; *************** function _isdigit *****************
 21744 ;; Defined at:
 21745 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 21746 ;; Parameters:    Size  Location     Type
 21747 ;;  c               2  [STACK] int 
 21748 ;; Auto vars:     Size  Location     Type
 21749 ;;		None
 21750 ;; Return value:  Size  Location     Type
 21751 ;;                  2  [STACK] int 
 21752 ;; Registers used:
 21753 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21754 ;; Tracked objects:
 21755 ;;		On entry : 0/0
 21756 ;;		On exit  : 0/0
 21757 ;;		Unchanged: 0/0
 21758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21763 ;;Total ram usage:        0 bytes
 21764 ;; Hardware stack levels used:    1
 21765 ;; Hardware stack levels required when called:    6
 21766 ;; This function calls:
 21767 ;;		Nothing
 21768 ;; This function is called by:
 21769 ;;		_vfpfcnvrt
 21770 ;;		_atoi
 21771 ;; This function uses a reentrant model
 21772 ;;
 21773                           
 21774                           	psect	text74
 21775  0188A4                     __ptext74:
 21776                           	opt callstack 0
 21777  0188A4                     _isdigit:
 21778                           	opt callstack 18
 21779                           
 21780                           ;stkvar	_c @ sp[(0)+-2]
 21781                           
 21782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21783                           ;incstack = 0
 21784  0188A4  0EFE               	movlw	-2
 21785  0188A6  50E3               	movf	plusw1,w,c
 21786  0188A8  0FD0               	addlw	208
 21787  0188AA  6E3F               	movwf	(btemp+10)^0,c
 21788  0188AC  0EFF               	movlw	-1
 21789  0188AE  006F FF8C  F040    	movff	plusw1,btemp+11
 21790  0188B4  0EFF               	movlw	255
 21791  0188B6  2240               	addwfc	(btemp+11)^0,f,c
 21792  0188B8  5040               	movf	(btemp+11)^0,w,c
 21793  0188BA  E106               	bnz	u5440
 21794  0188BC  0E0A               	movlw	10
 21795  0188BE  5C3F               	subwf	(btemp+10)^0,w,c
 21796  0188C0  B0D8               	btfsc	status,0,c
 21797  0188C2  D002               	goto	u5440
 21798  0188C4  0E01               	movlw	1
 21799  0188C6  D001               	goto	u5450
 21800  0188C8                     u5440:
 21801  0188C8  0E00               	movlw	0
 21802  0188CA                     u5450:
 21803  0188CA  6E35               	movwf	btemp^0,c
 21804  0188CC  6A36               	clrf	(btemp+1)^0,c
 21805                           
 21806                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21807  0188CE  52E5               	movf	postdec1,f,c
 21808  0188D0  52E5               	movf	postdec1,f,c
 21809  0188D2  0012               	return		;funcret
 21810  0188D4                     __end_of_isdigit:
 21811                           	opt callstack 0
 21812                           
 21813 ;; *************** function _set_vterm *****************
 21814 ;; Defined at:
 21815 ;;		line 104 in file "mconfig.c"
 21816 ;; Parameters:    Size  Location     Type
 21817 ;;  vterm           1  [STACK] unsigned char 
 21818 ;; Auto vars:     Size  Location     Type
 21819 ;;		None
 21820 ;; Return value:  Size  Location     Type
 21821 ;;                  1  [STACK] unsigned char 
 21822 ;; Registers used:
 21823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 21824 ;; Tracked objects:
 21825 ;;		On entry : 0/0
 21826 ;;		On exit  : 3F/4
 21827 ;;		Unchanged: 0/0
 21828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21833 ;;Total ram usage:        0 bytes
 21834 ;; Hardware stack levels used:    1
 21835 ;; Hardware stack levels required when called:    6
 21836 ;; This function calls:
 21837 ;;		Nothing
 21838 ;; This function is called by:
 21839 ;;		_main
 21840 ;;		_check_help
 21841 ;; This function uses a reentrant model
 21842 ;;
 21843                           
 21844                           	psect	text75
 21845  018DD0                     __ptext75:
 21846                           	opt callstack 0
 21847  018DD0                     _set_vterm:
 21848                           	opt callstack 24
 21849                           
 21850                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
 21851                           ;stkvar	_vterm @ sp[(0)+-1]
 21852                           
 21853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21854                           ;incstack = 0
 21855  018DD0  0EFF               	movlw	-1
 21856  018DD2  006F FF8C  F040    	movff	plusw1,btemp+11
 21857  018DD8  0E03               	movlw	3
 21858  018DDA  1640               	andwf	(btemp+11)^0,f,c
 21859  018DDC  0104               	movlb	4	; () banked
 21860  018DDE  51D8               	movf	(_D+216)& (0+255),w,b
 21861  018DE0  1840               	xorwf	(btemp+11)^0,w,c
 21862  018DE2  0BFE               	andlw	-2
 21863  018DE4  1840               	xorwf	(btemp+11)^0,w,c
 21864  018DE6  6FD8               	movwf	(_D+216)& (0+255),b
 21865                           
 21866                           ; BSR set to: 4
 21867                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21868  018DE8  52E5               	movf	postdec1,f,c
 21869  018DEA  0012               	return		;funcret
 21870  018DEC                     __end_of_set_vterm:
 21871                           	opt callstack 0
 21872                           
 21873 ;; *************** function _set_temp_display_help *****************
 21874 ;; Defined at:
 21875 ;;		line 208 in file "mconfig.c"
 21876 ;; Parameters:    Size  Location     Type
 21877 ;;  new_response    1  [STACK] const enum E16501
 21878 ;; Auto vars:     Size  Location     Type
 21879 ;;		None
 21880 ;; Return value:  Size  Location     Type
 21881 ;;                  1  [STACK] enum E16501
 21882 ;; Registers used:
 21883 ;;		wreg, fsr1l, fsr1h
 21884 ;; Tracked objects:
 21885 ;;		On entry : 0/4
 21886 ;;		On exit  : 3F/1
 21887 ;;		Unchanged: 0/0
 21888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21893 ;;Total ram usage:        0 bytes
 21894 ;; Hardware stack levels used:    1
 21895 ;; Hardware stack levels required when called:    6
 21896 ;; This function calls:
 21897 ;;		Nothing
 21898 ;; This function is called by:
 21899 ;;		_check_help
 21900 ;; This function uses a reentrant model
 21901 ;;
 21902                           
 21903                           	psect	text76
 21904  018EBA                     __ptext76:
 21905                           	opt callstack 0
 21906  018EBA                     _set_temp_display_help:
 21907                           	opt callstack 23
 21908                           
 21909                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 21910                           
 21911                           ; BSR set to: 4
 21912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21913                           ;incstack = 0
 21914  018EBA  0101               	movlb	1	; () banked
 21915  018EBC  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 21916                           
 21917                           ; BSR set to: 1
 21918                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 21919                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21920  018EBE  0EFF               	movlw	-1
 21921  018EC0  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 21922                           
 21923                           ; BSR set to: 1
 21924                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 21925  018EC6  52E5               	movf	postdec1,f,c
 21926  018EC8  0012               	return		;funcret
 21927  018ECA                     __end_of_set_temp_display_help:
 21928                           	opt callstack 0
 21929                           
 21930 ;; *************** function _set_display_info *****************
 21931 ;; Defined at:
 21932 ;;		line 197 in file "mconfig.c"
 21933 ;; Parameters:    Size  Location     Type
 21934 ;;  new_response    1  [STACK] const enum E16501
 21935 ;; Auto vars:     Size  Location     Type
 21936 ;;		None
 21937 ;; Return value:  Size  Location     Type
 21938 ;;                  1  [STACK] enum E16986
 21939 ;; Registers used:
 21940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21941 ;; Tracked objects:
 21942 ;;		On entry : 0/4
 21943 ;;		On exit  : 0/0
 21944 ;;		Unchanged: 0/0
 21945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21950 ;;Total ram usage:        0 bytes
 21951 ;; Hardware stack levels used:    1
 21952 ;; Hardware stack levels required when called:    7
 21953 ;; This function calls:
 21954 ;;		_TimerDone
 21955 ;; This function is called by:
 21956 ;;		_main
 21957 ;;		_check_help
 21958 ;; This function uses a reentrant model
 21959 ;;
 21960                           
 21961                           	psect	text77
 21962  018D3C                     __ptext77:
 21963                           	opt callstack 0
 21964  018D3C                     _set_display_info:
 21965                           	opt callstack 23
 21966                           
 21967                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 21968                           
 21969                           ; BSR set to: 1
 21970                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21971                           ;incstack = 0
 21972  018D3C  0E07               	movlw	7
 21973  018D3E  6EE6               	movwf	postinc1,c
 21974  018D40  EC29  F0C6         	call	_TimerDone	;wreg free
 21975  018D44  5035               	movf	btemp^0,w,c
 21976  018D46  B4D8               	btfsc	status,2,c
 21977  018D48  D006               	goto	l1602
 21978                           
 21979                           ;mconfig.c: 202:   old_info = V.response.info;
 21980  018D4A  0101               	movlb	1	; () banked
 21981  018D4C  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 21982                           
 21983                           ; BSR set to: 1
 21984                           ;mconfig.c: 203:   V.response.info = new_response_info;
 21985                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21986  018D4E  0EFF               	movlw	-1
 21987  018D50  006F FF8C  F1A3    	movff	plusw1,_V+163	;volatile
 21988  018D56                     l1602:
 21989                           
 21990                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 21991  018D56  52E5               	movf	postdec1,f,c
 21992  018D58  0012               	return		;funcret
 21993  018D5A                     __end_of_set_display_info:
 21994                           	opt callstack 0
 21995                           
 21996 ;; *************** function _mode_lamp_dim *****************
 21997 ;; Defined at:
 21998 ;;		line 13 in file "mconfig.c"
 21999 ;; Parameters:    Size  Location     Type
 22000 ;;  level           2  [STACK] const unsigned short 
 22001 ;; Auto vars:     Size  Location     Type
 22002 ;;		None
 22003 ;; Return value:  Size  Location     Type
 22004 ;;                  1  [STACK] void 
 22005 ;; Registers used:
 22006 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22007 ;; Tracked objects:
 22008 ;;		On entry : 0/1
 22009 ;;		On exit  : 0/0
 22010 ;;		Unchanged: 0/0
 22011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22016 ;;Total ram usage:        0 bytes
 22017 ;; Hardware stack levels used:    1
 22018 ;; Hardware stack levels required when called:    7
 22019 ;; This function calls:
 22020 ;;		_PWM8_LoadDutyValue
 22021 ;; This function is called by:
 22022 ;;		_main
 22023 ;;		_check_help
 22024 ;; This function uses a reentrant model
 22025 ;;
 22026                           
 22027                           	psect	text78
 22028  018E22                     __ptext78:
 22029                           	opt callstack 0
 22030  018E22                     _mode_lamp_dim:
 22031                           	opt callstack 23
 22032                           
 22033                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22034                           ;stkvar	_level @ sp[(0)+-2]
 22035                           
 22036                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22037                           ;incstack = 0
 22038  018E22  0EFE               	movlw	-2
 22039  018E24  006F FF8F FFE6     	movff	plusw1,postinc1
 22040  018E2A  006F FF8F FFE6     	movff	plusw1,postinc1
 22041  018E30  EC21  F0C3         	call	_PWM8_LoadDutyValue	;wreg free
 22042                           
 22043                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22044  018E34  52E5               	movf	postdec1,f,c
 22045  018E36  52E5               	movf	postdec1,f,c
 22046  018E38  0012               	return		;funcret
 22047  018E3A                     __end_of_mode_lamp_dim:
 22048                           	opt callstack 0
 22049                           
 22050 ;; *************** function _mode_lamp_bright *****************
 22051 ;; Defined at:
 22052 ;;		line 18 in file "mconfig.c"
 22053 ;; Parameters:    Size  Location     Type
 22054 ;;		None
 22055 ;; Auto vars:     Size  Location     Type
 22056 ;;		None
 22057 ;; Return value:  Size  Location     Type
 22058 ;;                  1  [STACK] void 
 22059 ;; Registers used:
 22060 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22061 ;; Tracked objects:
 22062 ;;		On entry : 0/1
 22063 ;;		On exit  : 0/0
 22064 ;;		Unchanged: 0/0
 22065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22070 ;;Total ram usage:        0 bytes
 22071 ;; Hardware stack levels used:    1
 22072 ;; Hardware stack levels required when called:    7
 22073 ;; This function calls:
 22074 ;;		_PWM8_LoadDutyValue
 22075 ;; This function is called by:
 22076 ;;		_check_help
 22077 ;; This function uses a reentrant model
 22078 ;;
 22079                           
 22080                           	psect	text79
 22081  018ED8                     __ptext79:
 22082                           	opt callstack 0
 22083  018ED8                     _mode_lamp_bright:
 22084                           	opt callstack 22
 22085                           
 22086                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22087                           
 22088                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22089                           ;incstack = 0
 22090  018ED8  0E2C               	movlw	44
 22091  018EDA  6EE6               	movwf	postinc1,c
 22092  018EDC  0E01               	movlw	1
 22093  018EDE  6EE6               	movwf	postinc1,c
 22094  018EE0  EC21  F0C3         	call	_PWM8_LoadDutyValue	;wreg free
 22095                           
 22096                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22097  018EE4  0012               	return		;funcret
 22098  018EE6                     __end_of_mode_lamp_bright:
 22099                           	opt callstack 0
 22100                           
 22101 ;; *************** function _PWM8_LoadDutyValue *****************
 22102 ;; Defined at:
 22103 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22104 ;; Parameters:    Size  Location     Type
 22105 ;;  dutyValue       2  [STACK] unsigned short 
 22106 ;; Auto vars:     Size  Location     Type
 22107 ;;		None
 22108 ;; Return value:  Size  Location     Type
 22109 ;;                  1  [STACK] void 
 22110 ;; Registers used:
 22111 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22112 ;; Tracked objects:
 22113 ;;		On entry : 0/1
 22114 ;;		On exit  : 0/0
 22115 ;;		Unchanged: 0/0
 22116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22121 ;;Total ram usage:        0 bytes
 22122 ;; Hardware stack levels used:    1
 22123 ;; Hardware stack levels required when called:    6
 22124 ;; This function calls:
 22125 ;;		Nothing
 22126 ;; This function is called by:
 22127 ;;		_mode_lamp_dim
 22128 ;;		_mode_lamp_bright
 22129 ;; This function uses a reentrant model
 22130 ;;
 22131                           
 22132                           	psect	text80
 22133  018642                     __ptext80:
 22134                           	opt callstack 0
 22135  018642                     _PWM8_LoadDutyValue:
 22136                           	opt callstack 23
 22137                           
 22138                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22139                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22140                           
 22141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22142                           ;incstack = 0
 22143  018642  0EFE               	movlw	-2
 22144  018644  006F FF8C  F03F    	movff	plusw1,btemp+10
 22145  01864A  0EFF               	movlw	-1
 22146  01864C  006F FF8C  F040    	movff	plusw1,btemp+11
 22147  018652  90D8               	bcf	status,0,c
 22148  018654  3240               	rrcf	(btemp+11)^0,f,c
 22149  018656  323F               	rrcf	(btemp+10)^0,f,c
 22150  018658  90D8               	bcf	status,0,c
 22151  01865A  3240               	rrcf	(btemp+11)^0,f,c
 22152  01865C  323F               	rrcf	(btemp+10)^0,f,c
 22153  01865E  503F               	movf	(btemp+10)^0,w,c
 22154  018660  6E61               	movwf	97,c	;volatile
 22155                           
 22156                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22157                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22158  018662  0EFE               	movlw	-2
 22159  018664  006F FF8C  F040    	movff	plusw1,btemp+11
 22160  01866A  0E03               	movlw	3
 22161  01866C  1640               	andwf	(btemp+11)^0,f,c
 22162  01866E  0E06               	movlw	6
 22163  018670  6E35               	movwf	btemp^0,c
 22164  018672                     u8245:
 22165  018672  90D8               	bcf	status,0,c
 22166  018674  3640               	rlcf	(btemp+11)^0,f,c
 22167  018676  2E35               	decfsz	btemp^0,f,c
 22168  018678  D7FC               	goto	u8245
 22169  01867A  5040               	movf	(btemp+11)^0,w,c
 22170  01867C  6E60               	movwf	96,c	;volatile
 22171                           
 22172                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22173  01867E  52E5               	movf	postdec1,f,c
 22174  018680  52E5               	movf	postdec1,f,c
 22175  018682  0012               	return		;funcret
 22176  018684                     __end_of_PWM8_LoadDutyValue:
 22177                           	opt callstack 0
 22178                           
 22179 ;; *************** function _help_button *****************
 22180 ;; Defined at:
 22181 ;;		line 26 in file "mconfig.c"
 22182 ;; Parameters:    Size  Location     Type
 22183 ;;		None
 22184 ;; Auto vars:     Size  Location     Type
 22185 ;;		None
 22186 ;; Return value:  Size  Location     Type
 22187 ;;                  1  [STACK] _Bool 
 22188 ;; Registers used:
 22189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22190 ;; Tracked objects:
 22191 ;;		On entry : 0/1
 22192 ;;		On exit  : 0/0
 22193 ;;		Unchanged: 0/0
 22194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22199 ;;Total ram usage:        0 bytes
 22200 ;; Hardware stack levels used:    1
 22201 ;; Hardware stack levels required when called:    7
 22202 ;; This function calls:
 22203 ;;		_StartTimer
 22204 ;;		_TimerDone
 22205 ;; This function is called by:
 22206 ;;		_check_help
 22207 ;; This function uses a reentrant model
 22208 ;;
 22209                           
 22210                           	psect	text81
 22211  018700                     __ptext81:
 22212                           	opt callstack 0
 22213  018700                     _help_button:
 22214                           	opt callstack 22
 22215                           
 22216                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22217                           
 22218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22219                           ;incstack = 0
 22220  018700  B0CB               	btfsc	203,0,c	;volatile
 22221  018702  D00C               	goto	l1545
 22222                           
 22223                           ;mconfig.c: 29:   V.help = 1;
 22224  018704  0101               	movlb	1	; () banked
 22225  018706  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22226                           
 22227                           ; BSR set to: 1
 22228                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22229  018708  0E08               	movlw	8
 22230  01870A  6EE6               	movwf	postinc1,c
 22231  01870C  EC29  F0C6         	call	_TimerDone	;wreg free
 22232  018710  5035               	movf	btemp^0,w,c
 22233  018712  B4D8               	btfsc	status,2,c
 22234  018714  D003               	goto	l1545
 22235                           
 22236                           ;mconfig.c: 31:    return 1;
 22237  018716  0E01               	movlw	1
 22238  018718  6E35               	movwf	btemp^0,c
 22239  01871A  0012               	return	
 22240  01871C                     l1545:
 22241                           
 22242                           ;mconfig.c: 34:  if (!V.help)
 22243  01871C  0101               	movlb	1	; () banked
 22244  01871E  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22245  018720  D008               	goto	l8646
 22246                           
 22247                           ; BSR set to: 1
 22248                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22249  018722  0E2C               	movlw	44
 22250  018724  6EE6               	movwf	postinc1,c
 22251  018726  0E01               	movlw	1
 22252  018728  6EE6               	movwf	postinc1,c
 22253  01872A  0E08               	movlw	8
 22254  01872C  6EE6               	movwf	postinc1,c
 22255  01872E  EC62  F0C3         	call	_StartTimer	;wreg free
 22256  018732                     l8646:
 22257                           
 22258                           ;mconfig.c: 37:  return 0;
 22259  018732  0E00               	movlw	0
 22260  018734  6E35               	movwf	btemp^0,c
 22261                           
 22262                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22263  018736  0012               	return		;funcret
 22264  018738                     __end_of_help_button:
 22265                           	opt callstack 0
 22266                           
 22267 ;; *************** function _TimerDone *****************
 22268 ;; Defined at:
 22269 ;;		line 20 in file "timers.c"
 22270 ;; Parameters:    Size  Location     Type
 22271 ;;  timer           1  [STACK] const unsigned char 
 22272 ;; Auto vars:     Size  Location     Type
 22273 ;;		None
 22274 ;; Return value:  Size  Location     Type
 22275 ;;                  1  [STACK] _Bool 
 22276 ;; Registers used:
 22277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22278 ;; Tracked objects:
 22279 ;;		On entry : 0/4
 22280 ;;		On exit  : 0/0
 22281 ;;		Unchanged: 0/0
 22282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22287 ;;Total ram usage:        0 bytes
 22288 ;; Hardware stack levels used:    1
 22289 ;; Hardware stack levels required when called:    6
 22290 ;; This function calls:
 22291 ;;		Nothing
 22292 ;; This function is called by:
 22293 ;;		_main
 22294 ;;		_WaitMs
 22295 ;;		_help_button
 22296 ;;		_check_help
 22297 ;;		_set_display_info
 22298 ;; This function uses a reentrant model
 22299 ;;
 22300                           
 22301                           	psect	text82
 22302  018C52                     __ptext82:
 22303                           	opt callstack 0
 22304  018C52                     _TimerDone:
 22305                           	opt callstack 23
 22306                           
 22307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22308                           ;incstack = 0
 22309  018C52  0004               	clrwdt		;# 
 22310                           
 22311                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22312                           ;stkvar	_timer @ sp[(0)+-1]
 22313  018C54  0EFF               	movlw	-1
 22314  018C56  50E3               	movf	plusw1,w,c
 22315  018C58  0D02               	mullw	2
 22316  018C5A  50F3               	movf	243,w,c
 22317  018C5C  0F60               	addlw	low _tickCount
 22318  018C5E  6ED9               	movwf	fsr2l,c
 22319  018C60  6ADA               	clrf	fsr2h,c
 22320  018C62  50DE               	movf	postinc2,w,c
 22321  018C64  10DE               	iorwf	postinc2,w,c
 22322  018C66  A4D8               	btfss	status,2,c
 22323  018C68  D002               	goto	l8040
 22324                           
 22325                           ;timers.c: 24:   return 1;
 22326  018C6A  0E01               	movlw	1
 22327  018C6C  D001               	goto	L22
 22328  018C6E                     l8040:
 22329                           
 22330                           ;timers.c: 26:  return 0;
 22331  018C6E  0E00               	movlw	0
 22332  018C70                     L22:
 22333  018C70  6E35               	movwf	btemp^0,c
 22334                           
 22335                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22336  018C72  52E5               	movf	postdec1,f,c
 22337  018C74  0012               	return		;funcret
 22338  018C76                     __end_of_TimerDone:
 22339                           	opt callstack 0
 22340                           
 22341 ;; *************** function _StartTimer *****************
 22342 ;; Defined at:
 22343 ;;		line 12 in file "timers.c"
 22344 ;; Parameters:    Size  Location     Type
 22345 ;;  timer           1  [STACK] const unsigned char 
 22346 ;;  count           2  [STACK] const unsigned short 
 22347 ;; Auto vars:     Size  Location     Type
 22348 ;;		None
 22349 ;; Return value:  Size  Location     Type
 22350 ;;                  1  [STACK] void 
 22351 ;; Registers used:
 22352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22353 ;; Tracked objects:
 22354 ;;		On entry : 0/4
 22355 ;;		On exit  : 0/0
 22356 ;;		Unchanged: 0/0
 22357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22362 ;;Total ram usage:        0 bytes
 22363 ;; Hardware stack levels used:    1
 22364 ;; Hardware stack levels required when called:    6
 22365 ;; This function calls:
 22366 ;;		Nothing
 22367 ;; This function is called by:
 22368 ;;		_main
 22369 ;;		_WaitMs
 22370 ;;		_help_button
 22371 ;;		_check_help
 22372 ;; This function uses a reentrant model
 22373 ;;
 22374                           
 22375                           	psect	text83
 22376  0186C4                     __ptext83:
 22377                           	opt callstack 0
 22378  0186C4                     _StartTimer:
 22379                           	opt callstack 21
 22380                           
 22381                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 22382                           ;stkvar	_count @ sp[(0)+-3]
 22383                           
 22384                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22385                           ;incstack = 0
 22386  0186C4  0EFD               	movlw	-3
 22387  0186C6  006F FF8C  F03F    	movff	plusw1,btemp+10
 22388  0186CC  0EFE               	movlw	-2
 22389  0186CE  006F FF8C  F040    	movff	plusw1,btemp+11
 22390  0186D4  90D8               	bcf	status,0,c
 22391  0186D6  343F               	rlcf	(btemp+10)^0,w,c
 22392  0186D8  6E3D               	movwf	(btemp+8)^0,c
 22393  0186DA  3440               	rlcf	(btemp+11)^0,w,c
 22394  0186DC  6E3E               	movwf	(btemp+9)^0,c
 22395                           
 22396                           ;stkvar	_timer @ sp[(0)+-1]
 22397  0186DE  0EFF               	movlw	-1
 22398  0186E0  50E3               	movf	plusw1,w,c
 22399  0186E2  0D02               	mullw	2
 22400  0186E4  50F3               	movf	243,w,c
 22401  0186E6  0F60               	addlw	low _tickCount
 22402  0186E8  6ED9               	movwf	fsr2l,c
 22403  0186EA  6ADA               	clrf	fsr2h,c
 22404  0186EC  0060  F0F7  FFDE   	movff	btemp+8,postinc2
 22405  0186F2  0060  F0FB  FFDD   	movff	btemp+9,postdec2
 22406                           
 22407                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22408  0186F8  52E5               	movf	postdec1,f,c
 22409  0186FA  52E5               	movf	postdec1,f,c
 22410  0186FC  52E5               	movf	postdec1,f,c
 22411  0186FE  0012               	return		;funcret
 22412  018700                     __end_of_StartTimer:
 22413                           	opt callstack 0
 22414                           
 22415 ;; *************** function _display_info *****************
 22416 ;; Defined at:
 22417 ;;		line 187 in file "mconfig.c"
 22418 ;; Parameters:    Size  Location     Type
 22419 ;;		None
 22420 ;; Auto vars:     Size  Location     Type
 22421 ;;		None
 22422 ;; Return value:  Size  Location     Type
 22423 ;;                  1  [STACK] enum E16501
 22424 ;; Registers used:
 22425 ;;		btemp
 22426 ;; Tracked objects:
 22427 ;;		On entry : 0/1
 22428 ;;		On exit  : 0/0
 22429 ;;		Unchanged: 0/0
 22430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22435 ;;Total ram usage:        0 bytes
 22436 ;; Hardware stack levels used:    1
 22437 ;; Hardware stack levels required when called:    6
 22438 ;; This function calls:
 22439 ;;		Nothing
 22440 ;; This function is called by:
 22441 ;;		_check_help
 22442 ;; This function uses a reentrant model
 22443 ;;
 22444                           
 22445                           	psect	text84
 22446  018F4A                     __ptext84:
 22447                           	opt callstack 0
 22448  018F4A                     _display_info:
 22449                           	opt callstack 23
 22450                           
 22451                           ;mconfig.c: 189:  return V.response.info;
 22452                           
 22453                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22454                           ;incstack = 0
 22455  018F4A  0060  F68C  F035   	movff	_V+163,btemp	;volatile
 22456                           
 22457                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22458  018F50  0012               	return		;funcret
 22459  018F52                     __end_of_display_info:
 22460                           	opt callstack 0
 22461                           
 22462 ;; *************** function _display_help *****************
 22463 ;; Defined at:
 22464 ;;		line 192 in file "mconfig.c"
 22465 ;; Parameters:    Size  Location     Type
 22466 ;;		None
 22467 ;; Auto vars:     Size  Location     Type
 22468 ;;		None
 22469 ;; Return value:  Size  Location     Type
 22470 ;;                  1  [STACK] enum E16501
 22471 ;; Registers used:
 22472 ;;		btemp
 22473 ;; Tracked objects:
 22474 ;;		On entry : 3F/1
 22475 ;;		On exit  : 0/0
 22476 ;;		Unchanged: 0/0
 22477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22482 ;;Total ram usage:        0 bytes
 22483 ;; Hardware stack levels used:    1
 22484 ;; Hardware stack levels required when called:    6
 22485 ;; This function calls:
 22486 ;;		Nothing
 22487 ;; This function is called by:
 22488 ;;		_check_help
 22489 ;; This function uses a reentrant model
 22490 ;;
 22491                           
 22492                           	psect	text85
 22493  018F52                     __ptext85:
 22494                           	opt callstack 0
 22495  018F52                     _display_help:
 22496                           	opt callstack 23
 22497                           
 22498                           ;mconfig.c: 194:  return V.response.help_temp;
 22499                           
 22500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22501                           ;incstack = 0
 22502  018F52  0060  F690  F035   	movff	_V+164,btemp	;volatile
 22503                           
 22504                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22505  018F58  0012               	return		;funcret
 22506  018F5A                     __end_of_display_help:
 22507                           	opt callstack 0
 22508                           
 22509 ;; *************** function _check_adc_scan *****************
 22510 ;; Defined at:
 22511 ;;		line 56 in file "daq.c"
 22512 ;; Parameters:    Size  Location     Type
 22513 ;;		None
 22514 ;; Auto vars:     Size  Location     Type
 22515 ;;		None
 22516 ;; Return value:  Size  Location     Type
 22517 ;;                  1  [STACK] _Bool 
 22518 ;; Registers used:
 22519 ;;		btemp
 22520 ;; Tracked objects:
 22521 ;;		On entry : 0/4
 22522 ;;		On exit  : 0/0
 22523 ;;		Unchanged: 0/0
 22524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22529 ;;Total ram usage:        0 bytes
 22530 ;; Hardware stack levels used:    1
 22531 ;; Hardware stack levels required when called:    6
 22532 ;; This function calls:
 22533 ;;		Nothing
 22534 ;; This function is called by:
 22535 ;;		_main
 22536 ;; This function uses a reentrant model
 22537 ;;
 22538                           
 22539                           	psect	text86
 22540  018F5A                     __ptext86:
 22541                           	opt callstack 0
 22542  018F5A                     _check_adc_scan:
 22543                           	opt callstack 24
 22544                           
 22545                           ;daq.c: 58:  return R.done;
 22546                           
 22547                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22548                           ;incstack = 0
 22549  018F5A  0060  F338  F035   	movff	_R+43,btemp	;volatile
 22550                           
 22551                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22552  018F60  0012               	return		;funcret
 22553  018F62                     __end_of_check_adc_scan:
 22554                           	opt callstack 0
 22555                           
 22556 ;; *************** function _SYSTEM_Initialize *****************
 22557 ;; Defined at:
 22558 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22559 ;; Parameters:    Size  Location     Type
 22560 ;;		None
 22561 ;; Auto vars:     Size  Location     Type
 22562 ;;		None
 22563 ;; Return value:  Size  Location     Type
 22564 ;;                  1  [STACK] void 
 22565 ;; Registers used:
 22566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 22567 ;; Tracked objects:
 22568 ;;		On entry : 0/0
 22569 ;;		On exit  : 3F/3C
 22570 ;;		Unchanged: 0/0
 22571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22576 ;;Total ram usage:        0 bytes
 22577 ;; Hardware stack levels used:    1
 22578 ;; Hardware stack levels required when called:    8
 22579 ;; This function calls:
 22580 ;;		_ADCC_Initialize
 22581 ;;		_CLKREF_Initialize
 22582 ;;		_DMA1_Initialize
 22583 ;;		_DMA2_Initialize
 22584 ;;		_EXT_INT_Initialize
 22585 ;;		_FVR_Initialize
 22586 ;;		_INTERRUPT_Initialize
 22587 ;;		_OSCILLATOR_Initialize
 22588 ;;		_PIN_MANAGER_Initialize
 22589 ;;		_PMD_Initialize
 22590 ;;		_PWM8_Initialize
 22591 ;;		_SPI1_Initialize
 22592 ;;		_TMR2_Initialize
 22593 ;;		_TMR5_Initialize
 22594 ;;		_TMR6_Initialize
 22595 ;;		_UART1_Initialize
 22596 ;;		_UART2_Initialize
 22597 ;; This function is called by:
 22598 ;;		_main
 22599 ;; This function uses a reentrant model
 22600 ;;
 22601                           
 22602                           	psect	text87
 22603  0184E8                     __ptext87:
 22604                           	opt callstack 0
 22605  0184E8                     _SYSTEM_Initialize:
 22606                           	opt callstack 22
 22607                           
 22608                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 22609                           
 22610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22611                           ;incstack = 0
 22612  0184E8  EC3A  F0C0         	call	_INTERRUPT_Initialize	;wreg free
 22613                           
 22614                           ; BSR set to: 57
 22615                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 22616  0184EC  EC4A  F0C7         	call	_PMD_Initialize	;wreg free
 22617                           
 22618                           ; BSR set to: 57
 22619                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 22620  0184F0  EC1B  F0BE         	call	_PIN_MANAGER_Initialize	;wreg free
 22621                           
 22622                           ; BSR set to: 58
 22623                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 22624  0184F4  EC3F  F0C7         	call	_OSCILLATOR_Initialize	;wreg free
 22625                           
 22626                           ; BSR set to: 57
 22627                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 22628  0184F8  ECB1  F0C7         	call	_FVR_Initialize	;wreg free
 22629                           
 22630                           ; BSR set to: 62
 22631                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 22632  0184FC  EC9D  F0BF         	call	_ADCC_Initialize	;wreg free
 22633                           
 22634                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 22635  018500  EC34  F0C7         	call	_PWM8_Initialize	;wreg free
 22636                           
 22637                           ; BSR set to: 63
 22638                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 22639  018504  EC1D  F0C7         	call	_TMR2_Initialize	;wreg free
 22640                           
 22641                           ; BSR set to: 57
 22642                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 22643  018508  EC08  F0C4         	call	_EXT_INT_Initialize	;wreg free
 22644                           
 22645                           ; BSR set to: 57
 22646                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 22647  01850C  ECAD  F0C4         	call	_TMR6_Initialize	;wreg free
 22648                           
 22649                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 22650  018510  EC97  F0C2         	call	_TMR5_Initialize	;wreg free
 22651                           
 22652                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 22653  018514  EC6D  F0C0         	call	_UART1_Initialize	;wreg free
 22654                           
 22655                           ; BSR set to: 57
 22656                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 22657  018518  EC01  F0C1         	call	_UART2_Initialize	;wreg free
 22658                           
 22659                           ; BSR set to: 57
 22660                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 22661  01851C  EC29  F0C7         	call	_SPI1_Initialize	;wreg free
 22662                           
 22663                           ; BSR set to: 61
 22664                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 22665  018520  EC8B  F0C1         	call	_DMA2_Initialize	;wreg free
 22666                           
 22667                           ; BSR set to: 59
 22668                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 22669  018524  EC68  F0BF         	call	_DMA1_Initialize	;wreg free
 22670                           
 22671                           ; BSR set to: 59
 22672                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 22673  018528  EC8B  F0C7         	call	_CLKREF_Initialize	;wreg free
 22674                           
 22675                           ; BSR set to: 60
 22676                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22677  01852C  0012               	return		;funcret
 22678  01852E                     __end_of_SYSTEM_Initialize:
 22679                           	opt callstack 0
 22680                           
 22681 ;; *************** function _UART2_Initialize *****************
 22682 ;; Defined at:
 22683 ;;		line 78 in file "mcc_generated_files/uart2.c"
 22684 ;; Parameters:    Size  Location     Type
 22685 ;;		None
 22686 ;; Auto vars:     Size  Location     Type
 22687 ;;		None
 22688 ;; Return value:  Size  Location     Type
 22689 ;;                  1  [STACK] void 
 22690 ;; Registers used:
 22691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22692 ;; Tracked objects:
 22693 ;;		On entry : 3F/39
 22694 ;;		On exit  : 3F/39
 22695 ;;		Unchanged: 0/0
 22696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22701 ;;Total ram usage:        0 bytes
 22702 ;; Hardware stack levels used:    1
 22703 ;; Hardware stack levels required when called:    7
 22704 ;; This function calls:
 22705 ;;		_UART2_SetRxInterruptHandler
 22706 ;;		_UART2_SetTxInterruptHandler
 22707 ;; This function is called by:
 22708 ;;		_SYSTEM_Initialize
 22709 ;; This function uses a reentrant model
 22710 ;;
 22711                           
 22712                           	psect	text88
 22713  018202                     __ptext88:
 22714                           	opt callstack 0
 22715  018202                     _UART2_Initialize:
 22716                           	opt callstack 22
 22717                           
 22718                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 22719                           
 22720                           ; BSR set to: 60
 22721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22722                           ;incstack = 0
 22723  018202  0139               	movlb	57	; () banked
 22724  018204  9596               	bcf	150,2,b	;volatile
 22725                           
 22726                           ; BSR set to: 57
 22727                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 22728  018206  0E96               	movlw	low _UART2_Receive_ISR
 22729  018208  6EE6               	movwf	postinc1,c
 22730  01820A  0E8D               	movlw	high _UART2_Receive_ISR
 22731  01820C  6EE6               	movwf	postinc1,c
 22732  01820E  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 22733  018210  6EE6               	movwf	postinc1,c
 22734  018212  EC12  F0C5         	call	_UART2_SetRxInterruptHandler	;wreg free
 22735                           
 22736                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 22737  018216  0139               	movlb	57	; () banked
 22738  018218  9796               	bcf	150,3,b	;volatile
 22739                           
 22740                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 22741  01821A  0E2E               	movlw	low _UART2_Transmit_ISR
 22742  01821C  6EE6               	movwf	postinc1,c
 22743  01821E  0E89               	movlw	high _UART2_Transmit_ISR
 22744  018220  6EE6               	movwf	postinc1,c
 22745  018222  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 22746  018224  6EE6               	movwf	postinc1,c
 22747  018226  ECFE  F0C4         	call	_UART2_SetTxInterruptHandler	;wreg free
 22748                           
 22749                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 22750  01822A  013D               	movlb	61	; () banked
 22751  01822C  6BD4               	clrf	212,b	;volatile
 22752                           
 22753                           ; BSR set to: 61
 22754                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 22755  01822E  6BD6               	clrf	214,b	;volatile
 22756                           
 22757                           ; BSR set to: 61
 22758                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 22759  018230  6BD8               	clrf	216,b	;volatile
 22760                           
 22761                           ; BSR set to: 61
 22762                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 22763  018232  0EB0               	movlw	176
 22764  018234  6FDA               	movwf	218,b	;volatile
 22765                           
 22766                           ; BSR set to: 61
 22767                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 22768  018236  0E80               	movlw	128
 22769  018238  6FDB               	movwf	219,b	;volatile
 22770                           
 22771                           ; BSR set to: 61
 22772                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 22773  01823A  6BDC               	clrf	220,b	;volatile
 22774                           
 22775                           ; BSR set to: 61
 22776                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 22777  01823C  0E82               	movlw	130
 22778  01823E  6FDD               	movwf	221,b	;volatile
 22779                           
 22780                           ; BSR set to: 61
 22781                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 22782  018240  0E06               	movlw	6
 22783  018242  6FDE               	movwf	222,b	;volatile
 22784                           
 22785                           ; BSR set to: 61
 22786                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 22787  018244  6BDF               	clrf	223,b	;volatile
 22788                           
 22789                           ; BSR set to: 61
 22790                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 22791  018246  6BE0               	clrf	224,b	;volatile
 22792                           
 22793                           ; BSR set to: 61
 22794                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 22795  018248  6BE1               	clrf	225,b	;volatile
 22796                           
 22797                           ; BSR set to: 61
 22798                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 22799  01824A  6BE2               	clrf	226,b	;volatile
 22800                           
 22801                           ; BSR set to: 61
 22802                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 22803  01824C  6A2E               	clrf	_uart2TxHead^0,c	;volatile
 22804                           
 22805                           ; BSR set to: 61
 22806                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 22807  01824E  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 22808                           
 22809                           ; BSR set to: 61
 22810                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 22811  018250  0E40               	movlw	64
 22812  018252  6E2C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 22813                           
 22814                           ; BSR set to: 61
 22815                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 22816  018254  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 22817                           
 22818                           ; BSR set to: 61
 22819                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 22820  018256  6A2A               	clrf	_uart2RxTail^0,c	;volatile
 22821                           
 22822                           ; BSR set to: 61
 22823                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 22824  018258  6A29               	clrf	_uart2RxCount^0,c	;volatile
 22825                           
 22826                           ; BSR set to: 61
 22827                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 22828  01825A  0139               	movlb	57	; () banked
 22829  01825C  8596               	bsf	150,2,b	;volatile
 22830                           
 22831                           ; BSR set to: 57
 22832                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22833  01825E  0012               	return		;funcret
 22834  018260                     __end_of_UART2_Initialize:
 22835                           	opt callstack 0
 22836                           
 22837 ;; *************** function _UART2_SetTxInterruptHandler *****************
 22838 ;; Defined at:
 22839 ;;		line 252 in file "mcc_generated_files/uart2.c"
 22840 ;; Parameters:    Size  Location     Type
 22841 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22842 ;;		 -> UART2_Transmit_ISR(1), 
 22843 ;; Auto vars:     Size  Location     Type
 22844 ;;		None
 22845 ;; Return value:  Size  Location     Type
 22846 ;;                  1  [STACK] void 
 22847 ;; Registers used:
 22848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22849 ;; Tracked objects:
 22850 ;;		On entry : 3F/39
 22851 ;;		On exit  : 0/0
 22852 ;;		Unchanged: 0/0
 22853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22858 ;;Total ram usage:        0 bytes
 22859 ;; Hardware stack levels used:    1
 22860 ;; Hardware stack levels required when called:    6
 22861 ;; This function calls:
 22862 ;;		Nothing
 22863 ;; This function is called by:
 22864 ;;		_UART2_Initialize
 22865 ;; This function uses a reentrant model
 22866 ;;
 22867                           
 22868                           	psect	text89
 22869  0189FC                     __ptext89:
 22870                           	opt callstack 0
 22871  0189FC                     _UART2_SetTxInterruptHandler:
 22872                           	opt callstack 22
 22873                           
 22874                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 22875                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22876                           
 22877                           ; BSR set to: 57
 22878                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22879                           ;incstack = 0
 22880  0189FC  50E1               	movf	fsr1l,w,c
 22881  0189FE  0FFD               	addlw	-3
 22882  018A00  6ED9               	movwf	fsr2l,c
 22883  018A02  50E2               	movf	fsr1h,w,c
 22884  018A04  6EDA               	movwf	fsr2h,c
 22885  018A06  0EFF               	movlw	255
 22886  018A08  22DA               	addwfc	fsr2h,f,c
 22887  018A0A  006F FF78  F010    	movff	postinc2,_UART2_TxInterruptHandler
 22888  018A10  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler+1
 22889  018A16  006F FF74  F012    	movff	postdec2,_UART2_TxInterruptHandler+2
 22890                           
 22891                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22892  018A1C  52E5               	movf	postdec1,f,c
 22893  018A1E  52E5               	movf	postdec1,f,c
 22894  018A20  52E5               	movf	postdec1,f,c
 22895  018A22  0012               	return		;funcret
 22896  018A24                     __end_of_UART2_SetTxInterruptHandler:
 22897                           	opt callstack 0
 22898                           
 22899 ;; *************** function _UART2_SetRxInterruptHandler *****************
 22900 ;; Defined at:
 22901 ;;		line 248 in file "mcc_generated_files/uart2.c"
 22902 ;; Parameters:    Size  Location     Type
 22903 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22904 ;;		 -> UART2_Receive_ISR(1), 
 22905 ;; Auto vars:     Size  Location     Type
 22906 ;;		None
 22907 ;; Return value:  Size  Location     Type
 22908 ;;                  1  [STACK] void 
 22909 ;; Registers used:
 22910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22911 ;; Tracked objects:
 22912 ;;		On entry : 3F/39
 22913 ;;		On exit  : 0/0
 22914 ;;		Unchanged: 0/0
 22915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22920 ;;Total ram usage:        0 bytes
 22921 ;; Hardware stack levels used:    1
 22922 ;; Hardware stack levels required when called:    6
 22923 ;; This function calls:
 22924 ;;		Nothing
 22925 ;; This function is called by:
 22926 ;;		_UART2_Initialize
 22927 ;; This function uses a reentrant model
 22928 ;;
 22929                           
 22930                           	psect	text90
 22931  018A24                     __ptext90:
 22932                           	opt callstack 0
 22933  018A24                     _UART2_SetRxInterruptHandler:
 22934                           	opt callstack 22
 22935                           
 22936                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 22937                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22938                           
 22939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22940                           ;incstack = 0
 22941  018A24  50E1               	movf	fsr1l,w,c
 22942  018A26  0FFD               	addlw	-3
 22943  018A28  6ED9               	movwf	fsr2l,c
 22944  018A2A  50E2               	movf	fsr1h,w,c
 22945  018A2C  6EDA               	movwf	fsr2h,c
 22946  018A2E  0EFF               	movlw	255
 22947  018A30  22DA               	addwfc	fsr2h,f,c
 22948  018A32  006F FF78  F013    	movff	postinc2,_UART2_RxInterruptHandler
 22949  018A38  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler+1
 22950  018A3E  006F FF74  F015    	movff	postdec2,_UART2_RxInterruptHandler+2
 22951                           
 22952                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22953  018A44  52E5               	movf	postdec1,f,c
 22954  018A46  52E5               	movf	postdec1,f,c
 22955  018A48  52E5               	movf	postdec1,f,c
 22956  018A4A  0012               	return		;funcret
 22957  018A4C                     __end_of_UART2_SetRxInterruptHandler:
 22958                           	opt callstack 0
 22959                           
 22960 ;; *************** function _UART1_Initialize *****************
 22961 ;; Defined at:
 22962 ;;		line 79 in file "mcc_generated_files/uart1.c"
 22963 ;; Parameters:    Size  Location     Type
 22964 ;;		None
 22965 ;; Auto vars:     Size  Location     Type
 22966 ;;		None
 22967 ;; Return value:  Size  Location     Type
 22968 ;;                  1  [STACK] void 
 22969 ;; Registers used:
 22970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22971 ;; Tracked objects:
 22972 ;;		On entry : 0/39
 22973 ;;		On exit  : 3F/39
 22974 ;;		Unchanged: 0/0
 22975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22980 ;;Total ram usage:        0 bytes
 22981 ;; Hardware stack levels used:    1
 22982 ;; Hardware stack levels required when called:    7
 22983 ;; This function calls:
 22984 ;;		_UART1_SetRxInterruptHandler
 22985 ;;		_UART1_SetTxInterruptHandler
 22986 ;; This function is called by:
 22987 ;;		_SYSTEM_Initialize
 22988 ;; This function uses a reentrant model
 22989 ;;
 22990                           
 22991                           	psect	text91
 22992  0180DA                     __ptext91:
 22993                           	opt callstack 0
 22994  0180DA                     _UART1_Initialize:
 22995                           	opt callstack 22
 22996                           
 22997                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 22998                           
 22999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23000                           ;incstack = 0
 23001  0180DA  0139               	movlb	57	; () banked
 23002  0180DC  9793               	bcf	147,3,b	;volatile
 23003                           
 23004                           ; BSR set to: 57
 23005                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 23006  0180DE  0E78               	movlw	low _UART1_Receive_ISR
 23007  0180E0  6EE6               	movwf	postinc1,c
 23008  0180E2  0E8D               	movlw	high _UART1_Receive_ISR
 23009  0180E4  6EE6               	movwf	postinc1,c
 23010  0180E6  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 23011  0180E8  6EE6               	movwf	postinc1,c
 23012  0180EA  EC3A  F0C5         	call	_UART1_SetRxInterruptHandler	;wreg free
 23013                           
 23014                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 23015  0180EE  0139               	movlb	57	; () banked
 23016  0180F0  9993               	bcf	147,4,b	;volatile
 23017                           
 23018                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 23019  0180F2  0E02               	movlw	low _UART1_Transmit_ISR
 23020  0180F4  6EE6               	movwf	postinc1,c
 23021  0180F6  0E89               	movlw	high _UART1_Transmit_ISR
 23022  0180F8  6EE6               	movwf	postinc1,c
 23023  0180FA  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 23024  0180FC  6EE6               	movwf	postinc1,c
 23025  0180FE  EC26  F0C5         	call	_UART1_SetTxInterruptHandler	;wreg free
 23026                           
 23027                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23028  018102  013D               	movlb	61	; () banked
 23029  018104  6BEC               	clrf	236,b	;volatile
 23030                           
 23031                           ; BSR set to: 61
 23032                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23033  018106  6BED               	clrf	237,b	;volatile
 23034                           
 23035                           ; BSR set to: 61
 23036                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23037  018108  6BEE               	clrf	238,b	;volatile
 23038                           
 23039                           ; BSR set to: 61
 23040                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23041  01810A  6BEF               	clrf	239,b	;volatile
 23042                           
 23043                           ; BSR set to: 61
 23044                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23045  01810C  6BF0               	clrf	240,b	;volatile
 23046                           
 23047                           ; BSR set to: 61
 23048                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23049  01810E  6BF1               	clrf	241,b	;volatile
 23050                           
 23051                           ; BSR set to: 61
 23052                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23053  018110  0EB0               	movlw	176
 23054  018112  6FF2               	movwf	242,b	;volatile
 23055                           
 23056                           ; BSR set to: 61
 23057                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23058  018114  0E80               	movlw	128
 23059  018116  6FF3               	movwf	243,b	;volatile
 23060                           
 23061                           ; BSR set to: 61
 23062                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23063  018118  6BF4               	clrf	244,b	;volatile
 23064                           
 23065                           ; BSR set to: 61
 23066                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23067  01811A  0E82               	movlw	130
 23068  01811C  6FF5               	movwf	245,b	;volatile
 23069                           
 23070                           ; BSR set to: 61
 23071                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23072  01811E  0E06               	movlw	6
 23073  018120  6FF6               	movwf	246,b	;volatile
 23074                           
 23075                           ; BSR set to: 61
 23076                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23077  018122  6BF7               	clrf	247,b	;volatile
 23078                           
 23079                           ; BSR set to: 61
 23080                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23081  018124  6BF8               	clrf	248,b	;volatile
 23082                           
 23083                           ; BSR set to: 61
 23084                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23085  018126  6BF9               	clrf	249,b	;volatile
 23086                           
 23087                           ; BSR set to: 61
 23088                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23089  018128  6BFA               	clrf	250,b	;volatile
 23090                           
 23091                           ; BSR set to: 61
 23092                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23093  01812A  6A34               	clrf	_uart1TxHead^0,c	;volatile
 23094                           
 23095                           ; BSR set to: 61
 23096                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23097  01812C  6A33               	clrf	_uart1TxTail^0,c	;volatile
 23098                           
 23099                           ; BSR set to: 61
 23100                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23101  01812E  0E40               	movlw	64
 23102  018130  6E32               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23103                           
 23104                           ; BSR set to: 61
 23105                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23106  018132  6A31               	clrf	_uart1RxHead^0,c	;volatile
 23107                           
 23108                           ; BSR set to: 61
 23109                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23110  018134  6A30               	clrf	_uart1RxTail^0,c	;volatile
 23111                           
 23112                           ; BSR set to: 61
 23113                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23114  018136  6A2F               	clrf	_uart1RxCount^0,c	;volatile
 23115                           
 23116                           ; BSR set to: 61
 23117                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23118  018138  0139               	movlb	57	; () banked
 23119  01813A  8793               	bsf	147,3,b	;volatile
 23120                           
 23121                           ; BSR set to: 57
 23122                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23123  01813C  0012               	return		;funcret
 23124  01813E                     __end_of_UART1_Initialize:
 23125                           	opt callstack 0
 23126                           
 23127 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23128 ;; Defined at:
 23129 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23130 ;; Parameters:    Size  Location     Type
 23131 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23132 ;;		 -> UART1_Transmit_ISR(1), 
 23133 ;; Auto vars:     Size  Location     Type
 23134 ;;		None
 23135 ;; Return value:  Size  Location     Type
 23136 ;;                  1  [STACK] void 
 23137 ;; Registers used:
 23138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23139 ;; Tracked objects:
 23140 ;;		On entry : 3F/39
 23141 ;;		On exit  : 0/0
 23142 ;;		Unchanged: 0/0
 23143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23148 ;;Total ram usage:        0 bytes
 23149 ;; Hardware stack levels used:    1
 23150 ;; Hardware stack levels required when called:    6
 23151 ;; This function calls:
 23152 ;;		Nothing
 23153 ;; This function is called by:
 23154 ;;		_UART1_Initialize
 23155 ;; This function uses a reentrant model
 23156 ;;
 23157                           
 23158                           	psect	text92
 23159  018A4C                     __ptext92:
 23160                           	opt callstack 0
 23161  018A4C                     _UART1_SetTxInterruptHandler:
 23162                           	opt callstack 22
 23163                           
 23164                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23165                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23166                           
 23167                           ; BSR set to: 57
 23168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23169                           ;incstack = 0
 23170  018A4C  50E1               	movf	fsr1l,w,c
 23171  018A4E  0FFD               	addlw	-3
 23172  018A50  6ED9               	movwf	fsr2l,c
 23173  018A52  50E2               	movf	fsr1h,w,c
 23174  018A54  6EDA               	movwf	fsr2h,c
 23175  018A56  0EFF               	movlw	255
 23176  018A58  22DA               	addwfc	fsr2h,f,c
 23177  018A5A  006F FF78  F00A    	movff	postinc2,_UART1_TxInterruptHandler
 23178  018A60  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler+1
 23179  018A66  006F FF74  F00C    	movff	postdec2,_UART1_TxInterruptHandler+2
 23180                           
 23181                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23182  018A6C  52E5               	movf	postdec1,f,c
 23183  018A6E  52E5               	movf	postdec1,f,c
 23184  018A70  52E5               	movf	postdec1,f,c
 23185  018A72  0012               	return		;funcret
 23186  018A74                     __end_of_UART1_SetTxInterruptHandler:
 23187                           	opt callstack 0
 23188                           
 23189 ;; *************** function _UART1_SetRxInterruptHandler *****************
 23190 ;; Defined at:
 23191 ;;		line 241 in file "mcc_generated_files/uart1.c"
 23192 ;; Parameters:    Size  Location     Type
 23193 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23194 ;;		 -> UART1_Receive_ISR(1), 
 23195 ;; Auto vars:     Size  Location     Type
 23196 ;;		None
 23197 ;; Return value:  Size  Location     Type
 23198 ;;                  1  [STACK] void 
 23199 ;; Registers used:
 23200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23201 ;; Tracked objects:
 23202 ;;		On entry : 3F/39
 23203 ;;		On exit  : 0/0
 23204 ;;		Unchanged: 0/0
 23205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23210 ;;Total ram usage:        0 bytes
 23211 ;; Hardware stack levels used:    1
 23212 ;; Hardware stack levels required when called:    6
 23213 ;; This function calls:
 23214 ;;		Nothing
 23215 ;; This function is called by:
 23216 ;;		_UART1_Initialize
 23217 ;; This function uses a reentrant model
 23218 ;;
 23219                           
 23220                           	psect	text93
 23221  018A74                     __ptext93:
 23222                           	opt callstack 0
 23223  018A74                     _UART1_SetRxInterruptHandler:
 23224                           	opt callstack 22
 23225                           
 23226                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 23227                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23228                           
 23229                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23230                           ;incstack = 0
 23231  018A74  50E1               	movf	fsr1l,w,c
 23232  018A76  0FFD               	addlw	-3
 23233  018A78  6ED9               	movwf	fsr2l,c
 23234  018A7A  50E2               	movf	fsr1h,w,c
 23235  018A7C  6EDA               	movwf	fsr2h,c
 23236  018A7E  0EFF               	movlw	255
 23237  018A80  22DA               	addwfc	fsr2h,f,c
 23238  018A82  006F FF78  F00D    	movff	postinc2,_UART1_RxInterruptHandler
 23239  018A88  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler+1
 23240  018A8E  006F FF74  F00F    	movff	postdec2,_UART1_RxInterruptHandler+2
 23241                           
 23242                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23243  018A94  52E5               	movf	postdec1,f,c
 23244  018A96  52E5               	movf	postdec1,f,c
 23245  018A98  52E5               	movf	postdec1,f,c
 23246  018A9A  0012               	return		;funcret
 23247  018A9C                     __end_of_UART1_SetRxInterruptHandler:
 23248                           	opt callstack 0
 23249                           
 23250 ;; *************** function _TMR6_Initialize *****************
 23251 ;; Defined at:
 23252 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 23253 ;; Parameters:    Size  Location     Type
 23254 ;;		None
 23255 ;; Auto vars:     Size  Location     Type
 23256 ;;		None
 23257 ;; Return value:  Size  Location     Type
 23258 ;;                  1  [STACK] void 
 23259 ;; Registers used:
 23260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23261 ;; Tracked objects:
 23262 ;;		On entry : 3F/39
 23263 ;;		On exit  : 0/0
 23264 ;;		Unchanged: 0/0
 23265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23270 ;;Total ram usage:        0 bytes
 23271 ;; Hardware stack levels used:    1
 23272 ;; Hardware stack levels required when called:    7
 23273 ;; This function calls:
 23274 ;;		_TMR6_SetInterruptHandler
 23275 ;; This function is called by:
 23276 ;;		_SYSTEM_Initialize
 23277 ;; This function uses a reentrant model
 23278 ;;
 23279                           
 23280                           	psect	text94
 23281  01895A                     __ptext94:
 23282                           	opt callstack 0
 23283  01895A                     _TMR6_Initialize:
 23284                           	opt callstack 22
 23285                           
 23286                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 23287                           
 23288                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23289                           ;incstack = 0
 23290  01895A  0E01               	movlw	1
 23291  01895C  6E96               	movwf	150,c	;volatile
 23292                           
 23293                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 23294  01895E  6A95               	clrf	149,c	;volatile
 23295                           
 23296                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 23297  018960  6A97               	clrf	151,c	;volatile
 23298                           
 23299                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 23300  018962  0E7C               	movlw	124
 23301  018964  6E93               	movwf	147,c	;volatile
 23302                           
 23303                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 23304  018966  6A92               	clrf	146,c	;volatile
 23305                           
 23306                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 23307  018968  0139               	movlb	57	; () banked
 23308  01896A  91A9               	bcf	169,0,b	;volatile
 23309                           
 23310                           ; BSR set to: 57
 23311                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 23312  01896C  8199               	bsf	153,0,b	;volatile
 23313                           
 23314                           ; BSR set to: 57
 23315                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 23316  01896E  0E74               	movlw	low _TMR6_DefaultInterruptHandler
 23317  018970  6EE6               	movwf	postinc1,c
 23318  018972  0E85               	movlw	high _TMR6_DefaultInterruptHandler
 23319  018974  6EE6               	movwf	postinc1,c
 23320  018976  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 23321  018978  6EE6               	movwf	postinc1,c
 23322  01897A  EC4E  F0C5         	call	_TMR6_SetInterruptHandler	;wreg free
 23323                           
 23324                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 23325  01897E  0EE0               	movlw	224
 23326  018980  6E94               	movwf	148,c	;volatile
 23327                           
 23328                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23329  018982  0012               	return		;funcret
 23330  018984                     __end_of_TMR6_Initialize:
 23331                           	opt callstack 0
 23332                           
 23333 ;; *************** function _TMR6_SetInterruptHandler *****************
 23334 ;; Defined at:
 23335 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 23336 ;; Parameters:    Size  Location     Type
 23337 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23338 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 23339 ;; Auto vars:     Size  Location     Type
 23340 ;;		None
 23341 ;; Return value:  Size  Location     Type
 23342 ;;                  1  [STACK] void 
 23343 ;; Registers used:
 23344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23345 ;; Tracked objects:
 23346 ;;		On entry : 3F/39
 23347 ;;		On exit  : 0/0
 23348 ;;		Unchanged: 0/0
 23349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23354 ;;Total ram usage:        0 bytes
 23355 ;; Hardware stack levels used:    1
 23356 ;; Hardware stack levels required when called:    6
 23357 ;; This function calls:
 23358 ;;		Nothing
 23359 ;; This function is called by:
 23360 ;;		_TMR6_Initialize
 23361 ;; This function uses a reentrant model
 23362 ;;
 23363                           
 23364                           	psect	text95
 23365  018A9C                     __ptext95:
 23366                           	opt callstack 0
 23367  018A9C                     _TMR6_SetInterruptHandler:
 23368                           	opt callstack 22
 23369                           
 23370                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 23371                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23372                           
 23373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23374                           ;incstack = 0
 23375  018A9C  50E1               	movf	fsr1l,w,c
 23376  018A9E  0FFD               	addlw	-3
 23377  018AA0  6ED9               	movwf	fsr2l,c
 23378  018AA2  50E2               	movf	fsr1h,w,c
 23379  018AA4  6EDA               	movwf	fsr2h,c
 23380  018AA6  0EFF               	movlw	255
 23381  018AA8  22DA               	addwfc	fsr2h,f,c
 23382  018AAA  006F FF78  F001    	movff	postinc2,_TMR6_InterruptHandler
 23383  018AB0  006F FF78  F002    	movff	postinc2,_TMR6_InterruptHandler+1
 23384  018AB6  006F FF74  F003    	movff	postdec2,_TMR6_InterruptHandler+2
 23385                           
 23386                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23387  018ABC  52E5               	movf	postdec1,f,c
 23388  018ABE  52E5               	movf	postdec1,f,c
 23389  018AC0  52E5               	movf	postdec1,f,c
 23390  018AC2  0012               	return		;funcret
 23391  018AC4                     __end_of_TMR6_SetInterruptHandler:
 23392                           	opt callstack 0
 23393                           
 23394 ;; *************** function _TMR5_Initialize *****************
 23395 ;; Defined at:
 23396 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 23397 ;; Parameters:    Size  Location     Type
 23398 ;;		None
 23399 ;; Auto vars:     Size  Location     Type
 23400 ;;		None
 23401 ;; Return value:  Size  Location     Type
 23402 ;;                  1  [STACK] void 
 23403 ;; Registers used:
 23404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 23405 ;; Tracked objects:
 23406 ;;		On entry : 0/39
 23407 ;;		On exit  : 0/0
 23408 ;;		Unchanged: 0/0
 23409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23414 ;;Total ram usage:        0 bytes
 23415 ;; Hardware stack levels used:    1
 23416 ;; Hardware stack levels required when called:    7
 23417 ;; This function calls:
 23418 ;;		_TMR5_SetInterruptHandler
 23419 ;; This function is called by:
 23420 ;;		_SYSTEM_Initialize
 23421 ;; This function uses a reentrant model
 23422 ;;
 23423                           
 23424                           	psect	text96
 23425  01852E                     __ptext96:
 23426                           	opt callstack 0
 23427  01852E                     _TMR5_Initialize:
 23428                           	opt callstack 22
 23429                           
 23430                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 23431                           
 23432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23433                           ;incstack = 0
 23434  01852E  6A9B               	clrf	155,c	;volatile
 23435                           
 23436                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 23437  018530  6A9C               	clrf	156,c	;volatile
 23438                           
 23439                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 23440  018532  0E01               	movlw	1
 23441  018534  6E9D               	movwf	157,c	;volatile
 23442                           
 23443                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 23444  018536  0E63               	movlw	99
 23445  018538  6E99               	movwf	153,c	;volatile
 23446                           
 23447                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 23448  01853A  0EC0               	movlw	192
 23449  01853C  6E98               	movwf	152,c	;volatile
 23450                           
 23451                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 23452  01853E  5098               	movf	152,w,c	;volatile
 23453  018540  006F FE64  F035    	movff	16281,btemp	;volatile
 23454  018546  6A36               	clrf	(btemp+1)^0,c
 23455  018548  0060  F0D4  F036   	movff	btemp,btemp+1
 23456  01854E  6A35               	clrf	btemp^0,c
 23457  018550  1035               	iorwf	btemp^0,w,c
 23458  018552  6E26               	movwf	_timer5ReloadVal^0,c	;volatile
 23459  018554  5036               	movf	(btemp+1)^0,w,c
 23460  018556  6E27               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 23461                           
 23462                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 23463  018558  0139               	movlb	57	; () banked
 23464  01855A  9DA8               	bcf	168,6,b	;volatile
 23465                           
 23466                           ; BSR set to: 57
 23467                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 23468  01855C  8D98               	bsf	152,6,b	;volatile
 23469                           
 23470                           ; BSR set to: 57
 23471                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 23472  01855E  0E8C               	movlw	low _TMR5_DefaultInterruptHandler
 23473  018560  6EE6               	movwf	postinc1,c
 23474  018562  0E8B               	movlw	high _TMR5_DefaultInterruptHandler
 23475  018564  6EE6               	movwf	postinc1,c
 23476  018566  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23477  018568  6EE6               	movwf	postinc1,c
 23478  01856A  EC62  F0C5         	call	_TMR5_SetInterruptHandler	;wreg free
 23479                           
 23480                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 23481  01856E  0E31               	movlw	49
 23482  018570  6E9A               	movwf	154,c	;volatile
 23483                           
 23484                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23485  018572  0012               	return		;funcret
 23486  018574                     __end_of_TMR5_Initialize:
 23487                           	opt callstack 0
 23488                           
 23489 ;; *************** function _TMR5_SetInterruptHandler *****************
 23490 ;; Defined at:
 23491 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 23492 ;; Parameters:    Size  Location     Type
 23493 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23494 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 23495 ;; Auto vars:     Size  Location     Type
 23496 ;;		None
 23497 ;; Return value:  Size  Location     Type
 23498 ;;                  1  [STACK] void 
 23499 ;; Registers used:
 23500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23501 ;; Tracked objects:
 23502 ;;		On entry : 3F/39
 23503 ;;		On exit  : 0/0
 23504 ;;		Unchanged: 0/0
 23505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23510 ;;Total ram usage:        0 bytes
 23511 ;; Hardware stack levels used:    1
 23512 ;; Hardware stack levels required when called:    6
 23513 ;; This function calls:
 23514 ;;		Nothing
 23515 ;; This function is called by:
 23516 ;;		_TMR5_Initialize
 23517 ;; This function uses a reentrant model
 23518 ;;
 23519                           
 23520                           	psect	text97
 23521  018AC4                     __ptext97:
 23522                           	opt callstack 0
 23523  018AC4                     _TMR5_SetInterruptHandler:
 23524                           	opt callstack 22
 23525                           
 23526                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 23527                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23528                           
 23529                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23530                           ;incstack = 0
 23531  018AC4  50E1               	movf	fsr1l,w,c
 23532  018AC6  0FFD               	addlw	-3
 23533  018AC8  6ED9               	movwf	fsr2l,c
 23534  018ACA  50E2               	movf	fsr1h,w,c
 23535  018ACC  6EDA               	movwf	fsr2h,c
 23536  018ACE  0EFF               	movlw	255
 23537  018AD0  22DA               	addwfc	fsr2h,f,c
 23538  018AD2  006F FF78  F098    	movff	postinc2,_TMR5_InterruptHandler
 23539  018AD8  006F FF78  F099    	movff	postinc2,_TMR5_InterruptHandler+1
 23540  018ADE  006F FF74  F09A    	movff	postdec2,_TMR5_InterruptHandler+2
 23541                           
 23542                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23543  018AE4  52E5               	movf	postdec1,f,c
 23544  018AE6  52E5               	movf	postdec1,f,c
 23545  018AE8  52E5               	movf	postdec1,f,c
 23546  018AEA  0012               	return		;funcret
 23547  018AEC                     __end_of_TMR5_SetInterruptHandler:
 23548                           	opt callstack 0
 23549                           
 23550 ;; *************** function _TMR2_Initialize *****************
 23551 ;; Defined at:
 23552 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 23553 ;; Parameters:    Size  Location     Type
 23554 ;;		None
 23555 ;; Auto vars:     Size  Location     Type
 23556 ;;		None
 23557 ;; Return value:  Size  Location     Type
 23558 ;;                  1  [STACK] void 
 23559 ;; Registers used:
 23560 ;;		wreg, status,2
 23561 ;; Tracked objects:
 23562 ;;		On entry : 3F/3F
 23563 ;;		On exit  : 3F/39
 23564 ;;		Unchanged: 0/0
 23565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23570 ;;Total ram usage:        0 bytes
 23571 ;; Hardware stack levels used:    1
 23572 ;; Hardware stack levels required when called:    6
 23573 ;; This function calls:
 23574 ;;		Nothing
 23575 ;; This function is called by:
 23576 ;;		_SYSTEM_Initialize
 23577 ;; This function uses a reentrant model
 23578 ;;
 23579                           
 23580                           	psect	text98
 23581  018E3A                     __ptext98:
 23582                           	opt callstack 0
 23583  018E3A                     _TMR2_Initialize:
 23584                           	opt callstack 23
 23585                           
 23586                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 23587                           
 23588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23589                           ;incstack = 0
 23590  018E3A  0E01               	movlw	1
 23591  018E3C  6EAE               	movwf	174,c	;volatile
 23592                           
 23593                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 23594  018E3E  6AAD               	clrf	173,c	;volatile
 23595                           
 23596                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 23597  018E40  6AAF               	clrf	175,c	;volatile
 23598                           
 23599                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 23600  018E42  0E63               	movlw	99
 23601  018E44  6EAB               	movwf	171,c	;volatile
 23602                           
 23603                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 23604  018E46  6AAA               	clrf	170,c	;volatile
 23605                           
 23606                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 23607  018E48  0139               	movlb	57	; () banked
 23608  018E4A  95A4               	bcf	164,2,b	;volatile
 23609                           
 23610                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 23611  018E4C  0EC0               	movlw	192
 23612  018E4E  6EAC               	movwf	172,c	;volatile
 23613                           
 23614                           ; BSR set to: 57
 23615                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23616  018E50  0012               	return		;funcret
 23617  018E52                     __end_of_TMR2_Initialize:
 23618                           	opt callstack 0
 23619                           
 23620 ;; *************** function _SPI1_Initialize *****************
 23621 ;; Defined at:
 23622 ;;		line 64 in file "mcc_generated_files/spi1.c"
 23623 ;; Parameters:    Size  Location     Type
 23624 ;;		None
 23625 ;; Auto vars:     Size  Location     Type
 23626 ;;		None
 23627 ;; Return value:  Size  Location     Type
 23628 ;;                  1  [STACK] void 
 23629 ;; Registers used:
 23630 ;;		wreg, status,2
 23631 ;; Tracked objects:
 23632 ;;		On entry : 3F/39
 23633 ;;		On exit  : 3F/3D
 23634 ;;		Unchanged: 0/0
 23635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23640 ;;Total ram usage:        0 bytes
 23641 ;; Hardware stack levels used:    1
 23642 ;; Hardware stack levels required when called:    6
 23643 ;; This function calls:
 23644 ;;		Nothing
 23645 ;; This function is called by:
 23646 ;;		_SYSTEM_Initialize
 23647 ;; This function uses a reentrant model
 23648 ;;
 23649                           
 23650                           	psect	text99
 23651  018E52                     __ptext99:
 23652                           	opt callstack 0
 23653  018E52                     _SPI1_Initialize:
 23654                           	opt callstack 23
 23655                           
 23656                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 23657                           
 23658                           ; BSR set to: 57
 23659                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23660                           ;incstack = 0
 23661  018E52  0E40               	movlw	64
 23662  018E54  013D               	movlb	61	; () banked
 23663  018E56  6F15               	movwf	21,b	;volatile
 23664                           
 23665                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 23666  018E58  0E03               	movlw	3
 23667  018E5A  6F16               	movwf	22,b	;volatile
 23668                           
 23669                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 23670  018E5C  0E4F               	movlw	79
 23671  018E5E  6F19               	movwf	25,b	;volatile
 23672                           
 23673                           ; BSR set to: 61
 23674                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 23675  018E60  6B1C               	clrf	28,b	;volatile
 23676                           
 23677                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 23678  018E62  0E83               	movlw	131
 23679  018E64  6F14               	movwf	20,b	;volatile
 23680                           
 23681                           ; BSR set to: 61
 23682                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23683  018E66  0012               	return		;funcret
 23684  018E68                     __end_of_SPI1_Initialize:
 23685                           	opt callstack 0
 23686                           
 23687 ;; *************** function _PWM8_Initialize *****************
 23688 ;; Defined at:
 23689 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 23690 ;; Parameters:    Size  Location     Type
 23691 ;;		None
 23692 ;; Auto vars:     Size  Location     Type
 23693 ;;		None
 23694 ;; Return value:  Size  Location     Type
 23695 ;;                  1  [STACK] void 
 23696 ;; Registers used:
 23697 ;;		wreg, status,2
 23698 ;; Tracked objects:
 23699 ;;		On entry : 0/3E
 23700 ;;		On exit  : 3F/3F
 23701 ;;		Unchanged: 0/0
 23702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23707 ;;Total ram usage:        0 bytes
 23708 ;; Hardware stack levels used:    1
 23709 ;; Hardware stack levels required when called:    6
 23710 ;; This function calls:
 23711 ;;		Nothing
 23712 ;; This function is called by:
 23713 ;;		_SYSTEM_Initialize
 23714 ;; This function uses a reentrant model
 23715 ;;
 23716                           
 23717                           	psect	text100
 23718  018E68                     __ptext100:
 23719                           	opt callstack 0
 23720  018E68                     _PWM8_Initialize:
 23721                           	opt callstack 23
 23722                           
 23723                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 23724                           
 23725                           ; BSR set to: 61
 23726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23727                           ;incstack = 0
 23728  018E68  0E80               	movlw	128
 23729  018E6A  6E62               	movwf	98,c	;volatile
 23730                           
 23731                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 23732  018E6C  6A61               	clrf	97,c	;volatile
 23733                           
 23734                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 23735  018E6E  0E40               	movlw	64
 23736  018E70  6E60               	movwf	96,c	;volatile
 23737                           
 23738                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 23739  018E72  013F               	movlb	63	; () banked
 23740  018E74  515F               	movf	95,w,b	;volatile
 23741  018E76  0B3F               	andlw	-193
 23742  018E78  0940               	iorlw	64
 23743  018E7A  6F5F               	movwf	95,b	;volatile
 23744                           
 23745                           ; BSR set to: 63
 23746                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23747  018E7C  0012               	return		;funcret
 23748  018E7E                     __end_of_PWM8_Initialize:
 23749                           	opt callstack 0
 23750                           
 23751 ;; *************** function _PMD_Initialize *****************
 23752 ;; Defined at:
 23753 ;;		line 89 in file "mcc_generated_files/mcc.c"
 23754 ;; Parameters:    Size  Location     Type
 23755 ;;		None
 23756 ;; Auto vars:     Size  Location     Type
 23757 ;;		None
 23758 ;; Return value:  Size  Location     Type
 23759 ;;                  1  [STACK] void 
 23760 ;; Registers used:
 23761 ;;		None
 23762 ;; Tracked objects:
 23763 ;;		On entry : 3F/39
 23764 ;;		On exit  : 3F/39
 23765 ;;		Unchanged: 0/0
 23766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23771 ;;Total ram usage:        0 bytes
 23772 ;; Hardware stack levels used:    1
 23773 ;; Hardware stack levels required when called:    6
 23774 ;; This function calls:
 23775 ;;		Nothing
 23776 ;; This function is called by:
 23777 ;;		_SYSTEM_Initialize
 23778 ;; This function uses a reentrant model
 23779 ;;
 23780                           
 23781                           	psect	text101
 23782  018E94                     __ptext101:
 23783                           	opt callstack 0
 23784  018E94                     _PMD_Initialize:
 23785                           	opt callstack 23
 23786                           
 23787                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 23788                           
 23789                           ; BSR set to: 63
 23790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23791                           ;incstack = 0
 23792  018E94  0139               	movlb	57	; () banked
 23793  018E96  6BC0               	clrf	192,b	;volatile
 23794                           
 23795                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 23796  018E98  6BC1               	clrf	193,b	;volatile
 23797                           
 23798                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 23799  018E9A  6BC2               	clrf	194,b	;volatile
 23800                           
 23801                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 23802  018E9C  6BC3               	clrf	195,b	;volatile
 23803                           
 23804                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 23805  018E9E  6BC4               	clrf	196,b	;volatile
 23806                           
 23807                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 23808  018EA0  6BC5               	clrf	197,b	;volatile
 23809                           
 23810                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 23811  018EA2  6BC6               	clrf	198,b	;volatile
 23812                           
 23813                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 23814  018EA4  6BC7               	clrf	199,b	;volatile
 23815                           
 23816                           ; BSR set to: 57
 23817                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23818  018EA6  0012               	return		;funcret
 23819  018EA8                     __end_of_PMD_Initialize:
 23820                           	opt callstack 0
 23821                           
 23822 ;; *************** function _PIN_MANAGER_Initialize *****************
 23823 ;; Defined at:
 23824 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 23825 ;; Parameters:    Size  Location     Type
 23826 ;;		None
 23827 ;; Auto vars:     Size  Location     Type
 23828 ;;		None
 23829 ;; Return value:  Size  Location     Type
 23830 ;;                  1  [STACK] void 
 23831 ;; Registers used:
 23832 ;;		wreg, status,2
 23833 ;; Tracked objects:
 23834 ;;		On entry : 3F/39
 23835 ;;		On exit  : 3F/3A
 23836 ;;		Unchanged: 0/0
 23837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23842 ;;Total ram usage:        0 bytes
 23843 ;; Hardware stack levels used:    1
 23844 ;; Hardware stack levels required when called:    6
 23845 ;; This function calls:
 23846 ;;		Nothing
 23847 ;; This function is called by:
 23848 ;;		_SYSTEM_Initialize
 23849 ;; This function uses a reentrant model
 23850 ;;
 23851                           
 23852                           	psect	text102
 23853  017C36                     __ptext102:
 23854                           	opt callstack 0
 23855  017C36                     _PIN_MANAGER_Initialize:
 23856                           	opt callstack 23
 23857                           
 23858                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 23859                           
 23860                           ; BSR set to: 57
 23861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23862                           ;incstack = 0
 23863  017C36  0E07               	movlw	7
 23864  017C38  6EBE               	movwf	190,c	;volatile
 23865                           
 23866                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 23867  017C3A  6ABD               	clrf	189,c	;volatile
 23868                           
 23869                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 23870  017C3C  6ABA               	clrf	186,c	;volatile
 23871                           
 23872                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 23873  017C3E  6ABF               	clrf	191,c	;volatile
 23874                           
 23875                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 23876  017C40  6ABB               	clrf	187,c	;volatile
 23877                           
 23878                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 23879  017C42  0E07               	movlw	7
 23880  017C44  6EBC               	movwf	188,c	;volatile
 23881                           
 23882                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 23883  017C46  6AC6               	clrf	198,c	;volatile
 23884                           
 23885                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 23886  017C48  0E0F               	movlw	15
 23887  017C4A  6EC7               	movwf	199,c	;volatile
 23888                           
 23889                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 23890  017C4C  68C2               	setf	194,c	;volatile
 23891                           
 23892                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 23893  017C4E  0EBF               	movlw	191
 23894  017C50  6EC3               	movwf	195,c	;volatile
 23895                           
 23896                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 23897  017C52  0E90               	movlw	144
 23898  017C54  6EC4               	movwf	196,c	;volatile
 23899                           
 23900                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 23901  017C56  0E0C               	movlw	12
 23902  017C58  6EC5               	movwf	197,c	;volatile
 23903                           
 23904                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 23905  017C5A  013A               	movlb	58	; () banked
 23906  017C5C  6B70               	clrf	112,b	;volatile
 23907                           
 23908                           ; BSR set to: 58
 23909                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 23910  017C5E  6B60               	clrf	96,b	;volatile
 23911                           
 23912                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 23913  017C60  0E3C               	movlw	60
 23914  017C62  6F50               	movwf	80,b	;volatile
 23915                           
 23916                           ; BSR set to: 58
 23917                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 23918  017C64  6B80               	clrf	128,b	;volatile
 23919                           
 23920                           ; BSR set to: 58
 23921                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 23922  017C66  6B90               	clrf	144,b	;volatile
 23923                           
 23924                           ; BSR set to: 58
 23925                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 23926  017C68  6940               	setf	64,b	;volatile
 23927                           
 23928                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 23929  017C6A  0E0C               	movlw	12
 23930  017C6C  6F71               	movwf	113,b	;volatile
 23931                           
 23932                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 23933  017C6E  0E0F               	movlw	15
 23934  017C70  6F91               	movwf	145,b	;volatile
 23935                           
 23936                           ; BSR set to: 58
 23937                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 23938  017C72  6B81               	clrf	129,b	;volatile
 23939                           
 23940                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 23941  017C74  0E87               	movlw	135
 23942  017C76  6F51               	movwf	81,b	;volatile
 23943                           
 23944                           ; BSR set to: 58
 23945                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 23946  017C78  6B41               	clrf	65,b	;volatile
 23947                           
 23948                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 23949  017C7A  0E97               	movlw	151
 23950  017C7C  6F61               	movwf	97,b	;volatile
 23951                           
 23952                           ; BSR set to: 58
 23953                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 23954  017C7E  6B82               	clrf	130,b	;volatile
 23955                           
 23956                           ; BSR set to: 58
 23957                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 23958  017C80  6B92               	clrf	146,b	;volatile
 23959                           
 23960                           ; BSR set to: 58
 23961                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 23962  017C82  6B42               	clrf	66,b	;volatile
 23963                           
 23964                           ; BSR set to: 58
 23965                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 23966  017C84  6B52               	clrf	82,b	;volatile
 23967                           
 23968                           ; BSR set to: 58
 23969                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 23970  017C86  6B62               	clrf	98,b	;volatile
 23971                           
 23972                           ; BSR set to: 58
 23973                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 23974  017C88  6B72               	clrf	114,b	;volatile
 23975                           
 23976                           ; BSR set to: 58
 23977                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 23978  017C8A  6943               	setf	67,b	;volatile
 23979                           
 23980                           ; BSR set to: 58
 23981                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 23982  017C8C  6953               	setf	83,b	;volatile
 23983                           
 23984                           ; BSR set to: 58
 23985                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 23986  017C8E  6963               	setf	99,b	;volatile
 23987                           
 23988                           ; BSR set to: 58
 23989                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 23990  017C90  6973               	setf	115,b	;volatile
 23991                           
 23992                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 23993  017C92  0E07               	movlw	7
 23994  017C94  6F83               	movwf	131,b	;volatile
 23995                           
 23996                           ; BSR set to: 58
 23997                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 23998  017C96  6993               	setf	147,b	;volatile
 23999                           
 24000                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 24001  017C98  0E0F               	movlw	15
 24002  017C9A  6FE8               	movwf	232,b	;volatile
 24003                           
 24004                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 24005  017C9C  0E13               	movlw	19
 24006  017C9E  6FDE               	movwf	222,b	;volatile
 24007                           
 24008                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 24009  017CA0  0E16               	movlw	22
 24010  017CA2  6F0E               	movwf	14,b	;volatile
 24011                           
 24012                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 24013  017CA4  0E1E               	movlw	30
 24014  017CA6  6F13               	movwf	19,b	;volatile
 24015                           
 24016                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 24017  017CA8  0E08               	movlw	8
 24018  017CAA  6FC0               	movwf	192,b	;volatile
 24019                           
 24020                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 24021  017CAC  0E10               	movlw	16
 24022  017CAE  6F19               	movwf	25,b	;volatile
 24023                           
 24024                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 24025  017CB0  0E09               	movlw	9
 24026  017CB2  6FC1               	movwf	193,b	;volatile
 24027                           
 24028                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 24029  017CB4  0E1F               	movlw	31
 24030  017CB6  6F15               	movwf	21,b	;volatile
 24031                           
 24032                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 24033  017CB8  0E13               	movlw	19
 24034  017CBA  6F16               	movwf	22,b	;volatile
 24035                           
 24036                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 24037  017CBC  0E17               	movlw	23
 24038  017CBE  6FE5               	movwf	229,b	;volatile
 24039                           
 24040                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 24041  017CC0  0E14               	movlw	20
 24042  017CC2  6FDF               	movwf	223,b	;volatile
 24043                           
 24044                           ; BSR set to: 58
 24045                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 24046  017CC4  0012               	return		;funcret
 24047  017CC6                     __end_of_PIN_MANAGER_Initialize:
 24048                           	opt callstack 0
 24049                           
 24050 ;; *************** function _OSCILLATOR_Initialize *****************
 24051 ;; Defined at:
 24052 ;;		line 71 in file "mcc_generated_files/mcc.c"
 24053 ;; Parameters:    Size  Location     Type
 24054 ;;		None
 24055 ;; Auto vars:     Size  Location     Type
 24056 ;;		None
 24057 ;; Return value:  Size  Location     Type
 24058 ;;                  1  [STACK] void 
 24059 ;; Registers used:
 24060 ;;		wreg, status,2
 24061 ;; Tracked objects:
 24062 ;;		On entry : 3F/3A
 24063 ;;		On exit  : 3F/39
 24064 ;;		Unchanged: 0/0
 24065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24070 ;;Total ram usage:        0 bytes
 24071 ;; Hardware stack levels used:    1
 24072 ;; Hardware stack levels required when called:    6
 24073 ;; This function calls:
 24074 ;;		Nothing
 24075 ;; This function is called by:
 24076 ;;		_SYSTEM_Initialize
 24077 ;; This function uses a reentrant model
 24078 ;;
 24079                           
 24080                           	psect	text103
 24081  018E7E                     __ptext103:
 24082                           	opt callstack 0
 24083  018E7E                     _OSCILLATOR_Initialize:
 24084                           	opt callstack 23
 24085                           
 24086                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 24087                           
 24088                           ; BSR set to: 58
 24089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24090                           ;incstack = 0
 24091  018E7E  0E20               	movlw	32
 24092  018E80  0139               	movlb	57	; () banked
 24093  018E82  6FD9               	movwf	217,b	;volatile
 24094                           
 24095                           ; BSR set to: 57
 24096                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 24097  018E84  6BDB               	clrf	219,b	;volatile
 24098                           
 24099                           ; BSR set to: 57
 24100                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 24101  018E86  6BDD               	clrf	221,b	;volatile
 24102                           
 24103                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 24104  018E88  0E02               	movlw	2
 24105  018E8A  6FDF               	movwf	223,b	;volatile
 24106                           
 24107                           ; BSR set to: 57
 24108                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 24109  018E8C  6BDE               	clrf	222,b	;volatile
 24110  018E8E                     l171:
 24111                           
 24112                           ; BSR set to: 57
 24113                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 24114  018E8E  B1DC               	btfsc	220,0,b	;volatile
 24115  018E90  0012               	return	
 24116  018E92  D7FD               	goto	l171
 24117  018E94                     __end_of_OSCILLATOR_Initialize:
 24118                           	opt callstack 0
 24119                           
 24120 ;; *************** function _INTERRUPT_Initialize *****************
 24121 ;; Defined at:
 24122 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24123 ;; Parameters:    Size  Location     Type
 24124 ;;		None
 24125 ;; Auto vars:     Size  Location     Type
 24126 ;;  state           1  [STACK] _Bool 
 24127 ;; Return value:  Size  Location     Type
 24128 ;;                  1  [STACK] void 
 24129 ;; Registers used:
 24130 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 24131 ;; Tracked objects:
 24132 ;;		On entry : 0/0
 24133 ;;		On exit  : 3F/39
 24134 ;;		Unchanged: 0/0
 24135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24140 ;;Total ram usage:        0 bytes
 24141 ;; Hardware stack levels used:    1
 24142 ;; Hardware stack levels required when called:    6
 24143 ;; This function calls:
 24144 ;;		Nothing
 24145 ;; This function is called by:
 24146 ;;		_SYSTEM_Initialize
 24147 ;; This function uses a reentrant model
 24148 ;;
 24149                           
 24150                           	psect	text104
 24151  018074                     __ptext104:
 24152                           	opt callstack 0
 24153  018074                     _INTERRUPT_Initialize:
 24154                           	opt callstack 0
 24155                           
 24156                           ; BSR set to: 57
 24157                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24158  018074  52E6               	movf	postinc1,f,c
 24159                           
 24160                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 24161                           
 24162                           ;incstack = 0
 24163  018076  8AD2               	bsf	210,5,c	;volatile
 24164                           
 24165                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 24166  018078  AED2               	btfss	16338,7,c	;volatile
 24167  01807A  D003               	goto	u8360
 24168  01807C  6A40               	clrf	(btemp+11)^0,c
 24169  01807E  2A40               	incf	(btemp+11)^0,f,c
 24170  018080  D001               	goto	u8378
 24171  018082                     u8360:
 24172  018082  6A40               	clrf	(btemp+11)^0,c
 24173  018084                     u8378:
 24174                           
 24175                           ;stkvar	_state @ sp[(-1)+0]
 24176  018084  0EFF               	movlw	-1
 24177  018086  0060  F103  FFE3   	movff	btemp+11,plusw1
 24178                           
 24179                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 24180  01808C  9ED2               	bcf	16338,7,c	;volatile
 24181                           
 24182                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 24183  01808E  0E55               	movlw	85
 24184  018090  6ED4               	movwf	212,c	;volatile
 24185                           
 24186                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 24187  018092  0EAA               	movlw	170
 24188  018094  6ED4               	movwf	212,c	;volatile
 24189                           
 24190                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 24191  018096  90D4               	bcf	212,0,c	;volatile
 24192                           
 24193                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 24194  018098  0138               	movlb	56	; () banked
 24195  01809A  6B9F               	clrf	159,b	;volatile
 24196                           
 24197                           ; BSR set to: 56
 24198                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 24199  01809C  6B9E               	clrf	158,b	;volatile
 24200                           
 24201                           ; BSR set to: 56
 24202                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 24203  01809E  0E08               	movlw	8
 24204  0180A0  6F9D               	movwf	157,b	;volatile
 24205                           
 24206                           ; BSR set to: 56
 24207                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 24208  0180A2  0E55               	movlw	85
 24209  0180A4  6ED4               	movwf	212,c	;volatile
 24210                           
 24211                           ; BSR set to: 56
 24212                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 24213  0180A6  0EAA               	movlw	170
 24214  0180A8  6ED4               	movwf	212,c	;volatile
 24215                           
 24216                           ; BSR set to: 56
 24217                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 24218  0180AA  80D4               	bsf	212,0,c	;volatile
 24219                           
 24220                           ; BSR set to: 56
 24221                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 24222                           ;stkvar	_state @ sp[(-1)+0]
 24223  0180AC  0EFF               	movlw	-1
 24224  0180AE  B0E3               	btfsc	plusw1,0,c
 24225  0180B0  D002               	bra	u8385
 24226  0180B2  9ED2               	bcf	16338,7,c	;volatile
 24227  0180B4  D001               	bra	u8386
 24228  0180B6                     u8385:
 24229  0180B6  8ED2               	bsf	16338,7,c	;volatile
 24230  0180B8                     u8386:
 24231                           
 24232                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 24233  0180B8  0139               	movlb	57	; () banked
 24234  0180BA  8782               	bsf	130,3,b	;volatile
 24235                           
 24236                           ; BSR set to: 57
 24237                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 24238  0180BC  8382               	bsf	130,1,b	;volatile
 24239                           
 24240                           ; BSR set to: 57
 24241                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 24242  0180BE  8182               	bsf	130,0,b	;volatile
 24243                           
 24244                           ; BSR set to: 57
 24245                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 24246  0180C0  8582               	bsf	130,2,b	;volatile
 24247                           
 24248                           ; BSR set to: 57
 24249                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 24250  0180C2  8786               	bsf	134,3,b	;volatile
 24251                           
 24252                           ; BSR set to: 57
 24253                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 24254  0180C4  8586               	bsf	134,2,b	;volatile
 24255                           
 24256                           ; BSR set to: 57
 24257                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 24258  0180C6  8983               	bsf	131,4,b	;volatile
 24259                           
 24260                           ; BSR set to: 57
 24261                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 24262  0180C8  8783               	bsf	131,3,b	;volatile
 24263                           
 24264                           ; BSR set to: 57
 24265                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 24266  0180CA  8181               	bsf	129,0,b	;volatile
 24267                           
 24268                           ; BSR set to: 57
 24269                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 24270  0180CC  8185               	bsf	133,0,b	;volatile
 24271                           
 24272                           ; BSR set to: 57
 24273                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 24274  0180CE  8189               	bsf	137,0,b	;volatile
 24275                           
 24276                           ; BSR set to: 57
 24277                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 24278  0180D0  9D88               	bcf	136,6,b	;volatile
 24279                           
 24280                           ; BSR set to: 57
 24281                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 24282  0180D2  8581               	bsf	129,2,b	;volatile
 24283                           
 24284                           ; BSR set to: 57
 24285                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 24286  0180D4  8781               	bsf	129,3,b	;volatile
 24287                           
 24288                           ; BSR set to: 57
 24289                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 24290  0180D6  52E5               	movf	postdec1,f,c
 24291  0180D8  0012               	return		;funcret
 24292  0180DA                     __end_of_INTERRUPT_Initialize:
 24293                           	opt callstack 0
 24294                           
 24295 ;; *************** function _FVR_Initialize *****************
 24296 ;; Defined at:
 24297 ;;		line 58 in file "mcc_generated_files/fvr.c"
 24298 ;; Parameters:    Size  Location     Type
 24299 ;;		None
 24300 ;; Auto vars:     Size  Location     Type
 24301 ;;		None
 24302 ;; Return value:  Size  Location     Type
 24303 ;;                  1  [STACK] void 
 24304 ;; Registers used:
 24305 ;;		wreg, status,2
 24306 ;; Tracked objects:
 24307 ;;		On entry : 3F/39
 24308 ;;		On exit  : 3F/3E
 24309 ;;		Unchanged: 0/0
 24310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24315 ;;Total ram usage:        0 bytes
 24316 ;; Hardware stack levels used:    1
 24317 ;; Hardware stack levels required when called:    6
 24318 ;; This function calls:
 24319 ;;		Nothing
 24320 ;; This function is called by:
 24321 ;;		_SYSTEM_Initialize
 24322 ;; This function uses a reentrant model
 24323 ;;
 24324                           
 24325                           	psect	text105
 24326  018F62                     __ptext105:
 24327                           	opt callstack 0
 24328  018F62                     _FVR_Initialize:
 24329                           	opt callstack 23
 24330                           
 24331                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 24332                           
 24333                           ; BSR set to: 57
 24334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24335                           ;incstack = 0
 24336  018F62  0EAF               	movlw	175
 24337  018F64  013E               	movlb	62	; () banked
 24338  018F66  6FC1               	movwf	193,b	;volatile
 24339                           
 24340                           ; BSR set to: 62
 24341                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24342  018F68  0012               	return		;funcret
 24343  018F6A                     __end_of_FVR_Initialize:
 24344                           	opt callstack 0
 24345                           
 24346 ;; *************** function _EXT_INT_Initialize *****************
 24347 ;; Defined at:
 24348 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 24349 ;; Parameters:    Size  Location     Type
 24350 ;;		None
 24351 ;; Auto vars:     Size  Location     Type
 24352 ;;		None
 24353 ;; Return value:  Size  Location     Type
 24354 ;;                  1  [STACK] void 
 24355 ;; Registers used:
 24356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24357 ;; Tracked objects:
 24358 ;;		On entry : 3F/39
 24359 ;;		On exit  : 3F/39
 24360 ;;		Unchanged: 0/0
 24361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24366 ;;Total ram usage:        0 bytes
 24367 ;; Hardware stack levels used:    1
 24368 ;; Hardware stack levels required when called:    7
 24369 ;; This function calls:
 24370 ;;		_INT0_SetInterruptHandler
 24371 ;;		_INT1_SetInterruptHandler
 24372 ;; This function is called by:
 24373 ;;		_SYSTEM_Initialize
 24374 ;; This function uses a reentrant model
 24375 ;;
 24376                           
 24377                           	psect	text106
 24378  018810                     __ptext106:
 24379                           	opt callstack 0
 24380  018810                     _EXT_INT_Initialize:
 24381                           	opt callstack 22
 24382                           
 24383                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 24384                           
 24385                           ; BSR set to: 62
 24386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24387                           ;incstack = 0
 24388  018810  0139               	movlb	57	; () banked
 24389  018812  91A1               	bcf	161,0,b	;volatile
 24390                           
 24391                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 24392  018814  90D2               	bcf	210,0,c	;volatile
 24393                           
 24394                           ; BSR set to: 57
 24395                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 24396  018816  0E82               	movlw	low _INT0_DefaultInterruptHandler
 24397  018818  6EE6               	movwf	postinc1,c
 24398  01881A  0E8F               	movlw	high _INT0_DefaultInterruptHandler
 24399  01881C  6EE6               	movwf	postinc1,c
 24400  01881E  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 24401  018820  6EE6               	movwf	postinc1,c
 24402  018822  EC8A  F0C5         	call	_INT0_SetInterruptHandler	;wreg free
 24403                           
 24404                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 24405  018826  0139               	movlb	57	; () banked
 24406  018828  8191               	bsf	145,0,b	;volatile
 24407                           
 24408                           ; BSR set to: 57
 24409                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 24410  01882A  91A5               	bcf	165,0,b	;volatile
 24411                           
 24412                           ; BSR set to: 57
 24413                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 24414  01882C  92D2               	bcf	210,1,c	;volatile
 24415                           
 24416                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 24417  01882E  0E84               	movlw	low _INT1_DefaultInterruptHandler
 24418  018830  6EE6               	movwf	postinc1,c
 24419  018832  0E8F               	movlw	high _INT1_DefaultInterruptHandler
 24420  018834  6EE6               	movwf	postinc1,c
 24421  018836  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 24422  018838  6EE6               	movwf	postinc1,c
 24423  01883A  EC76  F0C5         	call	_INT1_SetInterruptHandler	;wreg free
 24424                           
 24425                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 24426  01883E  0139               	movlb	57	; () banked
 24427  018840  8195               	bsf	149,0,b	;volatile
 24428                           
 24429                           ; BSR set to: 57
 24430                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24431  018842  0012               	return		;funcret
 24432  018844                     __end_of_EXT_INT_Initialize:
 24433                           	opt callstack 0
 24434                           
 24435 ;; *************** function _INT1_SetInterruptHandler *****************
 24436 ;; Defined at:
 24437 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 24438 ;; Parameters:    Size  Location     Type
 24439 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24440 ;;		 -> INT1_DefaultInterruptHandler(1), 
 24441 ;; Auto vars:     Size  Location     Type
 24442 ;;		None
 24443 ;; Return value:  Size  Location     Type
 24444 ;;                  1  [STACK] void 
 24445 ;; Registers used:
 24446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24447 ;; Tracked objects:
 24448 ;;		On entry : 3F/39
 24449 ;;		On exit  : 0/0
 24450 ;;		Unchanged: 0/0
 24451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24456 ;;Total ram usage:        0 bytes
 24457 ;; Hardware stack levels used:    1
 24458 ;; Hardware stack levels required when called:    6
 24459 ;; This function calls:
 24460 ;;		Nothing
 24461 ;; This function is called by:
 24462 ;;		_EXT_INT_Initialize
 24463 ;; This function uses a reentrant model
 24464 ;;
 24465                           
 24466                           	psect	text107
 24467  018AEC                     __ptext107:
 24468                           	opt callstack 0
 24469  018AEC                     _INT1_SetInterruptHandler:
 24470                           	opt callstack 22
 24471                           
 24472                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 24473                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24474                           
 24475                           ; BSR set to: 57
 24476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24477                           ;incstack = 0
 24478  018AEC  50E1               	movf	fsr1l,w,c
 24479  018AEE  0FFD               	addlw	-3
 24480  018AF0  6ED9               	movwf	fsr2l,c
 24481  018AF2  50E2               	movf	fsr1h,w,c
 24482  018AF4  6EDA               	movwf	fsr2h,c
 24483  018AF6  0EFF               	movlw	255
 24484  018AF8  22DA               	addwfc	fsr2h,f,c
 24485  018AFA  006F FF78  F016    	movff	postinc2,_INT1_InterruptHandler
 24486  018B00  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler+1
 24487  018B06  006F FF74  F018    	movff	postdec2,_INT1_InterruptHandler+2
 24488                           
 24489                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24490  018B0C  52E5               	movf	postdec1,f,c
 24491  018B0E  52E5               	movf	postdec1,f,c
 24492  018B10  52E5               	movf	postdec1,f,c
 24493  018B12  0012               	return		;funcret
 24494  018B14                     __end_of_INT1_SetInterruptHandler:
 24495                           	opt callstack 0
 24496                           
 24497 ;; *************** function _INT0_SetInterruptHandler *****************
 24498 ;; Defined at:
 24499 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 24500 ;; Parameters:    Size  Location     Type
 24501 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24502 ;;		 -> INT0_DefaultInterruptHandler(1), 
 24503 ;; Auto vars:     Size  Location     Type
 24504 ;;		None
 24505 ;; Return value:  Size  Location     Type
 24506 ;;                  1  [STACK] void 
 24507 ;; Registers used:
 24508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24509 ;; Tracked objects:
 24510 ;;		On entry : 3F/39
 24511 ;;		On exit  : 0/0
 24512 ;;		Unchanged: 0/0
 24513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24518 ;;Total ram usage:        0 bytes
 24519 ;; Hardware stack levels used:    1
 24520 ;; Hardware stack levels required when called:    6
 24521 ;; This function calls:
 24522 ;;		Nothing
 24523 ;; This function is called by:
 24524 ;;		_EXT_INT_Initialize
 24525 ;; This function uses a reentrant model
 24526 ;;
 24527                           
 24528                           	psect	text108
 24529  018B14                     __ptext108:
 24530                           	opt callstack 0
 24531  018B14                     _INT0_SetInterruptHandler:
 24532                           	opt callstack 22
 24533                           
 24534                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 24535                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24536                           
 24537                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24538                           ;incstack = 0
 24539  018B14  50E1               	movf	fsr1l,w,c
 24540  018B16  0FFD               	addlw	-3
 24541  018B18  6ED9               	movwf	fsr2l,c
 24542  018B1A  50E2               	movf	fsr1h,w,c
 24543  018B1C  6EDA               	movwf	fsr2h,c
 24544  018B1E  0EFF               	movlw	255
 24545  018B20  22DA               	addwfc	fsr2h,f,c
 24546  018B22  006F FF78  F019    	movff	postinc2,_INT0_InterruptHandler
 24547  018B28  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler+1
 24548  018B2E  006F FF74  F01B    	movff	postdec2,_INT0_InterruptHandler+2
 24549                           
 24550                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24551  018B34  52E5               	movf	postdec1,f,c
 24552  018B36  52E5               	movf	postdec1,f,c
 24553  018B38  52E5               	movf	postdec1,f,c
 24554  018B3A  0012               	return		;funcret
 24555  018B3C                     __end_of_INT0_SetInterruptHandler:
 24556                           	opt callstack 0
 24557                           
 24558 ;; *************** function _DMA2_Initialize *****************
 24559 ;; Defined at:
 24560 ;;		line 61 in file "mcc_generated_files/dma2.c"
 24561 ;; Parameters:    Size  Location     Type
 24562 ;;		None
 24563 ;; Auto vars:     Size  Location     Type
 24564 ;;		None
 24565 ;; Return value:  Size  Location     Type
 24566 ;;                  1  [STACK] void 
 24567 ;; Registers used:
 24568 ;;		wreg, status,2
 24569 ;; Tracked objects:
 24570 ;;		On entry : 3F/3D
 24571 ;;		On exit  : 3F/3B
 24572 ;;		Unchanged: 0/0
 24573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24578 ;;Total ram usage:        0 bytes
 24579 ;; Hardware stack levels used:    1
 24580 ;; Hardware stack levels required when called:    6
 24581 ;; This function calls:
 24582 ;;		Nothing
 24583 ;; This function is called by:
 24584 ;;		_SYSTEM_Initialize
 24585 ;; This function uses a reentrant model
 24586 ;;
 24587                           
 24588                           	psect	text109
 24589  018316                     __ptext109:
 24590                           	opt callstack 0
 24591  018316                     _DMA2_Initialize:
 24592                           	opt callstack 23
 24593                           
 24594                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 24595                           
 24596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24597                           ;incstack = 0
 24598  018316  0E00               	movlw	0
 24599  018318  013B               	movlb	59	; () banked
 24600  01831A  6FD9               	movwf	217,b	;volatile
 24601  01831C  0E10               	movlw	16
 24602  01831E  6FDA               	movwf	218,b	;volatile
 24603  018320  0E00               	movlw	0
 24604  018322  6FDB               	movwf	219,b	;volatile
 24605                           
 24606                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 24607  018324  0E3F               	movlw	63
 24608  018326  6FD1               	movwf	209,b	;volatile
 24609  018328  0EBB               	movlw	187
 24610  01832A  6FD0               	movwf	208,b	;volatile
 24611                           
 24612                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 24613  01832C  0E03               	movlw	3
 24614  01832E  6FDD               	movwf	221,b	;volatile
 24615                           
 24616                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 24617  018330  0E00               	movlw	0
 24618  018332  6FD8               	movwf	216,b	;volatile
 24619  018334  0E01               	movlw	1
 24620  018336  6FD7               	movwf	215,b	;volatile
 24621                           
 24622                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 24623  018338  0E00               	movlw	0
 24624  01833A  6FCF               	movwf	207,b	;volatile
 24625  01833C  0E01               	movlw	1
 24626  01833E  6FCE               	movwf	206,b	;volatile
 24627                           
 24628                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 24629  018340  0E46               	movlw	70
 24630  018342  6FDF               	movwf	223,b	;volatile
 24631                           
 24632                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 24633  018344  0E3D               	movlw	61
 24634  018346  6FDE               	movwf	222,b	;volatile
 24635                           
 24636                           ; BSR set to: 59
 24637                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 24638  018348  0139               	movlb	57	; () banked
 24639  01834A  97A5               	bcf	165,3,b	;volatile
 24640                           
 24641                           ; BSR set to: 57
 24642                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 24643  01834C  95A5               	bcf	165,2,b	;volatile
 24644                           
 24645                           ; BSR set to: 57
 24646                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 24647  01834E  9BA5               	bcf	165,5,b	;volatile
 24648                           
 24649                           ; BSR set to: 57
 24650                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 24651  018350  99A5               	bcf	165,4,b	;volatile
 24652                           
 24653                           ; BSR set to: 57
 24654                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 24655  018352  9795               	bcf	149,3,b	;volatile
 24656                           
 24657                           ; BSR set to: 57
 24658                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 24659  018354  9595               	bcf	149,2,b	;volatile
 24660                           
 24661                           ; BSR set to: 57
 24662                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 24663  018356  9B95               	bcf	149,5,b	;volatile
 24664                           
 24665                           ; BSR set to: 57
 24666                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 24667  018358  9995               	bcf	149,4,b	;volatile
 24668  01835A  9ED2               	bcf	16338,7,c	;# 
 24669  01835C  0139               	banksel	14831	;# 
 24670  01835E  0E55               	movlw	85	;# 
 24671  018360  6FEF               	movwf	14831,b	;# 
 24672  018362  0EAA               	movlw	170	;# 
 24673  018364  6FEF               	movwf	14831,b	;# 
 24674  018366  81EF               	bsf	14831,0,b	;# 
 24675  018368  8ED2               	bsf	16338,7,c	;# 
 24676                           
 24677                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 24678  01836A  013B               	movlb	59	; () banked
 24679  01836C  6BDC               	clrf	220,b	;volatile
 24680                           
 24681                           ; BSR set to: 59
 24682                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24683  01836E  0012               	return		;funcret
 24684  018370                     __end_of_DMA2_Initialize:
 24685                           	opt callstack 0
 24686                           
 24687 ;; *************** function _DMA1_Initialize *****************
 24688 ;; Defined at:
 24689 ;;		line 86 in file "mcc_generated_files/dma1.c"
 24690 ;; Parameters:    Size  Location     Type
 24691 ;;		None
 24692 ;; Auto vars:     Size  Location     Type
 24693 ;;		None
 24694 ;; Return value:  Size  Location     Type
 24695 ;;                  1  [STACK] void 
 24696 ;; Registers used:
 24697 ;;		wreg, status,2
 24698 ;; Tracked objects:
 24699 ;;		On entry : 3F/3B
 24700 ;;		On exit  : 3F/3B
 24701 ;;		Unchanged: 0/0
 24702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24707 ;;Total ram usage:        0 bytes
 24708 ;; Hardware stack levels used:    1
 24709 ;; Hardware stack levels required when called:    6
 24710 ;; This function calls:
 24711 ;;		Nothing
 24712 ;; This function is called by:
 24713 ;;		_SYSTEM_Initialize
 24714 ;; This function uses a reentrant model
 24715 ;;
 24716                           
 24717                           	psect	text110
 24718  017ED0                     __ptext110:
 24719                           	opt callstack 0
 24720  017ED0                     _DMA1_Initialize:
 24721                           	opt callstack 23
 24722                           
 24723                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 24724                           
 24725                           ; BSR set to: 59
 24726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24727                           ;incstack = 0
 24728  017ED0  0E00               	movlw	0
 24729  017ED2  013B               	movlb	59	; () banked
 24730  017ED4  6FF9               	movwf	249,b	;volatile
 24731  017ED6  0E10               	movlw	16
 24732  017ED8  6FFA               	movwf	250,b	;volatile
 24733  017EDA  0E00               	movlw	0
 24734  017EDC  6FFB               	movwf	251,b	;volatile
 24735                           
 24736                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 24737  017EDE  0E3D               	movlw	61
 24738  017EE0  6FF1               	movwf	241,b	;volatile
 24739  017EE2  0E11               	movlw	17
 24740  017EE4  6FF0               	movwf	240,b	;volatile
 24741                           
 24742                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 24743  017EE6  0E03               	movlw	3
 24744  017EE8  6FFD               	movwf	253,b	;volatile
 24745                           
 24746                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 24747  017EEA  0E00               	movlw	0
 24748  017EEC  6FF8               	movwf	248,b	;volatile
 24749  017EEE  0E01               	movlw	1
 24750  017EF0  6FF7               	movwf	247,b	;volatile
 24751                           
 24752                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 24753  017EF2  0E00               	movlw	0
 24754  017EF4  6FEF               	movwf	239,b	;volatile
 24755  017EF6  0E01               	movlw	1
 24756  017EF8  6FEE               	movwf	238,b	;volatile
 24757                           
 24758                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 24759  017EFA  0E15               	movlw	21
 24760  017EFC  6FFF               	movwf	255,b	;volatile
 24761                           
 24762                           ; BSR set to: 59
 24763                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 24764  017EFE  6BFE               	clrf	254,b	;volatile
 24765                           
 24766                           ; BSR set to: 59
 24767                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 24768  017F00  0139               	movlb	57	; () banked
 24769  017F02  93A2               	bcf	162,1,b	;volatile
 24770                           
 24771                           ; BSR set to: 57
 24772                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 24773  017F04  91A2               	bcf	162,0,b	;volatile
 24774                           
 24775                           ; BSR set to: 57
 24776                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 24777  017F06  97A2               	bcf	162,3,b	;volatile
 24778                           
 24779                           ; BSR set to: 57
 24780                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 24781  017F08  95A2               	bcf	162,2,b	;volatile
 24782                           
 24783                           ; BSR set to: 57
 24784                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 24785  017F0A  8392               	bsf	146,1,b	;volatile
 24786                           
 24787                           ; BSR set to: 57
 24788                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 24789  017F0C  8192               	bsf	146,0,b	;volatile
 24790                           
 24791                           ; BSR set to: 57
 24792                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 24793  017F0E  8792               	bsf	146,3,b	;volatile
 24794                           
 24795                           ; BSR set to: 57
 24796                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 24797  017F10  8592               	bsf	146,2,b	;volatile
 24798                           
 24799                           ; BSR set to: 57
 24800                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 24801  017F12  6BF1               	clrf	241,b	;volatile
 24802                           
 24803                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 24804  017F14  0E01               	movlw	1
 24805  017F16  6FF2               	movwf	242,b	;volatile
 24806                           
 24807                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 24808  017F18  0E04               	movlw	4
 24809  017F1A  6FF3               	movwf	243,b	;volatile
 24810                           
 24811                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 24812  017F1C  0E02               	movlw	2
 24813  017F1E  6FF4               	movwf	244,b	;volatile
 24814                           
 24815                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 24816  017F20  0E03               	movlw	3
 24817  017F22  6FF7               	movwf	247,b	;volatile
 24818  017F24  9ED2               	bcf	16338,7,c	;# 
 24819  017F26  0139               	banksel	14831	;# 
 24820  017F28  0E55               	movlw	85	;# 
 24821  017F2A  6FEF               	movwf	14831,b	;# 
 24822  017F2C  0EAA               	movlw	170	;# 
 24823  017F2E  6FEF               	movwf	14831,b	;# 
 24824  017F30  81EF               	bsf	14831,0,b	;# 
 24825  017F32  8ED2               	bsf	16338,7,c	;# 
 24826                           
 24827                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 24828  017F34  013B               	movlb	59	; () banked
 24829  017F36  6BFC               	clrf	252,b	;volatile
 24830                           
 24831                           ; BSR set to: 59
 24832                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24833  017F38  0012               	return		;funcret
 24834  017F3A                     __end_of_DMA1_Initialize:
 24835                           	opt callstack 0
 24836                           
 24837 ;; *************** function _CLKREF_Initialize *****************
 24838 ;; Defined at:
 24839 ;;		line 58 in file "mcc_generated_files/clkref.c"
 24840 ;; Parameters:    Size  Location     Type
 24841 ;;		None
 24842 ;; Auto vars:     Size  Location     Type
 24843 ;;		None
 24844 ;; Return value:  Size  Location     Type
 24845 ;;                  1  [STACK] void 
 24846 ;; Registers used:
 24847 ;;		wreg, status,2
 24848 ;; Tracked objects:
 24849 ;;		On entry : 3F/3B
 24850 ;;		On exit  : 3F/3C
 24851 ;;		Unchanged: 0/0
 24852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24857 ;;Total ram usage:        0 bytes
 24858 ;; Hardware stack levels used:    1
 24859 ;; Hardware stack levels required when called:    6
 24860 ;; This function calls:
 24861 ;;		Nothing
 24862 ;; This function is called by:
 24863 ;;		_SYSTEM_Initialize
 24864 ;; This function uses a reentrant model
 24865 ;;
 24866                           
 24867                           	psect	text111
 24868  018F16                     __ptext111:
 24869                           	opt callstack 0
 24870  018F16                     _CLKREF_Initialize:
 24871                           	opt callstack 23
 24872                           
 24873                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 24874                           
 24875                           ; BSR set to: 59
 24876                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24877                           ;incstack = 0
 24878  018F16  013C               	movlb	60	; () banked
 24879  018F18  6BE6               	clrf	230,b	;volatile
 24880                           
 24881                           ; BSR set to: 60
 24882                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 24883  018F1A  0E94               	movlw	148
 24884  018F1C  6FE5               	movwf	229,b	;volatile
 24885                           
 24886                           ; BSR set to: 60
 24887                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24888  018F1E  0012               	return		;funcret
 24889  018F20                     __end_of_CLKREF_Initialize:
 24890                           	opt callstack 0
 24891                           
 24892 ;; *************** function _ADCC_Initialize *****************
 24893 ;; Defined at:
 24894 ;;		line 65 in file "mcc_generated_files/adcc.c"
 24895 ;; Parameters:    Size  Location     Type
 24896 ;;		None
 24897 ;; Auto vars:     Size  Location     Type
 24898 ;;		None
 24899 ;; Return value:  Size  Location     Type
 24900 ;;                  1  [STACK] void 
 24901 ;; Registers used:
 24902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24903 ;; Tracked objects:
 24904 ;;		On entry : 3F/3E
 24905 ;;		On exit  : 0/0
 24906 ;;		Unchanged: 0/0
 24907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24912 ;;Total ram usage:        0 bytes
 24913 ;; Hardware stack levels used:    1
 24914 ;; Hardware stack levels required when called:    7
 24915 ;; This function calls:
 24916 ;;		_ADCC_SetADIInterruptHandler
 24917 ;;		_ADCC_SetADTIInterruptHandler
 24918 ;; This function is called by:
 24919 ;;		_SYSTEM_Initialize
 24920 ;; This function uses a reentrant model
 24921 ;;
 24922                           
 24923                           	psect	text112
 24924  017F3A                     __ptext112:
 24925                           	opt callstack 0
 24926  017F3A                     _ADCC_Initialize:
 24927                           	opt callstack 22
 24928                           
 24929                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 24930                           
 24931                           ; BSR set to: 60
 24932                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24933                           ;incstack = 0
 24934  017F3A  013E               	movlb	62	; () banked
 24935  017F3C  6BDE               	clrf	222,b	;volatile
 24936                           
 24937                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 24938  017F3E  6BDF               	clrf	223,b	;volatile
 24939                           
 24940                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 24941  017F40  6BE0               	clrf	224,b	;volatile
 24942                           
 24943                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 24944  017F42  6BE1               	clrf	225,b	;volatile
 24945                           
 24946                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 24947  017F44  6BE4               	clrf	228,b	;volatile
 24948                           
 24949                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 24950  017F46  6BE5               	clrf	229,b	;volatile
 24951                           
 24952                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 24953  017F48  6BEA               	clrf	234,b	;volatile
 24954                           
 24955                           ; BSR set to: 62
 24956                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 24957  017F4A  0E40               	movlw	64
 24958  017F4C  6FEC               	movwf	236,b	;volatile
 24959                           
 24960                           ; BSR set to: 62
 24961                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 24962  017F4E  6BF1               	clrf	241,b	;volatile
 24963                           
 24964                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 24965  017F50  0E20               	movlw	32
 24966  017F52  6FF3               	movwf	243,b	;volatile
 24967                           
 24968                           ; BSR set to: 62
 24969                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 24970  017F54  6BF4               	clrf	244,b	;volatile
 24971                           
 24972                           ; BSR set to: 62
 24973                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 24974  017F56  6BF5               	clrf	245,b	;volatile
 24975                           
 24976                           ; BSR set to: 62
 24977                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 24978  017F58  6BF6               	clrf	246,b	;volatile
 24979                           
 24980                           ; BSR set to: 62
 24981                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 24982  017F5A  6BF7               	clrf	247,b	;volatile
 24983                           
 24984                           ; BSR set to: 62
 24985                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 24986  017F5C  6BF9               	clrf	249,b	;volatile
 24987                           
 24988                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 24989  017F5E  0E5B               	movlw	91
 24990  017F60  6FFA               	movwf	250,b	;volatile
 24991                           
 24992                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 24993  017F62  0E27               	movlw	39
 24994  017F64  6FFB               	movwf	251,b	;volatile
 24995                           
 24996                           ; BSR set to: 62
 24997                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 24998  017F66  6BFC               	clrf	252,b	;volatile
 24999                           
 25000                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 25001  017F68  0E02               	movlw	2
 25002  017F6A  6FFD               	movwf	253,b	;volatile
 25003                           
 25004                           ; BSR set to: 62
 25005                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 25006  017F6C  6BFE               	clrf	254,b	;volatile
 25007                           
 25008                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 25009  017F6E  0E07               	movlw	7
 25010  017F70  6FFF               	movwf	255,b	;volatile
 25011                           
 25012                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 25013  017F72  0E84               	movlw	132
 25014  017F74  6FF8               	movwf	248,b	;volatile
 25015                           
 25016                           ; BSR set to: 62
 25017                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 25018  017F76  0139               	movlb	57	; () banked
 25019  017F78  95A1               	bcf	161,2,b	;volatile
 25020                           
 25021                           ; BSR set to: 57
 25022                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 25023  017F7A  8591               	bsf	145,2,b	;volatile
 25024                           
 25025                           ; BSR set to: 57
 25026                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 25027  017F7C  0E86               	movlw	low _ADCC_DefaultInterruptHandler
 25028  017F7E  6EE6               	movwf	postinc1,c
 25029  017F80  0E8F               	movlw	high _ADCC_DefaultInterruptHandler
 25030  017F82  6EE6               	movwf	postinc1,c
 25031  017F84  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25032  017F86  6EE6               	movwf	postinc1,c
 25033  017F88  ECB2  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
 25034                           
 25035                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 25036  017F8C  0139               	movlb	57	; () banked
 25037  017F8E  97A1               	bcf	161,3,b	;volatile
 25038                           
 25039                           ; BSR set to: 57
 25040                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 25041  017F90  8791               	bsf	145,3,b	;volatile
 25042                           
 25043                           ; BSR set to: 57
 25044                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 25045  017F92  0E86               	movlw	low _ADCC_DefaultInterruptHandler
 25046  017F94  6EE6               	movwf	postinc1,c
 25047  017F96  0E8F               	movlw	high _ADCC_DefaultInterruptHandler
 25048  017F98  6EE6               	movwf	postinc1,c
 25049  017F9A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25050  017F9C  6EE6               	movwf	postinc1,c
 25051  017F9E  EC9E  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 25052                           
 25053                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25054  017FA2  0012               	return		;funcret
 25055  017FA4                     __end_of_ADCC_Initialize:
 25056                           	opt callstack 0
 25057                           
 25058 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 25059 ;; Defined at:
 25060 ;;		line 336 in file "mcc_generated_files/adcc.c"
 25061 ;; Parameters:    Size  Location     Type
 25062 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25063 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 25064 ;; Auto vars:     Size  Location     Type
 25065 ;;		None
 25066 ;; Return value:  Size  Location     Type
 25067 ;;                  1  [STACK] void 
 25068 ;; Registers used:
 25069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25070 ;; Tracked objects:
 25071 ;;		On entry : 0/0
 25072 ;;		On exit  : 0/0
 25073 ;;		Unchanged: 0/0
 25074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25079 ;;Total ram usage:        0 bytes
 25080 ;; Hardware stack levels used:    1
 25081 ;; Hardware stack levels required when called:    6
 25082 ;; This function calls:
 25083 ;;		Nothing
 25084 ;; This function is called by:
 25085 ;;		_ADCC_Initialize
 25086 ;;		_start_adc_scan
 25087 ;; This function uses a reentrant model
 25088 ;;
 25089                           
 25090                           	psect	text113
 25091  018B3C                     __ptext113:
 25092                           	opt callstack 0
 25093  018B3C                     _ADCC_SetADTIInterruptHandler:
 25094                           	opt callstack 23
 25095                           
 25096                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 25097                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25098                           
 25099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25100                           ;incstack = 0
 25101  018B3C  50E1               	movf	fsr1l,w,c
 25102  018B3E  0FFD               	addlw	-3
 25103  018B40  6ED9               	movwf	fsr2l,c
 25104  018B42  50E2               	movf	fsr1h,w,c
 25105  018B44  6EDA               	movwf	fsr2h,c
 25106  018B46  0EFF               	movlw	255
 25107  018B48  22DA               	addwfc	fsr2h,f,c
 25108  018B4A  006F FF78  F004    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 25109  018B50  006F FF78  F005    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 25110  018B56  006F FF74  F006    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 25111                           
 25112                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 25113  018B5C  52E5               	movf	postdec1,f,c
 25114  018B5E  52E5               	movf	postdec1,f,c
 25115  018B60  52E5               	movf	postdec1,f,c
 25116  018B62  0012               	return		;funcret
 25117  018B64                     __end_of_ADCC_SetADTIInterruptHandler:
 25118                           	opt callstack 0
 25119                           
 25120 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 25121 ;; Defined at:
 25122 ;;		line 323 in file "mcc_generated_files/adcc.c"
 25123 ;; Parameters:    Size  Location     Type
 25124 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25125 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 25126 ;; Auto vars:     Size  Location     Type
 25127 ;;		None
 25128 ;; Return value:  Size  Location     Type
 25129 ;;                  1  [STACK] void 
 25130 ;; Registers used:
 25131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25132 ;; Tracked objects:
 25133 ;;		On entry : 6/0
 25134 ;;		On exit  : 0/0
 25135 ;;		Unchanged: 0/0
 25136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25141 ;;Total ram usage:        0 bytes
 25142 ;; Hardware stack levels used:    1
 25143 ;; Hardware stack levels required when called:    6
 25144 ;; This function calls:
 25145 ;;		Nothing
 25146 ;; This function is called by:
 25147 ;;		_ADCC_Initialize
 25148 ;;		_start_adc_scan
 25149 ;; This function uses a reentrant model
 25150 ;;
 25151                           
 25152                           	psect	text114
 25153  018B64                     __ptext114:
 25154                           	opt callstack 0
 25155  018B64                     _ADCC_SetADIInterruptHandler:
 25156                           	opt callstack 23
 25157                           
 25158                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 25159                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25160                           
 25161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25162                           ;incstack = 0
 25163  018B64  50E1               	movf	fsr1l,w,c
 25164  018B66  0FFD               	addlw	-3
 25165  018B68  6ED9               	movwf	fsr2l,c
 25166  018B6A  50E2               	movf	fsr1h,w,c
 25167  018B6C  6EDA               	movwf	fsr2h,c
 25168  018B6E  0EFF               	movlw	255
 25169  018B70  22DA               	addwfc	fsr2h,f,c
 25170  018B72  006F FF78  F007    	movff	postinc2,_ADCC_ADI_InterruptHandler
 25171  018B78  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 25172  018B7E  006F FF74  F009    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 25173                           
 25174                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25175  018B84  52E5               	movf	postdec1,f,c
 25176  018B86  52E5               	movf	postdec1,f,c
 25177  018B88  52E5               	movf	postdec1,f,c
 25178  018B8A  0012               	return		;funcret
 25179  018B8C                     __end_of_ADCC_SetADIInterruptHandler:
 25180                           	opt callstack 0
 25181                           
 25182 ;; *************** function _TMR5_ISR *****************
 25183 ;; Defined at:
 25184 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 25185 ;; Parameters:    Size  Location     Type
 25186 ;;		None
 25187 ;; Auto vars:     Size  Location     Type
 25188 ;;		None
 25189 ;; Return value:  Size  Location     Type
 25190 ;;                  1    wreg      void 
 25191 ;; Registers used:
 25192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 25193 ;; Tracked objects:
 25194 ;;		On entry : 0/0
 25195 ;;		On exit  : 0/0
 25196 ;;		Unchanged: 0/0
 25197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25200 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25201 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25202 ;;Total ram usage:        4 bytes
 25203 ;; Hardware stack levels used:    1
 25204 ;; Hardware stack levels required when called:    5
 25205 ;; This function calls:
 25206 ;;		_TMR5_CallBack
 25207 ;;		_TMR5_WriteTimer
 25208 ;; This function is called by:
 25209 ;;		Interrupt level 1
 25210 ;; This function uses a non-reentrant model
 25211 ;;
 25212                           
 25213                           	psect	text115
 25214  018260                     __ptext115:
 25215                           	opt callstack 0
 25216  018260                     _TMR5_ISR:
 25217                           	opt callstack 12
 25218                           
 25219                           ;incstack = 0
 25220  018260  006F FF60  F0E9    	movff	status,??_TMR5_ISR+2
 25221  018266  0060  F100  F0EA   	movff	btemp+11,??_TMR5_ISR+3
 25222  01826C  EE15  F3AB         	lfsr	1,___intlo_sp
 25223                           
 25224                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 25225  018270  0139               	movlb	57	; () banked
 25226  018272  9DA8               	bcf	168,6,b	;volatile
 25227                           
 25228                           ; BSR set to: 57
 25229                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 25230  018274  0060  F09B  FFE6   	movff	_timer5ReloadVal,postinc1
 25231  01827A  0060  F09F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 25232  018280  EC42  F0C3         	call	_TMR5_WriteTimer	;wreg free
 25233                           
 25234                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 25235  018284  0101               	movlb	1	; () banked
 25236  018286  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 25237  018288  0100               	movlb	0	; () banked
 25238  01828A  6FE7               	movwf	??_TMR5_ISR& (0+255),b
 25239  01828C  6BE8               	clrf	(??_TMR5_ISR+1)& (0+255),b
 25240  01828E  0E05               	movlw	5
 25241  018290  27E7               	addwf	??_TMR5_ISR& (0+255),f,b
 25242  018292  0E00               	movlw	0
 25243  018294  23E8               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 25244  018296  4A24               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 25245  018298  2A25               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 25246  01829A  51E7               	movf	??_TMR5_ISR& (0+255),w,b
 25247  01829C  5C24               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 25248  01829E  51E8               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 25249  0182A0  5825               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 25250  0182A2  A0D8               	btfss	status,0,c
 25251  0182A4  D004               	goto	i1l1045
 25252                           
 25253                           ; BSR set to: 0
 25254                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 25255  0182A6  EC3B  F0C6         	call	_TMR5_CallBack	;wreg free
 25256                           
 25257                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 25258  0182AA  6A24               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 25259  0182AC  6A25               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 25260  0182AE                     i1l1045:
 25261  0182AE  0060  F3A8  F040   	movff	??_TMR5_ISR+3,btemp+11
 25262  0182B4  0060  F3A7  FFD8   	movff	??_TMR5_ISR+2,status
 25263  0182BA  0011               	retfie		f
 25264  0182BC                     __end_of_TMR5_ISR:
 25265                           	opt callstack 0
 25266                           
 25267 ;; *************** function _TMR5_WriteTimer *****************
 25268 ;; Defined at:
 25269 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 25270 ;; Parameters:    Size  Location     Type
 25271 ;;  timerVal        2  [STACK] unsigned short 
 25272 ;; Auto vars:     Size  Location     Type
 25273 ;;		None
 25274 ;; Return value:  Size  Location     Type
 25275 ;;                  1  [STACK] void 
 25276 ;; Registers used:
 25277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25278 ;; Tracked objects:
 25279 ;;		On entry : 3F/39
 25280 ;;		On exit  : 0/0
 25281 ;;		Unchanged: 0/0
 25282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25287 ;;Total ram usage:        0 bytes
 25288 ;; Hardware stack levels used:    1
 25289 ;; Hardware stack levels required when called:    3
 25290 ;; This function calls:
 25291 ;;		Nothing
 25292 ;; This function is called by:
 25293 ;;		_TMR5_ISR
 25294 ;; This function uses a reentrant model
 25295 ;;
 25296                           
 25297                           	psect	text116
 25298  018684                     __ptext116:
 25299                           	opt callstack 0
 25300  018684                     _TMR5_WriteTimer:
 25301                           	opt callstack 13
 25302                           
 25303                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 25304                           
 25305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25306                           ;incstack = 0
 25307  018684  A49A               	btfss	154,2,c	;volatile
 25308  018686  D00F               	goto	l8860
 25309                           
 25310                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 25311  018688  909A               	bcf	154,0,c	;volatile
 25312                           
 25313                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 25314                           ;stkvar	_timerVal @ sp[(0)+-2]
 25315  01868A  0EFF               	movlw	255
 25316  01868C  24E1               	addwf	fsr1l,w,c
 25317  01868E  6ED9               	movwf	fsr2l,c
 25318  018690  0EFF               	movlw	255
 25319  018692  20E2               	addwfc	fsr1h,w,c
 25320  018694  6EDA               	movwf	fsr2h,c
 25321  018696  50DF               	movf	indf2,w,c
 25322  018698  6E99               	movwf	153,c	;volatile
 25323                           
 25324                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 25325                           ;stkvar	_timerVal @ sp[(0)+-2]
 25326  01869A  0EFE               	movlw	-2
 25327  01869C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25328                           
 25329                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 25330  0186A2  809A               	bsf	154,0,c	;volatile
 25331                           
 25332                           ;mcc_generated_files/tmr5.c: 142:  } else {
 25333  0186A4  D00C               	goto	l1028
 25334  0186A6                     l8860:
 25335                           
 25336                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 25337                           ;stkvar	_timerVal @ sp[(0)+-2]
 25338  0186A6  0EFF               	movlw	255
 25339  0186A8  24E1               	addwf	fsr1l,w,c
 25340  0186AA  6ED9               	movwf	fsr2l,c
 25341  0186AC  0EFF               	movlw	255
 25342  0186AE  20E2               	addwfc	fsr1h,w,c
 25343  0186B0  6EDA               	movwf	fsr2h,c
 25344  0186B2  50DF               	movf	indf2,w,c
 25345  0186B4  6E99               	movwf	153,c	;volatile
 25346                           
 25347                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 25348                           ;stkvar	_timerVal @ sp[(0)+-2]
 25349  0186B6  0EFE               	movlw	-2
 25350  0186B8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25351  0186BE                     l1028:
 25352                           
 25353                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25354  0186BE  52E5               	movf	postdec1,f,c
 25355  0186C0  52E5               	movf	postdec1,f,c
 25356  0186C2  0012               	return		;funcret
 25357  0186C4                     __end_of_TMR5_WriteTimer:
 25358                           	opt callstack 0
 25359                           
 25360 ;; *************** function _TMR5_CallBack *****************
 25361 ;; Defined at:
 25362 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 25363 ;; Parameters:    Size  Location     Type
 25364 ;;		None
 25365 ;; Auto vars:     Size  Location     Type
 25366 ;;		None
 25367 ;; Return value:  Size  Location     Type
 25368 ;;                  1  [STACK] void 
 25369 ;; Registers used:
 25370 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25371 ;; Tracked objects:
 25372 ;;		On entry : 3F/0
 25373 ;;		On exit  : 0/0
 25374 ;;		Unchanged: 0/0
 25375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25380 ;;Total ram usage:        0 bytes
 25381 ;; Hardware stack levels used:    1
 25382 ;; Hardware stack levels required when called:    4
 25383 ;; This function calls:
 25384 ;;		Absolute function
 25385 ;;		_TMR5_DefaultInterruptHandler
 25386 ;; This function is called by:
 25387 ;;		_TMR5_ISR
 25388 ;; This function uses a reentrant model
 25389 ;;
 25390                           
 25391                           	psect	text117
 25392  018C76                     __ptext117:
 25393                           	opt callstack 0
 25394  018C76                     _TMR5_CallBack:
 25395                           	opt callstack 12
 25396                           
 25397                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 25398                           
 25399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25400                           ;incstack = 0
 25401  018C76  0100               	movlb	0	; () banked
 25402  018C78  5198               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25403  018C7A  1199               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25404  018C7C  119A               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25405  018C7E  B4D8               	btfsc	status,2,c
 25406  018C80  0012               	return	
 25407                           
 25408                           ; BSR set to: 0
 25409                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 25410  018C82  D801               	call	u874_28
 25411  018C84  0012               	return	
 25412  018C86                     u874_28:
 25413  018C86  0005               	push	
 25414  018C88  6EFA               	movwf	pclath,c
 25415  018C8A  5198               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25416  018C8C  6EFD               	movwf	tosl,c
 25417  018C8E  5199               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25418  018C90  6EFE               	movwf	tosh,c
 25419  018C92  519A               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25420  018C94  6EFF               	movwf	tosu,c
 25421  018C96  50FA               	movf	pclath,w,c
 25422  018C98  0012               	return		;indir
 25423  018C9A                     __end_of_TMR5_CallBack:
 25424                           	opt callstack 0
 25425                           
 25426 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 25427 ;; Defined at:
 25428 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 25429 ;; Parameters:    Size  Location     Type
 25430 ;;		None
 25431 ;; Auto vars:     Size  Location     Type
 25432 ;;		None
 25433 ;; Return value:  Size  Location     Type
 25434 ;;                  1  [STACK] void 
 25435 ;; Registers used:
 25436 ;;		wreg, status,2, status,0, btemp+11
 25437 ;; Tracked objects:
 25438 ;;		On entry : 3F/0
 25439 ;;		On exit  : 3F/1
 25440 ;;		Unchanged: 0/0
 25441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25446 ;;Total ram usage:        0 bytes
 25447 ;; Hardware stack levels used:    1
 25448 ;; Hardware stack levels required when called:    3
 25449 ;; This function calls:
 25450 ;;		Nothing
 25451 ;; This function is called by:
 25452 ;;		_TMR5_Initialize
 25453 ;;		_TMR5_CallBack
 25454 ;; This function uses a reentrant model
 25455 ;;
 25456                           
 25457                           	psect	text118
 25458  018B8C                     __ptext118:
 25459                           	opt callstack 0
 25460  018B8C                     _TMR5_DefaultInterruptHandler:
 25461                           	opt callstack 12
 25462                           
 25463                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 25464                           
 25465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25466                           ;incstack = 0
 25467  018B8C  A0BE               	btfss	190,0,c	;volatile
 25468  018B8E  D002               	goto	u842_20
 25469  018B90  0E01               	movlw	1
 25470  018B92  D001               	goto	u842_26
 25471  018B94                     u842_20:
 25472  018B94  0E00               	movlw	0
 25473  018B96                     u842_26:
 25474  018B96  0AFF               	xorlw	255
 25475  018B98  6E40               	movwf	(btemp+11)^0,c
 25476  018B9A  50BE               	movf	190,w,c	;volatile
 25477  018B9C  1840               	xorwf	(btemp+11)^0,w,c
 25478  018B9E  0BFE               	andlw	-2
 25479  018BA0  1840               	xorwf	(btemp+11)^0,w,c
 25480  018BA2  6EBE               	movwf	190,c	;volatile
 25481                           
 25482                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 25483  018BA4  0E01               	movlw	1
 25484  018BA6  0101               	movlb	1	; () banked
 25485  018BA8  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 25486  018BAA  0E00               	movlw	0
 25487  018BAC  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 25488  018BAE  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 25489  018BB0  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 25490                           
 25491                           ; BSR set to: 1
 25492                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25493  018BB2  0012               	return		;funcret
 25494  018BB4                     __end_of_TMR5_DefaultInterruptHandler:
 25495                           	opt callstack 0
 25496                           
 25497 ;; *************** function _INT0_ISR *****************
 25498 ;; Defined at:
 25499 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 25500 ;; Parameters:    Size  Location     Type
 25501 ;;		None
 25502 ;; Auto vars:     Size  Location     Type
 25503 ;;		None
 25504 ;; Return value:  Size  Location     Type
 25505 ;;                  1    wreg      void 
 25506 ;; Registers used:
 25507 ;;		wreg, status,2, status,0, pclath, tosl
 25508 ;; Tracked objects:
 25509 ;;		On entry : 0/0
 25510 ;;		On exit  : 0/0
 25511 ;;		Unchanged: 0/0
 25512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25517 ;;Total ram usage:        0 bytes
 25518 ;; Hardware stack levels used:    1
 25519 ;; Hardware stack levels required when called:    2
 25520 ;; This function calls:
 25521 ;;		_INT0_CallBack
 25522 ;; This function is called by:
 25523 ;;		Interrupt level 2
 25524 ;; This function uses a non-reentrant model
 25525 ;;
 25526                           
 25527                           	psect	text119
 25528  018EE8                     __ptext119:
 25529                           	opt callstack 0
 25530  018EE8                     _INT0_ISR:
 25531                           	opt callstack 12
 25532                           
 25533                           ; BSR set to: 1
 25534                           ;incstack = 0
 25535  018EE8  EE13  F356         	lfsr	1,___inthi_sp
 25536                           
 25537                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 25538  018EEC  0139               	movlb	57	; () banked
 25539  018EEE  91A1               	bcf	161,0,b	;volatile
 25540                           
 25541                           ; BSR set to: 57
 25542                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 25543  018EF0  EC4D  F0C6         	call	_INT0_CallBack	;wreg free
 25544  018EF4  0011               	retfie		f
 25545  018EF6                     __end_of_INT0_ISR:
 25546                           	opt callstack 0
 25547                           
 25548 ;; *************** function _INT0_CallBack *****************
 25549 ;; Defined at:
 25550 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 25551 ;; Parameters:    Size  Location     Type
 25552 ;;		None
 25553 ;; Auto vars:     Size  Location     Type
 25554 ;;		None
 25555 ;; Return value:  Size  Location     Type
 25556 ;;                  1  [STACK] void 
 25557 ;; Registers used:
 25558 ;;		wreg, status,2, status,0, pclath, tosl
 25559 ;; Tracked objects:
 25560 ;;		On entry : 3F/39
 25561 ;;		On exit  : 0/0
 25562 ;;		Unchanged: 0/0
 25563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25568 ;;Total ram usage:        0 bytes
 25569 ;; Hardware stack levels used:    1
 25570 ;; Hardware stack levels required when called:    1
 25571 ;; This function calls:
 25572 ;;		Absolute function
 25573 ;;		_INT0_DefaultInterruptHandler
 25574 ;; This function is called by:
 25575 ;;		_INT0_ISR
 25576 ;; This function uses a reentrant model
 25577 ;;
 25578                           
 25579                           	psect	text120
 25580  018C9A                     __ptext120:
 25581                           	opt callstack 0
 25582  018C9A                     _INT0_CallBack:
 25583                           	opt callstack 12
 25584                           
 25585                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 25586                           
 25587                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25588                           ;incstack = 0
 25589  018C9A  5019               	movf	_INT0_InterruptHandler^0,w,c
 25590  018C9C  101A               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 25591  018C9E  101B               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 25592  018CA0  B4D8               	btfsc	status,2,c
 25593  018CA2  0012               	return	
 25594                           
 25595                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 25596  018CA4  D801               	call	u408_48
 25597  018CA6  0012               	return	
 25598  018CA8                     u408_48:
 25599  018CA8  0005               	push	
 25600  018CAA  6EFA               	movwf	pclath,c
 25601  018CAC  5019               	movf	_INT0_InterruptHandler^0,w,c
 25602  018CAE  6EFD               	movwf	tosl,c
 25603  018CB0  501A               	movf	(_INT0_InterruptHandler+1)^0,w,c
 25604  018CB2  6EFE               	movwf	tosh,c
 25605  018CB4  501B               	movf	(_INT0_InterruptHandler+2)^0,w,c
 25606  018CB6  6EFF               	movwf	tosu,c
 25607  018CB8  50FA               	movf	pclath,w,c
 25608  018CBA  0012               	return		;indir
 25609  018CBC                     __end_of_INT0_CallBack:
 25610                           	opt callstack 0
 25611                           
 25612 ;; *************** function _INT0_DefaultInterruptHandler *****************
 25613 ;; Defined at:
 25614 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 25615 ;; Parameters:    Size  Location     Type
 25616 ;;		None
 25617 ;; Auto vars:     Size  Location     Type
 25618 ;;		None
 25619 ;; Return value:  Size  Location     Type
 25620 ;;                  1  [STACK] void 
 25621 ;; Registers used:
 25622 ;;		None
 25623 ;; Tracked objects:
 25624 ;;		On entry : 0/39
 25625 ;;		On exit  : 0/0
 25626 ;;		Unchanged: 0/0
 25627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25632 ;;Total ram usage:        0 bytes
 25633 ;; Hardware stack levels used:    1
 25634 ;; This function calls:
 25635 ;;		Nothing
 25636 ;; This function is called by:
 25637 ;;		_EXT_INT_Initialize
 25638 ;;		_INT0_CallBack
 25639 ;; This function uses a reentrant model
 25640 ;;
 25641                           
 25642                           	psect	text121
 25643  018F82                     __ptext121:
 25644                           	opt callstack 0
 25645  018F82                     _INT0_DefaultInterruptHandler:
 25646                           	opt callstack 12
 25647                           
 25648                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25649                           
 25650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25651                           ;incstack = 0
 25652  018F82  0012               	return		;funcret
 25653  018F84                     __end_of_INT0_DefaultInterruptHandler:
 25654                           	opt callstack 0
 25655                           
 25656 ;; *************** function _INT1_ISR *****************
 25657 ;; Defined at:
 25658 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 25659 ;; Parameters:    Size  Location     Type
 25660 ;;		None
 25661 ;; Auto vars:     Size  Location     Type
 25662 ;;		None
 25663 ;; Return value:  Size  Location     Type
 25664 ;;                  1    wreg      void 
 25665 ;; Registers used:
 25666 ;;		wreg, status,2, status,0, pclath, tosl
 25667 ;; Tracked objects:
 25668 ;;		On entry : 0/0
 25669 ;;		On exit  : 0/0
 25670 ;;		Unchanged: 0/0
 25671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25676 ;;Total ram usage:        0 bytes
 25677 ;; Hardware stack levels used:    1
 25678 ;; Hardware stack levels required when called:    2
 25679 ;; This function calls:
 25680 ;;		_INT1_CallBack
 25681 ;; This function is called by:
 25682 ;;		Interrupt level 2
 25683 ;; This function uses a non-reentrant model
 25684 ;;
 25685                           
 25686                           	psect	text122
 25687  018EF8                     __ptext122:
 25688                           	opt callstack 0
 25689  018EF8                     _INT1_ISR:
 25690                           	opt callstack 12
 25691                           
 25692                           ;incstack = 0
 25693  018EF8  EE13  F356         	lfsr	1,___inthi_sp
 25694                           
 25695                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 25696  018EFC  0139               	movlb	57	; () banked
 25697  018EFE  91A5               	bcf	165,0,b	;volatile
 25698                           
 25699                           ; BSR set to: 57
 25700                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 25701  018F00  EC5E  F0C6         	call	_INT1_CallBack	;wreg free
 25702  018F04  0011               	retfie		f
 25703  018F06                     __end_of_INT1_ISR:
 25704                           	opt callstack 0
 25705                           
 25706 ;; *************** function _INT1_CallBack *****************
 25707 ;; Defined at:
 25708 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 25709 ;; Parameters:    Size  Location     Type
 25710 ;;		None
 25711 ;; Auto vars:     Size  Location     Type
 25712 ;;		None
 25713 ;; Return value:  Size  Location     Type
 25714 ;;                  1  [STACK] void 
 25715 ;; Registers used:
 25716 ;;		wreg, status,2, status,0, pclath, tosl
 25717 ;; Tracked objects:
 25718 ;;		On entry : 3F/39
 25719 ;;		On exit  : 0/0
 25720 ;;		Unchanged: 0/0
 25721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25726 ;;Total ram usage:        0 bytes
 25727 ;; Hardware stack levels used:    1
 25728 ;; Hardware stack levels required when called:    1
 25729 ;; This function calls:
 25730 ;;		Absolute function
 25731 ;;		_INT1_DefaultInterruptHandler
 25732 ;; This function is called by:
 25733 ;;		_INT1_ISR
 25734 ;; This function uses a reentrant model
 25735 ;;
 25736                           
 25737                           	psect	text123
 25738  018CBC                     __ptext123:
 25739                           	opt callstack 0
 25740  018CBC                     _INT1_CallBack:
 25741                           	opt callstack 12
 25742                           
 25743                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 25744                           
 25745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25746                           ;incstack = 0
 25747  018CBC  5016               	movf	_INT1_InterruptHandler^0,w,c
 25748  018CBE  1017               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 25749  018CC0  1018               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 25750  018CC2  B4D8               	btfsc	status,2,c
 25751  018CC4  0012               	return	
 25752                           
 25753                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 25754  018CC6  D801               	call	u410_48
 25755  018CC8  0012               	return	
 25756  018CCA                     u410_48:
 25757  018CCA  0005               	push	
 25758  018CCC  6EFA               	movwf	pclath,c
 25759  018CCE  5016               	movf	_INT1_InterruptHandler^0,w,c
 25760  018CD0  6EFD               	movwf	tosl,c
 25761  018CD2  5017               	movf	(_INT1_InterruptHandler+1)^0,w,c
 25762  018CD4  6EFE               	movwf	tosh,c
 25763  018CD6  5018               	movf	(_INT1_InterruptHandler+2)^0,w,c
 25764  018CD8  6EFF               	movwf	tosu,c
 25765  018CDA  50FA               	movf	pclath,w,c
 25766  018CDC  0012               	return		;indir
 25767  018CDE                     __end_of_INT1_CallBack:
 25768                           	opt callstack 0
 25769                           
 25770 ;; *************** function _INT1_DefaultInterruptHandler *****************
 25771 ;; Defined at:
 25772 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 25773 ;; Parameters:    Size  Location     Type
 25774 ;;		None
 25775 ;; Auto vars:     Size  Location     Type
 25776 ;;		None
 25777 ;; Return value:  Size  Location     Type
 25778 ;;                  1  [STACK] void 
 25779 ;; Registers used:
 25780 ;;		None
 25781 ;; Tracked objects:
 25782 ;;		On entry : 0/39
 25783 ;;		On exit  : 0/0
 25784 ;;		Unchanged: 0/0
 25785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25790 ;;Total ram usage:        0 bytes
 25791 ;; Hardware stack levels used:    1
 25792 ;; This function calls:
 25793 ;;		Nothing
 25794 ;; This function is called by:
 25795 ;;		_EXT_INT_Initialize
 25796 ;;		_INT1_CallBack
 25797 ;; This function uses a reentrant model
 25798 ;;
 25799                           
 25800                           	psect	text124
 25801  018F84                     __ptext124:
 25802                           	opt callstack 0
 25803  018F84                     _INT1_DefaultInterruptHandler:
 25804                           	opt callstack 12
 25805                           
 25806                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25807                           
 25808                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25809                           ;incstack = 0
 25810  018F84  0012               	return		;funcret
 25811  018F86                     __end_of_INT1_DefaultInterruptHandler:
 25812                           	opt callstack 0
 25813                           
 25814 ;; *************** function _Default_ISR *****************
 25815 ;; Defined at:
 25816 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 25817 ;; Parameters:    Size  Location     Type
 25818 ;;		None
 25819 ;; Auto vars:     Size  Location     Type
 25820 ;;		None
 25821 ;; Return value:  Size  Location     Type
 25822 ;;                  1    wreg      void 
 25823 ;; Registers used:
 25824 ;;		None
 25825 ;; Tracked objects:
 25826 ;;		On entry : 0/0
 25827 ;;		On exit  : 0/0
 25828 ;;		Unchanged: 0/0
 25829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25834 ;;Total ram usage:        0 bytes
 25835 ;; Hardware stack levels used:    1
 25836 ;; This function calls:
 25837 ;;		Nothing
 25838 ;; This function is called by:
 25839 ;;		Interrupt level 2
 25840 ;; This function uses a non-reentrant model
 25841 ;;
 25842                           
 25843                           	psect	text125
 25844  018F7C                     __ptext125:
 25845                           	opt callstack 0
 25846  018F7C                     _Default_ISR:
 25847                           	opt callstack 14
 25848                           
 25849                           ;incstack = 0
 25850  018F7C  EE13  F356         	lfsr	1,___inthi_sp
 25851  018F80  0011               	retfie		f
 25852  018F82                     __end_of_Default_ISR:
 25853                           	opt callstack 0
 25854                           
 25855 ;; *************** function _ADCC_ISR *****************
 25856 ;; Defined at:
 25857 ;;		line 314 in file "mcc_generated_files/adcc.c"
 25858 ;; Parameters:    Size  Location     Type
 25859 ;;		None
 25860 ;; Auto vars:     Size  Location     Type
 25861 ;;		None
 25862 ;; Return value:  Size  Location     Type
 25863 ;;                  1    wreg      void 
 25864 ;; Registers used:
 25865 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25866 ;; Tracked objects:
 25867 ;;		On entry : 0/0
 25868 ;;		On exit  : 0/0
 25869 ;;		Unchanged: 0/0
 25870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25874 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25875 ;;Total ram usage:        1 bytes
 25876 ;; Hardware stack levels used:    1
 25877 ;; Hardware stack levels required when called:    1
 25878 ;; This function calls:
 25879 ;;		Absolute function
 25880 ;;		_ADCC_DefaultInterruptHandler
 25881 ;;		_adc_int_handler
 25882 ;; This function is called by:
 25883 ;;		Interrupt level 2
 25884 ;; This function uses a non-reentrant model
 25885 ;;
 25886                           
 25887                           	psect	text126
 25888  018738                     __ptext126:
 25889                           	opt callstack 0
 25890  018738                     _ADCC_ISR:
 25891                           	opt callstack 13
 25892                           
 25893                           ;incstack = 0
 25894  018738  0060  F100  F055   	movff	btemp+11,??_ADCC_ISR
 25895  01873E  EE13  F356         	lfsr	1,___inthi_sp
 25896                           
 25897                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 25898  018742  0139               	movlb	57	; () banked
 25899  018744  95A1               	bcf	161,2,b	;volatile
 25900                           
 25901                           ; BSR set to: 57
 25902                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 25903  018746  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25904  018748  1008               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25905  01874A  1009               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25906  01874C  B4D8               	btfsc	status,2,c
 25907  01874E  D00C               	goto	i2u438_49
 25908                           
 25909                           ; BSR set to: 57
 25910                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 25911  018750  D801               	call	i2u438_48
 25912  018752  D00A               	goto	i2u438_49
 25913  018754                     i2u438_48:
 25914  018754  0005               	push	
 25915  018756  6EFA               	movwf	pclath,c
 25916  018758  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25917  01875A  6EFD               	movwf	tosl,c
 25918  01875C  5008               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25919  01875E  6EFE               	movwf	tosh,c
 25920  018760  5009               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25921  018762  6EFF               	movwf	tosu,c
 25922  018764  50FA               	movf	pclath,w,c
 25923  018766  0012               	return		;indir
 25924  018768                     i2u438_49:
 25925  018768  0060  F154  F040   	movff	??_ADCC_ISR,btemp+11
 25926  01876E  0011               	retfie		f
 25927  018770                     __end_of_ADCC_ISR:
 25928                           	opt callstack 0
 25929                           
 25930 ;; *************** function _adc_int_t_handler *****************
 25931 ;; Defined at:
 25932 ;;		line 127 in file "daq.c"
 25933 ;; Parameters:    Size  Location     Type
 25934 ;;		None
 25935 ;; Auto vars:     Size  Location     Type
 25936 ;;		None
 25937 ;; Return value:  Size  Location     Type
 25938 ;;                  1  [STACK] void 
 25939 ;; Registers used:
 25940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 25941 ;; Tracked objects:
 25942 ;;		On entry : 3F/39
 25943 ;;		On exit  : 1/0
 25944 ;;		Unchanged: 0/0
 25945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25950 ;;Total ram usage:        0 bytes
 25951 ;; Hardware stack levels used:    1
 25952 ;; Hardware stack levels required when called:    1
 25953 ;; This function calls:
 25954 ;;		_ADCC_DischargeSampleCapacitor
 25955 ;;		_ADCC_StartConversion
 25956 ;; This function is called by:
 25957 ;;		_start_adc_scan
 25958 ;;		_ADCC_ThresholdISR
 25959 ;; This function uses a reentrant model
 25960 ;;
 25961                           
 25962                           	psect	text127
 25963  017A72                     __ptext127:
 25964                           	opt callstack 0
 25965  017A72                     _adc_int_t_handler:
 25966                           	opt callstack 12
 25967                           
 25968                           ;daq.c: 132:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 25969                           
 25970                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25971                           ;incstack = 0
 25972  017A72  013E               	movlb	62	; () banked
 25973  017A74  51E6               	movf	230,w,b	;volatile
 25974  017A76  006F FB9C  F035    	movff	16103,btemp	;volatile
 25975  017A7C  6A36               	clrf	(btemp+1)^0,c
 25976  017A7E  0060  F0D4  F036   	movff	btemp,btemp+1
 25977  017A84  6A35               	clrf	btemp^0,c
 25978  017A86  2635               	addwf	btemp^0,f,c
 25979  017A88  0E00               	movlw	0
 25980  017A8A  2236               	addwfc	(btemp+1)^0,f,c
 25981  017A8C  0100               	movlb	0	; () banked
 25982  017A8E  51CB               	movf	(_R+40)& (0+255),w,b	;volatile
 25983  017A90  0D02               	mullw	2
 25984  017A92  50F3               	movf	243,w,c
 25985  017A94  0FA3               	addlw	low _R
 25986  017A96  6ED9               	movwf	fsr2l,c
 25987  017A98  6ADA               	clrf	fsr2h,c
 25988  017A9A  0060  F0D7  FFDE   	movff	btemp,postinc2
 25989  017AA0  0060  F0DB  FFDD   	movff	btemp+1,postdec2
 25990  017AA6                     l9014:
 25991                           
 25992                           ;daq.c: 134:   if (++R.scan_index > 0XD) {
 25993  017AA6  0100               	movlb	0	; () banked
 25994  017AA8  2BCB               	incf	(_R+40)& (0+255),f,b	;volatile
 25995  017AAA  0E0D               	movlw	13
 25996  017AAC  65CB               	cpfsgt	(_R+40)& (0+255),b	;volatile
 25997  017AAE  D004               	goto	l9022
 25998                           
 25999                           ; BSR set to: 0
 26000                           ;daq.c: 135:    R.done = 1;
 26001  017AB0  0E01               	movlw	1
 26002  017AB2  6FCE               	movwf	(_R+43)& (0+255),b	;volatile
 26003                           
 26004                           ; BSR set to: 0
 26005  017AB4  92BE               	bcf	190,1,c	;volatile
 26006  017AB6  0012               	return	
 26007  017AB8                     l9022:
 26008                           
 26009                           ; BSR set to: 0
 26010                           ;daq.c: 141:  } while (!((R.scan_select >> R.scan_index) &0x1));
 26011  017AB8  0060  F32C  F040   	movff	_R+40,btemp+11	;volatile
 26012  017ABE  EE20  F0CC         	lfsr	2,_R+41	;volatile
 26013  017AC2  006F FF78  F03D    	movff	postinc2,btemp+8
 26014  017AC8  006F FF74  F03E    	movff	postdec2,btemp+9
 26015  017ACE  2A40               	incf	(btemp+11)^0,f,c
 26016  017AD0  D003               	goto	u886_44
 26017  017AD2                     u886_45:
 26018  017AD2  90D8               	bcf	status,0,c
 26019  017AD4  323E               	rrcf	(btemp+9)^0,f,c
 26020  017AD6  323D               	rrcf	(btemp+8)^0,f,c
 26021  017AD8                     u886_44:
 26022  017AD8  2E40               	decfsz	(btemp+11)^0,f,c
 26023  017ADA  D7FB               	goto	u886_45
 26024  017ADC  A03D               	btfss	(btemp+8)^0,0,c
 26025  017ADE  D7E3               	goto	l9014
 26026                           
 26027                           ;daq.c: 142:  ADCC_DischargeSampleCapacitor();
 26028  017AE0  ECA1  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 26029                           
 26030                           ; BSR set to: 62
 26031                           ;daq.c: 143:  ADCC_StartConversion(R.scan_index & 0xf);
 26032  017AE4  0100               	movlb	0	; () banked
 26033  017AE6  51CB               	movf	(_R+40)& (0+255),w,b	;volatile
 26034  017AE8  0B0F               	andlw	15
 26035  017AEA  6EE6               	movwf	postinc1,c
 26036  017AEC  EC54  F0C7         	call	_ADCC_StartConversion	;wreg free
 26037                           
 26038                           ; BSR set to: 62
 26039  017AF0  A2BE               	btfss	190,1,c	;volatile
 26040  017AF2  D002               	goto	u888_40
 26041  017AF4  0E01               	movlw	1
 26042  017AF6  D001               	goto	u888_46
 26043  017AF8                     u888_40:
 26044  017AF8  0E00               	movlw	0
 26045  017AFA                     u888_46:
 26046  017AFA  0AFF               	xorlw	255
 26047  017AFC  6E40               	movwf	(btemp+11)^0,c
 26048  017AFE  4640               	rlncf	(btemp+11)^0,f,c
 26049  017B00  50BE               	movf	190,w,c	;volatile
 26050  017B02  1840               	xorwf	(btemp+11)^0,w,c
 26051  017B04  0BFD               	andlw	-3
 26052  017B06  1840               	xorwf	(btemp+11)^0,w,c
 26053  017B08  6EBE               	movwf	190,c	;volatile
 26054                           
 26055                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26056  017B0A  0012               	return		;funcret
 26057  017B0C                     __end_of_adc_int_t_handler:
 26058                           	opt callstack 0
 26059                           
 26060 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 26061 ;; Defined at:
 26062 ;;		line 339 in file "mcc_generated_files/adcc.c"
 26063 ;; Parameters:    Size  Location     Type
 26064 ;;		None
 26065 ;; Auto vars:     Size  Location     Type
 26066 ;;		None
 26067 ;; Return value:  Size  Location     Type
 26068 ;;                  1  [STACK] void 
 26069 ;; Registers used:
 26070 ;;		None
 26071 ;; Tracked objects:
 26072 ;;		On entry : 3F/39
 26073 ;;		On exit  : 0/0
 26074 ;;		Unchanged: 0/0
 26075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26080 ;;Total ram usage:        0 bytes
 26081 ;; Hardware stack levels used:    1
 26082 ;; This function calls:
 26083 ;;		Nothing
 26084 ;; This function is called by:
 26085 ;;		_ADCC_Initialize
 26086 ;;		_ADCC_ISR
 26087 ;;		_ADCC_ThresholdISR
 26088 ;; This function uses a reentrant model
 26089 ;;
 26090                           
 26091                           	psect	text128
 26092  018F86                     __ptext128:
 26093                           	opt callstack 0
 26094  018F86                     _ADCC_DefaultInterruptHandler:
 26095                           	opt callstack 13
 26096                           
 26097                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26098                           
 26099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26100                           ;incstack = 0
 26101  018F86  0012               	return		;funcret
 26102  018F88                     __end_of_ADCC_DefaultInterruptHandler:
 26103                           	opt callstack 0
 26104                           
 26105 ;; *************** function _adc_int_handler *****************
 26106 ;; Defined at:
 26107 ;;		line 117 in file "daq.c"
 26108 ;; Parameters:    Size  Location     Type
 26109 ;;		None
 26110 ;; Auto vars:     Size  Location     Type
 26111 ;;		None
 26112 ;; Return value:  Size  Location     Type
 26113 ;;                  1  [STACK] void 
 26114 ;; Registers used:
 26115 ;;		wreg, status,2, status,0, btemp+11
 26116 ;; Tracked objects:
 26117 ;;		On entry : 3F/39
 26118 ;;		On exit  : 0/0
 26119 ;;		Unchanged: 0/0
 26120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26125 ;;Total ram usage:        0 bytes
 26126 ;; Hardware stack levels used:    1
 26127 ;; This function calls:
 26128 ;;		Nothing
 26129 ;; This function is called by:
 26130 ;;		_start_adc_scan
 26131 ;;		_ADCC_ISR
 26132 ;; This function uses a reentrant model
 26133 ;;
 26134                           
 26135                           	psect	text129
 26136  018D5A                     __ptext129:
 26137                           	opt callstack 0
 26138  018D5A                     _adc_int_handler:
 26139                           	opt callstack 13
 26140                           
 26141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26142                           ;incstack = 0
 26143                           ;daq.c: 120:  do { LATEbits.LATE2 = ~LATEbits.LATE2; } while(0);
 26144  018D5A  A4BE               	btfss	190,2,c	;volatile
 26145  018D5C  D002               	goto	u432_40
 26146  018D5E  0E01               	movlw	1
 26147  018D60  D001               	goto	u432_46
 26148  018D62                     u432_40:
 26149  018D62  0E00               	movlw	0
 26150  018D64                     u432_46:
 26151  018D64  0AFF               	xorlw	255
 26152  018D66  6E40               	movwf	(btemp+11)^0,c
 26153  018D68  4640               	rlncf	(btemp+11)^0,f,c
 26154  018D6A  4640               	rlncf	(btemp+11)^0,f,c
 26155  018D6C  50BE               	movf	190,w,c	;volatile
 26156  018D6E  1840               	xorwf	(btemp+11)^0,w,c
 26157  018D70  0BFB               	andlw	-5
 26158  018D72  1840               	xorwf	(btemp+11)^0,w,c
 26159  018D74  6EBE               	movwf	190,c	;volatile
 26160                           
 26161                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26162  018D76  0012               	return		;funcret
 26163  018D78                     __end_of_adc_int_handler:
 26164                           	opt callstack 0
 26165                           
 26166 ;; *************** function _ADCC_ThresholdISR *****************
 26167 ;; Defined at:
 26168 ;;		line 327 in file "mcc_generated_files/adcc.c"
 26169 ;; Parameters:    Size  Location     Type
 26170 ;;		None
 26171 ;; Auto vars:     Size  Location     Type
 26172 ;;		None
 26173 ;; Return value:  Size  Location     Type
 26174 ;;                  1    wreg      void 
 26175 ;; Registers used:
 26176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 26177 ;; Tracked objects:
 26178 ;;		On entry : 0/0
 26179 ;;		On exit  : 0/0
 26180 ;;		Unchanged: 0/0
 26181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26184 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26185 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26186 ;;Total ram usage:        5 bytes
 26187 ;; Hardware stack levels used:    1
 26188 ;; Hardware stack levels required when called:    2
 26189 ;; This function calls:
 26190 ;;		Absolute function
 26191 ;;		_ADCC_DefaultInterruptHandler
 26192 ;;		_adc_int_t_handler
 26193 ;; This function is called by:
 26194 ;;		Interrupt level 2
 26195 ;; This function uses a non-reentrant model
 26196 ;;
 26197                           
 26198                           	psect	text130
 26199  01800C                     __ptext130:
 26200                           	opt callstack 0
 26201  01800C                     _ADCC_ThresholdISR:
 26202                           	opt callstack 12
 26203                           
 26204                           ;incstack = 0
 26205  01800C  0060  F0D4  F056   	movff	btemp,??_ADCC_ThresholdISR
 26206  018012  0060  F0D8  F057   	movff	btemp+1,??_ADCC_ThresholdISR+1
 26207  018018  0060  F0F4  F058   	movff	btemp+8,??_ADCC_ThresholdISR+2
 26208  01801E  0060  F0F8  F059   	movff	btemp+9,??_ADCC_ThresholdISR+3
 26209  018024  0060  F100  F05A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 26210  01802A  EE13  F356         	lfsr	1,___inthi_sp
 26211                           
 26212                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 26213  01802E  0139               	movlb	57	; () banked
 26214  018030  97A1               	bcf	161,3,b	;volatile
 26215                           
 26216                           ; BSR set to: 57
 26217                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 26218  018032  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26219  018034  1005               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26220  018036  1006               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26221  018038  B4D8               	btfsc	status,2,c
 26222  01803A  D00C               	goto	i2u890_49
 26223                           
 26224                           ; BSR set to: 57
 26225                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 26226  01803C  D801               	call	i2u890_48
 26227  01803E  D00A               	goto	i2u890_49
 26228  018040                     i2u890_48:
 26229  018040  0005               	push	
 26230  018042  6EFA               	movwf	pclath,c
 26231  018044  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26232  018046  6EFD               	movwf	tosl,c
 26233  018048  5005               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26234  01804A  6EFE               	movwf	tosh,c
 26235  01804C  5006               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26236  01804E  6EFF               	movwf	tosu,c
 26237  018050  50FA               	movf	pclath,w,c
 26238  018052  0012               	return		;indir
 26239  018054                     i2u890_49:
 26240  018054  0060  F168  F040   	movff	??_ADCC_ThresholdISR+4,btemp+11
 26241  01805A  0060  F164  F03E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 26242  018060  0060  F160  F03D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 26243  018066  0060  F15C  F036   	movff	??_ADCC_ThresholdISR+1,btemp+1
 26244  01806C  0060  F158  F035   	movff	??_ADCC_ThresholdISR,btemp
 26245  018072  0011               	retfie		f
 26246  018074                     __end_of_ADCC_ThresholdISR:
 26247                           	opt callstack 0
 26248                           
 26249 ;; *************** function _UART1_tx_vect_isr *****************
 26250 ;; Defined at:
 26251 ;;		line 199 in file "mcc_generated_files/uart1.c"
 26252 ;; Parameters:    Size  Location     Type
 26253 ;;		None
 26254 ;; Auto vars:     Size  Location     Type
 26255 ;;		None
 26256 ;; Return value:  Size  Location     Type
 26257 ;;                  1    wreg      void 
 26258 ;; Registers used:
 26259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26260 ;; Tracked objects:
 26261 ;;		On entry : 0/0
 26262 ;;		On exit  : 0/0
 26263 ;;		Unchanged: 0/0
 26264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26269 ;;Total ram usage:        0 bytes
 26270 ;; Hardware stack levels used:    1
 26271 ;; Hardware stack levels required when called:    1
 26272 ;; This function calls:
 26273 ;;		Absolute function
 26274 ;;		_UART1_Transmit_ISR
 26275 ;; This function is called by:
 26276 ;;		Interrupt level 2
 26277 ;; This function uses a non-reentrant model
 26278 ;;
 26279                           
 26280                           	psect	text131
 26281  018BB4                     __ptext131:
 26282                           	opt callstack 0
 26283  018BB4                     _UART1_tx_vect_isr:
 26284                           	opt callstack 13
 26285                           
 26286                           ;incstack = 0
 26287  018BB4  EE13  F356         	lfsr	1,___inthi_sp
 26288                           
 26289                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 26290  018BB8  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 26291  018BBA  100B               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 26292  018BBC  100C               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 26293  018BBE  B4D8               	btfsc	status,2,c
 26294  018BC0  0011               	retfie		f
 26295                           
 26296                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 26297  018BC2  D801               	call	i2u1076_48
 26298  018BC4  0011               	retfie		f
 26299  018BC6                     i2u1076_48:
 26300  018BC6  0005               	push	
 26301  018BC8  6EFA               	movwf	pclath,c
 26302  018BCA  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 26303  018BCC  6EFD               	movwf	tosl,c
 26304  018BCE  500B               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 26305  018BD0  6EFE               	movwf	tosh,c
 26306  018BD2  500C               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 26307  018BD4  6EFF               	movwf	tosu,c
 26308  018BD6  50FA               	movf	pclath,w,c
 26309  018BD8  0012               	return		;indir
 26310  018BDA                     __end_of_UART1_tx_vect_isr:
 26311                           	opt callstack 0
 26312                           
 26313 ;; *************** function _UART1_Transmit_ISR *****************
 26314 ;; Defined at:
 26315 ;;		line 213 in file "mcc_generated_files/uart1.c"
 26316 ;; Parameters:    Size  Location     Type
 26317 ;;		None
 26318 ;; Auto vars:     Size  Location     Type
 26319 ;;		None
 26320 ;; Return value:  Size  Location     Type
 26321 ;;                  1  [STACK] void 
 26322 ;; Registers used:
 26323 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26324 ;; Tracked objects:
 26325 ;;		On entry : 0/0
 26326 ;;		On exit  : 3B/39
 26327 ;;		Unchanged: 0/0
 26328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26333 ;;Total ram usage:        0 bytes
 26334 ;; Hardware stack levels used:    1
 26335 ;; This function calls:
 26336 ;;		Nothing
 26337 ;; This function is called by:
 26338 ;;		_UART1_Initialize
 26339 ;;		_UART1_tx_vect_isr
 26340 ;; This function uses a reentrant model
 26341 ;;
 26342                           
 26343                           	psect	text132
 26344  018902                     __ptext132:
 26345                           	opt callstack 0
 26346  018902                     _UART1_Transmit_ISR:
 26347                           	opt callstack 13
 26348                           
 26349                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 26350                           
 26351                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26352                           ;incstack = 0
 26353  018902  0E40               	movlw	64
 26354  018904  6032               	cpfslt	_uart1TxBufferRemaining^0,c
 26355  018906  D010               	goto	l581
 26356                           
 26357                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 26358  018908  0E6C               	movlw	low _uart1TxBuffer
 26359  01890A  2433               	addwf	_uart1TxTail^0,w,c	;volatile
 26360  01890C  6ED9               	movwf	fsr2l,c
 26361  01890E  6ADA               	clrf	fsr2h,c
 26362  018910  0E02               	movlw	high _uart1TxBuffer
 26363  018912  22DA               	addwfc	fsr2h,f,c
 26364  018914  50DF               	movf	indf2,w,c
 26365  018916  013D               	movlb	61	; () banked
 26366  018918  6FEA               	movwf	234,b	;volatile
 26367                           
 26368                           ; BSR set to: 61
 26369  01891A  2A33               	incf	_uart1TxTail^0,f,c	;volatile
 26370                           
 26371                           ; BSR set to: 61
 26372                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 26373  01891C  0E3F               	movlw	63
 26374  01891E  6433               	cpfsgt	_uart1TxTail^0,c
 26375  018920  D001               	goto	l8812
 26376                           
 26377                           ; BSR set to: 61
 26378                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 26379  018922  6A33               	clrf	_uart1TxTail^0,c	;volatile
 26380  018924                     l8812:
 26381                           
 26382                           ; BSR set to: 61
 26383                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 26384  018924  2A32               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 26385                           
 26386                           ;mcc_generated_files/uart1.c: 222:  } else {
 26387  018926  0012               	return	
 26388  018928                     l581:
 26389                           
 26390                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 26391  018928  0139               	movlb	57	; () banked
 26392  01892A  9993               	bcf	147,4,b	;volatile
 26393                           
 26394                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26395  01892C  0012               	return		;funcret
 26396  01892E                     __end_of_UART1_Transmit_ISR:
 26397                           	opt callstack 0
 26398                           
 26399 ;; *************** function _UART1_rx_vect_isr *****************
 26400 ;; Defined at:
 26401 ;;		line 206 in file "mcc_generated_files/uart1.c"
 26402 ;; Parameters:    Size  Location     Type
 26403 ;;		None
 26404 ;; Auto vars:     Size  Location     Type
 26405 ;;		None
 26406 ;; Return value:  Size  Location     Type
 26407 ;;                  1    wreg      void 
 26408 ;; Registers used:
 26409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26410 ;; Tracked objects:
 26411 ;;		On entry : 0/0
 26412 ;;		On exit  : 0/0
 26413 ;;		Unchanged: 0/0
 26414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26419 ;;Total ram usage:        0 bytes
 26420 ;; Hardware stack levels used:    1
 26421 ;; Hardware stack levels required when called:    1
 26422 ;; This function calls:
 26423 ;;		Absolute function
 26424 ;;		_UART1_Receive_ISR
 26425 ;; This function is called by:
 26426 ;;		Interrupt level 2
 26427 ;; This function uses a non-reentrant model
 26428 ;;
 26429                           
 26430                           	psect	text133
 26431  018BDC                     __ptext133:
 26432                           	opt callstack 0
 26433  018BDC                     _UART1_rx_vect_isr:
 26434                           	opt callstack 13
 26435                           
 26436                           ;incstack = 0
 26437  018BDC  EE13  F356         	lfsr	1,___inthi_sp
 26438                           
 26439                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 26440  018BE0  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 26441  018BE2  100E               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 26442  018BE4  100F               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 26443  018BE6  B4D8               	btfsc	status,2,c
 26444  018BE8  0011               	retfie		f
 26445                           
 26446                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 26447  018BEA  D801               	call	i2u1078_48
 26448  018BEC  0011               	retfie		f
 26449  018BEE                     i2u1078_48:
 26450  018BEE  0005               	push	
 26451  018BF0  6EFA               	movwf	pclath,c
 26452  018BF2  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 26453  018BF4  6EFD               	movwf	tosl,c
 26454  018BF6  500E               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 26455  018BF8  6EFE               	movwf	tosh,c
 26456  018BFA  500F               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 26457  018BFC  6EFF               	movwf	tosu,c
 26458  018BFE  50FA               	movf	pclath,w,c
 26459  018C00  0012               	return		;indir
 26460  018C02                     __end_of_UART1_rx_vect_isr:
 26461                           	opt callstack 0
 26462                           
 26463 ;; *************** function _UART1_Receive_ISR *****************
 26464 ;; Defined at:
 26465 ;;		line 229 in file "mcc_generated_files/uart1.c"
 26466 ;; Parameters:    Size  Location     Type
 26467 ;;		None
 26468 ;; Auto vars:     Size  Location     Type
 26469 ;;		None
 26470 ;; Return value:  Size  Location     Type
 26471 ;;                  1  [STACK] void 
 26472 ;; Registers used:
 26473 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26474 ;; Tracked objects:
 26475 ;;		On entry : 0/0
 26476 ;;		On exit  : 0/0
 26477 ;;		Unchanged: 0/0
 26478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26483 ;;Total ram usage:        0 bytes
 26484 ;; Hardware stack levels used:    1
 26485 ;; This function calls:
 26486 ;;		Nothing
 26487 ;; This function is called by:
 26488 ;;		_UART1_Initialize
 26489 ;;		_UART1_rx_vect_isr
 26490 ;; This function uses a reentrant model
 26491 ;;
 26492                           
 26493                           	psect	text134
 26494  018D78                     __ptext134:
 26495                           	opt callstack 0
 26496  018D78                     _UART1_Receive_ISR:
 26497                           	opt callstack 13
 26498                           
 26499                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 26500                           
 26501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26502                           ;incstack = 0
 26503  018D78  0E00               	movlw	low _uart1RxBuffer
 26504  018D7A  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 26505  018D7C  6ED9               	movwf	fsr2l,c
 26506  018D7E  6ADA               	clrf	fsr2h,c
 26507  018D80  0E05               	movlw	high _uart1RxBuffer
 26508  018D82  22DA               	addwfc	fsr2h,f,c
 26509  018D84  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 26510  018D8A  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 26511                           
 26512                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 26513  018D8C  2831               	incf	_uart1RxHead^0,w,c
 26514  018D8E  B4D8               	btfsc	status,2,c
 26515                           
 26516                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 26517  018D90  6A31               	clrf	_uart1RxHead^0,c	;volatile
 26518                           
 26519                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 26520  018D92  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 26521                           
 26522                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26523  018D94  0012               	return		;funcret
 26524  018D96                     __end_of_UART1_Receive_ISR:
 26525                           	opt callstack 0
 26526                           
 26527 ;; *************** function _UART2_tx_vect_isr *****************
 26528 ;; Defined at:
 26529 ;;		line 195 in file "mcc_generated_files/uart2.c"
 26530 ;; Parameters:    Size  Location     Type
 26531 ;;		None
 26532 ;; Auto vars:     Size  Location     Type
 26533 ;;		None
 26534 ;; Return value:  Size  Location     Type
 26535 ;;                  1    wreg      void 
 26536 ;; Registers used:
 26537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26538 ;; Tracked objects:
 26539 ;;		On entry : 0/0
 26540 ;;		On exit  : 0/0
 26541 ;;		Unchanged: 0/0
 26542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26547 ;;Total ram usage:        0 bytes
 26548 ;; Hardware stack levels used:    1
 26549 ;; Hardware stack levels required when called:    1
 26550 ;; This function calls:
 26551 ;;		Absolute function
 26552 ;;		_UART2_Transmit_ISR
 26553 ;; This function is called by:
 26554 ;;		Interrupt level 2
 26555 ;; This function uses a non-reentrant model
 26556 ;;
 26557                           
 26558                           	psect	text135
 26559  018C04                     __ptext135:
 26560                           	opt callstack 0
 26561  018C04                     _UART2_tx_vect_isr:
 26562                           	opt callstack 13
 26563                           
 26564                           ;incstack = 0
 26565  018C04  EE13  F356         	lfsr	1,___inthi_sp
 26566                           
 26567                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 26568  018C08  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 26569  018C0A  1011               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 26570  018C0C  1012               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 26571  018C0E  B4D8               	btfsc	status,2,c
 26572  018C10  0011               	retfie		f
 26573                           
 26574                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 26575  018C12  D801               	call	i2u1080_48
 26576  018C14  0011               	retfie		f
 26577  018C16                     i2u1080_48:
 26578  018C16  0005               	push	
 26579  018C18  6EFA               	movwf	pclath,c
 26580  018C1A  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 26581  018C1C  6EFD               	movwf	tosl,c
 26582  018C1E  5011               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 26583  018C20  6EFE               	movwf	tosh,c
 26584  018C22  5012               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 26585  018C24  6EFF               	movwf	tosu,c
 26586  018C26  50FA               	movf	pclath,w,c
 26587  018C28  0012               	return		;indir
 26588  018C2A                     __end_of_UART2_tx_vect_isr:
 26589                           	opt callstack 0
 26590                           
 26591 ;; *************** function _UART2_Transmit_ISR *****************
 26592 ;; Defined at:
 26593 ;;		line 213 in file "mcc_generated_files/uart2.c"
 26594 ;; Parameters:    Size  Location     Type
 26595 ;;		None
 26596 ;; Auto vars:     Size  Location     Type
 26597 ;;		None
 26598 ;; Return value:  Size  Location     Type
 26599 ;;                  1  [STACK] void 
 26600 ;; Registers used:
 26601 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26602 ;; Tracked objects:
 26603 ;;		On entry : 0/0
 26604 ;;		On exit  : 3B/39
 26605 ;;		Unchanged: 0/0
 26606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26611 ;;Total ram usage:        0 bytes
 26612 ;; Hardware stack levels used:    1
 26613 ;; This function calls:
 26614 ;;		Nothing
 26615 ;; This function is called by:
 26616 ;;		_UART2_Initialize
 26617 ;;		_UART2_tx_vect_isr
 26618 ;; This function uses a reentrant model
 26619 ;;
 26620                           
 26621                           	psect	text136
 26622  01892E                     __ptext136:
 26623                           	opt callstack 0
 26624  01892E                     _UART2_Transmit_ISR:
 26625                           	opt callstack 13
 26626                           
 26627                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 26628                           
 26629                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26630                           ;incstack = 0
 26631  01892E  0E40               	movlw	64
 26632  018930  602C               	cpfslt	_uart2TxBufferRemaining^0,c
 26633  018932  D010               	goto	l701
 26634                           
 26635                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 26636  018934  0E00               	movlw	low _uart2TxBuffer
 26637  018936  242D               	addwf	_uart2TxTail^0,w,c	;volatile
 26638  018938  6ED9               	movwf	fsr2l,c
 26639  01893A  6ADA               	clrf	fsr2h,c
 26640  01893C  0E03               	movlw	high _uart2TxBuffer
 26641  01893E  22DA               	addwfc	fsr2h,f,c
 26642  018940  50DF               	movf	indf2,w,c
 26643  018942  013D               	movlb	61	; () banked
 26644  018944  6FD2               	movwf	210,b	;volatile
 26645                           
 26646                           ; BSR set to: 61
 26647  018946  2A2D               	incf	_uart2TxTail^0,f,c	;volatile
 26648                           
 26649                           ; BSR set to: 61
 26650                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 26651  018948  0E3F               	movlw	63
 26652  01894A  642D               	cpfsgt	_uart2TxTail^0,c
 26653  01894C  D001               	goto	l8834
 26654                           
 26655                           ; BSR set to: 61
 26656                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 26657  01894E  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 26658  018950                     l8834:
 26659                           
 26660                           ; BSR set to: 61
 26661                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 26662  018950  2A2C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 26663                           
 26664                           ;mcc_generated_files/uart2.c: 224:     }
 26665  018952  0012               	return	
 26666  018954                     l701:
 26667                           
 26668                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 26669  018954  0139               	movlb	57	; () banked
 26670  018956  9796               	bcf	150,3,b	;volatile
 26671                           
 26672                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26673  018958  0012               	return		;funcret
 26674  01895A                     __end_of_UART2_Transmit_ISR:
 26675                           	opt callstack 0
 26676                           
 26677 ;; *************** function _UART2_rx_vect_isr *****************
 26678 ;; Defined at:
 26679 ;;		line 203 in file "mcc_generated_files/uart2.c"
 26680 ;; Parameters:    Size  Location     Type
 26681 ;;		None
 26682 ;; Auto vars:     Size  Location     Type
 26683 ;;		None
 26684 ;; Return value:  Size  Location     Type
 26685 ;;                  1    wreg      void 
 26686 ;; Registers used:
 26687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26688 ;; Tracked objects:
 26689 ;;		On entry : 0/0
 26690 ;;		On exit  : 0/0
 26691 ;;		Unchanged: 0/0
 26692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26697 ;;Total ram usage:        0 bytes
 26698 ;; Hardware stack levels used:    1
 26699 ;; Hardware stack levels required when called:    1
 26700 ;; This function calls:
 26701 ;;		Absolute function
 26702 ;;		_UART2_Receive_ISR
 26703 ;; This function is called by:
 26704 ;;		Interrupt level 2
 26705 ;; This function uses a non-reentrant model
 26706 ;;
 26707                           
 26708                           	psect	text137
 26709  018C2C                     __ptext137:
 26710                           	opt callstack 0
 26711  018C2C                     _UART2_rx_vect_isr:
 26712                           	opt callstack 13
 26713                           
 26714                           ;incstack = 0
 26715  018C2C  EE13  F356         	lfsr	1,___inthi_sp
 26716                           
 26717                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 26718  018C30  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 26719  018C32  1014               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 26720  018C34  1015               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 26721  018C36  B4D8               	btfsc	status,2,c
 26722  018C38  0011               	retfie		f
 26723                           
 26724                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 26725  018C3A  D801               	call	i2u1082_48
 26726  018C3C  0011               	retfie		f
 26727  018C3E                     i2u1082_48:
 26728  018C3E  0005               	push	
 26729  018C40  6EFA               	movwf	pclath,c
 26730  018C42  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 26731  018C44  6EFD               	movwf	tosl,c
 26732  018C46  5014               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 26733  018C48  6EFE               	movwf	tosh,c
 26734  018C4A  5015               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 26735  018C4C  6EFF               	movwf	tosu,c
 26736  018C4E  50FA               	movf	pclath,w,c
 26737  018C50  0012               	return		;indir
 26738  018C52                     __end_of_UART2_rx_vect_isr:
 26739                           	opt callstack 0
 26740                           
 26741 ;; *************** function _UART2_Receive_ISR *****************
 26742 ;; Defined at:
 26743 ;;		line 233 in file "mcc_generated_files/uart2.c"
 26744 ;; Parameters:    Size  Location     Type
 26745 ;;		None
 26746 ;; Auto vars:     Size  Location     Type
 26747 ;;		None
 26748 ;; Return value:  Size  Location     Type
 26749 ;;                  1  [STACK] void 
 26750 ;; Registers used:
 26751 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26752 ;; Tracked objects:
 26753 ;;		On entry : 0/0
 26754 ;;		On exit  : 0/0
 26755 ;;		Unchanged: 0/0
 26756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26761 ;;Total ram usage:        0 bytes
 26762 ;; Hardware stack levels used:    1
 26763 ;; This function calls:
 26764 ;;		Nothing
 26765 ;; This function is called by:
 26766 ;;		_UART2_Initialize
 26767 ;;		_UART2_rx_vect_isr
 26768 ;; This function uses a reentrant model
 26769 ;;
 26770                           
 26771                           	psect	text138
 26772  018D96                     __ptext138:
 26773                           	opt callstack 0
 26774  018D96                     _UART2_Receive_ISR:
 26775                           	opt callstack 13
 26776                           
 26777                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 26778                           
 26779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26780                           ;incstack = 0
 26781  018D96  0E00               	movlw	low _uart2RxBuffer
 26782  018D98  242B               	addwf	_uart2RxHead^0,w,c	;volatile
 26783  018D9A  6ED9               	movwf	fsr2l,c
 26784  018D9C  6ADA               	clrf	fsr2h,c
 26785  018D9E  0E06               	movlw	high _uart2RxBuffer
 26786  018DA0  22DA               	addwfc	fsr2h,f,c
 26787  018DA2  006F F743 FFDF     	movff	15824,indf2	;volatile
 26788  018DA8  2A2B               	incf	_uart2RxHead^0,f,c	;volatile
 26789                           
 26790                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 26791  018DAA  282B               	incf	_uart2RxHead^0,w,c
 26792  018DAC  B4D8               	btfsc	status,2,c
 26793                           
 26794                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 26795  018DAE  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 26796                           
 26797                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 26798  018DB0  2A29               	incf	_uart2RxCount^0,f,c	;volatile
 26799                           
 26800                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26801  018DB2  0012               	return		;funcret
 26802  018DB4                     __end_of_UART2_Receive_ISR:
 26803                           	opt callstack 0
 26804                           
 26805 ;; *************** function _TMR6_ISR *****************
 26806 ;; Defined at:
 26807 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 26808 ;; Parameters:    Size  Location     Type
 26809 ;;		None
 26810 ;; Auto vars:     Size  Location     Type
 26811 ;;		None
 26812 ;; Return value:  Size  Location     Type
 26813 ;;                  1    wreg      void 
 26814 ;; Registers used:
 26815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26816 ;; Tracked objects:
 26817 ;;		On entry : 0/0
 26818 ;;		On exit  : 0/0
 26819 ;;		Unchanged: 0/0
 26820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26823 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26824 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26825 ;;Total ram usage:        1 bytes
 26826 ;; Hardware stack levels used:    1
 26827 ;; Hardware stack levels required when called:    2
 26828 ;; This function calls:
 26829 ;;		_TMR6_CallBack
 26830 ;; This function is called by:
 26831 ;;		Interrupt level 2
 26832 ;; This function uses a non-reentrant model
 26833 ;;
 26834                           
 26835                           	psect	text139
 26836  018E08                     __ptext139:
 26837                           	opt callstack 0
 26838  018E08                     _TMR6_ISR:
 26839                           	opt callstack 12
 26840                           
 26841                           ;incstack = 0
 26842  018E08  0060  F0D4  F0E6   	movff	btemp,??_TMR6_ISR
 26843  018E0E  EE13  F356         	lfsr	1,___inthi_sp
 26844                           
 26845                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 26846  018E12  0139               	movlb	57	; () banked
 26847  018E14  91A9               	bcf	169,0,b	;volatile
 26848                           
 26849                           ; BSR set to: 57
 26850                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 26851  018E16  EC6F  F0C6         	call	_TMR6_CallBack	;wreg free
 26852  018E1A  0060  F398  F035   	movff	??_TMR6_ISR,btemp
 26853  018E20  0011               	retfie		f
 26854  018E22                     __end_of_TMR6_ISR:
 26855                           	opt callstack 0
 26856                           
 26857 ;; *************** function _TMR6_CallBack *****************
 26858 ;; Defined at:
 26859 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 26860 ;; Parameters:    Size  Location     Type
 26861 ;;		None
 26862 ;; Auto vars:     Size  Location     Type
 26863 ;;		None
 26864 ;; Return value:  Size  Location     Type
 26865 ;;                  1  [STACK] void 
 26866 ;; Registers used:
 26867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26868 ;; Tracked objects:
 26869 ;;		On entry : 3F/39
 26870 ;;		On exit  : 0/0
 26871 ;;		Unchanged: 0/0
 26872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26877 ;;Total ram usage:        0 bytes
 26878 ;; Hardware stack levels used:    1
 26879 ;; Hardware stack levels required when called:    1
 26880 ;; This function calls:
 26881 ;;		Absolute function
 26882 ;;		_TMR6_DefaultInterruptHandler
 26883 ;; This function is called by:
 26884 ;;		_TMR6_ISR
 26885 ;; This function uses a reentrant model
 26886 ;;
 26887                           
 26888                           	psect	text140
 26889  018CDE                     __ptext140:
 26890                           	opt callstack 0
 26891  018CDE                     _TMR6_CallBack:
 26892                           	opt callstack 12
 26893                           
 26894                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 26895                           
 26896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26897                           ;incstack = 0
 26898  018CDE  5001               	movf	_TMR6_InterruptHandler^0,w,c
 26899  018CE0  1002               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 26900  018CE2  1003               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 26901  018CE4  B4D8               	btfsc	status,2,c
 26902  018CE6  0012               	return	
 26903                           
 26904                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 26905  018CE8  D801               	call	u871_48
 26906  018CEA  0012               	return	
 26907  018CEC                     u871_48:
 26908  018CEC  0005               	push	
 26909  018CEE  6EFA               	movwf	pclath,c
 26910  018CF0  5001               	movf	_TMR6_InterruptHandler^0,w,c
 26911  018CF2  6EFD               	movwf	tosl,c
 26912  018CF4  5002               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 26913  018CF6  6EFE               	movwf	tosh,c
 26914  018CF8  5003               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 26915  018CFA  6EFF               	movwf	tosu,c
 26916  018CFC  50FA               	movf	pclath,w,c
 26917  018CFE  0012               	return		;indir
 26918  018D00                     __end_of_TMR6_CallBack:
 26919                           	opt callstack 0
 26920                           
 26921 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 26922 ;; Defined at:
 26923 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 26924 ;; Parameters:    Size  Location     Type
 26925 ;;		None
 26926 ;; Auto vars:     Size  Location     Type
 26927 ;;  i               1  [STACK] unsigned char 
 26928 ;; Return value:  Size  Location     Type
 26929 ;;                  1  [STACK] void 
 26930 ;; Registers used:
 26931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26932 ;; Tracked objects:
 26933 ;;		On entry : 0/39
 26934 ;;		On exit  : 0/0
 26935 ;;		Unchanged: 0/0
 26936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26941 ;;Total ram usage:        0 bytes
 26942 ;; Hardware stack levels used:    1
 26943 ;; This function calls:
 26944 ;;		Nothing
 26945 ;; This function is called by:
 26946 ;;		_TMR6_Initialize
 26947 ;;		_TMR6_CallBack
 26948 ;; This function uses a reentrant model
 26949 ;;
 26950                           
 26951                           	psect	text141
 26952  018574                     __ptext141:
 26953                           	opt callstack 0
 26954  018574                     _TMR6_DefaultInterruptHandler:
 26955                           	opt callstack 0
 26956                           
 26957                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26958  018574  52E6               	movf	postinc1,f,c
 26959                           
 26960                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 26961                           ;stkvar	_i @ sp[(-1)+0]
 26962                           
 26963                           ;incstack = 0
 26964  018576  0EFF               	movlw	-1
 26965  018578  6AE3               	clrf	plusw1,c
 26966  01857A                     l8568:
 26967                           
 26968                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 26969                           ;stkvar	_i @ sp[(-1)+0]
 26970  01857A  0EFF               	movlw	-1
 26971  01857C  50E3               	movf	plusw1,w,c
 26972  01857E  0D02               	mullw	2
 26973  018580  50F3               	movf	243,w,c
 26974  018582  0F60               	addlw	low _tickCount
 26975  018584  6ED9               	movwf	fsr2l,c
 26976  018586  6ADA               	clrf	fsr2h,c
 26977  018588  50DE               	movf	postinc2,w,c
 26978  01858A  10DE               	iorwf	postinc2,w,c
 26979  01858C  B4D8               	btfsc	status,2,c
 26980  01858E  D00A               	goto	l8572
 26981                           
 26982                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 26983                           ;stkvar	_i @ sp[(-1)+0]
 26984  018590  0EFF               	movlw	-1
 26985  018592  50E3               	movf	plusw1,w,c
 26986  018594  0D02               	mullw	2
 26987  018596  50F3               	movf	243,w,c
 26988  018598  0F60               	addlw	low _tickCount
 26989  01859A  6ED9               	movwf	fsr2l,c
 26990  01859C  6ADA               	clrf	fsr2h,c
 26991  01859E  06DE               	decf	postinc2,f,c
 26992  0185A0  0E00               	movlw	0
 26993  0185A2  5ADD               	subwfb	postdec2,f,c
 26994  0185A4                     l8572:
 26995                           
 26996                           ;mcc_generated_files/tmr6.c: 207:  }
 26997                           ;stkvar	_i @ sp[(-1)+0]
 26998  0185A4  0EFF               	movlw	-1
 26999  0185A6  2AE3               	incf	plusw1,f,c
 27000                           
 27001                           ;stkvar	_i @ sp[(-1)+0]
 27002  0185A8  0EFF               	movlw	-1
 27003  0185AA  006F FF8C  F035    	movff	plusw1,btemp
 27004  0185B0  0E0B               	movlw	11
 27005  0185B2  6435               	cpfsgt	btemp^0,c
 27006  0185B4  D7E2               	goto	l8568
 27007                           
 27008                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27009  0185B6  52E5               	movf	postdec1,f,c
 27010  0185B8  0012               	return		;funcret
 27011  0185BA                     __end_of_TMR6_DefaultInterruptHandler:
 27012                           	opt callstack 0
 27013                           
 27014 ;; *************** function _DMA1_DMASCNT_ISR *****************
 27015 ;; Defined at:
 27016 ;;		line 126 in file "mcc_generated_files/dma1.c"
 27017 ;; Parameters:    Size  Location     Type
 27018 ;;		None
 27019 ;; Auto vars:     Size  Location     Type
 27020 ;;		None
 27021 ;; Return value:  Size  Location     Type
 27022 ;;                  1    wreg      void 
 27023 ;; Registers used:
 27024 ;;		None
 27025 ;; Tracked objects:
 27026 ;;		On entry : 0/0
 27027 ;;		On exit  : 3F/0
 27028 ;;		Unchanged: 0/0
 27029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27034 ;;Total ram usage:        0 bytes
 27035 ;; Hardware stack levels used:    1
 27036 ;; This function calls:
 27037 ;;		Nothing
 27038 ;; This function is called by:
 27039 ;;		Interrupt level 2
 27040 ;; This function uses a non-reentrant model
 27041 ;;
 27042                           
 27043                           	psect	text142
 27044  018F08                     __ptext142:
 27045                           	opt callstack 0
 27046  018F08                     _DMA1_DMASCNT_ISR:
 27047                           	opt callstack 14
 27048                           
 27049                           ;incstack = 0
 27050  018F08  EE13  F356         	lfsr	1,___inthi_sp
 27051                           
 27052                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 27053  018F0C  0139               	movlb	57	; () banked
 27054  018F0E  91A2               	bcf	162,0,b	;volatile
 27055                           
 27056                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 27057  018F10  0100               	movlb	0	; () banked
 27058  018F12  9778               	bcf	_spi_link& (0+255),3,b	;volatile
 27059                           
 27060                           ; BSR set to: 0
 27061  018F14  0011               	retfie		f
 27062  018F16                     __end_of_DMA1_DMASCNT_ISR:
 27063                           	opt callstack 0
 27064                           
 27065 ;; *************** function _DMA1_DMADCNT_ISR *****************
 27066 ;; Defined at:
 27067 ;;		line 134 in file "mcc_generated_files/dma1.c"
 27068 ;; Parameters:    Size  Location     Type
 27069 ;;		None
 27070 ;; Auto vars:     Size  Location     Type
 27071 ;;		None
 27072 ;; Return value:  Size  Location     Type
 27073 ;;                  1    wreg      void 
 27074 ;; Registers used:
 27075 ;;		None
 27076 ;; Tracked objects:
 27077 ;;		On entry : 0/0
 27078 ;;		On exit  : 3F/39
 27079 ;;		Unchanged: 0/0
 27080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27085 ;;Total ram usage:        0 bytes
 27086 ;; Hardware stack levels used:    1
 27087 ;; This function calls:
 27088 ;;		Nothing
 27089 ;; This function is called by:
 27090 ;;		Interrupt level 2
 27091 ;; This function uses a non-reentrant model
 27092 ;;
 27093                           
 27094                           	psect	text143
 27095  018F20                     __ptext143:
 27096                           	opt callstack 0
 27097  018F20                     _DMA1_DMADCNT_ISR:
 27098                           	opt callstack 14
 27099                           
 27100                           ; BSR set to: 0
 27101                           ;incstack = 0
 27102  018F20  EE13  F356         	lfsr	1,___inthi_sp
 27103                           
 27104                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 27105  018F24  0139               	movlb	57	; () banked
 27106  018F26  93A2               	bcf	162,1,b	;volatile
 27107                           
 27108                           ; BSR set to: 57
 27109  018F28  0011               	retfie		f
 27110  018F2A                     __end_of_DMA1_DMADCNT_ISR:
 27111                           	opt callstack 0
 27112                           
 27113 ;; *************** function _DMA1_DMAA_ISR *****************
 27114 ;; Defined at:
 27115 ;;		line 144 in file "mcc_generated_files/dma1.c"
 27116 ;; Parameters:    Size  Location     Type
 27117 ;;		None
 27118 ;; Auto vars:     Size  Location     Type
 27119 ;;		None
 27120 ;; Return value:  Size  Location     Type
 27121 ;;                  1    wreg      void 
 27122 ;; Registers used:
 27123 ;;		None
 27124 ;; Tracked objects:
 27125 ;;		On entry : 0/0
 27126 ;;		On exit  : 3F/39
 27127 ;;		Unchanged: 0/0
 27128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27133 ;;Total ram usage:        0 bytes
 27134 ;; Hardware stack levels used:    1
 27135 ;; This function calls:
 27136 ;;		Nothing
 27137 ;; This function is called by:
 27138 ;;		Interrupt level 2
 27139 ;; This function uses a non-reentrant model
 27140 ;;
 27141                           
 27142                           	psect	text144
 27143  018F2C                     __ptext144:
 27144                           	opt callstack 0
 27145  018F2C                     _DMA1_DMAA_ISR:
 27146                           	opt callstack 14
 27147                           
 27148                           ; BSR set to: 57
 27149                           ;incstack = 0
 27150  018F2C  EE13  F356         	lfsr	1,___inthi_sp
 27151                           
 27152                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 27153  018F30  0139               	movlb	57	; () banked
 27154  018F32  97A2               	bcf	162,3,b	;volatile
 27155                           
 27156                           ; BSR set to: 57
 27157  018F34  0011               	retfie		f
 27158  018F36                     __end_of_DMA1_DMAA_ISR:
 27159                           	opt callstack 0
 27160                           
 27161 ;; *************** function _DMA1_DMAOR_ISR *****************
 27162 ;; Defined at:
 27163 ;;		line 155 in file "mcc_generated_files/dma1.c"
 27164 ;; Parameters:    Size  Location     Type
 27165 ;;		None
 27166 ;; Auto vars:     Size  Location     Type
 27167 ;;		None
 27168 ;; Return value:  Size  Location     Type
 27169 ;;                  1    wreg      void 
 27170 ;; Registers used:
 27171 ;;		None
 27172 ;; Tracked objects:
 27173 ;;		On entry : 0/0
 27174 ;;		On exit  : 3F/39
 27175 ;;		Unchanged: 0/0
 27176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27181 ;;Total ram usage:        0 bytes
 27182 ;; Hardware stack levels used:    1
 27183 ;; This function calls:
 27184 ;;		Nothing
 27185 ;; This function is called by:
 27186 ;;		Interrupt level 2
 27187 ;; This function uses a non-reentrant model
 27188 ;;
 27189                           
 27190                           	psect	text145
 27191  018F38                     __ptext145:
 27192                           	opt callstack 0
 27193  018F38                     _DMA1_DMAOR_ISR:
 27194                           	opt callstack 14
 27195                           
 27196                           ; BSR set to: 57
 27197                           ;incstack = 0
 27198  018F38  EE13  F356         	lfsr	1,___inthi_sp
 27199                           
 27200                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 27201  018F3C  0139               	movlb	57	; () banked
 27202  018F3E  95A2               	bcf	162,2,b	;volatile
 27203                           
 27204                           ; BSR set to: 57
 27205  018F40  0011               	retfie		f
 27206  018F42                     __end_of_DMA1_DMAOR_ISR:
 27207                           	opt callstack 0
 27208                           
 27209                           ;
 27210                           ; Interrupt Vector Table @ 0x8
 27211                           ;
 27212                           
 27213                           	psect	ivt0x8
 27214  000008                     __pivt0x8:
 27215                           	opt callstack 0
 27216  000008                     ivt0x8_base:
 27217                           	opt callstack 0
 27218                           
 27219                           ; Vector 0 : SWINT
 27220  000008  63DF               	dw	_Default_ISR shr (0+2)
 27221                           
 27222                           ; Vector 1 : HLVD
 27223  00000A  63DF               	dw	_Default_ISR shr (0+2)
 27224                           
 27225                           ; Vector 2 : OSF
 27226  00000C  63DF               	dw	_Default_ISR shr (0+2)
 27227                           
 27228                           ; Vector 3 : CSW
 27229  00000E  63DF               	dw	_Default_ISR shr (0+2)
 27230                           
 27231                           ; Vector 4 : NVM
 27232  000010  63DF               	dw	_Default_ISR shr (0+2)
 27233                           
 27234                           ; Vector 5 : SCAN
 27235  000012  63DF               	dw	_Default_ISR shr (0+2)
 27236                           
 27237                           ; Vector 6 : CRC
 27238  000014  63DF               	dw	_Default_ISR shr (0+2)
 27239                           
 27240                           ; Vector 7 : IOC
 27241  000016  63DF               	dw	_Default_ISR shr (0+2)
 27242                           
 27243                           ; Vector 8 : INT0
 27244  000018  63BA               	dw	_INT0_ISR shr (0+2)
 27245                           
 27246                           ; Vector 9 : ZCD
 27247  00001A  63DF               	dw	_Default_ISR shr (0+2)
 27248                           
 27249                           ; Vector 10 : AD
 27250  00001C  61CE               	dw	_ADCC_ISR shr (0+2)
 27251                           
 27252                           ; Vector 11 : ADT
 27253  00001E  6003               	dw	_ADCC_ThresholdISR shr (0+2)
 27254                           
 27255                           ; Vector 12 : CMP1
 27256  000020  63DF               	dw	_Default_ISR shr (0+2)
 27257                           
 27258                           ; Vector 13 : SMT1
 27259  000022  63DF               	dw	_Default_ISR shr (0+2)
 27260                           
 27261                           ; Vector 14 : SMT1PRA
 27262  000024  63DF               	dw	_Default_ISR shr (0+2)
 27263                           
 27264                           ; Vector 15 : SMT1PRW
 27265  000026  63DF               	dw	_Default_ISR shr (0+2)
 27266                           
 27267                           ; Vector 16 : DMA1SCNT
 27268  000028  63C2               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 27269                           
 27270                           ; Vector 17 : DMA1DCNT
 27271  00002A  63C8               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 27272                           
 27273                           ; Vector 18 : DMA1OR
 27274  00002C  63CE               	dw	_DMA1_DMAOR_ISR shr (0+2)
 27275                           
 27276                           ; Vector 19 : DMA1A
 27277  00002E  63CB               	dw	_DMA1_DMAA_ISR shr (0+2)
 27278                           
 27279                           ; Vector 20 : SPI1RX
 27280  000030  63DF               	dw	_Default_ISR shr (0+2)
 27281                           
 27282                           ; Vector 21 : SPI1TX
 27283  000032  63DF               	dw	_Default_ISR shr (0+2)
 27284                           
 27285                           ; Vector 22 : SPI1
 27286  000034  63DF               	dw	_Default_ISR shr (0+2)
 27287                           
 27288                           ; Vector 23 : I2C1RX
 27289  000036  63DF               	dw	_Default_ISR shr (0+2)
 27290                           
 27291                           ; Vector 24 : I2C1TX
 27292  000038  63DF               	dw	_Default_ISR shr (0+2)
 27293                           
 27294                           ; Vector 25 : I2C1
 27295  00003A  63DF               	dw	_Default_ISR shr (0+2)
 27296                           
 27297                           ; Vector 26 : I2C1E
 27298  00003C  63DF               	dw	_Default_ISR shr (0+2)
 27299                           
 27300                           ; Vector 27 : U1RX
 27301  00003E  62F7               	dw	_UART1_rx_vect_isr shr (0+2)
 27302                           
 27303                           ; Vector 28 : U1TX
 27304  000040  62ED               	dw	_UART1_tx_vect_isr shr (0+2)
 27305                           
 27306                           ; Vector 29 : U1E
 27307  000042  63DF               	dw	_Default_ISR shr (0+2)
 27308                           
 27309                           ; Vector 30 : U1
 27310  000044  63DF               	dw	_Default_ISR shr (0+2)
 27311                           
 27312                           ; Vector 31 : TMR0
 27313  000046  63DF               	dw	_Default_ISR shr (0+2)
 27314                           
 27315                           ; Vector 32 : TMR1
 27316  000048  63DF               	dw	_Default_ISR shr (0+2)
 27317                           
 27318                           ; Vector 33 : TMR1G
 27319  00004A  63DF               	dw	_Default_ISR shr (0+2)
 27320                           
 27321                           ; Vector 34 : TMR2
 27322  00004C  63DF               	dw	_Default_ISR shr (0+2)
 27323                           
 27324                           ; Vector 35 : CCP1
 27325  00004E  63DF               	dw	_Default_ISR shr (0+2)
 27326                           
 27327                           ; Vector 36 : Undefined
 27328  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 27329                           
 27330                           ; Vector 37 : NCO1
 27331  000052  63DF               	dw	_Default_ISR shr (0+2)
 27332                           
 27333                           ; Vector 38 : CWG1
 27334  000054  63DF               	dw	_Default_ISR shr (0+2)
 27335                           
 27336                           ; Vector 39 : CLC1
 27337  000056  63DF               	dw	_Default_ISR shr (0+2)
 27338                           
 27339                           ; Vector 40 : INT1
 27340  000058  63BE               	dw	_INT1_ISR shr (0+2)
 27341                           
 27342                           ; Vector 41 : CMP2
 27343  00005A  63DF               	dw	_Default_ISR shr (0+2)
 27344                           
 27345                           ; Vector 42 : DMA2SCNT
 27346  00005C  63DF               	dw	_Default_ISR shr (0+2)
 27347                           
 27348                           ; Vector 43 : DMA2DCNT
 27349  00005E  63DF               	dw	_Default_ISR shr (0+2)
 27350                           
 27351                           ; Vector 44 : DMA2OR
 27352  000060  63DF               	dw	_Default_ISR shr (0+2)
 27353                           
 27354                           ; Vector 45 : DMA2A
 27355  000062  63DF               	dw	_Default_ISR shr (0+2)
 27356                           
 27357                           ; Vector 46 : I2C2RX
 27358  000064  63DF               	dw	_Default_ISR shr (0+2)
 27359                           
 27360                           ; Vector 47 : I2C2TX
 27361  000066  63DF               	dw	_Default_ISR shr (0+2)
 27362                           
 27363                           ; Vector 48 : I2C2
 27364  000068  63DF               	dw	_Default_ISR shr (0+2)
 27365                           
 27366                           ; Vector 49 : I2C2E
 27367  00006A  63DF               	dw	_Default_ISR shr (0+2)
 27368                           
 27369                           ; Vector 50 : U2RX
 27370  00006C  630B               	dw	_UART2_rx_vect_isr shr (0+2)
 27371                           
 27372                           ; Vector 51 : U2TX
 27373  00006E  6301               	dw	_UART2_tx_vect_isr shr (0+2)
 27374                           
 27375                           ; Vector 52 : U2E
 27376  000070  63DF               	dw	_Default_ISR shr (0+2)
 27377                           
 27378                           ; Vector 53 : U2
 27379  000072  63DF               	dw	_Default_ISR shr (0+2)
 27380                           
 27381                           ; Vector 54 : TMR3
 27382  000074  63DF               	dw	_Default_ISR shr (0+2)
 27383                           
 27384                           ; Vector 55 : TMR3G
 27385  000076  63DF               	dw	_Default_ISR shr (0+2)
 27386                           
 27387                           ; Vector 56 : TMR4
 27388  000078  63DF               	dw	_Default_ISR shr (0+2)
 27389                           
 27390                           ; Vector 57 : CCP2
 27391  00007A  63DF               	dw	_Default_ISR shr (0+2)
 27392                           
 27393                           ; Vector 58 : Undefined
 27394  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 27395                           
 27396                           ; Vector 59 : CWG2
 27397  00007E  63DF               	dw	_Default_ISR shr (0+2)
 27398                           
 27399                           ; Vector 60 : CLC2
 27400  000080  63DF               	dw	_Default_ISR shr (0+2)
 27401                           
 27402                           ; Vector 61 : INT2
 27403  000082  63DF               	dw	_Default_ISR shr (0+2)
 27404                           
 27405                           ; Vector 62 : Undefined
 27406  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 27407                           
 27408                           ; Vector 63 : Undefined
 27409  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 27410                           
 27411                           ; Vector 64 : Undefined
 27412  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 27413                           
 27414                           ; Vector 65 : Undefined
 27415  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 27416                           
 27417                           ; Vector 66 : Undefined
 27418  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 27419                           
 27420                           ; Vector 67 : Undefined
 27421  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 27422                           
 27423                           ; Vector 68 : Undefined
 27424  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 27425                           
 27426                           ; Vector 69 : Undefined
 27427  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 27428                           
 27429                           ; Vector 70 : TMR5
 27430  000094  6098               	dw	_TMR5_ISR shr (0+2)
 27431                           
 27432                           ; Vector 71 : TMR5G
 27433  000096  63DF               	dw	_Default_ISR shr (0+2)
 27434                           
 27435                           ; Vector 72 : TMR6
 27436  000098  6382               	dw	_TMR6_ISR shr (0+2)
 27437                           
 27438                           ; Vector 73 : CCP3
 27439  00009A  63DF               	dw	_Default_ISR shr (0+2)
 27440                           
 27441                           ; Vector 74 : CWG3
 27442  00009C  63DF               	dw	_Default_ISR shr (0+2)
 27443                           
 27444                           ; Vector 75 : CLC3
 27445  00009E  63DF               	dw	_Default_ISR shr (0+2)
 27446                           
 27447                           ; Vector 76 : Undefined
 27448  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 27449                           
 27450                           ; Vector 77 : Undefined
 27451  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 27452                           
 27453                           ; Vector 78 : Undefined
 27454  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 27455                           
 27456                           ; Vector 79 : Undefined
 27457  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 27458                           
 27459                           ; Vector 80 : CCP4
 27460  0000A8  63DF               	dw	_Default_ISR shr (0+2)
 27461                           
 27462                           ; Vector 81 : CLC4
 27463  0000AA  63DF               	dw	_Default_ISR shr (0+2)
 27464  0000AC                     ivt0x8_undefint:
 27465                           	opt callstack 0
 27466  0000AC  00FF               	reset	
 27467                           
 27468                           	psect	text146
 27469  000000                     __ptext146:
 27470                           	opt callstack 0
 27471                           
 27472                           	psect	param0
 27473  0000                     
 27474                           	psect	temp
 27475  000035                     btemp:
 27476                           	opt callstack 0
 27477  000035                     	ds	32
 27478  0000                     wtemp0	set	btemp
 27479  0000                     wtemp1	set	btemp+2
 27480  0000                     wtemp2	set	btemp+4
 27481  0000                     wtemp3	set	btemp+6
 27482  0000                     wtemp4	set	btemp+8
 27483  0000                     wtemp5	set	btemp+10
 27484  0000                     wtemp8	set	btemp+1
 27485  0000                     ttemp0	set	btemp
 27486  0000                     ttemp1	set	btemp+3
 27487  0000                     ttemp2	set	btemp+6
 27488  0000                     ttemp3	set	btemp+9
 27489  0000                     ttemp5	set	btemp+1
 27490  0000                     ttemp6	set	btemp+4
 27491  0000                     ttemp7	set	btemp+8
 27492  0000                     ltemp0	set	btemp
 27493  0000                     ltemp1	set	btemp+4
 27494  0000                     ltemp2	set	btemp+8
 27495  0000                     lltemp0	set	btemp
 27496  0000                     lltemp1	set	btemp+8
 27497  0000                     lltemp2	set	btemp+16
 27498  0000                     lltemp3	set	btemp+24
 27499                           tosu	equ	0x3FFF
 27500                           tosh	equ	0x3FFE
 27501                           tosl	equ	0x3FFD
 27502                           stkptr	equ	0x3FFC
 27503                           pclatu	equ	0x3FFB
 27504                           pclath	equ	0x3FFA
 27505                           pcl	equ	0x3FF9
 27506                           tblptru	equ	0x3FF8
 27507                           tblptrh	equ	0x3FF7
 27508                           tblptrl	equ	0x3FF6
 27509                           tablat	equ	0x3FF5
 27510                           prodh	equ	0x3FF4
 27511                           prodl	equ	0x3FF3
 27512                           indf0	equ	0x3FEF
 27513                           postinc0	equ	0x3FEE
 27514                           postdec0	equ	0x3FED
 27515                           preinc0	equ	0x3FEC
 27516                           plusw0	equ	0x3FEB
 27517                           fsr0h	equ	0x3FEA
 27518                           fsr0l	equ	0x3FE9
 27519                           wreg	equ	0x3FE8
 27520                           indf1	equ	0x3FE7
 27521                           postinc1	equ	0x3FE6
 27522                           postdec1	equ	0x3FE5
 27523                           preinc1	equ	0x3FE4
 27524                           plusw1	equ	0x3FE3
 27525                           fsr1h	equ	0x3FE2
 27526                           fsr1l	equ	0x3FE1
 27527                           bsr	equ	0x3FE0
 27528                           indf2	equ	0x3FDF
 27529                           postinc2	equ	0x3FDE
 27530                           postdec2	equ	0x3FDD
 27531                           preinc2	equ	0x3FDC
 27532                           plusw2	equ	0x3FDB
 27533                           fsr2h	equ	0x3FDA
 27534                           fsr2l	equ	0x3FD9
 27535                           status	equ	0x3FD8


Data Sizes:
    Strings     286
    Constant    144
    Data        254
    BSS         1361
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      58
    BANK0           160      5     139
    BANK1           256      0     251
    BANK2           256      0     252
    BANK3           256      0     198
    BANK4           256      0     218
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_33(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[3]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[3]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 24
		 -> ct(STACK[3]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[15]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 24
		 -> ct(STACK[3]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[15]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4829_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK1[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_16(CODE[9]), 
		 -> STR_15(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), 
		 -> STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    S3979tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  323308
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10929
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  186219
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    10     14   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _utoa                                                24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     159
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     162
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              1 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              1 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              0 BANK0      1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DA      13       85.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      8B       5       86.9%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      3A       1       92.1%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     65A      58        0.0%
DATA                 0      0     65A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 13 01:28:38 2019

                     _SPI1_Exchange8bit 8D00                __end_of_set_display_info 8D5A  
                                     _C 0200                                       _D 0400  
                                     _P 0094                                       _R 00A3  
                                     _T FE51                                       _V 0100  
      __end_of_TMR5_SetInterruptHandler 8AEC                             __CFG_CP$OFF 000000  
               __size_of_ringBufS_flush 0092                  __end_of_FVR_Initialize 8F6A  
                           __CFG_LVP$ON 000000                                     l171 8E8E  
                                   l701 8954                                     l581 8928  
                                   l835 8D0E                                     _GIE 01FE97  
                                   _abs 84A2                                     _pad 70A8  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize 8E3A  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack 8C9A  
                    _UART1_Transmit_ISR 8902                           __CFG_BBEN$OFF 000000  
                         _INT1_CallBack 8CBC                            __CFG_ZCD$OFF 000000  
                                  l1028 86BE                                    l1250 438A  
                                  l1242 41DE                                    l1252 4390  
                                  l1329 82C6                                    l1602 8D56  
                                  l2308 6944                                    l2270 7712  
                                  l1545 871C                                    l1465 787A  
                                  l2281 6AA6                                    l2274 69D2  
                                  l1810 123A                                    l1562 72C6  
                                  l1554 5FA2                                    l2700 84E2  
                                  l1484 8788                                    l1469 7C2E  
                                  l1558 60FE                                    l1654 379A  
                                  l2560 305C                                    l1913 4CF6  
                                  l1754 7104                                    l2731 5A86  
                                  l2548 31CC                                    l2629 2A10  
                                  l1774 3DF8                                    l1854 0B1A  
                  _ADCC_StartConversion 8EA8                                    l1839 066A  
                                  l7000 6A20                                    l1928 45D0  
                                  l2593 3D10                                    l2841 5EE6  
                                  l1699 64BC                                    l6116 79F6  
                                  l7012 6AA4                                    l7004 6A6E  
                                  l7020 8432                                    l6300 3090  
                                  l2692 6652                                    l1892 53C8  
                                  l2669 62FC                                    l6118 7A18  
                                  l6230 2DD8                                    l6150 2AB0  
                                  l7030 682E                                    l7102 6CE4  
                                  l6304 309C                                    l6232 2DEA  
                                  l6240 2E24                                    l6216 2D46  
                                  l6144 2A70                                    l6400 65F0  
                                  l2856 7E4C                                    l6330 3128  
                                  l6314 30C4                                    l6226 2DB8  
                                  l6162 2B2E                                    l6154 2AC6  
                                  l6410 664A                                    l1978 21E6  
                                  l2795 6F86                                    l6500 55FE  
                                  l6340 3154                                    l6260 2ED2  
                                  l6236 2DF4                                    l6180 2BE6  
                                  l6156 2AF6                                    l6404 65F4  
                                  l2869 7DC8                                    l7118 8404  
                                  l6318 30CA                                    l6174 2BA0  
                                  l7054 68DC                                    l7046 68B0  
                                  l7070 66AA                                    l8040 8C6E  
                                  l6512 5698                                    l6600 38D4  
                                  l6352 31AC                                    l6344 316C  
                                  l6280 2FE6                                    l6264 2EDC  
                                  l6168 2B60                                    l7056 68F2  
                                  l7048 68CC                                    l8120 8792  
                                  l8200 62DC                                    l6506 5652  
                                  l6610 392A                                    l6346 317C  
                                  l6290 3040                                    l6282 300C  
                                  l6258 2EC0                                    l6186 2C08  
                                  l6178 2BB6                                    l6442 4A64  
                                  l7082 677C                                    l6524 576A  
                                  l6700 3C50                                    l6612 395A  
                                  l6268 2F0E                                    l6428 7E3C  
                                  l9022 7AB8                                    l9014 7AA6  
                                  l6606 3914                                    l6462 4C1A  
                                  l7094 6C38                                    l6560 5C22  
                                  l6552 5B76                                    l6544 5AEE  
                                  l6720 3CF4                                    l6712 3CBC  
                                  l6632 39EC                                    l6624 39D2  
                                  l6456 4B82                                    l6386 84D2  
                                  l6706 3C8C                                    l6650 3AB2  
                                  l6642 3A7C                                    l6618 3998  
                                  l6298 307E                                    l6466 4C88  
                                  l6458 4BD2                                    l8170 61DC  
                                  l6652 3AC4                                    l6660 3B1C  
                                  l6580 37F6                                    l9300 7506  
                                  l6484 7DB8                                    l8180 6246  
                                  l8172 61FA                                    l6910 6B0A  
                                  l6718 3CE4                                    l6590 384C  
                                  l6830 2820                                    l6742 2286  
                                  l8190 627A                                    l8182 625C  
                                  l8166 61B8                                    l8158 614C  
                                  l6904 6AEA                                    l6672 3B66  
                                  l6592 387C                                    l6824 2804  
                                  l6760 2354                                    l6744 228C  
                                  l6736 2246                                    l8168 61C6  
                                  l9306 7CE4                                    l6690 3BDC  
                                  l6666 3B4A                                    l6658 3B18  
                                  l6586 3836                                    l6834 2846  
                                  l6762 235A                                    l6754 2314  
                                  l6746 22BC                                    l8178 6228  
                                  l7708 5A76                                    l9308 7D10  
                                  l9340 3E32                                    l9332 3DE8  
                                  l6932 6BE4                                    l6924 6BB0  
                                  l6676 3B8C                                    l6844 2890  
                                  l6772 23AC                                    l6764 238A  
                                  l9500 0602                                    l9404 00F0  
                                  l9412 0146                                    l7724 5D58  
                                  l8700 349A                                    l9270 7B1C  
                                  l6686 3BD6                                    l6862 2950  
                                  l9422 01EA                                    l9430 0258  
                                  l7726 5DC4                                    l7672 5836  
                                  l9280 70D4                                    l9344 3E50  
                                  l6952 6FDA                                    l6944 6FB0  
                                  l6848 2896                                    l9520 06F0  
                                  l9440 02FC                                    l9424 0216  
                                  l8720 36A0                                    l8712 3594  
                                  l7690 5910                                    l7682 58CC  
                                  l7674 5858                                    l9258 6E9C  
                                  l9274 7B5A                                    l9290 714A  
                                  l9354 4062                                    l6970 708E  
                                  l6962 705A                                    l6858 290A  
                                  l9602 0D90                                    l9610 0EA2  
                                  l9426 022C                                    l8572 85A4  
                                  l8812 8924                                    l7692 5934  
                                  l9284 70FC                                    l6948 6FC2  
                                  l6876 29BE                                    l6868 297A  
                                  l9516 06B8                                    l9460 0406  
                                  l8708 34CC                                    l8646 8732  
                                  l7694 5972                                    l9294 7194  
                                  l9286 710E                                    l9374 4114  
                                  l6982 76DC                                    l6878 29D8  
                                  l9622 0F3A                                    l9550 0A48  
                                  l9526 077A                                    l9462 0470  
                                  l9710 53FE                                    l8726 3768  
                                  l8734 377A                                    l8750 633E  
                                  l8568 857A                                    l7688 58F8  
                                  l9560 0B34                                    l9536 0926  
                                  l9456 0396                                    l9448 032A  
                                  l9392 00AC                                    l8834 8950  
                                  l7698 59DA                                    l9378 4150  
                                  l6898 6AD4                                    l6986 7710  
                                  l6978 769A                                    l6994 6990  
                                  l9490 0594                                    l9482 057C  
                                  l9466 04D2                                    l9714 543A  
                                  l8762 6382                                    l8860 86A6  
                                  l9636 0FD6                                    l9484 058E  
                                  l9732 555C                                    l9724 54F4  
                                  l9638 0FF0                                    l9574 0C32  
                                  l9558 0B12                                    l9478 0554  
                                  l9718 546A                                    l9822 478C  
                                  l9806 4696                                    l9830 4812  
                                  l9910 165C                                    l8686 3206  
                                  l8758 636A                                    l9648 1092  
                                  l9728 5520                                    l9920 16F4  
                                  l8696 3372                                    l9674 119A  
                                  l9658 10E2                                    l9586 0CBA  
                                  l9594 0D24                                    l9498 05F6  
                                  l9754 4D42                                    l9746 4CE6  
                                  l9764 4F38                                    l9932 1834  
                                  l9694 534A                                    l9846 48FC  
                                  l9870 1360                                    l8958 7E5C  
                                  STR_1 FF66                                    l9792 45FA  
                                  l9952 1A46                                    l9944 198E  
                                  l9928 17E0                                    l9872 1376  
                                  STR_2 FF97                                    STR_3 FFD2  
                                  l9786 45C0                                    l9890 14A8  
                                  STR_4 FF55                                    STR_5 FF77  
                                  l9956 1A7A                                    l9892 14E2  
                                  l9868 1326                                    STR_6 FF97  
                                  STR_7 FFD2                                    l9798 4636  
                                  l9894 14F8                                    STR_8 FF44  
                                  STR_9 FFA6                                    l9976 1BDA  
                                  l9986 1C88                                    l9996 1DAA  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u5100 8868  
                                  u5030 3118                                    u5110 886A  
                                  u6000 239A                                    u5035 3108  
                                  u5060 3138                                    u5220 6642  
                                  u5300 4A48                                    u6110 28E4  
                                  u5230 6644                                    u6015 252E  
                                  u5215 6624                                    u5160 84B6  
                                  u6200 6BD0                                    u6120 291E  
                                  u5400 85F4                                    u6025 25F6  
                                  u6130 2964                                    u5170 6574  
                                  u5410 7D76                                    _T6PR 003F93  
                                  u6115 28D4                                    u6035 27BE  
                                  u5340 4B28                                    u5260 7DFA  
                                  u5420 7D78                                    _PMD0 0039C0  
                                  u5501 5658                                    u5325 4A82  
                                  _PMD1 0039C1                                    u4630 7A46  
                                  u5510 5692                                    u6310 770C  
                                  u6070 2888                                    u5326 4A88  
                                  u5270 7DFC                                    _PMD2 0039C2  
                                  u5175 656A                                    u5327 4A96  
                                  _PMD3 0039C3                                    u5440 88C8  
                                  u5520 56C4                                    u6400 685C  
                                  u5360 4C00                                    _PMD4 0039C4  
                                  u5345 4B1E                                    _PMD5 0039C5  
                                  u5450 88CA                                    u5610 5B3E  
                                  u6250 7006                                    u5290 49FC  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u5540 57A2                                    u5620 5B70  
                                  u6180 6B36                                    u4820 2E1C  
                                  u4660 8898                                    u6500 66D6  
                                  u4637 7A38                                    u6405 6852  
                                  u5365 4BF6                                    u5470 55F8  
                                  u5630 5BA2                                    u6270 707A  
                                  u4830 2E3C                                    u4670 889A  
                                  u5390 85F2                                    u5295 49F2  
                                  u6600 8400                                    u5560 57F4  
                                  u6520 67B4                                    u4825 2E0C  
                                  u5490 564E                                    u5650 5C5A  
                                  u5810 3B44                                    u6370 842E  
                                  u4930 302E                                    u4770 2D6C  
                                  u6450 68FA                                    u9100 6E90  
                                  u5900 3C64                                    u4780 2D8C  
                                  u6380 680E                                    u6540 6C32  
                                  u4781 2D86                                    u5670 5CAC  
                                  u5590 5AE8                                    u5910 3CA0  
                                  u6470 6924                                    u6390 6822  
                                  u6550 6C64                                    u9120 6F0C  
                                  u8320 6270                                    u6385 6804  
                                  u6481 666A                                    u5850 3BCE  
                                  u4970 30A2                                    u4890 2F04  
                                  u6490 66A4                                    u6570 6D1C  
                                  u7700 5A20                                    u9300 4076  
                                  u9220 3D4A                                    u8245 8672  
                                  u6590 83E0                                    u7710 5A22  
                                  u9230 3D4C                                    u4990 30BC  
                                  u4798 2D8E                                    u9311 40A6  
                                  u4895 2EF4                                    u8360 8082  
                                  u9320 40BC                                    u9400 00DA  
                                  u7800 5EBA                                    u8600 35D8  
                                  u9321 40BA                                    u9330 40D0  
                                  u9250 3DBC                                    u5890 3C2A  
                                  u8514 3220                                    u8610 631C  
                                  u8515 321A                                    u9340 40D4  
                                  u9180 7580                                    u9270 3DCE  
                                  u9430 0194                                    u7750 5DF2  
                                  u8534 3242                                    u5895 3C1A  
                                  u7807 5EAC                                    u8535 323C  
                                  u7680 58C8                                    u9360 40EA  
                                  u9520 050E                                    u9440 0196  
                                  u8385 80B6                                    u8386 80B8  
                                  u8378 8084                                    u9290 3E1E  
                                  u8554 34B4                                    u9187 7572  
                                  u8555 34AE                                    u9620 0648  
                                  u7757 5DE4                                    u9550 0562  
                                  u9470 02A6                                    u7790 5E8C  
                                  u8574 35AE                                    u8494 31F0  
                                  u8575 35A8                                    u8495 31EA  
                                  u9480 02A8                                    u8594 35D0  
                                  _PLLR 01CEE0                                    u7795 5E86  
                                  u8595 35CA                                    u9580 05C6  
                                  u7797 5E78                                    u9850 10B8  
                                  u9690 0A18                                    u9870 116E  
                                  u9790 0EE4                                    u9950 5460  
                                  u9880 1170                                    u9960 54A6  
                                  u9990 5582                                    u9967 5498  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR 8770                           __CFG_FCMEN$ON 000000  
                                  _dbuf 02AC                                    _atoi 581C  
                                  _ctoa 7CC6                                    _main 419A  
                                  _dtoa 3D1A                                    _nanf 813E  
                                  _seed 009B                                    _prec 0020  
                                  _nout 001C                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 52DE                                    btemp 0035  
                                  _utoa 4CB2                                    _xtoa 458C  
                __end_of_check_adc_scan 8F62                           ___fpclassifyf 64C6  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0026  
             __end_of_SPI1_Exchange8bit 8D1E                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 8BDC                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0055                        __end_of_INT0_ISR 8EF6  
                      __end_of_INT1_ISR 8F06          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 7882           __end_of_OSCILLATOR_Initialize 8E94  
                                 l10020 1FDC                                   l10006 1E60  
                                 l10040 216E                                   l10104 78AC  
                                 l10034 2114                                   l10050 2192  
                                 l10106 78EC                                   l10044 2172  
                                 l10072 508A                                   l10306 5F72  
                                 l10092 5260                                   l10084 51B2  
                                 l10156 7982                                   l10078 5148  
                                 l10190 71DE                                   l10318 609A  
                                 l10434 4394                                   l10436 43C2  
                                 l10456 441A                                   l10448 43F6  
                                 l10392 41E6                                   l10466 4546  
                                 l10394 41F8                                   l10386 41C0  
                                 l10388 41C8                                   l10478 457A  
                                 PRLOCK 0039EF                         __end_of___aodiv 581C  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 31D6                                   _ADCLK 003EFF  
                       __end_of___aomod 5CD0                                   _ADPCH 003EF1  
                       __end_of___fldiv 3D1A                                   _ADREF 003EFD  
                       __end_of___awdiv 6BFE                         __end_of___flneg 845C  
                                 STR_10 FFA6                                   STR_11 FF32  
                                 STR_20 FFBF                                   STR_12 FFFC  
                                 STR_13 FFF9                                   STR_21 FF88  
                                 STR_22 FF88                                   STR_23 FF88  
                                 STR_15 FFB3                                   STR_16 FFC9  
                                 STR_24 FEE1                                   STR_33 FF0B  
                                 STR_17 FF0C                           __CFG_WDTE$OFF 000000  
                                 STR_18 FF0C                                   STR_42 FFEA  
                                 STR_34 FFD7                                   STR_26 FF1F  
                                 STR_51 FFED                                   STR_35 FFDF  
                                 STR_19 FFBF                                   STR_27 FEF9  
                                 STR_44 FFEA                         __end_of___awmod 70A8  
                                 STR_53 FFED                                   STR_61 FFF6  
                                 STR_46 FFF0                                   STR_38 FFDB  
                                 STR_63 FFF6                                   STR_39 FFE3  
                                 STR_48 FFF0                                   STR_56 FFF3  
                                 _ADRPT 003EEC                                   STR_65 FFE7  
                                 STR_58 FFF3                                   STR_67 FFE7  
                       __end_of___flmul 2A1A                         __end_of___flsub 84A2  
                       __end_of___fltol 694E                                   u10010 4CCC  
                                 u10200 482E                                   u10120 468E  
                                 u10041 4F7A                                   u10050 4F90  
                                 u10130 46E2                                   u10051 4F8E  
                                 u10211 485E                                   u10060 4FA4  
                                 u10220 4874                                   u10140 46E4  
                                 u10300 13C0                                   u10221 4872  
                                 u10070 4FA8                                   u10230 4888  
                                 u10310 13E6                                   u10240 488C  
                                 u10160 4742                                   u10170 4744  
                                 u10090 45A6                                   u10410 1748  
                                 u10340 1540                                   u10190 480E  
                                 u10430 18BC                                   u10350 1542  
                                 u10360 1568                                   u10530 1EB4  
                                 u10290 13BE                                   u10610 52D4  
                       __end_of___lodiv 67DC                                   u10195 47F0  
                                 u10460 1B34                                   u10550 2064  
                                 u10470 1B36                                   u10640 7962  
                                 u10730 60EA                                   _U1P1H 003DED  
                                 u10740 60EC                                   _U1P2H 003DEF  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                         __end_of___lomod 6D3E  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0004  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 00E6                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR5H 003F99  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 8F7C  
               __size_of_clear_adc_scan 0006       __size_of_TMR6_SetInterruptHandler 0028  
                     _UART1_tx_vect_isr 8BB4                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 82BC                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 8E22                            _DMA1CON1bits 003BFD  
                                 _flags 0022                                   _fputc 6E6C  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 85FE  
                                 _fputs 7B0C                         __end_of_isdigit 88D4  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0055  
                                 _srand 87DC                                   _width 001E  
                                 _putch 8DEC                         __end_of_islower 8874  
                       __end_of_isspace 8414                _INT1_SetInterruptHandler 8AEC  
                       __end_of_isupper 88A4                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0035  
                                 ltemp1 0039                                   ltemp2 003D  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0035  
                                 ttemp1 0038                                   ttemp2 003B  
                                 ttemp3 003E                                   ttemp5 0036  
                                 ttemp6 0039                                   ttemp7 003D  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 8A9C  
           _UART1_SetRxInterruptHandler 8A74                                   wtemp0 0035  
                                 wtemp1 0037                                   wtemp2 0039  
                                 wtemp3 003B                                   wtemp4 003D  
                                 wtemp5 003F                                   wtemp8 0036  
                       __end_of_sprintf 73D4                         __end_of_tolower 7E56  
                       __end_of_strncmp 5EF0                         __end_of_toupper 7DD2  
                   ??_UART1_tx_vect_isr 00E6               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 8C02                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 852E                   __end_of_ringBufS_init 89FC  
                       __initialization 7592                       _UART2_rx_vect_isr 8C2C  
                          __end_of_atoi 5A90                            __end_of_ctoa 7D4E  
                          __end_of_main 458C                            __end_of_dtoa 419A  
                          __end_of_nanf 81A0                            __end_of_stoa 559C  
                          __end_of_utoa 4FF2                            __end_of_xtoa 4946  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0055  
               __end_of_TMR2_Initialize 8E52                __size_of_DMA2_Initialize 005A  
              _TMR5_SetInterruptHandler 8AC4                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 00E6               __end_of_UART1_tx_vect_isr 8BDA  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 895A  
                       _PWM8_Initialize 8E68                        _UART1_Initialize 80DA  
                     _UART2_tx_vect_isr 8C04                      _UART2_Transmit_ISR 892E  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 7FA4  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 8642  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0055                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1045 82AE  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 8ED8                                  u410_48 8CCA  
                                _SCANPR 0039F7                                  u432_40 8D62  
                                u432_46 8D64                                  u408_48 8CA8  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u842_20 8B94  
                                u842_26 8B96                                  u871_48 8CEC  
                                u874_28 8C86                                  u886_44 7AD8  
                                u886_45 7AD2                                  u888_40 7AF8  
                                u888_46 7AFA                        __end_of___xxtofl 6306  
 __end_of_ADCC_DischargeSampleCapacitor 8F4A  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 8F42                __end_of_send_lcd_cmd_dma 83C2  
                   ??_UART2_tx_vect_isr 00E6               __end_of_UART2_rx_vect_isr 8C52  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 8F16  
                      _UART2_Initialize 8202                                  _WaitMs 8770  
                       _conv_raw_result 31D6                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 694E  
                                ___fleq 7658                       _ADCC_ThresholdISR 800C  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 7BA4  
                                _efgtoa 0000                                  _floorf 4946  
                    ?_ADCC_ThresholdISR 0055                                  _memset 4FF2  
                  __size_of_help_button 0038                                  clear_0 75DE  
                                clear_1 75F2                                  clear_2 7604  
                                clear_3 7610                                  clear_4 761C  
                                clear_5 7628                                  clear_6 7634  
                                clear_7 7640                                  _printf 81A0  
                    _eaDogM_WriteString 792A                                  _strcpy 74BE  
                             ?_ADCC_ISR 0055                                  _strlen 79D0  
                    __size_of_TimerDone 0024                         _ADCC_Initialize 7F3A  
                        _PMD_Initialize 8E94               __end_of_UART2_tx_vect_isr 8C2A  
                                lltemp0 0035                                  lltemp1 003D  
                                lltemp2 0045                                  lltemp3 004D  
                   ??_ADCC_ThresholdISR 0056                  __end_of_start_adc_scan 800C  
                          __mediumconst FE50                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 8316  
                      __end_of_vfprintf 792A                              _StartTimer 86C4  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize 8574  
                     _SYSTEM_Initialize 84E8                              __accesstop 0060  
               __end_of__initialization 7652                               ?_INT0_ISR 0055  
                             ?_INT1_ISR 0055                    __end_of_display_help 8F5A  
                  __end_of_display_info 8F52               __end_of_CLKREF_Initialize 8F20  
                         ___rparam_used 000000              __size_of_UART1_rx_vect_isr 0026  
                       _TMR5_WriteTimer 8684                   _set_temp_display_help 8EBA  
             __end_of_ADCC_ThresholdISR 8074                  __end_of_ringBufS_flush 7C36  
                        __pcstackCOMRAM 0055                              ___inthi_sp 0F56  
                            ___intlo_sp 17AB                            __pidataBANK0 85FE  
                          __pidataBANK1 771C                               ?_TMR5_ISR 0055  
                             ?_TMR6_ISR 0055                          ivt0x8_undefint 00AC  
                         __end_of_fputc 6F90                           __end_of_fputs 7BA4  
                         __end_of_srand 8810                   __end_of_TMR5_CallBack 8C9A  
                         __end_of_putch 8E06                 __end_of_PWM8_Initialize 8E7E  
               __end_of_TMR6_Initialize 8984                       _adc_int_t_handler 7A72  
                __end_of_PMD_Initialize 8EA8                              ??_ADCC_ISR 0055  
                 __end_of_TMR6_CallBack 8D00             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0026                           _DMA1_DMAA_ISR 8F2C  
                        _clear_adc_scan 8F6A                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0013               __end_of_SYSTEM_Initialize 852E  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
                            __pbssBANK0 0060                              __pbssBANK1 01BB  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              _check_help 5EF0  
               __end_of_conv_raw_result 37A0                   _INT0_InterruptHandler 0019  
                            ??_INT0_ISR 0055                              ??_INT1_ISR 0055  
                     __end_of_TimerDone 8C76                        _DMA1_DMADCNT_ISR 8F20  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 8DD0  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 8AC4  
               __end_of_ADCC_Initialize 7FA4                              ??_TMR5_ISR 00E7  
             __end_of_adc_int_t_handler 7B0C                              ??_TMR6_ISR 00E6  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 8B64   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 8B3C                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 8D78  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 8F70                          ?_DMA1_DMAA_ISR 0055  
                      _DMA1_DMASCNT_ISR 8F08                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001C                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0055  
            __size_of_UART2_tx_vect_isr 0026                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 86C4  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 0068                           _mode_lamp_dim 8E22  
                               __Lparam 0000                __end_of_UART1_Initialize 813E  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 559C  
                               ___fladd 2A1A                                 ___aomod 5A90  
                               ___fldiv 37A0                                 ___awdiv 6AB0  
                               ___flneg 8414                                 ___awmod 6F90  
                               ___flmul 21F0                                 ___flsub 845C  
                               ___fltol 67DC                                 ___lodiv 665C  
                               ___lomod 6BFE               __end_of_UART1_Receive_ISR 8D96  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 74BE                                 __pcinit 7592  
              __end_of_mode_lamp_bright 8EE6                         __size_of_memset 02EC  
              __size_of_adc_int_handler 001E                     _eaDogM_WriteCommand 8ECA  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 419A                                 __ptext1 7FA4  
                               __ptext2 8EA8                                 __ptext3 8F42  
                               __ptext4 87DC                                 __ptext5 73D4  
                               __ptext6 8984                                 __ptext7 89AC  
                               __ptext8 8D00                                 __ptext9 89D4  
                     _UART2_Receive_ISR 8D96                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 8E7E  
                          __size_of_abs 0046                            __size_of_pad 0114  
                               us557999 5806                                 us653999 67C6  
                               _isalpha 85BA                                 _isdigit 88A4  
                               us568999 5CBE                                 us921999 3D34  
                               us658999 6D2E                                 _mode_sw 0028  
                               us990999 52F0                       __end_of_lp_filter 64C6  
                               _islower 8844                                 _isspace 83C2  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 8260                                 _isupper 8874  
            __size_of_SYSTEM_Initialize 0046                                 _sprintf 72CA  
                               _tolower 7DD2                   __size_of_display_help 0008  
                               _utctime 008C                   __size_of_display_info 0008  
                               _strncmp 5CD0                                 _toupper 7D4E  
                  end_of_initialization 7652               __size_of_convert_adc_data 007A  
   __end_of_UART1_SetTxInterruptHandler 8A74             _UART1_SetTxInterruptHandler 8A4C  
   __end_of_UART2_SetRxInterruptHandler 8A4C             _UART2_SetRxInterruptHandler 8A24  
                             i2u1080_48 8C16                               i2u1082_48 8C3E  
                             i2u1076_48 8BC6                               i2u1078_48 8BEE  
                     __end_of_set_vterm 8DEC                       __end_of_vfpfcnvrt 21F0  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 009A  
                   __size_of_StartTimer 003C                       __end_of_start_lcd 8F7C  
             __end_of_UART2_Receive_ISR 8DB4                          wdtdelay@dcount 0090  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 00E7  
                 _INT1_InterruptHandler 0016                               _PORTBbits 003FCB  
              _TMR6_SetInterruptHandler 8A9C                            _display_help 8F52  
                 _TMR5_InterruptHandler 0098                            _display_info 8F4A  
  __size_of_UART2_SetTxInterruptHandler 0028                       __size_of_ADCC_ISR 0038  
   __end_of_ADCC_SetADIInterruptHandler 8B8C             _ADCC_SetADIInterruptHandler 8B64  
                            _update_lcd 71BC                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                         _DMA1_Initialize 7ED0  
                       _SPI1_Initialize 8E52                   __end_of_get_vterm_ptr 8902  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 000E  
                        __end_of_WaitMs 87A6            __end_of_INTERRUPT_Initialize 80DA  
                            _vterm_dump 6D3E                          __end_of___flge 6AB0  
                        __end_of___fleq 771C    __end_of_INT0_DefaultInterruptHandler 8F84  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 8F82  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 8316  
                        __end_of_efgtoa 1244                       __size_of_TMR5_ISR 005C  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 4CB2             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 0084                          __end_of_memset 52DE  
                        __end_of_printf 8202                __end_of_DMA1_DMADCNT_ISR 8F2A  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 8CBC  
                        __end_of_strcpy 7592                          __end_of_strlen 7A72  
                   start_initialization 7592    __end_of_TMR5_DefaultInterruptHandler 8BB4  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 8B8C  
       __size_of_PIN_MANAGER_Initialize 0090                             __end_of_abs 84E8  
                 __end_of_INT1_CallBack 8CDE               __size_of_set_display_info 001E  
                           __end_of_pad 71BC                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 89D4           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0500  
                 __end_of___fpclassifyf 665C                           _uart2RxBuffer 0600  
                         _uart1TxBuffer 026C                __end_of_DMA1_DMASCNT_ISR 8F16  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR 8F38  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 8C52  
                         _ringBufS_init 89D4                             __pdataBANK0 00A3  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 001E  
            __end_of_EXT_INT_Initialize 8844                     __end_of_help_button 8738  
       __end_of_eaDogM_WriteStringAtPos 87DC                 __end_of_DMA1_Initialize 7F3A  
                           __pbssCOMRAM 0001        __end_of_INT0_SetInterruptHandler 8B3C  
                         __pcstackBANK0 00E6                __size_of_TMR2_Initialize 0018  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize 8E68  
              _UART1_RxInterruptHandler 000D                _UART2_TxInterruptHandler 0010  
                             __end_of_T FEE1                        _convert_adc_data 7E56  
             __size_of_ringBufS_put_dma 00AA                            _init_display 73D4  
                __end_of_DMA1_DMAOR_ISR 8F42                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 0001                  __size_of_TMR6_CallBack 0022  
               __end_of_DMA2_Initialize 8370                  _PIN_MANAGER_Initialize 7C36  
                  __end_of_wait_lcd_set 8F76                           __pmediumconst FE50  
                             __ptext100 8E68                               __ptext101 8E94  
                             __ptext110 7ED0                               __ptext102 7C36  
                             __ptext111 8F16                               __ptext103 8E7E  
                             __ptext120 8C9A                               __ptext112 7F3A  
                             __ptext104 8074                               __ptext121 8F82  
                             __ptext113 8B3C                               __ptext105 8F62  
                             __ptext130 800C                               __ptext122 8EF8  
                             __ptext114 8B64                               __ptext106 8810  
                             __ptext131 8BB4                               __ptext123 8CBC  
                             __ptext115 8260                               __ptext107 8AEC  
                             __ptext140 8CDE                               __ptext132 8902  
                             __ptext124 8F84                               __ptext116 8684  
                             __ptext108 8B14                               __ptext141 8574  
                             __ptext133 8BDC                               __ptext125 8F7C  
                             __ptext117 8C76                               __ptext109 8316  
                             __ptext142 8F08                               __ptext134 8D78  
                             __ptext126 8738                               __ptext118 8B8C  
                             __ptext143 8F20                               __ptext135 8C04  
                             __ptext127 7A72                               __ptext119 8EE8  
                             __ptext144 8F2C                               __ptext136 892E  
                             __ptext128 8F86                               __ptext145 8F38  
                             __ptext137 8C2C                               __ptext129 8D5A  
                             __ptext146 0000                               __ptext138 8D96  
                             __ptext139 8E08                      __end_of_StartTimer 8700  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00A8  
                              _ADCC_ISR 8738                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 6306  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 8074                                _T6CLKCON 003F96  
                       ?_DMA1_DMAOR_ISR 0055                                _INT0_ISR 8EE8  
                              _INT1_ISR 8EF8                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 0060                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0383  
                             _ring_buf2 0340                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              i2u438_48 8754                                i2u438_49 8768  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                              _PIR5bits 0039A5                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u890_48 8040  
                              i2u890_49 8054                __size_of_TMR5_Initialize 0046  
                             _set_vterm 8DD0                     __size_of_update_lcd 010E  
                           _help_button 8700              __end_of_UART1_Transmit_ISR 892E  
                              _TMR5_ISR 8260                                _TMR6_ISR 8E08  
                             _port_data 00D6                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                           _TMR5_CallBack 8C76  
                            _ADCON0bits 003EF8                      __end_of_check_help 6102  
                             _start_lcd 8F76                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 8CDE  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                      _set_display_info 8D3C                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 75A6                               copy_data1 75C8  
              _INT0_SetInterruptHandler 8B14                     __size_of_vterm_dump 012E  
                _uart1TxBufferRemaining 0032     __end_of_UART2_SetTxInterruptHandler 8A24  
           _UART2_SetTxInterruptHandler 89FC                                __Hparam0 0000  
                          _uart1RxCount 002F                            _uart2RxCount 0029  
                              __Lparam0 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 05CA  
                         _wait_lcd_done 8DB4                            _send_lcd_cmd 89AC  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 8D5A  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140                   __end_of_DMA1_DMAA_ISR 8F36  
                    ___fpclassifyf@F463 0088    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 01BB                                ___xxtofl 6102  
                     ?_DMA1_DMADCNT_ISR 0055                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 8ED8                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 00E7                                __ptext10 8ECA  
                              __ptext11 7E56                                __ptext20 72CA  
                              __ptext12 6306                                __ptext21 88D4  
                              __ptext13 31D6                                __ptext30 8F76  
                              __ptext22 8770                                __ptext14 813E  
                              __ptext31 7BA4                                __ptext23 71BC  
                              __ptext15 8D1E                                __ptext40 4CB2  
                              __ptext32 4FF2                                __ptext24 87A6  
                              __ptext16 6102                                __ptext41 6BFE  
                              __ptext33 81A0                                __ptext25 8370  
                              __ptext17 8F6A                                __ptext50 64C6  
                              __ptext42 665C                                __ptext34 7882  
                              __ptext26 8DB4                                __ptext18 5EF0  
                              __ptext51 67DC                                __ptext43 5CD0  
                              __ptext35 1244                                __ptext27 82BC  
                              __ptext19 6D3E                                __ptext60 6AB0  
                              __ptext52 845C                                __ptext44 52DE  
                              __ptext36 458C                                __ptext28 792A  
                              __ptext61 3D1A                                __ptext53 2A1A  
                              __ptext45 0000                                __ptext37 7D4E  
                              __ptext29 8F70                                __ptext70 8DEC  
                              __ptext62 84A2                                __ptext54 8414  
                              __ptext46 7DD2                                __ptext38 8844  
                              __ptext71 77D8                                __ptext63 5A90  
                              __ptext55 21F0                                __ptext47 8874  
                              __ptext39 85BA                                __ptext80 8642  
                              __ptext72 581C                                __ptext64 559C  
                              __ptext56 694E                                __ptext48 74BE  
                              __ptext81 8700                                __ptext73 83C2  
                              __ptext65 7CC6                                __ptext57 7658  
                              __ptext49 4946                                __ptext90 8A24  
                              __ptext82 8C52                                __ptext74 88A4  
                              __ptext66 70A8                                __ptext58 37A0  
                              __ptext91 80DA                                __ptext83 86C4  
                              __ptext75 8DD0                                __ptext67 79D0  
                              __ptext59 6F90                                __ptext92 8A4C  
                              __ptext84 8F4A                                __ptext76 8EBA  
                              __ptext68 7B0C                                __ptext93 8A74  
                              __ptext85 8F52                                __ptext77 8D3C  
                              __ptext69 6E6C                                __ptext94 895A  
                              __ptext86 8F5A                                __ptext78 8E22  
                              __ptext95 8A9C                                __ptext87 84E8  
                              __ptext79 8ED8                                __ptext96 852E  
                              __ptext88 8202                                __ptext97 8AC4  
                              __ptext89 89FC                                __ptext98 8E3A  
                              __ptext99 8E52                        __size_of_isupper 0030  
                              us1002999 4D18                                us1011999 460C  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma 77D8                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 03F2  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0055  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0007                               stoa@F1166 00CF  
                    ??_DMA1_DMASCNT_ISR 00E7            __end_of_ADCC_StartConversion 8EBA  
                              _spi_link 0078                                _wdtdelay 82BC  
            __end_of_UART2_Transmit_ISR 895A                                _vfprintf 7882  
              __end_of_convert_adc_data 7ED0              __end_of_PWM8_LoadDutyValue 8684  
  __end_of_INT1_DefaultInterruptHandler 8F86   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 8F84                           ??_Default_ISR 0055  
                           _uart1RxHead 0031                  __size_of_get_vterm_ptr 002E  
                           _uart1TxHead 0034                             _uart2RxHead 002B  
                           _uart1RxTail 0030                          _get_raw_result 8D1E  
                           _uart2TxHead 002E                             _uart1TxTail 0033  
                           _uart2RxTail 002A                             _uart2TxTail 002D  
                          _wait_lcd_set 8F70                      _EXT_INT_Initialize 8810  
  __end_of_TMR6_DefaultInterruptHandler 85BA   __size_of_TMR6_DefaultInterruptHandler 0046  
          _TMR6_DefaultInterruptHandler 8574    __end_of_ADCC_DefaultInterruptHandler 8F88  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 8F86  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 8984          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 8ECA                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 79D0                   __end_of_mode_lamp_dim 8E3A  
               __end_of_adc_int_handler 8D78                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 72CA  
                _uart2TxBufferRemaining 002C                          _FVR_Initialize 8F62  
                __end_of_get_raw_result 8D3C                        _send_lcd_cmd_dma 8370  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0024  
      __end_of_INT1_SetInterruptHandler 8B14               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 00E7                _UART1_TxInterruptHandler 000A  
             __end_of_send_lcd_cmd_long 89AC                 __size_of_start_adc_scan 0068  
                   __end_of_Default_ISR 8F82          __end_of_PIN_MANAGER_Initialize 7CC6  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 6E6C  
               _eaDogM_WriteStringAtPos 87A6                           _get_vterm_ptr 88D4  
                        _check_adc_scan 8F5A               __size_of_UART2_Initialize 005E  
