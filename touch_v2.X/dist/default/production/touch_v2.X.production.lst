

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr  2 20:30:08 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=4,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=4,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=4,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=4,class=CODE,delta=1
   116                           	psect	text92,global,reloc=4,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=4,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=4,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=4,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=4,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=4,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=4,class=CODE,delta=1
   130                           	psect	text106,global,reloc=4,class=CODE,delta=1
   131                           	psect	text107,global,reloc=4,class=CODE,delta=1
   132                           	psect	text108,global,reloc=4,class=CODE,delta=1
   133                           	psect	text109,global,reloc=4,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   138                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1
   140                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   141                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   142  0000                     
   143                           ; Version 2.05
   144                           ; Generated 20/12/2018 GMT
   145                           ; 
   146                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   147                           ; All rights reserved.
   148                           ; 
   149                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   150                           ; 
   151                           ; Redistribution and use in source and binary forms, with or without modification, are
   152                           ; permitted provided that the following conditions are met:
   153                           ; 
   154                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   155                           ;        conditions and the following disclaimer.
   156                           ; 
   157                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   158                           ;        of conditions and the following disclaimer in the documentation and/or other
   159                           ;        materials provided with the distribution.
   160                           ; 
   161                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   162                           ;        software without specific prior written permission.
   163                           ; 
   164                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   165                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   166                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   167                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   168                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   169                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   170                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   171                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   172                           ; 
   173                           ; 
   174                           ; Code-generator required, PIC18F57K42 Definitions
   175                           ; 
   176                           ; SFR Addresses
   177  0000                     
   178 ;;_mode	offset	0
   179 ;;_rxData	offset	0
   180 ;;_t_link	offset=-1 (param)
   181 ;;_k	offset	0
   182 ;;_checksum	offset	2
   183 ;;_i	offset	4
   184 ;;_byte_block	offset=-2 (param)
   185 ;;_length	offset=-3 (param)
   186 ;;_fake	offset=-4 (param)
   187 ;;_s_uart	offset=-5 (param)
   188 ;;_i	offset	0
   189 ;;_sum	offset	2
   190 ;;_byte_block	offset=-2 (param)
   191 ;;_byte_count	offset=-4 (param)
   192 ;;_bufData	offset=-1 (param)
   193 ;;_txData	offset=-1 (param)
   194 ;;_bufData	offset=-1 (param)
   195 ;;_stream	offset=-6 (param)
   196 ;;_function	offset=-7 (param)
   197 ;;_s	offset=-2 (param)
   198 ;;_f	offset	0
   199 ;;_ap	offset	5
   200 ;;_s	offset=-2 (param)
   201 ;;_fmt	offset=-3 (param)
   202 ;;_rxData	offset	0
   203 ;;_r_link	offset=-1 (param)
   204 ;;_txData	offset=-1 (param)
   205 ;;_rxData	offset	0
   206 ;;_m_link	offset=-1 (param)
   207 ;;_stream	offset=-1 (param)
   208 ;;_function	offset=-2 (param)
   209 ;;_byte_block	offset=-1 (param)
   210 ;;_clear	offset=-2 (param)
   211 ;;_numMilliseconds	offset=-2 (param)
   212 ;;_timer	offset=-1 (param)
   213 ;;_timer	offset=-1 (param)
   214 ;;_count	offset=-3 (param)
   215 ;;_readValue	offset	0
   216 ;;_readValue	offset	0
   217 ;;_cmd	offset=-1 (param)
   218 ;;_cmd	offset=-1 (param)
   219 ;;_data	offset=-1 (param)
   220 ;;__this	offset=-2 (param)
   221 ;;_r	offset=-1 (param)
   222 ;;_c	offset=-2 (param)
   223 ;;_strPtr	offset=-3 (param)
   224 ;;_strPtr	offset=-1 (param)
   225 ;;_cmd	offset=-1 (param)
   226 ;;_strPtr	offset=-1 (param)
   227 ;;_delay	offset=-4 (param)
   228 ;;__this	offset=-2 (param)
   229 ;;_clearBuffer	offset=-3 (param)
   230 ;;_s	offset	0
   231 ;;_k	offset	2
   232 ;;_dest	offset=-2 (param)
   233 ;;_c	offset=-4 (param)
   234 ;;_n	offset=-6 (param)
   235 ;;_ap	offset	0
   236 ;;_fmt	offset=-2 (param)
   237 ;;_cfmt	offset	0
   238 ;;_fp	offset=-2 (param)
   239 ;;_fmt	offset=-3 (param)
   240 ;;_ap	offset=-5 (param)
   241 ;;_ll	offset	0
   242 ;;_cp	offset	8
   243 ;;_c	offset	10
   244 ;;_fp	offset=-2 (param)
   245 ;;_fmt	offset=-4 (param)
   246 ;;_ap	offset=-6 (param)
   247 ;;_r	offset	0
   248 ;;_l	offset	1
   249 ;;__l	offset=-1 (param)
   250 ;;__r	offset=-2 (param)
   251 ;;_n	offset=-4 (param)
   252 ;;_nuls	offset	0
   253 ;;_l	offset	7
   254 ;;_p	offset	9
   255 ;;_cp	offset	11
   256 ;;_w	offset	13
   257 ;;_i	offset	15
   258 ;;_fp	offset=-2 (param)
   259 ;;_s	offset=-4 (param)
   260 ;;_dtoa$3970	offset	0
   261 ;;_n	offset	2
   262 ;;_i	offset	10
   263 ;;_s	offset	12
   264 ;;_w	offset	14
   265 ;;_p	offset	16
   266 ;;_fp	offset=-2 (param)
   267 ;;_d	offset=-10 (param)
   268 ;;_a	offset=-2 (param)
   269 ;;_sign	offset	0
   270 ;;_counter	offset	1
   271 ;;_dividend	offset=-8 (param)
   272 ;;_divisor	offset=-16 (param)
   273 ;;_quotient	offset	0
   274 ;;_sign	offset	8
   275 ;;_counter	offset	9
   276 ;;_dividend	offset=-8 (param)
   277 ;;_divisor	offset=-16 (param)
   278 ;;_w	offset	0
   279 ;;_fp	offset=-2 (param)
   280 ;;_c	offset=-3 (param)
   281 ;;_w	offset	0
   282 ;;_i	offset	2
   283 ;;_fp	offset=-2 (param)
   284 ;;_buf	offset=-4 (param)
   285 ;;_p	offset=-6 (param)
   286 ;;_a	offset	0
   287 ;;_s	offset=-2 (param)
   288 ;;_i	offset	0
   289 ;;_c	offset	2
   290 ;;_s	offset=-2 (param)
   291 ;;_fp	offset=-4 (param)
   292 ;;_c	offset=-2 (param)
   293 ;;_fp	offset=-4 (param)
   294 ;;_c	offset=-1 (param)
   295 ;;__this	offset=-2 (param)
   296 ;;_c	offset=-3 (param)
   297 ;;_InterruptHandler	offset=-3 (param)
   298 ;;_InterruptHandler	offset=-3 (param)
   299 ;;_InterruptHandler	offset=-3 (param)
   300 ;;_InterruptHandler	offset=-3 (param)
   301 ;;_InterruptHandler	offset=-3 (param)
   302 ;;_InterruptHandler	offset=-3 (param)
   303 ;;_state	offset	0
   304 ;;_InterruptHandler	offset=-3 (param)
   305 ;;_InterruptHandler	offset=-3 (param)
   306 ;;_InterruptHandler	offset=-3 (param)
   307 ;;_InterruptHandler	offset=-3 (param)
   308 ;;_i	offset	0
   309 ;;_timerVal	offset=-2 (param)
   310                           
   311                           	psect	idataCOMRAM
   312  00657A                     __pidataCOMRAM:
   313                           	opt callstack 0
   314                           
   315                           ;initializer for r_protocol@retry
   316  00657A  03                 	db	3
   317                           
   318                           	psect	idataBIGRAM
   319  004CAC                     __pidataBIGRAM:
   320                           	opt callstack 0
   321                           
   322                           ;initializer for _H254
   323  004CAC  0000               	dw	0
   324  004CAE  00                 	db	0
   325  004CAF  00                 	db	0
   326  004CB0  00                 	db	0
   327  004CB1  00                 	db	0
   328  004CB2  00                 	db	0
   329  004CB3  00                 	db	0
   330  004CB4  00                 	db	0
   331  004CB5  00                 	db	0
   332  004CB6  00                 	db	0
   333  004CB7  00                 	db	0
   334  004CB8  00                 	db	0
   335  004CB9  00                 	db	0
   336  004CBA  00                 	db	0
   337  004CBB  00                 	db	0
   338  004CBC  00                 	db	0
   339  004CBD  00                 	db	0
   340  004CBE  00                 	db	0
   341  004CBF  00                 	db	0
   342  004CC0  00                 	db	0
   343  004CC1  00                 	db	0
   344  004CC2  00                 	db	0
   345  004CC3  00                 	db	0
   346  004CC4  00                 	db	0
   347  004CC5  00                 	db	0
   348  004CC6  00                 	db	0
   349  004CC7  00                 	db	0
   350  004CC8  00                 	db	0
   351  004CC9  00                 	db	0
   352  004CCA  00                 	db	0
   353  004CCB  00                 	db	0
   354  004CCC  00                 	db	0
   355  004CCD  00                 	db	0
   356  004CCE  00                 	db	0
   357  004CCF  00                 	db	0
   358  004CD0  00                 	db	0
   359  004CD1  00                 	db	0
   360  004CD2  00                 	db	0
   361  004CD3  00                 	db	0
   362  004CD4  00                 	db	0
   363  004CD5  00                 	db	0
   364  004CD6  00                 	db	0
   365  004CD7  00                 	db	0
   366  004CD8  00                 	db	0
   367  004CD9  00                 	db	0
   368  004CDA  00                 	db	0
   369  004CDB  00                 	db	0
   370  004CDC  00                 	db	0
   371  004CDD  00                 	db	0
   372  004CDE  00                 	db	0
   373  004CDF  00                 	db	0
   374  004CE0  00                 	db	0
   375  004CE1  00                 	db	0
   376  004CE2  00                 	db	0
   377  004CE3  00                 	db	0
   378  004CE4  00                 	db	0
   379  004CE5  00                 	db	0
   380  004CE6  00                 	db	0
   381  004CE7  00                 	db	0
   382  004CE8  00                 	db	0
   383  004CE9  00                 	db	0
   384  004CEA  00                 	db	0
   385  004CEB  00                 	db	0
   386  004CEC  00                 	db	0
   387  004CED  00                 	db	0
   388  004CEE  00                 	db	0
   389  004CEF  00                 	db	0
   390  004CF0  00                 	db	0
   391  004CF1  00                 	db	0
   392  004CF2  00                 	db	0
   393  004CF3  00                 	db	0
   394  004CF4  00                 	db	0
   395  004CF5  00                 	db	0
   396  004CF6  00                 	db	0
   397  004CF7  00                 	db	0
   398  004CF8  00                 	db	0
   399  004CF9  00                 	db	0
   400  004CFA  00                 	db	0
   401  004CFB  00                 	db	0
   402  004CFC  00                 	db	0
   403  004CFD  00                 	db	0
   404  004CFE  00                 	db	0
   405  004CFF  00                 	db	0
   406  004D00  00                 	db	0
   407  004D01  00                 	db	0
   408  004D02  00                 	db	0
   409  004D03  00                 	db	0
   410  004D04  00                 	db	0
   411  004D05  00                 	db	0
   412  004D06  00                 	db	0
   413  004D07  00                 	db	0
   414  004D08  00                 	db	0
   415  004D09  00                 	db	0
   416  004D0A  00                 	db	0
   417  004D0B  00                 	db	0
   418  004D0C  00                 	db	0
   419  004D0D  00                 	db	0
   420  004D0E  00                 	db	0
   421  004D0F  00                 	db	0
   422  004D10  00                 	db	0
   423  004D11  00                 	db	0
   424  004D12  00                 	db	0
   425  004D13  00                 	db	0
   426  004D14  00                 	db	0
   427  004D15  00                 	db	0
   428  004D16  00                 	db	0
   429  004D17  00                 	db	0
   430  004D18  00                 	db	0
   431  004D19  00                 	db	0
   432  004D1A  00                 	db	0
   433  004D1B  00                 	db	0
   434  004D1C  00                 	db	0
   435  004D1D  00                 	db	0
   436  004D1E  00                 	db	0
   437  004D1F  00                 	db	0
   438  004D20  00                 	db	0
   439  004D21  00                 	db	0
   440  004D22  00                 	db	0
   441  004D23  00                 	db	0
   442  004D24  00                 	db	0
   443  004D25  00                 	db	0
   444  004D26  00                 	db	0
   445  004D27  00                 	db	0
   446  004D28  00                 	db	0
   447  004D29  00                 	db	0
   448  004D2A  00                 	db	0
   449  004D2B  00                 	db	0
   450  004D2C  00                 	db	0
   451  004D2D  00                 	db	0
   452  004D2E  00                 	db	0
   453  004D2F  00                 	db	0
   454  004D30  00                 	db	0
   455  004D31  00                 	db	0
   456  004D32  00                 	db	0
   457  004D33  00                 	db	0
   458  004D34  00                 	db	0
   459  004D35  00                 	db	0
   460  004D36  00                 	db	0
   461  004D37  00                 	db	0
   462  004D38  00                 	db	0
   463  004D39  00                 	db	0
   464  004D3A  00                 	db	0
   465  004D3B  00                 	db	0
   466  004D3C  00                 	db	0
   467  004D3D  00                 	db	0
   468  004D3E  00                 	db	0
   469  004D3F  00                 	db	0
   470  004D40  00                 	db	0
   471  004D41  00                 	db	0
   472  004D42  00                 	db	0
   473  004D43  00                 	db	0
   474  004D44  00                 	db	0
   475  004D45  00                 	db	0
   476  004D46  00                 	db	0
   477  004D47  00                 	db	0
   478  004D48  00                 	db	0
   479  004D49  00                 	db	0
   480  004D4A  00                 	db	0
   481  004D4B  00                 	db	0
   482  004D4C  00                 	db	0
   483  004D4D  00                 	db	0
   484  004D4E  00                 	db	0
   485  004D4F  00                 	db	0
   486  004D50  00                 	db	0
   487  004D51  00                 	db	0
   488  004D52  00                 	db	0
   489  004D53  00                 	db	0
   490  004D54  00                 	db	0
   491  004D55  00                 	db	0
   492  004D56  00                 	db	0
   493  004D57  00                 	db	0
   494  004D58  00                 	db	0
   495  004D59  00                 	db	0
   496  004D5A  00                 	db	0
   497  004D5B  00                 	db	0
   498  004D5C  00                 	db	0
   499  004D5D  00                 	db	0
   500  004D5E  00                 	db	0
   501  004D5F  00                 	db	0
   502  004D60  00                 	db	0
   503  004D61  00                 	db	0
   504  004D62  00                 	db	0
   505  004D63  00                 	db	0
   506  004D64  00                 	db	0
   507  004D65  00                 	db	0
   508  004D66  00                 	db	0
   509  004D67  00                 	db	0
   510  004D68  00                 	db	0
   511  004D69  00                 	db	0
   512  004D6A  00                 	db	0
   513  004D6B  00                 	db	0
   514  004D6C  00                 	db	0
   515  004D6D  00                 	db	0
   516  004D6E  00                 	db	0
   517  004D6F  00                 	db	0
   518  004D70  00                 	db	0
   519  004D71  00                 	db	0
   520  004D72  00                 	db	0
   521  004D73  00                 	db	0
   522  004D74  00                 	db	0
   523  004D75  00                 	db	0
   524  004D76  00                 	db	0
   525  004D77  00                 	db	0
   526  004D78  00                 	db	0
   527  004D79  00                 	db	0
   528  004D7A  00                 	db	0
   529  004D7B  00                 	db	0
   530  004D7C  00                 	db	0
   531  004D7D  00                 	db	0
   532  004D7E  00                 	db	0
   533  004D7F  00                 	db	0
   534  004D80  00                 	db	0
   535  004D81  00                 	db	0
   536  004D82  00                 	db	0
   537  004D83  00                 	db	0
   538  004D84  00                 	db	0
   539  004D85  00                 	db	0
   540  004D86  00                 	db	0
   541  004D87  00                 	db	0
   542  004D88  00                 	db	0
   543  004D89  00                 	db	0
   544  004D8A  00                 	db	0
   545  004D8B  00                 	db	0
   546  004D8C  00                 	db	0
   547  004D8D  00                 	db	0
   548  004D8E  00                 	db	0
   549  004D8F  00                 	db	0
   550  004D90  00                 	db	0
   551  004D91  00                 	db	0
   552  004D92  00                 	db	0
   553  004D93  00                 	db	0
   554  004D94  00                 	db	0
   555  004D95  00                 	db	0
   556  004D96  00                 	db	0
   557  004D97  00                 	db	0
   558  004D98  00                 	db	0
   559  004D99  00                 	db	0
   560  004D9A  00                 	db	0
   561  004D9B  00                 	db	0
   562  004D9C  00                 	db	0
   563  004D9D  00                 	db	0
   564  004D9E  00                 	db	0
   565  004D9F  00                 	db	0
   566  004DA0  00                 	db	0
   567  004DA1  00                 	db	0
   568  004DA2  0001               	dw	1
   569  004DA4  0000               	dw	0
   570  004DA6  01                 	db	1
   571  004DA7  80                 	db	128
   572  004DA8  03                 	db	3
   573  004DA9  8A                 	db	138
   574  004DAA  00                 	db	0
   575  004DAB  00                 	db	0
   576  004DAC  FE                 	db	254
   577                           
   578                           	psect	idataBANK0
   579  0058B4                     __pidataBANK0:
   580                           	opt callstack 0
   581                           
   582                           ;initializer for _V
   583  0058B4  00                 	db	0
   584  0058B5  00                 	db	0
   585  0058B6  00                 	db	0
   586  0058B7  00                 	db	0
   587  0058B8  00                 	db	0
   588  0058B9  00                 	db	0
   589  0058BA  00                 	db	0
   590  0058BB  00                 	db	0
   591  0058BC  00                 	db	0
   592  0058BD  00                 	db	0
   593  0058BE  00                 	db	0
   594  0058BF  00                 	db	0
   595  0058C0  00                 	db	0
   596  0058C1  00                 	db	0
   597  0058C2  00                 	db	0
   598  0058C3  00                 	db	0
   599  0058C4  00                 	db	0
   600  0058C5  00                 	db	0
   601  0058C6  00                 	db	0
   602  0058C7  00                 	db	0
   603  0058C8  00                 	db	0
   604  0058C9  00                 	db	0
   605  0058CA  00                 	db	0
   606  0058CB  00                 	db	0
   607  0058CC  00                 	db	0
   608  0058CD  00                 	db	0
   609  0058CE  00                 	db	0
   610  0058CF  00                 	db	0
   611  0058D0  00                 	db	0
   612  0058D1  00                 	db	0
   613  0058D2  00                 	db	0
   614  0058D3  00                 	db	0
   615  0058D4  00                 	db	0
   616  0058D5  00                 	db	0
   617  0058D6  00                 	db	0
   618  0058D7  00                 	db	0
   619  0058D8  00                 	db	0
   620  0058D9  00                 	db	0
   621  0058DA  00                 	db	0
   622  0058DB  00                 	db	0
   623  0058DC  00                 	db	0
   624  0058DD  00                 	db	0
   625  0058DE  00                 	db	0
   626  0058DF  00                 	db	0
   627  0058E0  00                 	db	0
   628  0058E1  00                 	db	0
   629  0058E2  00                 	db	0
   630  0058E3  00                 	db	0
   631  0058E4  00                 	db	0
   632  0058E5  00                 	db	0
   633  0058E6  00                 	db	0
   634  0058E7  00                 	db	0
   635  0058E8  00                 	db	0
   636  0058E9  00                 	db	0
   637  0058EA  00                 	db	0
   638  0058EB  00                 	db	0
   639  0058EC  00                 	db	0
   640  0058ED  00                 	db	0
   641  0058EE  00                 	db	0
   642  0058EF  00                 	db	0
   643  0058F0  00                 	db	0
   644  0058F1  00                 	db	0
   645  0058F2  00                 	db	0
   646  0058F3  00                 	db	0
   647  0058F4  00                 	db	0
   648  0058F5  00                 	db	0
   649  0058F6  00                 	db	0
   650  0058F7  00                 	db	0
   651  0058F8  00                 	db	0
   652  0058F9  00                 	db	0
   653  0058FA  0000               	dw	0
   654  0058FC  0000               	dw	0
   655  0058FE  0000               	dw	0
   656  005900  0000               	dw	0
   657  005902  00                 	db	0
   658  005903  00                 	db	0
   659  005904  00                 	db	0
   660  005905  00                 	db	0
   661  005906  00                 	db	0
   662  005907  0000               	dw	0
   663  005909  0000               	dw	0
   664  00590B  0000               	dw	0
   665  00590D  0000               	dw	0
   666  00590F  00                 	db	0
   667  005910  00                 	db	0
   668  005911  00                 	db	0
   669  005912  00                 	db	0
   670  005913  00                 	db	0
   671  005914  01                 	db	1
   672  005915  2D                 	db	45
   673                           
   674                           	psect	idataBANK1
   675  005060                     __pidataBANK1:
   676                           	opt callstack 0
   677                           
   678                           ;initializer for stoa@F1142
   679  005060  28                 	db	40
   680  005061  6E                 	db	110
   681  005062  75                 	db	117
   682  005063  6C                 	db	108
   683  005064  6C                 	db	108
   684  005065  29                 	db	41
   685  005066  00                 	db	0
   686                           
   687                           ;initializer for _H10
   688  005067  0000               	dw	0
   689  005069  0001               	dw	1
   690  00506B  0000               	dw	0
   691  00506D  01                 	db	1
   692  00506E  80                 	db	128
   693  00506F  01                 	db	1
   694  005070  81                 	db	129
   695  005071  00                 	db	0
   696  005072  00                 	db	0
   697  005073  0A                 	db	10
   698  005074  0000               	dw	0
   699  005076  00                 	db	0
   700  005077  00                 	db	0
   701  005078  00                 	db	0
   702  005079  00                 	db	0
   703  00507A  00                 	db	0
   704  00507B  00                 	db	0
   705  00507C  00                 	db	0
   706  00507D  00                 	db	0
   707  00507E  00                 	db	0
   708  00507F  00                 	db	0
   709  005080  0A                 	db	10
   710  005081  0000               	dw	0
   711  005083  0001               	dw	1
   712  005085  0000               	dw	0
   713  005087  01                 	db	1
   714  005088  80                 	db	128
   715  005089  00                 	db	0
   716  00508A  01                 	db	1
   717  00508B  00                 	db	0
   718  00508C  00                 	db	0
   719  00508D  0A                 	db	10
   720  00508E  0000               	dw	0
   721  005090  0001               	dw	1
   722  005092  0000               	dw	0
   723  005094  01                 	db	1
   724  005095  80                 	db	128
   725  005096  01                 	db	1
   726  005097  81                 	db	129
   727  005098  00                 	db	0
   728  005099  80                 	db	128
   729  00509A  0A                 	db	10
   730  00509B  0000               	dw	0
   731  00509D  0001               	dw	1
   732  00509F  0000               	dw	0
   733  0050A1  01                 	db	1
   734  0050A2  80                 	db	128
   735  0050A3  11                 	db	17
   736  0050A4  82                 	db	130
   737  0050A5  00                 	db	0
   738  0050A6  00                 	db	0
   739  0050A7  0A                 	db	10
   740  0050A8  0000               	dw	0
   741  0050AA  0001               	dw	1
   742  0050AC  0000               	dw	0
   743  0050AE  01                 	db	1
   744  0050AF  80                 	db	128
   745  0050B0  0F                 	db	15
   746  0050B1  81                 	db	129
   747  0050B2  00                 	db	0
   748  0050B3  00                 	db	0
   749  0050B4  0A                 	db	10
   750  0050B5  0000               	dw	0
   751  0050B7  0001               	dw	1
   752  0050B9  0000               	dw	0
   753  0050BB  01                 	db	1
   754  0050BC  80                 	db	128
   755  0050BD  11                 	db	17
   756  0050BE  81                 	db	129
   757  0050BF  00                 	db	0
   758  0050C0  00                 	db	0
   759  0050C1  0A                 	db	10
   760                           
   761                           ;initializer for _H12
   762  0050C2  0000               	dw	0
   763  0050C4  00                 	db	0
   764  0050C5  01                 	db	1
   765  0050C6  0001               	dw	1
   766  0050C8  0000               	dw	0
   767  0050CA  01                 	db	1
   768  0050CB  80                 	db	128
   769  0050CC  02                 	db	2
   770  0050CD  01                 	db	1
   771  0050CE  00                 	db	0
   772  0050CF  00                 	db	0
   773  0050D0  0C                 	db	12
   774  0050D1  0000               	dw	0
   775  0050D3  00                 	db	0
   776  0050D4  01                 	db	1
   777  0050D5  0001               	dw	1
   778  0050D7  0000               	dw	0
   779  0050D9  01                 	db	1
   780  0050DA  80                 	db	128
   781  0050DB  0D                 	db	13
   782  0050DC  81                 	db	129
   783  0050DD  00                 	db	0
   784  0050DE  00                 	db	0
   785  0050DF  0C                 	db	12
   786                           
   787                           ;initializer for _H24
   788  0050E0  0000               	dw	0
   789  0050E2  41                 	db	65
   790  0050E3  20                 	db	32
   791  0050E4  30                 	db	48
   792  0050E5  31                 	db	49
   793  0050E6  30                 	db	48
   794  0050E7  39                 	db	57
   795  0050E8  31                 	db	49
   796  0050E9  31                 	db	49
   797  0050EA  30                 	db	48
   798  0050EB  38                 	db	56
   799  0050EC  34                 	db	52
   800  0050ED  36                 	db	54
   801  0050EE  30                 	db	48
   802  0050EF  30                 	db	48
   803  0050F0  0001               	dw	1
   804  0050F2  0000               	dw	0
   805  0050F4  01                 	db	1
   806  0050F5  80                 	db	128
   807  0050F6  12                 	db	18
   808  0050F7  02                 	db	2
   809  0050F8  00                 	db	0
   810  0050F9  00                 	db	0
   811  0050FA  18                 	db	24
   812                           
   813                           ;initializer for _H17
   814  0050FB  0000               	dw	0
   815  0050FD  00                 	db	0
   816  0050FE  01                 	db	1
   817  0050FF  00                 	db	0
   818  005100  01                 	db	1
   819  005101  21                 	db	33
   820  005102  02                 	db	2
   821  005103  01                 	db	1
   822  005104  0001               	dw	1
   823  005106  0000               	dw	0
   824  005108  01                 	db	1
   825  005109  80                 	db	128
   826  00510A  0E                 	db	14
   827  00510B  01                 	db	1
   828  00510C  00                 	db	0
   829  00510D  00                 	db	0
   830  00510E  11                 	db	17
   831                           
   832                           ;initializer for _H14
   833  00510F  0000               	dw	0
   834  005111  00                 	db	0
   835  005112  41                 	db	65
   836  005113  11                 	db	17
   837  005114  01                 	db	1
   838  005115  0001               	dw	1
   839  005117  0000               	dw	0
   840  005119  01                 	db	1
   841  00511A  80                 	db	128
   842  00511B  04                 	db	4
   843  00511C  01                 	db	1
   844  00511D  00                 	db	0
   845  00511E  00                 	db	0
   846  00511F  0E                 	db	14
   847                           
   848                           ;initializer for _H13
   849  005120  0000               	dw	0
   850  005122  00                 	db	0
   851  005123  01                 	db	1
   852  005124  21                 	db	33
   853  005125  0001               	dw	1
   854  005127  0000               	dw	0
   855  005129  01                 	db	1
   856  00512A  80                 	db	128
   857  00512B  0C                 	db	12
   858  00512C  06                 	db	6
   859  00512D  00                 	db	0
   860  00512E  00                 	db	0
   861  00512F  0D                 	db	13
   862                           
   863                           	psect	idataBANK3
   864  005DF0                     __pidataBANK3:
   865                           	opt callstack 0
   866                           
   867                           ;initializer for _H53
   868  005DF0  0000               	dw	0
   869  005DF2  00                 	db	0
   870  005DF3  00                 	db	0
   871  005DF4  00                 	db	0
   872  005DF5  00                 	db	0
   873  005DF6  00                 	db	0
   874  005DF7  00                 	db	0
   875  005DF8  00                 	db	0
   876  005DF9  00                 	db	0
   877  005DFA  00                 	db	0
   878  005DFB  00                 	db	0
   879  005DFC  00                 	db	0
   880  005DFD  00                 	db	0
   881  005DFE  00                 	db	0
   882  005DFF  00                 	db	0
   883  005E00  00                 	db	0
   884  005E01  00                 	db	0
   885  005E02  00                 	db	0
   886  005E03  00                 	db	0
   887  005E04  00                 	db	0
   888  005E05  00                 	db	0
   889  005E06  00                 	db	0
   890  005E07  00                 	db	0
   891  005E08  00                 	db	0
   892  005E09  00                 	db	0
   893  005E0A  00                 	db	0
   894  005E0B  00                 	db	0
   895  005E0C  00                 	db	0
   896  005E0D  00                 	db	0
   897  005E0E  00                 	db	0
   898  005E0F  00                 	db	0
   899  005E10  00                 	db	0
   900  005E11  00                 	db	0
   901  005E12  00                 	db	0
   902  005E13  00                 	db	0
   903  005E14  00                 	db	0
   904  005E15  00                 	db	0
   905  005E16  00                 	db	0
   906  005E17  00                 	db	0
   907  005E18  00                 	db	0
   908  005E19  46                 	db	70
   909  005E1A  01                 	db	1
   910  005E1B  41                 	db	65
   911  005E1C  00                 	db	0
   912  005E1D  0001               	dw	1
   913  005E1F  0000               	dw	0
   914  005E21  01                 	db	1
   915  005E22  80                 	db	128
   916  005E23  03                 	db	3
   917  005E24  8A                 	db	138
   918  005E25  00                 	db	0
   919  005E26  00                 	db	0
   920  005E27  35                 	db	53
   921  0000                     _IVTADL	set	14493
   922  0000                     _IVTADH	set	14494
   923  0000                     _IVTADU	set	14495
   924  0000                     _PIE8bits	set	14744
   925  0000                     _PIR8bits	set	14760
   926  0000                     _SCANPR	set	14839
   927  0000                     _DMA2PR	set	14836
   928  0000                     _DMA1PR	set	14835
   929  0000                     _MAINPR	set	14834
   930  0000                     _ISRPR	set	14833
   931  0000                     _PIE2bits	set	14738
   932  0000                     _PIR2bits	set	14754
   933  0000                     _PIE9bits	set	14745
   934  0000                     _PIR9bits	set	14761
   935  0000                     _PIE6bits	set	14742
   936  0000                     _PIE3bits	set	14739
   937  0000                     _PMD7	set	14791
   938  0000                     _PMD6	set	14790
   939  0000                     _PMD5	set	14789
   940  0000                     _PMD4	set	14788
   941  0000                     _PMD3	set	14787
   942  0000                     _PMD2	set	14786
   943  0000                     _PMD1	set	14785
   944  0000                     _PMD0	set	14784
   945  0000                     _OSCTUNE	set	14814
   946  0000                     _OSCFRQ	set	14815
   947  0000                     _OSCEN	set	14813
   948  0000                     _OSCCON3	set	14811
   949  0000                     _OSCCON1	set	14809
   950  0000                     _IPR8bits	set	14728
   951  0000                     _IPR9bits	set	14729
   952  0000                     _IPR7bits	set	14727
   953  0000                     _IPR5bits	set	14725
   954  0000                     _IPR1bits	set	14721
   955  0000                     _IPR3bits	set	14723
   956  0000                     _IPR6bits	set	14726
   957  0000                     _IPR2bits	set	14722
   958  0000                     _PIE7bits	set	14743
   959  0000                     _PIE5bits	set	14741
   960  0000                     _PIE1bits	set	14737
   961  0000                     _PIR7bits	set	14759
   962  0000                     _PIR5bits	set	14757
   963  0000                     _PIR1bits	set	14753
   964  0000                     _PLLR	set	118496
   965  0000                     _SPI1SDIPPS	set	15071
   966  0000                     _RC6PPS	set	14870
   967  0000                     _RC5PPS	set	14869
   968  0000                     _RA6PPS	set	14854
   969  0000                     _RA5PPS	set	14853
   970  0000                     _RA4PPS	set	14852
   971  0000                     _SPI1SCKPPS	set	15070
   972  0000                     _U1RXPPS	set	15077
   973  0000                     _INT1PPS	set	15041
   974  0000                     _INT2PPS	set	15042
   975  0000                     _INT0PPS	set	15040
   976  0000                     _RC3PPS	set	14867
   977  0000                     _RB6PPS	set	14862
   978  0000                     _U2RXPPS	set	15080
   979  0000                     _SLRCONF	set	14995
   980  0000                     _SLRCONE	set	14979
   981  0000                     _SLRCOND	set	14963
   982  0000                     _SLRCONC	set	14947
   983  0000                     _SLRCONB	set	14931
   984  0000                     _SLRCONA	set	14915
   985  0000                     _ODCOND	set	14962
   986  0000                     _ODCONC	set	14946
   987  0000                     _ODCONB	set	14930
   988  0000                     _ODCONA	set	14914
   989  0000                     _ODCONF	set	14994
   990  0000                     _ODCONE	set	14978
   991  0000                     _WPUC	set	14945
   992  0000                     _WPUA	set	14913
   993  0000                     _WPUB	set	14929
   994  0000                     _WPUE	set	14977
   995  0000                     _WPUF	set	14993
   996  0000                     _WPUD	set	14961
   997  0000                     _ANSELA	set	14912
   998  0000                     _ANSELF	set	14992
   999  0000                     _ANSELE	set	14976
  1000  0000                     _ANSELB	set	14928
  1001  0000                     _ANSELC	set	14944
  1002  0000                     _ANSELD	set	14960
  1003  0000                     _DMA1SSA	set	15353
  1004  0000                     _DMA1DSZ	set	15342
  1005  0000                     _DMA1SSZ	set	15351
  1006  0000                     _DMA1DSA	set	15344
  1007  0000                     _DMA1CON0bits	set	15356
  1008  0000                     _DMA1CON1bits	set	15357
  1009  0000                     _DMA1CON0	set	15356
  1010  0000                     _DMA1AIRQ	set	15358
  1011  0000                     _DMA1SIRQ	set	15359
  1012  0000                     _DMA1CON1	set	15357
  1013  0000                     _CLC1CON	set	15476
  1014  0000                     _CLC1GLS3	set	15485
  1015  0000                     _CLC1GLS2	set	15484
  1016  0000                     _CLC1GLS1	set	15483
  1017  0000                     _CLC1GLS0	set	15482
  1018  0000                     _CLC1SEL3	set	15481
  1019  0000                     _CLC1SEL2	set	15480
  1020  0000                     _CLC1SEL1	set	15479
  1021  0000                     _CLC1SEL0	set	15478
  1022  0000                     _CLC1POL	set	15477
  1023  0000                     _CLKRCON	set	15589
  1024  0000                     _CLKRCLK	set	15590
  1025  0000                     _MD1CARL	set	15613
  1026  0000                     _MD1CARH	set	15614
  1027  0000                     _MD1SRC	set	15612
  1028  0000                     _MD1CON1bits	set	15611
  1029  0000                     _MD1CON0bits	set	15610
  1030  0000                     _SPI1INTFbits	set	15642
  1031  0000                     _SPI1RXB	set	15632
  1032  0000                     _SPI1TXB	set	15633
  1033  0000                     _SPI1TCNTL	set	15634
  1034  0000                     _SPI1CON0	set	15636
  1035  0000                     _SPI1CLK	set	15644
  1036  0000                     _SPI1BAUD	set	15641
  1037  0000                     _SPI1CON2	set	15638
  1038  0000                     _SPI1CON1	set	15637
  1039  0000                     _U2RXB	set	15824
  1040  0000                     _U2TXB	set	15826
  1041  0000                     _U2ERRIE	set	15842
  1042  0000                     _U2ERRIR	set	15841
  1043  0000                     _U2UIR	set	15840
  1044  0000                     _U2FIFO	set	15839
  1045  0000                     _U2BRGH	set	15838
  1046  0000                     _U2BRGL	set	15837
  1047  0000                     _U2CON2	set	15836
  1048  0000                     _U2CON1	set	15835
  1049  0000                     _U2CON0	set	15834
  1050  0000                     _U2P3L	set	15832
  1051  0000                     _U2P2L	set	15830
  1052  0000                     _U2P1L	set	15828
  1053  0000                     _U1RXB	set	15848
  1054  0000                     _U1TXB	set	15850
  1055  0000                     _U1ERRIE	set	15866
  1056  0000                     _U1ERRIR	set	15865
  1057  0000                     _U1UIR	set	15864
  1058  0000                     _U1FIFO	set	15863
  1059  0000                     _U1BRGH	set	15862
  1060  0000                     _U1BRGL	set	15861
  1061  0000                     _U1CON2	set	15860
  1062  0000                     _U1CON1	set	15859
  1063  0000                     _U1CON0	set	15858
  1064  0000                     _U1P3H	set	15857
  1065  0000                     _U1P3L	set	15856
  1066  0000                     _U1P2H	set	15855
  1067  0000                     _U1P2L	set	15854
  1068  0000                     _U1P1H	set	15853
  1069  0000                     _U1P1L	set	15852
  1070  0000                     _ADCON0	set	16120
  1071  0000                     _ADCLK	set	16127
  1072  0000                     _ADACT	set	16126
  1073  0000                     _ADREF	set	16125
  1074  0000                     _ADSTAT	set	16124
  1075  0000                     _ADCON3	set	16123
  1076  0000                     _ADCON2	set	16122
  1077  0000                     _ADCON1	set	16121
  1078  0000                     _ADPREH	set	16119
  1079  0000                     _ADPREL	set	16118
  1080  0000                     _ADCAP	set	16117
  1081  0000                     _ADACQH	set	16116
  1082  0000                     _ADACQL	set	16115
  1083  0000                     _ADPCH	set	16113
  1084  0000                     _ADRPT	set	16108
  1085  0000                     _ADACCU	set	16106
  1086  0000                     _ADSTPTH	set	16101
  1087  0000                     _ADSTPTL	set	16100
  1088  0000                     _ADUTHH	set	16097
  1089  0000                     _ADUTHL	set	16096
  1090  0000                     _ADLTHH	set	16095
  1091  0000                     _ADLTHL	set	16094
  1092  0000                     _NCO1CONbits	set	16190
  1093  0000                     _NCO1INCL	set	16187
  1094  0000                     _NCO1INCH	set	16188
  1095  0000                     _NCO1INCU	set	16189
  1096  0000                     _NCO1ACCL	set	16184
  1097  0000                     _NCO1ACCH	set	16185
  1098  0000                     _NCO1ACCU	set	16186
  1099  0000                     _NCO1CLK	set	16191
  1100  0000                     _NCO1CON	set	16190
  1101  0000                     _LATCbits	set	16316
  1102  0000                     _LATDbits	set	16317
  1103  0000                     _PORTBbits	set	16331
  1104  0000                     _T5CONbits	set	16282
  1105  0000                     _T5CON	set	16282
  1106  0000                     _TMR5L	set	16280
  1107  0000                     _TMR5H	set	16281
  1108  0000                     _T5CLK	set	16285
  1109  0000                     _T5GATE	set	16284
  1110  0000                     _T5GCON	set	16283
  1111  0000                     _LATEbits	set	16318
  1112  0000                     _T6CON	set	16276
  1113  0000                     _T6TMR	set	16274
  1114  0000                     _T6PR	set	16275
  1115  0000                     _T6RST	set	16279
  1116  0000                     _T6HLT	set	16277
  1117  0000                     _T6CLKCON	set	16278
  1118  0000                     _TRISD	set	16325
  1119  0000                     _TRISC	set	16324
  1120  0000                     _TRISB	set	16323
  1121  0000                     _TRISA	set	16322
  1122  0000                     _TRISF	set	16327
  1123  0000                     _TRISE	set	16326
  1124  0000                     _LATC	set	16316
  1125  0000                     _LATB	set	16315
  1126  0000                     _LATF	set	16319
  1127  0000                     _LATA	set	16314
  1128  0000                     _LATD	set	16317
  1129  0000                     _LATE	set	16318
  1130  0000                     _IVTLOCKbits	set	16340
  1131  0000                     _IVTLOCK	set	16340
  1132  0000                     _INTCON0bits	set	16338
  1133  0000                     _GIE	set	130711
  1134                           
  1135                           	psect	smallconst
  1136  002000                     __psmallconst:
  1137                           	opt callstack 0
  1138  002000  00                 	db	0
  1139  002001                     STR_11:
  1140  002001  4C                 	db	76	;'L'
  1141  002002  4F                 	db	79	;'O'
  1142  002003  47                 	db	71	;'G'
  1143  002004  3A                 	db	58	;':'
  1144  002005  20                 	db	32
  1145  002006  55                 	db	85	;'U'
  1146  002007  25                 	db	37
  1147  002008  64                 	db	100	;'d'
  1148  002009  20                 	db	32
  1149  00200A  47                 	db	71	;'G'
  1150  00200B  25                 	db	37
  1151  00200C  64                 	db	100	;'d'
  1152  00200D  20                 	db	32
  1153  00200E  25                 	db	37
  1154  00200F  64                 	db	100	;'d'
  1155  002010  20                 	db	32
  1156  002011  25                 	db	37
  1157  002012  64                 	db	100	;'d'
  1158  002013  20                 	db	32
  1159  002014  20                 	db	32
  1160  002015  20                 	db	32
  1161  002016  20                 	db	32
  1162  002017  20                 	db	32
  1163  002018  20                 	db	32
  1164  002019  23                 	db	35
  1165  00201A  00                 	db	0
  1166  00201B                     STR_15:
  1167  00201B  52                 	db	82	;'R'
  1168  00201C  25                 	db	37
  1169  00201D  64                 	db	100	;'d'
  1170  00201E  20                 	db	32
  1171  00201F  25                 	db	37
  1172  002020  64                 	db	100	;'d'
  1173  002021  2C                 	db	44
  1174  002022  20                 	db	32
  1175  002023  54                 	db	84	;'T'
  1176  002024  25                 	db	37
  1177  002025  64                 	db	100	;'d'
  1178  002026  20                 	db	32
  1179  002027  25                 	db	37
  1180  002028  64                 	db	100	;'d'
  1181  002029  20                 	db	32
  1182  00202A  43                 	db	67	;'C'
  1183  00202B  25                 	db	37
  1184  00202C  64                 	db	100	;'d'
  1185  00202D  20                 	db	32
  1186  00202E  20                 	db	32
  1187  00202F  20                 	db	32
  1188  002030  20                 	db	32
  1189  002031  20                 	db	32
  1190  002032  20                 	db	32
  1191  002033  23                 	db	35
  1192  002034  00                 	db	0
  1193  002035                     STR_5:
  1194  002035  48                 	db	72	;'H'
  1195  002036  4F                 	db	79	;'O'
  1196  002037  53                 	db	83	;'S'
  1197  002038  54                 	db	84	;'T'
  1198  002039  3A                 	db	58	;':'
  1199  00203A  20                 	db	32
  1200  00203B  25                 	db	37
  1201  00203C  6C                 	db	108	;'l'
  1202  00203D  64                 	db	100	;'d'
  1203  00203E  20                 	db	32
  1204  00203F  47                 	db	71	;'G'
  1205  002040  25                 	db	37
  1206  002041  64                 	db	100	;'d'
  1207  002042  20                 	db	32
  1208  002043  20                 	db	32
  1209  002044  20                 	db	32
  1210  002045  20                 	db	32
  1211  002046  20                 	db	32
  1212  002047  20                 	db	32
  1213  002048  23                 	db	35
  1214  002049  00                 	db	0
  1215  00204A                     STR_12:
  1216  00204A  20                 	db	32
  1217  00204B  53                 	db	83	;'S'
  1218  00204C  25                 	db	37
  1219  00204D  64                 	db	100	;'d'
  1220  00204E  46                 	db	70	;'F'
  1221  00204F  25                 	db	37
  1222  002050  64                 	db	100	;'d'
  1223  002051  20                 	db	32
  1224  002052  23                 	db	35
  1225  002053  25                 	db	37
  1226  002054  6C                 	db	108	;'l'
  1227  002055  64                 	db	100	;'d'
  1228  002056  20                 	db	32
  1229  002057  20                 	db	32
  1230  002058  20                 	db	32
  1231  002059  20                 	db	32
  1232  00205A  20                 	db	32
  1233  00205B  20                 	db	32
  1234  00205C  00                 	db	0
  1235  00205D                     STR_9:
  1236  00205D  45                 	db	69	;'E'
  1237  00205E  25                 	db	37
  1238  00205F  64                 	db	100	;'d'
  1239  002060  20                 	db	32
  1240  002061  41                 	db	65	;'A'
  1241  002062  25                 	db	37
  1242  002063  64                 	db	100	;'d'
  1243  002064  20                 	db	32
  1244  002065  54                 	db	84	;'T'
  1245  002066  25                 	db	37
  1246  002067  64                 	db	100	;'d'
  1247  002068  20                 	db	32
  1248  002069  43                 	db	67	;'C'
  1249  00206A  25                 	db	37
  1250  00206B  64                 	db	100	;'d'
  1251  00206C  20                 	db	32
  1252  00206D  23                 	db	35
  1253  00206E  00                 	db	0
  1254  00206F                     STR_1:
  1255  00206F  20                 	db	32
  1256  002070  52                 	db	82	;'R'
  1257  002071  56                 	db	86	;'V'
  1258  002072  49                 	db	73	;'I'
  1259  002073  20                 	db	32
  1260  002074  48                 	db	72	;'H'
  1261  002075  4F                 	db	79	;'O'
  1262  002076  53                 	db	83	;'S'
  1263  002077  54                 	db	84	;'T'
  1264  002078  20                 	db	32
  1265  002079  54                 	db	84	;'T'
  1266  00207A  45                 	db	69	;'E'
  1267  00207B  53                 	db	83	;'S'
  1268  00207C  54                 	db	84	;'T'
  1269  00207D  45                 	db	69	;'E'
  1270  00207E  52                 	db	82	;'R'
  1271  00207F  00                 	db	0
  1272  002080                     STR_4:
  1273  002080  20                 	db	32
  1274  002081  46                 	db	70	;'F'
  1275  002082  47                 	db	71	;'G'
  1276  002083  42                 	db	66	;'B'
  1277  002084  40                 	db	64	;'@'
  1278  002085  4D                 	db	77	;'M'
  1279  002086  43                 	db	67	;'C'
  1280  002087  48                 	db	72	;'H'
  1281  002088  50                 	db	80	;'P'
  1282  002089  20                 	db	32
  1283  00208A  46                 	db	70	;'F'
  1284  00208B  41                 	db	65	;'A'
  1285  00208C  42                 	db	66	;'B'
  1286  00208D  34                 	db	52	;'4'
  1287  00208E  00                 	db	0
  1288  00208F                     STR_6:
  1289  00208F  20                 	db	32
  1290  002090  53                 	db	83	;'S'
  1291  002091  25                 	db	37
  1292  002092  64                 	db	100	;'d'
  1293  002093  46                 	db	70	;'F'
  1294  002094  25                 	db	37
  1295  002095  64                 	db	100	;'d'
  1296  002096  20                 	db	32
  1297  002097  23                 	db	35
  1298  002098  20                 	db	32
  1299  002099  20                 	db	32
  1300  00209A  20                 	db	32
  1301  00209B  20                 	db	32
  1302  00209C  00                 	db	0
  1303  00209D                     STR_2:
  1304  00209D  20                 	db	32
  1305  00209E  56                 	db	86	;'V'
  1306  00209F  65                 	db	101	;'e'
  1307  0020A0  72                 	db	114	;'r'
  1308  0020A1  73                 	db	115	;'s'
  1309  0020A2  69                 	db	105	;'i'
  1310  0020A3  6F                 	db	111	;'o'
  1311  0020A4  6E                 	db	110	;'n'
  1312  0020A5  20                 	db	32
  1313  0020A6  25                 	db	37
  1314  0020A7  73                 	db	115	;'s'
  1315  0020A8  00                 	db	0
  1316  0020A9                     STR_8:
  1317  0020A9  20                 	db	32
  1318  0020AA  4F                 	db	79	;'O'
  1319  0020AB  4B                 	db	75	;'K'
  1320  0020AC  20                 	db	32
  1321  0020AD  23                 	db	35
  1322  0020AE  00                 	db	0
  1323  0020AF                     STR_7:
  1324  0020AF  20                 	db	32
  1325  0020B0  4F                 	db	79	;'O'
  1326  0020B1  4B                 	db	75	;'K'
  1327  0020B2  51                 	db	81	;'Q'
  1328  0020B3  23                 	db	35
  1329  0020B4  00                 	db	0
  1330  0020B5                     STR_3:
  1331  0020B5  30                 	db	48	;'0'
  1332  0020B6  2E                 	db	46
  1333  0020B7  38                 	db	56	;'8'
  1334  0020B8  36                 	db	54	;'6'
  1335  0020B9  42                 	db	66	;'B'
  1336  0020BA  00                 	db	0
  1337  0020BB                     STR_19:
  1338  0020BB  6C                 	db	108	;'l'
  1339  0020BC  64                 	db	100	;'d'
  1340  0020BD  00                 	db	0
  1341  0020BE                     STR_23:
  1342  0020BE  6C                 	db	108	;'l'
  1343  0020BF  69                 	db	105	;'i'
  1344  0020C0  00                 	db	0
  1345  0020C1                     STR_17:
  1346  0020C1  25                 	db	37
  1347  0020C2  63                 	db	99	;'c'
  1348  0020C3  00                 	db	0
  1349  0000                     
  1350                           ; #config settings
  1351  0020C4  00                 	db	0	; dummy byte at the end
  1352  0000                     
  1353                           	psect	cinit
  1354  004DAE                     __pcinit:
  1355                           	opt callstack 0
  1356  004DAE                     start_initialization:
  1357                           	opt callstack 0
  1358  004DAE                     __initialization:
  1359                           	opt callstack 0
  1360                           
  1361                           ; Initialize objects allocated to BIGRAM (257 bytes)
  1362                           ; load TBLPTR registers with __pidataBIGRAM
  1363  004DAE  0EAC               	movlw	low __pidataBIGRAM
  1364  004DB0  6EF6               	movwf	tblptrl,c
  1365  004DB2  0E4C               	movlw	high __pidataBIGRAM
  1366  004DB4  6EF7               	movwf	tblptrh,c
  1367  004DB6  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
  1368  004DB8  6EF8               	movwf	tblptru,c
  1369  004DBA  EE00  F3BE         	lfsr	0,__pdataBIGRAM
  1370  004DBE  EE20 F101          	lfsr	2,257
  1371  004DC2                     copy_data0:
  1372  004DC2  0009               	tblrd		*+
  1373  004DC4  006F FFD7 FFEE     	movff	tablat,postinc0
  1374  004DCA  50DD               	movf	postdec2,w,c
  1375  004DCC  50D9               	movf	fsr2l,w,c
  1376  004DCE  E1F9               	bnz	copy_data0
  1377  004DD0  50DA               	movf	fsr2h,w,c
  1378  004DD2  E1F7               	bnz	copy_data0
  1379                           
  1380                           ; Initialize objects allocated to BANK3 (56 bytes)
  1381                           ; load TBLPTR registers with __pidataBANK3
  1382  004DD4  0EF0               	movlw	low __pidataBANK3
  1383  004DD6  6EF6               	movwf	tblptrl,c
  1384  004DD8  0E5D               	movlw	high __pidataBANK3
  1385  004DDA  6EF7               	movwf	tblptrh,c
  1386  004DDC  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1387  004DDE  6EF8               	movwf	tblptru,c
  1388  004DE0  EE00  F386         	lfsr	0,__pdataBANK3
  1389  004DE4  EE20 F038          	lfsr	2,56
  1390  004DE8                     copy_data1:
  1391  004DE8  0009               	tblrd		*+
  1392  004DEA  006F FFD7 FFEE     	movff	tablat,postinc0
  1393  004DF0  50DD               	movf	postdec2,w,c
  1394  004DF2  50D9               	movf	fsr2l,w,c
  1395  004DF4  E1F9               	bnz	copy_data1
  1396                           
  1397                           ; Initialize objects allocated to BANK1 (208 bytes)
  1398                           ; load TBLPTR registers with __pidataBANK1
  1399  004DF6  0E60               	movlw	low __pidataBANK1
  1400  004DF8  6EF6               	movwf	tblptrl,c
  1401  004DFA  0E50               	movlw	high __pidataBANK1
  1402  004DFC  6EF7               	movwf	tblptrh,c
  1403  004DFE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1404  004E00  6EF8               	movwf	tblptru,c
  1405  004E02  EE00  F100         	lfsr	0,__pdataBANK1
  1406  004E06  EE20 F0D0          	lfsr	2,208
  1407  004E0A                     copy_data2:
  1408  004E0A  0009               	tblrd		*+
  1409  004E0C  006F FFD7 FFEE     	movff	tablat,postinc0
  1410  004E12  50DD               	movf	postdec2,w,c
  1411  004E14  50D9               	movf	fsr2l,w,c
  1412  004E16  E1F9               	bnz	copy_data2
  1413                           
  1414                           ; Initialize objects allocated to BANK0 (98 bytes)
  1415                           ; load TBLPTR registers with __pidataBANK0
  1416  004E18  0EB4               	movlw	low __pidataBANK0
  1417  004E1A  6EF6               	movwf	tblptrl,c
  1418  004E1C  0E58               	movlw	high __pidataBANK0
  1419  004E1E  6EF7               	movwf	tblptrh,c
  1420  004E20  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1421  004E22  6EF8               	movwf	tblptru,c
  1422  004E24  EE00  F060         	lfsr	0,__pdataBANK0
  1423  004E28  EE20 F062          	lfsr	2,98
  1424  004E2C                     copy_data3:
  1425  004E2C  0009               	tblrd		*+
  1426  004E2E  006F FFD7 FFEE     	movff	tablat,postinc0
  1427  004E34  50DD               	movf	postdec2,w,c
  1428  004E36  50D9               	movf	fsr2l,w,c
  1429  004E38  E1F9               	bnz	copy_data3
  1430                           
  1431                           ; Initialize objects allocated to COMRAM (1 bytes)
  1432                           ; load TBLPTR registers with __pidataCOMRAM
  1433  004E3A  0E7A               	movlw	low __pidataCOMRAM
  1434  004E3C  6EF6               	movwf	tblptrl,c
  1435  004E3E  0E65               	movlw	high __pidataCOMRAM
  1436  004E40  6EF7               	movwf	tblptrh,c
  1437  004E42  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1438  004E44  6EF8               	movwf	tblptru,c
  1439  004E46  0009               	tblrd		*+	;fetch initializer
  1440  004E48  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1441                           
  1442                           ; Clear objects allocated to BANK3 (134 bytes)
  1443  004E4E  EE00  F300         	lfsr	0,__pbssBANK3
  1444  004E52  0E86               	movlw	134
  1445  004E54                     clear_0:
  1446  004E54  6AEE               	clrf	postinc0,c
  1447  004E56  06E8               	decf	wreg,f,c
  1448  004E58  E1FD               	bnz	clear_0
  1449                           
  1450                           ; Clear objects allocated to BANK2 (256 bytes)
  1451  004E5A  EE00  F200         	lfsr	0,__pbssBANK2
  1452  004E5E  EE20 F100          	lfsr	2,256
  1453  004E62                     clear_1:
  1454  004E62  6AEE               	clrf	postinc0,c
  1455  004E64  50DD               	movf	postdec2,w,c
  1456  004E66  50D9               	movf	fsr2l,w,c
  1457  004E68  E1FC               	bnz	clear_1
  1458  004E6A  50DA               	movf	fsr2h,w,c
  1459  004E6C  E1FA               	bnz	clear_1
  1460                           
  1461                           ; Clear objects allocated to BANK1 (40 bytes)
  1462  004E6E  EE00  F1D0         	lfsr	0,__pbssBANK1
  1463  004E72  0E28               	movlw	40
  1464  004E74                     clear_2:
  1465  004E74  6AEE               	clrf	postinc0,c
  1466  004E76  06E8               	decf	wreg,f,c
  1467  004E78  E1FD               	bnz	clear_2
  1468                           
  1469                           ; Clear objects allocated to BANK0 (59 bytes)
  1470  004E7A  EE00  F0C2         	lfsr	0,__pbssBANK0
  1471  004E7E  0E3B               	movlw	59
  1472  004E80                     clear_3:
  1473  004E80  6AEE               	clrf	postinc0,c
  1474  004E82  06E8               	decf	wreg,f,c
  1475  004E84  E1FD               	bnz	clear_3
  1476                           
  1477                           ; Clear objects allocated to COMRAM (60 bytes)
  1478  004E86  EE00  F001         	lfsr	0,__pbssCOMRAM
  1479  004E8A  0E3C               	movlw	60
  1480  004E8C                     clear_4:
  1481  004E8C  6AEE               	clrf	postinc0,c
  1482  004E8E  06E8               	decf	wreg,f,c
  1483  004E90  E1FD               	bnz	clear_4
  1484                           
  1485                           ;
  1486                           ; Setup IVTBASE
  1487                           ;
  1488  004E92  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1489  004E94  6ED5               	movwf	213,c
  1490  004E96  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1491  004E98  6ED6               	movwf	214,c
  1492  004E9A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1493  004E9C  6ED7               	movwf	215,c
  1494  004E9E                     end_of_initialization:
  1495                           	opt callstack 0
  1496  004E9E                     __end_of__initialization:
  1497                           	opt callstack 0
  1498  004E9E  0100               	movlb	0
  1499  004EA0  EF63  F010         	goto	_main	;jump to C main() function
  1500                           
  1501                           	psect	bssCOMRAM
  1502  000001                     __pbssCOMRAM:
  1503                           	opt callstack 0
  1504  000001                     secs_II_message@block:
  1505                           	opt callstack 0
  1506  000001                     	ds	7
  1507  000008                     _UART1_TxInterruptHandler:
  1508                           	opt callstack 0
  1509  000008                     	ds	3
  1510  00000B                     _UART1_RxInterruptHandler:
  1511                           	opt callstack 0
  1512  00000B                     	ds	3
  1513  00000E                     _UART2_TxInterruptHandler:
  1514                           	opt callstack 0
  1515  00000E                     	ds	3
  1516  000011                     _UART2_RxInterruptHandler:
  1517                           	opt callstack 0
  1518  000011                     	ds	3
  1519  000014                     _INT2_InterruptHandler:
  1520                           	opt callstack 0
  1521  000014                     	ds	3
  1522  000017                     _INT1_InterruptHandler:
  1523                           	opt callstack 0
  1524  000017                     	ds	3
  1525  00001A                     _INT0_InterruptHandler:
  1526                           	opt callstack 0
  1527  00001A                     	ds	3
  1528  00001D                     _width:
  1529                           	opt callstack 0
  1530  00001D                     	ds	2
  1531  00001F                     _prec:
  1532                           	opt callstack 0
  1533  00001F                     	ds	2
  1534  000021                     _flags:
  1535                           	opt callstack 0
  1536  000021                     	ds	2
  1537  000023                     r_protocol@b_block:
  1538                           	opt callstack 0
  1539  000023                     	ds	2
  1540  000025                     run_checksum@sum:
  1541                           	opt callstack 0
  1542  000025                     	ds	2
  1543  000027                     TMR5_ISR@CountCallBack:
  1544                           	opt callstack 0
  1545  000027                     	ds	2
  1546  000029                     _timer5ReloadVal:
  1547                           	opt callstack 0
  1548  000029                     	ds	2
  1549  00002B                     secs_gem_state@block:
  1550                           	opt callstack 0
  1551  00002B                     	ds	1
  1552  00002C                     t_protocol@requeue:
  1553                           	opt callstack 0
  1554  00002C                     	ds	1
  1555  00002D                     t_protocol@retry:
  1556                           	opt callstack 0
  1557  00002D                     	ds	1
  1558  00002E                     r_protocol@rxData_l:
  1559                           	opt callstack 0
  1560  00002E                     	ds	1
  1561  00002F                     m_protocol@rxData_l:
  1562                           	opt callstack 0
  1563  00002F                     	ds	1
  1564  000030                     _mode_sw:
  1565                           	opt callstack 0
  1566  000030                     	ds	1
  1567  000031                     _uart2RxCount:
  1568                           	opt callstack 0
  1569  000031                     	ds	1
  1570  000032                     _uart2RxTail:
  1571                           	opt callstack 0
  1572  000032                     	ds	1
  1573  000033                     _uart2RxHead:
  1574                           	opt callstack 0
  1575  000033                     	ds	1
  1576  000034                     _uart2TxBufferRemaining:
  1577                           	opt callstack 0
  1578  000034                     	ds	1
  1579  000035                     _uart2TxTail:
  1580                           	opt callstack 0
  1581  000035                     	ds	1
  1582  000036                     _uart2TxHead:
  1583                           	opt callstack 0
  1584  000036                     	ds	1
  1585  000037                     _uart1RxCount:
  1586                           	opt callstack 0
  1587  000037                     	ds	1
  1588  000038                     _uart1RxTail:
  1589                           	opt callstack 0
  1590  000038                     	ds	1
  1591  000039                     _uart1RxHead:
  1592                           	opt callstack 0
  1593  000039                     	ds	1
  1594  00003A                     _uart1TxBufferRemaining:
  1595                           	opt callstack 0
  1596  00003A                     	ds	1
  1597  00003B                     _uart1TxTail:
  1598                           	opt callstack 0
  1599  00003B                     	ds	1
  1600  00003C                     _uart1TxHead:
  1601                           	opt callstack 0
  1602  00003C                     	ds	1
  1603                           
  1604                           	psect	dataCOMRAM
  1605  00005D                     __pdataCOMRAM:
  1606                           	opt callstack 0
  1607  00005D                     r_protocol@retry:
  1608                           	opt callstack 0
  1609  00005D                     	ds	1
  1610                           
  1611                           	psect	bssBANK0
  1612  0000C2                     __pbssBANK0:
  1613                           	opt callstack 0
  1614  0000C2                     _r_block:
  1615                           	opt callstack 0
  1616  0000C2                     	ds	13
  1617  0000CF                     _spi_link:
  1618                           	opt callstack 0
  1619  0000CF                     	ds	12
  1620  0000DB                     _tickCount:
  1621                           	opt callstack 0
  1622  0000DB                     	ds	12
  1623  0000E7                     t_protocol@block:
  1624                           	opt callstack 0
  1625  0000E7                     	ds	7
  1626  0000EE                     wdtdelay@dcount:
  1627                           	opt callstack 0
  1628  0000EE                     	ds	4
  1629  0000F2                     _TMR5_InterruptHandler:
  1630                           	opt callstack 0
  1631  0000F2                     	ds	3
  1632  0000F5                     _TMR6_InterruptHandler:
  1633                           	opt callstack 0
  1634  0000F5                     	ds	3
  1635  0000F8                     _ADCC_ADI_InterruptHandler:
  1636                           	opt callstack 0
  1637  0000F8                     	ds	3
  1638  0000FB                     _nout:
  1639                           	opt callstack 0
  1640  0000FB                     	ds	2
  1641                           
  1642                           	psect	dataBANK0
  1643  000060                     __pdataBANK0:
  1644                           	opt callstack 0
  1645  000060                     _V:
  1646                           	opt callstack 0
  1647  000060                     	ds	98
  1648                           
  1649                           	psect	bssBANK1
  1650  0001D0                     __pbssBANK1:
  1651                           	opt callstack 0
  1652  0001D0                     _dbuf:
  1653                           	opt callstack 0
  1654  0001D0                     	ds	32
  1655  0001F0                     _seed:
  1656                           	opt callstack 0
  1657  0001F0                     	ds	8
  1658                           
  1659                           	psect	dataBANK1
  1660  000100                     __pdataBANK1:
  1661                           	opt callstack 0
  1662  000100                     stoa@F1142:
  1663                           	opt callstack 0
  1664  000100                     	ds	7
  1665  000107                     _H10:
  1666                           	opt callstack 0
  1667  000107                     	ds	91
  1668  000162                     _H12:
  1669                           	opt callstack 0
  1670  000162                     	ds	30
  1671  000180                     _H24:
  1672                           	opt callstack 0
  1673  000180                     	ds	27
  1674  00019B                     _H17:
  1675                           	opt callstack 0
  1676  00019B                     	ds	20
  1677  0001AF                     _H14:
  1678                           	opt callstack 0
  1679  0001AF                     	ds	17
  1680  0001C0                     _H13:
  1681                           	opt callstack 0
  1682  0001C0                     	ds	16
  1683                           
  1684                           	psect	bssBANK2
  1685  000200                     __pbssBANK2:
  1686                           	opt callstack 0
  1687  000200                     _uart2RxBuffer:
  1688                           	opt callstack 0
  1689  000200                     	ds	64
  1690  000240                     _uart2TxBuffer:
  1691                           	opt callstack 0
  1692  000240                     	ds	64
  1693  000280                     _uart1RxBuffer:
  1694                           	opt callstack 0
  1695  000280                     	ds	64
  1696  0002C0                     _uart1TxBuffer:
  1697                           	opt callstack 0
  1698  0002C0                     	ds	64
  1699                           
  1700                           	psect	bssBANK3
  1701  000300                     __pbssBANK3:
  1702                           	opt callstack 0
  1703  000300                     _ring_buf2:
  1704                           	opt callstack 0
  1705  000300                     	ds	67
  1706  000343                     _ring_buf1:
  1707                           	opt callstack 0
  1708  000343                     	ds	67
  1709                           
  1710                           	psect	dataBANK3
  1711  000386                     __pdataBANK3:
  1712                           	opt callstack 0
  1713  000386                     _H53:
  1714                           	opt callstack 0
  1715  000386                     	ds	56
  1716                           
  1717                           	psect	dataBIGRAM
  1718  0003BE                     __pdataBIGRAM:
  1719                           	opt callstack 0
  1720  0003BE                     _H254:
  1721                           	opt callstack 0
  1722  0003BE                     	ds	257
  1723                           
  1724                           	psect	cstackBANK0
  1725  0000FD                     __pcstackBANK0:
  1726                           	opt callstack 0
  1727  0000FD                     ??_TMR5_ISR:
  1728                           
  1729                           ; 1 bytes @ 0x0
  1730  0000FD                     	ds	3
  1731                           
  1732                           	psect	cstackCOMRAM
  1733  00005E                     __pcstackCOMRAM:
  1734                           	opt callstack 0
  1735  00005E                     ??_TMR6_ISR:
  1736  00005E                     
  1737                           ; 1 bytes @ 0x0
  1738  00005E                     	ds	1
  1739  00005F                     
  1740                           ; 1 bytes @ 0x1
  1741 ;;
  1742 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1743 ;;
  1744 ;; *************** function _main *****************
  1745 ;; Defined at:
  1746 ;;		line 329 in file "main.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  mode            1  [STACK] enum E16896
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1  [STACK] void 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 4/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels required when called:   14
  1766 ;; This function calls:
  1767 ;;		_SYSTEM_Initialize
  1768 ;;		_WaitMs
  1769 ;;		_eaDogM_WriteCommand
  1770 ;;		_eaDogM_WriteStringAtPos
  1771 ;;		_init_display
  1772 ;;		_m_protocol
  1773 ;;		_r_protocol
  1774 ;;		_sprintf
  1775 ;;		_srand
  1776 ;;		_t_protocol
  1777 ;;		_wait_lcd_done
  1778 ;; This function is called by:
  1779 ;;		Startup code after reset
  1780 ;; This function uses a reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text0
  1784  0020C6                     __ptext0:
  1785                           	opt callstack 0
  1786  0020C6                     _main:
  1787                           	opt callstack 0
  1788                           
  1789                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1790  0020C6  52E6               	movf	postinc1,f,c
  1791                           
  1792                           ;main.c: 331:  UI_STATES mode;;main.c: 334:  SYSTEM_Initialize();
  1793                           
  1794                           ;incstack = 0
  1795  0020C8  EC1D  F02E         	call	_SYSTEM_Initialize	;wreg free
  1796                           
  1797                           ; BSR set to: 60
  1798                           ;main.c: 337:  (INTCON0bits.GIEH = 1);
  1799  0020CC  8ED2               	bsf	16338,7,c	;volatile
  1800                           
  1801                           ; BSR set to: 60
  1802                           ;main.c: 340:  (INTCON0bits.GIEL = 1);
  1803  0020CE  8CD2               	bsf	16338,6,c	;volatile
  1804                           
  1805                           ; BSR set to: 60
  1806                           ;main.c: 342:  V.ui_state = UI_STATE_INIT;
  1807  0020D0  0100               	movlb	0	; () banked
  1808  0020D2  6B61               	clrf	(_V+1)& (0+255),b	;volatile
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;main.c: 347:  WaitMs(300);
  1812  0020D4  0E2C               	movlw	44
  1813  0020D6  6EE6               	movwf	postinc1,c
  1814  0020D8  0E01               	movlw	1
  1815  0020DA  6EE6               	movwf	postinc1,c
  1816  0020DC  EC14  F02F         	call	_WaitMs	;wreg free
  1817                           
  1818                           ;main.c: 348:  if (PORTBbits.RB0) {
  1819  0020E0  A0CB               	btfss	16331,0,c	;volatile
  1820  0020E2  D004               	goto	l9071
  1821                           
  1822                           ;main.c: 349:   mode = UI_STATE_HOST;
  1823                           ;stkvar	_mode @ sp[(-1)+0]
  1824  0020E4  0EFF               	movlw	-1
  1825  0020E6  6AE3               	clrf	plusw1,c
  1826  0020E8  2AE3               	incf	plusw1,f,c
  1827                           
  1828                           ;main.c: 350:  } else {
  1829  0020EA  D004               	goto	l9073
  1830  0020EC                     l9071:
  1831                           
  1832                           ;main.c: 351:   mode = UI_STATE_LOG;
  1833                           ;stkvar	_mode @ sp[(-1)+0]
  1834  0020EC  0EFF               	movlw	-1
  1835  0020EE  6AE3               	clrf	plusw1,c
  1836  0020F0  80E3               	bsf	plusw1,0,c
  1837  0020F2  82E3               	bsf	plusw1,1,c	;indir
  1838  0020F4                     l9073:
  1839                           
  1840                           ;main.c: 354:  if (mode == UI_STATE_HOST) {
  1841                           ;stkvar	_mode @ sp[(-1)+0]
  1842  0020F4  0EFF               	movlw	-1
  1843  0020F6  04E3               	decf	plusw1,w,c
  1844  0020F8  A4D8               	btfss	status,2,c
  1845  0020FA  D003               	goto	l1230
  1846                           
  1847                           ;main.c: 355:   do { LATDbits.LATD0 = 1; } while(0);
  1848  0020FC  80BD               	bsf	16317,0,c	;volatile
  1849                           
  1850                           ;main.c: 356:   do { LATDbits.LATD1 = 1; } while(0);
  1851  0020FE  82BD               	bsf	16317,1,c	;volatile
  1852  002100  D237               	goto	l9237
  1853  002102                     l1230:
  1854  002102  90BD               	bcf	16317,0,c	;volatile
  1855                           
  1856                           ;main.c: 359:   do { LATDbits.LATD1 = 0; } while(0);
  1857  002104  92BD               	bcf	16317,1,c	;volatile
  1858  002106  D234               	goto	l9237
  1859  002108                     l9075:
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;main.c: 365:    init_display();
  1863  002108  EC52  F027         	call	_init_display	;wreg free
  1864                           
  1865                           ; BSR set to: 61
  1866                           ;main.c: 366:    eaDogM_WriteCommand(0b00001100);
  1867  00210C  0E0C               	movlw	12
  1868  00210E  6EE6               	movwf	postinc1,c
  1869  002110  EC6A  F032         	call	_eaDogM_WriteCommand	;wreg free
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;main.c: 368:    V.ui_state = mode;
  1873                           ;stkvar	_mode @ sp[(-1)+0]
  1874  002114  0EFF               	movlw	-1
  1875  002116  006F FF8C  F061    	movff	plusw1,_V+1	;volatile
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;main.c: 369:    V.s_state = SEQ_STATE_INIT;
  1879  00211C  6B60               	clrf	_V& (0+255),b	;volatile
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;main.c: 370:    srand(1957);
  1883  00211E  0EA5               	movlw	165
  1884  002120  6EE6               	movwf	postinc1,c
  1885  002122  0E07               	movlw	7
  1886  002124  6EE6               	movwf	postinc1,c
  1887  002126  EC2F  F02F         	call	_srand	;wreg free
  1888                           
  1889                           ; BSR set to: 1
  1890                           ;main.c: 371:    sprintf(V.buf, " RVI HOST TESTER");
  1891  00212A  0E6F               	movlw	STR_1& (0+255)
  1892  00212C  6EE6               	movwf	postinc1,c
  1893  00212E  0E60               	movlw	_V& (0+255)
  1894  002130  0F06               	addlw	6
  1895  002132  6EE6               	movwf	postinc1,c
  1896  002134  0E02               	movlw	2
  1897  002136  6EE6               	movwf	postinc1,c
  1898  002138  EC98  F028         	call	_sprintf	;wreg free
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;main.c: 372:    wait_lcd_done();
  1902  00213C  ECF0  F031         	call	_wait_lcd_done	;wreg free
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;main.c: 373:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1906  002140  0E60               	movlw	_V& (0+255)
  1907  002142  0F06               	addlw	6
  1908  002144  6EE6               	movwf	postinc1,c
  1909  002146  0E00               	movlw	0
  1910  002148  6EE6               	movwf	postinc1,c
  1911  00214A  0E00               	movlw	0
  1912  00214C  6EE6               	movwf	postinc1,c
  1913  00214E  EC49  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  1914                           
  1915                           ; BSR set to: 59
  1916                           ;main.c: 374:    sprintf(V.buf, " Version %s", "0.86B");
  1917  002152  0EB5               	movlw	STR_3& (0+255)
  1918  002154  6E48               	movwf	btemp+11,c
  1919  002156  0060  F123  FFE6   	movff	btemp+11,postinc1
  1920  00215C  0E20               	movlw	high __smallconst
  1921  00215E  6EE6               	movwf	postinc1,c
  1922  002160  0E9D               	movlw	STR_2& (0+255)
  1923  002162  6EE6               	movwf	postinc1,c
  1924  002164  0E60               	movlw	_V& (0+255)
  1925  002166  0F06               	addlw	6
  1926  002168  6EE6               	movwf	postinc1,c
  1927  00216A  0E04               	movlw	4
  1928  00216C  6EE6               	movwf	postinc1,c
  1929  00216E  EC98  F028         	call	_sprintf	;wreg free
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;main.c: 375:    wait_lcd_done();
  1933  002172  ECF0  F031         	call	_wait_lcd_done	;wreg free
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;main.c: 376:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1937  002176  0E60               	movlw	_V& (0+255)
  1938  002178  0F06               	addlw	6
  1939  00217A  6EE6               	movwf	postinc1,c
  1940  00217C  0E00               	movlw	0
  1941  00217E  6EE6               	movwf	postinc1,c
  1942  002180  0E01               	movlw	1
  1943  002182  6EE6               	movwf	postinc1,c
  1944  002184  EC49  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  1945                           
  1946                           ; BSR set to: 59
  1947                           ;main.c: 377:    sprintf(V.buf, " FGB@MCHP FAB4");
  1948  002188  0E80               	movlw	STR_4& (0+255)
  1949  00218A  6EE6               	movwf	postinc1,c
  1950  00218C  0E60               	movlw	_V& (0+255)
  1951  00218E  0F06               	addlw	6
  1952  002190  6EE6               	movwf	postinc1,c
  1953  002192  0E02               	movlw	2
  1954  002194  6EE6               	movwf	postinc1,c
  1955  002196  EC98  F028         	call	_sprintf	;wreg free
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;main.c: 378:    wait_lcd_done();
  1959  00219A  ECF0  F031         	call	_wait_lcd_done	;wreg free
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;main.c: 379:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1963  00219E  0E60               	movlw	_V& (0+255)
  1964  0021A0  0F06               	addlw	6
  1965  0021A2  6EE6               	movwf	postinc1,c
  1966  0021A4  0E00               	movlw	0
  1967  0021A6  6EE6               	movwf	postinc1,c
  1968  0021A8  0E02               	movlw	2
  1969  0021AA  6EE6               	movwf	postinc1,c
  1970  0021AC  EC49  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  1971                           
  1972                           ; BSR set to: 59
  1973                           ;main.c: 380:    WaitMs(3000);
  1974  0021B0  0EB8               	movlw	184
  1975  0021B2  6EE6               	movwf	postinc1,c
  1976  0021B4  0E0B               	movlw	11
  1977  0021B6  6EE6               	movwf	postinc1,c
  1978  0021B8  EC14  F02F         	call	_WaitMs	;wreg free
  1979                           
  1980                           ;main.c: 381:    break;
  1981  0021BC  D1ED               	goto	l1271
  1982  0021BE                     l1240:
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;main.c: 385:     V.r_l_state = LINK_STATE_IDLE;
  1986  0021BE  6B64               	clrf	(_V+4)& (0+255),b	;volatile
  1987                           
  1988                           ;main.c: 386:     V.t_l_state = LINK_STATE_IDLE;
  1989  0021C0  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;main.c: 387:     V.s_state = SEQ_STATE_RX;
  1993  0021C2  0E01               	movlw	1
  1994  0021C4  6F60               	movwf	_V& (0+255),b	;volatile
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;main.c: 388:     if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  1998  0021C6  0E0A               	movlw	10
  1999  0021C8  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  2000  0021CA  A4D8               	btfss	status,2,c
  2001  0021CC  D0E7               	goto	l9177
  2002                           
  2003                           ; BSR set to: 0
  2004  0021CE  0E0A               	movlw	10
  2005  0021D0  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  2006  0021D2  A4D8               	btfss	status,2,c
  2007  0021D4  D0E3               	goto	l9177
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;main.c: 389:      sprintf(V.buf, "HOST: %ld G%d      #", V.ticks, V.g_state);
  2011  0021D6  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2012  0021D8  6EE6               	movwf	postinc1,c
  2013  0021DA  0E00               	movlw	0
  2014  0021DC  6EE6               	movwf	postinc1,c
  2015  0021DE  0060  F29B  FFE6   	movff	_V+70,postinc1
  2016  0021E4  0060  F29F  FFE6   	movff	_V+71,postinc1
  2017  0021EA  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2018  0021F0  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2019  0021F6  0E35               	movlw	STR_5& (0+255)
  2020  0021F8  6EE6               	movwf	postinc1,c
  2021  0021FA  0E60               	movlw	_V& (0+255)
  2022  0021FC  0F06               	addlw	6
  2023  0021FE  6EE6               	movwf	postinc1,c
  2024  002200  0E08               	movlw	8
  2025  002202  6EE6               	movwf	postinc1,c
  2026  002204  EC98  F028         	call	_sprintf	;wreg free
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;main.c: 390:      V.buf[16] = 0;
  2030  002208  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;main.c: 391:      wait_lcd_done();
  2034  00220A  ECF0  F031         	call	_wait_lcd_done	;wreg free
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;main.c: 392:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  2038  00220E  0E60               	movlw	_V& (0+255)
  2039  002210  0F06               	addlw	6
  2040  002212  6EE6               	movwf	postinc1,c
  2041  002214  0E00               	movlw	0
  2042  002216  6EE6               	movwf	postinc1,c
  2043  002218  0E02               	movlw	2
  2044  00221A  6EE6               	movwf	postinc1,c
  2045  00221C  EC49  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2046  002220  D0BD               	goto	l9177
  2047  002222                     l9119:
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;main.c: 403:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  2051  002222  0E60               	movlw	_V& (0+255)
  2052  002224  0F04               	addlw	4
  2053  002226  6EE6               	movwf	postinc1,c
  2054  002228  EC06  F01A         	call	_r_protocol	;wreg free
  2055  00222C  0E04               	movlw	4
  2056  00222E  183D               	xorwf	btemp,w,c
  2057  002230  A4D8               	btfss	status,2,c
  2058  002232  D029               	goto	l9137
  2059                           
  2060                           ;main.c: 404:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  2061  002234  0100               	movlb	0	; () banked
  2062  002236  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  2063  002238  6EE6               	movwf	postinc1,c
  2064  00223A  0E00               	movlw	0
  2065  00223C  6EE6               	movwf	postinc1,c
  2066  00223E  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  2067  002240  6EE6               	movwf	postinc1,c
  2068  002242  0E00               	movlw	0
  2069  002244  6EE6               	movwf	postinc1,c
  2070  002246  0E8F               	movlw	STR_6& (0+255)
  2071  002248  6EE6               	movwf	postinc1,c
  2072  00224A  0E60               	movlw	_V& (0+255)
  2073  00224C  0F06               	addlw	6
  2074  00224E  6EE6               	movwf	postinc1,c
  2075  002250  0E06               	movlw	6
  2076  002252  6EE6               	movwf	postinc1,c
  2077  002254  EC98  F028         	call	_sprintf	;wreg free
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;main.c: 405:      V.buf[11] = 0;
  2081  002258  6B71               	clrf	(_V+17)& (0+255),b	;volatile
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;main.c: 406:      wait_lcd_done();
  2085  00225A  ECF0  F031         	call	_wait_lcd_done	;wreg free
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;main.c: 407:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  2089  00225E  0E60               	movlw	_V& (0+255)
  2090  002260  0F06               	addlw	6
  2091  002262  6EE6               	movwf	postinc1,c
  2092  002264  0E00               	movlw	0
  2093  002266  6EE6               	movwf	postinc1,c
  2094  002268  0E00               	movlw	0
  2095  00226A  6EE6               	movwf	postinc1,c
  2096  00226C  EC49  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2097                           
  2098                           ; BSR set to: 59
  2099                           ;main.c: 411:      if (V.wbit) {
  2100  002270  0100               	movlb	0	; () banked
  2101  002272  A3BB               	btfss	(_V+91)& (0+255),1,b	;volatile
  2102  002274  D006               	goto	l9135
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;main.c: 412:       V.s_state = SEQ_STATE_TX;
  2106  002276  0E02               	movlw	2
  2107  002278  6F60               	movwf	_V& (0+255),b	;volatile
  2108                           
  2109                           ;main.c: 413:       V.failed_send = 0;
  2110  00227A  0E87               	movlw	-121
  2111  00227C  17BB               	andwf	(_V+91)& (0+255),f,b	;volatile
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;main.c: 414:       V.t_l_state = LINK_STATE_IDLE;
  2115  00227E  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  2116                           
  2117                           ;main.c: 415:      } else {
  2118  002280  D002               	goto	l9137
  2119  002282                     l9135:
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;main.c: 416:       V.s_state = SEQ_STATE_TRIGGER;
  2123  002282  0E03               	movlw	3
  2124  002284  6F60               	movwf	_V& (0+255),b	;volatile
  2125  002286                     l9137:
  2126                           
  2127                           ;main.c: 419:     if (V.r_l_state == LINK_STATE_ERROR)
  2128  002286  0E06               	movlw	6
  2129  002288  0100               	movlb	0	; () banked
  2130  00228A  1964               	xorwf	(_V+4)& (0+255),w,b	;volatile
  2131  00228C  D00F               	goto	L31
  2132  00228E                     l9141:
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;main.c: 426:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  2136  00228E  0E60               	movlw	_V& (0+255)
  2137  002290  0F05               	addlw	5
  2138  002292  6EE6               	movwf	postinc1,c
  2139  002294  ECC8  F01F         	call	_t_protocol	;wreg free
  2140  002298  0E04               	movlw	4
  2141  00229A  183D               	xorwf	btemp,w,c
  2142  00229C  A4D8               	btfss	status,2,c
  2143  00229E  D003               	goto	l9145
  2144                           
  2145                           ;main.c: 427:      V.s_state = SEQ_STATE_TRIGGER;
  2146  0022A0  0E03               	movlw	3
  2147  0022A2  0100               	movlb	0	; () banked
  2148  0022A4  6F60               	movwf	_V& (0+255),b	;volatile
  2149  0022A6                     l9145:
  2150                           
  2151                           ;main.c: 429:     if (V.t_l_state == LINK_STATE_ERROR)
  2152  0022A6  0E06               	movlw	6
  2153  0022A8  0100               	movlb	0	; () banked
  2154  0022AA  1965               	xorwf	(_V+5)& (0+255),w,b	;volatile
  2155  0022AC                     L31:
  2156  0022AC  A4D8               	btfss	status,2,c
  2157  0022AE  D076               	goto	l9177
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;main.c: 430:      V.s_state = SEQ_STATE_ERROR;
  2161  0022B0  0E06               	movlw	6
  2162  0022B2  6F60               	movwf	_V& (0+255),b	;volatile
  2163  0022B4  D073               	goto	l9177
  2164  0022B6                     l1251:
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;main.c: 433:     if (V.queue) {
  2168  0022B6  A9BC               	btfss	(_V+92)& (0+255),4,b	;volatile
  2169  0022B8  D00E               	goto	l9155
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;main.c: 434:      V.r_l_state = LINK_STATE_IDLE;
  2173  0022BA  6B64               	clrf	(_V+4)& (0+255),b	;volatile
  2174                           
  2175                           ;main.c: 435:      V.t_l_state = LINK_STATE_IDLE;
  2176  0022BC  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;main.c: 436:      V.s_state = SEQ_STATE_TX;
  2180  0022BE  0E02               	movlw	2
  2181  0022C0  6F60               	movwf	_V& (0+255),b	;volatile
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;main.c: 437:      sprintf(V.buf, " OKQ#");
  2185  0022C2  0EAF               	movlw	STR_7& (0+255)
  2186  0022C4  6EE6               	movwf	postinc1,c
  2187  0022C6  0E60               	movlw	_V& (0+255)
  2188  0022C8  0F06               	addlw	6
  2189  0022CA  6EE6               	movwf	postinc1,c
  2190  0022CC  0E02               	movlw	2
  2191  0022CE  6EE6               	movwf	postinc1,c
  2192  0022D0  EC98  F028         	call	_sprintf	;wreg free
  2193                           
  2194                           ;main.c: 438:     } else {
  2195  0022D4  D00B               	goto	l9159
  2196  0022D6                     l9155:
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;main.c: 439:      V.s_state = SEQ_STATE_DONE;
  2200  0022D6  0E05               	movlw	5
  2201  0022D8  6F60               	movwf	_V& (0+255),b	;volatile
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;main.c: 440:      sprintf(V.buf, " OK #");
  2205  0022DA  0EA9               	movlw	STR_8& (0+255)
  2206  0022DC  6EE6               	movwf	postinc1,c
  2207  0022DE  0E60               	movlw	_V& (0+255)
  2208  0022E0  0F06               	addlw	6
  2209  0022E2  6EE6               	movwf	postinc1,c
  2210  0022E4  0E02               	movlw	2
  2211  0022E6  6EE6               	movwf	postinc1,c
  2212  0022E8  EC98  F028         	call	_sprintf	;wreg free
  2213  0022EC                     l9159:
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;main.c: 442:     wait_lcd_done();
  2217  0022EC  ECF0  F031         	call	_wait_lcd_done	;wreg free
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;main.c: 443:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  2221  0022F0  0E60               	movlw	_V& (0+255)
  2222  0022F2  0F06               	addlw	6
  2223  0022F4  6EE6               	movwf	postinc1,c
  2224  0022F6  0E0B               	movlw	11
  2225  0022F8  6EE6               	movwf	postinc1,c
  2226  0022FA  0E00               	movlw	0
  2227  0022FC  6EE6               	movwf	postinc1,c
  2228  0022FE  EC49  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2229                           
  2230                           ;main.c: 444:     break;
  2231  002302  D04C               	goto	l9177
  2232  002304                     l1254:
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;main.c: 446:     V.s_state = SEQ_STATE_INIT;
  2236  002304  6B60               	clrf	_V& (0+255),b	;volatile
  2237                           
  2238                           ;main.c: 447:     break;
  2239  002306  D04A               	goto	l9177
  2240  002308                     l1256:
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;main.c: 450:     V.s_state = SEQ_STATE_INIT;
  2244  002308  6B60               	clrf	_V& (0+255),b	;volatile
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;main.c: 451:     sprintf(V.buf, "E%d A%d T%d C%d #", V.error, V.abort, V.timer_error, V
      +                          .checksum_error);
  2248  00230A  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2249  002310  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2250  002316  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2251  00231C  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2252  002322  51B1               	movf	(_V+81)& (0+255),w,b	;volatile
  2253  002324  6EE6               	movwf	postinc1,c
  2254  002326  0E00               	movlw	0
  2255  002328  6EE6               	movwf	postinc1,c
  2256  00232A  51B0               	movf	(_V+80)& (0+255),w,b	;volatile
  2257  00232C  6EE6               	movwf	postinc1,c
  2258  00232E  0E00               	movlw	0
  2259  002330  6EE6               	movwf	postinc1,c
  2260  002332  0E5D               	movlw	STR_9& (0+255)
  2261  002334  6EE6               	movwf	postinc1,c
  2262  002336  0E60               	movlw	_V& (0+255)
  2263  002338  0F06               	addlw	6
  2264  00233A  6EE6               	movwf	postinc1,c
  2265  00233C  0E0A               	movlw	10
  2266  00233E  6EE6               	movwf	postinc1,c
  2267  002340  EC98  F028         	call	_sprintf	;wreg free
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;main.c: 452:     V.buf[16] = 0;
  2271  002344  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;main.c: 453:     wait_lcd_done();
  2275  002346  ECF0  F031         	call	_wait_lcd_done	;wreg free
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;main.c: 454:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2279  00234A  0E60               	movlw	_V& (0+255)
  2280  00234C  0F06               	addlw	6
  2281  00234E  6EE6               	movwf	postinc1,c
  2282  002350  0E00               	movlw	0
  2283  002352  6EE6               	movwf	postinc1,c
  2284  002354  0E02               	movlw	2
  2285  002356  6EE6               	movwf	postinc1,c
  2286  002358  EC49  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2287                           
  2288                           ; BSR set to: 59
  2289                           ;main.c: 455:     WaitMs(2000);
  2290  00235C  0ED0               	movlw	208
  2291  00235E  6EE6               	movwf	postinc1,c
  2292  002360  0E07               	movlw	7
  2293  002362  6EE6               	movwf	postinc1,c
  2294  002364  EC14  F02F         	call	_WaitMs	;wreg free
  2295                           
  2296                           ;main.c: 456:     break;
  2297  002368  D019               	goto	l9177
  2298  00236A                     l9175:
  2299                           
  2300                           ; BSR set to: 0
  2301  00236A  5160               	movf	_V& (0+255),w,b	;volatile
  2302  00236C  6E47               	movwf	btemp+10,c
  2303  00236E  6A48               	clrf	btemp+11,c
  2304                           
  2305                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2306                           ; Switch size 1, requested type "simple"
  2307                           ; Number of cases is 1, Range of values is 0 to 0
  2308                           ; switch strategies available:
  2309                           ; Name         Instructions Cycles
  2310                           ; simple_byte            4     3 (average)
  2311                           ;	Chosen strategy is simple_byte
  2312  002370  5048               	movf	btemp+11,w,c
  2313  002372  0A00               	xorlw	0	; case 0
  2314  002374  A4D8               	btfss	status,2,c
  2315  002376  D7C8               	goto	l1256
  2316                           
  2317                           ; BSR set to: 0
  2318                           ; Switch size 1, requested type "simple"
  2319                           ; Number of cases is 6, Range of values is 0 to 6
  2320                           ; switch strategies available:
  2321                           ; Name         Instructions Cycles
  2322                           ; simple_byte           19    10 (average)
  2323                           ;	Chosen strategy is simple_byte
  2324  002378  5047               	movf	btemp+10,w,c
  2325  00237A  0A00               	xorlw	0	; case 0
  2326  00237C  B4D8               	btfsc	status,2,c
  2327  00237E  D71F               	goto	l1240
  2328  002380  0A01               	xorlw	1	; case 1
  2329  002382  B4D8               	btfsc	status,2,c
  2330  002384  D74E               	goto	l9119
  2331  002386  0A03               	xorlw	3	; case 2
  2332  002388  B4D8               	btfsc	status,2,c
  2333  00238A  D781               	goto	l9141
  2334  00238C  0A01               	xorlw	1	; case 3
  2335  00238E  B4D8               	btfsc	status,2,c
  2336  002390  D792               	goto	l1251
  2337  002392  0A06               	xorlw	6	; case 5
  2338  002394  B4D8               	btfsc	status,2,c
  2339  002396  D7B6               	goto	l1254
  2340  002398  0A03               	xorlw	3	; case 6
  2341  00239A  D7B6               	goto	l1256
  2342  00239C                     l9177:
  2343                           
  2344                           ;main.c: 458:    if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  2345  00239C  0E0A               	movlw	10
  2346  00239E  0100               	movlb	0	; () banked
  2347  0023A0  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  2348  0023A2  A4D8               	btfss	status,2,c
  2349  0023A4  D0F9               	goto	l1271
  2350                           
  2351                           ; BSR set to: 0
  2352  0023A6  0E0A               	movlw	10
  2353  0023A8  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  2354  0023AA  A4D8               	btfss	status,2,c
  2355  0023AC  D0F5               	goto	l1271
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;main.c: 459:     sprintf(V.buf, "HOST: %ld G%d      #", V.ticks, V.g_state);
  2359  0023AE  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2360  0023B0  6EE6               	movwf	postinc1,c
  2361  0023B2  0E00               	movlw	0
  2362  0023B4  6EE6               	movwf	postinc1,c
  2363  0023B6  0060  F29B  FFE6   	movff	_V+70,postinc1
  2364  0023BC  0060  F29F  FFE6   	movff	_V+71,postinc1
  2365  0023C2  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2366  0023C8  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2367  0023CE  0E35               	movlw	STR_5& (0+255)
  2368  0023D0  6EE6               	movwf	postinc1,c
  2369  0023D2  0E60               	movlw	_V& (0+255)
  2370  0023D4  0F06               	addlw	6
  2371  0023D6  6EE6               	movwf	postinc1,c
  2372  0023D8  0E08               	movlw	8
  2373  0023DA  6EE6               	movwf	postinc1,c
  2374  0023DC  EC98  F028         	call	_sprintf	;wreg free
  2375  0023E0                     l9183:
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;main.c: 460:     V.buf[16] = 0;
  2379  0023E0  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;main.c: 461:     wait_lcd_done();
  2383  0023E2  ECF0  F031         	call	_wait_lcd_done	;wreg free
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;main.c: 462:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2387  0023E6  0E60               	movlw	_V& (0+255)
  2388  0023E8  0F06               	addlw	6
  2389  0023EA  6EE6               	movwf	postinc1,c
  2390  0023EC  0E00               	movlw	0
  2391  0023EE  6EE6               	movwf	postinc1,c
  2392  0023F0  0E02               	movlw	2
  2393  0023F2  6EE6               	movwf	postinc1,c
  2394  0023F4  EC49  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2395  0023F8  D0CF               	goto	l1271
  2396  0023FA                     l1260:
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;main.c: 468:     V.m_l_state = LINK_STATE_IDLE;
  2400  0023FA  6B63               	clrf	(_V+3)& (0+255),b	;volatile
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;main.c: 469:     V.s_state = SEQ_STATE_RX;
  2404  0023FC  0E01               	movlw	1
  2405  0023FE  6F60               	movwf	_V& (0+255),b	;volatile
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;main.c: 470:     sprintf(V.buf, "LOG: U%d G%d %d %d      #", V.uart, V.g_state, V.timer
      +                          _error, V.checksum_error);
  2409  002400  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2410  002406  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2411  00240C  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2412  002412  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2413  002418  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2414  00241A  6EE6               	movwf	postinc1,c
  2415  00241C  0E00               	movlw	0
  2416  00241E  6EE6               	movwf	postinc1,c
  2417  002420  51C0               	movf	(_V+96)& (0+255),w,b	;volatile
  2418  002422  6EE6               	movwf	postinc1,c
  2419  002424  0E00               	movlw	0
  2420  002426  6EE6               	movwf	postinc1,c
  2421  002428  0E01               	movlw	STR_11& (0+255)
  2422  00242A  6EE6               	movwf	postinc1,c
  2423  00242C  0E60               	movlw	_V& (0+255)
  2424  00242E  0F06               	addlw	6
  2425  002430  6EE6               	movwf	postinc1,c
  2426  002432  0E0A               	movlw	10
  2427  002434  6EE6               	movwf	postinc1,c
  2428  002436  EC98  F028         	call	_sprintf	;wreg free
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;main.c: 471:     V.buf[16] = 0;
  2432  00243A  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;main.c: 472:     wait_lcd_done();
  2436  00243C  ECF0  F031         	call	_wait_lcd_done	;wreg free
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;main.c: 473:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2440  002440  0E60               	movlw	_V& (0+255)
  2441  002442  0F06               	addlw	6
  2442  002444  6EE6               	movwf	postinc1,c
  2443  002446  0E00               	movlw	0
  2444  002448  6EE6               	movwf	postinc1,c
  2445  00244A  0E02               	movlw	2
  2446  00244C  6EE6               	movwf	postinc1,c
  2447  00244E  EC49  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2448                           
  2449                           ;main.c: 481:     break;
  2450  002452  D06D               	goto	l9227
  2451  002454                     l9199:
  2452                           
  2453                           ; BSR set to: 0
  2454                           ;main.c: 486:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  2455  002454  0E60               	movlw	_V& (0+255)
  2456  002456  0F03               	addlw	3
  2457  002458  6EE6               	movwf	postinc1,c
  2458  00245A  EC7A  F015         	call	_m_protocol	;wreg free
  2459  00245E  0E04               	movlw	4
  2460  002460  183D               	xorwf	btemp,w,c
  2461  002462  A4D8               	btfss	status,2,c
  2462  002464  D02D               	goto	l9211
  2463                           
  2464                           ;main.c: 487:      sprintf(V.buf, " S%dF%d #%ld      ", V.stream, V.function, V.ticks);
  2465  002466  0060  F29B  FFE6   	movff	_V+70,postinc1
  2466  00246C  0060  F29F  FFE6   	movff	_V+71,postinc1
  2467  002472  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2468  002478  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2469  00247E  0100               	movlb	0	; () banked
  2470  002480  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  2471  002482  6EE6               	movwf	postinc1,c
  2472  002484  0E00               	movlw	0
  2473  002486  6EE6               	movwf	postinc1,c
  2474  002488  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  2475  00248A  6EE6               	movwf	postinc1,c
  2476  00248C  0E00               	movlw	0
  2477  00248E  6EE6               	movwf	postinc1,c
  2478  002490  0E4A               	movlw	STR_12& (0+255)
  2479  002492  6EE6               	movwf	postinc1,c
  2480  002494  0E60               	movlw	_V& (0+255)
  2481  002496  0F06               	addlw	6
  2482  002498  6EE6               	movwf	postinc1,c
  2483  00249A  0E0A               	movlw	10
  2484  00249C  6EE6               	movwf	postinc1,c
  2485  00249E  EC98  F028         	call	_sprintf	;wreg free
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;main.c: 488:      V.buf[13] = 0;
  2489  0024A2  6B73               	clrf	(_V+19)& (0+255),b	;volatile
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;main.c: 489:      wait_lcd_done();
  2493  0024A4  ECF0  F031         	call	_wait_lcd_done	;wreg free
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;main.c: 490:      eaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  2497  0024A8  0E60               	movlw	_V& (0+255)
  2498  0024AA  0F06               	addlw	6
  2499  0024AC  6EE6               	movwf	postinc1,c
  2500  0024AE  0E00               	movlw	0
  2501  0024B0  6EE6               	movwf	postinc1,c
  2502  0024B2  05C0               	decf	(_V+96)& (0+255),w,b	;volatile
  2503  0024B4  6EE6               	movwf	postinc1,c
  2504  0024B6  EC49  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2505                           
  2506                           ; BSR set to: 59
  2507                           ;main.c: 491:      V.s_state = SEQ_STATE_TRIGGER;
  2508  0024BA  0E03               	movlw	3
  2509  0024BC  0100               	movlb	0	; () banked
  2510  0024BE  6F60               	movwf	_V& (0+255),b	;volatile
  2511  0024C0                     l9211:
  2512                           
  2513                           ;main.c: 493:     if (V.m_l_state == LINK_STATE_ERROR)
  2514  0024C0  0E06               	movlw	6
  2515  0024C2  0100               	movlb	0	; () banked
  2516  0024C4  1963               	xorwf	(_V+3)& (0+255),w,b	;volatile
  2517  0024C6  A4D8               	btfss	status,2,c
  2518  0024C8  D032               	goto	l9227
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;main.c: 494:      V.s_state = SEQ_STATE_ERROR;
  2522  0024CA  0E06               	movlw	6
  2523  0024CC  6F60               	movwf	_V& (0+255),b	;volatile
  2524  0024CE  D02F               	goto	l9227
  2525  0024D0                     l9215:
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;main.c: 497:     V.s_state = SEQ_STATE_DONE;
  2529  0024D0  0E05               	movlw	5
  2530  0024D2  6F60               	movwf	_V& (0+255),b	;volatile
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;main.c: 498:     sprintf(V.buf, " OK #");
  2534  0024D4  0EA9               	movlw	STR_8& (0+255)
  2535  0024D6  6EE6               	movwf	postinc1,c
  2536  0024D8  0E60               	movlw	_V& (0+255)
  2537  0024DA  0F06               	addlw	6
  2538  0024DC  6EE6               	movwf	postinc1,c
  2539  0024DE  0E02               	movlw	2
  2540  0024E0  6EE6               	movwf	postinc1,c
  2541  0024E2  EC98  F028         	call	_sprintf	;wreg free
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;main.c: 499:     wait_lcd_done();
  2545  0024E6  ECF0  F031         	call	_wait_lcd_done	;wreg free
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;main.c: 500:     eaDogM_WriteStringAtPos(V.uart - 1, 13, V.buf);
  2549  0024EA  0E60               	movlw	_V& (0+255)
  2550  0024EC  0F06               	addlw	6
  2551  0024EE  6EE6               	movwf	postinc1,c
  2552  0024F0  0E0D               	movlw	13
  2553  0024F2  6EE6               	movwf	postinc1,c
  2554  0024F4  05C0               	decf	(_V+96)& (0+255),w,b	;volatile
  2555  0024F6  6EE6               	movwf	postinc1,c
  2556  0024F8  EC49  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2557                           
  2558                           ;main.c: 501:     break;
  2559  0024FC  D018               	goto	l9227
  2560  0024FE                     l1266:
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;main.c: 507:     V.s_state = SEQ_STATE_INIT;
  2564                           
  2565                           ;main.c: 506:    default:
  2566                           
  2567                           ;main.c: 504:     break;
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;main.c: 503:     V.s_state = SEQ_STATE_INIT;
  2571  0024FE  6B60               	clrf	_V& (0+255),b	;volatile
  2572                           
  2573                           ;main.c: 508:     break;
  2574  002500  D016               	goto	l9227
  2575  002502                     l9225:
  2576                           
  2577                           ; BSR set to: 0
  2578  002502  5160               	movf	_V& (0+255),w,b	;volatile
  2579  002504  6E47               	movwf	btemp+10,c
  2580  002506  6A48               	clrf	btemp+11,c
  2581                           
  2582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2583                           ; Switch size 1, requested type "simple"
  2584                           ; Number of cases is 1, Range of values is 0 to 0
  2585                           ; switch strategies available:
  2586                           ; Name         Instructions Cycles
  2587                           ; simple_byte            4     3 (average)
  2588                           ;	Chosen strategy is simple_byte
  2589  002508  5048               	movf	btemp+11,w,c
  2590  00250A  0A00               	xorlw	0	; case 0
  2591  00250C  A4D8               	btfss	status,2,c
  2592  00250E  D7F7               	goto	l1266
  2593                           
  2594                           ; BSR set to: 0
  2595                           ; Switch size 1, requested type "simple"
  2596                           ; Number of cases is 5, Range of values is 0 to 6
  2597                           ; switch strategies available:
  2598                           ; Name         Instructions Cycles
  2599                           ; simple_byte           16     9 (average)
  2600                           ;	Chosen strategy is simple_byte
  2601  002510  5047               	movf	btemp+10,w,c
  2602  002512  0A00               	xorlw	0	; case 0
  2603  002514  B4D8               	btfsc	status,2,c
  2604  002516  D771               	goto	l1260
  2605  002518  0A01               	xorlw	1	; case 1
  2606  00251A  B4D8               	btfsc	status,2,c
  2607  00251C  D79B               	goto	l9199
  2608  00251E  0A02               	xorlw	2	; case 3
  2609  002520  B4D8               	btfsc	status,2,c
  2610  002522  D7D6               	goto	l9215
  2611  002524  0A06               	xorlw	6	; case 5
  2612  002526  B4D8               	btfsc	status,2,c
  2613  002528  D7EA               	goto	l1266
  2614  00252A  0A03               	xorlw	3	; case 6
  2615  00252C  D7E8               	goto	l1266
  2616  00252E                     l9227:
  2617                           
  2618                           ;main.c: 510:    sprintf(V.buf, "LOG: U%d G%d %d %d      #", V.uart, V.g_state, V.timer_
      +                          error, V.checksum_error);
  2619  00252E  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2620  002534  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2621  00253A  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2622  002540  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2623  002546  0100               	movlb	0	; () banked
  2624  002548  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2625  00254A  6EE6               	movwf	postinc1,c
  2626  00254C  0E00               	movlw	0
  2627  00254E  6EE6               	movwf	postinc1,c
  2628  002550  51C0               	movf	(_V+96)& (0+255),w,b	;volatile
  2629  002552  6EE6               	movwf	postinc1,c
  2630  002554  0E00               	movlw	0
  2631  002556  6EE6               	movwf	postinc1,c
  2632  002558  0E01               	movlw	STR_11& (0+255)
  2633  00255A  6EE6               	movwf	postinc1,c
  2634  00255C  0E60               	movlw	_V& (0+255)
  2635  00255E  0F06               	addlw	6
  2636  002560  6EE6               	movwf	postinc1,c
  2637  002562  0E0A               	movlw	10
  2638  002564  6EE6               	movwf	postinc1,c
  2639  002566  EC98  F028         	call	_sprintf	;wreg free
  2640  00256A  D73A               	goto	l9183
  2641  00256C                     l1270:
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;main.c: 517:    V.ui_state = UI_STATE_INIT;
  2645  00256C  6B61               	clrf	(_V+1)& (0+255),b	;volatile
  2646                           
  2647                           ;main.c: 518:    break;
  2648  00256E  D014               	goto	l1271
  2649  002570                     l9237:
  2650  002570  0100               	movlb	0	; () banked
  2651  002572  5161               	movf	(_V+1)& (0+255),w,b	;volatile
  2652  002574  6E47               	movwf	btemp+10,c
  2653  002576  6A48               	clrf	btemp+11,c
  2654                           
  2655                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2656                           ; Switch size 1, requested type "simple"
  2657                           ; Number of cases is 1, Range of values is 0 to 0
  2658                           ; switch strategies available:
  2659                           ; Name         Instructions Cycles
  2660                           ; simple_byte            4     3 (average)
  2661                           ;	Chosen strategy is simple_byte
  2662  002578  5048               	movf	btemp+11,w,c
  2663  00257A  0A00               	xorlw	0	; case 0
  2664  00257C  A4D8               	btfss	status,2,c
  2665  00257E  D7F6               	goto	l1270
  2666                           
  2667                           ; BSR set to: 0
  2668                           ; Switch size 1, requested type "simple"
  2669                           ; Number of cases is 4, Range of values is 0 to 4
  2670                           ; switch strategies available:
  2671                           ; Name         Instructions Cycles
  2672                           ; simple_byte           13     7 (average)
  2673                           ;	Chosen strategy is simple_byte
  2674  002580  5047               	movf	btemp+10,w,c
  2675  002582  0A00               	xorlw	0	; case 0
  2676  002584  B4D8               	btfsc	status,2,c
  2677  002586  D5C0               	goto	l9075
  2678  002588  0A01               	xorlw	1	; case 1
  2679  00258A  B4D8               	btfsc	status,2,c
  2680  00258C  D6EE               	goto	l9175
  2681  00258E  0A02               	xorlw	2	; case 3
  2682  002590  B4D8               	btfsc	status,2,c
  2683  002592  D7B7               	goto	l9225
  2684  002594  0A07               	xorlw	7	; case 4
  2685  002596  D7EA               	goto	l1270
  2686  002598                     l1271:
  2687  002598  84BE               	bsf	16318,2,c	;volatile
  2688                           
  2689                           ;main.c: 521:   if (V.ticks) {
  2690  00259A  0100               	movlb	0	; () banked
  2691  00259C  51A6               	movf	(_V+70)& (0+255),w,b	;volatile
  2692  00259E  11A7               	iorwf	(_V+71)& (0+255),w,b	;volatile
  2693  0025A0  11A8               	iorwf	(_V+72)& (0+255),w,b	;volatile
  2694  0025A2  11A9               	iorwf	(_V+73)& (0+255),w,b	;volatile
  2695  0025A4  B4D8               	btfsc	status,2,c
  2696  0025A6  D016               	goto	l9245
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;main.c: 522:    if (V.failed_receive) {
  2700  0025A8  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  2701  0025AA  0B0F               	andlw	15
  2702  0025AC  0900               	iorlw	0
  2703  0025AE  B4D8               	btfsc	status,2,c
  2704  0025B0  D003               	goto	l1280
  2705                           
  2706                           ; BSR set to: 0
  2707                           
  2708                           ;main.c: 523:     do { LATDbits.LATD4 = 0; } while(0);
  2709  0025B2  98BD               	bcf	16317,4,c	;volatile
  2710                           
  2711                           ; BSR set to: 0
  2712                           
  2713                           ;main.c: 524:     do { LATDbits.LATD5 = 1; } while(0);
  2714  0025B4  8ABD               	bsf	16317,5,c	;volatile
  2715  0025B6  D002               	goto	l9243
  2716  0025B8                     l1280:
  2717                           
  2718                           ; BSR set to: 0
  2719  0025B8  88BD               	bsf	16317,4,c	;volatile
  2720                           
  2721                           ; BSR set to: 0
  2722                           
  2723                           ;main.c: 527:     do { LATDbits.LATD5 = 0; } while(0);
  2724  0025BA  9ABD               	bcf	16317,5,c	;volatile
  2725  0025BC                     l9243:
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;main.c: 529:    if (V.failed_send) {
  2729  0025BC  31BB               	rrcf	(_V+91)& (0+255),w,b	;volatile
  2730  0025BE  32E8               	rrcf	wreg,f,c
  2731  0025C0  32E8               	rrcf	wreg,f,c
  2732  0025C2  0B0F               	andlw	15
  2733  0025C4  0900               	iorlw	0
  2734  0025C6  B4D8               	btfsc	status,2,c
  2735  0025C8  D003               	goto	l1290
  2736                           
  2737                           ; BSR set to: 0
  2738                           
  2739                           ;main.c: 530:     do { LATDbits.LATD6 = 0; } while(0);
  2740  0025CA  9CBD               	bcf	16317,6,c	;volatile
  2741                           
  2742                           ; BSR set to: 0
  2743                           
  2744                           ;main.c: 531:     do { LATDbits.LATD7 = 1; } while(0);
  2745  0025CC  8EBD               	bsf	16317,7,c	;volatile
  2746  0025CE  D002               	goto	l9245
  2747  0025D0                     l1290:
  2748                           
  2749                           ; BSR set to: 0
  2750  0025D0  8CBD               	bsf	16317,6,c	;volatile
  2751                           
  2752                           ; BSR set to: 0
  2753                           
  2754                           ;main.c: 534:     do { LATDbits.LATD7 = 0; } while(0);
  2755  0025D2  9EBD               	bcf	16317,7,c	;volatile
  2756  0025D4                     l9245:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;main.c: 537:   sprintf(V.buf, "R%d %d, T%d %d C%d      #", V.r_l_state, V.failed_receiv
      +                          e, V.t_l_state, V.failed_send, V.checksum_error);
  2760  0025D4  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2761  0025DA  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2762  0025E0  31BB               	rrcf	(_V+91)& (0+255),w,b	;volatile
  2763  0025E2  32E8               	rrcf	wreg,f,c
  2764  0025E4  32E8               	rrcf	wreg,f,c
  2765  0025E6  0B0F               	andlw	15
  2766  0025E8  6EE6               	movwf	postinc1,c
  2767  0025EA  0E00               	movlw	0
  2768  0025EC  6EE6               	movwf	postinc1,c
  2769  0025EE  5165               	movf	(_V+5)& (0+255),w,b	;volatile
  2770  0025F0  6EE6               	movwf	postinc1,c
  2771  0025F2  0E00               	movlw	0
  2772  0025F4  6EE6               	movwf	postinc1,c
  2773  0025F6  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  2774  0025F8  0B0F               	andlw	15
  2775  0025FA  6EE6               	movwf	postinc1,c
  2776  0025FC  0E00               	movlw	0
  2777  0025FE  6EE6               	movwf	postinc1,c
  2778  002600  5164               	movf	(_V+4)& (0+255),w,b	;volatile
  2779  002602  6EE6               	movwf	postinc1,c
  2780  002604  0E00               	movlw	0
  2781  002606  6EE6               	movwf	postinc1,c
  2782  002608  0E1B               	movlw	STR_15& (0+255)
  2783  00260A  6EE6               	movwf	postinc1,c
  2784  00260C  0E60               	movlw	_V& (0+255)
  2785  00260E  0F06               	addlw	6
  2786  002610  6EE6               	movwf	postinc1,c
  2787  002612  0E0C               	movlw	12
  2788  002614  6EE6               	movwf	postinc1,c
  2789  002616  EC98  F028         	call	_sprintf	;wreg free
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;main.c: 538:   V.buf[16] = 0;
  2793  00261A  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;main.c: 539:   wait_lcd_done();
  2797  00261C  ECF0  F031         	call	_wait_lcd_done	;wreg free
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;main.c: 540:   if (mode != UI_STATE_LOG)
  2801                           ;stkvar	_mode @ sp[(-1)+0]
  2802  002620  0EFF               	movlw	-1
  2803  002622  006F FF8C  F03D    	movff	plusw1,btemp
  2804  002628  0E03               	movlw	3
  2805  00262A  183D               	xorwf	btemp,w,c
  2806  00262C  B4D8               	btfsc	status,2,c
  2807  00262E  D009               	goto	l9255
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;main.c: 541:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2811  002630  0E60               	movlw	_V& (0+255)
  2812  002632  0F06               	addlw	6
  2813  002634  6EE6               	movwf	postinc1,c
  2814  002636  0E00               	movlw	0
  2815  002638  6EE6               	movwf	postinc1,c
  2816  00263A  0E01               	movlw	1
  2817  00263C  6EE6               	movwf	postinc1,c
  2818  00263E  EC49  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2819  002642                     l9255:
  2820  002642  94BE               	bcf	16318,2,c	;volatile
  2821  002644  D795               	goto	l9237
  2822  002646                     __end_of_main:
  2823                           	opt callstack 0
  2824                           
  2825 ;; *************** function _t_protocol *****************
  2826 ;; Defined at:
  2827 ;;		line 334 in file "gemsecs.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  t_link          1  [STACK] PTR enum E16172
  2830 ;;		 -> V(98), 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  rxData          1  [STACK] unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1  [STACK] enum E16912
  2835 ;; Registers used:
  2836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2846 ;;Total ram usage:        0 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    5
  2849 ;; This function calls:
  2850 ;;		_StartTimer
  2851 ;;		_TimerDone
  2852 ;;		_UART1_Read
  2853 ;;		_UART1_Write
  2854 ;;		_UART1_is_rx_ready
  2855 ;;		_UART1_put_buffer
  2856 ;;		_secs_II_message
  2857 ;;		_secs_send
  2858 ;; This function is called by:
  2859 ;;		_main
  2860 ;; This function uses a reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text1
  2864  003F90                     __ptext1:
  2865                           	opt callstack 0
  2866  003F90                     _t_protocol:
  2867                           	opt callstack 0
  2868                           
  2869                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2870  003F90  52E6               	movf	postinc1,f,c
  2871                           
  2872                           ;gemsecs.c: 334: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 335: {;gemsecs.
      +                          c: 336:  uint8_t rxData;;gemsecs.c: 337:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          338:  static response_type block;;gemsecs.c: 340:  switch (*t_link) {
  2873                           
  2874                           ;incstack = 0
  2875  003F92  D113               	goto	l8843
  2876  003F94                     l8745:
  2877                           
  2878                           ;gemsecs.c: 342:   V.error = LINK_ERROR_NONE;
  2879  003F94  0E0A               	movlw	10
  2880  003F96  0100               	movlb	0	; () banked
  2881  003F98  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  2882                           
  2883                           ;gemsecs.c: 343:   retry = 3;
  2884  003F9A  0E03               	movlw	3
  2885  003F9C  6E2D               	movwf	t_protocol@retry,c
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;gemsecs.c: 344:   UART1_Write(0x05);
  2889  003F9E  0E05               	movlw	5
  2890  003FA0  6EE6               	movwf	postinc1,c
  2891  003FA2  EC7D  F02E         	call	_UART1_Write	;wreg free
  2892                           
  2893                           ; BSR set to: 57
  2894                           ;gemsecs.c: 345:   StartTimer(TMR_T2, 2000);
  2895  003FA6  0ED0               	movlw	208
  2896  003FA8  6EE6               	movwf	postinc1,c
  2897  003FAA  0E07               	movlw	7
  2898  003FAC  6EE6               	movwf	postinc1,c
  2899  003FAE  0E02               	movlw	2
  2900  003FB0  6EE6               	movwf	postinc1,c
  2901  003FB2  ECDA  F02E         	call	_StartTimer	;wreg free
  2902                           
  2903                           ;gemsecs.c: 346:   *t_link = LINK_STATE_ENQ;
  2904                           ;stkvar	_t_link @ sp[(-1)+-1]
  2905  003FB6  0EFE               	movlw	-2
  2906  003FB8  50E3               	movf	plusw1,w,c
  2907  003FBA  6ED9               	movwf	fsr2l,c
  2908  003FBC  6ADA               	clrf	fsr2h,c
  2909  003FBE  0E01               	movlw	1
  2910  003FC0  D0FA               	goto	L5
  2911  003FC2                     l8753:
  2912                           
  2913                           ;gemsecs.c: 353:   if (TimerDone(TMR_T2)) {
  2914  003FC2  0E02               	movlw	2
  2915  003FC4  6EE6               	movwf	postinc1,c
  2916  003FC6  EC47  F031         	call	_TimerDone	;wreg free
  2917  003FCA  503D               	movf	btemp,w,c
  2918  003FCC  B4D8               	btfsc	status,2,c
  2919  003FCE  D01C               	goto	l8765
  2920                           
  2921                           ;gemsecs.c: 354:    V.timer_error++;
  2922  003FD0  0100               	movlb	0	; () banked
  2923  003FD2  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  2924  003FD4  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;gemsecs.c: 355:    if (!retry--) {
  2928  003FD6  062D               	decf	t_protocol@retry,f,c
  2929  003FD8  282D               	incf	t_protocol@retry,w,c
  2930  003FDA  A4D8               	btfss	status,2,c
  2931  003FDC  D00C               	goto	l8763
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;gemsecs.c: 356:     V.error = LINK_ERROR_T2;
  2935  003FDE  0E0C               	movlw	12
  2936  003FE0  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  2937                           
  2938                           ;gemsecs.c: 357:     V.failed_send = 1;
  2939  003FE2  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  2940  003FE4  0B87               	andlw	-121
  2941  003FE6  0908               	iorlw	8
  2942  003FE8  6FBB               	movwf	(_V+91)& (0+255),b	;volatile
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;gemsecs.c: 358:     *t_link = LINK_STATE_NAK;
  2946                           ;stkvar	_t_link @ sp[(-1)+-1]
  2947  003FEA  0EFE               	movlw	-2
  2948  003FEC  50E3               	movf	plusw1,w,c
  2949  003FEE  6ED9               	movwf	fsr2l,c
  2950  003FF0  6ADA               	clrf	fsr2h,c
  2951  003FF2  0E05               	movlw	5
  2952  003FF4  D0E0               	goto	L5
  2953  003FF6                     l8763:
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;gemsecs.c: 360:     StartTimer(TMR_T2, 2000);
  2957  003FF6  0ED0               	movlw	208
  2958  003FF8  6EE6               	movwf	postinc1,c
  2959  003FFA  0E07               	movlw	7
  2960  003FFC  6EE6               	movwf	postinc1,c
  2961  003FFE  0E02               	movlw	2
  2962  004000  6EE6               	movwf	postinc1,c
  2963  004002  ECDA  F02E         	call	_StartTimer	;wreg free
  2964  004006  D0FA               	goto	l8845
  2965  004008                     l8765:
  2966                           
  2967                           ;gemsecs.c: 363:    if (UART1_is_rx_ready()) {
  2968  004008  ECAB  F032         	call	_UART1_is_rx_ready	;wreg free
  2969  00400C  503D               	movf	btemp,w,c
  2970  00400E  B4D8               	btfsc	status,2,c
  2971  004010  D0F5               	goto	l8845
  2972                           
  2973                           ;gemsecs.c: 364:     rxData = UART1_Read();
  2974  004012  ECBB  F02E         	call	_UART1_Read	;wreg free
  2975                           
  2976                           ;stkvar	_rxData @ sp[(-1)+0]
  2977  004016  0EFF               	movlw	-1
  2978  004018  0060  F0F7  FFE3   	movff	btemp,plusw1
  2979                           
  2980                           ; BSR set to: 57
  2981                           ;gemsecs.c: 365:     if (rxData == 0x04) {
  2982                           ;stkvar	_rxData @ sp[(-1)+0]
  2983  00401E  0EFF               	movlw	-1
  2984  004020  006F FF8C  F03D    	movff	plusw1,btemp
  2985  004026  0E04               	movlw	4
  2986  004028  183D               	xorwf	btemp,w,c
  2987  00402A  A4D8               	btfss	status,2,c
  2988  00402C  D00E               	goto	l8775
  2989                           
  2990                           ; BSR set to: 57
  2991                           ;gemsecs.c: 366:      StartTimer(TMR_T3, 5000);
  2992  00402E  0E88               	movlw	136
  2993  004030  6EE6               	movwf	postinc1,c
  2994  004032  0E13               	movlw	19
  2995  004034  6EE6               	movwf	postinc1,c
  2996  004036  0E03               	movlw	3
  2997  004038  6EE6               	movwf	postinc1,c
  2998  00403A  ECDA  F02E         	call	_StartTimer	;wreg free
  2999                           
  3000                           ;gemsecs.c: 367:      *t_link = LINK_STATE_EOT;
  3001                           ;stkvar	_t_link @ sp[(-1)+-1]
  3002  00403E  0EFE               	movlw	-2
  3003  004040  50E3               	movf	plusw1,w,c
  3004  004042  6ED9               	movwf	fsr2l,c
  3005  004044  6ADA               	clrf	fsr2h,c
  3006  004046  0E02               	movlw	2
  3007  004048  6EDF               	movwf	indf2,c
  3008  00404A                     l8775:
  3009                           
  3010                           ;gemsecs.c: 369:     if (rxData == 0x05) {
  3011                           ;stkvar	_rxData @ sp[(-1)+0]
  3012  00404A  0EFF               	movlw	-1
  3013  00404C  006F FF8C  F03D    	movff	plusw1,btemp
  3014  004052  0E05               	movlw	5
  3015  004054  183D               	xorwf	btemp,w,c
  3016  004056  A4D8               	btfss	status,2,c
  3017  004058  D0D1               	goto	l8845
  3018                           
  3019                           ;gemsecs.c: 370:      UART1_put_buffer(0x04);
  3020  00405A  0E04               	movlw	4
  3021  00405C  6EE6               	movwf	postinc1,c
  3022  00405E  ECB7  F02F         	call	_UART1_put_buffer	;wreg free
  3023  004062                     l8779:
  3024                           
  3025                           ;gemsecs.c: 371:      *t_link = LINK_STATE_DONE;
  3026                           ;stkvar	_t_link @ sp[(-1)+-1]
  3027  004062  0EFE               	movlw	-2
  3028  004064  50E3               	movf	plusw1,w,c
  3029  004066  6ED9               	movwf	fsr2l,c
  3030  004068  6ADA               	clrf	fsr2h,c
  3031  00406A  0E04               	movlw	4
  3032  00406C  D0A4               	goto	L5
  3033  00406E                     l8781:
  3034                           
  3035                           ;gemsecs.c: 377:   if (!requeue)
  3036  00406E  502C               	movf	t_protocol@requeue,w,c
  3037  004070  A4D8               	btfss	status,2,c
  3038  004072  D010               	goto	l8785
  3039                           
  3040                           ;gemsecs.c: 378:    block = secs_II_message(V.stream, V.function);
  3041  004074  0100               	movlb	0	; () banked
  3042  004076  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  3043  004078  6EE6               	movwf	postinc1,c
  3044  00407A  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  3045  00407C  6EE6               	movwf	postinc1,c
  3046  00407E  EC3C  F022         	call	_secs_II_message	;wreg free
  3047  004082  EE20  F0E7         	lfsr	2,t_protocol@block
  3048  004086  0E06               	movlw	6
  3049  004088                     u5491:
  3050  004088  52E5               	movf	postdec1,f,c
  3051  00408A  006F FF9F FFDB     	movff	indf1,plusw2
  3052  004090  06E8               	decf	wreg,f,c
  3053  004092  E2FA               	bc	u5491
  3054  004094                     l8785:
  3055                           
  3056                           ;gemsecs.c: 380:   if (V.abort == LINK_ERROR_ABORT) {
  3057  004094  0E11               	movlw	17
  3058  004096  0100               	movlb	0	; () banked
  3059  004098  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  3060  00409A  A4D8               	btfss	status,2,c
  3061  00409C  D019               	goto	l8793
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;gemsecs.c: 381:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  3065  00409E  0E01               	movlw	1
  3066  0040A0  6EE6               	movwf	postinc1,c
  3067  0040A2  0E00               	movlw	0
  3068  0040A4  6EE6               	movwf	postinc1,c
  3069  0040A6  51E9               	movf	(t_protocol@block+2)& (0+255),w,b
  3070  0040A8  6EE6               	movwf	postinc1,c
  3071  0040AA  0060  F39F  FFE6   	movff	t_protocol@block,postinc1
  3072  0040B0  0060  F3A3  FFE6   	movff	t_protocol@block+1,postinc1
  3073  0040B6  EC07  F021         	call	_secs_send	;wreg free
  3074                           
  3075                           ;gemsecs.c: 382:    V.failed_send = 2;
  3076  0040BA  0100               	movlb	0	; () banked
  3077  0040BC  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  3078  0040BE  0B87               	andlw	-121
  3079  0040C0  0910               	iorlw	16
  3080  0040C2  6FBB               	movwf	(_V+91)& (0+255),b	;volatile
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;gemsecs.c: 383:    *t_link = LINK_STATE_ERROR;
  3084                           ;stkvar	_t_link @ sp[(-1)+-1]
  3085  0040C4  0EFE               	movlw	-2
  3086  0040C6  50E3               	movf	plusw1,w,c
  3087  0040C8  6ED9               	movwf	fsr2l,c
  3088  0040CA  6ADA               	clrf	fsr2h,c
  3089  0040CC  0E06               	movlw	6
  3090  0040CE  D073               	goto	L5
  3091  0040D0                     l8793:
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;gemsecs.c: 385:    if (!requeue) {
  3095  0040D0  502C               	movf	t_protocol@requeue,w,c
  3096  0040D2  A4D8               	btfss	status,2,c
  3097  0040D4  D014               	goto	l1690
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;gemsecs.c: 386:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  3101  0040D6  0E01               	movlw	1
  3102  0040D8  6EE6               	movwf	postinc1,c
  3103  0040DA  0E00               	movlw	0
  3104  0040DC  6EE6               	movwf	postinc1,c
  3105  0040DE  51E9               	movf	(t_protocol@block+2)& (0+255),w,b
  3106  0040E0  6EE6               	movwf	postinc1,c
  3107  0040E2  0060  F39F  FFE6   	movff	t_protocol@block,postinc1
  3108  0040E8  0060  F3A3  FFE6   	movff	t_protocol@block+1,postinc1
  3109  0040EE  EC07  F021         	call	_secs_send	;wreg free
  3110                           
  3111                           ;gemsecs.c: 387:     if (V.queue)
  3112  0040F2  0100               	movlb	0	; () banked
  3113  0040F4  A9BC               	btfss	(_V+92)& (0+255),4,b	;volatile
  3114  0040F6  D013               	goto	l8803
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;gemsecs.c: 388:      requeue = 1;
  3118  0040F8  0E01               	movlw	1
  3119  0040FA  6E2C               	movwf	t_protocol@requeue,c
  3120  0040FC  D010               	goto	l8803
  3121  0040FE                     l1690:
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;gemsecs.c: 390:     requeue = 0;
  3125  0040FE  6A2C               	clrf	t_protocol@requeue,c
  3126                           
  3127                           ;gemsecs.c: 391:     V.queue = 0;
  3128  004100  99BC               	bcf	(_V+92)& (0+255),4,b	;volatile
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;gemsecs.c: 392:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  3132  004102  0E01               	movlw	1
  3133  004104  6EE6               	movwf	postinc1,c
  3134  004106  0E00               	movlw	0
  3135  004108  6EE6               	movwf	postinc1,c
  3136  00410A  51EC               	movf	(t_protocol@block+5)& (0+255),w,b
  3137  00410C  6EE6               	movwf	postinc1,c
  3138  00410E  0060  F3AB  FFE6   	movff	t_protocol@block+3,postinc1
  3139  004114  0060  F3AF  FFE6   	movff	t_protocol@block+4,postinc1
  3140  00411A  EC07  F021         	call	_secs_send	;wreg free
  3141  00411E                     l8803:
  3142                           
  3143                           ;gemsecs.c: 394:    if (V.error == LINK_ERROR_NONE) {
  3144  00411E  0E0A               	movlw	10
  3145  004120  0100               	movlb	0	; () banked
  3146  004122  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  3147  004124  A4D8               	btfss	status,2,c
  3148  004126  D006               	goto	l8807
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;gemsecs.c: 395:     *t_link = LINK_STATE_ACK;
  3152                           ;stkvar	_t_link @ sp[(-1)+-1]
  3153  004128  0EFE               	movlw	-2
  3154  00412A  50E3               	movf	plusw1,w,c
  3155  00412C  6ED9               	movwf	fsr2l,c
  3156  00412E  6ADA               	clrf	fsr2h,c
  3157  004130  0E03               	movlw	3
  3158  004132  D041               	goto	L5
  3159  004134                     l8807:
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;gemsecs.c: 397:     V.failed_send = 3;
  3163  004134  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  3164  004136  0B87               	andlw	-121
  3165  004138  0918               	iorlw	24
  3166  00413A  D7C3               	goto	L6
  3167  00413C                     l8811:
  3168                           
  3169                           ;gemsecs.c: 410:   if (TimerDone(TMR_T3)) {
  3170  00413C  0E03               	movlw	3
  3171  00413E  6EE6               	movwf	postinc1,c
  3172  004140  EC47  F031         	call	_TimerDone	;wreg free
  3173  004144  503D               	movf	btemp,w,c
  3174  004146  B4D8               	btfsc	status,2,c
  3175  004148  D009               	goto	l8821
  3176                           
  3177                           ;gemsecs.c: 411:    V.timer_error++;
  3178  00414A  0100               	movlb	0	; () banked
  3179  00414C  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  3180  00414E  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;gemsecs.c: 412:    V.error = LINK_ERROR_T3;
  3184  004150  0E0D               	movlw	13
  3185  004152  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;gemsecs.c: 413:    V.failed_send = 4;
  3189  004154  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  3190  004156  0B87               	andlw	-121
  3191  004158  0920               	iorlw	32
  3192  00415A  D746               	goto	L7
  3193  00415C                     l8821:
  3194                           
  3195                           ;gemsecs.c: 416:    if (UART1_is_rx_ready()) {
  3196  00415C  ECAB  F032         	call	_UART1_is_rx_ready	;wreg free
  3197  004160  503D               	movf	btemp,w,c
  3198  004162  B4D8               	btfsc	status,2,c
  3199  004164  D04B               	goto	l8845
  3200                           
  3201                           ;gemsecs.c: 417:     rxData = UART1_Read();
  3202  004166  ECBB  F02E         	call	_UART1_Read	;wreg free
  3203                           
  3204                           ;stkvar	_rxData @ sp[(-1)+0]
  3205  00416A  0EFF               	movlw	-1
  3206  00416C  0060  F0F7  FFE3   	movff	btemp,plusw1
  3207                           
  3208                           ; BSR set to: 57
  3209                           ;gemsecs.c: 418:     if (rxData == 0x06) {
  3210                           ;stkvar	_rxData @ sp[(-1)+0]
  3211  004172  0EFF               	movlw	-1
  3212  004174  006F FF8C  F03D    	movff	plusw1,btemp
  3213  00417A  0E06               	movlw	6
  3214  00417C  183D               	xorwf	btemp,w,c
  3215  00417E  A4D8               	btfss	status,2,c
  3216  004180  D03D               	goto	l8845
  3217                           
  3218                           ; BSR set to: 57
  3219                           ;gemsecs.c: 419:      V.failed_send = 0;
  3220  004182  0E87               	movlw	-121
  3221  004184  0100               	movlb	0	; () banked
  3222  004186  17BB               	andwf	(_V+91)& (0+255),f,b	;volatile
  3223  004188  D76C               	goto	l8779
  3224  00418A                     l8831:
  3225                           
  3226                           ;gemsecs.c: 426:   *t_link = LINK_STATE_ERROR;
  3227                           ;stkvar	_t_link @ sp[(-1)+-1]
  3228  00418A  0EFE               	movlw	-2
  3229  00418C  50E3               	movf	plusw1,w,c
  3230  00418E  6ED9               	movwf	fsr2l,c
  3231  004190  6ADA               	clrf	fsr2h,c
  3232  004192  0E06               	movlw	6
  3233  004194  6EDF               	movwf	indf2,c
  3234                           
  3235                           ;gemsecs.c: 427:   while ((uart1RxCount)) {
  3236  004196  D002               	goto	l8835
  3237  004198                     l8833:
  3238                           
  3239                           ;gemsecs.c: 428:    UART1_Read();
  3240  004198  ECBB  F02E         	call	_UART1_Read	;wreg free
  3241  00419C                     l8835:
  3242                           
  3243                           ;gemsecs.c: 427:   while ((uart1RxCount)) {
  3244  00419C  5037               	movf	_uart1RxCount,w,c	;volatile
  3245  00419E  B4D8               	btfsc	status,2,c
  3246  0041A0  D02D               	goto	l8845
  3247  0041A2  D7FA               	goto	l8833
  3248  0041A4                     l8837:
  3249                           
  3250                           ;gemsecs.c: 434:   V.failed_send = 0;
  3251  0041A4  0E87               	movlw	-121
  3252  0041A6  0100               	movlb	0	; () banked
  3253  0041A8  17BB               	andwf	(_V+91)& (0+255),f,b	;volatile
  3254                           
  3255                           ;gemsecs.c: 435:   break;
  3256  0041AA  D028               	goto	l8845
  3257  0041AC                     l8839:
  3258                           
  3259                           ;gemsecs.c: 437:   *t_link = LINK_STATE_IDLE;
  3260                           ;stkvar	_t_link @ sp[(-1)+-1]
  3261  0041AC  0EFE               	movlw	-2
  3262  0041AE  50E3               	movf	plusw1,w,c
  3263  0041B0  6ED9               	movwf	fsr2l,c
  3264  0041B2  6ADA               	clrf	fsr2h,c
  3265  0041B4  0E00               	movlw	0
  3266  0041B6                     L5:
  3267  0041B6  6EDF               	movwf	indf2,c
  3268                           
  3269                           ;gemsecs.c: 439:   break;
  3270  0041B8  D021               	goto	l8845
  3271  0041BA                     l8843:
  3272                           
  3273                           ;stkvar	_t_link @ sp[(-1)+-1]
  3274  0041BA  0EFE               	movlw	-2
  3275  0041BC  50E3               	movf	plusw1,w,c
  3276  0041BE  6ED9               	movwf	fsr2l,c
  3277  0041C0  6ADA               	clrf	fsr2h,c
  3278  0041C2  50DF               	movf	indf2,w,c
  3279  0041C4  6E47               	movwf	btemp+10,c
  3280  0041C6  6A48               	clrf	btemp+11,c
  3281                           
  3282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3283                           ; Switch size 1, requested type "simple"
  3284                           ; Number of cases is 1, Range of values is 0 to 0
  3285                           ; switch strategies available:
  3286                           ; Name         Instructions Cycles
  3287                           ; simple_byte            4     3 (average)
  3288                           ;	Chosen strategy is simple_byte
  3289  0041C8  5048               	movf	btemp+11,w,c
  3290  0041CA  0A00               	xorlw	0	; case 0
  3291  0041CC  A4D8               	btfss	status,2,c
  3292  0041CE  D7EE               	goto	l8839
  3293                           
  3294                           ; Switch size 1, requested type "simple"
  3295                           ; Number of cases is 7, Range of values is 0 to 6
  3296                           ; switch strategies available:
  3297                           ; Name         Instructions Cycles
  3298                           ; simple_byte           22    12 (average)
  3299                           ;	Chosen strategy is simple_byte
  3300  0041D0  5047               	movf	btemp+10,w,c
  3301  0041D2  0A00               	xorlw	0	; case 0
  3302  0041D4  B4D8               	btfsc	status,2,c
  3303  0041D6  D6DE               	goto	l8745
  3304  0041D8  0A01               	xorlw	1	; case 1
  3305  0041DA  B4D8               	btfsc	status,2,c
  3306  0041DC  D6F2               	goto	l8753
  3307  0041DE  0A03               	xorlw	3	; case 2
  3308  0041E0  B4D8               	btfsc	status,2,c
  3309  0041E2  D745               	goto	l8781
  3310  0041E4  0A01               	xorlw	1	; case 3
  3311  0041E6  B4D8               	btfsc	status,2,c
  3312  0041E8  D7A9               	goto	l8811
  3313  0041EA  0A07               	xorlw	7	; case 4
  3314  0041EC  B4D8               	btfsc	status,2,c
  3315  0041EE  D7DA               	goto	l8837
  3316  0041F0  0A01               	xorlw	1	; case 5
  3317  0041F2  B4D8               	btfsc	status,2,c
  3318  0041F4  D7CA               	goto	l8831
  3319  0041F6  0A03               	xorlw	3	; case 6
  3320  0041F8  A4D8               	btfss	status,2,c
  3321  0041FA  D7D8               	goto	l8839
  3322  0041FC                     l8845:
  3323                           
  3324                           ;gemsecs.c: 442:  return *t_link;
  3325                           ;stkvar	_t_link @ sp[(-1)+-1]
  3326  0041FC  0EFE               	movlw	-2
  3327  0041FE  50E3               	movf	plusw1,w,c
  3328  004200  6ED9               	movwf	fsr2l,c
  3329  004202  6ADA               	clrf	fsr2h,c
  3330  004204  50DF               	movf	indf2,w,c
  3331  004206  6E3D               	movwf	btemp,c
  3332                           
  3333                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3334  004208  52E5               	movf	postdec1,f,c
  3335  00420A  52E5               	movf	postdec1,f,c
  3336  00420C  0012               	return		;funcret
  3337  00420E                     __end_of_t_protocol:
  3338                           	opt callstack 0
  3339                           
  3340 ;; *************** function _secs_send *****************
  3341 ;; Defined at:
  3342 ;;		line 446 in file "gemsecs.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  byte_block      2  [STACK] PTR unsigned char 
  3345 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  3346 ;;		 -> H13(16), H12(30), H10(91), 
  3347 ;;  length          1  [STACK] unsigned char 
  3348 ;;  fake            1  [STACK] _Bool 
  3349 ;;  s_uart          1  [STACK] unsigned char 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  k               2  [STACK] PTR unsigned char 
  3352 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  3353 ;;		 -> H13(16), H12(30), H10(91), 
  3354 ;;  checksum        2  [STACK] unsigned short 
  3355 ;;  i               1  [STACK] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1  [STACK] _Bool 
  3358 ;; Registers used:
  3359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  3360 ;; Tracked objects:
  3361 ;;		On entry : 3F/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3369 ;;Total ram usage:        0 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    4
  3372 ;; This function calls:
  3373 ;;		_UART1_Write
  3374 ;;		_UART1_is_tx_ready
  3375 ;;		_UART1_put_buffer
  3376 ;;		_UART2_Write
  3377 ;;		_UART2_is_tx_ready
  3378 ;;		_UART2_put_buffer
  3379 ;;		_block_checksum
  3380 ;; This function is called by:
  3381 ;;		_t_protocol
  3382 ;; This function uses a reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text2
  3386  00420E                     __ptext2:
  3387                           	opt callstack 0
  3388  00420E                     _secs_send:
  3389                           	opt callstack 0
  3390                           
  3391                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3392  00420E  0E05               	movlw	5
  3393  004210  26E1               	addwf	fsr1l,f,c
  3394  004212  0E00               	movlw	0
  3395  004214  22E2               	addwfc	fsr1h,f,c
  3396                           
  3397                           ;gemsecs.c: 446: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake, uint8_
      +                          t s_uart);gemsecs.c: 447: {;gemsecs.c: 448:  uint8_t i, *k;;gemsecs.c: 449:  uint16_t ch
      +                          ecksum;;gemsecs.c: 451:  k = (uint8_t *) byte_block;
  3398                           ;stkvar	_byte_block @ sp[(-5)+-2]
  3399                           
  3400                           ;incstack = 0
  3401  004216  0EF9               	movlw	-7
  3402  004218  006F FF8C  F047    	movff	plusw1,btemp+10
  3403  00421E  0EFA               	movlw	-6
  3404  004220  006F FF8C  F048    	movff	plusw1,btemp+11
  3405                           
  3406                           ;stkvar	_k @ sp[(-5)+0]
  3407  004226  0EFC               	movlw	-4
  3408  004228  0060  F123  FFE3   	movff	btemp+11,plusw1
  3409  00422E  0EFB               	movlw	-5
  3410  004230  0060  F11F  FFE3   	movff	btemp+10,plusw1
  3411                           
  3412                           ;gemsecs.c: 453:  ++V.ticks;
  3413  004236  0E01               	movlw	1
  3414  004238  0100               	movlb	0	; () banked
  3415  00423A  27A6               	addwf	(_V+70)& (0+255),f,b	;volatile
  3416  00423C  0E00               	movlw	0
  3417  00423E  23A7               	addwfc	(_V+71)& (0+255),f,b	;volatile
  3418  004240  23A8               	addwfc	(_V+72)& (0+255),f,b	;volatile
  3419  004242  23A9               	addwfc	(_V+73)& (0+255),f,b	;volatile
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;gemsecs.c: 454:  V.error = LINK_ERROR_NONE;
  3423  004244  0E0A               	movlw	10
  3424  004246  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;gemsecs.c: 455:  if ((length - 3) != k[length - 1]) {
  3428                           ;stkvar	_length @ sp[(-5)+-3]
  3429  004248  0EF8               	movlw	-8
  3430  00424A  50E3               	movf	plusw1,w,c
  3431  00424C  6E47               	movwf	btemp+10,c
  3432  00424E  6A48               	clrf	btemp+11,c
  3433                           
  3434                           ;stkvar	_k @ sp[(-5)+0]
  3435  004250  0EFB               	movlw	-5
  3436  004252  50E3               	movf	plusw1,w,c
  3437  004254  2647               	addwf	btemp+10,f,c
  3438  004256  0EFC               	movlw	-4
  3439  004258  50E3               	movf	plusw1,w,c
  3440  00425A  2248               	addwfc	btemp+11,f,c
  3441  00425C  0EFF               	movlw	255
  3442  00425E  2447               	addwf	btemp+10,w,c
  3443  004260  6ED9               	movwf	fsr2l,c
  3444  004262  0EFF               	movlw	255
  3445  004264  2048               	addwfc	btemp+11,w,c
  3446  004266  6EDA               	movwf	fsr2h,c
  3447  004268  50DF               	movf	indf2,w,c
  3448  00426A  6E47               	movwf	btemp+10,c
  3449  00426C  6A48               	clrf	btemp+11,c
  3450  00426E  0EFD               	movlw	253
  3451  004270  6E45               	movwf	btemp+8,c
  3452  004272  0EFF               	movlw	255
  3453  004274  6E46               	movwf	btemp+9,c
  3454                           
  3455                           ;stkvar	_length @ sp[(-5)+-3]
  3456  004276  0EF8               	movlw	-8
  3457  004278  50E3               	movf	plusw1,w,c
  3458  00427A  6E43               	movwf	btemp+6,c
  3459  00427C  6A44               	clrf	btemp+7,c
  3460  00427E  5045               	movf	btemp+8,w,c
  3461  004280  2643               	addwf	btemp+6,f,c
  3462  004282  5046               	movf	btemp+9,w,c
  3463  004284  2244               	addwfc	btemp+7,f,c
  3464  004286  5047               	movf	btemp+10,w,c
  3465  004288  1843               	xorwf	btemp+6,w,c
  3466  00428A  E104               	bnz	u5160
  3467  00428C  5048               	movf	btemp+11,w,c
  3468  00428E  1844               	xorwf	btemp+7,w,c
  3469  004290  B4D8               	btfsc	status,2,c
  3470  004292  D003               	goto	l8463
  3471  004294                     u5160:
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;gemsecs.c: 456:   V.error = LINK_ERROR_SEND;
  3475  004294  0E12               	movlw	18
  3476  004296  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  3477  004298  D0EA               	goto	l1711
  3478  00429A                     l8463:
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;gemsecs.c: 465:  checksum = block_checksum(&k[2], length - 3);
  3482  00429A  0EFD               	movlw	253
  3483  00429C  6E47               	movwf	btemp+10,c
  3484  00429E  0EFF               	movlw	255
  3485  0042A0  6E48               	movwf	btemp+11,c
  3486                           
  3487                           ;stkvar	_length @ sp[(-5)+-3]
  3488  0042A2  0EF8               	movlw	-8
  3489  0042A4  50E3               	movf	plusw1,w,c
  3490  0042A6  6E45               	movwf	btemp+8,c
  3491  0042A8  6A46               	clrf	btemp+9,c
  3492  0042AA  5047               	movf	btemp+10,w,c
  3493  0042AC  2645               	addwf	btemp+8,f,c
  3494  0042AE  5048               	movf	btemp+11,w,c
  3495  0042B0  2246               	addwfc	btemp+9,f,c
  3496  0042B2  0060  F117  FFE6   	movff	btemp+8,postinc1
  3497  0042B8  0060  F11B  FFE6   	movff	btemp+9,postinc1
  3498                           
  3499                           ;stkvar	_k @ sp[(-7)+0]
  3500  0042BE  0EF9               	movlw	-7
  3501  0042C0  50E3               	movf	plusw1,w,c
  3502  0042C2  0F02               	addlw	2
  3503  0042C4  6E47               	movwf	btemp+10,c
  3504  0042C6  0EFA               	movlw	-6
  3505  0042C8  006F FF8C  F048    	movff	plusw1,btemp+11
  3506  0042CE  0E00               	movlw	0
  3507  0042D0  2248               	addwfc	btemp+11,f,c
  3508  0042D2  0060  F11F  FFE6   	movff	btemp+10,postinc1
  3509  0042D8  0060  F123  FFE6   	movff	btemp+11,postinc1
  3510  0042DE  ECC7  F027         	call	_block_checksum	;wreg free
  3511                           
  3512                           ;stkvar	_checksum @ sp[(-5)+2]
  3513  0042E2  0EFD               	movlw	-3
  3514  0042E4  0060  F0F7  FFE3   	movff	btemp,plusw1
  3515  0042EA  0EFE               	movlw	-2
  3516  0042EC  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  3517                           
  3518                           ;gemsecs.c: 466:  k[0] = checksum & 0xff;
  3519                           ;stkvar	_checksum @ sp[(-5)+2]
  3520                           ;stkvar	_k @ sp[(-5)+0]
  3521  0042F2  0EFB               	movlw	-5
  3522  0042F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  3523  0042FA  0EFC               	movlw	-4
  3524  0042FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  3525  004302  0EFD               	movlw	-3
  3526  004304  006F FF8F FFDF     	movff	plusw1,indf2
  3527                           
  3528                           ;gemsecs.c: 467:  k[1] = (checksum >> 8)&0xff;
  3529                           ;stkvar	_checksum @ sp[(-5)+2]
  3530  00430A  0EFE               	movlw	254
  3531  00430C  24E1               	addwf	fsr1l,w,c
  3532  00430E  6ED9               	movwf	fsr2l,c
  3533  004310  0EFF               	movlw	255
  3534  004312  20E2               	addwfc	fsr1h,w,c
  3535  004314  6EDA               	movwf	fsr2h,c
  3536                           
  3537                           ;stkvar	_k @ sp[(-5)+0]
  3538  004316  0EFB               	movlw	-5
  3539  004318  006F FF8C  F047    	movff	plusw1,btemp+10
  3540  00431E  0EFC               	movlw	-4
  3541  004320  006F FF8C  F048    	movff	plusw1,btemp+11
  3542  004326  0E01               	movlw	1
  3543  004328  2447               	addwf	btemp+10,w,c
  3544  00432A  6EE9               	movwf	fsr0l,c
  3545  00432C  0E00               	movlw	0
  3546  00432E  2048               	addwfc	btemp+11,w,c
  3547  004330  6EEA               	movwf	fsr0h,c
  3548  004332  006F FF7F FFEF     	movff	indf2,indf0
  3549                           
  3550                           ;gemsecs.c: 468:  V.t_checksum = checksum;
  3551                           ;stkvar	_checksum @ sp[(-5)+2]
  3552  004338  0EFD               	movlw	-3
  3553  00433A  006F FF8C  F0B5    	movff	plusw1,_V+85	;volatile
  3554  004340  0EFE               	movlw	-2
  3555  004342  006F FF8C  F0B6    	movff	plusw1,_V+86	;volatile
  3556                           
  3557                           ;gemsecs.c: 470:  switch (s_uart) {
  3558  004348  D082               	goto	l8509
  3559  00434A                     l8471:
  3560  00434A  EC9F  F032         	call	_UART2_is_tx_ready	;wreg free
  3561  00434E  0E3F               	movlw	63
  3562  004350  643D               	cpfsgt	btemp,c
  3563  004352  D7FB               	goto	l8471
  3564                           
  3565                           ;gemsecs.c: 473:   for (i = length; i > 0; i--) {
  3566                           ;stkvar	_length @ sp[(-5)+-3]
  3567                           ;stkvar	_i @ sp[(-5)+4]
  3568  004354  0EF8               	movlw	-8
  3569  004356  006F FF8C  F03D    	movff	plusw1,btemp
  3570  00435C  0EFF               	movlw	-1
  3571  00435E  0060  F0F7  FFE3   	movff	btemp,plusw1
  3572  004364                     l8475:
  3573                           
  3574                           ;stkvar	_i @ sp[(-5)+4]
  3575  004364  0EFF               	movlw	-1
  3576  004366  50E3               	movf	plusw1,w,c
  3577  004368  B4D8               	btfsc	status,2,c
  3578  00436A  D081               	goto	l1711
  3579                           
  3580                           ;gemsecs.c: 474:    if (fake) {
  3581                           ;stkvar	_fake @ sp[(-5)+-4]
  3582  00436C  0EF7               	movlw	-9
  3583  00436E  50E3               	movf	plusw1,w,c
  3584  004370  B4D8               	btfsc	status,2,c
  3585  004372  D015               	goto	l8483
  3586                           
  3587                           ;gemsecs.c: 475:     UART2_put_buffer(k[i - 1]);
  3588                           ;stkvar	_i @ sp[(-5)+4]
  3589  004374  0EFF               	movlw	-1
  3590  004376  50E3               	movf	plusw1,w,c
  3591  004378  6E47               	movwf	btemp+10,c
  3592  00437A  6A48               	clrf	btemp+11,c
  3593                           
  3594                           ;stkvar	_k @ sp[(-5)+0]
  3595  00437C  0EFB               	movlw	-5
  3596  00437E  50E3               	movf	plusw1,w,c
  3597  004380  2647               	addwf	btemp+10,f,c
  3598  004382  0EFC               	movlw	-4
  3599  004384  50E3               	movf	plusw1,w,c
  3600  004386  2248               	addwfc	btemp+11,f,c
  3601  004388  0EFF               	movlw	255
  3602  00438A  2447               	addwf	btemp+10,w,c
  3603  00438C  6ED9               	movwf	fsr2l,c
  3604  00438E  0EFF               	movlw	255
  3605  004390  2048               	addwfc	btemp+11,w,c
  3606  004392  6EDA               	movwf	fsr2h,c
  3607  004394  50DF               	movf	indf2,w,c
  3608  004396  6EE6               	movwf	postinc1,c
  3609  004398  ECA2  F02F         	call	_UART2_put_buffer	;wreg free
  3610                           
  3611                           ;gemsecs.c: 476:    } else {
  3612  00439C  D014               	goto	l8485
  3613  00439E                     l8483:
  3614                           
  3615                           ;gemsecs.c: 478:     UART2_Write(k[i - 1]);
  3616                           ;stkvar	_i @ sp[(-5)+4]
  3617  00439E  0EFF               	movlw	-1
  3618  0043A0  50E3               	movf	plusw1,w,c
  3619  0043A2  6E47               	movwf	btemp+10,c
  3620  0043A4  6A48               	clrf	btemp+11,c
  3621                           
  3622                           ;stkvar	_k @ sp[(-5)+0]
  3623  0043A6  0EFB               	movlw	-5
  3624  0043A8  50E3               	movf	plusw1,w,c
  3625  0043AA  2647               	addwf	btemp+10,f,c
  3626  0043AC  0EFC               	movlw	-4
  3627  0043AE  50E3               	movf	plusw1,w,c
  3628  0043B0  2248               	addwfc	btemp+11,f,c
  3629  0043B2  0EFF               	movlw	255
  3630  0043B4  2447               	addwf	btemp+10,w,c
  3631  0043B6  6ED9               	movwf	fsr2l,c
  3632  0043B8  0EFF               	movlw	255
  3633  0043BA  2048               	addwfc	btemp+11,w,c
  3634  0043BC  6EDA               	movwf	fsr2h,c
  3635  0043BE  50DF               	movf	indf2,w,c
  3636  0043C0  6EE6               	movwf	postinc1,c
  3637  0043C2  EC5E  F02E         	call	_UART2_Write	;wreg free
  3638  0043C6                     l8485:
  3639                           
  3640                           ; BSR set to: 57
  3641                           ;gemsecs.c: 480:   }
  3642                           ;stkvar	_i @ sp[(-5)+4]
  3643  0043C6  0EFF               	movlw	-1
  3644  0043C8  06E3               	decf	plusw1,f,c
  3645  0043CA  D7CC               	goto	l8475
  3646  0043CC                     l8489:
  3647  0043CC  ECA3  F032         	call	_UART1_is_tx_ready	;wreg free
  3648  0043D0  0E3F               	movlw	63
  3649  0043D2  643D               	cpfsgt	btemp,c
  3650  0043D4  D7FB               	goto	l8489
  3651                           
  3652                           ;gemsecs.c: 485:   for (i = length; i > 0; i--) {
  3653                           ;stkvar	_length @ sp[(-5)+-3]
  3654                           ;stkvar	_i @ sp[(-5)+4]
  3655  0043D6  0EF8               	movlw	-8
  3656  0043D8  006F FF8C  F03D    	movff	plusw1,btemp
  3657  0043DE  0EFF               	movlw	-1
  3658  0043E0  0060  F0F7  FFE3   	movff	btemp,plusw1
  3659  0043E6                     l8493:
  3660                           
  3661                           ;stkvar	_i @ sp[(-5)+4]
  3662  0043E6  0EFF               	movlw	-1
  3663  0043E8  50E3               	movf	plusw1,w,c
  3664  0043EA  B4D8               	btfsc	status,2,c
  3665  0043EC  D040               	goto	l1711
  3666                           
  3667                           ;gemsecs.c: 486:    if (fake) {
  3668                           ;stkvar	_fake @ sp[(-5)+-4]
  3669  0043EE  0EF7               	movlw	-9
  3670  0043F0  50E3               	movf	plusw1,w,c
  3671  0043F2  B4D8               	btfsc	status,2,c
  3672  0043F4  D015               	goto	l8501
  3673                           
  3674                           ;gemsecs.c: 487:     UART1_put_buffer(k[i - 1]);
  3675                           ;stkvar	_i @ sp[(-5)+4]
  3676  0043F6  0EFF               	movlw	-1
  3677  0043F8  50E3               	movf	plusw1,w,c
  3678  0043FA  6E47               	movwf	btemp+10,c
  3679  0043FC  6A48               	clrf	btemp+11,c
  3680                           
  3681                           ;stkvar	_k @ sp[(-5)+0]
  3682  0043FE  0EFB               	movlw	-5
  3683  004400  50E3               	movf	plusw1,w,c
  3684  004402  2647               	addwf	btemp+10,f,c
  3685  004404  0EFC               	movlw	-4
  3686  004406  50E3               	movf	plusw1,w,c
  3687  004408  2248               	addwfc	btemp+11,f,c
  3688  00440A  0EFF               	movlw	255
  3689  00440C  2447               	addwf	btemp+10,w,c
  3690  00440E  6ED9               	movwf	fsr2l,c
  3691  004410  0EFF               	movlw	255
  3692  004412  2048               	addwfc	btemp+11,w,c
  3693  004414  6EDA               	movwf	fsr2h,c
  3694  004416  50DF               	movf	indf2,w,c
  3695  004418  6EE6               	movwf	postinc1,c
  3696  00441A  ECB7  F02F         	call	_UART1_put_buffer	;wreg free
  3697                           
  3698                           ;gemsecs.c: 488:    } else {
  3699  00441E  D014               	goto	l8503
  3700  004420                     l8501:
  3701                           
  3702                           ;gemsecs.c: 490:     UART1_Write(k[i - 1]);
  3703                           ;stkvar	_i @ sp[(-5)+4]
  3704  004420  0EFF               	movlw	-1
  3705  004422  50E3               	movf	plusw1,w,c
  3706  004424  6E47               	movwf	btemp+10,c
  3707  004426  6A48               	clrf	btemp+11,c
  3708                           
  3709                           ;stkvar	_k @ sp[(-5)+0]
  3710  004428  0EFB               	movlw	-5
  3711  00442A  50E3               	movf	plusw1,w,c
  3712  00442C  2647               	addwf	btemp+10,f,c
  3713  00442E  0EFC               	movlw	-4
  3714  004430  50E3               	movf	plusw1,w,c
  3715  004432  2248               	addwfc	btemp+11,f,c
  3716  004434  0EFF               	movlw	255
  3717  004436  2447               	addwf	btemp+10,w,c
  3718  004438  6ED9               	movwf	fsr2l,c
  3719  00443A  0EFF               	movlw	255
  3720  00443C  2048               	addwfc	btemp+11,w,c
  3721  00443E  6EDA               	movwf	fsr2h,c
  3722  004440  50DF               	movf	indf2,w,c
  3723  004442  6EE6               	movwf	postinc1,c
  3724  004444  EC7D  F02E         	call	_UART1_Write	;wreg free
  3725  004448                     l8503:
  3726                           
  3727                           ; BSR set to: 57
  3728                           ;gemsecs.c: 492:   }
  3729                           ;stkvar	_i @ sp[(-5)+4]
  3730  004448  0EFF               	movlw	-1
  3731  00444A  06E3               	decf	plusw1,f,c
  3732  00444C  D7CC               	goto	l8493
  3733  00444E                     l8509:
  3734                           
  3735                           ;stkvar	_s_uart @ sp[(-5)+-5]
  3736  00444E  0EF6               	movlw	-10
  3737  004450  50E3               	movf	plusw1,w,c
  3738  004452  6E47               	movwf	btemp+10,c
  3739  004454  6A48               	clrf	btemp+11,c
  3740                           
  3741                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3742                           ; Switch size 1, requested type "simple"
  3743                           ; Number of cases is 1, Range of values is 0 to 0
  3744                           ; switch strategies available:
  3745                           ; Name         Instructions Cycles
  3746                           ; simple_byte            4     3 (average)
  3747                           ;	Chosen strategy is simple_byte
  3748  004456  5048               	movf	btemp+11,w,c
  3749  004458  0A00               	xorlw	0	; case 0
  3750  00445A  A4D8               	btfss	status,2,c
  3751  00445C  D7B7               	goto	l8489
  3752                           
  3753                           ; Switch size 1, requested type "simple"
  3754                           ; Number of cases is 2, Range of values is 1 to 2
  3755                           ; switch strategies available:
  3756                           ; Name         Instructions Cycles
  3757                           ; simple_byte            7     4 (average)
  3758                           ;	Chosen strategy is simple_byte
  3759  00445E  5047               	movf	btemp+10,w,c
  3760  004460  0A01               	xorlw	1	; case 1
  3761  004462  B4D8               	btfsc	status,2,c
  3762  004464  D7B3               	goto	l8489
  3763  004466  0A03               	xorlw	3	; case 2
  3764  004468  B4D8               	btfsc	status,2,c
  3765  00446A  D76F               	goto	l8471
  3766  00446C  D7AF               	goto	l8489
  3767  00446E                     l1711:
  3768                           
  3769                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  3770  00446E  0EF6               	movlw	246
  3771  004470  26E1               	addwf	fsr1l,f,c
  3772  004472  0EFF               	movlw	255
  3773  004474  22E2               	addwfc	fsr1h,f,c
  3774  004476  0012               	return		;funcret
  3775  004478                     __end_of_secs_send:
  3776                           	opt callstack 0
  3777                           
  3778 ;; *************** function _block_checksum *****************
  3779 ;; Defined at:
  3780 ;;		line 19 in file "gemsecs.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  byte_block      2  [STACK] PTR unsigned char 
  3783 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  3784 ;;		 -> H13(16), H12(30), H10(91), 
  3785 ;;  byte_count      2  [STACK] unsigned short 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  i               2  [STACK] unsigned short 
  3788 ;;  sum             2  [STACK] unsigned short 
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  2  [STACK] unsigned short 
  3791 ;; Registers used:
  3792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  3793 ;; Tracked objects:
  3794 ;;		On entry : 3F/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3802 ;;Total ram usage:        0 bytes
  3803 ;; Hardware stack levels used:    1
  3804 ;; Hardware stack levels required when called:    3
  3805 ;; This function calls:
  3806 ;;		Nothing
  3807 ;; This function is called by:
  3808 ;;		_secs_send
  3809 ;; This function uses a reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text3
  3813  004F8E                     __ptext3:
  3814                           	opt callstack 0
  3815  004F8E                     _block_checksum:
  3816                           	opt callstack 0
  3817                           
  3818                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3819  004F8E  52E6               	movf	postinc1,f,c
  3820  004F90  52E6               	movf	postinc1,f,c
  3821  004F92  52E6               	movf	postinc1,f,c
  3822  004F94  52E6               	movf	postinc1,f,c
  3823                           
  3824                           ;gemsecs.c: 19: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 20: {;gemsecs.c: 21:  uint16_t sum = 0, i;
  3825                           ;stkvar	_sum @ sp[(-4)+2]
  3826                           
  3827                           ;incstack = 0
  3828  004F96  0EFE               	movlw	-2
  3829  004F98  6AE3               	clrf	plusw1,c
  3830  004F9A  0EFF               	movlw	-1
  3831  004F9C  6AE3               	clrf	plusw1,c
  3832                           
  3833                           ;gemsecs.c: 23:  for (i = 0; i < byte_count; i++) {
  3834                           ;stkvar	_i @ sp[(-4)+0]
  3835  004F9E  0EFC               	movlw	-4
  3836  004FA0  6AE3               	clrf	plusw1,c
  3837  004FA2  0EFD               	movlw	-3
  3838  004FA4  6AE3               	clrf	plusw1,c
  3839  004FA6  D039               	goto	l8405
  3840  004FA8                     l8401:
  3841                           
  3842                           ;gemsecs.c: 24:   sum += byte_block[i];
  3843                           ;stkvar	_i @ sp[(-4)+0]
  3844  004FA8  0EFC               	movlw	-4
  3845  004FAA  006F FF8C  F047    	movff	plusw1,btemp+10
  3846  004FB0  0EFD               	movlw	-3
  3847  004FB2  006F FF8C  F048    	movff	plusw1,btemp+11
  3848                           
  3849                           ;stkvar	_byte_block @ sp[(-4)+-2]
  3850  004FB8  0EFA               	movlw	-6
  3851  004FBA  006F FF8C  F045    	movff	plusw1,btemp+8
  3852  004FC0  0EFB               	movlw	-5
  3853  004FC2  006F FF8C  F046    	movff	plusw1,btemp+9
  3854  004FC8  5047               	movf	btemp+10,w,c
  3855  004FCA  2445               	addwf	btemp+8,w,c
  3856  004FCC  6ED9               	movwf	fsr2l,c
  3857  004FCE  5048               	movf	btemp+11,w,c
  3858  004FD0  2046               	addwfc	btemp+9,w,c
  3859  004FD2  6EDA               	movwf	fsr2h,c
  3860  004FD4  50DF               	movf	indf2,w,c
  3861  004FD6  6E48               	movwf	btemp+11,c
  3862                           
  3863                           ;stkvar	_sum @ sp[(-4)+2]
  3864  004FD8  0EFE               	movlw	-2
  3865  004FDA  50E3               	movf	plusw1,w,c
  3866  004FDC  2448               	addwf	btemp+11,w,c
  3867  004FDE  6E3D               	movwf	btemp,c
  3868  004FE0  0EFE               	movlw	-2
  3869  004FE2  0060  F0F7  FFE3   	movff	btemp,plusw1
  3870  004FE8  6A3D               	clrf	btemp,c
  3871  004FEA  0EFF               	movlw	-1
  3872  004FEC  50E3               	movf	plusw1,w,c
  3873  004FEE  223D               	addwfc	btemp,f,c
  3874  004FF0  0EFF               	movlw	-1
  3875  004FF2  0060  F0F7  FFE3   	movff	btemp,plusw1
  3876                           
  3877                           ;gemsecs.c: 25:  }
  3878                           ;stkvar	_i @ sp[(-4)+0]
  3879  004FF8  0EFC               	movlw	-4
  3880  004FFA  50E3               	movf	plusw1,w,c
  3881  004FFC  0F01               	addlw	1
  3882  004FFE  6E3D               	movwf	btemp,c
  3883  005000  0EFC               	movlw	-4
  3884  005002  0060  F0F7  FFE3   	movff	btemp,plusw1
  3885  005008  6A3D               	clrf	btemp,c
  3886  00500A  0EFD               	movlw	-3
  3887  00500C  50E3               	movf	plusw1,w,c
  3888  00500E  203D               	addwfc	btemp,w,c
  3889  005010  6E3D               	movwf	btemp,c
  3890  005012  0EFD               	movlw	-3
  3891  005014  0060  F0F7  FFE3   	movff	btemp,plusw1
  3892  00501A                     l8405:
  3893                           
  3894                           ;stkvar	_byte_count @ sp[(-4)+-4]
  3895  00501A  0EF8               	movlw	-8
  3896  00501C  006F FF8C  F047    	movff	plusw1,btemp+10
  3897  005022  0EF9               	movlw	-7
  3898  005024  006F FF8C  F048    	movff	plusw1,btemp+11
  3899                           
  3900                           ;stkvar	_i @ sp[(-4)+0]
  3901  00502A  0EFC               	movlw	-4
  3902  00502C  006F FF8C  F045    	movff	plusw1,btemp+8
  3903  005032  0EFD               	movlw	-3
  3904  005034  006F FF8C  F046    	movff	plusw1,btemp+9
  3905  00503A  5047               	movf	btemp+10,w,c
  3906  00503C  5C45               	subwf	btemp+8,w,c
  3907  00503E  5048               	movf	btemp+11,w,c
  3908  005040  5846               	subwfb	btemp+9,w,c
  3909  005042  A0D8               	btfss	status,0,c
  3910  005044  D7B1               	goto	l8401
  3911                           
  3912                           ;gemsecs.c: 30:  return sum;
  3913                           ;stkvar	_sum @ sp[(-4)+2]
  3914  005046  0EFE               	movlw	-2
  3915  005048  006F FF8C  F03D    	movff	plusw1,btemp
  3916  00504E  0EFF               	movlw	-1
  3917  005050  006F FF8C  F03E    	movff	plusw1,btemp+1
  3918                           
  3919                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  3920  005056  0EF8               	movlw	248
  3921  005058  26E1               	addwf	fsr1l,f,c
  3922  00505A  0EFF               	movlw	255
  3923  00505C  22E2               	addwfc	fsr1h,f,c
  3924  00505E  0012               	return		;funcret
  3925  005060                     __end_of_block_checksum:
  3926                           	opt callstack 0
  3927                           
  3928 ;; *************** function _UART2_put_buffer *****************
  3929 ;; Defined at:
  3930 ;;		line 257 in file "mcc_generated_files/uart2.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  bufData         1  [STACK] unsigned char 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;		None
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  1  [STACK] void 
  3937 ;; Registers used:
  3938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 3F/39
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3948 ;;Total ram usage:        0 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    3
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_secs_send
  3955 ;; This function uses a reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text4
  3959  005F44                     __ptext4:
  3960                           	opt callstack 0
  3961  005F44                     _UART2_put_buffer:
  3962                           	opt callstack 25
  3963                           
  3964                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  3965                           
  3966                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3967                           ;incstack = 0
  3968  005F44  0139               	movlb	57	; () banked
  3969  005F46  9596               	bcf	150,2,b	;volatile
  3970                           
  3971                           ; BSR set to: 57
  3972                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  3973                           ;stkvar	_bufData @ sp[(0)+-1]
  3974  005F48  0E00               	movlw	low _uart2RxBuffer
  3975  005F4A  2433               	addwf	_uart2RxHead,w,c	;volatile
  3976  005F4C  6ED9               	movwf	fsr2l,c
  3977  005F4E  6ADA               	clrf	fsr2h,c
  3978  005F50  0E02               	movlw	high _uart2RxBuffer
  3979  005F52  22DA               	addwfc	fsr2h,f,c
  3980  005F54  0EFF               	movlw	-1
  3981  005F56  006F FF8F FFDF     	movff	plusw1,indf2
  3982                           
  3983                           ; BSR set to: 57
  3984  005F5C  2A33               	incf	_uart2RxHead,f,c	;volatile
  3985                           
  3986                           ; BSR set to: 57
  3987                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  3988  005F5E  0E3F               	movlw	63
  3989  005F60  6433               	cpfsgt	_uart2RxHead,c
  3990  005F62  D001               	goto	l5827
  3991                           
  3992                           ; BSR set to: 57
  3993                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  3994  005F64  6A33               	clrf	_uart2RxHead,c	;volatile
  3995  005F66                     l5827:
  3996                           
  3997                           ; BSR set to: 57
  3998                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  3999  005F66  2A31               	incf	_uart2RxCount,f,c	;volatile
  4000                           
  4001                           ; BSR set to: 57
  4002                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  4003  005F68  8596               	bsf	150,2,b	;volatile
  4004                           
  4005                           ; BSR set to: 57
  4006                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4007  005F6A  52E5               	movf	postdec1,f,c
  4008  005F6C  0012               	return		;funcret
  4009  005F6E                     __end_of_UART2_put_buffer:
  4010                           	opt callstack 0
  4011                           
  4012 ;; *************** function _UART2_is_tx_ready *****************
  4013 ;; Defined at:
  4014 ;;		line 142 in file "mcc_generated_files/uart2.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;		None
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  1  [STACK] unsigned char 
  4021 ;; Registers used:
  4022 ;;		btemp
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4032 ;;Total ram usage:        0 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    3
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_secs_send
  4039 ;; This function uses a reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text5
  4043  00653E                     __ptext5:
  4044                           	opt callstack 0
  4045  00653E                     _UART2_is_tx_ready:
  4046                           	opt callstack 25
  4047                           
  4048                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  4049                           
  4050                           ; BSR set to: 57
  4051                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4052                           ;incstack = 0
  4053  00653E  0060  F0D0  F03D   	movff	_uart2TxBufferRemaining,btemp	;volatile
  4054                           
  4055                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4056  006544  0012               	return		;funcret
  4057  006546                     __end_of_UART2_is_tx_ready:
  4058                           	opt callstack 0
  4059                           
  4060 ;; *************** function _UART2_Write *****************
  4061 ;; Defined at:
  4062 ;;		line 172 in file "mcc_generated_files/uart2.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  txData          1  [STACK] unsigned char 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1  [STACK] void 
  4069 ;; Registers used:
  4070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 3F/39
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4080 ;;Total ram usage:        0 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:    3
  4083 ;; This function calls:
  4084 ;;		Nothing
  4085 ;; This function is called by:
  4086 ;;		_secs_send
  4087 ;; This function uses a reentrant model
  4088 ;;
  4089                           
  4090                           	psect	text6
  4091  005CBC                     __ptext6:
  4092                           	opt callstack 0
  4093  005CBC                     _UART2_Write:
  4094                           	opt callstack 25
  4095                           
  4096                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  4097                           
  4098                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  4099                           
  4100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4101                           ;incstack = 0
  4102  005CBC  5034               	movf	_uart2TxBufferRemaining,w,c	;volatile
  4103  005CBE  B4D8               	btfsc	status,2,c
  4104  005CC0  D7FD               	goto	_UART2_Write
  4105                           
  4106                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  4107  005CC2  0139               	movlb	57	; () banked
  4108  005CC4  B796               	btfsc	150,3,b	;volatile
  4109  005CC6  D005               	goto	l699
  4110                           
  4111                           ; BSR set to: 57
  4112                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  4113                           ;stkvar	_txData @ sp[(0)+-1]
  4114  005CC8  0EFF               	movlw	-1
  4115  005CCA  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  4116                           
  4117                           ;mcc_generated_files/uart2.c: 181:     }
  4118  005CD0  D011               	goto	l5815
  4119  005CD2                     l699:
  4120                           
  4121                           ; BSR set to: 57
  4122                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  4123  005CD2  9796               	bcf	150,3,b	;volatile
  4124                           
  4125                           ; BSR set to: 57
  4126                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  4127                           ;stkvar	_txData @ sp[(0)+-1]
  4128  005CD4  0E40               	movlw	low _uart2TxBuffer
  4129  005CD6  2436               	addwf	_uart2TxHead,w,c	;volatile
  4130  005CD8  6ED9               	movwf	fsr2l,c
  4131  005CDA  6ADA               	clrf	fsr2h,c
  4132  005CDC  0E02               	movlw	high _uart2TxBuffer
  4133  005CDE  22DA               	addwfc	fsr2h,f,c
  4134  005CE0  0EFF               	movlw	-1
  4135  005CE2  006F FF8F FFDF     	movff	plusw1,indf2
  4136                           
  4137                           ; BSR set to: 57
  4138  005CE8  2A36               	incf	_uart2TxHead,f,c	;volatile
  4139                           
  4140                           ; BSR set to: 57
  4141                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  4142  005CEA  0E3F               	movlw	63
  4143  005CEC  6436               	cpfsgt	_uart2TxHead,c
  4144  005CEE  D001               	goto	l5813
  4145                           
  4146                           ; BSR set to: 57
  4147                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  4148  005CF0  6A36               	clrf	_uart2TxHead,c	;volatile
  4149  005CF2                     l5813:
  4150                           
  4151                           ; BSR set to: 57
  4152                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  4153  005CF2  0634               	decf	_uart2TxBufferRemaining,f,c	;volatile
  4154  005CF4                     l5815:
  4155                           
  4156                           ; BSR set to: 57
  4157                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  4158  005CF4  8796               	bsf	150,3,b	;volatile
  4159                           
  4160                           ; BSR set to: 57
  4161                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4162  005CF6  52E5               	movf	postdec1,f,c
  4163  005CF8  0012               	return		;funcret
  4164  005CFA                     __end_of_UART2_Write:
  4165                           	opt callstack 0
  4166                           
  4167 ;; *************** function _UART1_put_buffer *****************
  4168 ;; Defined at:
  4169 ;;		line 250 in file "mcc_generated_files/uart1.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  bufData         1  [STACK] unsigned char 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1  [STACK] void 
  4176 ;; Registers used:
  4177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/39
  4180 ;;		On exit  : 3F/39
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4187 ;;Total ram usage:        0 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    3
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_t_protocol
  4194 ;;		_secs_send
  4195 ;; This function uses a reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text7
  4199  005F6E                     __ptext7:
  4200                           	opt callstack 0
  4201  005F6E                     _UART1_put_buffer:
  4202                           	opt callstack 25
  4203                           
  4204                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  4205                           
  4206                           ; BSR set to: 57
  4207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4208                           ;incstack = 0
  4209  005F6E  0139               	movlb	57	; () banked
  4210  005F70  9793               	bcf	147,3,b	;volatile
  4211                           
  4212                           ; BSR set to: 57
  4213                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  4214                           ;stkvar	_bufData @ sp[(0)+-1]
  4215  005F72  0E80               	movlw	low _uart1RxBuffer
  4216  005F74  2439               	addwf	_uart1RxHead,w,c	;volatile
  4217  005F76  6ED9               	movwf	fsr2l,c
  4218  005F78  6ADA               	clrf	fsr2h,c
  4219  005F7A  0E02               	movlw	high _uart1RxBuffer
  4220  005F7C  22DA               	addwfc	fsr2h,f,c
  4221  005F7E  0EFF               	movlw	-1
  4222  005F80  006F FF8F FFDF     	movff	plusw1,indf2
  4223                           
  4224                           ; BSR set to: 57
  4225  005F86  2A39               	incf	_uart1RxHead,f,c	;volatile
  4226                           
  4227                           ; BSR set to: 57
  4228                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  4229  005F88  0E3F               	movlw	63
  4230  005F8A  6439               	cpfsgt	_uart1RxHead,c
  4231  005F8C  D001               	goto	l5787
  4232                           
  4233                           ; BSR set to: 57
  4234                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  4235  005F8E  6A39               	clrf	_uart1RxHead,c	;volatile
  4236  005F90                     l5787:
  4237                           
  4238                           ; BSR set to: 57
  4239                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  4240  005F90  2A37               	incf	_uart1RxCount,f,c	;volatile
  4241                           
  4242                           ; BSR set to: 57
  4243                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  4244  005F92  8793               	bsf	147,3,b	;volatile
  4245                           
  4246                           ; BSR set to: 57
  4247                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4248  005F94  52E5               	movf	postdec1,f,c
  4249  005F96  0012               	return		;funcret
  4250  005F98                     __end_of_UART1_put_buffer:
  4251                           	opt callstack 0
  4252                           
  4253 ;; *************** function _UART1_is_tx_ready *****************
  4254 ;; Defined at:
  4255 ;;		line 151 in file "mcc_generated_files/uart1.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;		None
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1  [STACK] unsigned char 
  4262 ;; Registers used:
  4263 ;;		btemp
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4273 ;;Total ram usage:        0 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    3
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_secs_send
  4280 ;; This function uses a reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text8
  4284  006546                     __ptext8:
  4285                           	opt callstack 0
  4286  006546                     _UART1_is_tx_ready:
  4287                           	opt callstack 25
  4288                           
  4289                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  4290                           
  4291                           ; BSR set to: 57
  4292                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4293                           ;incstack = 0
  4294  006546  0060  F0E8  F03D   	movff	_uart1TxBufferRemaining,btemp	;volatile
  4295                           
  4296                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4297  00654C  0012               	return		;funcret
  4298  00654E                     __end_of_UART1_is_tx_ready:
  4299                           	opt callstack 0
  4300                           
  4301 ;; *************** function _secs_II_message *****************
  4302 ;; Defined at:
  4303 ;;		line 502 in file "gemsecs.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  stream          1  [STACK] unsigned char 
  4306 ;;  function        1  [STACK] unsigned char 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  7  [STACK] struct response_type
  4311 ;; Registers used:
  4312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  4313 ;; Tracked objects:
  4314 ;;		On entry : 3F/0
  4315 ;;		On exit  : 3E/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4322 ;;Total ram usage:        0 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    3
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_t_protocol
  4329 ;; This function uses a reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text9
  4333  004478                     __ptext9:
  4334                           	opt callstack 0
  4335  004478                     _secs_II_message:
  4336                           	opt callstack 0
  4337                           
  4338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  4339  004478  0E05               	movlw	5
  4340  00447A  26E1               	addwf	fsr1l,f,c
  4341  00447C  0E00               	movlw	0
  4342  00447E  22E2               	addwfc	fsr1h,f,c
  4343                           
  4344                           ;gemsecs.c: 502: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 503: {;gemsecs.c: 504:  static response_type block;;gemsecs.c: 506:  V.abort = LINK_
      +                          ERROR_NONE;
  4345                           
  4346                           ;incstack = 0
  4347  004480  0E0A               	movlw	10
  4348  004482  0100               	movlb	0	; () banked
  4349  004484  6FB1               	movwf	(_V+81)& (0+255),b	;volatile
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;gemsecs.c: 507:  V.queue = 0;
  4353  004486  99BC               	bcf	(_V+92)& (0+255),4,b	;volatile
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;gemsecs.c: 508:  block.respond = 0;
  4357  004488  9007               	bcf	secs_II_message@block+6,0,c
  4358                           
  4359                           ;gemsecs.c: 510:  switch (stream) {
  4360  00448A  D0F3               	goto	l6541
  4361  00448C                     l6409:
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;gemsecs.c: 514:    block.header = (uint8_t*) & H12[0];
  4365  00448C  0E62               	movlw	low _H12
  4366  00448E  6E01               	movwf	secs_II_message@block,c
  4367  004490  0E01               	movlw	high _H12
  4368  004492  6E02               	movwf	secs_II_message@block+1,c
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;gemsecs.c: 515:    block.length = sizeof(header12);
  4372  004494  0E0F               	movlw	15
  4373  004496  6E03               	movwf	secs_II_message@block+2,c
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;gemsecs.c: 516:    H12[0].block.block.systemb = V.systemb;
  4377  004498  C0AA  F166         	movff	_V+74,_H12+4	;volatile
  4378  00449C  C0AB  F167         	movff	_V+75,_H12+5	;volatile
  4379  0044A0  C0AC  F168         	movff	_V+76,_H12+6	;volatile
  4380  0044A4  C0AD  F169         	movff	_V+77,_H12+7	;volatile
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;gemsecs.c: 517:    H10[0].block.block.systemb = V.systemb;
  4384  0044A8  C0AA  F109         	movff	_V+74,_H10+2	;volatile
  4385  0044AC  C0AB  F10A         	movff	_V+75,_H10+3	;volatile
  4386  0044B0  C0AC  F10B         	movff	_V+76,_H10+4	;volatile
  4387  0044B4  C0AD  F10C         	movff	_V+77,_H10+5	;volatile
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;gemsecs.c: 518:    block.respond = 1;
  4391  0044B8  8007               	bsf	secs_II_message@block+6,0,c
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;gemsecs.c: 519:    block.reply = (uint8_t*) & H10[0];
  4395  0044BA  0E07               	movlw	low _H10
  4396  0044BC  6E04               	movwf	secs_II_message@block+3,c
  4397  0044BE  0E01               	movlw	high _H10
  4398  0044C0  6E05               	movwf	secs_II_message@block+4,c
  4399                           
  4400                           ;gemsecs.c: 520:    block.reply_length = sizeof(header10);
  4401  0044C2  0E0D               	movlw	13
  4402  0044C4                     L8:
  4403  0044C4  6E06               	movwf	secs_II_message@block+5,c
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;gemsecs.c: 521:    V.queue = 1;
  4407  0044C6  89BC               	bsf	(_V+92)& (0+255),4,b	;volatile
  4408                           
  4409                           ;gemsecs.c: 522:    break;
  4410  0044C8  D0ED               	goto	l6543
  4411  0044CA                     l6423:
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;gemsecs.c: 524:    block.header = (uint8_t*) & H14[0];
  4415  0044CA  0EAF               	movlw	low _H14
  4416  0044CC  6E01               	movwf	secs_II_message@block,c
  4417  0044CE  0E01               	movlw	high _H14
  4418  0044D0  6E02               	movwf	secs_II_message@block+1,c
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;gemsecs.c: 525:    block.length = sizeof(header14);
  4422  0044D2  0E11               	movlw	17
  4423  0044D4  6E03               	movwf	secs_II_message@block+2,c
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;gemsecs.c: 526:    H14[0].block.block.systemb = V.systemb;
  4427  0044D6  C0AA  F1B5         	movff	_V+74,_H14+6	;volatile
  4428  0044DA  C0AB  F1B6         	movff	_V+75,_H14+7	;volatile
  4429  0044DE  C0AC  F1B7         	movff	_V+76,_H14+8	;volatile
  4430  0044E2  C0AD  F1B8         	movff	_V+77,_H14+9	;volatile
  4431                           
  4432                           ;gemsecs.c: 527:    break;
  4433  0044E6  D0DE               	goto	l6543
  4434  0044E8                     l6429:
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;gemsecs.c: 529:    block.header = (uint8_t*) & H17[0];
  4438  0044E8  0E9B               	movlw	low _H17
  4439  0044EA  6E01               	movwf	secs_II_message@block,c
  4440  0044EC  0E01               	movlw	high _H17
  4441  0044EE  6E02               	movwf	secs_II_message@block+1,c
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;gemsecs.c: 530:    block.length = sizeof(header17);
  4445  0044F0  0E14               	movlw	20
  4446  0044F2  6E03               	movwf	secs_II_message@block+2,c
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;gemsecs.c: 531:    H17[0].block.block.systemb = V.systemb;
  4450  0044F4  C0AA  F1A4         	movff	_V+74,_H17+9	;volatile
  4451  0044F8  C0AB  F1A5         	movff	_V+75,_H17+10	;volatile
  4452  0044FC  C0AC  F1A6         	movff	_V+76,_H17+11	;volatile
  4453  004500  C0AD  F1A7         	movff	_V+77,_H17+12	;volatile
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;gemsecs.c: 532:    H12[1].block.block.systemb = V.systemb;
  4457  004504  C0AA  F175         	movff	_V+74,_H12+19	;volatile
  4458  004508  C0AB  F176         	movff	_V+75,_H12+20	;volatile
  4459  00450C  C0AC  F177         	movff	_V+76,_H12+21	;volatile
  4460  004510  C0AD  F178         	movff	_V+77,_H12+22	;volatile
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;gemsecs.c: 533:    block.respond = 1;
  4464  004514  8007               	bsf	secs_II_message@block+6,0,c
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;gemsecs.c: 534:    block.reply = (uint8_t*) & H12[1];
  4468  004516  0E71               	movlw	low (_H12+15)
  4469  004518  6E04               	movwf	secs_II_message@block+3,c
  4470  00451A  0E01               	movlw	high (_H12+15)
  4471  00451C  6E05               	movwf	secs_II_message@block+4,c
  4472                           
  4473                           ;gemsecs.c: 535:    block.reply_length = sizeof(header12);
  4474  00451E  0E0F               	movlw	15
  4475  004520  D7D1               	goto	L8
  4476  004522                     l6443:
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;gemsecs.c: 539:    block.header = (uint8_t*) & H10[2];
  4480  004522  0E21               	movlw	low (_H10+26)
  4481  004524  6E01               	movwf	secs_II_message@block,c
  4482  004526  0E01               	movlw	high (_H10+26)
  4483  004528  6E02               	movwf	secs_II_message@block+1,c
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;gemsecs.c: 540:    block.length = sizeof(header10);
  4487  00452A  0E0D               	movlw	13
  4488  00452C  6E03               	movwf	secs_II_message@block+2,c
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;gemsecs.c: 541:    H10[2].block.block.systemb = V.systemb;
  4492  00452E  C0AA  F123         	movff	_V+74,_H10+28	;volatile
  4493  004532  C0AB  F124         	movff	_V+75,_H10+29	;volatile
  4494  004536  C0AC  F125         	movff	_V+76,_H10+30	;volatile
  4495  00453A  C0AD  F126         	movff	_V+77,_H10+31	;volatile
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;gemsecs.c: 542:    V.abort = LINK_ERROR_ABORT;
  4499  00453E  0E11               	movlw	17
  4500  004540  6FB1               	movwf	(_V+81)& (0+255),b	;volatile
  4501                           
  4502                           ;gemsecs.c: 543:    break;
  4503  004542  D0B0               	goto	l6543
  4504  004544                     l6453:
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;stkvar	_function @ sp[(0)+-7]
  4508  004544  0EF9               	movlw	-7
  4509  004546  50E3               	movf	plusw1,w,c
  4510  004548  6E47               	movwf	btemp+10,c
  4511  00454A  6A48               	clrf	btemp+11,c
  4512                           
  4513                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4514                           ; Switch size 1, requested type "simple"
  4515                           ; Number of cases is 1, Range of values is 0 to 0
  4516                           ; switch strategies available:
  4517                           ; Name         Instructions Cycles
  4518                           ; simple_byte            4     3 (average)
  4519                           ;	Chosen strategy is simple_byte
  4520  00454C  5048               	movf	btemp+11,w,c
  4521  00454E  0A00               	xorlw	0	; case 0
  4522  004550  A4D8               	btfss	status,2,c
  4523  004552  D7E7               	goto	l6443
  4524                           
  4525                           ; BSR set to: 0
  4526                           ; Switch size 1, requested type "simple"
  4527                           ; Number of cases is 3, Range of values is 1 to 13
  4528                           ; switch strategies available:
  4529                           ; Name         Instructions Cycles
  4530                           ; simple_byte           10     6 (average)
  4531                           ;	Chosen strategy is simple_byte
  4532  004554  5047               	movf	btemp+10,w,c
  4533  004556  0A01               	xorlw	1	; case 1
  4534  004558  B4D8               	btfsc	status,2,c
  4535  00455A  D798               	goto	l6409
  4536  00455C  0A02               	xorlw	2	; case 3
  4537  00455E  B4D8               	btfsc	status,2,c
  4538  004560  D7B4               	goto	l6423
  4539  004562  0A0E               	xorlw	14	; case 13
  4540  004564  B4D8               	btfsc	status,2,c
  4541  004566  D7C0               	goto	l6429
  4542  004568  D7DC               	goto	l6443
  4543  00456A                     l6455:
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;gemsecs.c: 549:    block.header = (uint8_t*) & H24[0];
  4547  00456A  0E80               	movlw	low _H24
  4548  00456C  6E01               	movwf	secs_II_message@block,c
  4549  00456E  0E01               	movlw	high _H24
  4550  004570  6E02               	movwf	secs_II_message@block+1,c
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;gemsecs.c: 550:    block.length = sizeof(header24);
  4554  004572  0E1B               	movlw	27
  4555  004574  6E03               	movwf	secs_II_message@block+2,c
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;gemsecs.c: 551:    H24[0].block.block.systemb = V.systemb;
  4559  004576  C0AA  F190         	movff	_V+74,_H24+16	;volatile
  4560  00457A  C0AB  F191         	movff	_V+75,_H24+17	;volatile
  4561  00457E  C0AC  F192         	movff	_V+76,_H24+18	;volatile
  4562  004582  C0AD  F193         	movff	_V+77,_H24+19	;volatile
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;gemsecs.c: 552:    H24[0].data[12] = 12;
  4566  004586  0E0C               	movlw	12
  4567  004588  0101               	movlb	1	; () banked
  4568  00458A  6F8E               	movwf	(_H24+14)& (0+255),b
  4569                           
  4570                           ;gemsecs.c: 553:    break;
  4571  00458C  D08B               	goto	l6543
  4572  00458E                     l6473:
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;stkvar	_function @ sp[(0)+-7]
  4576  00458E  0EF9               	movlw	-7
  4577  004590  50E3               	movf	plusw1,w,c
  4578  004592  6E47               	movwf	btemp+10,c
  4579  004594  6A48               	clrf	btemp+11,c
  4580                           
  4581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4582                           ; Switch size 1, requested type "simple"
  4583                           ; Number of cases is 1, Range of values is 0 to 0
  4584                           ; switch strategies available:
  4585                           ; Name         Instructions Cycles
  4586                           ; simple_byte            4     3 (average)
  4587                           ;	Chosen strategy is simple_byte
  4588  004596  5048               	movf	btemp+11,w,c
  4589  004598  0A00               	xorlw	0	; case 0
  4590  00459A  A4D8               	btfss	status,2,c
  4591  00459C  D7C2               	goto	l6443
  4592                           
  4593                           ; BSR set to: 0
  4594                           ; Switch size 1, requested type "simple"
  4595                           ; Number of cases is 1, Range of values is 17 to 17
  4596                           ; switch strategies available:
  4597                           ; Name         Instructions Cycles
  4598                           ; simple_byte            4     3 (average)
  4599                           ;	Chosen strategy is simple_byte
  4600  00459E  5047               	movf	btemp+10,w,c
  4601  0045A0  0A11               	xorlw	17	; case 17
  4602  0045A2  B4D8               	btfsc	status,2,c
  4603  0045A4  D7E2               	goto	l6455
  4604  0045A6  D7BD               	goto	l6443
  4605  0045A8                     l6475:
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;gemsecs.c: 565:    block.header = (uint8_t*) & H13[0];
  4609  0045A8  0EC0               	movlw	low _H13
  4610  0045AA  6E01               	movwf	secs_II_message@block,c
  4611  0045AC  0E01               	movlw	high _H13
  4612  0045AE  6E02               	movwf	secs_II_message@block+1,c
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;gemsecs.c: 566:    block.length = sizeof(header13);
  4616  0045B0  0E10               	movlw	16
  4617  0045B2  6E03               	movwf	secs_II_message@block+2,c
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;gemsecs.c: 567:    H13[0].block.block.systemb = V.systemb;
  4621  0045B4  C0AA  F1C5         	movff	_V+74,_H13+5	;volatile
  4622  0045B8  C0AB  F1C6         	movff	_V+75,_H13+6	;volatile
  4623  0045BC  C0AC  F1C7         	movff	_V+76,_H13+7	;volatile
  4624  0045C0  C0AD  F1C8         	movff	_V+77,_H13+8	;volatile
  4625                           
  4626                           ;gemsecs.c: 568:    break;
  4627  0045C4  D06F               	goto	l6543
  4628  0045C6                     l6491:
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;stkvar	_function @ sp[(0)+-7]
  4632  0045C6  0EF9               	movlw	-7
  4633  0045C8  50E3               	movf	plusw1,w,c
  4634  0045CA  6E47               	movwf	btemp+10,c
  4635  0045CC  6A48               	clrf	btemp+11,c
  4636                           
  4637                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4638                           ; Switch size 1, requested type "simple"
  4639                           ; Number of cases is 1, Range of values is 0 to 0
  4640                           ; switch strategies available:
  4641                           ; Name         Instructions Cycles
  4642                           ; simple_byte            4     3 (average)
  4643                           ;	Chosen strategy is simple_byte
  4644  0045CE  5048               	movf	btemp+11,w,c
  4645  0045D0  0A00               	xorlw	0	; case 0
  4646  0045D2  A4D8               	btfss	status,2,c
  4647  0045D4  D7A6               	goto	l6443
  4648                           
  4649                           ; BSR set to: 0
  4650                           ; Switch size 1, requested type "simple"
  4651                           ; Number of cases is 1, Range of values is 11 to 11
  4652                           ; switch strategies available:
  4653                           ; Name         Instructions Cycles
  4654                           ; simple_byte            4     3 (average)
  4655                           ;	Chosen strategy is simple_byte
  4656  0045D6  5047               	movf	btemp+10,w,c
  4657  0045D8  0A0B               	xorlw	11	; case 11
  4658  0045DA  B4D8               	btfsc	status,2,c
  4659  0045DC  D7E5               	goto	l6475
  4660  0045DE  D7A1               	goto	l6443
  4661  0045E0                     l6503:
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;stkvar	_function @ sp[(0)+-7]
  4665  0045E0  0EF9               	movlw	-7
  4666  0045E2  50E3               	movf	plusw1,w,c
  4667  0045E4  6E47               	movwf	btemp+10,c
  4668  0045E6  6A48               	clrf	btemp+11,c
  4669                           
  4670                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4671                           ; Switch size 1, requested type "simple"
  4672                           ; Number of cases is 1, Range of values is 0 to 0
  4673                           ; switch strategies available:
  4674                           ; Name         Instructions Cycles
  4675                           ; simple_byte            4     3 (average)
  4676                           ;	Chosen strategy is simple_byte
  4677  0045E8  5048               	movf	btemp+11,w,c
  4678  0045EA  0A00               	xorlw	0	; case 0
  4679  0045EC  A4D8               	btfss	status,2,c
  4680  0045EE  D799               	goto	l6443
  4681                           
  4682                           ; BSR set to: 0
  4683                           ; Switch size 1, requested type "simple"
  4684                           ; Number of cases is 7, Range of values is 1 to 13
  4685                           ; switch strategies available:
  4686                           ; Name         Instructions Cycles
  4687                           ; simple_byte           22    12 (average)
  4688                           ;	Chosen strategy is simple_byte
  4689  0045F0  5047               	movf	btemp+10,w,c
  4690  0045F2  0A01               	xorlw	1	; case 1
  4691  0045F4  B4D8               	btfsc	status,2,c
  4692  0045F6  D056               	goto	l6543
  4693  0045F8  0A02               	xorlw	2	; case 3
  4694  0045FA  B4D8               	btfsc	status,2,c
  4695  0045FC  D053               	goto	l6543
  4696  0045FE  0A06               	xorlw	6	; case 5
  4697  004600  B4D8               	btfsc	status,2,c
  4698  004602  D050               	goto	l6543
  4699  004604  0A02               	xorlw	2	; case 7
  4700  004606  B4D8               	btfsc	status,2,c
  4701  004608  D04D               	goto	l6543
  4702  00460A  0A0E               	xorlw	14	; case 9
  4703  00460C  B4D8               	btfsc	status,2,c
  4704  00460E  D04A               	goto	l6543
  4705  004610  0A02               	xorlw	2	; case 11
  4706  004612  B4D8               	btfsc	status,2,c
  4707  004614  D047               	goto	l6543
  4708  004616  0A06               	xorlw	6	; case 13
  4709  004618  B4D8               	btfsc	status,2,c
  4710  00461A  D044               	goto	l6543
  4711  00461C  D782               	goto	l6443
  4712  00461E                     l6505:
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;gemsecs.c: 604:    block.header = (uint8_t*) & H12[0];
  4716  00461E  0E62               	movlw	low _H12
  4717  004620  6E01               	movwf	secs_II_message@block,c
  4718  004622  0E01               	movlw	high _H12
  4719  004624  6E02               	movwf	secs_II_message@block+1,c
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;gemsecs.c: 605:    block.length = sizeof(header12);
  4723  004626  0E0F               	movlw	15
  4724  004628  6E03               	movwf	secs_II_message@block+2,c
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;gemsecs.c: 606:    H12[0].block.block.systemb = V.systemb;
  4728  00462A  C0AA  F166         	movff	_V+74,_H12+4	;volatile
  4729  00462E  C0AB  F167         	movff	_V+75,_H12+5	;volatile
  4730  004632  C0AC  F168         	movff	_V+76,_H12+6	;volatile
  4731  004636  C0AD  F169         	movff	_V+77,_H12+7	;volatile
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;gemsecs.c: 607:    H53[0].block.block.systemb = V.systemb;
  4735  00463A  C0AA  F3B3         	movff	_V+74,_H53+45	;volatile
  4736  00463E  C0AB  F3B4         	movff	_V+75,_H53+46	;volatile
  4737  004642  C0AC  F3B5         	movff	_V+76,_H53+47	;volatile
  4738  004646  C0AD  F3B6         	movff	_V+77,_H53+48	;volatile
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;gemsecs.c: 608:    block.respond = 1;
  4742  00464A  8007               	bsf	secs_II_message@block+6,0,c
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;gemsecs.c: 609:    block.reply = (uint8_t*) & H53[0];
  4746  00464C  0E86               	movlw	low _H53
  4747  00464E  6E04               	movwf	secs_II_message@block+3,c
  4748  004650  0E03               	movlw	high _H53
  4749  004652  6E05               	movwf	secs_II_message@block+4,c
  4750                           
  4751                           ;gemsecs.c: 610:    block.reply_length = sizeof(header53);
  4752  004654  0E38               	movlw	56
  4753  004656  D736               	goto	L8
  4754  004658                     l6529:
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;stkvar	_function @ sp[(0)+-7]
  4758  004658  0EF9               	movlw	-7
  4759  00465A  50E3               	movf	plusw1,w,c
  4760  00465C  6E47               	movwf	btemp+10,c
  4761  00465E  6A48               	clrf	btemp+11,c
  4762                           
  4763                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4764                           ; Switch size 1, requested type "simple"
  4765                           ; Number of cases is 1, Range of values is 0 to 0
  4766                           ; switch strategies available:
  4767                           ; Name         Instructions Cycles
  4768                           ; simple_byte            4     3 (average)
  4769                           ;	Chosen strategy is simple_byte
  4770  004660  5048               	movf	btemp+11,w,c
  4771  004662  0A00               	xorlw	0	; case 0
  4772  004664  A4D8               	btfss	status,2,c
  4773  004666  D75D               	goto	l6443
  4774                           
  4775                           ; BSR set to: 0
  4776                           ; Switch size 1, requested type "simple"
  4777                           ; Number of cases is 1, Range of values is 1 to 1
  4778                           ; switch strategies available:
  4779                           ; Name         Instructions Cycles
  4780                           ; simple_byte            4     3 (average)
  4781                           ;	Chosen strategy is simple_byte
  4782  004668  5047               	movf	btemp+10,w,c
  4783  00466A  0A01               	xorlw	1	; case 1
  4784  00466C  B4D8               	btfsc	status,2,c
  4785  00466E  D7D7               	goto	l6505
  4786  004670  D758               	goto	l6443
  4787  004672                     l6541:
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;stkvar	_stream @ sp[(0)+-6]
  4791  004672  0EFA               	movlw	-6
  4792  004674  50E3               	movf	plusw1,w,c
  4793  004676  6E47               	movwf	btemp+10,c
  4794  004678  6A48               	clrf	btemp+11,c
  4795                           
  4796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4797                           ; Switch size 1, requested type "simple"
  4798                           ; Number of cases is 1, Range of values is 0 to 0
  4799                           ; switch strategies available:
  4800                           ; Name         Instructions Cycles
  4801                           ; simple_byte            4     3 (average)
  4802                           ;	Chosen strategy is simple_byte
  4803  00467A  5048               	movf	btemp+11,w,c
  4804  00467C  0A00               	xorlw	0	; case 0
  4805  00467E  A4D8               	btfss	status,2,c
  4806  004680  D750               	goto	l6443
  4807                           
  4808                           ; BSR set to: 0
  4809                           ; Switch size 1, requested type "simple"
  4810                           ; Number of cases is 5, Range of values is 1 to 10
  4811                           ; switch strategies available:
  4812                           ; Name         Instructions Cycles
  4813                           ; simple_byte           16     9 (average)
  4814                           ;	Chosen strategy is simple_byte
  4815  004682  5047               	movf	btemp+10,w,c
  4816  004684  0A01               	xorlw	1	; case 1
  4817  004686  B4D8               	btfsc	status,2,c
  4818  004688  D75D               	goto	l6453
  4819  00468A  0A03               	xorlw	3	; case 2
  4820  00468C  B4D8               	btfsc	status,2,c
  4821  00468E  D77F               	goto	l6473
  4822  004690  0A04               	xorlw	4	; case 6
  4823  004692  B4D8               	btfsc	status,2,c
  4824  004694  D798               	goto	l6491
  4825  004696  0A0F               	xorlw	15	; case 9
  4826  004698  B4D8               	btfsc	status,2,c
  4827  00469A  D7A2               	goto	l6503
  4828  00469C  0A03               	xorlw	3	; case 10
  4829  00469E  B4D8               	btfsc	status,2,c
  4830  0046A0  D7DB               	goto	l6529
  4831  0046A2  D73F               	goto	l6443
  4832  0046A4                     l6543:
  4833                           
  4834                           ;gemsecs.c: 629:  return(block);
  4835  0046A4  EE20  F001         	lfsr	2,secs_II_message@block
  4836                           
  4837                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  4838  0046A8  0E07               	movlw	7
  4839  0046AA  6E3D               	movwf	btemp,c
  4840  0046AC  0EF9               	movlw	-7
  4841  0046AE                     us348999:
  4842  0046AE  006F FF7B FFE3     	movff	postinc2,plusw1
  4843  0046B4  28E8               	incf	wreg,w,c
  4844  0046B6  2E3D               	decfsz	btemp,f,c
  4845  0046B8  D7FA               	bra	us348999
  4846                           
  4847                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  4848  0046BA  0012               	return		;funcret
  4849  0046BC                     __end_of_secs_II_message:
  4850                           	opt callstack 0
  4851                           
  4852 ;; *************** function _srand *****************
  4853 ;; Defined at:
  4854 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/rand.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;  s               2  [STACK] unsigned int 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1  [STACK] void 
  4861 ;; Registers used:
  4862 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  4863 ;; Tracked objects:
  4864 ;;		On entry : 3F/0
  4865 ;;		On exit  : 3F/1
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4872 ;;Total ram usage:        0 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    3
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_main
  4879 ;; This function uses a reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text10
  4883  005E5E                     __ptext10:
  4884                           	opt callstack 0
  4885  005E5E                     _srand:
  4886                           	opt callstack 27
  4887                           
  4888                           ;stkvar	_s @ sp[(0)+-2]
  4889                           
  4890                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4891                           ;incstack = 0
  4892  005E5E  0EFE               	movlw	-2
  4893  005E60  50E3               	movf	plusw1,w,c
  4894  005E62  0FFF               	addlw	255
  4895  005E64  6E47               	movwf	btemp+10,c
  4896  005E66  0EFF               	movlw	-1
  4897  005E68  006F FF8C  F048    	movff	plusw1,btemp+11
  4898  005E6E  0EFF               	movlw	255
  4899  005E70  2248               	addwfc	btemp+11,f,c
  4900  005E72  0060  F11C  F1F0   	movff	btemp+10,_seed
  4901  005E78  0060  F120  F1F1   	movff	btemp+11,_seed+1
  4902  005E7E  0101               	movlb	1	; () banked
  4903  005E80  6BF2               	clrf	(_seed+2)& (0+255),b
  4904  005E82  6BF3               	clrf	(_seed+3)& (0+255),b
  4905  005E84  6BF4               	clrf	(_seed+4)& (0+255),b
  4906  005E86  6BF5               	clrf	(_seed+5)& (0+255),b
  4907  005E88  6BF6               	clrf	(_seed+6)& (0+255),b
  4908  005E8A  6BF7               	clrf	(_seed+7)& (0+255),b
  4909                           
  4910                           ; BSR set to: 1
  4911                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  4912  005E8C  52E5               	movf	postdec1,f,c
  4913  005E8E  52E5               	movf	postdec1,f,c
  4914  005E90  0012               	return		;funcret
  4915  005E92                     __end_of_srand:
  4916                           	opt callstack 0
  4917                           
  4918 ;; *************** function _sprintf *****************
  4919 ;; Defined at:
  4920 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  s               1  [STACK] PTR unsigned char 
  4923 ;;		 -> V(98), 
  4924 ;;  fmt             1  [STACK] PTR const unsigned char 
  4925 ;;		 -> STR_15(26), STR_14(26), STR_13(6), STR_12(19), 
  4926 ;;		 -> STR_11(26), STR_10(21), STR_9(18), STR_8(6), 
  4927 ;;		 -> STR_7(6), STR_6(14), STR_5(21), STR_4(15), 
  4928 ;;		 -> STR_2(12), STR_1(17), 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;  f               5  [STACK] struct _IO_FILE
  4931 ;;  ap              2  [STACK] PTR void [1]
  4932 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4933 ;;  ret             2    0        int 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  2  [STACK] int 
  4936 ;; Registers used:
  4937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  4938 ;; Tracked objects:
  4939 ;;		On entry : 4/1
  4940 ;;		On exit  : 3F/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4947 ;;Total ram usage:        0 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; Hardware stack levels required when called:   11
  4950 ;; This function calls:
  4951 ;;		_vfprintf
  4952 ;; This function is called by:
  4953 ;;		_main
  4954 ;; This function uses a reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text11
  4958  005130                     __ptext11:
  4959                           	opt callstack 0
  4960  005130                     _sprintf:
  4961                           	opt callstack 0
  4962                           
  4963                           ; BSR set to: 1
  4964                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4965  005130  0E07               	movlw	7
  4966  005132  26E1               	addwf	fsr1l,f,c
  4967  005134  0E00               	movlw	0
  4968  005136  22E2               	addwfc	fsr1h,f,c
  4969                           
  4970                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  4971                           
  4972                           ;incstack = 0
  4973  005138  0EF6               	movlw	246
  4974  00513A  24E1               	addwf	fsr1l,w,c
  4975  00513C  6E47               	movwf	btemp+10,c
  4976  00513E  0EFF               	movlw	255
  4977  005140  20E2               	addwfc	fsr1h,w,c
  4978  005142  6E48               	movwf	btemp+11,c
  4979                           
  4980                           ;stkvar	_ap @ sp[(-7)+5]
  4981  005144  0EFF               	movlw	-1
  4982  005146  0060  F123  FFE3   	movff	btemp+11,plusw1
  4983  00514C  0EFE               	movlw	-2
  4984  00514E  0060  F11F  FFE3   	movff	btemp+10,plusw1
  4985                           
  4986                           ;stkvar	_s @ sp[(-7)+-2]
  4987  005154  0EF7               	movlw	-9
  4988  005156  006F FF8C  F048    	movff	plusw1,btemp+11
  4989                           
  4990                           ;stkvar	_f @ sp[(-7)+0]
  4991  00515C  0EF9               	movlw	-7
  4992  00515E  0060  F123  FFE3   	movff	btemp+11,plusw1
  4993                           
  4994                           ;stkvar	_f @ sp[(-7)+0]
  4995  005164  0EFA               	movlw	250
  4996  005166  24E1               	addwf	fsr1l,w,c
  4997  005168  6ED9               	movwf	fsr2l,c
  4998  00516A  0EFF               	movlw	255
  4999  00516C  20E2               	addwfc	fsr1h,w,c
  5000  00516E  6EDA               	movwf	fsr2h,c
  5001  005170  0E00               	movlw	0
  5002  005172  6EDE               	movwf	postinc2,c
  5003  005174  0E00               	movlw	0
  5004  005176  6EDD               	movwf	postdec2,c
  5005                           
  5006                           ;stkvar	_f @ sp[(-7)+0]
  5007  005178  0EFC               	movlw	252
  5008  00517A  24E1               	addwf	fsr1l,w,c
  5009  00517C  6ED9               	movwf	fsr2l,c
  5010  00517E  0EFF               	movlw	255
  5011  005180  20E2               	addwfc	fsr1h,w,c
  5012  005182  6EDA               	movwf	fsr2h,c
  5013  005184  0E00               	movlw	0
  5014  005186  6EDE               	movwf	postinc2,c
  5015  005188  0E00               	movlw	0
  5016  00518A  6EDD               	movwf	postdec2,c
  5017                           
  5018                           ;stkvar	_ap @ sp[(-7)+5]
  5019  00518C  0EFE               	movlw	254
  5020  00518E  24E1               	addwf	fsr1l,w,c
  5021  005190  6E3D               	movwf	btemp,c
  5022  005192  0EFF               	movlw	255
  5023  005194  20E2               	addwfc	fsr1h,w,c
  5024  005196  6E3E               	movwf	btemp+1,c
  5025  005198  0060  F0F7  FFE6   	movff	btemp,postinc1
  5026  00519E  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  5027                           
  5028                           ;stkvar	_fmt @ sp[(-9)+-3]
  5029  0051A4  0EF4               	movlw	-12
  5030  0051A6  50E3               	movf	plusw1,w,c
  5031  0051A8  6EE6               	movwf	postinc1,c
  5032                           
  5033                           ;stkvar	_f @ sp[(-10)+0]
  5034  0051AA  0EF6               	movlw	246
  5035  0051AC  24E1               	addwf	fsr1l,w,c
  5036  0051AE  6E3D               	movwf	btemp,c
  5037  0051B0  0EFF               	movlw	255
  5038  0051B2  20E2               	addwfc	fsr1h,w,c
  5039  0051B4  6E3E               	movwf	btemp+1,c
  5040  0051B6  0060  F0F7  FFE6   	movff	btemp,postinc1
  5041  0051BC  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  5042  0051C2  EC9B  F02A         	call	_vfprintf	;wreg free
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;stkvar	_f @ sp[(-7)+0]
  5046  0051C6  0EFA               	movlw	250
  5047  0051C8  24E1               	addwf	fsr1l,w,c
  5048  0051CA  6ED9               	movwf	fsr2l,c
  5049  0051CC  0EFF               	movlw	255
  5050  0051CE  20E2               	addwfc	fsr1h,w,c
  5051  0051D0  6EDA               	movwf	fsr2h,c
  5052  0051D2  50DF               	movf	indf2,w,c
  5053  0051D4  6E48               	movwf	btemp+11,c
  5054                           
  5055                           ;stkvar	_s @ sp[(-7)+-2]
  5056  0051D6  0EF7               	movlw	-9
  5057  0051D8  50E3               	movf	plusw1,w,c
  5058  0051DA  2448               	addwf	btemp+11,w,c
  5059  0051DC  6ED9               	movwf	fsr2l,c
  5060  0051DE  6ADA               	clrf	fsr2h,c
  5061  0051E0  0E00               	movlw	0
  5062  0051E2  6EDF               	movwf	indf2,c
  5063                           
  5064                           ; BSR set to: 0
  5065                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 2, vargsize = 0
  5066  0051E4  0EF9               	movlw	249
  5067  0051E6  26E1               	addwf	fsr1l,f,c
  5068  0051E8  0EFF               	movlw	255
  5069  0051EA  22E2               	addwfc	fsr1h,f,c
  5070  0051EC  52E5               	movf	postdec1,f,c
  5071  0051EE  50E7               	movf	indf1,w,c
  5072  0051F0  5EE1               	subwf	fsr1l,f,c
  5073  0051F2  0E00               	movlw	0
  5074  0051F4  5AE2               	subwfb	fsr1h,f,c
  5075  0051F6  0012               	return		;funcret
  5076  0051F8                     __end_of_sprintf:
  5077                           	opt callstack 0
  5078                           
  5079 ;; *************** function _r_protocol *****************
  5080 ;; Defined at:
  5081 ;;		line 213 in file "gemsecs.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;  r_link          1  [STACK] PTR enum E16172
  5084 ;;		 -> V(98), 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  rxData          1  [STACK] unsigned char 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1  [STACK] enum E16912
  5089 ;; Registers used:
  5090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5100 ;;Total ram usage:        0 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    5
  5103 ;; This function calls:
  5104 ;;		_StartTimer
  5105 ;;		_TimerDone
  5106 ;;		_UART1_Read
  5107 ;;		_UART1_Write
  5108 ;;		_UART1_is_rx_ready
  5109 ;;		_WaitMs
  5110 ;;		_run_checksum
  5111 ;;		_secs_gem_state
  5112 ;; This function is called by:
  5113 ;;		_main
  5114 ;; This function uses a reentrant model
  5115 ;;
  5116                           
  5117                           	psect	text12
  5118  00340C                     __ptext12:
  5119                           	opt callstack 0
  5120  00340C                     _r_protocol:
  5121                           	opt callstack 0
  5122                           
  5123                           ; BSR set to: 0
  5124                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5125  00340C  52E6               	movf	postinc1,f,c
  5126                           
  5127                           ;gemsecs.c: 213: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 214: {;gemsecs.
      +                          c: 215:  uint8_t rxData;;gemsecs.c: 216:  static uint8_t rxData_l = 0, retry = 3, *b_blo
      +                          ck;;gemsecs.c: 218:  switch (*r_link) {
  5128                           
  5129                           ;incstack = 0
  5130  00340E  D181               	goto	l8731
  5131  003410                     l8599:
  5132                           
  5133                           ;gemsecs.c: 220:   if (UART1_is_rx_ready()) {
  5134  003410  ECAB  F032         	call	_UART1_is_rx_ready	;wreg free
  5135  003414  503D               	movf	btemp,w,c
  5136  003416  B4D8               	btfsc	status,2,c
  5137  003418  D19D               	goto	l8733
  5138                           
  5139                           ;gemsecs.c: 221:    rxData = UART1_Read();
  5140  00341A  ECBB  F02E         	call	_UART1_Read	;wreg free
  5141                           
  5142                           ;stkvar	_rxData @ sp[(-1)+0]
  5143  00341E  0EFF               	movlw	-1
  5144  003420  0060  F0F7  FFE3   	movff	btemp,plusw1
  5145                           
  5146                           ; BSR set to: 57
  5147                           ;gemsecs.c: 222:    if (rxData == 0x05) {
  5148                           ;stkvar	_rxData @ sp[(-1)+0]
  5149  003426  0EFF               	movlw	-1
  5150  003428  006F FF8C  F03D    	movff	plusw1,btemp
  5151  00342E  0E05               	movlw	5
  5152  003430  183D               	xorwf	btemp,w,c
  5153  003432  A4D8               	btfss	status,2,c
  5154  003434  D18F               	goto	l8733
  5155                           
  5156                           ; BSR set to: 57
  5157                           ;gemsecs.c: 223:     V.error = LINK_ERROR_NONE;
  5158  003436  0E0A               	movlw	10
  5159  003438  0100               	movlb	0	; () banked
  5160  00343A  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;gemsecs.c: 224:     *r_link = LINK_STATE_ENQ;
  5164                           ;stkvar	_r_link @ sp[(-1)+-1]
  5165  00343C  0EFE               	movlw	-2
  5166  00343E  50E3               	movf	plusw1,w,c
  5167  003440  6ED9               	movwf	fsr2l,c
  5168  003442  6ADA               	clrf	fsr2h,c
  5169  003444  0E01               	movlw	1
  5170  003446  D14C               	goto	L13
  5171  003448                     l1636:
  5172                           
  5173                           ;gemsecs.c: 229:   rxData_l = 0;
  5174  003448  6A2E               	clrf	r_protocol@rxData_l,c
  5175                           
  5176                           ;gemsecs.c: 230:   b_block = (uint8_t*) & H254[0];
  5177  00344A  0EBE               	movlw	low _H254
  5178  00344C  6E23               	movwf	r_protocol@b_block,c
  5179  00344E  0E03               	movlw	high _H254
  5180  003450  6E24               	movwf	r_protocol@b_block+1,c
  5181                           
  5182                           ;gemsecs.c: 231:   UART1_Write(0x04);
  5183  003452  0E04               	movlw	4
  5184  003454  6EE6               	movwf	postinc1,c
  5185  003456  EC7D  F02E         	call	_UART1_Write	;wreg free
  5186                           
  5187                           ; BSR set to: 57
  5188                           ;gemsecs.c: 232:   StartTimer(TMR_T2, 2000);
  5189  00345A  0ED0               	movlw	208
  5190  00345C  6EE6               	movwf	postinc1,c
  5191  00345E  0E07               	movlw	7
  5192  003460  6EE6               	movwf	postinc1,c
  5193  003462  0E02               	movlw	2
  5194  003464  6EE6               	movwf	postinc1,c
  5195  003466  ECDA  F02E         	call	_StartTimer	;wreg free
  5196                           
  5197                           ;gemsecs.c: 233:   *r_link = LINK_STATE_EOT;
  5198                           ;stkvar	_r_link @ sp[(-1)+-1]
  5199  00346A  0EFE               	movlw	-2
  5200  00346C  50E3               	movf	plusw1,w,c
  5201  00346E  6ED9               	movwf	fsr2l,c
  5202  003470  6ADA               	clrf	fsr2h,c
  5203  003472  0E02               	movlw	2
  5204  003474  D135               	goto	L13
  5205  003476                     l8617:
  5206                           
  5207                           ;gemsecs.c: 243:   if (TimerDone(TMR_T2)) {
  5208  003476  0E02               	movlw	2
  5209  003478  6EE6               	movwf	postinc1,c
  5210  00347A  EC47  F031         	call	_TimerDone	;wreg free
  5211  00347E  503D               	movf	btemp,w,c
  5212  003480  B4D8               	btfsc	status,2,c
  5213  003482  D019               	goto	l8629
  5214                           
  5215                           ;gemsecs.c: 244:    V.timer_error++;
  5216  003484  0100               	movlb	0	; () banked
  5217  003486  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  5218  003488  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;gemsecs.c: 245:    if (!retry--) {
  5222  00348A  065D               	decf	r_protocol@retry,f,c
  5223  00348C  285D               	incf	r_protocol@retry,w,c
  5224  00348E  A4D8               	btfss	status,2,c
  5225  003490  D00C               	goto	l8627
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;gemsecs.c: 246:     V.error = LINK_ERROR_T2;
  5229  003492  0E0C               	movlw	12
  5230  003494  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5231                           
  5232                           ;gemsecs.c: 247:     V.failed_receive = 1;
  5233  003496  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  5234  003498  0BF0               	andlw	-16
  5235  00349A  0901               	iorlw	1
  5236  00349C  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;gemsecs.c: 248:     *r_link = LINK_STATE_NAK;
  5240                           ;stkvar	_r_link @ sp[(-1)+-1]
  5241  00349E  0EFE               	movlw	-2
  5242  0034A0  50E3               	movf	plusw1,w,c
  5243  0034A2  6ED9               	movwf	fsr2l,c
  5244  0034A4  6ADA               	clrf	fsr2h,c
  5245  0034A6  0E05               	movlw	5
  5246  0034A8  D11B               	goto	L13
  5247  0034AA                     l8627:
  5248                           
  5249                           ;gemsecs.c: 250:     *r_link = LINK_STATE_IDLE;
  5250                           ;stkvar	_r_link @ sp[(-1)+-1]
  5251  0034AA  0EFE               	movlw	-2
  5252  0034AC  50E3               	movf	plusw1,w,c
  5253  0034AE  6ED9               	movwf	fsr2l,c
  5254  0034B0  6ADA               	clrf	fsr2h,c
  5255  0034B2  0E00               	movlw	0
  5256  0034B4  D115               	goto	L13
  5257  0034B6                     l8629:
  5258                           
  5259                           ;gemsecs.c: 253:    if (UART1_is_rx_ready()) {
  5260  0034B6  ECAB  F032         	call	_UART1_is_rx_ready	;wreg free
  5261  0034BA  503D               	movf	btemp,w,c
  5262  0034BC  B4D8               	btfsc	status,2,c
  5263  0034BE  D14A               	goto	l8733
  5264                           
  5265                           ;gemsecs.c: 254:     rxData = UART1_Read();
  5266  0034C0  ECBB  F02E         	call	_UART1_Read	;wreg free
  5267                           
  5268                           ;stkvar	_rxData @ sp[(-1)+0]
  5269  0034C4  0EFF               	movlw	-1
  5270  0034C6  0060  F0F7  FFE3   	movff	btemp,plusw1
  5271                           
  5272                           ; BSR set to: 57
  5273                           ;gemsecs.c: 255:     if (rxData_l == 0) {
  5274  0034CC  502E               	movf	r_protocol@rxData_l,w,c
  5275  0034CE  A4D8               	btfss	status,2,c
  5276  0034D0  D019               	goto	l8643
  5277                           
  5278                           ; BSR set to: 57
  5279                           ;gemsecs.c: 256:      r_block.length = rxData;
  5280                           ;stkvar	_rxData @ sp[(-1)+0]
  5281  0034D2  0EFF               	movlw	-1
  5282  0034D4  006F FF8C  F0CE    	movff	plusw1,_r_block+12
  5283                           
  5284                           ; BSR set to: 57
  5285                           ;gemsecs.c: 257:      run_checksum(0, 1);
  5286  0034DA  0E01               	movlw	1
  5287  0034DC  6EE6               	movwf	postinc1,c
  5288  0034DE  0E00               	movlw	0
  5289  0034E0  6EE6               	movwf	postinc1,c
  5290  0034E2  ECCC  F02F         	call	_run_checksum	;wreg free
  5291                           
  5292                           ;gemsecs.c: 258:      b_block[255-rxData_l] = rxData;
  5293                           ;stkvar	_rxData @ sp[(-1)+0]
  5294  0034E6  502E               	movf	r_protocol@rxData_l,w,c
  5295  0034E8  0AFF               	xorlw	255
  5296  0034EA  6E48               	movwf	btemp+11,c
  5297  0034EC  5048               	movf	btemp+11,w,c
  5298  0034EE  2423               	addwf	r_protocol@b_block,w,c
  5299  0034F0  6ED9               	movwf	fsr2l,c
  5300  0034F2  0E00               	movlw	0
  5301  0034F4  2024               	addwfc	r_protocol@b_block+1,w,c
  5302  0034F6  6EDA               	movwf	fsr2h,c
  5303  0034F8  0EFF               	movlw	-1
  5304  0034FA  006F FF8F FFDF     	movff	plusw1,indf2
  5305                           
  5306                           ;gemsecs.c: 259:      rxData_l++;
  5307  003500  2A2E               	incf	r_protocol@rxData_l,f,c
  5308                           
  5309                           ;gemsecs.c: 260:     } else {
  5310  003502  D128               	goto	l8733
  5311  003504                     l8643:
  5312                           
  5313                           ; BSR set to: 57
  5314                           ;gemsecs.c: 264:      if (rxData_l <= sizeof(block10))
  5315  003504  0E0B               	movlw	11
  5316  003506  602E               	cpfslt	r_protocol@rxData_l,c
  5317  003508  D00C               	goto	l8647
  5318                           
  5319                           ; BSR set to: 57
  5320                           ;gemsecs.c: 265:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5321                           ;stkvar	_rxData @ sp[(-1)+0]
  5322  00350A  502E               	movf	r_protocol@rxData_l,w,c
  5323  00350C  0820               	sublw	low (_H10+25)
  5324  00350E  6ED9               	movwf	fsr2l,c
  5325  003510  0E00               	movlw	0
  5326  003512  A0D8               	btfss	status,0,c
  5327  003514  2AE8               	incf	wreg,f,c
  5328  003516  0801               	sublw	high (_H10+25)
  5329  003518  6EDA               	movwf	fsr2h,c
  5330  00351A  0EFF               	movlw	-1
  5331  00351C  006F FF8F FFDF     	movff	plusw1,indf2
  5332  003522                     l8647:
  5333                           
  5334                           ; BSR set to: 57
  5335                           ;gemsecs.c: 267:      if (rxData_l == sizeof(block10) + 1)
  5336  003522  0E0B               	movlw	11
  5337  003524  182E               	xorwf	r_protocol@rxData_l,w,c
  5338  003526  A4D8               	btfss	status,2,c
  5339  003528  D004               	goto	l8651
  5340                           
  5341                           ; BSR set to: 57
  5342                           ;gemsecs.c: 268:       V.ack[2] = rxData;
  5343                           ;stkvar	_rxData @ sp[(-1)+0]
  5344  00352A  0EFF               	movlw	-1
  5345  00352C  006F FF8C  F0BF    	movff	plusw1,_V+95	;volatile
  5346  003532                     l8651:
  5347                           
  5348                           ; BSR set to: 57
  5349                           ;gemsecs.c: 269:      if (rxData_l == sizeof(block10) + 2)
  5350  003532  0E0C               	movlw	12
  5351  003534  182E               	xorwf	r_protocol@rxData_l,w,c
  5352  003536  A4D8               	btfss	status,2,c
  5353  003538  D004               	goto	l8655
  5354                           
  5355                           ; BSR set to: 57
  5356                           ;gemsecs.c: 270:       V.ack[1] = rxData;
  5357                           ;stkvar	_rxData @ sp[(-1)+0]
  5358  00353A  0EFF               	movlw	-1
  5359  00353C  006F FF8C  F0BE    	movff	plusw1,_V+94	;volatile
  5360  003542                     l8655:
  5361                           
  5362                           ; BSR set to: 57
  5363                           ;gemsecs.c: 271:      if (rxData_l == sizeof(block10) + 3)
  5364  003542  0E0D               	movlw	13
  5365  003544  182E               	xorwf	r_protocol@rxData_l,w,c
  5366  003546  A4D8               	btfss	status,2,c
  5367  003548  D004               	goto	l8659
  5368                           
  5369                           ; BSR set to: 57
  5370                           ;gemsecs.c: 272:       V.ack[0] = rxData;
  5371                           ;stkvar	_rxData @ sp[(-1)+0]
  5372  00354A  0EFF               	movlw	-1
  5373  00354C  006F FF8C  F0BD    	movff	plusw1,_V+93	;volatile
  5374  003552                     l8659:
  5375                           
  5376                           ; BSR set to: 57
  5377                           ;gemsecs.c: 274:      if (rxData_l <= r_block.length)
  5378  003552  502E               	movf	r_protocol@rxData_l,w,c
  5379  003554  0100               	movlb	0	; () banked
  5380  003556  5DCE               	subwf	(_r_block+12)& (0+255),w,b
  5381  003558  A0D8               	btfss	status,0,c
  5382  00355A  D00D               	goto	l8663
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;gemsecs.c: 275:       V.r_checksum = run_checksum(rxData, 0);
  5386  00355C  0E00               	movlw	0
  5387  00355E  6EE6               	movwf	postinc1,c
  5388                           
  5389                           ;stkvar	_rxData @ sp[(-2)+0]
  5390  003560  0EFE               	movlw	-2
  5391  003562  50E3               	movf	plusw1,w,c
  5392  003564  6EE6               	movwf	postinc1,c
  5393  003566  ECCC  F02F         	call	_run_checksum	;wreg free
  5394  00356A  0060  F0F4  F0B3   	movff	btemp,_V+83	;volatile
  5395  003570  0060  F0F8  F0B4   	movff	btemp+1,_V+84	;volatile
  5396  003576                     l8663:
  5397                           
  5398                           ;gemsecs.c: 277:      if (rxData_l == r_block.length + 1)
  5399  003576  502E               	movf	r_protocol@rxData_l,w,c
  5400  003578  6E47               	movwf	btemp+10,c
  5401  00357A  6A48               	clrf	btemp+11,c
  5402  00357C  0100               	movlb	0	; () banked
  5403  00357E  51CE               	movf	(_r_block+12)& (0+255),w,b
  5404  003580  6E45               	movwf	btemp+8,c
  5405  003582  6A46               	clrf	btemp+9,c
  5406  003584  0E01               	movlw	1
  5407  003586  2645               	addwf	btemp+8,f,c
  5408  003588  0E00               	movlw	0
  5409  00358A  2246               	addwfc	btemp+9,f,c
  5410  00358C  5047               	movf	btemp+10,w,c
  5411  00358E  1845               	xorwf	btemp+8,w,c
  5412  003590  E109               	bnz	l8667
  5413  003592  5048               	movf	btemp+11,w,c
  5414  003594  1846               	xorwf	btemp+9,w,c
  5415  003596  A4D8               	btfss	status,2,c
  5416  003598  D005               	goto	l8667
  5417                           
  5418                           ; BSR set to: 0
  5419                           ;gemsecs.c: 278:       H10[1].checksum = (uint16_t) rxData << 8;
  5420                           ;stkvar	_rxData @ sp[(-1)+0]
  5421  00359A  0EFF               	movlw	-1
  5422  00359C  50E3               	movf	plusw1,w,c
  5423  00359E  0101               	movlb	1	; () banked
  5424  0035A0  6F15               	movwf	(_H10+14)& (0+255),b
  5425  0035A2  6B14               	clrf	(_H10+13)& (0+255),b
  5426  0035A4                     l8667:
  5427                           
  5428                           ;gemsecs.c: 279:      if (rxData_l == r_block.length + 2)
  5429  0035A4  502E               	movf	r_protocol@rxData_l,w,c
  5430  0035A6  6E47               	movwf	btemp+10,c
  5431  0035A8  6A48               	clrf	btemp+11,c
  5432  0035AA  0100               	movlb	0	; () banked
  5433  0035AC  51CE               	movf	(_r_block+12)& (0+255),w,b
  5434  0035AE  6E45               	movwf	btemp+8,c
  5435  0035B0  6A46               	clrf	btemp+9,c
  5436  0035B2  0E02               	movlw	2
  5437  0035B4  2645               	addwf	btemp+8,f,c
  5438  0035B6  0E00               	movlw	0
  5439  0035B8  2246               	addwfc	btemp+9,f,c
  5440  0035BA  5047               	movf	btemp+10,w,c
  5441  0035BC  1845               	xorwf	btemp+8,w,c
  5442  0035BE  E10A               	bnz	l8671
  5443  0035C0  5048               	movf	btemp+11,w,c
  5444  0035C2  1846               	xorwf	btemp+9,w,c
  5445  0035C4  A4D8               	btfss	status,2,c
  5446  0035C6  D006               	goto	l8671
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;gemsecs.c: 280:       H10[1].checksum += rxData;
  5450                           ;stkvar	_rxData @ sp[(-1)+0]
  5451  0035C8  0EFF               	movlw	-1
  5452  0035CA  50E3               	movf	plusw1,w,c
  5453  0035CC  0101               	movlb	1	; () banked
  5454  0035CE  2714               	addwf	(_H10+13)& (0+255),f,b
  5455  0035D0  0E00               	movlw	0
  5456  0035D2  2315               	addwfc	(_H10+14)& (0+255),f,b
  5457  0035D4                     l8671:
  5458                           
  5459                           ;gemsecs.c: 282:      b_block[255-rxData_l] = rxData;
  5460                           ;stkvar	_rxData @ sp[(-1)+0]
  5461  0035D4  502E               	movf	r_protocol@rxData_l,w,c
  5462  0035D6  0AFF               	xorlw	255
  5463  0035D8  6E48               	movwf	btemp+11,c
  5464  0035DA  5048               	movf	btemp+11,w,c
  5465  0035DC  2423               	addwf	r_protocol@b_block,w,c
  5466  0035DE  6ED9               	movwf	fsr2l,c
  5467  0035E0  0E00               	movlw	0
  5468  0035E2  2024               	addwfc	r_protocol@b_block+1,w,c
  5469  0035E4  6EDA               	movwf	fsr2h,c
  5470  0035E6  0EFF               	movlw	-1
  5471  0035E8  006F FF8F FFDF     	movff	plusw1,indf2
  5472                           
  5473                           ;gemsecs.c: 283:      rxData_l++;
  5474  0035EE  2A2E               	incf	r_protocol@rxData_l,f,c
  5475                           
  5476                           ;gemsecs.c: 284:      if (rxData_l > (r_block.length + 2)) {
  5477  0035F0  502E               	movf	r_protocol@rxData_l,w,c
  5478  0035F2  6E47               	movwf	btemp+10,c
  5479  0035F4  6A48               	clrf	btemp+11,c
  5480  0035F6  0100               	movlb	0	; () banked
  5481  0035F8  51CE               	movf	(_r_block+12)& (0+255),w,b
  5482  0035FA  6E45               	movwf	btemp+8,c
  5483  0035FC  6A46               	clrf	btemp+9,c
  5484  0035FE  0E02               	movlw	2
  5485  003600  2645               	addwf	btemp+8,f,c
  5486  003602  0E00               	movlw	0
  5487  003604  2246               	addwfc	btemp+9,f,c
  5488  003606  5047               	movf	btemp+10,w,c
  5489  003608  5C45               	subwf	btemp+8,w,c
  5490  00360A  5046               	movf	btemp+9,w,c
  5491  00360C  0A80               	xorlw	128
  5492  00360E  6E3D               	movwf	btemp,c
  5493  003610  5048               	movf	btemp+11,w,c
  5494  003612  0A80               	xorlw	128
  5495  003614  583D               	subwfb	btemp,w,c
  5496  003616  B0D8               	btfsc	status,0,c
  5497  003618  D09D               	goto	l8733
  5498                           
  5499                           ; BSR set to: 0
  5500                           ;gemsecs.c: 285:       if (V.r_checksum == H10[1].checksum) {
  5501  00361A  0101               	movlb	1	; () banked
  5502  00361C  5114               	movf	(_H10+13)& (0+255),w,b
  5503  00361E  0100               	movlb	0	; () banked
  5504  003620  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  5505  003622  E10E               	bnz	l8683
  5506  003624  0101               	movlb	1	; () banked
  5507  003626  5115               	movf	(_H10+14)& (0+255),w,b
  5508  003628  0100               	movlb	0	; () banked
  5509  00362A  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  5510  00362C  A4D8               	btfss	status,2,c
  5511  00362E  D008               	goto	l8683
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;gemsecs.c: 286:        *r_link = LINK_STATE_ACK;
  5515                           ;stkvar	_r_link @ sp[(-1)+-1]
  5516  003630  0EFE               	movlw	-2
  5517  003632  50E3               	movf	plusw1,w,c
  5518  003634  6ED9               	movwf	fsr2l,c
  5519  003636  6ADA               	clrf	fsr2h,c
  5520  003638  0E03               	movlw	3
  5521  00363A  D052               	goto	L13
  5522  00363C                     l8681:
  5523  00363C  ECBB  F02E         	call	_UART1_Read	;wreg free
  5524  003640                     l8683:
  5525                           
  5526                           ;gemsecs.c: 288:        while (UART1_is_rx_ready())
  5527  003640  ECAB  F032         	call	_UART1_is_rx_ready	;wreg free
  5528  003644  503D               	movf	btemp,w,c
  5529  003646  A4D8               	btfss	status,2,c
  5530  003648  D7F9               	goto	l8681
  5531                           
  5532                           ;gemsecs.c: 290:        WaitMs(500);
  5533  00364A  0EF4               	movlw	244
  5534  00364C  6EE6               	movwf	postinc1,c
  5535  00364E  0E01               	movlw	1
  5536  003650  6EE6               	movwf	postinc1,c
  5537  003652  EC14  F02F         	call	_WaitMs	;wreg free
  5538                           
  5539                           ;gemsecs.c: 291:        V.error = LINK_ERROR_CHECKSUM;
  5540  003656  0E0F               	movlw	15
  5541  003658  0100               	movlb	0	; () banked
  5542  00365A  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;gemsecs.c: 292:        V.checksum_error++;
  5546  00365C  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  5547  00365E  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;gemsecs.c: 293:        V.failed_receive = 2;
  5551  003660  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  5552  003662  0BF0               	andlw	-16
  5553  003664  0902               	iorlw	2
  5554  003666  D71A               	goto	L14
  5555  003668                     l8695:
  5556                           
  5557                           ;gemsecs.c: 302:   V.stream = H10[1].block.block.stream;
  5558  003668  0101               	movlb	1	; () banked
  5559  00366A  511D               	movf	(_H10+22)& (0+255),w,b
  5560  00366C  0B7F               	andlw	127
  5561  00366E  0100               	movlb	0	; () banked
  5562  003670  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;gemsecs.c: 303:   V.function = H10[1].block.block.function;
  5566  003672  C11C  F0AF         	movff	_H10+21,_V+79	;volatile
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;gemsecs.c: 304:   V.systemb = H10[1].block.block.systemb;
  5570  003676  C116  F0AA         	movff	_H10+15,_V+74	;volatile
  5571  00367A  C117  F0AB         	movff	_H10+16,_V+75	;volatile
  5572  00367E  C118  F0AC         	movff	_H10+17,_V+76	;volatile
  5573  003682  C119  F0AD         	movff	_H10+18,_V+77	;volatile
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;gemsecs.c: 305:   V.rbit = H10[1].block.block.rbit;
  5577  003686  0101               	movlb	1	; () banked
  5578  003688  AF1F               	btfss	(_H10+24)& (0+255),7,b
  5579  00368A  D003               	bra	u5395
  5580  00368C  0100               	movlb	0	; () banked
  5581  00368E  81BB               	bsf	(_V+91)& (0+255),0,b	;volatile
  5582  003690  D002               	bra	u5397
  5583  003692                     u5395:
  5584  003692  0100               	movlb	0	; () banked
  5585  003694  91BB               	bcf	(_V+91)& (0+255),0,b	;volatile
  5586  003696                     u5397:
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;gemsecs.c: 306:   V.wbit = H10[1].block.block.wbit;
  5590  003696  0101               	movlb	1	; () banked
  5591  003698  AF1D               	btfss	(_H10+22)& (0+255),7,b
  5592  00369A  D003               	bra	u5405
  5593  00369C  0100               	movlb	0	; () banked
  5594  00369E  83BB               	bsf	(_V+91)& (0+255),1,b	;volatile
  5595  0036A0  D002               	bra	u5407
  5596  0036A2                     u5405:
  5597  0036A2  0100               	movlb	0	; () banked
  5598  0036A4  93BB               	bcf	(_V+91)& (0+255),1,b	;volatile
  5599  0036A6                     u5407:
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;gemsecs.c: 307:   V.ebit = H10[1].block.block.ebit;
  5603  0036A6  0101               	movlb	1	; () banked
  5604  0036A8  AF1B               	btfss	(_H10+20)& (0+255),7,b
  5605  0036AA  D003               	bra	u5415
  5606  0036AC  0100               	movlb	0	; () banked
  5607  0036AE  85BB               	bsf	(_V+91)& (0+255),2,b	;volatile
  5608  0036B0  D002               	bra	u5417
  5609  0036B2                     u5415:
  5610  0036B2  0100               	movlb	0	; () banked
  5611  0036B4  95BB               	bcf	(_V+91)& (0+255),2,b	;volatile
  5612  0036B6                     u5417:
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;gemsecs.c: 308:   V.g_state = secs_gem_state(V.stream, V.function);
  5616  0036B6  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  5617  0036B8  6EE6               	movwf	postinc1,c
  5618  0036BA  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  5619  0036BC  6EE6               	movwf	postinc1,c
  5620  0036BE  ECFC  F028         	call	_secs_gem_state	;wreg free
  5621  0036C2  503D               	movf	btemp,w,c
  5622  0036C4  0100               	movlb	0	; () banked
  5623  0036C6  6F62               	movwf	(_V+2)& (0+255),b	;volatile
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;gemsecs.c: 309:   UART1_Write(0x06);
  5627  0036C8  0E06               	movlw	6
  5628  0036CA  6EE6               	movwf	postinc1,c
  5629  0036CC  EC7D  F02E         	call	_UART1_Write	;wreg free
  5630                           
  5631                           ; BSR set to: 57
  5632                           ;gemsecs.c: 310:   V.failed_receive = 0;
  5633  0036D0  0EF0               	movlw	-16
  5634  0036D2  0100               	movlb	0	; () banked
  5635  0036D4  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  5636                           
  5637                           ; BSR set to: 0
  5638                           ;gemsecs.c: 311:   *r_link = LINK_STATE_DONE;
  5639                           ;stkvar	_r_link @ sp[(-1)+-1]
  5640  0036D6  0EFE               	movlw	-2
  5641  0036D8  50E3               	movf	plusw1,w,c
  5642  0036DA  6ED9               	movwf	fsr2l,c
  5643  0036DC  6ADA               	clrf	fsr2h,c
  5644  0036DE  0E04               	movlw	4
  5645  0036E0                     L13:
  5646  0036E0  6EDF               	movwf	indf2,c
  5647                           
  5648                           ;gemsecs.c: 312:   break;
  5649  0036E2  D038               	goto	l8733
  5650  0036E4                     l8715:
  5651                           
  5652                           ;gemsecs.c: 314:   UART1_Write(0x15);
  5653  0036E4  0E15               	movlw	21
  5654  0036E6  6EE6               	movwf	postinc1,c
  5655  0036E8  EC7D  F02E         	call	_UART1_Write	;wreg free
  5656                           
  5657                           ; BSR set to: 57
  5658                           ;gemsecs.c: 315:   *r_link = LINK_STATE_ERROR;
  5659                           ;stkvar	_r_link @ sp[(-1)+-1]
  5660  0036EC  0EFE               	movlw	-2
  5661  0036EE  50E3               	movf	plusw1,w,c
  5662  0036F0  6ED9               	movwf	fsr2l,c
  5663  0036F2  6ADA               	clrf	fsr2h,c
  5664  0036F4  0E06               	movlw	6
  5665  0036F6  6EDF               	movwf	indf2,c
  5666                           
  5667                           ;gemsecs.c: 316:   while ((uart1RxCount)) {
  5668  0036F8  D002               	goto	l8721
  5669  0036FA                     l8719:
  5670                           
  5671                           ; BSR set to: 57
  5672                           ;gemsecs.c: 317:    UART1_Read();
  5673  0036FA  ECBB  F02E         	call	_UART1_Read	;wreg free
  5674  0036FE                     l8721:
  5675                           
  5676                           ; BSR set to: 57
  5677                           ;gemsecs.c: 316:   while ((uart1RxCount)) {
  5678  0036FE  5037               	movf	_uart1RxCount,w,c	;volatile
  5679  003700  A4D8               	btfss	status,2,c
  5680  003702  D7FB               	goto	l8719
  5681                           
  5682                           ; BSR set to: 57
  5683                           ;gemsecs.c: 319:   retry = 3;
  5684  003704  0E03               	movlw	3
  5685  003706  6E5D               	movwf	r_protocol@retry,c
  5686                           
  5687                           ;gemsecs.c: 320:   break;
  5688  003708  D025               	goto	l8733
  5689  00370A                     l8725:
  5690                           
  5691                           ;gemsecs.c: 324:   V.failed_receive = 0;
  5692  00370A  0EF0               	movlw	-16
  5693  00370C  0100               	movlb	0	; () banked
  5694  00370E  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  5695  003710  D6CC               	goto	l8627
  5696  003712                     l8731:
  5697                           
  5698                           ;stkvar	_r_link @ sp[(-1)+-1]
  5699  003712  0EFE               	movlw	-2
  5700  003714  50E3               	movf	plusw1,w,c
  5701  003716  6ED9               	movwf	fsr2l,c
  5702  003718  6ADA               	clrf	fsr2h,c
  5703  00371A  50DF               	movf	indf2,w,c
  5704  00371C  6E47               	movwf	btemp+10,c
  5705  00371E  6A48               	clrf	btemp+11,c
  5706                           
  5707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5708                           ; Switch size 1, requested type "simple"
  5709                           ; Number of cases is 1, Range of values is 0 to 0
  5710                           ; switch strategies available:
  5711                           ; Name         Instructions Cycles
  5712                           ; simple_byte            4     3 (average)
  5713                           ;	Chosen strategy is simple_byte
  5714  003720  5048               	movf	btemp+11,w,c
  5715  003722  0A00               	xorlw	0	; case 0
  5716  003724  A4D8               	btfss	status,2,c
  5717  003726  D6C1               	goto	l8627
  5718                           
  5719                           ; Switch size 1, requested type "simple"
  5720                           ; Number of cases is 7, Range of values is 0 to 6
  5721                           ; switch strategies available:
  5722                           ; Name         Instructions Cycles
  5723                           ; simple_byte           22    12 (average)
  5724                           ;	Chosen strategy is simple_byte
  5725  003728  5047               	movf	btemp+10,w,c
  5726  00372A  0A00               	xorlw	0	; case 0
  5727  00372C  B4D8               	btfsc	status,2,c
  5728  00372E  D670               	goto	l8599
  5729  003730  0A01               	xorlw	1	; case 1
  5730  003732  B4D8               	btfsc	status,2,c
  5731  003734  D689               	goto	l1636
  5732  003736  0A03               	xorlw	3	; case 2
  5733  003738  B4D8               	btfsc	status,2,c
  5734  00373A  D69D               	goto	l8617
  5735  00373C  0A01               	xorlw	1	; case 3
  5736  00373E  B4D8               	btfsc	status,2,c
  5737  003740  D793               	goto	l8695
  5738  003742  0A07               	xorlw	7	; case 4
  5739  003744  B4D8               	btfsc	status,2,c
  5740  003746  D7E1               	goto	l8725
  5741  003748  0A01               	xorlw	1	; case 5
  5742  00374A  B4D8               	btfsc	status,2,c
  5743  00374C  D7CB               	goto	l8715
  5744  00374E  0A03               	xorlw	3	; case 6
  5745  003750  A4D8               	btfss	status,2,c
  5746  003752  D6AB               	goto	l8627
  5747  003754                     l8733:
  5748                           
  5749                           ;gemsecs.c: 331:  return *r_link;
  5750                           ;stkvar	_r_link @ sp[(-1)+-1]
  5751  003754  0EFE               	movlw	-2
  5752  003756  50E3               	movf	plusw1,w,c
  5753  003758  6ED9               	movwf	fsr2l,c
  5754  00375A  6ADA               	clrf	fsr2h,c
  5755  00375C  50DF               	movf	indf2,w,c
  5756  00375E  6E3D               	movwf	btemp,c
  5757                           
  5758                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5759  003760  52E5               	movf	postdec1,f,c
  5760  003762  52E5               	movf	postdec1,f,c
  5761  003764  0012               	return		;funcret
  5762  003766                     __end_of_r_protocol:
  5763                           	opt callstack 0
  5764                           
  5765 ;; *************** function _UART1_Write *****************
  5766 ;; Defined at:
  5767 ;;		line 179 in file "mcc_generated_files/uart1.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  txData          1  [STACK] unsigned char 
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;		None
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  1  [STACK] void 
  5774 ;; Registers used:
  5775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 3F/39
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5785 ;;Total ram usage:        0 bytes
  5786 ;; Hardware stack levels used:    1
  5787 ;; Hardware stack levels required when called:    3
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		_r_protocol
  5792 ;;		_t_protocol
  5793 ;;		_secs_send
  5794 ;; This function uses a reentrant model
  5795 ;;
  5796                           
  5797                           	psect	text13
  5798  005CFA                     __ptext13:
  5799                           	opt callstack 0
  5800  005CFA                     _UART1_Write:
  5801                           	opt callstack 25
  5802                           
  5803                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  5804                           
  5805                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  5806                           
  5807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5808                           ;incstack = 0
  5809  005CFA  503A               	movf	_uart1TxBufferRemaining,w,c	;volatile
  5810  005CFC  B4D8               	btfsc	status,2,c
  5811  005CFE  D7FD               	goto	_UART1_Write
  5812                           
  5813                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  5814  005D00  0139               	movlb	57	; () banked
  5815  005D02  B993               	btfsc	147,4,b	;volatile
  5816  005D04  D005               	goto	l579
  5817                           
  5818                           ; BSR set to: 57
  5819                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  5820                           ;stkvar	_txData @ sp[(0)+-1]
  5821  005D06  0EFF               	movlw	-1
  5822  005D08  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  5823                           
  5824                           ;mcc_generated_files/uart1.c: 186:  } else {
  5825  005D0E  D011               	goto	l5775
  5826  005D10                     l579:
  5827                           
  5828                           ; BSR set to: 57
  5829                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  5830  005D10  9993               	bcf	147,4,b	;volatile
  5831                           
  5832                           ; BSR set to: 57
  5833                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  5834                           ;stkvar	_txData @ sp[(0)+-1]
  5835  005D12  0EC0               	movlw	low _uart1TxBuffer
  5836  005D14  243C               	addwf	_uart1TxHead,w,c	;volatile
  5837  005D16  6ED9               	movwf	fsr2l,c
  5838  005D18  6ADA               	clrf	fsr2h,c
  5839  005D1A  0E02               	movlw	high _uart1TxBuffer
  5840  005D1C  22DA               	addwfc	fsr2h,f,c
  5841  005D1E  0EFF               	movlw	-1
  5842  005D20  006F FF8F FFDF     	movff	plusw1,indf2
  5843                           
  5844                           ; BSR set to: 57
  5845  005D26  2A3C               	incf	_uart1TxHead,f,c	;volatile
  5846                           
  5847                           ; BSR set to: 57
  5848                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  5849  005D28  0E3F               	movlw	63
  5850  005D2A  643C               	cpfsgt	_uart1TxHead,c
  5851  005D2C  D001               	goto	l5773
  5852                           
  5853                           ; BSR set to: 57
  5854                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  5855  005D2E  6A3C               	clrf	_uart1TxHead,c	;volatile
  5856  005D30                     l5773:
  5857                           
  5858                           ; BSR set to: 57
  5859                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  5860  005D30  063A               	decf	_uart1TxBufferRemaining,f,c	;volatile
  5861  005D32                     l5775:
  5862                           
  5863                           ; BSR set to: 57
  5864                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  5865  005D32  8993               	bsf	147,4,b	;volatile
  5866                           
  5867                           ; BSR set to: 57
  5868                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  5869  005D34  52E5               	movf	postdec1,f,c
  5870  005D36  0012               	return		;funcret
  5871  005D38                     __end_of_UART1_Write:
  5872                           	opt callstack 0
  5873                           
  5874 ;; *************** function _m_protocol *****************
  5875 ;; Defined at:
  5876 ;;		line 47 in file "gemsecs.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  m_link          1  [STACK] PTR enum E16172
  5879 ;;		 -> V(98), 
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;  rxData          1  [STACK] unsigned char 
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  1  [STACK] enum E16912
  5884 ;; Registers used:
  5885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5895 ;;Total ram usage:        0 bytes
  5896 ;; Hardware stack levels used:    1
  5897 ;; Hardware stack levels required when called:    5
  5898 ;; This function calls:
  5899 ;;		_StartTimer
  5900 ;;		_TimerDone
  5901 ;;		_UART1_Read
  5902 ;;		_UART1_is_rx_ready
  5903 ;;		_UART2_Read
  5904 ;;		_UART2_is_rx_ready
  5905 ;;		_WaitMs
  5906 ;;		_run_checksum
  5907 ;;		_secs_gem_state
  5908 ;; This function is called by:
  5909 ;;		_main
  5910 ;; This function uses a reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text14
  5914  002AF4                     __ptext14:
  5915                           	opt callstack 0
  5916  002AF4                     _m_protocol:
  5917                           	opt callstack 0
  5918                           
  5919                           ; BSR set to: 57
  5920                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5921  002AF4  52E6               	movf	postinc1,f,c
  5922                           
  5923                           ;gemsecs.c: 47: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 48: {;gemsecs.c: 
      +                          49:  uint8_t rxData;;gemsecs.c: 50:  static uint8_t rxData_l = 0;;gemsecs.c: 52:  switch
      +                           (*m_link) {
  5924                           
  5925                           ;incstack = 0
  5926  002AF6  D220               	goto	l9035
  5927  002AF8                     l8857:
  5928                           
  5929                           ;gemsecs.c: 57:   if (UART1_is_rx_ready()) {
  5930  002AF8  ECAB  F032         	call	_UART1_is_rx_ready	;wreg free
  5931  002AFC  503D               	movf	btemp,w,c
  5932  002AFE  B4D8               	btfsc	status,2,c
  5933  002B00  D022               	goto	l8871
  5934                           
  5935                           ;gemsecs.c: 58:    rxData = UART1_Read();
  5936  002B02  ECBB  F02E         	call	_UART1_Read	;wreg free
  5937                           
  5938                           ;stkvar	_rxData @ sp[(-1)+0]
  5939  002B06  0EFF               	movlw	-1
  5940  002B08  0060  F0F7  FFE3   	movff	btemp,plusw1
  5941                           
  5942                           ; BSR set to: 57
  5943                           ;gemsecs.c: 59:    if (rxData == 0x05) {
  5944                           ;stkvar	_rxData @ sp[(-1)+0]
  5945  002B0E  0EFF               	movlw	-1
  5946  002B10  006F FF8C  F03D    	movff	plusw1,btemp
  5947  002B16  0E05               	movlw	5
  5948  002B18  183D               	xorwf	btemp,w,c
  5949  002B1A  A4D8               	btfss	status,2,c
  5950  002B1C  D014               	goto	l8871
  5951                           
  5952                           ; BSR set to: 57
  5953                           ;gemsecs.c: 60:     V.uart = 1;
  5954  002B1E  0E01               	movlw	1
  5955  002B20  0100               	movlb	0	; () banked
  5956  002B22  6FC0               	movwf	(_V+96)& (0+255),b	;volatile
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;gemsecs.c: 61:     StartTimer(TMR_T2, 2000);
  5960  002B24  0ED0               	movlw	208
  5961  002B26  6EE6               	movwf	postinc1,c
  5962  002B28  0E07               	movlw	7
  5963  002B2A  6EE6               	movwf	postinc1,c
  5964  002B2C  0E02               	movlw	2
  5965  002B2E  6EE6               	movwf	postinc1,c
  5966  002B30  ECDA  F02E         	call	_StartTimer	;wreg free
  5967                           
  5968                           ;gemsecs.c: 62:     V.error = LINK_ERROR_NONE;
  5969  002B34  0E0A               	movlw	10
  5970  002B36  0100               	movlb	0	; () banked
  5971  002B38  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;gemsecs.c: 63:     *m_link = LINK_STATE_ENQ;
  5975                           ;stkvar	_m_link @ sp[(-1)+-1]
  5976  002B3A  0EFE               	movlw	-2
  5977  002B3C  50E3               	movf	plusw1,w,c
  5978  002B3E  6ED9               	movwf	fsr2l,c
  5979  002B40  6ADA               	clrf	fsr2h,c
  5980  002B42  0E01               	movlw	1
  5981  002B44  6EDF               	movwf	indf2,c
  5982  002B46                     l8871:
  5983                           
  5984                           ;gemsecs.c: 66:   if (UART2_is_rx_ready()) {
  5985  002B46  ECA7  F032         	call	_UART2_is_rx_ready	;wreg free
  5986  002B4A  503D               	movf	btemp,w,c
  5987  002B4C  B4D8               	btfsc	status,2,c
  5988  002B4E  D215               	goto	l9037
  5989                           
  5990                           ;gemsecs.c: 67:    rxData = UART2_Read();
  5991  002B50  EC9C  F02E         	call	_UART2_Read	;wreg free
  5992                           
  5993                           ;stkvar	_rxData @ sp[(-1)+0]
  5994  002B54  0EFF               	movlw	-1
  5995  002B56  0060  F0F7  FFE3   	movff	btemp,plusw1
  5996                           
  5997                           ; BSR set to: 57
  5998                           ;gemsecs.c: 68:    if (rxData == 0x05) {
  5999                           ;stkvar	_rxData @ sp[(-1)+0]
  6000  002B5C  0EFF               	movlw	-1
  6001  002B5E  006F FF8C  F03D    	movff	plusw1,btemp
  6002  002B64  0E05               	movlw	5
  6003  002B66  183D               	xorwf	btemp,w,c
  6004  002B68  A4D8               	btfss	status,2,c
  6005  002B6A  D207               	goto	l9037
  6006                           
  6007                           ; BSR set to: 57
  6008                           ;gemsecs.c: 69:     V.uart = 2;
  6009  002B6C  0E02               	movlw	2
  6010  002B6E  0100               	movlb	0	; () banked
  6011  002B70  6FC0               	movwf	(_V+96)& (0+255),b	;volatile
  6012                           
  6013                           ; BSR set to: 0
  6014                           ;gemsecs.c: 70:     StartTimer(TMR_T2, 2000);
  6015  002B72  0ED0               	movlw	208
  6016  002B74  6EE6               	movwf	postinc1,c
  6017  002B76  0E07               	movlw	7
  6018  002B78  6EE6               	movwf	postinc1,c
  6019  002B7A  0E02               	movlw	2
  6020  002B7C  6EE6               	movwf	postinc1,c
  6021  002B7E  ECDA  F02E         	call	_StartTimer	;wreg free
  6022                           
  6023                           ;gemsecs.c: 71:     V.error = LINK_ERROR_NONE;
  6024  002B82  0E0A               	movlw	10
  6025  002B84  0100               	movlb	0	; () banked
  6026  002B86  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;gemsecs.c: 72:     *m_link = LINK_STATE_ENQ;
  6030                           ;stkvar	_m_link @ sp[(-1)+-1]
  6031  002B88  0EFE               	movlw	-2
  6032  002B8A  50E3               	movf	plusw1,w,c
  6033  002B8C  6ED9               	movwf	fsr2l,c
  6034  002B8E  6ADA               	clrf	fsr2h,c
  6035  002B90  0E01               	movlw	1
  6036  002B92  D1D0               	goto	L20
  6037  002B94                     l1581:
  6038                           
  6039                           ;gemsecs.c: 77:   rxData_l = 0;
  6040  002B94  6A2F               	clrf	m_protocol@rxData_l,c
  6041                           
  6042                           ;gemsecs.c: 91:   V.error = LINK_ERROR_NONE;
  6043  002B96  0E0A               	movlw	10
  6044  002B98  0100               	movlb	0	; () banked
  6045  002B9A  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;gemsecs.c: 92:   *m_link = LINK_STATE_EOT;
  6049                           ;stkvar	_m_link @ sp[(-1)+-1]
  6050  002B9C  0EFE               	movlw	-2
  6051  002B9E  50E3               	movf	plusw1,w,c
  6052  002BA0  6ED9               	movwf	fsr2l,c
  6053  002BA2  6ADA               	clrf	fsr2h,c
  6054  002BA4  0E02               	movlw	2
  6055  002BA6  6EDF               	movwf	indf2,c
  6056                           
  6057                           ; BSR set to: 0
  6058                           ;gemsecs.c: 93:   StartTimer(TMR_T2, 2000);
  6059  002BA8  0ED0               	movlw	208
  6060  002BAA  6EE6               	movwf	postinc1,c
  6061  002BAC  0E07               	movlw	7
  6062  002BAE  6EE6               	movwf	postinc1,c
  6063  002BB0  0E02               	movlw	2
  6064  002BB2  6EE6               	movwf	postinc1,c
  6065  002BB4  ECDA  F02E         	call	_StartTimer	;wreg free
  6066                           
  6067                           ;gemsecs.c: 94:   break;
  6068  002BB8  D1E0               	goto	l9037
  6069  002BBA                     l8891:
  6070                           
  6071                           ;gemsecs.c: 96:   if (TimerDone(TMR_T2)) {
  6072  002BBA  0E02               	movlw	2
  6073  002BBC  6EE6               	movwf	postinc1,c
  6074  002BBE  EC47  F031         	call	_TimerDone	;wreg free
  6075  002BC2  503D               	movf	btemp,w,c
  6076  002BC4  B4D8               	btfsc	status,2,c
  6077  002BC6  D00F               	goto	l8901
  6078                           
  6079                           ;gemsecs.c: 97:    V.error = LINK_ERROR_T2;
  6080  002BC8  0E0C               	movlw	12
  6081  002BCA  0100               	movlb	0	; () banked
  6082  002BCC  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6083                           
  6084                           ; BSR set to: 0
  6085                           ;gemsecs.c: 98:    V.timer_error++;
  6086  002BCE  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  6087  002BD0  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;gemsecs.c: 99:    V.failed_receive = 2;
  6091  002BD2  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  6092  002BD4  0BF0               	andlw	-16
  6093  002BD6  0902               	iorlw	2
  6094  002BD8  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;gemsecs.c: 100:    *m_link = LINK_STATE_NAK;
  6098                           ;stkvar	_m_link @ sp[(-1)+-1]
  6099  002BDA  0EFE               	movlw	-2
  6100  002BDC  50E3               	movf	plusw1,w,c
  6101  002BDE  6ED9               	movwf	fsr2l,c
  6102  002BE0  6ADA               	clrf	fsr2h,c
  6103  002BE2  0E05               	movlw	5
  6104  002BE4  D1A7               	goto	L20
  6105  002BE6                     l8901:
  6106                           
  6107                           ;gemsecs.c: 102:    if (UART1_is_rx_ready()) {
  6108  002BE6  ECAB  F032         	call	_UART1_is_rx_ready	;wreg free
  6109  002BEA  503D               	movf	btemp,w,c
  6110  002BEC  B4D8               	btfsc	status,2,c
  6111  002BEE  D0A8               	goto	l8951
  6112                           
  6113                           ;gemsecs.c: 103:     rxData = UART1_Read();
  6114  002BF0  ECBB  F02E         	call	_UART1_Read	;wreg free
  6115                           
  6116                           ;stkvar	_rxData @ sp[(-1)+0]
  6117  002BF4  0EFF               	movlw	-1
  6118  002BF6  0060  F0F7  FFE3   	movff	btemp,plusw1
  6119                           
  6120                           ; BSR set to: 57
  6121                           ;gemsecs.c: 104:     if (rxData_l == 0) {
  6122  002BFC  502F               	movf	m_protocol@rxData_l,w,c
  6123  002BFE  A4D8               	btfss	status,2,c
  6124  002C00  D00C               	goto	l8913
  6125                           
  6126                           ; BSR set to: 57
  6127                           ;gemsecs.c: 105:      r_block.length = rxData;
  6128                           ;stkvar	_rxData @ sp[(-1)+0]
  6129  002C02  0EFF               	movlw	-1
  6130  002C04  006F FF8C  F0CE    	movff	plusw1,_r_block+12
  6131                           
  6132                           ; BSR set to: 57
  6133                           ;gemsecs.c: 106:      run_checksum(0, 1);
  6134  002C0A  0E01               	movlw	1
  6135  002C0C  6EE6               	movwf	postinc1,c
  6136  002C0E  0E00               	movlw	0
  6137  002C10  6EE6               	movwf	postinc1,c
  6138  002C12  ECCC  F02F         	call	_run_checksum	;wreg free
  6139                           
  6140                           ;gemsecs.c: 107:      rxData_l++;
  6141  002C16  2A2F               	incf	m_protocol@rxData_l,f,c
  6142                           
  6143                           ;gemsecs.c: 108:     } else {
  6144  002C18  D093               	goto	l8951
  6145  002C1A                     l8913:
  6146                           
  6147                           ; BSR set to: 57
  6148                           ;gemsecs.c: 112:      if (rxData_l <= sizeof(block10))
  6149  002C1A  0E0B               	movlw	11
  6150  002C1C  602F               	cpfslt	m_protocol@rxData_l,c
  6151  002C1E  D00C               	goto	l8917
  6152                           
  6153                           ; BSR set to: 57
  6154                           ;gemsecs.c: 113:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  6155                           ;stkvar	_rxData @ sp[(-1)+0]
  6156  002C20  502F               	movf	m_protocol@rxData_l,w,c
  6157  002C22  0820               	sublw	low (_H10+25)
  6158  002C24  6ED9               	movwf	fsr2l,c
  6159  002C26  0E00               	movlw	0
  6160  002C28  A0D8               	btfss	status,0,c
  6161  002C2A  2AE8               	incf	wreg,f,c
  6162  002C2C  0801               	sublw	high (_H10+25)
  6163  002C2E  6EDA               	movwf	fsr2h,c
  6164  002C30  0EFF               	movlw	-1
  6165  002C32  006F FF8F FFDF     	movff	plusw1,indf2
  6166  002C38                     l8917:
  6167                           
  6168                           ; BSR set to: 57
  6169                           ;gemsecs.c: 114:      if (rxData_l <= r_block.length)
  6170  002C38  502F               	movf	m_protocol@rxData_l,w,c
  6171  002C3A  0100               	movlb	0	; () banked
  6172  002C3C  5DCE               	subwf	(_r_block+12)& (0+255),w,b
  6173  002C3E  A0D8               	btfss	status,0,c
  6174  002C40  D00D               	goto	l8921
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;gemsecs.c: 115:       V.r_checksum = run_checksum(rxData, 0);
  6178  002C42  0E00               	movlw	0
  6179  002C44  6EE6               	movwf	postinc1,c
  6180                           
  6181                           ;stkvar	_rxData @ sp[(-2)+0]
  6182  002C46  0EFE               	movlw	-2
  6183  002C48  50E3               	movf	plusw1,w,c
  6184  002C4A  6EE6               	movwf	postinc1,c
  6185  002C4C  ECCC  F02F         	call	_run_checksum	;wreg free
  6186  002C50  0060  F0F4  F0B3   	movff	btemp,_V+83	;volatile
  6187  002C56  0060  F0F8  F0B4   	movff	btemp+1,_V+84	;volatile
  6188  002C5C                     l8921:
  6189                           
  6190                           ;gemsecs.c: 117:      if (rxData_l == r_block.length + 1)
  6191  002C5C  502F               	movf	m_protocol@rxData_l,w,c
  6192  002C5E  6E47               	movwf	btemp+10,c
  6193  002C60  6A48               	clrf	btemp+11,c
  6194  002C62  0100               	movlb	0	; () banked
  6195  002C64  51CE               	movf	(_r_block+12)& (0+255),w,b
  6196  002C66  6E45               	movwf	btemp+8,c
  6197  002C68  6A46               	clrf	btemp+9,c
  6198  002C6A  0E01               	movlw	1
  6199  002C6C  2645               	addwf	btemp+8,f,c
  6200  002C6E  0E00               	movlw	0
  6201  002C70  2246               	addwfc	btemp+9,f,c
  6202  002C72  5047               	movf	btemp+10,w,c
  6203  002C74  1845               	xorwf	btemp+8,w,c
  6204  002C76  E109               	bnz	l8925
  6205  002C78  5048               	movf	btemp+11,w,c
  6206  002C7A  1846               	xorwf	btemp+9,w,c
  6207  002C7C  A4D8               	btfss	status,2,c
  6208  002C7E  D005               	goto	l8925
  6209                           
  6210                           ; BSR set to: 0
  6211                           ;gemsecs.c: 118:       H10[1].checksum = (uint16_t) rxData << 8;
  6212                           ;stkvar	_rxData @ sp[(-1)+0]
  6213  002C80  0EFF               	movlw	-1
  6214  002C82  50E3               	movf	plusw1,w,c
  6215  002C84  0101               	movlb	1	; () banked
  6216  002C86  6F15               	movwf	(_H10+14)& (0+255),b
  6217  002C88  6B14               	clrf	(_H10+13)& (0+255),b
  6218  002C8A                     l8925:
  6219                           
  6220                           ;gemsecs.c: 119:      if (rxData_l == r_block.length + 2)
  6221  002C8A  502F               	movf	m_protocol@rxData_l,w,c
  6222  002C8C  6E47               	movwf	btemp+10,c
  6223  002C8E  6A48               	clrf	btemp+11,c
  6224  002C90  0100               	movlb	0	; () banked
  6225  002C92  51CE               	movf	(_r_block+12)& (0+255),w,b
  6226  002C94  6E45               	movwf	btemp+8,c
  6227  002C96  6A46               	clrf	btemp+9,c
  6228  002C98  0E02               	movlw	2
  6229  002C9A  2645               	addwf	btemp+8,f,c
  6230  002C9C  0E00               	movlw	0
  6231  002C9E  2246               	addwfc	btemp+9,f,c
  6232  002CA0  5047               	movf	btemp+10,w,c
  6233  002CA2  1845               	xorwf	btemp+8,w,c
  6234  002CA4  E10A               	bnz	l8929
  6235  002CA6  5048               	movf	btemp+11,w,c
  6236  002CA8  1846               	xorwf	btemp+9,w,c
  6237  002CAA  A4D8               	btfss	status,2,c
  6238  002CAC  D006               	goto	l8929
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;gemsecs.c: 120:       H10[1].checksum += rxData;
  6242                           ;stkvar	_rxData @ sp[(-1)+0]
  6243  002CAE  0EFF               	movlw	-1
  6244  002CB0  50E3               	movf	plusw1,w,c
  6245  002CB2  0101               	movlb	1	; () banked
  6246  002CB4  2714               	addwf	(_H10+13)& (0+255),f,b
  6247  002CB6  0E00               	movlw	0
  6248  002CB8  2315               	addwfc	(_H10+14)& (0+255),f,b
  6249  002CBA                     l8929:
  6250                           
  6251                           ;gemsecs.c: 122:      rxData_l++;
  6252  002CBA  2A2F               	incf	m_protocol@rxData_l,f,c
  6253                           
  6254                           ;gemsecs.c: 123:      if (rxData_l > (r_block.length + 2)) {
  6255  002CBC  502F               	movf	m_protocol@rxData_l,w,c
  6256  002CBE  6E47               	movwf	btemp+10,c
  6257  002CC0  6A48               	clrf	btemp+11,c
  6258  002CC2  0100               	movlb	0	; () banked
  6259  002CC4  51CE               	movf	(_r_block+12)& (0+255),w,b
  6260  002CC6  6E45               	movwf	btemp+8,c
  6261  002CC8  6A46               	clrf	btemp+9,c
  6262  002CCA  0E02               	movlw	2
  6263  002CCC  2645               	addwf	btemp+8,f,c
  6264  002CCE  0E00               	movlw	0
  6265  002CD0  2246               	addwfc	btemp+9,f,c
  6266  002CD2  5047               	movf	btemp+10,w,c
  6267  002CD4  5C45               	subwf	btemp+8,w,c
  6268  002CD6  5046               	movf	btemp+9,w,c
  6269  002CD8  0A80               	xorlw	128
  6270  002CDA  6E3D               	movwf	btemp,c
  6271  002CDC  5048               	movf	btemp+11,w,c
  6272  002CDE  0A80               	xorlw	128
  6273  002CE0  583D               	subwfb	btemp,w,c
  6274  002CE2  B0D8               	btfsc	status,0,c
  6275  002CE4  D02D               	goto	l8951
  6276                           
  6277                           ; BSR set to: 0
  6278                           ;gemsecs.c: 124:       if (V.r_checksum == H10[1].checksum) {
  6279  002CE6  0101               	movlb	1	; () banked
  6280  002CE8  5114               	movf	(_H10+13)& (0+255),w,b
  6281  002CEA  0100               	movlb	0	; () banked
  6282  002CEC  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  6283  002CEE  E10E               	bnz	l8939
  6284  002CF0  0101               	movlb	1	; () banked
  6285  002CF2  5115               	movf	(_H10+14)& (0+255),w,b
  6286  002CF4  0100               	movlb	0	; () banked
  6287  002CF6  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  6288  002CF8  A4D8               	btfss	status,2,c
  6289  002CFA  D008               	goto	l8939
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;gemsecs.c: 125:        *m_link = LINK_STATE_ACK;
  6293                           ;stkvar	_m_link @ sp[(-1)+-1]
  6294  002CFC  0EFE               	movlw	-2
  6295  002CFE  50E3               	movf	plusw1,w,c
  6296  002D00  6ED9               	movwf	fsr2l,c
  6297  002D02  6ADA               	clrf	fsr2h,c
  6298  002D04  0E03               	movlw	3
  6299  002D06  D01B               	goto	L17
  6300  002D08                     l8937:
  6301  002D08  ECBB  F02E         	call	_UART1_Read	;wreg free
  6302  002D0C                     l8939:
  6303                           
  6304                           ;gemsecs.c: 127:        while (UART1_is_rx_ready())
  6305  002D0C  ECAB  F032         	call	_UART1_is_rx_ready	;wreg free
  6306  002D10  503D               	movf	btemp,w,c
  6307  002D12  A4D8               	btfss	status,2,c
  6308  002D14  D7F9               	goto	l8937
  6309                           
  6310                           ;gemsecs.c: 129:        WaitMs(500);
  6311  002D16  0EF4               	movlw	244
  6312  002D18  6EE6               	movwf	postinc1,c
  6313  002D1A  0E01               	movlw	1
  6314  002D1C  6EE6               	movwf	postinc1,c
  6315  002D1E  EC14  F02F         	call	_WaitMs	;wreg free
  6316                           
  6317                           ;gemsecs.c: 130:        V.error = LINK_ERROR_CHECKSUM;
  6318  002D22  0E0F               	movlw	15
  6319  002D24  0100               	movlb	0	; () banked
  6320  002D26  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6321                           
  6322                           ; BSR set to: 0
  6323                           ;gemsecs.c: 131:        V.checksum_error++;
  6324  002D28  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  6325  002D2A  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;gemsecs.c: 132:        V.failed_receive = 3;
  6329  002D2C  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  6330  002D2E  0BF0               	andlw	-16
  6331  002D30  0903               	iorlw	3
  6332  002D32  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;gemsecs.c: 133:        *m_link = LINK_STATE_NAK;
  6336                           ;stkvar	_m_link @ sp[(-1)+-1]
  6337  002D34  0EFE               	movlw	-2
  6338  002D36  50E3               	movf	plusw1,w,c
  6339  002D38  6ED9               	movwf	fsr2l,c
  6340  002D3A  6ADA               	clrf	fsr2h,c
  6341  002D3C  0E05               	movlw	5
  6342  002D3E                     L17:
  6343  002D3E  6EDF               	movwf	indf2,c
  6344  002D40                     l8951:
  6345                           
  6346                           ;gemsecs.c: 139:    if (UART2_is_rx_ready()) {
  6347  002D40  ECA7  F032         	call	_UART2_is_rx_ready	;wreg free
  6348  002D44  503D               	movf	btemp,w,c
  6349  002D46  B4D8               	btfsc	status,2,c
  6350  002D48  D118               	goto	l9037
  6351                           
  6352                           ;gemsecs.c: 140:     rxData = UART2_Read();
  6353  002D4A  EC9C  F02E         	call	_UART2_Read	;wreg free
  6354                           
  6355                           ;stkvar	_rxData @ sp[(-1)+0]
  6356  002D4E  0EFF               	movlw	-1
  6357  002D50  0060  F0F7  FFE3   	movff	btemp,plusw1
  6358                           
  6359                           ; BSR set to: 57
  6360                           ;gemsecs.c: 141:     if (rxData_l == 0) {
  6361  002D56  502F               	movf	m_protocol@rxData_l,w,c
  6362  002D58  A4D8               	btfss	status,2,c
  6363  002D5A  D00C               	goto	l8963
  6364                           
  6365                           ; BSR set to: 57
  6366                           ;gemsecs.c: 142:      r_block.length = rxData;
  6367                           ;stkvar	_rxData @ sp[(-1)+0]
  6368  002D5C  0EFF               	movlw	-1
  6369  002D5E  006F FF8C  F0CE    	movff	plusw1,_r_block+12
  6370                           
  6371                           ; BSR set to: 57
  6372                           ;gemsecs.c: 143:      run_checksum(0, 1);
  6373  002D64  0E01               	movlw	1
  6374  002D66  6EE6               	movwf	postinc1,c
  6375  002D68  0E00               	movlw	0
  6376  002D6A  6EE6               	movwf	postinc1,c
  6377  002D6C  ECCC  F02F         	call	_run_checksum	;wreg free
  6378                           
  6379                           ;gemsecs.c: 144:      rxData_l++;
  6380  002D70  2A2F               	incf	m_protocol@rxData_l,f,c
  6381                           
  6382                           ;gemsecs.c: 145:     } else {
  6383  002D72  D103               	goto	l9037
  6384  002D74                     l8963:
  6385                           
  6386                           ; BSR set to: 57
  6387                           ;gemsecs.c: 149:      if (rxData_l <= sizeof(block10))
  6388  002D74  0E0B               	movlw	11
  6389  002D76  602F               	cpfslt	m_protocol@rxData_l,c
  6390  002D78  D00C               	goto	l8967
  6391                           
  6392                           ; BSR set to: 57
  6393                           ;gemsecs.c: 150:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  6394                           ;stkvar	_rxData @ sp[(-1)+0]
  6395  002D7A  502F               	movf	m_protocol@rxData_l,w,c
  6396  002D7C  0820               	sublw	low (_H10+25)
  6397  002D7E  6ED9               	movwf	fsr2l,c
  6398  002D80  0E00               	movlw	0
  6399  002D82  A0D8               	btfss	status,0,c
  6400  002D84  2AE8               	incf	wreg,f,c
  6401  002D86  0801               	sublw	high (_H10+25)
  6402  002D88  6EDA               	movwf	fsr2h,c
  6403  002D8A  0EFF               	movlw	-1
  6404  002D8C  006F FF8F FFDF     	movff	plusw1,indf2
  6405  002D92                     l8967:
  6406                           
  6407                           ; BSR set to: 57
  6408                           ;gemsecs.c: 151:      if (rxData_l <= r_block.length)
  6409  002D92  502F               	movf	m_protocol@rxData_l,w,c
  6410  002D94  0100               	movlb	0	; () banked
  6411  002D96  5DCE               	subwf	(_r_block+12)& (0+255),w,b
  6412  002D98  A0D8               	btfss	status,0,c
  6413  002D9A  D00D               	goto	l8971
  6414                           
  6415                           ; BSR set to: 0
  6416                           ;gemsecs.c: 152:       V.r_checksum = run_checksum(rxData, 0);
  6417  002D9C  0E00               	movlw	0
  6418  002D9E  6EE6               	movwf	postinc1,c
  6419                           
  6420                           ;stkvar	_rxData @ sp[(-2)+0]
  6421  002DA0  0EFE               	movlw	-2
  6422  002DA2  50E3               	movf	plusw1,w,c
  6423  002DA4  6EE6               	movwf	postinc1,c
  6424  002DA6  ECCC  F02F         	call	_run_checksum	;wreg free
  6425  002DAA  0060  F0F4  F0B3   	movff	btemp,_V+83	;volatile
  6426  002DB0  0060  F0F8  F0B4   	movff	btemp+1,_V+84	;volatile
  6427  002DB6                     l8971:
  6428                           
  6429                           ;gemsecs.c: 154:      if (rxData_l == r_block.length + 1)
  6430  002DB6  502F               	movf	m_protocol@rxData_l,w,c
  6431  002DB8  6E47               	movwf	btemp+10,c
  6432  002DBA  6A48               	clrf	btemp+11,c
  6433  002DBC  0100               	movlb	0	; () banked
  6434  002DBE  51CE               	movf	(_r_block+12)& (0+255),w,b
  6435  002DC0  6E45               	movwf	btemp+8,c
  6436  002DC2  6A46               	clrf	btemp+9,c
  6437  002DC4  0E01               	movlw	1
  6438  002DC6  2645               	addwf	btemp+8,f,c
  6439  002DC8  0E00               	movlw	0
  6440  002DCA  2246               	addwfc	btemp+9,f,c
  6441  002DCC  5047               	movf	btemp+10,w,c
  6442  002DCE  1845               	xorwf	btemp+8,w,c
  6443  002DD0  E109               	bnz	l8975
  6444  002DD2  5048               	movf	btemp+11,w,c
  6445  002DD4  1846               	xorwf	btemp+9,w,c
  6446  002DD6  A4D8               	btfss	status,2,c
  6447  002DD8  D005               	goto	l8975
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;gemsecs.c: 155:       H10[1].checksum = (uint16_t) rxData << 8;
  6451                           ;stkvar	_rxData @ sp[(-1)+0]
  6452  002DDA  0EFF               	movlw	-1
  6453  002DDC  50E3               	movf	plusw1,w,c
  6454  002DDE  0101               	movlb	1	; () banked
  6455  002DE0  6F15               	movwf	(_H10+14)& (0+255),b
  6456  002DE2  6B14               	clrf	(_H10+13)& (0+255),b
  6457  002DE4                     l8975:
  6458                           
  6459                           ;gemsecs.c: 156:      if (rxData_l == r_block.length + 2)
  6460  002DE4  502F               	movf	m_protocol@rxData_l,w,c
  6461  002DE6  6E47               	movwf	btemp+10,c
  6462  002DE8  6A48               	clrf	btemp+11,c
  6463  002DEA  0100               	movlb	0	; () banked
  6464  002DEC  51CE               	movf	(_r_block+12)& (0+255),w,b
  6465  002DEE  6E45               	movwf	btemp+8,c
  6466  002DF0  6A46               	clrf	btemp+9,c
  6467  002DF2  0E02               	movlw	2
  6468  002DF4  2645               	addwf	btemp+8,f,c
  6469  002DF6  0E00               	movlw	0
  6470  002DF8  2246               	addwfc	btemp+9,f,c
  6471  002DFA  5047               	movf	btemp+10,w,c
  6472  002DFC  1845               	xorwf	btemp+8,w,c
  6473  002DFE  E10A               	bnz	l8979
  6474  002E00  5048               	movf	btemp+11,w,c
  6475  002E02  1846               	xorwf	btemp+9,w,c
  6476  002E04  A4D8               	btfss	status,2,c
  6477  002E06  D006               	goto	l8979
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;gemsecs.c: 157:       H10[1].checksum += rxData;
  6481                           ;stkvar	_rxData @ sp[(-1)+0]
  6482  002E08  0EFF               	movlw	-1
  6483  002E0A  50E3               	movf	plusw1,w,c
  6484  002E0C  0101               	movlb	1	; () banked
  6485  002E0E  2714               	addwf	(_H10+13)& (0+255),f,b
  6486  002E10  0E00               	movlw	0
  6487  002E12  2315               	addwfc	(_H10+14)& (0+255),f,b
  6488  002E14                     l8979:
  6489                           
  6490                           ;gemsecs.c: 159:      rxData_l++;
  6491  002E14  2A2F               	incf	m_protocol@rxData_l,f,c
  6492                           
  6493                           ;gemsecs.c: 160:      if (rxData_l > (r_block.length + 2)) {
  6494  002E16  502F               	movf	m_protocol@rxData_l,w,c
  6495  002E18  6E47               	movwf	btemp+10,c
  6496  002E1A  6A48               	clrf	btemp+11,c
  6497  002E1C  0100               	movlb	0	; () banked
  6498  002E1E  51CE               	movf	(_r_block+12)& (0+255),w,b
  6499  002E20  6E45               	movwf	btemp+8,c
  6500  002E22  6A46               	clrf	btemp+9,c
  6501  002E24  0E02               	movlw	2
  6502  002E26  2645               	addwf	btemp+8,f,c
  6503  002E28  0E00               	movlw	0
  6504  002E2A  2246               	addwfc	btemp+9,f,c
  6505  002E2C  5047               	movf	btemp+10,w,c
  6506  002E2E  5C45               	subwf	btemp+8,w,c
  6507  002E30  5046               	movf	btemp+9,w,c
  6508  002E32  0A80               	xorlw	128
  6509  002E34  6E3D               	movwf	btemp,c
  6510  002E36  5048               	movf	btemp+11,w,c
  6511  002E38  0A80               	xorlw	128
  6512  002E3A  583D               	subwfb	btemp,w,c
  6513  002E3C  B0D8               	btfsc	status,0,c
  6514  002E3E  D09D               	goto	l9037
  6515                           
  6516                           ; BSR set to: 0
  6517                           ;gemsecs.c: 161:       if (V.r_checksum == H10[1].checksum) {
  6518  002E40  0101               	movlb	1	; () banked
  6519  002E42  5114               	movf	(_H10+13)& (0+255),w,b
  6520  002E44  0100               	movlb	0	; () banked
  6521  002E46  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  6522  002E48  E10E               	bnz	l8989
  6523  002E4A  0101               	movlb	1	; () banked
  6524  002E4C  5115               	movf	(_H10+14)& (0+255),w,b
  6525  002E4E  0100               	movlb	0	; () banked
  6526  002E50  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  6527  002E52  A4D8               	btfss	status,2,c
  6528  002E54  D008               	goto	l8989
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;gemsecs.c: 162:        *m_link = LINK_STATE_ACK;
  6532                           ;stkvar	_m_link @ sp[(-1)+-1]
  6533  002E56  0EFE               	movlw	-2
  6534  002E58  50E3               	movf	plusw1,w,c
  6535  002E5A  6ED9               	movwf	fsr2l,c
  6536  002E5C  6ADA               	clrf	fsr2h,c
  6537  002E5E  0E03               	movlw	3
  6538  002E60  D069               	goto	L20
  6539  002E62                     l8987:
  6540  002E62  EC9C  F02E         	call	_UART2_Read	;wreg free
  6541  002E66                     l8989:
  6542                           
  6543                           ;gemsecs.c: 164:        while (UART2_is_rx_ready())
  6544  002E66  ECA7  F032         	call	_UART2_is_rx_ready	;wreg free
  6545  002E6A  503D               	movf	btemp,w,c
  6546  002E6C  A4D8               	btfss	status,2,c
  6547  002E6E  D7F9               	goto	l8987
  6548                           
  6549                           ;gemsecs.c: 166:        WaitMs(500);
  6550  002E70  0EF4               	movlw	244
  6551  002E72  6EE6               	movwf	postinc1,c
  6552  002E74  0E01               	movlw	1
  6553  002E76  6EE6               	movwf	postinc1,c
  6554  002E78  EC14  F02F         	call	_WaitMs	;wreg free
  6555                           
  6556                           ;gemsecs.c: 167:        V.error = LINK_ERROR_CHECKSUM;
  6557  002E7C  0E0F               	movlw	15
  6558  002E7E  0100               	movlb	0	; () banked
  6559  002E80  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;gemsecs.c: 168:        V.checksum_error++;
  6563  002E82  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  6564  002E84  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  6565                           
  6566                           ; BSR set to: 0
  6567                           ;gemsecs.c: 169:        V.failed_receive = 4;
  6568  002E86  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  6569  002E88  0BF0               	andlw	-16
  6570  002E8A  0904               	iorlw	4
  6571  002E8C  D6A5               	goto	L19
  6572  002E8E                     l9001:
  6573                           
  6574                           ;gemsecs.c: 181:   V.stream = H10[1].block.block.stream;
  6575  002E8E  0101               	movlb	1	; () banked
  6576  002E90  511D               	movf	(_H10+22)& (0+255),w,b
  6577  002E92  0B7F               	andlw	127
  6578  002E94  0100               	movlb	0	; () banked
  6579  002E96  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;gemsecs.c: 182:   V.function = H10[1].block.block.function;
  6583  002E98  C11C  F0AF         	movff	_H10+21,_V+79	;volatile
  6584                           
  6585                           ; BSR set to: 0
  6586                           ;gemsecs.c: 183:   V.systemb = H10[1].block.block.systemb;
  6587  002E9C  C116  F0AA         	movff	_H10+15,_V+74	;volatile
  6588  002EA0  C117  F0AB         	movff	_H10+16,_V+75	;volatile
  6589  002EA4  C118  F0AC         	movff	_H10+17,_V+76	;volatile
  6590  002EA8  C119  F0AD         	movff	_H10+18,_V+77	;volatile
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;gemsecs.c: 184:   V.rbit = H10[1].block.block.rbit;
  6594  002EAC  0101               	movlb	1	; () banked
  6595  002EAE  AF1F               	btfss	(_H10+24)& (0+255),7,b
  6596  002EB0  D003               	bra	u5815
  6597  002EB2  0100               	movlb	0	; () banked
  6598  002EB4  81BB               	bsf	(_V+91)& (0+255),0,b	;volatile
  6599  002EB6  D002               	bra	u5817
  6600  002EB8                     u5815:
  6601  002EB8  0100               	movlb	0	; () banked
  6602  002EBA  91BB               	bcf	(_V+91)& (0+255),0,b	;volatile
  6603  002EBC                     u5817:
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;gemsecs.c: 185:   V.wbit = H10[1].block.block.wbit;
  6607  002EBC  0101               	movlb	1	; () banked
  6608  002EBE  AF1D               	btfss	(_H10+22)& (0+255),7,b
  6609  002EC0  D003               	bra	u5825
  6610  002EC2  0100               	movlb	0	; () banked
  6611  002EC4  83BB               	bsf	(_V+91)& (0+255),1,b	;volatile
  6612  002EC6  D002               	bra	u5827
  6613  002EC8                     u5825:
  6614  002EC8  0100               	movlb	0	; () banked
  6615  002ECA  93BB               	bcf	(_V+91)& (0+255),1,b	;volatile
  6616  002ECC                     u5827:
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;gemsecs.c: 186:   V.ebit = H10[1].block.block.ebit;
  6620  002ECC  0101               	movlb	1	; () banked
  6621  002ECE  AF1B               	btfss	(_H10+20)& (0+255),7,b
  6622  002ED0  D003               	bra	u5835
  6623  002ED2  0100               	movlb	0	; () banked
  6624  002ED4  85BB               	bsf	(_V+91)& (0+255),2,b	;volatile
  6625  002ED6  D002               	bra	u5837
  6626  002ED8                     u5835:
  6627  002ED8  0100               	movlb	0	; () banked
  6628  002EDA  95BB               	bcf	(_V+91)& (0+255),2,b	;volatile
  6629  002EDC                     u5837:
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;gemsecs.c: 187:   V.failed_receive = 0;
  6633  002EDC  0EF0               	movlw	-16
  6634  002EDE  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;gemsecs.c: 188:   V.g_state = secs_gem_state(V.stream, V.function);
  6638  002EE0  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  6639  002EE2  6EE6               	movwf	postinc1,c
  6640  002EE4  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  6641  002EE6  6EE6               	movwf	postinc1,c
  6642  002EE8  ECFC  F028         	call	_secs_gem_state	;wreg free
  6643  002EEC  503D               	movf	btemp,w,c
  6644  002EEE  0100               	movlb	0	; () banked
  6645  002EF0  6F62               	movwf	(_V+2)& (0+255),b	;volatile
  6646                           
  6647                           ; BSR set to: 0
  6648                           ;gemsecs.c: 189:   *m_link = LINK_STATE_DONE;
  6649                           ;stkvar	_m_link @ sp[(-1)+-1]
  6650  002EF2  0EFE               	movlw	-2
  6651  002EF4  50E3               	movf	plusw1,w,c
  6652  002EF6  6ED9               	movwf	fsr2l,c
  6653  002EF8  6ADA               	clrf	fsr2h,c
  6654  002EFA  0E04               	movlw	4
  6655  002EFC  D01B               	goto	L20
  6656  002EFE                     l9019:
  6657                           
  6658                           ;gemsecs.c: 192:   *m_link = LINK_STATE_ERROR;
  6659                           ;stkvar	_m_link @ sp[(-1)+-1]
  6660  002EFE  0EFE               	movlw	-2
  6661  002F00  50E3               	movf	plusw1,w,c
  6662  002F02  6ED9               	movwf	fsr2l,c
  6663  002F04  6ADA               	clrf	fsr2h,c
  6664  002F06  0E06               	movlw	6
  6665  002F08  6EDF               	movwf	indf2,c
  6666                           
  6667                           ;gemsecs.c: 193:   while ((uart1RxCount)) {
  6668  002F0A  D002               	goto	l9023
  6669  002F0C                     l9021:
  6670                           
  6671                           ;gemsecs.c: 194:    UART1_Read();
  6672  002F0C  ECBB  F02E         	call	_UART1_Read	;wreg free
  6673  002F10                     l9023:
  6674                           
  6675                           ;gemsecs.c: 193:   while ((uart1RxCount)) {
  6676  002F10  5037               	movf	_uart1RxCount,w,c	;volatile
  6677  002F12  B4D8               	btfsc	status,2,c
  6678  002F14  D003               	goto	l9027
  6679  002F16  D7FA               	goto	l9021
  6680  002F18                     l9025:
  6681                           
  6682                           ;gemsecs.c: 197:    UART2_Read();
  6683  002F18  EC9C  F02E         	call	_UART2_Read	;wreg free
  6684  002F1C                     l9027:
  6685                           
  6686                           ;gemsecs.c: 196:   while ((uart2RxCount)) {
  6687  002F1C  5031               	movf	_uart2RxCount,w,c	;volatile
  6688  002F1E  B4D8               	btfsc	status,2,c
  6689  002F20  D02C               	goto	l9037
  6690  002F22  D7FA               	goto	l9025
  6691  002F24                     l9029:
  6692                           
  6693                           ;gemsecs.c: 203:   V.failed_receive = 0;
  6694  002F24  0EF0               	movlw	-16
  6695  002F26  0100               	movlb	0	; () banked
  6696  002F28  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  6697  002F2A                     l9031:
  6698                           
  6699                           ;gemsecs.c: 205:   *m_link = LINK_STATE_IDLE;
  6700                           ;stkvar	_m_link @ sp[(-1)+-1]
  6701  002F2A  0EFE               	movlw	-2
  6702  002F2C  50E3               	movf	plusw1,w,c
  6703  002F2E  6ED9               	movwf	fsr2l,c
  6704  002F30  6ADA               	clrf	fsr2h,c
  6705  002F32  0E00               	movlw	0
  6706  002F34                     L20:
  6707  002F34  6EDF               	movwf	indf2,c
  6708                           
  6709                           ;gemsecs.c: 207:   break;
  6710  002F36  D021               	goto	l9037
  6711  002F38                     l9035:
  6712                           
  6713                           ;stkvar	_m_link @ sp[(-1)+-1]
  6714  002F38  0EFE               	movlw	-2
  6715  002F3A  50E3               	movf	plusw1,w,c
  6716  002F3C  6ED9               	movwf	fsr2l,c
  6717  002F3E  6ADA               	clrf	fsr2h,c
  6718  002F40  50DF               	movf	indf2,w,c
  6719  002F42  6E47               	movwf	btemp+10,c
  6720  002F44  6A48               	clrf	btemp+11,c
  6721                           
  6722                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6723                           ; Switch size 1, requested type "simple"
  6724                           ; Number of cases is 1, Range of values is 0 to 0
  6725                           ; switch strategies available:
  6726                           ; Name         Instructions Cycles
  6727                           ; simple_byte            4     3 (average)
  6728                           ;	Chosen strategy is simple_byte
  6729  002F46  5048               	movf	btemp+11,w,c
  6730  002F48  0A00               	xorlw	0	; case 0
  6731  002F4A  A4D8               	btfss	status,2,c
  6732  002F4C  D7EE               	goto	l9031
  6733                           
  6734                           ; Switch size 1, requested type "simple"
  6735                           ; Number of cases is 7, Range of values is 0 to 6
  6736                           ; switch strategies available:
  6737                           ; Name         Instructions Cycles
  6738                           ; simple_byte           22    12 (average)
  6739                           ;	Chosen strategy is simple_byte
  6740  002F4E  5047               	movf	btemp+10,w,c
  6741  002F50  0A00               	xorlw	0	; case 0
  6742  002F52  B4D8               	btfsc	status,2,c
  6743  002F54  D5D1               	goto	l8857
  6744  002F56  0A01               	xorlw	1	; case 1
  6745  002F58  B4D8               	btfsc	status,2,c
  6746  002F5A  D61C               	goto	l1581
  6747  002F5C  0A03               	xorlw	3	; case 2
  6748  002F5E  B4D8               	btfsc	status,2,c
  6749  002F60  D62C               	goto	l8891
  6750  002F62  0A01               	xorlw	1	; case 3
  6751  002F64  B4D8               	btfsc	status,2,c
  6752  002F66  D793               	goto	l9001
  6753  002F68  0A07               	xorlw	7	; case 4
  6754  002F6A  B4D8               	btfsc	status,2,c
  6755  002F6C  D7DB               	goto	l9029
  6756  002F6E  0A01               	xorlw	1	; case 5
  6757  002F70  B4D8               	btfsc	status,2,c
  6758  002F72  D7C5               	goto	l9019
  6759  002F74  0A03               	xorlw	3	; case 6
  6760  002F76  A4D8               	btfss	status,2,c
  6761  002F78  D7D8               	goto	l9031
  6762  002F7A                     l9037:
  6763                           
  6764                           ;gemsecs.c: 210:  return *m_link;
  6765                           ;stkvar	_m_link @ sp[(-1)+-1]
  6766  002F7A  0EFE               	movlw	-2
  6767  002F7C  50E3               	movf	plusw1,w,c
  6768  002F7E  6ED9               	movwf	fsr2l,c
  6769  002F80  6ADA               	clrf	fsr2h,c
  6770  002F82  50DF               	movf	indf2,w,c
  6771  002F84  6E3D               	movwf	btemp,c
  6772                           
  6773                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6774  002F86  52E5               	movf	postdec1,f,c
  6775  002F88  52E5               	movf	postdec1,f,c
  6776  002F8A  0012               	return		;funcret
  6777  002F8C                     __end_of_m_protocol:
  6778                           	opt callstack 0
  6779                           
  6780 ;; *************** function _secs_gem_state *****************
  6781 ;; Defined at:
  6782 ;;		line 635 in file "gemsecs.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;  stream          1  [STACK] unsigned char 
  6785 ;;  function        1  [STACK] unsigned char 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  1  [STACK] enum E16163
  6790 ;; Registers used:
  6791 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
  6792 ;; Tracked objects:
  6793 ;;		On entry : 3F/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6801 ;;Total ram usage:        0 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; Hardware stack levels required when called:    3
  6804 ;; This function calls:
  6805 ;;		Nothing
  6806 ;; This function is called by:
  6807 ;;		_m_protocol
  6808 ;;		_r_protocol
  6809 ;; This function uses a reentrant model
  6810 ;;
  6811                           
  6812                           	psect	text15
  6813  0051F8                     __ptext15:
  6814                           	opt callstack 0
  6815  0051F8                     _secs_gem_state:
  6816                           	opt callstack 26
  6817                           
  6818                           ;gemsecs.c: 635: GEM_STATES secs_gem_state(uint8_t stream, uint8_t function);gemsecs.c: 
      +                          636: {;gemsecs.c: 637:  static GEM_STATES block = GEM_STATE_DISABLE;;gemsecs.c: 639:  sw
      +                          itch (stream) {
  6819                           
  6820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6821                           ;incstack = 0
  6822  0051F8  D041               	goto	l6389
  6823  0051FA                     l6345:
  6824                           
  6825                           ;gemsecs.c: 646:    block = GEM_STATE_REMOTE;
  6826  0051FA  0E04               	movlw	4
  6827  0051FC                     L22:
  6828  0051FC  6E2B               	movwf	secs_gem_state@block,c
  6829                           
  6830                           ;gemsecs.c: 647:    V.ticker = 0;
  6831  0051FE  0100               	movlb	0	; () banked
  6832  005200  6BC1               	clrf	(_V+97)& (0+255),b	;volatile
  6833                           
  6834                           ;gemsecs.c: 648:    break;
  6835  005202  D04F               	goto	l6391
  6836  005204                     l6349:
  6837                           
  6838                           ;gemsecs.c: 653:    block = GEM_STATE_COMM;
  6839  005204  0E01               	movlw	1
  6840  005206  6E2B               	movwf	secs_gem_state@block,c
  6841                           
  6842                           ;gemsecs.c: 654:    V.ticker = 15;
  6843  005208  0E0F               	movlw	15
  6844  00520A  D035               	goto	L24
  6845  00520C                     l6351:
  6846                           
  6847                           ;gemsecs.c: 660:    block = GEM_STATE_OFFLINE;
  6848  00520C  0E02               	movlw	2
  6849  00520E  D7F6               	goto	L22
  6850  005210                     l6355:
  6851                           
  6852                           ;gemsecs.c: 667:    block = GEM_STATE_ONLINE;
  6853  005210  0E03               	movlw	3
  6854  005212  D7F4               	goto	L22
  6855  005214                     l6359:
  6856                           
  6857                           ;gemsecs.c: 671:    if (block == GEM_STATE_DISABLE) {
  6858  005214  502B               	movf	secs_gem_state@block,w,c
  6859  005216  B4D8               	btfsc	status,2,c
  6860  005218  D7F5               	goto	l6349
  6861  00521A  D043               	goto	l6391
  6862  00521C                     l6365:
  6863                           
  6864                           ;stkvar	_function @ sp[(0)+-2]
  6865  00521C  0EFE               	movlw	-2
  6866  00521E  50E3               	movf	plusw1,w,c
  6867  005220  6E47               	movwf	btemp+10,c
  6868  005222  6A48               	clrf	btemp+11,c
  6869                           
  6870                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6871                           ; Switch size 1, requested type "simple"
  6872                           ; Number of cases is 1, Range of values is 0 to 0
  6873                           ; switch strategies available:
  6874                           ; Name         Instructions Cycles
  6875                           ; simple_byte            4     3 (average)
  6876                           ;	Chosen strategy is simple_byte
  6877  005224  5048               	movf	btemp+11,w,c
  6878  005226  0A00               	xorlw	0	; case 0
  6879  005228  A4D8               	btfss	status,2,c
  6880  00522A  D7F4               	goto	l6359
  6881                           
  6882                           ; Switch size 1, requested type "simple"
  6883                           ; Number of cases is 4, Range of values is 2 to 18
  6884                           ; switch strategies available:
  6885                           ; Name         Instructions Cycles
  6886                           ; simple_byte           13     7 (average)
  6887                           ;	Chosen strategy is simple_byte
  6888  00522C  5047               	movf	btemp+10,w,c
  6889  00522E  0A02               	xorlw	2	; case 2
  6890  005230  B4D8               	btfsc	status,2,c
  6891  005232  D7E3               	goto	l6345
  6892  005234  0A0C               	xorlw	12	; case 14
  6893  005236  B4D8               	btfsc	status,2,c
  6894  005238  D7E5               	goto	l6349
  6895  00523A  0A1E               	xorlw	30	; case 16
  6896  00523C  B4D8               	btfsc	status,2,c
  6897  00523E  D7E6               	goto	l6351
  6898  005240  0A02               	xorlw	2	; case 18
  6899  005242  B4D8               	btfsc	status,2,c
  6900  005244  D7E5               	goto	l6355
  6901  005246  D7E6               	goto	l6359
  6902  005248                     l6367:
  6903                           
  6904                           ;gemsecs.c: 681:    block = GEM_STATE_ALARM;
  6905  005248  0E05               	movlw	5
  6906  00524A  6E2B               	movwf	secs_gem_state@block,c
  6907                           
  6908                           ;gemsecs.c: 682:    if (V.ticker != 45)
  6909  00524C  0E2D               	movlw	45
  6910  00524E  0100               	movlb	0	; () banked
  6911  005250  19C1               	xorwf	(_V+97)& (0+255),w,b	;volatile
  6912  005252  B4D8               	btfsc	status,2,c
  6913  005254  D026               	goto	l6391
  6914  005256                     u3450:
  6915                           
  6916                           ; BSR set to: 0
  6917                           ;gemsecs.c: 683:     V.ticker = 15;
  6918  005256  0E0F               	movlw	15
  6919  005258  D00F               	goto	L23
  6920  00525A                     l6375:
  6921                           
  6922                           ;gemsecs.c: 690:    block = GEM_STATE_ERROR;
  6923  00525A  0E06               	movlw	6
  6924  00525C  6E2B               	movwf	secs_gem_state@block,c
  6925                           
  6926                           ;gemsecs.c: 691:    if (V.ticker != 45)
  6927  00525E  0E2D               	movlw	45
  6928  005260  0100               	movlb	0	; () banked
  6929  005262  19C1               	xorwf	(_V+97)& (0+255),w,b	;volatile
  6930  005264  A4D8               	btfss	status,2,c
  6931  005266  D7F7               	goto	u3450
  6932  005268  D01C               	goto	l6391
  6933  00526A                     l6383:
  6934                           
  6935                           ;gemsecs.c: 697:   if (block == GEM_STATE_DISABLE) {
  6936  00526A  502B               	movf	secs_gem_state@block,w,c
  6937  00526C  A4D8               	btfss	status,2,c
  6938  00526E  D019               	goto	l6391
  6939                           
  6940                           ;gemsecs.c: 698:    block = GEM_STATE_COMM;
  6941  005270  0E01               	movlw	1
  6942  005272  6E2B               	movwf	secs_gem_state@block,c
  6943                           
  6944                           ;gemsecs.c: 699:    V.ticker = 45;
  6945  005274  0E2D               	movlw	45
  6946  005276                     L24:
  6947  005276  0100               	movlb	0	; () banked
  6948  005278                     L23:
  6949  005278  6FC1               	movwf	(_V+97)& (0+255),b	;volatile
  6950  00527A  D013               	goto	l6391
  6951  00527C                     l6389:
  6952                           
  6953                           ;stkvar	_stream @ sp[(0)+-1]
  6954  00527C  0EFF               	movlw	-1
  6955  00527E  50E3               	movf	plusw1,w,c
  6956  005280  6E47               	movwf	btemp+10,c
  6957  005282  6A48               	clrf	btemp+11,c
  6958                           
  6959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6960                           ; Switch size 1, requested type "simple"
  6961                           ; Number of cases is 1, Range of values is 0 to 0
  6962                           ; switch strategies available:
  6963                           ; Name         Instructions Cycles
  6964                           ; simple_byte            4     3 (average)
  6965                           ;	Chosen strategy is simple_byte
  6966  005284  5048               	movf	btemp+11,w,c
  6967  005286  0A00               	xorlw	0	; case 0
  6968  005288  A4D8               	btfss	status,2,c
  6969  00528A  D7EF               	goto	l6383
  6970                           
  6971                           ; Switch size 1, requested type "simple"
  6972                           ; Number of cases is 3, Range of values is 1 to 9
  6973                           ; switch strategies available:
  6974                           ; Name         Instructions Cycles
  6975                           ; simple_byte           10     6 (average)
  6976                           ;	Chosen strategy is simple_byte
  6977  00528C  5047               	movf	btemp+10,w,c
  6978  00528E  0A01               	xorlw	1	; case 1
  6979  005290  B4D8               	btfsc	status,2,c
  6980  005292  D7C4               	goto	l6365
  6981  005294  0A04               	xorlw	4	; case 5
  6982  005296  B4D8               	btfsc	status,2,c
  6983  005298  D7D7               	goto	l6367
  6984  00529A  0A0C               	xorlw	12	; case 9
  6985  00529C  B4D8               	btfsc	status,2,c
  6986  00529E  D7DD               	goto	l6375
  6987  0052A0  D7E4               	goto	l6383
  6988  0052A2                     l6391:
  6989                           
  6990                           ;gemsecs.c: 704:  return(block);
  6991  0052A2  0060  F0AC  F03D   	movff	secs_gem_state@block,btemp
  6992                           
  6993                           ; _secs_gem_state: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
  6994  0052A8  52E5               	movf	postdec1,f,c
  6995  0052AA  52E5               	movf	postdec1,f,c
  6996  0052AC  0012               	return		;funcret
  6997  0052AE                     __end_of_secs_gem_state:
  6998                           	opt callstack 0
  6999                           
  7000 ;; *************** function _run_checksum *****************
  7001 ;; Defined at:
  7002 ;;		line 36 in file "gemsecs.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;  byte_block      1  [STACK] unsigned char 
  7005 ;;  clear           1  [STACK] _Bool 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;		None
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  2  [STACK] unsigned short 
  7010 ;; Registers used:
  7011 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  7012 ;; Tracked objects:
  7013 ;;		On entry : 6/39
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7021 ;;Total ram usage:        0 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; Hardware stack levels required when called:    3
  7024 ;; This function calls:
  7025 ;;		Nothing
  7026 ;; This function is called by:
  7027 ;;		_m_protocol
  7028 ;;		_r_protocol
  7029 ;; This function uses a reentrant model
  7030 ;;
  7031                           
  7032                           	psect	text16
  7033  005F98                     __ptext16:
  7034                           	opt callstack 0
  7035  005F98                     _run_checksum:
  7036                           	opt callstack 26
  7037                           
  7038                           ;gemsecs.c: 36: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 37: {;
      +                          gemsecs.c: 38:  static uint16_t sum = 0;;gemsecs.c: 40:  if (clear)
  7039                           ;stkvar	_clear @ sp[(0)+-2]
  7040                           
  7041                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7042                           ;incstack = 0
  7043  005F98  0EFE               	movlw	-2
  7044  005F9A  50E3               	movf	plusw1,w,c
  7045  005F9C  B4D8               	btfsc	status,2,c
  7046  005F9E  D002               	goto	l6337
  7047                           
  7048                           ;gemsecs.c: 41:   sum = 0;
  7049  005FA0  6A25               	clrf	run_checksum@sum,c
  7050  005FA2  6A26               	clrf	run_checksum@sum+1,c
  7051  005FA4                     l6337:
  7052                           
  7053                           ;gemsecs.c: 43:  sum += byte_block;
  7054                           ;stkvar	_byte_block @ sp[(0)+-1]
  7055  005FA4  0EFF               	movlw	-1
  7056  005FA6  50E3               	movf	plusw1,w,c
  7057  005FA8  2625               	addwf	run_checksum@sum,f,c
  7058  005FAA  0E00               	movlw	0
  7059  005FAC  2226               	addwfc	run_checksum@sum+1,f,c
  7060                           
  7061                           ;gemsecs.c: 44:  return sum;
  7062  005FAE  0060  F094  F03D   	movff	run_checksum@sum,btemp
  7063  005FB4  0060  F098  F03E   	movff	run_checksum@sum+1,btemp+1
  7064                           
  7065                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  7066  005FBA  52E5               	movf	postdec1,f,c
  7067  005FBC  52E5               	movf	postdec1,f,c
  7068  005FBE  0012               	return		;funcret
  7069  005FC0                     __end_of_run_checksum:
  7070                           	opt callstack 0
  7071                           
  7072 ;; *************** function _WaitMs *****************
  7073 ;; Defined at:
  7074 ;;		line 32 in file "timers.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;  numMilliseco    2  [STACK] unsigned short 
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;		None
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  1  [STACK] void 
  7081 ;; Registers used:
  7082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7092 ;;Total ram usage:        0 bytes
  7093 ;; Hardware stack levels used:    1
  7094 ;; Hardware stack levels required when called:    4
  7095 ;; This function calls:
  7096 ;;		_StartTimer
  7097 ;;		_TimerDone
  7098 ;; This function is called by:
  7099 ;;		_main
  7100 ;;		_m_protocol
  7101 ;;		_r_protocol
  7102 ;; This function uses a reentrant model
  7103 ;;
  7104                           
  7105                           	psect	text17
  7106  005E28                     __ptext17:
  7107                           	opt callstack 0
  7108  005E28                     _WaitMs:
  7109                           	opt callstack 25
  7110                           
  7111                           ;timers.c: 32: void WaitMs(uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  7112                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  7113                           
  7114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7115                           ;incstack = 0
  7116  005E28  0EFE               	movlw	-2
  7117  005E2A  006F FF8F FFE6     	movff	plusw1,postinc1
  7118  005E30  006F FF8F FFE6     	movff	plusw1,postinc1
  7119  005E36  0E00               	movlw	0
  7120  005E38  6EE6               	movwf	postinc1,c
  7121  005E3A  ECDA  F02E         	call	_StartTimer	;wreg free
  7122                           
  7123                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  7124  005E3E  D005               	goto	l6279
  7125  005E40                     l1814:
  7126                           
  7127                           ;timers.c: 36:   __nop();
  7128  005E40  F000               	nop	
  7129                           
  7130                           ;timers.c: 37:   __nop();
  7131  005E42  F000               	nop	
  7132                           
  7133                           ;timers.c: 38:   __nop();
  7134  005E44  F000               	nop	
  7135                           
  7136                           ;timers.c: 39:   __nop();
  7137  005E46  F000               	nop	
  7138  005E48  0004               	clrwdt		;# 
  7139  005E4A                     l6279:
  7140                           
  7141                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  7142  005E4A  0E00               	movlw	0
  7143  005E4C  6EE6               	movwf	postinc1,c
  7144  005E4E  EC47  F031         	call	_TimerDone	;wreg free
  7145  005E52  503D               	movf	btemp,w,c
  7146  005E54  B4D8               	btfsc	status,2,c
  7147  005E56  D7F4               	goto	l1814
  7148                           
  7149                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  7150  005E58  52E5               	movf	postdec1,f,c
  7151  005E5A  52E5               	movf	postdec1,f,c
  7152  005E5C  0012               	return		;funcret
  7153  005E5E                     __end_of_WaitMs:
  7154                           	opt callstack 0
  7155                           
  7156 ;; *************** function _TimerDone *****************
  7157 ;; Defined at:
  7158 ;;		line 20 in file "timers.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;  timer           1  [STACK] unsigned char 
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;		None
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  1  [STACK] _Bool 
  7165 ;; Registers used:
  7166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7176 ;;Total ram usage:        0 bytes
  7177 ;; Hardware stack levels used:    1
  7178 ;; Hardware stack levels required when called:    3
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		_m_protocol
  7183 ;;		_r_protocol
  7184 ;;		_t_protocol
  7185 ;;		_WaitMs
  7186 ;; This function uses a reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text18
  7190  00628E                     __ptext18:
  7191                           	opt callstack 0
  7192  00628E                     _TimerDone:
  7193                           	opt callstack 26
  7194                           
  7195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7196                           ;incstack = 0
  7197  00628E  0004               	clrwdt		;# 
  7198                           
  7199                           ;timers.c: 23:  if (tickCount[timer] == 0) {
  7200                           ;stkvar	_timer @ sp[(0)+-1]
  7201  006290  0EFF               	movlw	-1
  7202  006292  50E3               	movf	plusw1,w,c
  7203  006294  0D02               	mullw	2
  7204  006296  50F3               	movf	prodl,w,c
  7205  006298  0FDB               	addlw	low _tickCount
  7206  00629A  6ED9               	movwf	fsr2l,c
  7207  00629C  6ADA               	clrf	fsr2h,c
  7208  00629E  50DE               	movf	postinc2,w,c
  7209  0062A0  10DE               	iorwf	postinc2,w,c
  7210  0062A2  A4D8               	btfss	status,2,c
  7211  0062A4  D002               	goto	l5885
  7212                           
  7213                           ;timers.c: 24:   return 1;
  7214  0062A6  0E01               	movlw	1
  7215  0062A8  D001               	goto	L25
  7216  0062AA                     l5885:
  7217                           
  7218                           ;timers.c: 26:  return 0;
  7219  0062AA  0E00               	movlw	0
  7220  0062AC                     L25:
  7221  0062AC  6E3D               	movwf	btemp,c
  7222                           
  7223                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7224  0062AE  52E5               	movf	postdec1,f,c
  7225  0062B0  0012               	return		;funcret
  7226  0062B2                     __end_of_TimerDone:
  7227                           	opt callstack 0
  7228                           
  7229 ;; *************** function _StartTimer *****************
  7230 ;; Defined at:
  7231 ;;		line 12 in file "timers.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;  timer           1  [STACK] unsigned char 
  7234 ;;  count           2  [STACK] unsigned short 
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;		None
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1  [STACK] void 
  7239 ;; Registers used:
  7240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/39
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7250 ;;Total ram usage:        0 bytes
  7251 ;; Hardware stack levels used:    1
  7252 ;; Hardware stack levels required when called:    3
  7253 ;; This function calls:
  7254 ;;		Nothing
  7255 ;; This function is called by:
  7256 ;;		_m_protocol
  7257 ;;		_r_protocol
  7258 ;;		_t_protocol
  7259 ;;		_WaitMs
  7260 ;; This function uses a reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text19
  7264  005DB4                     __ptext19:
  7265                           	opt callstack 0
  7266  005DB4                     _StartTimer:
  7267                           	opt callstack 26
  7268                           
  7269                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  7270                           ;stkvar	_count @ sp[(0)+-3]
  7271                           
  7272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7273                           ;incstack = 0
  7274  005DB4  0EFD               	movlw	-3
  7275  005DB6  006F FF8C  F047    	movff	plusw1,btemp+10
  7276  005DBC  0EFE               	movlw	-2
  7277  005DBE  006F FF8C  F048    	movff	plusw1,btemp+11
  7278  005DC4  90D8               	bcf	status,0,c
  7279  005DC6  3447               	rlcf	btemp+10,w,c
  7280  005DC8  6E45               	movwf	btemp+8,c
  7281  005DCA  3448               	rlcf	btemp+11,w,c
  7282  005DCC  6E46               	movwf	btemp+9,c
  7283                           
  7284                           ;stkvar	_timer @ sp[(0)+-1]
  7285  005DCE  0EFF               	movlw	-1
  7286  005DD0  50E3               	movf	plusw1,w,c
  7287  005DD2  0D02               	mullw	2
  7288  005DD4  50F3               	movf	prodl,w,c
  7289  005DD6  0FDB               	addlw	low _tickCount
  7290  005DD8  6ED9               	movwf	fsr2l,c
  7291  005DDA  6ADA               	clrf	fsr2h,c
  7292  005DDC  0060  F117  FFDE   	movff	btemp+8,postinc2
  7293  005DE2  0060  F11B  FFDD   	movff	btemp+9,postdec2
  7294                           
  7295                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  7296  005DE8  52E5               	movf	postdec1,f,c
  7297  005DEA  52E5               	movf	postdec1,f,c
  7298  005DEC  52E5               	movf	postdec1,f,c
  7299  005DEE  0012               	return		;funcret
  7300  005DF0                     __end_of_StartTimer:
  7301                           	opt callstack 0
  7302                           
  7303 ;; *************** function _UART2_is_rx_ready *****************
  7304 ;; Defined at:
  7305 ;;		line 137 in file "mcc_generated_files/uart2.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;		None
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;		None
  7310 ;; Return value:  Size  Location     Type
  7311 ;;                  1  [STACK] unsigned char 
  7312 ;; Registers used:
  7313 ;;		btemp
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7323 ;;Total ram usage:        0 bytes
  7324 ;; Hardware stack levels used:    1
  7325 ;; Hardware stack levels required when called:    3
  7326 ;; This function calls:
  7327 ;;		Nothing
  7328 ;; This function is called by:
  7329 ;;		_m_protocol
  7330 ;; This function uses a reentrant model
  7331 ;;
  7332                           
  7333                           	psect	text20
  7334  00654E                     __ptext20:
  7335                           	opt callstack 0
  7336  00654E                     _UART2_is_rx_ready:
  7337                           	opt callstack 26
  7338                           
  7339                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  7340                           
  7341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7342                           ;incstack = 0
  7343  00654E  0060  F0C4  F03D   	movff	_uart2RxCount,btemp	;volatile
  7344                           
  7345                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7346  006554  0012               	return		;funcret
  7347  006556                     __end_of_UART2_is_rx_ready:
  7348                           	opt callstack 0
  7349                           
  7350 ;; *************** function _UART2_Read *****************
  7351 ;; Defined at:
  7352 ;;		line 152 in file "mcc_generated_files/uart2.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;		None
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  readValue       1  [STACK] unsigned char 
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  1  [STACK] unsigned char 
  7359 ;; Registers used:
  7360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 3F/39
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7370 ;;Total ram usage:        0 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; Hardware stack levels required when called:    3
  7373 ;; This function calls:
  7374 ;;		Nothing
  7375 ;; This function is called by:
  7376 ;;		_m_protocol
  7377 ;; This function uses a reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text21
  7381  005D38                     __ptext21:
  7382                           	opt callstack 0
  7383  005D38                     _UART2_Read:
  7384                           	opt callstack 0
  7385                           
  7386                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7387  005D38  52E6               	movf	postinc1,f,c
  7388  005D3A                     
  7389                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  7390                           
  7391                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  7392  005D3A  5031               	movf	_uart2RxCount,w,c	;volatile
  7393  005D3C  B4D8               	btfsc	status,2,c
  7394  005D3E  D7FD               	goto	l6241
  7395                           
  7396                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  7397  005D40  0E00               	movlw	low _uart2RxBuffer
  7398  005D42  2432               	addwf	_uart2RxTail,w,c	;volatile
  7399  005D44  6ED9               	movwf	fsr2l,c
  7400  005D46  6ADA               	clrf	fsr2h,c
  7401  005D48  0E02               	movlw	high _uart2RxBuffer
  7402  005D4A  22DA               	addwfc	fsr2h,f,c
  7403  005D4C  50DF               	movf	indf2,w,c
  7404  005D4E  6E48               	movwf	btemp+11,c
  7405                           
  7406                           ;stkvar	_readValue @ sp[(-1)+0]
  7407  005D50  0EFF               	movlw	-1
  7408  005D52  0060  F123  FFE3   	movff	btemp+11,plusw1
  7409  005D58  2A32               	incf	_uart2RxTail,f,c	;volatile
  7410                           
  7411                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  7412  005D5A  0E3F               	movlw	63
  7413  005D5C  6432               	cpfsgt	_uart2RxTail,c
  7414  005D5E  D001               	goto	l692
  7415                           
  7416                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  7417  005D60  6A32               	clrf	_uart2RxTail,c	;volatile
  7418  005D62                     l692:
  7419                           
  7420                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  7421  005D62  0139               	movlb	57	; () banked
  7422  005D64  9596               	bcf	150,2,b	;volatile
  7423                           
  7424                           ; BSR set to: 57
  7425                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  7426  005D66  0631               	decf	_uart2RxCount,f,c	;volatile
  7427                           
  7428                           ; BSR set to: 57
  7429                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  7430  005D68  8596               	bsf	150,2,b	;volatile
  7431                           
  7432                           ; BSR set to: 57
  7433                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  7434                           ;stkvar	_readValue @ sp[(-1)+0]
  7435  005D6A  0EFF               	movlw	-1
  7436  005D6C  006F FF8C  F03D    	movff	plusw1,btemp
  7437                           
  7438                           ; BSR set to: 57
  7439                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7440  005D72  52E5               	movf	postdec1,f,c
  7441  005D74  0012               	return		;funcret
  7442  005D76                     __end_of_UART2_Read:
  7443                           	opt callstack 0
  7444                           
  7445 ;; *************** function _UART1_is_rx_ready *****************
  7446 ;; Defined at:
  7447 ;;		line 146 in file "mcc_generated_files/uart1.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;		None
  7450 ;; Auto vars:     Size  Location     Type
  7451 ;;		None
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  1  [STACK] unsigned char 
  7454 ;; Registers used:
  7455 ;;		btemp
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7465 ;;Total ram usage:        0 bytes
  7466 ;; Hardware stack levels used:    1
  7467 ;; Hardware stack levels required when called:    3
  7468 ;; This function calls:
  7469 ;;		Nothing
  7470 ;; This function is called by:
  7471 ;;		_m_protocol
  7472 ;;		_r_protocol
  7473 ;;		_t_protocol
  7474 ;; This function uses a reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text22
  7478  006556                     __ptext22:
  7479                           	opt callstack 0
  7480  006556                     _UART1_is_rx_ready:
  7481                           	opt callstack 26
  7482                           
  7483                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  7484                           
  7485                           ; BSR set to: 57
  7486                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7487                           ;incstack = 0
  7488  006556  0060  F0DC  F03D   	movff	_uart1RxCount,btemp	;volatile
  7489                           
  7490                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7491  00655C  0012               	return		;funcret
  7492  00655E                     __end_of_UART1_is_rx_ready:
  7493                           	opt callstack 0
  7494                           
  7495 ;; *************** function _UART1_Read *****************
  7496 ;; Defined at:
  7497 ;;		line 161 in file "mcc_generated_files/uart1.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;		None
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;  readValue       1  [STACK] unsigned char 
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  1  [STACK] unsigned char 
  7504 ;; Registers used:
  7505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 3F/39
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7515 ;;Total ram usage:        0 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:    3
  7518 ;; This function calls:
  7519 ;;		Nothing
  7520 ;; This function is called by:
  7521 ;;		_m_protocol
  7522 ;;		_r_protocol
  7523 ;;		_t_protocol
  7524 ;; This function uses a reentrant model
  7525 ;;
  7526                           
  7527                           	psect	text23
  7528  005D76                     __ptext23:
  7529                           	opt callstack 0
  7530  005D76                     _UART1_Read:
  7531                           	opt callstack 0
  7532                           
  7533                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7534  005D76  52E6               	movf	postinc1,f,c
  7535  005D78                     
  7536                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  7537                           
  7538                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  7539  005D78  5037               	movf	_uart1RxCount,w,c	;volatile
  7540  005D7A  B4D8               	btfsc	status,2,c
  7541  005D7C  D7FD               	goto	l6217
  7542                           
  7543                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  7544  005D7E  0E80               	movlw	low _uart1RxBuffer
  7545  005D80  2438               	addwf	_uart1RxTail,w,c	;volatile
  7546  005D82  6ED9               	movwf	fsr2l,c
  7547  005D84  6ADA               	clrf	fsr2h,c
  7548  005D86  0E02               	movlw	high _uart1RxBuffer
  7549  005D88  22DA               	addwfc	fsr2h,f,c
  7550  005D8A  50DF               	movf	indf2,w,c
  7551  005D8C  6E48               	movwf	btemp+11,c
  7552                           
  7553                           ;stkvar	_readValue @ sp[(-1)+0]
  7554  005D8E  0EFF               	movlw	-1
  7555  005D90  0060  F123  FFE3   	movff	btemp+11,plusw1
  7556  005D96  2A38               	incf	_uart1RxTail,f,c	;volatile
  7557                           
  7558                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  7559  005D98  0E3F               	movlw	63
  7560  005D9A  6438               	cpfsgt	_uart1RxTail,c
  7561  005D9C  D001               	goto	l572
  7562                           
  7563                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  7564  005D9E  6A38               	clrf	_uart1RxTail,c	;volatile
  7565  005DA0                     l572:
  7566                           
  7567                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  7568  005DA0  0139               	movlb	57	; () banked
  7569  005DA2  9793               	bcf	147,3,b	;volatile
  7570                           
  7571                           ; BSR set to: 57
  7572                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  7573  005DA4  0637               	decf	_uart1RxCount,f,c	;volatile
  7574                           
  7575                           ; BSR set to: 57
  7576                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  7577  005DA6  8793               	bsf	147,3,b	;volatile
  7578                           
  7579                           ; BSR set to: 57
  7580                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  7581                           ;stkvar	_readValue @ sp[(-1)+0]
  7582  005DA8  0EFF               	movlw	-1
  7583  005DAA  006F FF8C  F03D    	movff	plusw1,btemp
  7584                           
  7585                           ; BSR set to: 57
  7586                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7587  005DB0  52E5               	movf	postdec1,f,c
  7588  005DB2  0012               	return		;funcret
  7589  005DB4                     __end_of_UART1_Read:
  7590                           	opt callstack 0
  7591                           
  7592 ;; *************** function _init_display *****************
  7593 ;; Defined at:
  7594 ;;		line 35 in file "eadog.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;		None
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;		None
  7599 ;; Return value:  Size  Location     Type
  7600 ;;                  1  [STACK] void 
  7601 ;; Registers used:
  7602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7603 ;; Tracked objects:
  7604 ;;		On entry : 0/0
  7605 ;;		On exit  : 3F/3D
  7606 ;;		Unchanged: 0/0
  7607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7612 ;;Total ram usage:        0 bytes
  7613 ;; Hardware stack levels used:    1
  7614 ;; Hardware stack levels required when called:    5
  7615 ;; This function calls:
  7616 ;;		_ringBufS_init
  7617 ;;		_send_lcd_cmd
  7618 ;;		_send_lcd_cmd_long
  7619 ;;		_wdtdelay
  7620 ;; This function is called by:
  7621 ;;		_main
  7622 ;; This function uses a reentrant model
  7623 ;;
  7624                           
  7625                           	psect	text24
  7626  004EA4                     __ptext24:
  7627                           	opt callstack 0
  7628  004EA4                     _init_display:
  7629                           	opt callstack 25
  7630                           
  7631                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  7632                           
  7633                           ; BSR set to: 57
  7634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7635                           ;incstack = 0
  7636  004EA4  0E43               	movlw	low _ring_buf1
  7637  004EA6  0100               	movlb	0	; () banked
  7638  004EA8  6FD5               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7639  004EAA  0E03               	movlw	high _ring_buf1
  7640  004EAC  6FD6               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7641                           
  7642                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  7643  004EAE  0E00               	movlw	low _ring_buf2
  7644  004EB0  6FD3               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7645  004EB2  0E03               	movlw	high _ring_buf2
  7646  004EB4  6FD4               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  7650  004EB6  0060  F357  FFE6   	movff	_spi_link+6,postinc1
  7651  004EBC  0060  F35B  FFE6   	movff	_spi_link+7,postinc1
  7652  004EC2  EC08  F030         	call	_ringBufS_init	;wreg free
  7653                           
  7654                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  7655  004EC6  0060  F34F  FFE6   	movff	_spi_link+4,postinc1
  7656  004ECC  0060  F353  FFE6   	movff	_spi_link+5,postinc1
  7657  004ED2  EC08  F030         	call	_ringBufS_init	;wreg free
  7658                           
  7659                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  7660  004ED6  80BE               	bsf	16318,0,c	;volatile
  7661  004ED8  84BC               	bsf	16316,2,c	;volatile
  7662                           
  7663                           ;eadog.c: 44:  wdtdelay(350000);
  7664  004EDA  0E30               	movlw	48
  7665  004EDC  6EE6               	movwf	postinc1,c
  7666  004EDE  0E57               	movlw	87
  7667  004EE0  6EE6               	movwf	postinc1,c
  7668  004EE2  0E05               	movlw	5
  7669  004EE4  6EE6               	movwf	postinc1,c
  7670  004EE6  0E00               	movlw	0
  7671  004EE8  6EE6               	movwf	postinc1,c
  7672  004EEA  ECEB  F02C         	call	_wdtdelay	;wreg free
  7673                           
  7674                           ; BSR set to: 0
  7675                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  7676  004EEE  0E39               	movlw	57
  7677  004EF0  6EE6               	movwf	postinc1,c
  7678  004EF2  ECF4  F02F         	call	_send_lcd_cmd	;wreg free
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  7682  004EF6  0E1D               	movlw	29
  7683  004EF8  6EE6               	movwf	postinc1,c
  7684  004EFA  ECF4  F02F         	call	_send_lcd_cmd	;wreg free
  7685                           
  7686                           ; BSR set to: 0
  7687                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  7688  004EFE  0E50               	movlw	80
  7689  004F00  6EE6               	movwf	postinc1,c
  7690  004F02  ECF4  F02F         	call	_send_lcd_cmd	;wreg free
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  7694  004F06  0E6C               	movlw	108
  7695  004F08  6EE6               	movwf	postinc1,c
  7696  004F0A  ECF4  F02F         	call	_send_lcd_cmd	;wreg free
  7697                           
  7698                           ; BSR set to: 0
  7699                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  7700  004F0E  0E76               	movlw	118
  7701  004F10  6EE6               	movwf	postinc1,c
  7702  004F12  ECF4  F02F         	call	_send_lcd_cmd	;wreg free
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  7706  004F16  0E38               	movlw	56
  7707  004F18  6EE6               	movwf	postinc1,c
  7708  004F1A  ECE0  F02F         	call	_send_lcd_cmd_long	;wreg free
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  7712  004F1E  0E0F               	movlw	15
  7713  004F20  6EE6               	movwf	postinc1,c
  7714  004F22  ECF4  F02F         	call	_send_lcd_cmd	;wreg free
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  7718  004F26  0E01               	movlw	1
  7719  004F28  6EE6               	movwf	postinc1,c
  7720  004F2A  ECE0  F02F         	call	_send_lcd_cmd_long	;wreg free
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  7724  004F2E  0E02               	movlw	2
  7725  004F30  6EE6               	movwf	postinc1,c
  7726  004F32  ECF4  F02F         	call	_send_lcd_cmd	;wreg free
  7727                           
  7728                           ; BSR set to: 0
  7729                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  7730  004F36  0E06               	movlw	6
  7731  004F38  6EE6               	movwf	postinc1,c
  7732  004F3A  ECF4  F02F         	call	_send_lcd_cmd	;wreg free
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;eadog.c: 55:  wdtdelay(30);
  7736  004F3E  0E1E               	movlw	30
  7737  004F40  6EE6               	movwf	postinc1,c
  7738  004F42  0E00               	movlw	0
  7739  004F44  6EE6               	movwf	postinc1,c
  7740  004F46  0E00               	movlw	0
  7741  004F48  6EE6               	movwf	postinc1,c
  7742  004F4A  0E00               	movlw	0
  7743  004F4C  6EE6               	movwf	postinc1,c
  7744  004F4E  ECEB  F02C         	call	_wdtdelay	;wreg free
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  7748  004F52  0E02               	movlw	2
  7749  004F54  013D               	movlb	61	; () banked
  7750  004F56  6F16               	movwf	22,b	;volatile
  7751                           
  7752                           ; BSR set to: 61
  7753                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  7754  004F58  0E40               	movlw	64
  7755  004F5A  6F15               	movwf	21,b	;volatile
  7756                           
  7757                           ; BSR set to: 61
  7758                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  7759  004F5C  0E83               	movlw	131
  7760  004F5E  6F14               	movwf	20,b	;volatile
  7761                           
  7762                           ; BSR set to: 61
  7763                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  7764  004F60  931A               	bcf	26,1,b	;volatile
  7765                           
  7766                           ; BSR set to: 61
  7767                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  7768  004F62  0E3F               	movlw	-193
  7769  004F64  013B               	movlb	59	; () banked
  7770  004F66  17FD               	andwf	253,f,b	;volatile
  7771                           
  7772                           ; BSR set to: 59
  7773                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  7774  004F68  9BFD               	bcf	253,5,b	;volatile
  7775                           
  7776                           ; BSR set to: 59
  7777                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  7778  004F6A  51FD               	movf	253,w,b	;volatile
  7779  004F6C  0BF9               	andlw	-7
  7780  004F6E  0902               	iorlw	2
  7781  004F70  6FFD               	movwf	253,b	;volatile
  7782                           
  7783                           ; BSR set to: 59
  7784                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  7785  004F72  0EE7               	movlw	-25
  7786  004F74  17FD               	andwf	253,f,b	;volatile
  7787                           
  7788                           ; BSR set to: 59
  7789                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  7790  004F76  81FD               	bsf	253,0,b	;volatile
  7791                           
  7792                           ; BSR set to: 59
  7793                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  7794  004F78  0E43               	movlw	low _ring_buf1
  7795  004F7A  6FF9               	movwf	249,b	;volatile
  7796  004F7C  0E03               	movlw	high _ring_buf1
  7797  004F7E  6FFA               	movwf	250,b	;volatile
  7798  004F80  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7799  004F82  6FFB               	movwf	251,b	;volatile
  7800                           
  7801                           ; BSR set to: 59
  7802                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  7803  004F84  9BFC               	bcf	252,5,b	;volatile
  7804                           
  7805                           ; BSR set to: 59
  7806                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  7807  004F86  013D               	movlb	61	; () banked
  7808  004F88  831A               	bsf	26,1,b	;volatile
  7809                           
  7810                           ; BSR set to: 61
  7811                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  7812  004F8A  90BE               	bcf	16318,0,c	;volatile
  7813                           
  7814                           ; BSR set to: 61
  7815                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7816  004F8C  0012               	return		;funcret
  7817  004F8E                     __end_of_init_display:
  7818                           	opt callstack 0
  7819                           
  7820 ;; *************** function _send_lcd_cmd_long *****************
  7821 ;; Defined at:
  7822 ;;		line 97 in file "eadog.c"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;  cmd             1  [STACK] unsigned char 
  7825 ;; Auto vars:     Size  Location     Type
  7826 ;;		None
  7827 ;; Return value:  Size  Location     Type
  7828 ;;                  1  [STACK] void 
  7829 ;; Registers used:
  7830 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7831 ;; Tracked objects:
  7832 ;;		On entry : 3F/0
  7833 ;;		On exit  : 3F/0
  7834 ;;		Unchanged: 0/0
  7835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7840 ;;Total ram usage:        0 bytes
  7841 ;; Hardware stack levels used:    1
  7842 ;; Hardware stack levels required when called:    4
  7843 ;; This function calls:
  7844 ;;		_SPI1_Exchange8bit
  7845 ;;		_wdtdelay
  7846 ;; This function is called by:
  7847 ;;		_init_display
  7848 ;; This function uses a reentrant model
  7849 ;;
  7850                           
  7851                           	psect	text25
  7852  005FC0                     __ptext25:
  7853                           	opt callstack 0
  7854  005FC0                     _send_lcd_cmd_long:
  7855                           	opt callstack 25
  7856                           
  7857                           ; BSR set to: 61
  7858                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7859                           ;incstack = 0
  7860                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  7861  005FC0  92BC               	bcf	16316,1,c	;volatile
  7862                           
  7863                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  7864  005FC2  94BC               	bcf	16316,2,c	;volatile
  7865                           
  7866                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  7867                           ;stkvar	_cmd @ sp[(0)+-1]
  7868  005FC4  0EFF               	movlw	-1
  7869  005FC6  50E3               	movf	plusw1,w,c
  7870  005FC8  6EE6               	movwf	postinc1,c
  7871  005FCA  ECE1  F031         	call	_SPI1_Exchange8bit	;wreg free
  7872                           
  7873                           ; BSR set to: 57
  7874                           ;eadog.c: 102:  wdtdelay(800);
  7875  005FCE  0E20               	movlw	32
  7876  005FD0  6EE6               	movwf	postinc1,c
  7877  005FD2  0E03               	movlw	3
  7878  005FD4  6EE6               	movwf	postinc1,c
  7879  005FD6  0E00               	movlw	0
  7880  005FD8  6EE6               	movwf	postinc1,c
  7881  005FDA  0E00               	movlw	0
  7882  005FDC  6EE6               	movwf	postinc1,c
  7883  005FDE  ECEB  F02C         	call	_wdtdelay	;wreg free
  7884                           
  7885                           ; BSR set to: 0
  7886  005FE2  82BC               	bsf	16316,1,c	;volatile
  7887                           
  7888                           ; BSR set to: 0
  7889                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7890  005FE4  52E5               	movf	postdec1,f,c
  7891  005FE6  0012               	return		;funcret
  7892  005FE8                     __end_of_send_lcd_cmd_long:
  7893                           	opt callstack 0
  7894                           
  7895 ;; *************** function _send_lcd_cmd *****************
  7896 ;; Defined at:
  7897 ;;		line 85 in file "eadog.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  cmd             1  [STACK] unsigned char 
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;		None
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  1  [STACK] void 
  7904 ;; Registers used:
  7905 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7906 ;; Tracked objects:
  7907 ;;		On entry : 3F/0
  7908 ;;		On exit  : 3F/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7915 ;;Total ram usage:        0 bytes
  7916 ;; Hardware stack levels used:    1
  7917 ;; Hardware stack levels required when called:    4
  7918 ;; This function calls:
  7919 ;;		_SPI1_Exchange8bit
  7920 ;;		_wdtdelay
  7921 ;; This function is called by:
  7922 ;;		_init_display
  7923 ;; This function uses a reentrant model
  7924 ;;
  7925                           
  7926                           	psect	text26
  7927  005FE8                     __ptext26:
  7928                           	opt callstack 0
  7929  005FE8                     _send_lcd_cmd:
  7930                           	opt callstack 25
  7931                           
  7932                           ; BSR set to: 0
  7933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7934                           ;incstack = 0
  7935                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  7936  005FE8  92BC               	bcf	16316,1,c	;volatile
  7937                           
  7938                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  7939  005FEA  94BC               	bcf	16316,2,c	;volatile
  7940                           
  7941                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  7942                           ;stkvar	_cmd @ sp[(0)+-1]
  7943  005FEC  0EFF               	movlw	-1
  7944  005FEE  50E3               	movf	plusw1,w,c
  7945  005FF0  6EE6               	movwf	postinc1,c
  7946  005FF2  ECE1  F031         	call	_SPI1_Exchange8bit	;wreg free
  7947                           
  7948                           ; BSR set to: 57
  7949                           ;eadog.c: 90:  wdtdelay(30);
  7950  005FF6  0E1E               	movlw	30
  7951  005FF8  6EE6               	movwf	postinc1,c
  7952  005FFA  0E00               	movlw	0
  7953  005FFC  6EE6               	movwf	postinc1,c
  7954  005FFE  0E00               	movlw	0
  7955  006000  6EE6               	movwf	postinc1,c
  7956  006002  0E00               	movlw	0
  7957  006004  6EE6               	movwf	postinc1,c
  7958  006006  ECEB  F02C         	call	_wdtdelay	;wreg free
  7959                           
  7960                           ; BSR set to: 0
  7961  00600A  82BC               	bsf	16316,1,c	;volatile
  7962                           
  7963                           ; BSR set to: 0
  7964                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7965  00600C  52E5               	movf	postdec1,f,c
  7966  00600E  0012               	return		;funcret
  7967  006010                     __end_of_send_lcd_cmd:
  7968                           	opt callstack 0
  7969                           
  7970 ;; *************** function _SPI1_Exchange8bit *****************
  7971 ;; Defined at:
  7972 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7973 ;; Parameters:    Size  Location     Type
  7974 ;;  data            1  [STACK] unsigned char 
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;		None
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  1  [STACK] unsigned char 
  7979 ;; Registers used:
  7980 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 3F/39
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7990 ;;Total ram usage:        0 bytes
  7991 ;; Hardware stack levels used:    1
  7992 ;; Hardware stack levels required when called:    3
  7993 ;; This function calls:
  7994 ;;		Nothing
  7995 ;; This function is called by:
  7996 ;;		_send_lcd_cmd
  7997 ;;		_send_lcd_cmd_long
  7998 ;; This function uses a reentrant model
  7999 ;;
  8000                           
  8001                           	psect	text27
  8002  0063C2                     __ptext27:
  8003                           	opt callstack 0
  8004  0063C2                     _SPI1_Exchange8bit:
  8005                           	opt callstack 25
  8006                           
  8007                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  8008                           
  8009                           ; BSR set to: 0
  8010                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8011                           ;incstack = 0
  8012  0063C2  0E01               	movlw	1
  8013  0063C4  013D               	movlb	61	; () banked
  8014  0063C6  6F12               	movwf	18,b	;volatile
  8015                           
  8016                           ; BSR set to: 61
  8017                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  8018                           ;stkvar	_data @ sp[(0)+-1]
  8019  0063C8  0EFF               	movlw	-1
  8020  0063CA  006F FF8F FD11     	movff	plusw1,15633	;volatile
  8021  0063D0                     l851:
  8022                           
  8023                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  8024  0063D0  0139               	movlb	57	; () banked
  8025  0063D2  A9A2               	btfss	162,4,b	;volatile
  8026  0063D4  D7FD               	goto	l851
  8027                           
  8028                           ; BSR set to: 57
  8029                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  8030  0063D6  006F F440  F03D    	movff	15632,btemp	;volatile
  8031                           
  8032                           ; BSR set to: 57
  8033                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8034  0063DC  52E5               	movf	postdec1,f,c
  8035  0063DE  0012               	return		;funcret
  8036  0063E0                     __end_of_SPI1_Exchange8bit:
  8037                           	opt callstack 0
  8038                           
  8039 ;; *************** function _ringBufS_init *****************
  8040 ;; Defined at:
  8041 ;;		line 22 in file "ringbufs.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;  _this           2  [STACK] PTR volatile struct ring
  8044 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;		None
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  1  [STACK] void 
  8049 ;; Registers used:
  8050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8060 ;;Total ram usage:        0 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:    4
  8063 ;; This function calls:
  8064 ;;		_memset
  8065 ;; This function is called by:
  8066 ;;		_init_display
  8067 ;; This function uses a reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text28
  8071  006010                     __ptext28:
  8072                           	opt callstack 0
  8073  006010                     _ringBufS_init:
  8074                           	opt callstack 25
  8075                           
  8076                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  8077                           
  8078                           ; BSR set to: 57
  8079                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8080                           ;incstack = 0
  8081  006010  0E43               	movlw	67
  8082  006012  6EE6               	movwf	postinc1,c
  8083  006014  0E00               	movlw	0
  8084  006016  6EE6               	movwf	postinc1,c
  8085  006018  0E00               	movlw	0
  8086  00601A  6EE6               	movwf	postinc1,c
  8087  00601C  0E00               	movlw	0
  8088  00601E  6EE6               	movwf	postinc1,c
  8089                           
  8090                           ;stkvar	__this @ sp[(-4)+-2]
  8091  006020  0EFA               	movlw	-6
  8092  006022  006F FF8F FFE6     	movff	plusw1,postinc1
  8093  006028  006F FF8F FFE6     	movff	plusw1,postinc1
  8094  00602E  ECB3  F01B         	call	_memset	;wreg free
  8095                           
  8096                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8097  006032  52E5               	movf	postdec1,f,c
  8098  006034  52E5               	movf	postdec1,f,c
  8099  006036  0012               	return		;funcret
  8100  006038                     __end_of_ringBufS_init:
  8101                           	opt callstack 0
  8102                           
  8103 ;; *************** function _eaDogM_WriteStringAtPos *****************
  8104 ;; Defined at:
  8105 ;;		line 223 in file "eadog.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;  r               1  [STACK] unsigned char 
  8108 ;;  c               1  [STACK] unsigned char 
  8109 ;;  strPtr          1  [STACK] PTR unsigned char 
  8110 ;;		 -> V(98), 
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;		None
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  1  [STACK] void 
  8115 ;; Registers used:
  8116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  8117 ;; Tracked objects:
  8118 ;;		On entry : 3F/0
  8119 ;;		On exit  : 3F/3B
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8126 ;;Total ram usage:        0 bytes
  8127 ;; Hardware stack levels used:    1
  8128 ;; Hardware stack levels required when called:   13
  8129 ;; This function calls:
  8130 ;;		_eaDogM_WriteString
  8131 ;;		_send_lcd_cmd_dma
  8132 ;; This function is called by:
  8133 ;;		_main
  8134 ;; This function uses a reentrant model
  8135 ;;
  8136                           
  8137                           	psect	text29
  8138  005E92                     __ptext29:
  8139                           	opt callstack 0
  8140  005E92                     _eaDogM_WriteStringAtPos:
  8141                           	opt callstack 17
  8142                           
  8143                           ;eadog.c: 223: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           224: {;eadog.c: 225:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  8144                           ;stkvar	_c @ sp[(0)+-2]
  8145                           
  8146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8147                           ;incstack = 0
  8148  005E92  0EFE               	movlw	-2
  8149  005E94  006F FF8C  F048    	movff	plusw1,btemp+11
  8150                           
  8151                           ;stkvar	_r @ sp[(0)+-1]
  8152  005E9A  0EFF               	movlw	-1
  8153  005E9C  50E3               	movf	plusw1,w,c
  8154  005E9E  0D10               	mullw	16
  8155  005EA0  50F3               	movf	prodl,w,c
  8156  005EA2  2448               	addwf	btemp+11,w,c
  8157  005EA4  0F80               	addlw	128
  8158  005EA6  6EE6               	movwf	postinc1,c
  8159  005EA8  EC19  F02D         	call	_send_lcd_cmd_dma	;wreg free
  8160                           
  8161                           ; BSR set to: 0
  8162                           ;eadog.c: 226:  eaDogM_WriteString(strPtr);
  8163                           ;stkvar	_strPtr @ sp[(0)+-3]
  8164  005EAC  0EFD               	movlw	-3
  8165  005EAE  50E3               	movf	plusw1,w,c
  8166  005EB0  6EE6               	movwf	postinc1,c
  8167  005EB2  ECFD  F029         	call	_eaDogM_WriteString	;wreg free
  8168                           
  8169                           ; BSR set to: 59
  8170                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  8171  005EB6  52E5               	movf	postdec1,f,c
  8172  005EB8  52E5               	movf	postdec1,f,c
  8173  005EBA  52E5               	movf	postdec1,f,c
  8174  005EBC  0012               	return		;funcret
  8175  005EBE                     __end_of_eaDogM_WriteStringAtPos:
  8176                           	opt callstack 0
  8177                           
  8178 ;; *************** function _eaDogM_WriteString *****************
  8179 ;; Defined at:
  8180 ;;		line 167 in file "eadog.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;  strPtr          1  [STACK] PTR unsigned char 
  8183 ;;		 -> V(98), 
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;		None
  8186 ;; Return value:  Size  Location     Type
  8187 ;;                  1  [STACK] void 
  8188 ;; Registers used:
  8189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8190 ;; Tracked objects:
  8191 ;;		On entry : 3F/0
  8192 ;;		On exit  : 3F/3B
  8193 ;;		Unchanged: 0/0
  8194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8199 ;;Total ram usage:        0 bytes
  8200 ;; Hardware stack levels used:    1
  8201 ;; Hardware stack levels required when called:   12
  8202 ;; This function calls:
  8203 ;;		_printf
  8204 ;;		_ringBufS_flush
  8205 ;;		_start_lcd
  8206 ;;		_strlen
  8207 ;;		_wait_lcd_set
  8208 ;; This function is called by:
  8209 ;;		_eaDogM_WriteStringAtPos
  8210 ;; This function uses a reentrant model
  8211 ;;
  8212                           
  8213                           	psect	text30
  8214  0053FA                     __ptext30:
  8215                           	opt callstack 0
  8216  0053FA                     _eaDogM_WriteString:
  8217                           	opt callstack 17
  8218                           
  8219                           ; BSR set to: 59
  8220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8221                           ;incstack = 0
  8222                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  do {
      +                           LATEbits.LATE1 = 1; } while(0);
  8223  0053FA  82BE               	bsf	16318,1,c	;volatile
  8224                           
  8225                           ;eadog.c: 170:  wait_lcd_set();
  8226  0053FC  ECAF  F032         	call	_wait_lcd_set	;wreg free
  8227                           
  8228                           ; BSR set to: 0
  8229                           ;eadog.c: 172:  ringBufS_flush(spi_link.tx1a, 0);
  8230  005400  0E00               	movlw	0
  8231  005402  6EE6               	movwf	postinc1,c
  8232  005404  0060  F357  FFE6   	movff	_spi_link+6,postinc1
  8233  00540A  0060  F35B  FFE6   	movff	_spi_link+7,postinc1
  8234  005410  EC33  F02B         	call	_ringBufS_flush	;wreg free
  8235  005414  94BC               	bcf	16316,2,c	;volatile
  8236                           
  8237                           ;eadog.c: 174:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  8238                           ;stkvar	_strPtr @ sp[(0)+-1]
  8239  005416  0EFF               	movlw	-1
  8240  005418  006F FF8C  F048    	movff	plusw1,btemp+11
  8241  00541E  0060  F123  FFE6   	movff	btemp+11,postinc1
  8242  005424  0E00               	movlw	0
  8243  005426  6EE6               	movwf	postinc1,c
  8244  005428  ECAC  F029         	call	_strlen	;wreg free
  8245  00542C  503E               	movf	btemp+1,w,c
  8246  00542E  E104               	bnz	u5150
  8247  005430  0E41               	movlw	65
  8248  005432  5C3D               	subwf	btemp,w,c
  8249  005434  A0D8               	btfss	status,0,c
  8250  005436  D008               	goto	l8441
  8251  005438                     u5150:
  8252                           
  8253                           ;stkvar	_strPtr @ sp[(0)+-1]
  8254  005438  0EFF               	movlw	-1
  8255  00543A  50E3               	movf	plusw1,w,c
  8256  00543C  6ED9               	movwf	fsr2l,c
  8257  00543E  6ADA               	clrf	fsr2h,c
  8258  005440  0E40               	movlw	64
  8259  005442  26D9               	addwf	fsr2l,f,c
  8260  005444  0E00               	movlw	0
  8261  005446  6EDF               	movwf	indf2,c
  8262  005448                     l8441:
  8263                           
  8264                           ;eadog.c: 175:  DMA1CON0bits.EN = 0;
  8265  005448  013B               	movlb	59	; () banked
  8266  00544A  9FFC               	bcf	252,7,b	;volatile
  8267                           
  8268                           ; BSR set to: 59
  8269                           ;eadog.c: 176:  DMA1SSZ = strlen(strPtr);
  8270                           ;stkvar	_strPtr @ sp[(0)+-1]
  8271  00544C  0EFF               	movlw	-1
  8272  00544E  006F FF8C  F048    	movff	plusw1,btemp+11
  8273  005454  0060  F123  FFE6   	movff	btemp+11,postinc1
  8274  00545A  0E00               	movlw	0
  8275  00545C  6EE6               	movwf	postinc1,c
  8276  00545E  ECAC  F029         	call	_strlen	;wreg free
  8277  005462  0060  F0F7  FBF7   	movff	btemp,15351	;volatile
  8278  005468  0060  F0FB  FBF8   	movff	btemp+1,15352	;volatile
  8279                           
  8280                           ;eadog.c: 177:  DMA1CON0bits.EN = 1;
  8281  00546E  013B               	movlb	59	; () banked
  8282  005470  8FFC               	bsf	252,7,b	;volatile
  8283                           
  8284                           ; BSR set to: 59
  8285                           ;eadog.c: 178:  printf("%s", strPtr);
  8286                           ;stkvar	_strPtr @ sp[(0)+-1]
  8287  005472  0EFF               	movlw	-1
  8288  005474  006F FF8C  F048    	movff	plusw1,btemp+11
  8289  00547A  0060  F123  FFE6   	movff	btemp+11,postinc1
  8290  005480  0E00               	movlw	0
  8291  005482  6EE6               	movwf	postinc1,c
  8292  005484  0EA6               	movlw	(STR_2+9)& (0+255)
  8293  005486  6EE6               	movwf	postinc1,c
  8294  005488  0E03               	movlw	3
  8295  00548A  6EE6               	movwf	postinc1,c
  8296  00548C  EC8B  F02C         	call	_printf	;wreg free
  8297                           
  8298                           ; BSR set to: 0
  8299                           ;eadog.c: 179:  start_lcd();
  8300  005490  ECB2  F032         	call	_start_lcd	;wreg free
  8301                           
  8302                           ; BSR set to: 59
  8303                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8304  005494  52E5               	movf	postdec1,f,c
  8305  005496  0012               	return		;funcret
  8306  005498                     __end_of_eaDogM_WriteString:
  8307                           	opt callstack 0
  8308                           
  8309 ;; *************** function _eaDogM_WriteCommand *****************
  8310 ;; Defined at:
  8311 ;;		line 143 in file "eadog.c"
  8312 ;; Parameters:    Size  Location     Type
  8313 ;;  cmd             1  [STACK] unsigned char 
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;		None
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  1  [STACK] void 
  8318 ;; Registers used:
  8319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8320 ;; Tracked objects:
  8321 ;;		On entry : 3F/3D
  8322 ;;		On exit  : 3F/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8329 ;;Total ram usage:        0 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; Hardware stack levels required when called:   13
  8332 ;; This function calls:
  8333 ;;		_send_lcd_cmd_dma
  8334 ;; This function is called by:
  8335 ;;		_main
  8336 ;; This function uses a reentrant model
  8337 ;;
  8338                           
  8339                           	psect	text31
  8340  0064D4                     __ptext31:
  8341                           	opt callstack 0
  8342  0064D4                     _eaDogM_WriteCommand:
  8343                           	opt callstack 17
  8344                           
  8345                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  8346                           ;stkvar	_cmd @ sp[(0)+-1]
  8347                           
  8348                           ; BSR set to: 59
  8349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8350                           ;incstack = 0
  8351  0064D4  0EFF               	movlw	-1
  8352  0064D6  50E3               	movf	plusw1,w,c
  8353  0064D8  6EE6               	movwf	postinc1,c
  8354  0064DA  EC19  F02D         	call	_send_lcd_cmd_dma	;wreg free
  8355                           
  8356                           ; BSR set to: 0
  8357                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8358  0064DE  52E5               	movf	postdec1,f,c
  8359  0064E0  0012               	return		;funcret
  8360  0064E2                     __end_of_eaDogM_WriteCommand:
  8361                           	opt callstack 0
  8362                           
  8363 ;; *************** function _send_lcd_cmd_dma *****************
  8364 ;; Defined at:
  8365 ;;		line 188 in file "eadog.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;  strPtr          1  [STACK] unsigned char 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;		None
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1  [STACK] void 
  8372 ;; Registers used:
  8373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 3F/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8383 ;;Total ram usage:        0 bytes
  8384 ;; Hardware stack levels used:    1
  8385 ;; Hardware stack levels required when called:   12
  8386 ;; This function calls:
  8387 ;;		_printf
  8388 ;;		_ringBufS_flush
  8389 ;;		_start_lcd
  8390 ;;		_wait_lcd_done
  8391 ;;		_wait_lcd_set
  8392 ;; This function is called by:
  8393 ;;		_eaDogM_WriteCommand
  8394 ;;		_eaDogM_WriteStringAtPos
  8395 ;; This function uses a reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text32
  8399  005A32                     __ptext32:
  8400                           	opt callstack 0
  8401  005A32                     _send_lcd_cmd_dma:
  8402                           	opt callstack 17
  8403                           
  8404                           ; BSR set to: 0
  8405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8406                           ;incstack = 0
  8407                           ;eadog.c: 188: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 189: {;eadog.c: 190:  do {
      +                           LATEbits.LATE1 = 1; } while(0);
  8408  005A32  82BE               	bsf	16318,1,c	;volatile
  8409                           
  8410                           ;eadog.c: 191:  wait_lcd_set();
  8411  005A34  ECAF  F032         	call	_wait_lcd_set	;wreg free
  8412                           
  8413                           ; BSR set to: 0
  8414                           ;eadog.c: 193:  ringBufS_flush(spi_link.tx1a, 0);
  8415  005A38  0E00               	movlw	0
  8416  005A3A  6EE6               	movwf	postinc1,c
  8417  005A3C  0060  F357  FFE6   	movff	_spi_link+6,postinc1
  8418  005A42  0060  F35B  FFE6   	movff	_spi_link+7,postinc1
  8419  005A48  EC33  F02B         	call	_ringBufS_flush	;wreg free
  8420  005A4C  92BC               	bcf	16316,1,c	;volatile
  8421  005A4E  94BC               	bcf	16316,2,c	;volatile
  8422                           
  8423                           ;eadog.c: 196:  DMA1CON0bits.EN = 0;
  8424  005A50  013B               	movlb	59	; () banked
  8425  005A52  9FFC               	bcf	252,7,b	;volatile
  8426                           
  8427                           ; BSR set to: 59
  8428                           ;eadog.c: 197:  DMA1SSZ = 1;
  8429  005A54  0E00               	movlw	0
  8430  005A56  6FF8               	movwf	248,b	;volatile
  8431  005A58  0E01               	movlw	1
  8432  005A5A  6FF7               	movwf	247,b	;volatile
  8433                           
  8434                           ; BSR set to: 59
  8435                           ;eadog.c: 198:  DMA1CON0bits.EN = 1;
  8436  005A5C  8FFC               	bsf	252,7,b	;volatile
  8437                           
  8438                           ; BSR set to: 59
  8439                           ;eadog.c: 199:  printf("%c", strPtr);
  8440                           ;stkvar	_strPtr @ sp[(0)+-1]
  8441  005A5E  0EFF               	movlw	-1
  8442  005A60  50E3               	movf	plusw1,w,c
  8443  005A62  6EE6               	movwf	postinc1,c
  8444  005A64  0E00               	movlw	0
  8445  005A66  6EE6               	movwf	postinc1,c
  8446  005A68  0EC1               	movlw	STR_17& (0+255)
  8447  005A6A  6EE6               	movwf	postinc1,c
  8448  005A6C  0E03               	movlw	3
  8449  005A6E  6EE6               	movwf	postinc1,c
  8450  005A70  EC8B  F02C         	call	_printf	;wreg free
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;eadog.c: 200:  start_lcd();
  8454  005A74  ECB2  F032         	call	_start_lcd	;wreg free
  8455                           
  8456                           ; BSR set to: 59
  8457                           ;eadog.c: 201:  wait_lcd_done();
  8458  005A78  ECF0  F031         	call	_wait_lcd_done	;wreg free
  8459                           
  8460                           ; BSR set to: 0
  8461  005A7C  82BC               	bsf	16316,1,c	;volatile
  8462                           
  8463                           ; BSR set to: 0
  8464                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8465  005A7E  52E5               	movf	postdec1,f,c
  8466  005A80  0012               	return		;funcret
  8467  005A82                     __end_of_send_lcd_cmd_dma:
  8468                           	opt callstack 0
  8469                           
  8470 ;; *************** function _wait_lcd_set *****************
  8471 ;; Defined at:
  8472 ;;		line 114 in file "eadog.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;		None
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;		None
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  1  [STACK] void 
  8479 ;; Registers used:
  8480 ;;		None
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 3F/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8490 ;;Total ram usage:        0 bytes
  8491 ;; Hardware stack levels used:    1
  8492 ;; Hardware stack levels required when called:    3
  8493 ;; This function calls:
  8494 ;;		Nothing
  8495 ;; This function is called by:
  8496 ;;		_eaDogM_WriteString
  8497 ;;		_send_lcd_cmd_dma
  8498 ;; This function uses a reentrant model
  8499 ;;
  8500                           
  8501                           	psect	text33
  8502  00655E                     __ptext33:
  8503                           	opt callstack 0
  8504  00655E                     _wait_lcd_set:
  8505                           	opt callstack 25
  8506                           
  8507                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  8508                           
  8509                           ; BSR set to: 0
  8510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8511                           ;incstack = 0
  8512  00655E  0100               	movlb	0	; () banked
  8513  006560  87CF               	bsf	_spi_link& (0+255),3,b	;volatile
  8514                           
  8515                           ; BSR set to: 0
  8516                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8517  006562  0012               	return		;funcret
  8518  006564                     __end_of_wait_lcd_set:
  8519                           	opt callstack 0
  8520                           
  8521 ;; *************** function _wait_lcd_done *****************
  8522 ;; Defined at:
  8523 ;;		line 124 in file "eadog.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;		None
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;		None
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  1  [STACK] void 
  8530 ;; Registers used:
  8531 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8532 ;; Tracked objects:
  8533 ;;		On entry : 4/0
  8534 ;;		On exit  : 3F/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8541 ;;Total ram usage:        0 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; Hardware stack levels required when called:    4
  8544 ;; This function calls:
  8545 ;;		_wdtdelay
  8546 ;; This function is called by:
  8547 ;;		_main
  8548 ;;		_send_lcd_cmd_dma
  8549 ;; This function uses a reentrant model
  8550 ;;
  8551                           
  8552                           	psect	text34
  8553  0063E0                     __ptext34:
  8554                           	opt callstack 0
  8555  0063E0                     _wait_lcd_done:
  8556                           	opt callstack 26
  8557                           
  8558                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  8559                           
  8560                           ; BSR set to: 0
  8561                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8562                           ;incstack = 0
  8563  0063E0  0100               	movlb	0	; () banked
  8564  0063E2  B7CF               	btfsc	_spi_link& (0+255),3,b	;volatile
  8565  0063E4  D7FD               	goto	_wait_lcd_done
  8566                           
  8567                           ; BSR set to: 0
  8568                           ;eadog.c: 127:  wdtdelay(50);
  8569  0063E6  0E32               	movlw	50
  8570  0063E8  6EE6               	movwf	postinc1,c
  8571  0063EA  0E00               	movlw	0
  8572  0063EC  6EE6               	movwf	postinc1,c
  8573  0063EE  0E00               	movlw	0
  8574  0063F0  6EE6               	movwf	postinc1,c
  8575  0063F2  0E00               	movlw	0
  8576  0063F4  6EE6               	movwf	postinc1,c
  8577  0063F6  ECEB  F02C         	call	_wdtdelay	;wreg free
  8578                           
  8579                           ; BSR set to: 0
  8580                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8581  0063FA  0012               	return		;funcret
  8582  0063FC                     __end_of_wait_lcd_done:
  8583                           	opt callstack 0
  8584                           
  8585 ;; *************** function _wdtdelay *****************
  8586 ;; Defined at:
  8587 ;;		line 21 in file "eadog.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;  delay           4  [STACK] unsigned long 
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;		None
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  1  [STACK] void 
  8594 ;; Registers used:
  8595 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 3F/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8605 ;;Total ram usage:        0 bytes
  8606 ;; Hardware stack levels used:    1
  8607 ;; Hardware stack levels required when called:    3
  8608 ;; This function calls:
  8609 ;;		Nothing
  8610 ;; This function is called by:
  8611 ;;		_init_display
  8612 ;;		_send_lcd_cmd
  8613 ;;		_send_lcd_cmd_long
  8614 ;;		_wait_lcd_done
  8615 ;; This function uses a reentrant model
  8616 ;;
  8617                           
  8618                           	psect	text35
  8619  0059D6                     __ptext35:
  8620                           	opt callstack 0
  8621  0059D6                     _wdtdelay:
  8622                           	opt callstack 26
  8623                           
  8624                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  8625                           
  8626                           ; BSR set to: 0
  8627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8628                           ;incstack = 0
  8629  0059D6  0100               	movlb	0	; () banked
  8630  0059D8  6BEE               	clrf	wdtdelay@dcount& (0+255),b
  8631  0059DA  6BEF               	clrf	(wdtdelay@dcount+1)& (0+255),b
  8632  0059DC  6BF0               	clrf	(wdtdelay@dcount+2)& (0+255),b
  8633  0059DE  6BF1               	clrf	(wdtdelay@dcount+3)& (0+255),b
  8634  0059E0  D009               	goto	l5687
  8635  0059E2                     l1353:
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;eadog.c: 26:   __nop();
  8639  0059E2  F000               	nop	
  8640  0059E4  0004               	clrwdt		;# 
  8641                           
  8642                           ;eadog.c: 28:  };
  8643  0059E6  0E01               	movlw	1
  8644  0059E8  0100               	movlb	0	; () banked
  8645  0059EA  27EE               	addwf	wdtdelay@dcount& (0+255),f,b
  8646  0059EC  0E00               	movlw	0
  8647  0059EE  23EF               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  8648  0059F0  23F0               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  8649  0059F2  23F1               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  8650  0059F4                     l5687:
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;stkvar	_delay @ sp[(0)+-4]
  8654  0059F4  0EFC               	movlw	-4
  8655  0059F6  006F FF8C  F03D    	movff	plusw1,btemp
  8656  0059FC  51EE               	movf	wdtdelay@dcount& (0+255),w,b
  8657  0059FE  5C3D               	subwf	btemp,w,c
  8658  005A00  0EFD               	movlw	-3
  8659  005A02  006F FF8C  F03D    	movff	plusw1,btemp
  8660  005A08  51EF               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  8661  005A0A  583D               	subwfb	btemp,w,c
  8662  005A0C  0EFE               	movlw	-2
  8663  005A0E  006F FF8C  F03D    	movff	plusw1,btemp
  8664  005A14  51F0               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  8665  005A16  583D               	subwfb	btemp,w,c
  8666  005A18  0EFF               	movlw	-1
  8667  005A1A  006F FF8C  F03D    	movff	plusw1,btemp
  8668  005A20  51F1               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  8669  005A22  583D               	subwfb	btemp,w,c
  8670  005A24  B0D8               	btfsc	status,0,c
  8671  005A26  D7DD               	goto	l1353
  8672                           
  8673                           ; BSR set to: 0
  8674                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  8675  005A28  52E5               	movf	postdec1,f,c
  8676  005A2A  52E5               	movf	postdec1,f,c
  8677  005A2C  52E5               	movf	postdec1,f,c
  8678  005A2E  52E5               	movf	postdec1,f,c
  8679  005A30  0012               	return		;funcret
  8680  005A32                     __end_of_wdtdelay:
  8681                           	opt callstack 0
  8682                           
  8683 ;; *************** function _start_lcd *****************
  8684 ;; Defined at:
  8685 ;;		line 109 in file "eadog.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;		None
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;		None
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1  [STACK] void 
  8692 ;; Registers used:
  8693 ;;		None
  8694 ;; Tracked objects:
  8695 ;;		On entry : 3F/0
  8696 ;;		On exit  : 3F/3B
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8703 ;;Total ram usage:        0 bytes
  8704 ;; Hardware stack levels used:    1
  8705 ;; Hardware stack levels required when called:    3
  8706 ;; This function calls:
  8707 ;;		Nothing
  8708 ;; This function is called by:
  8709 ;;		_eaDogM_WriteString
  8710 ;;		_send_lcd_cmd_dma
  8711 ;; This function uses a reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text36
  8715  006564                     __ptext36:
  8716                           	opt callstack 0
  8717  006564                     _start_lcd:
  8718                           	opt callstack 25
  8719                           
  8720                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  8721                           
  8722                           ; BSR set to: 0
  8723                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8724                           ;incstack = 0
  8725  006564  013B               	movlb	59	; () banked
  8726  006566  8DFC               	bsf	252,6,b	;volatile
  8727                           
  8728                           ; BSR set to: 59
  8729                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8730  006568  0012               	return		;funcret
  8731  00656A                     __end_of_start_lcd:
  8732                           	opt callstack 0
  8733                           
  8734 ;; *************** function _ringBufS_flush *****************
  8735 ;; Defined at:
  8736 ;;		line 76 in file "ringbufs.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;  _this           2  [STACK] PTR struct ringBufS_t
  8739 ;;		 -> ring_buf1(67), 
  8740 ;;  clearBuffer     1  [STACK] const char 
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;		None
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  1  [STACK] void 
  8745 ;; Registers used:
  8746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8747 ;; Tracked objects:
  8748 ;;		On entry : 3F/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8756 ;;Total ram usage:        0 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; Hardware stack levels required when called:    4
  8759 ;; This function calls:
  8760 ;;		_memset
  8761 ;; This function is called by:
  8762 ;;		_eaDogM_WriteString
  8763 ;;		_send_lcd_cmd_dma
  8764 ;; This function uses a reentrant model
  8765 ;;
  8766                           
  8767                           	psect	text37
  8768  005666                     __ptext37:
  8769                           	opt callstack 0
  8770  005666                     _ringBufS_flush:
  8771                           	opt callstack 24
  8772                           
  8773                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  8774                           ;stkvar	__this @ sp[(0)+-2]
  8775                           
  8776                           ; BSR set to: 59
  8777                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8778                           ;incstack = 0
  8779  005666  0EFE               	movlw	-2
  8780  005668  006F FF8C  F047    	movff	plusw1,btemp+10
  8781  00566E  0EFF               	movlw	-1
  8782  005670  006F FF8C  F048    	movff	plusw1,btemp+11
  8783  005676  0E42               	movlw	66
  8784  005678  2447               	addwf	btemp+10,w,c
  8785  00567A  6ED9               	movwf	fsr2l,c
  8786  00567C  0E00               	movlw	0
  8787  00567E  2048               	addwfc	btemp+11,w,c
  8788  005680  6EDA               	movwf	fsr2h,c
  8789  005682  0E00               	movlw	0
  8790  005684  6EDF               	movwf	indf2,c
  8791                           
  8792                           ;ringbufs.c: 79:  _this->head = 0;
  8793                           ;stkvar	__this @ sp[(0)+-2]
  8794  005686  0EFE               	movlw	-2
  8795  005688  006F FF8C  F047    	movff	plusw1,btemp+10
  8796  00568E  0EFF               	movlw	-1
  8797  005690  006F FF8C  F048    	movff	plusw1,btemp+11
  8798  005696  0E40               	movlw	64
  8799  005698  2447               	addwf	btemp+10,w,c
  8800  00569A  6ED9               	movwf	fsr2l,c
  8801  00569C  0E00               	movlw	0
  8802  00569E  2048               	addwfc	btemp+11,w,c
  8803  0056A0  6EDA               	movwf	fsr2h,c
  8804  0056A2  0E00               	movlw	0
  8805  0056A4  6EDF               	movwf	indf2,c
  8806                           
  8807                           ;ringbufs.c: 80:  _this->tail = 0;
  8808                           ;stkvar	__this @ sp[(0)+-2]
  8809  0056A6  0EFE               	movlw	-2
  8810  0056A8  006F FF8C  F047    	movff	plusw1,btemp+10
  8811  0056AE  0EFF               	movlw	-1
  8812  0056B0  006F FF8C  F048    	movff	plusw1,btemp+11
  8813  0056B6  0E41               	movlw	65
  8814  0056B8  2447               	addwf	btemp+10,w,c
  8815  0056BA  6ED9               	movwf	fsr2l,c
  8816  0056BC  0E00               	movlw	0
  8817  0056BE  2048               	addwfc	btemp+11,w,c
  8818  0056C0  6EDA               	movwf	fsr2h,c
  8819  0056C2  0E00               	movlw	0
  8820  0056C4  6EDF               	movwf	indf2,c
  8821                           
  8822                           ;ringbufs.c: 81:  if (clearBuffer) {
  8823                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  8824  0056C6  0EFD               	movlw	-3
  8825  0056C8  50E3               	movf	plusw1,w,c
  8826  0056CA  B4D8               	btfsc	status,2,c
  8827  0056CC  D011               	goto	l1493
  8828                           
  8829                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  8830  0056CE  0E40               	movlw	64
  8831  0056D0  6EE6               	movwf	postinc1,c
  8832  0056D2  0E00               	movlw	0
  8833  0056D4  6EE6               	movwf	postinc1,c
  8834  0056D6  0E00               	movlw	0
  8835  0056D8  6EE6               	movwf	postinc1,c
  8836  0056DA  0E00               	movlw	0
  8837  0056DC  6EE6               	movwf	postinc1,c
  8838                           
  8839                           ;stkvar	__this @ sp[(-4)+-2]
  8840  0056DE  0EFA               	movlw	-6
  8841  0056E0  006F FF8F FFE6     	movff	plusw1,postinc1
  8842  0056E6  006F FF8F FFE6     	movff	plusw1,postinc1
  8843  0056EC  ECB3  F01B         	call	_memset	;wreg free
  8844  0056F0                     l1493:
  8845                           
  8846                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  8847  0056F0  52E5               	movf	postdec1,f,c
  8848  0056F2  52E5               	movf	postdec1,f,c
  8849  0056F4  52E5               	movf	postdec1,f,c
  8850  0056F6  0012               	return		;funcret
  8851  0056F8                     __end_of_ringBufS_flush:
  8852                           	opt callstack 0
  8853                           
  8854 ;; *************** function _memset *****************
  8855 ;; Defined at:
  8856 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  8857 ;; Parameters:    Size  Location     Type
  8858 ;;  dest            2  [STACK] PTR void 
  8859 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8860 ;;  c               2  [STACK] int 
  8861 ;;  n               2  [STACK] unsigned int 
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;  s               2  [STACK] PTR unsigned char 
  8864 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8865 ;;  k               2  [STACK] unsigned int 
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  2  [STACK] PTR void 
  8868 ;; Registers used:
  8869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8879 ;;Total ram usage:        0 bytes
  8880 ;; Hardware stack levels used:    1
  8881 ;; Hardware stack levels required when called:    3
  8882 ;; This function calls:
  8883 ;;		Nothing
  8884 ;; This function is called by:
  8885 ;;		_ringBufS_init
  8886 ;;		_ringBufS_flush
  8887 ;; This function uses a reentrant model
  8888 ;;
  8889                           
  8890                           	psect	text38
  8891  003766                     __ptext38:
  8892                           	opt callstack 0
  8893  003766                     _memset:
  8894                           	opt callstack 0
  8895                           
  8896                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8897  003766  52E6               	movf	postinc1,f,c
  8898  003768  52E6               	movf	postinc1,f,c
  8899  00376A  52E6               	movf	postinc1,f,c
  8900  00376C  52E6               	movf	postinc1,f,c
  8901                           
  8902                           ;stkvar	_dest @ sp[(-4)+-2]
  8903                           
  8904                           ;incstack = 0
  8905  00376E  0EFA               	movlw	-6
  8906  003770  006F FF8C  F047    	movff	plusw1,btemp+10
  8907  003776  0EFB               	movlw	-5
  8908  003778  006F FF8C  F048    	movff	plusw1,btemp+11
  8909                           
  8910                           ;stkvar	_s @ sp[(-4)+0]
  8911  00377E  0EFD               	movlw	-3
  8912  003780  0060  F123  FFE3   	movff	btemp+11,plusw1
  8913  003786  0EFC               	movlw	-4
  8914  003788  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8915                           
  8916                           ;stkvar	_n @ sp[(-4)+-6]
  8917  00378E  0EF6               	movlw	-10
  8918  003790  006F FF8C  F03D    	movff	plusw1,btemp
  8919  003796  0EF7               	movlw	-9
  8920  003798  50E3               	movf	plusw1,w,c
  8921  00379A  103D               	iorwf	btemp,w,c
  8922  00379C  B4D8               	btfsc	status,2,c
  8923  00379E  D154               	goto	u5110
  8924                           
  8925                           ;stkvar	_c @ sp[(-4)+-4]
  8926                           ;stkvar	_s @ sp[(-4)+0]
  8927  0037A0  0EFC               	movlw	-4
  8928  0037A2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8929  0037A8  0EFD               	movlw	-3
  8930  0037AA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8931  0037B0  0EF8               	movlw	-8
  8932  0037B2  006F FF8F FFDF     	movff	plusw1,indf2
  8933                           
  8934                           ;stkvar	_c @ sp[(-4)+-4]
  8935                           ;stkvar	_n @ sp[(-4)+-6]
  8936                           ;stkvar	_s @ sp[(-4)+0]
  8937  0037B8  0EFC               	movlw	-4
  8938  0037BA  006F FF8C  F047    	movff	plusw1,btemp+10
  8939  0037C0  0EFD               	movlw	-3
  8940  0037C2  006F FF8C  F048    	movff	plusw1,btemp+11
  8941  0037C8  0EF6               	movlw	-10
  8942  0037CA  50E3               	movf	plusw1,w,c
  8943  0037CC  2647               	addwf	btemp+10,f,c
  8944  0037CE  0EF7               	movlw	-9
  8945  0037D0  50E3               	movf	plusw1,w,c
  8946  0037D2  2248               	addwfc	btemp+11,f,c
  8947  0037D4  0EFF               	movlw	255
  8948  0037D6  2447               	addwf	btemp+10,w,c
  8949  0037D8  6ED9               	movwf	fsr2l,c
  8950  0037DA  0EFF               	movlw	255
  8951  0037DC  2048               	addwfc	btemp+11,w,c
  8952  0037DE  6EDA               	movwf	fsr2h,c
  8953  0037E0  0EF8               	movlw	-8
  8954  0037E2  006F FF8F FFDF     	movff	plusw1,indf2
  8955                           
  8956                           ;stkvar	_n @ sp[(-4)+-6]
  8957  0037E8  0EF7               	movlw	-9
  8958  0037EA  50E3               	movf	plusw1,w,c
  8959  0037EC  E108               	bnz	l8347
  8960  0037EE  0EF6               	movlw	-10
  8961  0037F0  006F FF8C  F03D    	movff	plusw1,btemp
  8962  0037F6  0E03               	movlw	3
  8963  0037F8  5E3D               	subwf	btemp,f,c
  8964  0037FA  A0D8               	btfss	status,0,c
  8965  0037FC  D125               	goto	u5110
  8966  0037FE                     l8347:
  8967                           
  8968                           ;stkvar	_c @ sp[(-4)+-4]
  8969                           ;stkvar	_s @ sp[(-4)+0]
  8970  0037FE  0EFC               	movlw	-4
  8971  003800  006F FF8C  F047    	movff	plusw1,btemp+10
  8972  003806  0EFD               	movlw	-3
  8973  003808  006F FF8C  F048    	movff	plusw1,btemp+11
  8974  00380E  0E01               	movlw	1
  8975  003810  2447               	addwf	btemp+10,w,c
  8976  003812  6ED9               	movwf	fsr2l,c
  8977  003814  0E00               	movlw	0
  8978  003816  2048               	addwfc	btemp+11,w,c
  8979  003818  6EDA               	movwf	fsr2h,c
  8980  00381A  0EF8               	movlw	-8
  8981  00381C  006F FF8F FFDF     	movff	plusw1,indf2
  8982                           
  8983                           ;stkvar	_c @ sp[(-4)+-4]
  8984                           ;stkvar	_s @ sp[(-4)+0]
  8985  003822  0EFC               	movlw	-4
  8986  003824  006F FF8C  F047    	movff	plusw1,btemp+10
  8987  00382A  0EFD               	movlw	-3
  8988  00382C  006F FF8C  F048    	movff	plusw1,btemp+11
  8989  003832  0E02               	movlw	2
  8990  003834  2447               	addwf	btemp+10,w,c
  8991  003836  6ED9               	movwf	fsr2l,c
  8992  003838  0E00               	movlw	0
  8993  00383A  2048               	addwfc	btemp+11,w,c
  8994  00383C  6EDA               	movwf	fsr2h,c
  8995  00383E  0EF8               	movlw	-8
  8996  003840  006F FF8F FFDF     	movff	plusw1,indf2
  8997                           
  8998                           ;stkvar	_c @ sp[(-4)+-4]
  8999                           ;stkvar	_n @ sp[(-4)+-6]
  9000                           ;stkvar	_s @ sp[(-4)+0]
  9001  003846  0EFC               	movlw	-4
  9002  003848  006F FF8C  F047    	movff	plusw1,btemp+10
  9003  00384E  0EFD               	movlw	-3
  9004  003850  006F FF8C  F048    	movff	plusw1,btemp+11
  9005  003856  0EF6               	movlw	-10
  9006  003858  50E3               	movf	plusw1,w,c
  9007  00385A  2647               	addwf	btemp+10,f,c
  9008  00385C  0EF7               	movlw	-9
  9009  00385E  50E3               	movf	plusw1,w,c
  9010  003860  2248               	addwfc	btemp+11,f,c
  9011  003862  0EFE               	movlw	254
  9012  003864  2447               	addwf	btemp+10,w,c
  9013  003866  6ED9               	movwf	fsr2l,c
  9014  003868  0EFF               	movlw	255
  9015  00386A  2048               	addwfc	btemp+11,w,c
  9016  00386C  6EDA               	movwf	fsr2h,c
  9017  00386E  0EF8               	movlw	-8
  9018  003870  006F FF8F FFDF     	movff	plusw1,indf2
  9019                           
  9020                           ;stkvar	_c @ sp[(-4)+-4]
  9021                           ;stkvar	_n @ sp[(-4)+-6]
  9022                           ;stkvar	_s @ sp[(-4)+0]
  9023  003876  0EFC               	movlw	-4
  9024  003878  006F FF8C  F047    	movff	plusw1,btemp+10
  9025  00387E  0EFD               	movlw	-3
  9026  003880  006F FF8C  F048    	movff	plusw1,btemp+11
  9027  003886  0EF6               	movlw	-10
  9028  003888  50E3               	movf	plusw1,w,c
  9029  00388A  2647               	addwf	btemp+10,f,c
  9030  00388C  0EF7               	movlw	-9
  9031  00388E  50E3               	movf	plusw1,w,c
  9032  003890  2248               	addwfc	btemp+11,f,c
  9033  003892  0EFD               	movlw	253
  9034  003894  2447               	addwf	btemp+10,w,c
  9035  003896  6ED9               	movwf	fsr2l,c
  9036  003898  0EFF               	movlw	255
  9037  00389A  2048               	addwfc	btemp+11,w,c
  9038  00389C  6EDA               	movwf	fsr2h,c
  9039  00389E  0EF8               	movlw	-8
  9040  0038A0  006F FF8F FFDF     	movff	plusw1,indf2
  9041                           
  9042                           ;stkvar	_n @ sp[(-4)+-6]
  9043  0038A6  0EF7               	movlw	-9
  9044  0038A8  50E3               	movf	plusw1,w,c
  9045  0038AA  E108               	bnz	l8353
  9046  0038AC  0EF6               	movlw	-10
  9047  0038AE  006F FF8C  F03D    	movff	plusw1,btemp
  9048  0038B4  0E07               	movlw	7
  9049  0038B6  5E3D               	subwf	btemp,f,c
  9050  0038B8  A0D8               	btfss	status,0,c
  9051  0038BA  D0C6               	goto	u5110
  9052  0038BC                     l8353:
  9053                           
  9054                           ;stkvar	_c @ sp[(-4)+-4]
  9055                           ;stkvar	_s @ sp[(-4)+0]
  9056  0038BC  0EFC               	movlw	-4
  9057  0038BE  006F FF8C  F047    	movff	plusw1,btemp+10
  9058  0038C4  0EFD               	movlw	-3
  9059  0038C6  006F FF8C  F048    	movff	plusw1,btemp+11
  9060  0038CC  0E03               	movlw	3
  9061  0038CE  2447               	addwf	btemp+10,w,c
  9062  0038D0  6ED9               	movwf	fsr2l,c
  9063  0038D2  0E00               	movlw	0
  9064  0038D4  2048               	addwfc	btemp+11,w,c
  9065  0038D6  6EDA               	movwf	fsr2h,c
  9066  0038D8  0EF8               	movlw	-8
  9067  0038DA  006F FF8F FFDF     	movff	plusw1,indf2
  9068                           
  9069                           ;stkvar	_c @ sp[(-4)+-4]
  9070                           ;stkvar	_n @ sp[(-4)+-6]
  9071                           ;stkvar	_s @ sp[(-4)+0]
  9072  0038E0  0EFC               	movlw	-4
  9073  0038E2  006F FF8C  F047    	movff	plusw1,btemp+10
  9074  0038E8  0EFD               	movlw	-3
  9075  0038EA  006F FF8C  F048    	movff	plusw1,btemp+11
  9076  0038F0  0EF6               	movlw	-10
  9077  0038F2  50E3               	movf	plusw1,w,c
  9078  0038F4  2647               	addwf	btemp+10,f,c
  9079  0038F6  0EF7               	movlw	-9
  9080  0038F8  50E3               	movf	plusw1,w,c
  9081  0038FA  2248               	addwfc	btemp+11,f,c
  9082  0038FC  0EFC               	movlw	252
  9083  0038FE  2447               	addwf	btemp+10,w,c
  9084  003900  6ED9               	movwf	fsr2l,c
  9085  003902  0EFF               	movlw	255
  9086  003904  2048               	addwfc	btemp+11,w,c
  9087  003906  6EDA               	movwf	fsr2h,c
  9088  003908  0EF8               	movlw	-8
  9089  00390A  006F FF8F FFDF     	movff	plusw1,indf2
  9090                           
  9091                           ;stkvar	_n @ sp[(-4)+-6]
  9092  003910  0EF7               	movlw	-9
  9093  003912  50E3               	movf	plusw1,w,c
  9094  003914  E108               	bnz	l8359
  9095  003916  0EF6               	movlw	-10
  9096  003918  006F FF8C  F03D    	movff	plusw1,btemp
  9097  00391E  0E09               	movlw	9
  9098  003920  5E3D               	subwf	btemp,f,c
  9099  003922  A0D8               	btfss	status,0,c
  9100  003924  D091               	goto	u5110
  9101  003926                     l8359:
  9102                           
  9103                           ;stkvar	_s @ sp[(-4)+0]
  9104  003926  0EFC               	movlw	-4
  9105  003928  006F FF8C  F047    	movff	plusw1,btemp+10
  9106  00392E  1E47               	comf	btemp+10,f,c
  9107  003930  0EFD               	movlw	-3
  9108  003932  006F FF8C  F048    	movff	plusw1,btemp+11
  9109  003938  1E48               	comf	btemp+11,f,c
  9110  00393A  2A47               	incf	btemp+10,f,c
  9111  00393C  B4D8               	btfsc	status,2,c
  9112  00393E  2A48               	incf	btemp+11,f,c
  9113  003940  0E03               	movlw	3
  9114  003942  1647               	andwf	btemp+10,f,c
  9115  003944  0E00               	movlw	0
  9116  003946  1648               	andwf	btemp+11,f,c
  9117                           
  9118                           ;stkvar	_k @ sp[(-4)+2]
  9119  003948  0EFE               	movlw	-2
  9120  00394A  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9121  003950  0EFF               	movlw	-1
  9122  003952  0060  F123  FFE3   	movff	btemp+11,plusw1
  9123                           
  9124                           ;stkvar	_k @ sp[(-4)+2]
  9125                           ;stkvar	_s @ sp[(-4)+0]
  9126  003958  0EFC               	movlw	-4
  9127  00395A  50E3               	movf	plusw1,w,c
  9128  00395C  6E3D               	movwf	btemp,c
  9129  00395E  0EFE               	movlw	-2
  9130  003960  50E3               	movf	plusw1,w,c
  9131  003962  263D               	addwf	btemp,f,c
  9132  003964  0EFC               	movlw	-4
  9133  003966  0060  F0F7  FFE3   	movff	btemp,plusw1
  9134  00396C  0EFD               	movlw	-3
  9135  00396E  50E3               	movf	plusw1,w,c
  9136  003970  6E3D               	movwf	btemp,c
  9137  003972  0EFF               	movlw	-1
  9138  003974  50E3               	movf	plusw1,w,c
  9139  003976  223D               	addwfc	btemp,f,c
  9140  003978  0EFD               	movlw	-3
  9141  00397A  0060  F0F7  FFE3   	movff	btemp,plusw1
  9142                           
  9143                           ;stkvar	_k @ sp[(-4)+2]
  9144                           ;stkvar	_n @ sp[(-4)+-6]
  9145  003980  0EF6               	movlw	-10
  9146  003982  50E3               	movf	plusw1,w,c
  9147  003984  6E3D               	movwf	btemp,c
  9148  003986  0EFE               	movlw	-2
  9149  003988  50E3               	movf	plusw1,w,c
  9150  00398A  5E3D               	subwf	btemp,f,c
  9151  00398C  0EF6               	movlw	-10
  9152  00398E  0060  F0F7  FFE3   	movff	btemp,plusw1
  9153  003994  0EF7               	movlw	-9
  9154  003996  50E3               	movf	plusw1,w,c
  9155  003998  6E3D               	movwf	btemp,c
  9156  00399A  0EFF               	movlw	-1
  9157  00399C  50E3               	movf	plusw1,w,c
  9158  00399E  5A3D               	subwfb	btemp,f,c
  9159  0039A0  0EF7               	movlw	-9
  9160  0039A2  0060  F0F7  FFE3   	movff	btemp,plusw1
  9161  0039A8  0EFC               	movlw	252
  9162  0039AA  6E47               	movwf	btemp+10,c
  9163  0039AC  0EFF               	movlw	255
  9164  0039AE  6E48               	movwf	btemp+11,c
  9165                           
  9166                           ;stkvar	_n @ sp[(-4)+-6]
  9167  0039B0  0EF6               	movlw	-10
  9168  0039B2  006F FF8C  F03D    	movff	plusw1,btemp
  9169  0039B8  5047               	movf	btemp+10,w,c
  9170  0039BA  163D               	andwf	btemp,f,c
  9171  0039BC  0EF6               	movlw	-10
  9172  0039BE  0060  F0F7  FFE3   	movff	btemp,plusw1
  9173  0039C4  0EF7               	movlw	-9
  9174  0039C6  006F FF8C  F03D    	movff	plusw1,btemp
  9175  0039CC  5048               	movf	btemp+11,w,c
  9176  0039CE  163D               	andwf	btemp,f,c
  9177  0039D0  0EF7               	movlw	-9
  9178  0039D2  D02E               	goto	L26
  9179  0039D4                     l8367:
  9180                           
  9181                           ;stkvar	_c @ sp[(-4)+-4]
  9182                           ;stkvar	_s @ sp[(-4)+0]
  9183  0039D4  0EFC               	movlw	-4
  9184  0039D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9185  0039DC  0EFD               	movlw	-3
  9186  0039DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9187  0039E4  0EF8               	movlw	-8
  9188  0039E6  006F FF8F FFDF     	movff	plusw1,indf2
  9189                           
  9190                           ;stkvar	_n @ sp[(-4)+-6]
  9191  0039EC  0EF6               	movlw	-10
  9192  0039EE  006F FF8C  F03D    	movff	plusw1,btemp
  9193  0039F4  0E01               	movlw	1
  9194  0039F6  5E3D               	subwf	btemp,f,c
  9195  0039F8  0EF6               	movlw	-10
  9196  0039FA  0060  F0F7  FFE3   	movff	btemp,plusw1
  9197  003A00  0EF7               	movlw	-9
  9198  003A02  006F FF8C  F03D    	movff	plusw1,btemp
  9199  003A08  0E00               	movlw	0
  9200  003A0A  5A3D               	subwfb	btemp,f,c
  9201  003A0C  0EF7               	movlw	-9
  9202  003A0E  0060  F0F7  FFE3   	movff	btemp,plusw1
  9203                           
  9204                           ;stkvar	_s @ sp[(-4)+0]
  9205  003A14  0EFC               	movlw	-4
  9206  003A16  50E3               	movf	plusw1,w,c
  9207  003A18  0F01               	addlw	1
  9208  003A1A  6E3D               	movwf	btemp,c
  9209  003A1C  0EFC               	movlw	-4
  9210  003A1E  0060  F0F7  FFE3   	movff	btemp,plusw1
  9211  003A24  6A3D               	clrf	btemp,c
  9212  003A26  0EFD               	movlw	-3
  9213  003A28  50E3               	movf	plusw1,w,c
  9214  003A2A  203D               	addwfc	btemp,w,c
  9215  003A2C  6E3D               	movwf	btemp,c
  9216  003A2E  0EFD               	movlw	-3
  9217  003A30                     L26:
  9218  003A30  0060  F0F7  FFE3   	movff	btemp,plusw1
  9219                           
  9220                           ;stkvar	_n @ sp[(-4)+-6]
  9221  003A36  0EF6               	movlw	-10
  9222  003A38  006F FF8C  F03D    	movff	plusw1,btemp
  9223  003A3E  0EF7               	movlw	-9
  9224  003A40  50E3               	movf	plusw1,w,c
  9225  003A42  103D               	iorwf	btemp,w,c
  9226  003A44  A4D8               	btfss	status,2,c
  9227  003A46  D7C6               	goto	l8367
  9228  003A48                     u5110:
  9229                           
  9230                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  9231  003A48  0EF6               	movlw	246
  9232  003A4A  26E1               	addwf	fsr1l,f,c
  9233  003A4C  0EFF               	movlw	255
  9234  003A4E  22E2               	addwfc	fsr1h,f,c
  9235  003A50  0012               	return		;funcret
  9236  003A52                     __end_of_memset:
  9237                           	opt callstack 0
  9238                           
  9239 ;; *************** function _printf *****************
  9240 ;; Defined at:
  9241 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;  fmt             1  [STACK] PTR const unsigned char 
  9244 ;;		 -> STR_18(3), STR_17(3), STR_16(3), 
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;  ap              2  [STACK] PTR void [1]
  9247 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9248 ;;  ret             2    0        int 
  9249 ;; Return value:  Size  Location     Type
  9250 ;;                  2  [STACK] int 
  9251 ;; Registers used:
  9252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9253 ;; Tracked objects:
  9254 ;;		On entry : 3F/3B
  9255 ;;		On exit  : 3F/0
  9256 ;;		Unchanged: 0/0
  9257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9262 ;;Total ram usage:        0 bytes
  9263 ;; Hardware stack levels used:    1
  9264 ;; Hardware stack levels required when called:   11
  9265 ;; This function calls:
  9266 ;;		_vfprintf
  9267 ;; This function is called by:
  9268 ;;		_eaDogM_WriteString
  9269 ;;		_send_lcd_cmd_dma
  9270 ;; This function uses a reentrant model
  9271 ;;
  9272                           
  9273                           	psect	text39
  9274  005916                     __ptext39:
  9275                           	opt callstack 0
  9276  005916                     _printf:
  9277                           	opt callstack 0
  9278                           
  9279                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9280  005916  52E6               	movf	postinc1,f,c
  9281  005918  52E6               	movf	postinc1,f,c
  9282                           
  9283                           ;stkvar	?_printf @ sp[(-2)+-3]
  9284                           
  9285                           ;incstack = 0
  9286  00591A  0EFB               	movlw	251
  9287  00591C  24E1               	addwf	fsr1l,w,c
  9288  00591E  6E47               	movwf	btemp+10,c
  9289  005920  0EFF               	movlw	255
  9290  005922  20E2               	addwfc	fsr1h,w,c
  9291  005924  6E48               	movwf	btemp+11,c
  9292  005926  0E01               	movlw	1
  9293  005928  2647               	addwf	btemp+10,f,c
  9294  00592A  0E00               	movlw	0
  9295  00592C  2248               	addwfc	btemp+11,f,c
  9296                           
  9297                           ;stkvar	_ap @ sp[(-2)+0]
  9298  00592E  0EFF               	movlw	-1
  9299  005930  0060  F123  FFE3   	movff	btemp+11,plusw1
  9300  005936  0EFE               	movlw	-2
  9301  005938  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9302                           
  9303                           ;stkvar	_ap @ sp[(-2)+0]
  9304  00593E  0EFE               	movlw	254
  9305  005940  24E1               	addwf	fsr1l,w,c
  9306  005942  6E3D               	movwf	btemp,c
  9307  005944  0EFF               	movlw	255
  9308  005946  20E2               	addwfc	fsr1h,w,c
  9309  005948  6E3E               	movwf	btemp+1,c
  9310  00594A  0060  F0F7  FFE6   	movff	btemp,postinc1
  9311  005950  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  9312                           
  9313                           ;stkvar	_fmt @ sp[(-4)+-2]
  9314  005956  0EFA               	movlw	-6
  9315  005958  50E3               	movf	plusw1,w,c
  9316  00595A  6EE6               	movwf	postinc1,c
  9317  00595C  0E00               	movlw	0
  9318  00595E  6EE6               	movwf	postinc1,c
  9319  005960  0E00               	movlw	0
  9320  005962  6EE6               	movwf	postinc1,c
  9321  005964  EC9B  F02A         	call	_vfprintf	;wreg free
  9322                           
  9323                           ; BSR set to: 0
  9324                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  9325  005968  52E5               	movf	postdec1,f,c
  9326  00596A  52E5               	movf	postdec1,f,c
  9327  00596C  52E5               	movf	postdec1,f,c
  9328  00596E  50E7               	movf	indf1,w,c
  9329  005970  5EE1               	subwf	fsr1l,f,c
  9330  005972  0E00               	movlw	0
  9331  005974  5AE2               	subwfb	fsr1h,f,c
  9332  005976  0012               	return		;funcret
  9333  005978                     __end_of_printf:
  9334                           	opt callstack 0
  9335                           
  9336 ;; *************** function _vfprintf *****************
  9337 ;; Defined at:
  9338 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9341 ;;		 -> f(5), NULL(0), 
  9342 ;;  fmt             1  [STACK] PTR const unsigned char 
  9343 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
  9344 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
  9345 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
  9346 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
  9347 ;;		 -> STR_1(17), 
  9348 ;;  ap              2  [STACK] PTR PTR void 
  9349 ;;		 -> ap(2), ap(2), 
  9350 ;; Auto vars:     Size  Location     Type
  9351 ;;  cfmt            1  [STACK] PTR unsigned char 
  9352 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
  9353 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
  9354 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
  9355 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
  9356 ;;		 -> STR_1(17), 
  9357 ;; Return value:  Size  Location     Type
  9358 ;;                  2  [STACK] int 
  9359 ;; Registers used:
  9360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9361 ;; Tracked objects:
  9362 ;;		On entry : 0/1
  9363 ;;		On exit  : 3F/0
  9364 ;;		Unchanged: 0/0
  9365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9370 ;;Total ram usage:        0 bytes
  9371 ;; Hardware stack levels used:    1
  9372 ;; Hardware stack levels required when called:   10
  9373 ;; This function calls:
  9374 ;;		_vfpfcnvrt
  9375 ;; This function is called by:
  9376 ;;		_sprintf
  9377 ;;		_printf
  9378 ;; This function uses a reentrant model
  9379 ;;
  9380                           
  9381                           	psect	text40
  9382  005536                     __ptext40:
  9383                           	opt callstack 0
  9384  005536                     _vfprintf:
  9385                           	opt callstack 0
  9386                           
  9387                           ; BSR set to: 0
  9388                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9389  005536  52E6               	movf	postinc1,f,c
  9390                           
  9391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  9392                           ;stkvar	_fmt @ sp[(-1)+-3]
  9393                           
  9394                           ;incstack = 0
  9395  005538  0EFC               	movlw	-4
  9396  00553A  006F FF8C  F048    	movff	plusw1,btemp+11
  9397                           
  9398                           ;stkvar	_cfmt @ sp[(-1)+0]
  9399  005540  0EFF               	movlw	-1
  9400  005542  0060  F123  FFE3   	movff	btemp+11,plusw1
  9401                           
  9402                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  9403  005548  0100               	movlb	0	; () banked
  9404  00554A  6BFB               	clrf	_nout& (0+255),b
  9405  00554C  6BFC               	clrf	(_nout+1)& (0+255),b
  9406                           
  9407                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9408  00554E  D021               	goto	l8381
  9409  005550                     l8379:
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  9413                           ;stkvar	_ap @ sp[(-1)+-5]
  9414  005550  0EFA               	movlw	-6
  9415  005552  006F FF8F FFE6     	movff	plusw1,postinc1
  9416  005558  006F FF8F FFE6     	movff	plusw1,postinc1
  9417                           
  9418                           ;stkvar	_cfmt @ sp[(-3)+0]
  9419  00555E  0EFD               	movlw	253
  9420  005560  24E1               	addwf	fsr1l,w,c
  9421  005562  6E3D               	movwf	btemp,c
  9422  005564  0EFF               	movlw	255
  9423  005566  20E2               	addwfc	fsr1h,w,c
  9424  005568  6E3E               	movwf	btemp+1,c
  9425  00556A  0060  F0F7  FFE6   	movff	btemp,postinc1
  9426  005570  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  9427                           
  9428                           ;stkvar	_fp @ sp[(-5)+-2]
  9429  005576  0EF9               	movlw	-7
  9430  005578  006F FF8F FFE6     	movff	plusw1,postinc1
  9431  00557E  006F FF8F FFE6     	movff	plusw1,postinc1
  9432  005584  EC23  F013         	call	_vfpfcnvrt	;wreg free
  9433  005588  503D               	movf	btemp,w,c
  9434  00558A  0100               	movlb	0	; () banked
  9435  00558C  27FB               	addwf	_nout& (0+255),f,b
  9436  00558E  503E               	movf	btemp+1,w,c
  9437  005590  23FC               	addwfc	(_nout+1)& (0+255),f,b
  9438  005592                     l8381:
  9439                           
  9440                           ; BSR set to: 0
  9441                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9442                           ;stkvar	_cfmt @ sp[(-1)+0]
  9443  005592  50E1               	movf	fsr1l,w,c
  9444  005594  0FFF               	addlw	-1
  9445  005596  6ED9               	movwf	fsr2l,c
  9446  005598  50E2               	movf	fsr1h,w,c
  9447  00559A  6EDA               	movwf	fsr2h,c
  9448  00559C  0EFF               	movlw	255
  9449  00559E  22DA               	addwfc	fsr2h,f,c
  9450  0055A0  006F FF7F FFF6     	movff	indf2,tblptrl
  9451  0055A6                     	if	1	;There is more than 1 active tblptr byte
  9452  0055A6  0E20               	movlw	high __smallconst
  9453  0055A8  6EF7               	movwf	tblptrh,c
  9454  0055AA                     	endif
  9455  0055AA                     	if	0	;tblptru may be non-zero
  9456  0055AA                     	endif
  9457  0055AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9458  0055AA  0E00               	movlw	low (__smallconst shr (0+16))
  9459  0055AC  6EF8               	movwf	tblptru,c
  9460  0055AE                     	endif
  9461  0055AE  0008               	tblrd		*
  9462  0055B0  50F5               	movf	tablat,w,c
  9463  0055B2  0900               	iorlw	0
  9464  0055B4  A4D8               	btfss	status,2,c
  9465  0055B6  D7CC               	goto	l8379
  9466                           
  9467                           ; BSR set to: 0
  9468                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  9469  0055B8  0060  F3EC  F03D   	movff	_nout,btemp
  9470  0055BE  0060  F3F0  F03E   	movff	_nout+1,btemp+1
  9471                           
  9472                           ; BSR set to: 0
  9473                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  9474  0055C4  0EFA               	movlw	250
  9475  0055C6  26E1               	addwf	fsr1l,f,c
  9476  0055C8  0EFF               	movlw	255
  9477  0055CA  22E2               	addwfc	fsr1h,f,c
  9478  0055CC  0012               	return		;funcret
  9479  0055CE                     __end_of_vfprintf:
  9480                           	opt callstack 0
  9481                           
  9482 ;; *************** function _vfpfcnvrt *****************
  9483 ;; Defined at:
  9484 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9485 ;; Parameters:    Size  Location     Type
  9486 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9487 ;;		 -> f(5), NULL(0), 
  9488 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  9489 ;;		 -> cfmt(1), 
  9490 ;;  ap              2  [STACK] PTR PTR void 
  9491 ;;		 -> ap(2), ap(2), 
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;  ll              8  [STACK] long long 
  9494 ;;  llu             8    0        unsigned long long 
  9495 ;;  f               4    0        unsigned long long 
  9496 ;;  vp              3    0        PTR void 
  9497 ;;  ct              3    0        unsigned char [3]
  9498 ;;  cp              2  [STACK] PTR unsigned char 
  9499 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(98), 
  9500 ;;  i               2    0        int 
  9501 ;;  done            2    0        int 
  9502 ;;  c               1  [STACK] unsigned char 
  9503 ;; Return value:  Size  Location     Type
  9504 ;;                  2  [STACK] int 
  9505 ;; Registers used:
  9506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9507 ;; Tracked objects:
  9508 ;;		On entry : 0/0
  9509 ;;		On exit  : 0/0
  9510 ;;		Unchanged: 0/0
  9511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9516 ;;Total ram usage:        0 bytes
  9517 ;; Hardware stack levels used:    1
  9518 ;; Hardware stack levels required when called:    9
  9519 ;; This function calls:
  9520 ;;		_ctoa
  9521 ;;		_dtoa
  9522 ;;		_fputc
  9523 ;;		_stoa
  9524 ;;		_strncmp
  9525 ;; This function is called by:
  9526 ;;		_vfprintf
  9527 ;; This function uses a reentrant model
  9528 ;;
  9529                           
  9530                           	psect	text41
  9531  002646                     __ptext41:
  9532                           	opt callstack 0
  9533  002646                     _vfpfcnvrt:
  9534                           	opt callstack 0
  9535                           
  9536                           ; BSR set to: 0
  9537                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9538  002646  0E0B               	movlw	11
  9539  002648  26E1               	addwf	fsr1l,f,c
  9540  00264A  0E00               	movlw	0
  9541  00264C  22E2               	addwfc	fsr1h,f,c
  9542                           
  9543                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  9544                           ;stkvar	_fmt @ sp[(-11)+-4]
  9545                           
  9546                           ;incstack = 0
  9547  00264E  0EF1               	movlw	-15
  9548  002650  006F FF8F FFD9     	movff	plusw1,fsr2l
  9549  002656  0EF2               	movlw	-14
  9550  002658  006F FF8F FFDA     	movff	plusw1,fsr2h
  9551  00265E  006F FF7F FFF6     	movff	indf2,tblptrl
  9552  002664                     	if	1	;There is more than 1 active tblptr byte
  9553  002664  0E20               	movlw	high __smallconst
  9554  002666  6EF7               	movwf	tblptrh,c
  9555  002668                     	endif
  9556  002668                     	if	0	;tblptru may be non-zero
  9557  002668                     	endif
  9558  002668                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9559  002668  0E00               	movlw	low (__smallconst shr (0+16))
  9560  00266A  6EF8               	movwf	tblptru,c
  9561  00266C                     	endif
  9562  00266C  0008               	tblrd		*
  9563  00266E  50F5               	movf	tablat,w,c
  9564  002670  0A25               	xorlw	37
  9565  002672  A4D8               	btfss	status,2,c
  9566  002674  D213               	goto	l8325
  9567                           
  9568                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  9569                           ;stkvar	_fmt @ sp[(-11)+-4]
  9570  002676  0EF1               	movlw	-15
  9571  002678  006F FF8F FFD9     	movff	plusw1,fsr2l
  9572  00267E  0EF2               	movlw	-14
  9573  002680  006F FF8F FFDA     	movff	plusw1,fsr2h
  9574  002686  2ADF               	incf	indf2,f,c
  9575                           
  9576                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  9577  002688  6A1D               	clrf	_width,c
  9578  00268A  6A1E               	clrf	_width+1,c
  9579  00268C  6A21               	clrf	_flags,c
  9580  00268E  6A22               	clrf	_flags+1,c
  9581                           
  9582                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  9583  002690  681F               	setf	_prec,c
  9584  002692  6820               	setf	_prec+1,c
  9585                           
  9586                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9587                           ;stkvar	_fmt @ sp[(-11)+-4]
  9588  002694  0EF1               	movlw	-15
  9589  002696  006F FF8F FFD9     	movff	plusw1,fsr2l
  9590  00269C  0EF2               	movlw	-14
  9591  00269E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9592  0026A4  006F FF7F FFF6     	movff	indf2,tblptrl
  9593  0026AA                     	if	1	;There is more than 1 active tblptr byte
  9594  0026AA  0E20               	movlw	high __smallconst
  9595  0026AC  6EF7               	movwf	tblptrh,c
  9596  0026AE                     	endif
  9597  0026AE                     	if	0	;tblptru may be non-zero
  9598  0026AE                     	endif
  9599  0026AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9600  0026AE  0E00               	movlw	low (__smallconst shr (0+16))
  9601  0026B0  6EF8               	movwf	tblptru,c
  9602  0026B2                     	endif
  9603  0026B2  0008               	tblrd		*
  9604  0026B4  50F5               	movf	tablat,w,c
  9605  0026B6  0A63               	xorlw	99
  9606  0026B8  A4D8               	btfss	status,2,c
  9607  0026BA  D034               	goto	l8275
  9608                           
  9609                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9610                           ;stkvar	_fmt @ sp[(-11)+-4]
  9611  0026BC  0EF1               	movlw	-15
  9612  0026BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9613  0026C4  0EF2               	movlw	-14
  9614  0026C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9615  0026CC  2ADF               	incf	indf2,f,c
  9616                           
  9617                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9618                           ;stkvar	_ap @ sp[(-11)+-6]
  9619  0026CE  0EEF               	movlw	-17
  9620  0026D0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9621  0026D6  0EF0               	movlw	-16
  9622  0026D8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9623  0026DE  0E02               	movlw	2
  9624  0026E0  5EDE               	subwf	postinc2,f,c
  9625  0026E2  0E00               	movlw	0
  9626  0026E4  5ADD               	subwfb	postdec2,f,c
  9627  0026E6  006F FF78  F047    	movff	postinc2,btemp+10
  9628  0026EC  006F FF74  F048    	movff	postdec2,btemp+11
  9629  0026F2  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  9630  0026F8  0060  F123  FFDA   	movff	btemp+11,fsr2h
  9631  0026FE  50DF               	movf	indf2,w,c
  9632  002700  6E48               	movwf	btemp+11,c
  9633                           
  9634                           ;stkvar	_c @ sp[(-11)+10]
  9635  002702  0EFF               	movlw	-1
  9636  002704  0060  F123  FFE3   	movff	btemp+11,plusw1
  9637                           
  9638                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9639                           ;stkvar	_c @ sp[(-11)+10]
  9640  00270A  0EFF               	movlw	-1
  9641  00270C  50E3               	movf	plusw1,w,c
  9642  00270E  6EE6               	movwf	postinc1,c
  9643                           
  9644                           ;stkvar	_fp @ sp[(-12)+-2]
  9645  002710  0EF2               	movlw	-14
  9646  002712  006F FF8F FFE6     	movff	plusw1,postinc1
  9647  002718  006F FF8F FFE6     	movff	plusw1,postinc1
  9648  00271E  EC7C  F02B         	call	_ctoa	;wreg free
  9649  002722  D1E3               	goto	l1911
  9650  002724                     l8275:
  9651                           
  9652                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9653                           ;stkvar	_fmt @ sp[(-11)+-4]
  9654  002724  0EF1               	movlw	-15
  9655  002726  006F FF8F FFD9     	movff	plusw1,fsr2l
  9656  00272C  0EF2               	movlw	-14
  9657  00272E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9658  002734  006F FF7F FFF6     	movff	indf2,tblptrl
  9659  00273A                     	if	1	;There is more than 1 active tblptr byte
  9660  00273A  0E20               	movlw	high __smallconst
  9661  00273C  6EF7               	movwf	tblptrh,c
  9662  00273E                     	endif
  9663  00273E                     	if	0	;tblptru may be non-zero
  9664  00273E                     	endif
  9665  00273E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9666  00273E  0E00               	movlw	low (__smallconst shr (0+16))
  9667  002740  6EF8               	movwf	tblptru,c
  9668  002742                     	endif
  9669  002742  0008               	tblrd		*
  9670  002744  50F5               	movf	tablat,w,c
  9671  002746  0A64               	xorlw	100
  9672  002748  B4D8               	btfsc	status,2,c
  9673  00274A  D014               	goto	u5020
  9674                           
  9675                           ;stkvar	_fmt @ sp[(-11)+-4]
  9676  00274C  0EF1               	movlw	-15
  9677  00274E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9678  002754  0EF2               	movlw	-14
  9679  002756  006F FF8F FFDA     	movff	plusw1,fsr2h
  9680  00275C  006F FF7F FFF6     	movff	indf2,tblptrl
  9681  002762                     	if	1	;There is more than 1 active tblptr byte
  9682  002762  0E20               	movlw	high __smallconst
  9683  002764  6EF7               	movwf	tblptrh,c
  9684  002766                     	endif
  9685  002766                     	if	0	;tblptru may be non-zero
  9686  002766                     	endif
  9687  002766                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9688  002766  0E00               	movlw	low (__smallconst shr (0+16))
  9689  002768  6EF8               	movwf	tblptru,c
  9690  00276A                     	endif
  9691  00276A  0008               	tblrd		*
  9692  00276C  50F5               	movf	tablat,w,c
  9693  00276E  0A69               	xorlw	105
  9694  002770  A4D8               	btfss	status,2,c
  9695  002772  D073               	goto	l8287
  9696  002774                     u5020:
  9697                           
  9698                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9699                           ;stkvar	_fmt @ sp[(-11)+-4]
  9700  002774  0EF1               	movlw	-15
  9701  002776  006F FF8F FFD9     	movff	plusw1,fsr2l
  9702  00277C  0EF2               	movlw	-14
  9703  00277E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9704  002784  2ADF               	incf	indf2,f,c
  9705                           
  9706                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9707                           ;stkvar	_ap @ sp[(-11)+-6]
  9708  002786  0EEF               	movlw	-17
  9709  002788  006F FF8F FFD9     	movff	plusw1,fsr2l
  9710  00278E  0EF0               	movlw	-16
  9711  002790  006F FF8F FFDA     	movff	plusw1,fsr2h
  9712  002796  0E02               	movlw	2
  9713  002798  5EDE               	subwf	postinc2,f,c
  9714  00279A  0E00               	movlw	0
  9715  00279C  5ADD               	subwfb	postdec2,f,c
  9716  00279E  006F FF78  F047    	movff	postinc2,btemp+10
  9717  0027A4  006F FF74  F048    	movff	postdec2,btemp+11
  9718  0027AA  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  9719  0027B0  0060  F123  FFDA   	movff	btemp+11,fsr2h
  9720  0027B6  006F FF78  F047    	movff	postinc2,btemp+10
  9721  0027BC  006F FF74  F048    	movff	postdec2,btemp+11
  9722                           
  9723                           ;stkvar	_ll @ sp[(-11)+0]
  9724  0027C2  0EF5               	movlw	-11
  9725  0027C4  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9726  0027CA  0EF6               	movlw	-10
  9727  0027CC  0060  F123  FFE3   	movff	btemp+11,plusw1
  9728  0027D2  6A3D               	clrf	btemp,c
  9729  0027D4  BEE3               	btfsc	plusw1,7,c
  9730  0027D6  683D               	setf	btemp,c
  9731  0027D8  0EF7               	movlw	-9
  9732  0027DA  0060  F0F7  FFE3   	movff	btemp,plusw1
  9733  0027E0  0EF8               	movlw	-8
  9734  0027E2  0060  F0F7  FFE3   	movff	btemp,plusw1
  9735  0027E8  0EF9               	movlw	-7
  9736  0027EA  0060  F0F7  FFE3   	movff	btemp,plusw1
  9737  0027F0  0EFA               	movlw	-6
  9738  0027F2  0060  F0F7  FFE3   	movff	btemp,plusw1
  9739  0027F8  0EFB               	movlw	-5
  9740  0027FA  0060  F0F7  FFE3   	movff	btemp,plusw1
  9741  002800  0EFC               	movlw	-4
  9742  002802  0060  F0F7  FFE3   	movff	btemp,plusw1
  9743  002808                     l8283:
  9744                           
  9745                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9746                           ;stkvar	_ll @ sp[(-11)+0]
  9747  002808  50E1               	movf	fsr1l,w,c
  9748  00280A  0FF5               	addlw	-11
  9749  00280C  6ED9               	movwf	fsr2l,c
  9750  00280E  50E2               	movf	fsr1h,w,c
  9751  002810  6EDA               	movwf	fsr2h,c
  9752  002812  0EFF               	movlw	255
  9753  002814  22DA               	addwfc	fsr2h,f,c
  9754  002816  006F FF7B FFE6     	movff	postinc2,postinc1
  9755  00281C  006F FF7B FFE6     	movff	postinc2,postinc1
  9756  002822  006F FF7B FFE6     	movff	postinc2,postinc1
  9757  002828  006F FF7B FFE6     	movff	postinc2,postinc1
  9758  00282E  006F FF7B FFE6     	movff	postinc2,postinc1
  9759  002834  006F FF7B FFE6     	movff	postinc2,postinc1
  9760  00283A  006F FF7B FFE6     	movff	postinc2,postinc1
  9761  002840  006F FF7B FFE6     	movff	postinc2,postinc1
  9762                           
  9763                           ;stkvar	_fp @ sp[(-19)+-2]
  9764  002846  0EEB               	movlw	-21
  9765  002848  006F FF8F FFE6     	movff	plusw1,postinc1
  9766  00284E  006F FF8F FFE6     	movff	plusw1,postinc1
  9767  002854  ECC6  F017         	call	_dtoa	;wreg free
  9768  002858  D148               	goto	l1911
  9769  00285A                     l8287:
  9770                           
  9771                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  9772  00285A  0E02               	movlw	2
  9773  00285C  6EE6               	movwf	postinc1,c
  9774  00285E  0E00               	movlw	0
  9775  002860  6EE6               	movwf	postinc1,c
  9776  002862  0EBB               	movlw	STR_19& (0+255)
  9777  002864  6EE6               	movwf	postinc1,c
  9778                           
  9779                           ;stkvar	_fmt @ sp[(-14)+-4]
  9780  002866  0EEE               	movlw	-18
  9781  002868  006F FF8F FFD9     	movff	plusw1,fsr2l
  9782  00286E  0EEF               	movlw	-17
  9783  002870  006F FF8F FFDA     	movff	plusw1,fsr2h
  9784  002876  50DF               	movf	indf2,w,c
  9785  002878  6EE6               	movwf	postinc1,c
  9786  00287A  EC7E  F024         	call	_strncmp	;wreg free
  9787  00287E  503D               	movf	btemp,w,c
  9788  002880  103E               	iorwf	btemp+1,w,c
  9789  002882  B4D8               	btfsc	status,2,c
  9790  002884  D016               	goto	u5040
  9791  002886  0E02               	movlw	2
  9792  002888  6EE6               	movwf	postinc1,c
  9793  00288A  0E00               	movlw	0
  9794  00288C  6EE6               	movwf	postinc1,c
  9795  00288E  0EBE               	movlw	STR_23& (0+255)
  9796  002890  6EE6               	movwf	postinc1,c
  9797                           
  9798                           ;stkvar	_fmt @ sp[(-14)+-4]
  9799  002892  0EEE               	movlw	-18
  9800  002894  006F FF8F FFD9     	movff	plusw1,fsr2l
  9801  00289A  0EEF               	movlw	-17
  9802  00289C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9803  0028A2  50DF               	movf	indf2,w,c
  9804  0028A4  6EE6               	movwf	postinc1,c
  9805  0028A6  EC7E  F024         	call	_strncmp	;wreg free
  9806  0028AA  503D               	movf	btemp,w,c
  9807  0028AC  103E               	iorwf	btemp+1,w,c
  9808  0028AE  A4D8               	btfss	status,2,c
  9809  0028B0  D067               	goto	l8299
  9810  0028B2                     u5040:
  9811                           
  9812                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  9813                           ;stkvar	_fmt @ sp[(-11)+-4]
  9814  0028B2  0EF1               	movlw	-15
  9815  0028B4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9816  0028BA  0EF2               	movlw	-14
  9817  0028BC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9818  0028C2  0E02               	movlw	2
  9819  0028C4  26DF               	addwf	indf2,f,c
  9820                           
  9821                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  9822                           ;stkvar	_ap @ sp[(-11)+-6]
  9823  0028C6  0EEF               	movlw	-17
  9824  0028C8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9825  0028CE  0EF0               	movlw	-16
  9826  0028D0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9827  0028D6  0E04               	movlw	4
  9828  0028D8  5EDE               	subwf	postinc2,f,c
  9829  0028DA  0E00               	movlw	0
  9830  0028DC  5ADD               	subwfb	postdec2,f,c
  9831  0028DE  006F FF78  F047    	movff	postinc2,btemp+10
  9832  0028E4  006F FF74  F048    	movff	postdec2,btemp+11
  9833  0028EA  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  9834  0028F0  0060  F123  FFDA   	movff	btemp+11,fsr2h
  9835  0028F6  006F FF78  F045    	movff	postinc2,btemp+8
  9836  0028FC  006F FF78  F046    	movff	postinc2,btemp+9
  9837  002902  006F FF78  F047    	movff	postinc2,btemp+10
  9838  002908  006F FF78  F048    	movff	postinc2,btemp+11
  9839  00290E  0060  F114  F04D   	movff	btemp+8,btemp+16
  9840  002914  0060  F118  F04E   	movff	btemp+9,btemp+17
  9841  00291A  0060  F11C  F04F   	movff	btemp+10,btemp+18
  9842  002920  0060  F120  F050   	movff	btemp+11,btemp+19
  9843  002926  6A51               	clrf	btemp+20,c
  9844  002928  BE50               	btfsc	btemp+19,7,c
  9845  00292A  6851               	setf	btemp+20,c
  9846  00292C  0060  F144  F052   	movff	btemp+20,btemp+21
  9847  002932  0060  F144  F053   	movff	btemp+20,btemp+22
  9848  002938  0060  F144  F054   	movff	btemp+20,btemp+23
  9849                           
  9850                           ;stkvar	_ll @ sp[(-11)+0]
  9851  00293E  0EF5               	movlw	-11
  9852  002940  0060  F137  FFE3   	movff	btemp+16,plusw1
  9853  002946  0EF6               	movlw	-10
  9854  002948  0060  F13B  FFE3   	movff	btemp+17,plusw1
  9855  00294E  0EF7               	movlw	-9
  9856  002950  0060  F13F  FFE3   	movff	btemp+18,plusw1
  9857  002956  0EF8               	movlw	-8
  9858  002958  0060  F143  FFE3   	movff	btemp+19,plusw1
  9859  00295E  0EF9               	movlw	-7
  9860  002960  0060  F147  FFE3   	movff	btemp+20,plusw1
  9861  002966  0EFA               	movlw	-6
  9862  002968  0060  F14B  FFE3   	movff	btemp+21,plusw1
  9863  00296E  0EFB               	movlw	-5
  9864  002970  0060  F14F  FFE3   	movff	btemp+22,plusw1
  9865  002976  0EFC               	movlw	-4
  9866  002978  0060  F153  FFE3   	movff	btemp+23,plusw1
  9867  00297E  D744               	goto	l8283
  9868  002980                     l8299:
  9869                           
  9870                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9871                           ;stkvar	_fmt @ sp[(-11)+-4]
  9872  002980  0EF1               	movlw	-15
  9873  002982  006F FF8F FFD9     	movff	plusw1,fsr2l
  9874  002988  0EF2               	movlw	-14
  9875  00298A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9876  002990  006F FF7F FFF6     	movff	indf2,tblptrl
  9877  002996                     	if	1	;There is more than 1 active tblptr byte
  9878  002996  0E20               	movlw	high __smallconst
  9879  002998  6EF7               	movwf	tblptrh,c
  9880  00299A                     	endif
  9881  00299A                     	if	0	;tblptru may be non-zero
  9882  00299A                     	endif
  9883  00299A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9884  00299A  0E00               	movlw	low (__smallconst shr (0+16))
  9885  00299C  6EF8               	movwf	tblptru,c
  9886  00299E                     	endif
  9887  00299E  0008               	tblrd		*
  9888  0029A0  50F5               	movf	tablat,w,c
  9889  0029A2  0A73               	xorlw	115
  9890  0029A4  A4D8               	btfss	status,2,c
  9891  0029A6  D040               	goto	l8309
  9892                           
  9893                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9894                           ;stkvar	_fmt @ sp[(-11)+-4]
  9895  0029A8  0EF1               	movlw	-15
  9896  0029AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9897  0029B0  0EF2               	movlw	-14
  9898  0029B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9899  0029B8  2ADF               	incf	indf2,f,c
  9900                           
  9901                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9902                           ;stkvar	_ap @ sp[(-11)+-6]
  9903  0029BA  0EEF               	movlw	-17
  9904  0029BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9905  0029C2  0EF0               	movlw	-16
  9906  0029C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9907  0029CA  0E02               	movlw	2
  9908  0029CC  5EDE               	subwf	postinc2,f,c
  9909  0029CE  0E00               	movlw	0
  9910  0029D0  5ADD               	subwfb	postdec2,f,c
  9911  0029D2  006F FF78  F047    	movff	postinc2,btemp+10
  9912  0029D8  006F FF74  F048    	movff	postdec2,btemp+11
  9913  0029DE  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  9914  0029E4  0060  F123  FFDA   	movff	btemp+11,fsr2h
  9915  0029EA  006F FF78  F047    	movff	postinc2,btemp+10
  9916  0029F0  006F FF74  F048    	movff	postdec2,btemp+11
  9917                           
  9918                           ;stkvar	_cp @ sp[(-11)+8]
  9919  0029F6  0EFE               	movlw	-2
  9920  0029F8  0060  F123  FFE3   	movff	btemp+11,plusw1
  9921  0029FE  0EFD               	movlw	-3
  9922  002A00  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9923                           
  9924                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9925                           ;stkvar	_cp @ sp[(-11)+8]
  9926  002A06  0EFD               	movlw	-3
  9927  002A08  006F FF8F FFE6     	movff	plusw1,postinc1
  9928  002A0E  006F FF8F FFE6     	movff	plusw1,postinc1
  9929                           
  9930                           ;stkvar	_fp @ sp[(-13)+-2]
  9931  002A14  0EF1               	movlw	-15
  9932  002A16  006F FF8F FFE6     	movff	plusw1,postinc1
  9933  002A1C  006F FF8F FFE6     	movff	plusw1,postinc1
  9934  002A22  EC29  F01D         	call	_stoa	;wreg free
  9935  002A26  D061               	goto	l1911
  9936  002A28                     l8309:
  9937                           
  9938                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9939                           ;stkvar	_fmt @ sp[(-11)+-4]
  9940  002A28  0EF1               	movlw	-15
  9941  002A2A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9942  002A30  0EF2               	movlw	-14
  9943  002A32  006F FF8F FFDA     	movff	plusw1,fsr2h
  9944  002A38  006F FF7F FFF6     	movff	indf2,tblptrl
  9945  002A3E                     	if	1	;There is more than 1 active tblptr byte
  9946  002A3E  0E20               	movlw	high __smallconst
  9947  002A40  6EF7               	movwf	tblptrh,c
  9948  002A42                     	endif
  9949  002A42                     	if	0	;tblptru may be non-zero
  9950  002A42                     	endif
  9951  002A42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9952  002A42  0E00               	movlw	low (__smallconst shr (0+16))
  9953  002A44  6EF8               	movwf	tblptru,c
  9954  002A46                     	endif
  9955  002A46  0008               	tblrd		*
  9956  002A48  50F5               	movf	tablat,w,c
  9957  002A4A  0A25               	xorlw	37
  9958  002A4C  A4D8               	btfss	status,2,c
  9959  002A4E  D018               	goto	l8319
  9960                           
  9961                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9962                           ;stkvar	_fmt @ sp[(-11)+-4]
  9963  002A50  0EF1               	movlw	-15
  9964  002A52  006F FF8F FFD9     	movff	plusw1,fsr2l
  9965  002A58  0EF2               	movlw	-14
  9966  002A5A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9967  002A60  2ADF               	incf	indf2,f,c
  9968                           
  9969                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9970                           ;stkvar	_fp @ sp[(-11)+-2]
  9971  002A62  0EF3               	movlw	-13
  9972  002A64  006F FF8F FFE6     	movff	plusw1,postinc1
  9973  002A6A  006F FF8F FFE6     	movff	plusw1,postinc1
  9974  002A70  0E25               	movlw	37
  9975  002A72  6EE6               	movwf	postinc1,c
  9976  002A74  0E00               	movlw	0
  9977  002A76  6EE6               	movwf	postinc1,c
  9978  002A78  ECD0  F025         	call	_fputc	;wreg free
  9979  002A7C                     l8315:
  9980                           
  9981                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9982  002A7C  0E01               	movlw	1
  9983  002A7E  D00A               	goto	L27
  9984  002A80                     l8319:
  9985                           
  9986                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9987                           ;stkvar	_fmt @ sp[(-11)+-4]
  9988  002A80  0EF1               	movlw	-15
  9989  002A82  006F FF8F FFD9     	movff	plusw1,fsr2l
  9990  002A88  0EF2               	movlw	-14
  9991  002A8A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9992  002A90  2ADF               	incf	indf2,f,c
  9993                           
  9994                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9995  002A92  0E00               	movlw	0
  9996  002A94                     L27:
  9997  002A94  6E3D               	movwf	btemp,c
  9998  002A96  0E00               	movlw	0
  9999  002A98  6E3E               	movwf	btemp+1,c
 10000  002A9A  D027               	goto	l1911
 10001  002A9C                     l8325:
 10002                           
 10003                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 10004                           ;stkvar	_fp @ sp[(-11)+-2]
 10005  002A9C  0EF3               	movlw	-13
 10006  002A9E  006F FF8F FFE6     	movff	plusw1,postinc1
 10007  002AA4  006F FF8F FFE6     	movff	plusw1,postinc1
 10008                           
 10009                           ;stkvar	_fmt @ sp[(-13)+-4]
 10010  002AAA  0EEF               	movlw	-17
 10011  002AAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10012  002AB2  0EF0               	movlw	-16
 10013  002AB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10014  002ABA  006F FF7F FFF6     	movff	indf2,tblptrl
 10015  002AC0                     	if	1	;There is more than 1 active tblptr byte
 10016  002AC0  0E20               	movlw	high __smallconst
 10017  002AC2  6EF7               	movwf	tblptrh,c
 10018  002AC4                     	endif
 10019  002AC4                     	if	0	;tblptru may be non-zero
 10020  002AC4                     	endif
 10021  002AC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10022  002AC4  0E00               	movlw	low (__smallconst shr (0+16))
 10023  002AC6  6EF8               	movwf	tblptru,c
 10024  002AC8                     	endif
 10025  002AC8  0008               	tblrd		*
 10026  002ACA  50F5               	movf	tablat,w,c
 10027  002ACC  6EE6               	movwf	postinc1,c
 10028  002ACE  0E00               	movlw	0
 10029  002AD0  6EE6               	movwf	postinc1,c
 10030  002AD2  ECD0  F025         	call	_fputc	;wreg free
 10031                           
 10032                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 10033                           ;stkvar	_fmt @ sp[(-11)+-4]
 10034  002AD6  0EF1               	movlw	-15
 10035  002AD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10036  002ADE  0EF2               	movlw	-14
 10037  002AE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10038  002AE6  2ADF               	incf	indf2,f,c
 10039  002AE8  D7C9               	goto	l8315
 10040  002AEA                     l1911:
 10041                           
 10042                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 10043  002AEA  0EEF               	movlw	239
 10044  002AEC  26E1               	addwf	fsr1l,f,c
 10045  002AEE  0EFF               	movlw	255
 10046  002AF0  22E2               	addwfc	fsr1h,f,c
 10047  002AF2  0012               	return		;funcret
 10048  002AF4                     __end_of_vfpfcnvrt:
 10049                           	opt callstack 0
 10050                           
 10051 ;; *************** function _strncmp *****************
 10052 ;; Defined at:
 10053 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
 10054 ;; Parameters:    Size  Location     Type
 10055 ;;  _l              1  [STACK] PTR const unsigned char 
 10056 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
 10057 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
 10058 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
 10059 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
 10060 ;;		 -> STR_1(17), 
 10061 ;;  _r              1  [STACK] PTR const unsigned char 
 10062 ;;		 -> STR_25(3), STR_21(3), 
 10063 ;;  n               2  [STACK] unsigned int 
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;  r               1  [STACK] PTR const unsigned char 
 10066 ;;		 -> STR_25(3), STR_21(3), 
 10067 ;;  l               1  [STACK] PTR const unsigned char 
 10068 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
 10069 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
 10070 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
 10071 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
 10072 ;;		 -> STR_1(17), 
 10073 ;; Return value:  Size  Location     Type
 10074 ;;                  2  [STACK] int 
 10075 ;; Registers used:
 10076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
 10077 ;; Tracked objects:
 10078 ;;		On entry : 0/0
 10079 ;;		On exit  : 0/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10086 ;;Total ram usage:        0 bytes
 10087 ;; Hardware stack levels used:    1
 10088 ;; Hardware stack levels required when called:    3
 10089 ;; This function calls:
 10090 ;;		Nothing
 10091 ;; This function is called by:
 10092 ;;		_vfpfcnvrt
 10093 ;; This function uses a reentrant model
 10094 ;;
 10095                           
 10096                           	psect	text42
 10097  0048FC                     __ptext42:
 10098                           	opt callstack 0
 10099  0048FC                     _strncmp:
 10100                           	opt callstack 0
 10101                           
 10102                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10103  0048FC  52E6               	movf	postinc1,f,c
 10104  0048FE  52E6               	movf	postinc1,f,c
 10105                           
 10106                           ;stkvar	__l @ sp[(-2)+-1]
 10107                           
 10108                           ;incstack = 0
 10109  004900  0EFD               	movlw	-3
 10110  004902  006F FF8C  F048    	movff	plusw1,btemp+11
 10111                           
 10112                           ;stkvar	_l @ sp[(-2)+1]
 10113  004908  0EFF               	movlw	-1
 10114  00490A  0060  F123  FFE3   	movff	btemp+11,plusw1
 10115                           
 10116                           ;stkvar	__r @ sp[(-2)+-2]
 10117  004910  0EFC               	movlw	-4
 10118  004912  006F FF8C  F048    	movff	plusw1,btemp+11
 10119                           
 10120                           ;stkvar	_r @ sp[(-2)+0]
 10121  004918  0EFE               	movlw	-2
 10122  00491A  0060  F123  FFE3   	movff	btemp+11,plusw1
 10123                           
 10124                           ;stkvar	_n @ sp[(-2)+-4]
 10125  004920  0EFA               	movlw	-6
 10126  004922  006F FF8C  F03D    	movff	plusw1,btemp
 10127  004928  0E01               	movlw	1
 10128  00492A  5E3D               	subwf	btemp,f,c
 10129  00492C  0EFA               	movlw	-6
 10130  00492E  0060  F0F7  FFE3   	movff	btemp,plusw1
 10131  004934  0EFB               	movlw	-5
 10132  004936  006F FF8C  F03D    	movff	plusw1,btemp
 10133  00493C  0E00               	movlw	0
 10134  00493E  5A3D               	subwfb	btemp,f,c
 10135  004940  0EFB               	movlw	-5
 10136  004942  0060  F0F7  FFE3   	movff	btemp,plusw1
 10137  004948  0EFA               	movlw	-6
 10138  00494A  28E3               	incf	plusw1,w,c
 10139  00494C  E121               	bnz	l5595
 10140  00494E  0EFB               	movlw	-5
 10141  004950  28E3               	incf	plusw1,w,c
 10142  004952  A4D8               	btfss	status,2,c
 10143  004954  D01D               	goto	l5595
 10144  004956  0E00               	movlw	0
 10145  004958  6E3D               	movwf	btemp,c
 10146  00495A  0E00               	movlw	0
 10147  00495C  6E3E               	movwf	btemp+1,c
 10148  00495E  D091               	goto	l2668
 10149  004960                     l5591:
 10150                           
 10151                           ;stkvar	_l @ sp[(-2)+1]
 10152  004960  0EFF               	movlw	-1
 10153  004962  2AE3               	incf	plusw1,f,c
 10154                           
 10155                           ;stkvar	_r @ sp[(-2)+0]
 10156  004964  0EFE               	movlw	-2
 10157  004966  2AE3               	incf	plusw1,f,c
 10158                           
 10159                           ;stkvar	_n @ sp[(-2)+-4]
 10160  004968  0EFA               	movlw	-6
 10161  00496A  006F FF8C  F03D    	movff	plusw1,btemp
 10162  004970  0E01               	movlw	1
 10163  004972  5E3D               	subwf	btemp,f,c
 10164  004974  0EFA               	movlw	-6
 10165  004976  0060  F0F7  FFE3   	movff	btemp,plusw1
 10166  00497C  0EFB               	movlw	-5
 10167  00497E  006F FF8C  F03D    	movff	plusw1,btemp
 10168  004984  0E00               	movlw	0
 10169  004986  5A3D               	subwfb	btemp,f,c
 10170  004988  0EFB               	movlw	-5
 10171  00498A  0060  F0F7  FFE3   	movff	btemp,plusw1
 10172  004990                     l5595:
 10173                           
 10174                           ;stkvar	_l @ sp[(-2)+1]
 10175  004990  50E1               	movf	fsr1l,w,c
 10176  004992  0FFF               	addlw	-1
 10177  004994  6ED9               	movwf	fsr2l,c
 10178  004996  50E2               	movf	fsr1h,w,c
 10179  004998  6EDA               	movwf	fsr2h,c
 10180  00499A  0EFF               	movlw	255
 10181  00499C  22DA               	addwfc	fsr2h,f,c
 10182  00499E  006F FF7F FFF6     	movff	indf2,tblptrl
 10183  0049A4                     	if	1	;There is more than 1 active tblptr byte
 10184  0049A4  0E20               	movlw	high __smallconst
 10185  0049A6  6EF7               	movwf	tblptrh,c
 10186  0049A8                     	endif
 10187  0049A8                     	if	0	;tblptru may be non-zero
 10188  0049A8                     	endif
 10189  0049A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10190  0049A8  0E00               	movlw	low (__smallconst shr (0+16))
 10191  0049AA  6EF8               	movwf	tblptru,c
 10192  0049AC                     	endif
 10193  0049AC  0008               	tblrd		*
 10194  0049AE  50F5               	movf	tablat,w,c
 10195  0049B0  0900               	iorlw	0
 10196  0049B2  B4D8               	btfsc	status,2,c
 10197  0049B4  D041               	goto	u3010
 10198                           
 10199                           ;stkvar	_r @ sp[(-2)+0]
 10200  0049B6  50E1               	movf	fsr1l,w,c
 10201  0049B8  0FFE               	addlw	-2
 10202  0049BA  6ED9               	movwf	fsr2l,c
 10203  0049BC  50E2               	movf	fsr1h,w,c
 10204  0049BE  6EDA               	movwf	fsr2h,c
 10205  0049C0  0EFF               	movlw	255
 10206  0049C2  22DA               	addwfc	fsr2h,f,c
 10207  0049C4  006F FF7F FFF6     	movff	indf2,tblptrl
 10208  0049CA                     	if	1	;There is more than 1 active tblptr byte
 10209  0049CA  0E20               	movlw	high __smallconst
 10210  0049CC  6EF7               	movwf	tblptrh,c
 10211  0049CE                     	endif
 10212  0049CE                     	if	0	;tblptru may be non-zero
 10213  0049CE                     	endif
 10214  0049CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10215  0049CE  0E00               	movlw	low (__smallconst shr (0+16))
 10216  0049D0  6EF8               	movwf	tblptru,c
 10217  0049D2                     	endif
 10218  0049D2  0008               	tblrd		*
 10219  0049D4  50F5               	movf	tablat,w,c
 10220  0049D6  0900               	iorlw	0
 10221  0049D8  B4D8               	btfsc	status,2,c
 10222  0049DA  D02E               	goto	u3010
 10223                           
 10224                           ;stkvar	_n @ sp[(-2)+-4]
 10225  0049DC  0EFA               	movlw	-6
 10226  0049DE  006F FF8C  F03D    	movff	plusw1,btemp
 10227  0049E4  0EFB               	movlw	-5
 10228  0049E6  50E3               	movf	plusw1,w,c
 10229  0049E8  103D               	iorwf	btemp,w,c
 10230  0049EA  B4D8               	btfsc	status,2,c
 10231  0049EC  D025               	goto	u3010
 10232                           
 10233                           ;stkvar	_l @ sp[(-2)+1]
 10234  0049EE  50E1               	movf	fsr1l,w,c
 10235  0049F0  0FFF               	addlw	-1
 10236  0049F2  6ED9               	movwf	fsr2l,c
 10237  0049F4  50E2               	movf	fsr1h,w,c
 10238  0049F6  6EDA               	movwf	fsr2h,c
 10239  0049F8  0EFF               	movlw	255
 10240  0049FA  22DA               	addwfc	fsr2h,f,c
 10241  0049FC  006F FF7F FFF6     	movff	indf2,tblptrl
 10242  004A02                     	if	1	;There is more than 1 active tblptr byte
 10243  004A02  0E20               	movlw	high __smallconst
 10244  004A04  6EF7               	movwf	tblptrh,c
 10245  004A06                     	endif
 10246  004A06                     	if	0	;tblptru may be non-zero
 10247  004A06                     	endif
 10248  004A06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10249  004A06  0E00               	movlw	low (__smallconst shr (0+16))
 10250  004A08  6EF8               	movwf	tblptru,c
 10251  004A0A                     	endif
 10252  004A0A  0008               	tblrd		*
 10253  004A0C  006F FFD4  F048    	movff	tablat,btemp+11
 10254                           
 10255                           ;stkvar	_r @ sp[(-2)+0]
 10256  004A12  50E1               	movf	fsr1l,w,c
 10257  004A14  0FFE               	addlw	-2
 10258  004A16  6ED9               	movwf	fsr2l,c
 10259  004A18  50E2               	movf	fsr1h,w,c
 10260  004A1A  6EDA               	movwf	fsr2h,c
 10261  004A1C  0EFF               	movlw	255
 10262  004A1E  22DA               	addwfc	fsr2h,f,c
 10263  004A20  006F FF7F FFF6     	movff	indf2,tblptrl
 10264  004A26                     	if	1	;There is more than 1 active tblptr byte
 10265  004A26  0E20               	movlw	high __smallconst
 10266  004A28  6EF7               	movwf	tblptrh,c
 10267  004A2A                     	endif
 10268  004A2A                     	if	0	;tblptru may be non-zero
 10269  004A2A                     	endif
 10270  004A2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10271  004A2A  0E00               	movlw	low (__smallconst shr (0+16))
 10272  004A2C  6EF8               	movwf	tblptru,c
 10273  004A2E                     	endif
 10274  004A2E  0008               	tblrd		*
 10275  004A30  50F5               	movf	tablat,w,c
 10276  004A32  1848               	xorwf	btemp+11,w,c
 10277  004A34  B4D8               	btfsc	status,2,c
 10278  004A36  D794               	goto	l5591
 10279  004A38                     u3010:
 10280                           
 10281                           ;stkvar	_l @ sp[(-2)+1]
 10282  004A38  50E1               	movf	fsr1l,w,c
 10283  004A3A  0FFF               	addlw	-1
 10284  004A3C  6ED9               	movwf	fsr2l,c
 10285  004A3E  50E2               	movf	fsr1h,w,c
 10286  004A40  6EDA               	movwf	fsr2h,c
 10287  004A42  0EFF               	movlw	255
 10288  004A44  22DA               	addwfc	fsr2h,f,c
 10289  004A46  006F FF7F FFF6     	movff	indf2,tblptrl
 10290  004A4C                     	if	1	;There is more than 1 active tblptr byte
 10291  004A4C  0E20               	movlw	high __smallconst
 10292  004A4E  6EF7               	movwf	tblptrh,c
 10293  004A50                     	endif
 10294  004A50                     	if	0	;tblptru may be non-zero
 10295  004A50                     	endif
 10296  004A50                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10297  004A50  0E00               	movlw	low (__smallconst shr (0+16))
 10298  004A52  6EF8               	movwf	tblptru,c
 10299  004A54                     	endif
 10300  004A54  0008               	tblrd		*
 10301  004A56  50F5               	movf	tablat,w,c
 10302  004A58  6E3D               	movwf	btemp,c
 10303  004A5A  6A3E               	clrf	btemp+1,c
 10304                           
 10305                           ;stkvar	_r @ sp[(-2)+0]
 10306  004A5C  50E1               	movf	fsr1l,w,c
 10307  004A5E  0FFE               	addlw	-2
 10308  004A60  6ED9               	movwf	fsr2l,c
 10309  004A62  50E2               	movf	fsr1h,w,c
 10310  004A64  6EDA               	movwf	fsr2h,c
 10311  004A66  0EFF               	movlw	255
 10312  004A68  22DA               	addwfc	fsr2h,f,c
 10313  004A6A  006F FF7F FFF6     	movff	indf2,tblptrl
 10314  004A70                     	if	1	;There is more than 1 active tblptr byte
 10315  004A70  0E20               	movlw	high __smallconst
 10316  004A72  6EF7               	movwf	tblptrh,c
 10317  004A74                     	endif
 10318  004A74                     	if	0	;tblptru may be non-zero
 10319  004A74                     	endif
 10320  004A74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10321  004A74  0E00               	movlw	low (__smallconst shr (0+16))
 10322  004A76  6EF8               	movwf	tblptru,c
 10323  004A78                     	endif
 10324  004A78  0008               	tblrd		*
 10325  004A7A  50F5               	movf	tablat,w,c
 10326  004A7C  5E3D               	subwf	btemp,f,c
 10327  004A7E  0E00               	movlw	0
 10328  004A80  5A3E               	subwfb	btemp+1,f,c
 10329  004A82                     l2668:
 10330                           
 10331                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 10332  004A82  0EFA               	movlw	250
 10333  004A84  26E1               	addwf	fsr1l,f,c
 10334  004A86  0EFF               	movlw	255
 10335  004A88  22E2               	addwfc	fsr1h,f,c
 10336  004A8A  0012               	return		;funcret
 10337  004A8C                     __end_of_strncmp:
 10338                           	opt callstack 0
 10339                           
 10340 ;; *************** function _stoa *****************
 10341 ;; Defined at:
 10342 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10343 ;; Parameters:    Size  Location     Type
 10344 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10345 ;;		 -> f(5), NULL(0), 
 10346 ;;  s               2  [STACK] PTR unsigned char 
 10347 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(98), 
 10348 ;; Auto vars:     Size  Location     Type
 10349 ;;  nuls            7  [STACK] unsigned char [7]
 10350 ;;  l               2  [STACK] int 
 10351 ;;  p               2  [STACK] int 
 10352 ;;  cp              2  [STACK] PTR unsigned char 
 10353 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
 10354 ;;		 -> V(98), 
 10355 ;;  w               2  [STACK] int 
 10356 ;;  i               2  [STACK] int 
 10357 ;; Return value:  Size  Location     Type
 10358 ;;                  2  [STACK] int 
 10359 ;; Registers used:
 10360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10361 ;; Tracked objects:
 10362 ;;		On entry : 0/0
 10363 ;;		On exit  : 0/0
 10364 ;;		Unchanged: 0/0
 10365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10370 ;;Total ram usage:        0 bytes
 10371 ;; Hardware stack levels used:    1
 10372 ;; Hardware stack levels required when called:    6
 10373 ;; This function calls:
 10374 ;;		_fputc
 10375 ;;		_strlen
 10376 ;; This function is called by:
 10377 ;;		_vfpfcnvrt
 10378 ;; This function uses a reentrant model
 10379 ;;
 10380                           
 10381                           	psect	text43
 10382  003A52                     __ptext43:
 10383                           	opt callstack 0
 10384  003A52                     _stoa:
 10385                           	opt callstack 0
 10386                           
 10387                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10388  003A52  0E11               	movlw	17
 10389  003A54  26E1               	addwf	fsr1l,f,c
 10390  003A56  0E00               	movlw	0
 10391  003A58  22E2               	addwfc	fsr1h,f,c
 10392                           
 10393                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10394                           
 10395                           ;incstack = 0
 10396  003A5A  EE20  F100         	lfsr	2,stoa@F1142
 10397                           
 10398                           ;stkvar	_nuls @ sp[(-17)+0]
 10399  003A5E  0E07               	movlw	7
 10400  003A60  6E3D               	movwf	btemp,c
 10401  003A62  0EEF               	movlw	-17
 10402  003A64                     us489999:
 10403  003A64  006F FF7B FFE3     	movff	postinc2,plusw1
 10404  003A6A  28E8               	incf	wreg,w,c
 10405  003A6C  2E3D               	decfsz	btemp,f,c
 10406  003A6E  D7FA               	bra	us489999
 10407                           
 10408                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10409                           ;stkvar	_s @ sp[(-17)+-4]
 10410  003A70  0EEB               	movlw	-21
 10411  003A72  006F FF8C  F047    	movff	plusw1,btemp+10
 10412  003A78  0EEC               	movlw	-20
 10413  003A7A  006F FF8C  F048    	movff	plusw1,btemp+11
 10414                           
 10415                           ;stkvar	_cp @ sp[(-17)+11]
 10416  003A80  0EFB               	movlw	-5
 10417  003A82  0060  F123  FFE3   	movff	btemp+11,plusw1
 10418  003A88  0EFA               	movlw	-6
 10419  003A8A  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10420                           
 10421                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10422                           ;stkvar	_cp @ sp[(-17)+11]
 10423  003A90  0EFA               	movlw	-6
 10424  003A92  006F FF8C  F03D    	movff	plusw1,btemp
 10425  003A98  0EFB               	movlw	-5
 10426  003A9A  50E3               	movf	plusw1,w,c
 10427  003A9C  103D               	iorwf	btemp,w,c
 10428  003A9E  A4D8               	btfss	status,2,c
 10429  003AA0  D00E               	goto	l8213
 10430                           
 10431                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10432                           ;stkvar	_nuls @ sp[(-17)+0]
 10433  003AA2  0EEF               	movlw	239
 10434  003AA4  24E1               	addwf	fsr1l,w,c
 10435  003AA6  6E47               	movwf	btemp+10,c
 10436  003AA8  0EFF               	movlw	255
 10437  003AAA  20E2               	addwfc	fsr1h,w,c
 10438  003AAC  6E48               	movwf	btemp+11,c
 10439                           
 10440                           ;stkvar	_cp @ sp[(-17)+11]
 10441  003AAE  0EFB               	movlw	-5
 10442  003AB0  0060  F123  FFE3   	movff	btemp+11,plusw1
 10443  003AB6  0EFA               	movlw	-6
 10444  003AB8  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10445  003ABE                     l8213:
 10446                           
 10447                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10448                           ;stkvar	_cp @ sp[(-17)+11]
 10449  003ABE  0EFA               	movlw	-6
 10450  003AC0  006F FF8F FFE6     	movff	plusw1,postinc1
 10451  003AC6  006F FF8F FFE6     	movff	plusw1,postinc1
 10452  003ACC  ECAC  F029         	call	_strlen	;wreg free
 10453                           
 10454                           ;stkvar	_l @ sp[(-17)+7]
 10455  003AD0  0EF6               	movlw	-10
 10456  003AD2  0060  F0F7  FFE3   	movff	btemp,plusw1
 10457  003AD8  0EF7               	movlw	-9
 10458  003ADA  0060  F0FB  FFE3   	movff	btemp+1,plusw1
 10459                           
 10460                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10461                           ;stkvar	_p @ sp[(-17)+9]
 10462  003AE0  0EF8               	movlw	-8
 10463  003AE2  0060  F07F  FFE3   	movff	_prec,plusw1
 10464  003AE8  0EF9               	movlw	-7
 10465  003AEA  0060  F083  FFE3   	movff	_prec+1,plusw1
 10466                           
 10467                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10468                           ;stkvar	_p @ sp[(-17)+9]
 10469  003AF0  0EF9               	movlw	-7
 10470  003AF2  BEE3               	btfsc	plusw1,7,c
 10471  003AF4  D023               	goto	l1892
 10472                           
 10473                           ;stkvar	_l @ sp[(-17)+7]
 10474                           ;stkvar	_p @ sp[(-17)+9]
 10475  003AF6  50E1               	movf	fsr1l,w,c
 10476  003AF8  0FF8               	addlw	-8
 10477  003AFA  6ED9               	movwf	fsr2l,c
 10478  003AFC  50E2               	movf	fsr1h,w,c
 10479  003AFE  6EDA               	movwf	fsr2h,c
 10480  003B00  0EFF               	movlw	255
 10481  003B02  22DA               	addwfc	fsr2h,f,c
 10482  003B04  0EF6               	movlw	-10
 10483  003B06  50E3               	movf	plusw1,w,c
 10484  003B08  5CDE               	subwf	postinc2,w,c
 10485  003B0A  50DE               	movf	postinc2,w,c
 10486  003B0C  0A80               	xorlw	128
 10487  003B0E  6E3D               	movwf	btemp,c
 10488  003B10  0EF7               	movlw	-9
 10489  003B12  50E3               	movf	plusw1,w,c
 10490  003B14  0A80               	xorlw	128
 10491  003B16  583D               	subwfb	btemp,w,c
 10492  003B18  B0D8               	btfsc	status,0,c
 10493  003B1A  D010               	goto	l1892
 10494                           
 10495                           ;stkvar	_p @ sp[(-17)+9]
 10496                           ;stkvar	_l @ sp[(-17)+7]
 10497  003B1C  0EF8               	movlw	-8
 10498  003B1E  006F FF8C  F03D    	movff	plusw1,btemp
 10499  003B24  0EF6               	movlw	-10
 10500  003B26  0060  F0F7  FFE3   	movff	btemp,plusw1
 10501  003B2C  0EF9               	movlw	-7
 10502  003B2E  006F FF8C  F03D    	movff	plusw1,btemp
 10503  003B34  0EF7               	movlw	-9
 10504  003B36  0060  F0F7  FFE3   	movff	btemp,plusw1
 10505  003B3C                     l1892:
 10506                           
 10507                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10508                           ;stkvar	_l @ sp[(-17)+7]
 10509                           ;stkvar	_p @ sp[(-17)+9]
 10510  003B3C  0EF6               	movlw	-10
 10511  003B3E  006F FF8C  F03D    	movff	plusw1,btemp
 10512  003B44  0EF8               	movlw	-8
 10513  003B46  0060  F0F7  FFE3   	movff	btemp,plusw1
 10514  003B4C  0EF7               	movlw	-9
 10515  003B4E  006F FF8C  F03D    	movff	plusw1,btemp
 10516  003B54  0EF9               	movlw	-7
 10517  003B56  0060  F0F7  FFE3   	movff	btemp,plusw1
 10518                           
 10519                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10520                           ;stkvar	_w @ sp[(-17)+13]
 10521  003B5C  0EFC               	movlw	-4
 10522  003B5E  0060  F077  FFE3   	movff	_width,plusw1
 10523  003B64  0EFD               	movlw	-3
 10524  003B66  0060  F07B  FFE3   	movff	_width+1,plusw1
 10525                           
 10526                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10527  003B6C  A021               	btfss	_flags,0,c
 10528  003B6E  D01F               	goto	l8233
 10529  003B70  D031               	goto	u4940
 10530  003B72                     l8229:
 10531                           
 10532                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10533                           ;stkvar	_fp @ sp[(-17)+-2]
 10534  003B72  0EED               	movlw	-19
 10535  003B74  006F FF8F FFE6     	movff	plusw1,postinc1
 10536  003B7A  006F FF8F FFE6     	movff	plusw1,postinc1
 10537  003B80  0E20               	movlw	32
 10538  003B82  6EE6               	movwf	postinc1,c
 10539  003B84  0E00               	movlw	0
 10540  003B86  6EE6               	movwf	postinc1,c
 10541  003B88  ECD0  F025         	call	_fputc	;wreg free
 10542                           
 10543                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10544                           ;stkvar	_l @ sp[(-17)+7]
 10545  003B8C  0EF6               	movlw	-10
 10546  003B8E  50E3               	movf	plusw1,w,c
 10547  003B90  0F01               	addlw	1
 10548  003B92  6E3D               	movwf	btemp,c
 10549  003B94  0EF6               	movlw	-10
 10550  003B96  0060  F0F7  FFE3   	movff	btemp,plusw1
 10551  003B9C  6A3D               	clrf	btemp,c
 10552  003B9E  0EF7               	movlw	-9
 10553  003BA0  50E3               	movf	plusw1,w,c
 10554  003BA2  203D               	addwfc	btemp,w,c
 10555  003BA4  6E3D               	movwf	btemp,c
 10556  003BA6  0EF7               	movlw	-9
 10557  003BA8  0060  F0F7  FFE3   	movff	btemp,plusw1
 10558  003BAE                     l8233:
 10559                           
 10560                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10561                           ;stkvar	_w @ sp[(-17)+13]
 10562                           ;stkvar	_l @ sp[(-17)+7]
 10563  003BAE  50E1               	movf	fsr1l,w,c
 10564  003BB0  0FF6               	addlw	-10
 10565  003BB2  6ED9               	movwf	fsr2l,c
 10566  003BB4  50E2               	movf	fsr1h,w,c
 10567  003BB6  6EDA               	movwf	fsr2h,c
 10568  003BB8  0EFF               	movlw	255
 10569  003BBA  22DA               	addwfc	fsr2h,f,c
 10570  003BBC  0EFC               	movlw	-4
 10571  003BBE  50E3               	movf	plusw1,w,c
 10572  003BC0  5CDE               	subwf	postinc2,w,c
 10573  003BC2  50DE               	movf	postinc2,w,c
 10574  003BC4  0A80               	xorlw	128
 10575  003BC6  6E3D               	movwf	btemp,c
 10576  003BC8  0EFD               	movlw	-3
 10577  003BCA  50E3               	movf	plusw1,w,c
 10578  003BCC  0A80               	xorlw	128
 10579  003BCE  583D               	subwfb	btemp,w,c
 10580  003BD0  A0D8               	btfss	status,0,c
 10581  003BD2  D7CF               	goto	l8229
 10582  003BD4                     u4940:
 10583                           
 10584                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10585                           ;stkvar	_i @ sp[(-17)+15]
 10586  003BD4  0EFE               	movlw	-2
 10587  003BD6  6AE3               	clrf	plusw1,c
 10588  003BD8  0EFF               	movlw	-1
 10589  003BDA  6AE3               	clrf	plusw1,c
 10590                           
 10591                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10592  003BDC  D045               	goto	l8243
 10593  003BDE                     l8237:
 10594                           
 10595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10596                           ;stkvar	_fp @ sp[(-17)+-2]
 10597  003BDE  0EED               	movlw	-19
 10598  003BE0  006F FF8F FFE6     	movff	plusw1,postinc1
 10599  003BE6  006F FF8F FFE6     	movff	plusw1,postinc1
 10600                           
 10601                           ;stkvar	_cp @ sp[(-19)+11]
 10602  003BEC  0EF8               	movlw	-8
 10603  003BEE  006F FF8F FFF6     	movff	plusw1,tblptrl
 10604  003BF4  0EF9               	movlw	-7
 10605  003BF6  006F FF8F FFF7     	movff	plusw1,tblptrh
 10606  003BFC  0E00               	movlw	low (__smallconst shr (0+16))
 10607  003BFE  6EF8               	movwf	tblptru,c
 10608  003C00  0E1F               	movlw	(high __ramtop+-1)
 10609  003C02  64F7               	cpfsgt	tblptrh,c
 10610  003C04  D003               	bra	u4957
 10611  003C06  0008               	tblrd		*
 10612  003C08  50F5               	movf	tablat,w,c
 10613  003C0A  D007               	bra	u4950
 10614  003C0C                     u4957:
 10615  003C0C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10616  003C12  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10617  003C18  50EF               	movf	indf0,w,c
 10618  003C1A                     u4950:
 10619  003C1A  6EE6               	movwf	postinc1,c
 10620  003C1C  0E00               	movlw	0
 10621  003C1E  6EE6               	movwf	postinc1,c
 10622  003C20  ECD0  F025         	call	_fputc	;wreg free
 10623                           
 10624                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10625                           ;stkvar	_cp @ sp[(-17)+11]
 10626  003C24  0EFA               	movlw	-6
 10627  003C26  50E3               	movf	plusw1,w,c
 10628  003C28  0F01               	addlw	1
 10629  003C2A  6E3D               	movwf	btemp,c
 10630  003C2C  0EFA               	movlw	-6
 10631  003C2E  0060  F0F7  FFE3   	movff	btemp,plusw1
 10632  003C34  6A3D               	clrf	btemp,c
 10633  003C36  0EFB               	movlw	-5
 10634  003C38  50E3               	movf	plusw1,w,c
 10635  003C3A  203D               	addwfc	btemp,w,c
 10636  003C3C  6E3D               	movwf	btemp,c
 10637  003C3E  0EFB               	movlw	-5
 10638  003C40  0060  F0F7  FFE3   	movff	btemp,plusw1
 10639                           
 10640                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10641                           ;stkvar	_i @ sp[(-17)+15]
 10642  003C46  0EFE               	movlw	-2
 10643  003C48  50E3               	movf	plusw1,w,c
 10644  003C4A  0F01               	addlw	1
 10645  003C4C  6E3D               	movwf	btemp,c
 10646  003C4E  0EFE               	movlw	-2
 10647  003C50  0060  F0F7  FFE3   	movff	btemp,plusw1
 10648  003C56  6A3D               	clrf	btemp,c
 10649  003C58  0EFF               	movlw	-1
 10650  003C5A  50E3               	movf	plusw1,w,c
 10651  003C5C  203D               	addwfc	btemp,w,c
 10652  003C5E  6E3D               	movwf	btemp,c
 10653  003C60  0EFF               	movlw	-1
 10654  003C62  0060  F0F7  FFE3   	movff	btemp,plusw1
 10655  003C68                     l8243:
 10656                           
 10657                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10658                           ;stkvar	_p @ sp[(-17)+9]
 10659                           ;stkvar	_i @ sp[(-17)+15]
 10660  003C68  50E1               	movf	fsr1l,w,c
 10661  003C6A  0FFE               	addlw	-2
 10662  003C6C  6ED9               	movwf	fsr2l,c
 10663  003C6E  50E2               	movf	fsr1h,w,c
 10664  003C70  6EDA               	movwf	fsr2h,c
 10665  003C72  0EFF               	movlw	255
 10666  003C74  22DA               	addwfc	fsr2h,f,c
 10667  003C76  0EF8               	movlw	-8
 10668  003C78  50E3               	movf	plusw1,w,c
 10669  003C7A  5CDE               	subwf	postinc2,w,c
 10670  003C7C  50DE               	movf	postinc2,w,c
 10671  003C7E  0A80               	xorlw	128
 10672  003C80  6E3D               	movwf	btemp,c
 10673  003C82  0EF9               	movlw	-7
 10674  003C84  50E3               	movf	plusw1,w,c
 10675  003C86  0A80               	xorlw	128
 10676  003C88  583D               	subwfb	btemp,w,c
 10677  003C8A  A0D8               	btfss	status,0,c
 10678  003C8C  D7A8               	goto	l8237
 10679                           
 10680                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 10681  003C8E  B021               	btfsc	_flags,0,c
 10682  003C90  D01F               	goto	l8251
 10683  003C92  D031               	goto	u4980
 10684  003C94                     l8247:
 10685                           
 10686                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10687                           ;stkvar	_fp @ sp[(-17)+-2]
 10688  003C94  0EED               	movlw	-19
 10689  003C96  006F FF8F FFE6     	movff	plusw1,postinc1
 10690  003C9C  006F FF8F FFE6     	movff	plusw1,postinc1
 10691  003CA2  0E20               	movlw	32
 10692  003CA4  6EE6               	movwf	postinc1,c
 10693  003CA6  0E00               	movlw	0
 10694  003CA8  6EE6               	movwf	postinc1,c
 10695  003CAA  ECD0  F025         	call	_fputc	;wreg free
 10696                           
 10697                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10698                           ;stkvar	_l @ sp[(-17)+7]
 10699  003CAE  0EF6               	movlw	-10
 10700  003CB0  50E3               	movf	plusw1,w,c
 10701  003CB2  0F01               	addlw	1
 10702  003CB4  6E3D               	movwf	btemp,c
 10703  003CB6  0EF6               	movlw	-10
 10704  003CB8  0060  F0F7  FFE3   	movff	btemp,plusw1
 10705  003CBE  6A3D               	clrf	btemp,c
 10706  003CC0  0EF7               	movlw	-9
 10707  003CC2  50E3               	movf	plusw1,w,c
 10708  003CC4  203D               	addwfc	btemp,w,c
 10709  003CC6  6E3D               	movwf	btemp,c
 10710  003CC8  0EF7               	movlw	-9
 10711  003CCA  0060  F0F7  FFE3   	movff	btemp,plusw1
 10712  003CD0                     l8251:
 10713                           
 10714                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10715                           ;stkvar	_w @ sp[(-17)+13]
 10716                           ;stkvar	_l @ sp[(-17)+7]
 10717  003CD0  50E1               	movf	fsr1l,w,c
 10718  003CD2  0FF6               	addlw	-10
 10719  003CD4  6ED9               	movwf	fsr2l,c
 10720  003CD6  50E2               	movf	fsr1h,w,c
 10721  003CD8  6EDA               	movwf	fsr2h,c
 10722  003CDA  0EFF               	movlw	255
 10723  003CDC  22DA               	addwfc	fsr2h,f,c
 10724  003CDE  0EFC               	movlw	-4
 10725  003CE0  50E3               	movf	plusw1,w,c
 10726  003CE2  5CDE               	subwf	postinc2,w,c
 10727  003CE4  50DE               	movf	postinc2,w,c
 10728  003CE6  0A80               	xorlw	128
 10729  003CE8  6E3D               	movwf	btemp,c
 10730  003CEA  0EFD               	movlw	-3
 10731  003CEC  50E3               	movf	plusw1,w,c
 10732  003CEE  0A80               	xorlw	128
 10733  003CF0  583D               	subwfb	btemp,w,c
 10734  003CF2  A0D8               	btfss	status,0,c
 10735  003CF4  D7CF               	goto	l8247
 10736  003CF6                     u4980:
 10737                           
 10738                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
 10739                           ;stkvar	_l @ sp[(-17)+7]
 10740  003CF6  0EF6               	movlw	-10
 10741  003CF8  006F FF8C  F03D    	movff	plusw1,btemp
 10742  003CFE  0EF7               	movlw	-9
 10743  003D00  006F FF8C  F03E    	movff	plusw1,btemp+1
 10744                           
 10745                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10746  003D06  0EEB               	movlw	235
 10747  003D08  26E1               	addwf	fsr1l,f,c
 10748  003D0A  0EFF               	movlw	255
 10749  003D0C  22E2               	addwfc	fsr1h,f,c
 10750  003D0E  0012               	return		;funcret
 10751  003D10                     __end_of_stoa:
 10752                           	opt callstack 0
 10753                           
 10754 ;; *************** function _dtoa *****************
 10755 ;; Defined at:
 10756 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10757 ;; Parameters:    Size  Location     Type
 10758 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10759 ;;		 -> f(5), NULL(0), 
 10760 ;;  d               8  [STACK] long long 
 10761 ;; Auto vars:     Size  Location     Type
 10762 ;;  n               8  [STACK] long long 
 10763 ;;  i               2  [STACK] int 
 10764 ;;  s               2  [STACK] int 
 10765 ;;  w               2  [STACK] int 
 10766 ;;  p               2  [STACK] int 
 10767 ;; Return value:  Size  Location     Type
 10768 ;;                  2  [STACK] int 
 10769 ;; Registers used:
 10770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 10771 ;; Tracked objects:
 10772 ;;		On entry : 0/0
 10773 ;;		On exit  : 0/0
 10774 ;;		Unchanged: 0/0
 10775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10780 ;;Total ram usage:        0 bytes
 10781 ;; Hardware stack levels used:    1
 10782 ;; Hardware stack levels required when called:    8
 10783 ;; This function calls:
 10784 ;;		___aodiv
 10785 ;;		___aomod
 10786 ;;		_abs
 10787 ;;		_pad
 10788 ;; This function is called by:
 10789 ;;		_vfpfcnvrt
 10790 ;; This function uses a reentrant model
 10791 ;;
 10792                           
 10793                           	psect	text44
 10794  002F8C                     __ptext44:
 10795                           	opt callstack 0
 10796  002F8C                     _dtoa:
 10797                           	opt callstack 0
 10798                           
 10799                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 10800  002F8C  0E12               	movlw	18
 10801  002F8E  26E1               	addwf	fsr1l,f,c
 10802  002F90  0E00               	movlw	0
 10803  002F92  22E2               	addwfc	fsr1h,f,c
 10804                           
 10805                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
 10806                           ;stkvar	_d @ sp[(-18)+-10]
 10807                           
 10808                           ;incstack = 0
 10809  002F94  0EE4               	movlw	228
 10810  002F96  24E1               	addwf	fsr1l,w,c
 10811  002F98  6ED9               	movwf	fsr2l,c
 10812  002F9A  0EFF               	movlw	255
 10813  002F9C  20E2               	addwfc	fsr1h,w,c
 10814  002F9E  6EDA               	movwf	fsr2h,c
 10815                           
 10816                           ;stkvar	_n @ sp[(-18)+2]
 10817  002FA0  0E08               	movlw	8
 10818  002FA2  6E3D               	movwf	btemp,c
 10819  002FA4  0EF0               	movlw	-16
 10820  002FA6                     us472999:
 10821  002FA6  006F FF7B FFE3     	movff	postinc2,plusw1
 10822  002FAC  28E8               	incf	wreg,w,c
 10823  002FAE  2E3D               	decfsz	btemp,f,c
 10824  002FB0  D7FA               	bra	us472999
 10825                           
 10826                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 10827                           ;stkvar	_n @ sp[(-18)+2]
 10828  002FB2  0EF7               	movlw	-9
 10829  002FB4  AEE3               	btfss	plusw1,7,c
 10830  002FB6  D002               	goto	u4730
 10831  002FB8  0E01               	movlw	1
 10832  002FBA  D001               	goto	u4740
 10833  002FBC                     u4730:
 10834  002FBC  0E00               	movlw	0
 10835  002FBE                     u4740:
 10836  002FBE  6E47               	movwf	btemp+10,c
 10837  002FC0  6A48               	clrf	btemp+11,c
 10838                           
 10839                           ;stkvar	_s @ sp[(-18)+12]
 10840  002FC2  0EFA               	movlw	-6
 10841  002FC4  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10842  002FCA  0EFB               	movlw	-5
 10843  002FCC  0060  F123  FFE3   	movff	btemp+11,plusw1
 10844                           
 10845                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 10846                           ;stkvar	_s @ sp[(-18)+12]
 10847  002FD2  0EFA               	movlw	-6
 10848  002FD4  006F FF8C  F03D    	movff	plusw1,btemp
 10849  002FDA  0EFB               	movlw	-5
 10850  002FDC  50E3               	movf	plusw1,w,c
 10851  002FDE  103D               	iorwf	btemp,w,c
 10852  002FE0  B4D8               	btfsc	status,2,c
 10853  002FE2  D025               	goto	u4760
 10854                           
 10855                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 10856                           ;stkvar	_n @ sp[(-18)+2]
 10857                           ;stkvar	_n @ sp[(-18)+2]
 10858  002FE4  0EF0               	movlw	-16
 10859  002FE6  6CE3               	negf	plusw1,c
 10860  002FE8  0EF1               	movlw	-15
 10861  002FEA  1EE3               	comf	plusw1,f,c
 10862  002FEC  0EF2               	movlw	-14
 10863  002FEE  1EE3               	comf	plusw1,f,c
 10864  002FF0  0EF3               	movlw	-13
 10865  002FF2  1EE3               	comf	plusw1,f,c
 10866  002FF4  0EF4               	movlw	-12
 10867  002FF6  1EE3               	comf	plusw1,f,c
 10868  002FF8  0EF5               	movlw	-11
 10869  002FFA  1EE3               	comf	plusw1,f,c
 10870  002FFC  0EF6               	movlw	-10
 10871  002FFE  1EE3               	comf	plusw1,f,c
 10872  003000  0EF7               	movlw	-9
 10873  003002  1EE3               	comf	plusw1,f,c
 10874  003004  E314               	bnc	u4760
 10875  003006  0EF1               	movlw	-15
 10876  003008  2AE3               	incf	plusw1,f,c
 10877  00300A  E311               	bnc	u4760
 10878  00300C  0EF2               	movlw	-14
 10879  00300E  2AE3               	incf	plusw1,f,c
 10880  003010  E30E               	bnc	u4760
 10881  003012  0EF3               	movlw	-13
 10882  003014  2AE3               	incf	plusw1,f,c
 10883  003016  E30B               	bnc	u4760
 10884  003018  0EF4               	movlw	-12
 10885  00301A  2AE3               	incf	plusw1,f,c
 10886  00301C  E308               	bnc	u4760
 10887  00301E  0EF5               	movlw	-11
 10888  003020  2AE3               	incf	plusw1,f,c
 10889  003022  E305               	bnc	u4760
 10890  003024  0EF6               	movlw	-10
 10891  003026  2AE3               	incf	plusw1,f,c
 10892  003028  E302               	bnc	u4760
 10893  00302A  0EF7               	movlw	-9
 10894  00302C  2AE3               	incf	plusw1,f,c
 10895  00302E                     u4760:
 10896                           
 10897                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 10898  00302E  AE20               	btfss	_prec+1,7,c
 10899                           
 10900                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 10901  003030  9221               	bcf	_flags,1,c
 10902                           
 10903                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 10904  003032  BE20               	btfsc	_prec+1,7,c
 10905  003034  D005               	goto	u4780
 10906  003036  5020               	movf	_prec+1,w,c
 10907  003038  E110               	bnz	l8155
 10908  00303A  041F               	decf	_prec,w,c
 10909  00303C  B0D8               	btfsc	status,0,c
 10910  00303E  D00D               	goto	l8155
 10911  003040                     u4780:
 10912  003040  0E01               	movlw	1
 10913  003042  6E47               	movwf	btemp+10,c
 10914  003044  0E00               	movlw	0
 10915  003046  6E48               	movwf	btemp+11,c
 10916                           
 10917                           ;stkvar	_p @ sp[(-18)+16]
 10918  003048  0EFE               	movlw	-2
 10919  00304A  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10920  003050  0EFF               	movlw	-1
 10921  003052  0060  F123  FFE3   	movff	btemp+11,plusw1
 10922  003058  D008               	goto	l1865
 10923  00305A                     l8155:
 10924                           
 10925                           ;stkvar	_p @ sp[(-18)+16]
 10926  00305A  0EFE               	movlw	-2
 10927  00305C  0060  F07F  FFE3   	movff	_prec,plusw1
 10928  003062  0EFF               	movlw	-1
 10929  003064  0060  F083  FFE3   	movff	_prec+1,plusw1
 10930  00306A                     l1865:
 10931                           
 10932                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 10933                           ;stkvar	_w @ sp[(-18)+14]
 10934  00306A  0EFC               	movlw	-4
 10935  00306C  0060  F077  FFE3   	movff	_width,plusw1
 10936  003072  0EFD               	movlw	-3
 10937  003074  0060  F07B  FFE3   	movff	_width+1,plusw1
 10938                           
 10939                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 10940                           ;stkvar	_s @ sp[(-18)+12]
 10941  00307A  0EFA               	movlw	-6
 10942  00307C  006F FF8C  F03D    	movff	plusw1,btemp
 10943  003082  0EFB               	movlw	-5
 10944  003084  50E3               	movf	plusw1,w,c
 10945  003086  103D               	iorwf	btemp,w,c
 10946  003088  A4D8               	btfss	status,2,c
 10947  00308A  D002               	goto	u4800
 10948  00308C  A421               	btfss	_flags,2,c
 10949  00308E  D00A               	goto	l8163
 10950  003090                     u4800:
 10951                           
 10952                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 10953                           ;stkvar	_w @ sp[(-18)+14]
 10954  003090  50E1               	movf	fsr1l,w,c
 10955  003092  0FFC               	addlw	-4
 10956  003094  6ED9               	movwf	fsr2l,c
 10957  003096  50E2               	movf	fsr1h,w,c
 10958  003098  6EDA               	movwf	fsr2h,c
 10959  00309A  0EFF               	movlw	255
 10960  00309C  22DA               	addwfc	fsr2h,f,c
 10961  00309E  06DE               	decf	postinc2,f,c
 10962  0030A0  0E00               	movlw	0
 10963  0030A2  5ADD               	subwfb	postdec2,f,c
 10964  0030A4                     l8163:
 10965                           
 10966                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 10967  0030A4  0E1F               	movlw	31
 10968  0030A6  6E47               	movwf	btemp+10,c
 10969  0030A8  0E00               	movlw	0
 10970  0030AA  6E48               	movwf	btemp+11,c
 10971                           
 10972                           ;stkvar	_i @ sp[(-18)+10]
 10973  0030AC  0EF8               	movlw	-8
 10974  0030AE  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10975  0030B4  0EF9               	movlw	-7
 10976  0030B6  0060  F123  FFE3   	movff	btemp+11,plusw1
 10977                           
 10978                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 10979  0030BC  0101               	movlb	1	; () banked
 10980  0030BE  6BEF               	clrf	(_dbuf+31)& (0+255),b
 10981                           
 10982                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10983  0030C0  D109               	goto	l8177
 10984  0030C2                     l8167:
 10985                           
 10986                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 10987                           ;stkvar	_i @ sp[(-18)+10]
 10988  0030C2  50E1               	movf	fsr1l,w,c
 10989  0030C4  0FF8               	addlw	-8
 10990  0030C6  6ED9               	movwf	fsr2l,c
 10991  0030C8  50E2               	movf	fsr1h,w,c
 10992  0030CA  6EDA               	movwf	fsr2h,c
 10993  0030CC  0EFF               	movlw	255
 10994  0030CE  22DA               	addwfc	fsr2h,f,c
 10995  0030D0  06DE               	decf	postinc2,f,c
 10996  0030D2  0E00               	movlw	0
 10997  0030D4  5ADD               	subwfb	postdec2,f,c
 10998                           
 10999                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 11000  0030D6  0E0A               	movlw	10
 11001  0030D8  6EE6               	movwf	postinc1,c
 11002  0030DA  0E00               	movlw	0
 11003  0030DC  6EE6               	movwf	postinc1,c
 11004  0030DE  0E00               	movlw	0
 11005  0030E0  6EE6               	movwf	postinc1,c
 11006  0030E2  0E00               	movlw	0
 11007  0030E4  6EE6               	movwf	postinc1,c
 11008  0030E6  0E00               	movlw	0
 11009  0030E8  6EE6               	movwf	postinc1,c
 11010  0030EA  0E00               	movlw	0
 11011  0030EC  6EE6               	movwf	postinc1,c
 11012  0030EE  0E00               	movlw	0
 11013  0030F0  6EE6               	movwf	postinc1,c
 11014  0030F2  0E00               	movlw	0
 11015  0030F4  6EE6               	movwf	postinc1,c
 11016                           
 11017                           ;stkvar	_n @ sp[(-26)+2]
 11018  0030F6  50E1               	movf	fsr1l,w,c
 11019  0030F8  0FE8               	addlw	-24
 11020  0030FA  6ED9               	movwf	fsr2l,c
 11021  0030FC  50E2               	movf	fsr1h,w,c
 11022  0030FE  6EDA               	movwf	fsr2h,c
 11023  003100  0EFF               	movlw	255
 11024  003102  22DA               	addwfc	fsr2h,f,c
 11025  003104  006F FF7B FFE6     	movff	postinc2,postinc1
 11026  00310A  006F FF7B FFE6     	movff	postinc2,postinc1
 11027  003110  006F FF7B FFE6     	movff	postinc2,postinc1
 11028  003116  006F FF7B FFE6     	movff	postinc2,postinc1
 11029  00311C  006F FF7B FFE6     	movff	postinc2,postinc1
 11030  003122  006F FF7B FFE6     	movff	postinc2,postinc1
 11031  003128  006F FF7B FFE6     	movff	postinc2,postinc1
 11032  00312E  006F FF7B FFE6     	movff	postinc2,postinc1
 11033  003134  EC5E  F023         	call	___aomod	;wreg free
 11034  003138  52E5               	movf	postdec1,f,c
 11035  00313A  006F FF9C  F054    	movff	indf1,btemp+23
 11036  003140  52E5               	movf	postdec1,f,c
 11037  003142  006F FF9C  F053    	movff	indf1,btemp+22
 11038  003148  52E5               	movf	postdec1,f,c
 11039  00314A  006F FF9C  F052    	movff	indf1,btemp+21
 11040  003150  52E5               	movf	postdec1,f,c
 11041  003152  006F FF9C  F051    	movff	indf1,btemp+20
 11042  003158  52E5               	movf	postdec1,f,c
 11043  00315A  006F FF9C  F050    	movff	indf1,btemp+19
 11044  003160  52E5               	movf	postdec1,f,c
 11045  003162  006F FF9C  F04F    	movff	indf1,btemp+18
 11046  003168  52E5               	movf	postdec1,f,c
 11047  00316A  006F FF9C  F04E    	movff	indf1,btemp+17
 11048  003170  52E5               	movf	postdec1,f,c
 11049  003172  006F FF9C  F04D    	movff	indf1,btemp+16
 11050  003178  0EF8               	movlw	248
 11051  00317A  26E1               	addwf	fsr1l,f,c
 11052  00317C  0EFF               	movlw	255
 11053  00317E  22E2               	addwfc	fsr1h,f,c
 11054  003180  0060  F134  F047   	movff	btemp+16,btemp+10
 11055  003186  0060  F138  F048   	movff	btemp+17,btemp+11
 11056  00318C  0060  F11F  FFE6   	movff	btemp+10,postinc1
 11057  003192  0060  F123  FFE6   	movff	btemp+11,postinc1
 11058  003198  ECB4  F02D         	call	_abs	;wreg free
 11059  00319C  0E30               	movlw	48
 11060  00319E  263D               	addwf	btemp,f,c
 11061                           
 11062                           ;stkvar	_i @ sp[(-18)+10]
 11063  0031A0  0EF8               	movlw	-8
 11064  0031A2  006F FF8C  F047    	movff	plusw1,btemp+10
 11065  0031A8  0EF9               	movlw	-7
 11066  0031AA  006F FF8C  F048    	movff	plusw1,btemp+11
 11067  0031B0  0ED0               	movlw	low _dbuf
 11068  0031B2  2447               	addwf	btemp+10,w,c
 11069  0031B4  6ED9               	movwf	fsr2l,c
 11070  0031B6  0E01               	movlw	high _dbuf
 11071  0031B8  2048               	addwfc	btemp+11,w,c
 11072  0031BA  6EDA               	movwf	fsr2h,c
 11073  0031BC  0060  F0F7  FFDF   	movff	btemp,indf2
 11074                           
 11075                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 11076                           ;stkvar	_p @ sp[(-18)+16]
 11077  0031C2  50E1               	movf	fsr1l,w,c
 11078  0031C4  0FFE               	addlw	-2
 11079  0031C6  6ED9               	movwf	fsr2l,c
 11080  0031C8  50E2               	movf	fsr1h,w,c
 11081  0031CA  6EDA               	movwf	fsr2h,c
 11082  0031CC  0EFF               	movlw	255
 11083  0031CE  22DA               	addwfc	fsr2h,f,c
 11084  0031D0  06DE               	decf	postinc2,f,c
 11085  0031D2  0E00               	movlw	0
 11086  0031D4  5ADD               	subwfb	postdec2,f,c
 11087                           
 11088                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 11089                           ;stkvar	_w @ sp[(-18)+14]
 11090  0031D6  50E1               	movf	fsr1l,w,c
 11091  0031D8  0FFC               	addlw	-4
 11092  0031DA  6ED9               	movwf	fsr2l,c
 11093  0031DC  50E2               	movf	fsr1h,w,c
 11094  0031DE  6EDA               	movwf	fsr2h,c
 11095  0031E0  0EFF               	movlw	255
 11096  0031E2  22DA               	addwfc	fsr2h,f,c
 11097  0031E4  06DE               	decf	postinc2,f,c
 11098  0031E6  0E00               	movlw	0
 11099  0031E8  5ADD               	subwfb	postdec2,f,c
 11100                           
 11101                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 11102  0031EA  0E0A               	movlw	10
 11103  0031EC  6EE6               	movwf	postinc1,c
 11104  0031EE  0E00               	movlw	0
 11105  0031F0  6EE6               	movwf	postinc1,c
 11106  0031F2  0E00               	movlw	0
 11107  0031F4  6EE6               	movwf	postinc1,c
 11108  0031F6  0E00               	movlw	0
 11109  0031F8  6EE6               	movwf	postinc1,c
 11110  0031FA  0E00               	movlw	0
 11111  0031FC  6EE6               	movwf	postinc1,c
 11112  0031FE  0E00               	movlw	0
 11113  003200  6EE6               	movwf	postinc1,c
 11114  003202  0E00               	movlw	0
 11115  003204  6EE6               	movwf	postinc1,c
 11116  003206  0E00               	movlw	0
 11117  003208  6EE6               	movwf	postinc1,c
 11118                           
 11119                           ;stkvar	_n @ sp[(-26)+2]
 11120  00320A  50E1               	movf	fsr1l,w,c
 11121  00320C  0FE8               	addlw	-24
 11122  00320E  6ED9               	movwf	fsr2l,c
 11123  003210  50E2               	movf	fsr1h,w,c
 11124  003212  6EDA               	movwf	fsr2h,c
 11125  003214  0EFF               	movlw	255
 11126  003216  22DA               	addwfc	fsr2h,f,c
 11127  003218  006F FF7B FFE6     	movff	postinc2,postinc1
 11128  00321E  006F FF7B FFE6     	movff	postinc2,postinc1
 11129  003224  006F FF7B FFE6     	movff	postinc2,postinc1
 11130  00322A  006F FF7B FFE6     	movff	postinc2,postinc1
 11131  003230  006F FF7B FFE6     	movff	postinc2,postinc1
 11132  003236  006F FF7B FFE6     	movff	postinc2,postinc1
 11133  00323C  006F FF7B FFE6     	movff	postinc2,postinc1
 11134  003242  006F FF7B FFE6     	movff	postinc2,postinc1
 11135  003248  EC88  F01E         	call	___aodiv	;wreg free
 11136  00324C  52E5               	movf	postdec1,f,c
 11137  00324E  006F FF9C  F054    	movff	indf1,btemp+23
 11138  003254  52E5               	movf	postdec1,f,c
 11139  003256  006F FF9C  F053    	movff	indf1,btemp+22
 11140  00325C  52E5               	movf	postdec1,f,c
 11141  00325E  006F FF9C  F052    	movff	indf1,btemp+21
 11142  003264  52E5               	movf	postdec1,f,c
 11143  003266  006F FF9C  F051    	movff	indf1,btemp+20
 11144  00326C  52E5               	movf	postdec1,f,c
 11145  00326E  006F FF9C  F050    	movff	indf1,btemp+19
 11146  003274  52E5               	movf	postdec1,f,c
 11147  003276  006F FF9C  F04F    	movff	indf1,btemp+18
 11148  00327C  52E5               	movf	postdec1,f,c
 11149  00327E  006F FF9C  F04E    	movff	indf1,btemp+17
 11150  003284  52E5               	movf	postdec1,f,c
 11151  003286  006F FF9C  F04D    	movff	indf1,btemp+16
 11152  00328C  0EF8               	movlw	248
 11153  00328E  26E1               	addwf	fsr1l,f,c
 11154  003290  0EFF               	movlw	255
 11155  003292  22E2               	addwfc	fsr1h,f,c
 11156                           
 11157                           ;stkvar	_n @ sp[(-18)+2]
 11158  003294  0EF0               	movlw	-16
 11159  003296  0060  F137  FFE3   	movff	btemp+16,plusw1
 11160  00329C  0EF1               	movlw	-15
 11161  00329E  0060  F13B  FFE3   	movff	btemp+17,plusw1
 11162  0032A4  0EF2               	movlw	-14
 11163  0032A6  0060  F13F  FFE3   	movff	btemp+18,plusw1
 11164  0032AC  0EF3               	movlw	-13
 11165  0032AE  0060  F143  FFE3   	movff	btemp+19,plusw1
 11166  0032B4  0EF4               	movlw	-12
 11167  0032B6  0060  F147  FFE3   	movff	btemp+20,plusw1
 11168  0032BC  0EF5               	movlw	-11
 11169  0032BE  0060  F14B  FFE3   	movff	btemp+21,plusw1
 11170  0032C4  0EF6               	movlw	-10
 11171  0032C6  0060  F14F  FFE3   	movff	btemp+22,plusw1
 11172  0032CC  0EF7               	movlw	-9
 11173  0032CE  0060  F153  FFE3   	movff	btemp+23,plusw1
 11174  0032D4                     l8177:
 11175                           
 11176                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11177                           ;stkvar	_i @ sp[(-18)+10]
 11178  0032D4  0EF9               	movlw	-7
 11179  0032D6  BEE3               	btfsc	plusw1,7,c
 11180  0032D8  D036               	goto	u4850
 11181  0032DA  0EF9               	movlw	-7
 11182  0032DC  50E3               	movf	plusw1,w,c
 11183  0032DE  E104               	bnz	u4810
 11184  0032E0  0EF8               	movlw	-8
 11185  0032E2  04E3               	decf	plusw1,w,c
 11186  0032E4  A0D8               	btfss	status,0,c
 11187  0032E6  D02F               	goto	u4850
 11188  0032E8                     u4810:
 11189                           
 11190                           ;stkvar	_n @ sp[(-18)+2]
 11191  0032E8  0EF0               	movlw	-16
 11192  0032EA  50E3               	movf	plusw1,w,c
 11193  0032EC  E115               	bnz	u4821
 11194  0032EE  0EF1               	movlw	-15
 11195  0032F0  50E3               	movf	plusw1,w,c
 11196  0032F2  E112               	bnz	u4821
 11197  0032F4  0EF2               	movlw	-14
 11198  0032F6  50E3               	movf	plusw1,w,c
 11199  0032F8  E10F               	bnz	u4821
 11200  0032FA  0EF3               	movlw	-13
 11201  0032FC  50E3               	movf	plusw1,w,c
 11202  0032FE  E10C               	bnz	u4821
 11203  003300  0EF4               	movlw	-12
 11204  003302  50E3               	movf	plusw1,w,c
 11205  003304  E109               	bnz	u4821
 11206  003306  0EF5               	movlw	-11
 11207  003308  50E3               	movf	plusw1,w,c
 11208  00330A  E106               	bnz	u4821
 11209  00330C  0EF6               	movlw	-10
 11210  00330E  50E3               	movf	plusw1,w,c
 11211  003310  E103               	bnz	u4821
 11212  003312  0EF7               	movlw	-9
 11213  003314  50E3               	movf	plusw1,w,c
 11214  003316  A4D8               	btfss	status,2,c
 11215  003318                     u4821:
 11216  003318  D6D4               	goto	l8167
 11217                           
 11218                           ;stkvar	_p @ sp[(-18)+16]
 11219  00331A  0EFF               	movlw	-1
 11220  00331C  BEE3               	btfsc	plusw1,7,c
 11221  00331E  D007               	goto	u4830
 11222  003320  0EFF               	movlw	-1
 11223  003322  50E3               	movf	plusw1,w,c
 11224  003324  E103               	bnz	u4831
 11225  003326  0EFE               	movlw	-2
 11226  003328  04E3               	decf	plusw1,w,c
 11227  00332A  B0D8               	btfsc	status,0,c
 11228  00332C                     u4831:
 11229  00332C  D6CA               	goto	l8167
 11230  00332E                     u4830:
 11231                           
 11232                           ;stkvar	_w @ sp[(-18)+14]
 11233  00332E  0EFD               	movlw	-3
 11234  003330  BEE3               	btfsc	plusw1,7,c
 11235  003332  D009               	goto	u4850
 11236  003334  0EFD               	movlw	-3
 11237  003336  50E3               	movf	plusw1,w,c
 11238  003338  E104               	bnz	u4840
 11239  00333A  0EFC               	movlw	-4
 11240  00333C  04E3               	decf	plusw1,w,c
 11241  00333E  A0D8               	btfss	status,0,c
 11242  003340  D002               	goto	u4850
 11243  003342                     u4840:
 11244  003342  B221               	btfsc	_flags,1,c
 11245  003344  D6BE               	goto	l8167
 11246  003346                     u4850:
 11247                           
 11248                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 11249                           ;stkvar	_s @ sp[(-18)+12]
 11250  003346  0EFA               	movlw	-6
 11251  003348  006F FF8C  F03D    	movff	plusw1,btemp
 11252  00334E  0EFB               	movlw	-5
 11253  003350  50E3               	movf	plusw1,w,c
 11254  003352  103D               	iorwf	btemp,w,c
 11255  003354  A4D8               	btfss	status,2,c
 11256  003356  D002               	goto	u4870
 11257  003358  A421               	btfss	_flags,2,c
 11258  00335A  D033               	goto	l8201
 11259  00335C                     u4870:
 11260                           
 11261                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 11262                           ;stkvar	_i @ sp[(-18)+10]
 11263  00335C  50E1               	movf	fsr1l,w,c
 11264  00335E  0FF8               	addlw	-8
 11265  003360  6ED9               	movwf	fsr2l,c
 11266  003362  50E2               	movf	fsr1h,w,c
 11267  003364  6EDA               	movwf	fsr2h,c
 11268  003366  0EFF               	movlw	255
 11269  003368  22DA               	addwfc	fsr2h,f,c
 11270  00336A  06DE               	decf	postinc2,f,c
 11271  00336C  0E00               	movlw	0
 11272  00336E  5ADD               	subwfb	postdec2,f,c
 11273                           
 11274                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 11275                           ;stkvar	_s @ sp[(-18)+12]
 11276  003370  0EFA               	movlw	-6
 11277  003372  006F FF8C  F03D    	movff	plusw1,btemp
 11278  003378  0EFB               	movlw	-5
 11279  00337A  50E3               	movf	plusw1,w,c
 11280  00337C  103D               	iorwf	btemp,w,c
 11281  00337E  A4D8               	btfss	status,2,c
 11282  003380  D002               	goto	l8197
 11283  003382  0E2B               	movlw	43
 11284  003384  D001               	goto	L28
 11285  003386                     l8197:
 11286  003386  0E2D               	movlw	45
 11287  003388                     L28:
 11288  003388  6E47               	movwf	btemp+10,c
 11289  00338A  0E00               	movlw	0
 11290  00338C  6E48               	movwf	btemp+11,c
 11291                           
 11292                           ;stkvar	_dtoa$3970 @ sp[(-18)+0]
 11293  00338E  0EEE               	movlw	-18
 11294  003390  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11295  003396  0EEF               	movlw	-17
 11296  003398  0060  F123  FFE3   	movff	btemp+11,plusw1
 11297                           
 11298                           ;stkvar	_dtoa$3970 @ sp[(-18)+0]
 11299                           ;stkvar	_i @ sp[(-18)+10]
 11300  00339E  0EF8               	movlw	-8
 11301  0033A0  006F FF8C  F047    	movff	plusw1,btemp+10
 11302  0033A6  0EF9               	movlw	-7
 11303  0033A8  006F FF8C  F048    	movff	plusw1,btemp+11
 11304  0033AE  0ED0               	movlw	low _dbuf
 11305  0033B0  2447               	addwf	btemp+10,w,c
 11306  0033B2  6ED9               	movwf	fsr2l,c
 11307  0033B4  0E01               	movlw	high _dbuf
 11308  0033B6  2048               	addwfc	btemp+11,w,c
 11309  0033B8  6EDA               	movwf	fsr2h,c
 11310  0033BA  0EEE               	movlw	-18
 11311  0033BC  006F FF8F FFDF     	movff	plusw1,indf2
 11312  0033C2                     l8201:
 11313                           
 11314                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 11315                           ;stkvar	_w @ sp[(-18)+14]
 11316  0033C2  0EFC               	movlw	-4
 11317  0033C4  006F FF8F FFE6     	movff	plusw1,postinc1
 11318  0033CA  006F FF8F FFE6     	movff	plusw1,postinc1
 11319                           
 11320                           ;stkvar	_i @ sp[(-20)+10]
 11321  0033D0  0ED0               	movlw	low _dbuf
 11322  0033D2  6E47               	movwf	btemp+10,c
 11323  0033D4  0E01               	movlw	high _dbuf
 11324  0033D6  6E48               	movwf	btemp+11,c
 11325  0033D8  0EF6               	movlw	-10
 11326  0033DA  50E3               	movf	plusw1,w,c
 11327  0033DC  2647               	addwf	btemp+10,f,c
 11328  0033DE  0EF7               	movlw	-9
 11329  0033E0  50E3               	movf	plusw1,w,c
 11330  0033E2  2248               	addwfc	btemp+11,f,c
 11331  0033E4  0060  F11F  FFE6   	movff	btemp+10,postinc1
 11332  0033EA  0060  F123  FFE6   	movff	btemp+11,postinc1
 11333                           
 11334                           ;stkvar	_fp @ sp[(-22)+-2]
 11335  0033F0  0EE8               	movlw	-24
 11336  0033F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11337  0033F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11338  0033FE  EC46  F025         	call	_pad	;wreg free
 11339                           
 11340                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 11341  003402  0EE4               	movlw	228
 11342  003404  26E1               	addwf	fsr1l,f,c
 11343  003406  0EFF               	movlw	255
 11344  003408  22E2               	addwfc	fsr1h,f,c
 11345  00340A  0012               	return		;funcret
 11346  00340C                     __end_of_dtoa:
 11347                           	opt callstack 0
 11348                           
 11349 ;; *************** function _abs *****************
 11350 ;; Defined at:
 11351 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;  a               2  [STACK] int 
 11354 ;; Auto vars:     Size  Location     Type
 11355 ;;		None
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  2  [STACK] int 
 11358 ;; Registers used:
 11359 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/1
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11369 ;;Total ram usage:        0 bytes
 11370 ;; Hardware stack levels used:    1
 11371 ;; Hardware stack levels required when called:    3
 11372 ;; This function calls:
 11373 ;;		Nothing
 11374 ;; This function is called by:
 11375 ;;		_dtoa
 11376 ;; This function uses a reentrant model
 11377 ;;
 11378                           
 11379                           	psect	text45
 11380  005B68                     __ptext45:
 11381                           	opt callstack 0
 11382  005B68                     _abs:
 11383                           	opt callstack 23
 11384                           
 11385                           ;stkvar	_a @ sp[(0)+-2]
 11386                           
 11387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11388                           ;incstack = 0
 11389  005B68  0EFF               	movlw	-1
 11390  005B6A  BEE3               	btfsc	plusw1,7,c
 11391  005B6C  D007               	goto	u2450
 11392  005B6E  0EFF               	movlw	-1
 11393  005B70  50E3               	movf	plusw1,w,c
 11394  005B72  E112               	bnz	l5367
 11395  005B74  0EFE               	movlw	-2
 11396  005B76  04E3               	decf	plusw1,w,c
 11397  005B78  B0D8               	btfsc	status,0,c
 11398  005B7A  D00E               	goto	l5367
 11399  005B7C                     u2450:
 11400                           
 11401                           ;stkvar	_a @ sp[(0)+-2]
 11402  005B7C  0EFE               	movlw	-2
 11403  005B7E  006F FF8C  F03D    	movff	plusw1,btemp
 11404  005B84  1E3D               	comf	btemp,f,c
 11405  005B86  0EFF               	movlw	-1
 11406  005B88  006F FF8C  F03E    	movff	plusw1,btemp+1
 11407  005B8E  1E3E               	comf	btemp+1,f,c
 11408  005B90  2A3D               	incf	btemp,f,c
 11409  005B92  B4D8               	btfsc	status,2,c
 11410  005B94  2A3E               	incf	btemp+1,f,c
 11411  005B96  D008               	goto	l2606
 11412  005B98                     l5367:
 11413                           
 11414                           ;stkvar	_a @ sp[(0)+-2]
 11415  005B98  0EFE               	movlw	-2
 11416  005B9A  006F FF8C  F03D    	movff	plusw1,btemp
 11417  005BA0  0EFF               	movlw	-1
 11418  005BA2  006F FF8C  F03E    	movff	plusw1,btemp+1
 11419  005BA8                     l2606:
 11420                           
 11421                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 11422  005BA8  52E5               	movf	postdec1,f,c
 11423  005BAA  52E5               	movf	postdec1,f,c
 11424  005BAC  0012               	return		;funcret
 11425  005BAE                     __end_of_abs:
 11426                           	opt callstack 0
 11427                           
 11428 ;; *************** function ___aomod *****************
 11429 ;; Defined at:
 11430 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;  dividend        8  [STACK] long long 
 11433 ;;  divisor         8  [STACK] long long 
 11434 ;; Auto vars:     Size  Location     Type
 11435 ;;  sign            1  [STACK] unsigned char 
 11436 ;;  counter         1  [STACK] unsigned char 
 11437 ;; Return value:  Size  Location     Type
 11438 ;;                  8  [STACK] long long 
 11439 ;; Registers used:
 11440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 11441 ;; Tracked objects:
 11442 ;;		On entry : 0/1
 11443 ;;		On exit  : 0/0
 11444 ;;		Unchanged: 0/0
 11445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11450 ;;Total ram usage:        0 bytes
 11451 ;; Hardware stack levels used:    1
 11452 ;; Hardware stack levels required when called:    3
 11453 ;; This function calls:
 11454 ;;		Nothing
 11455 ;; This function is called by:
 11456 ;;		_dtoa
 11457 ;; This function uses a reentrant model
 11458 ;;
 11459                           
 11460                           	psect	text46
 11461  0046BC                     __ptext46:
 11462                           	opt callstack 0
 11463  0046BC                     ___aomod:
 11464                           	opt callstack 0
 11465                           
 11466                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 11467  0046BC  52E6               	movf	postinc1,f,c
 11468  0046BE  52E6               	movf	postinc1,f,c
 11469                           
 11470                           ;stkvar	_sign @ sp[(-2)+0]
 11471                           
 11472                           ;incstack = 0
 11473  0046C0  0EFE               	movlw	-2
 11474  0046C2  6AE3               	clrf	plusw1,c
 11475                           
 11476                           ;stkvar	_dividend @ sp[(-2)+-8]
 11477  0046C4  0EFD               	movlw	-3
 11478  0046C6  AEE3               	btfss	plusw1,7,c
 11479  0046C8  D028               	goto	l5423
 11480                           
 11481                           ;stkvar	_dividend @ sp[(-2)+-8]
 11482                           ;stkvar	_dividend @ sp[(-2)+-8]
 11483  0046CA  0EF6               	movlw	-10
 11484  0046CC  6CE3               	negf	plusw1,c
 11485  0046CE  0EF7               	movlw	-9
 11486  0046D0  1EE3               	comf	plusw1,f,c
 11487  0046D2  0EF8               	movlw	-8
 11488  0046D4  1EE3               	comf	plusw1,f,c
 11489  0046D6  0EF9               	movlw	-7
 11490  0046D8  1EE3               	comf	plusw1,f,c
 11491  0046DA  0EFA               	movlw	-6
 11492  0046DC  1EE3               	comf	plusw1,f,c
 11493  0046DE  0EFB               	movlw	-5
 11494  0046E0  1EE3               	comf	plusw1,f,c
 11495  0046E2  0EFC               	movlw	-4
 11496  0046E4  1EE3               	comf	plusw1,f,c
 11497  0046E6  0EFD               	movlw	-3
 11498  0046E8  1EE3               	comf	plusw1,f,c
 11499  0046EA  E314               	bnc	u2590
 11500  0046EC  0EF7               	movlw	-9
 11501  0046EE  2AE3               	incf	plusw1,f,c
 11502  0046F0  E311               	bnc	u2590
 11503  0046F2  0EF8               	movlw	-8
 11504  0046F4  2AE3               	incf	plusw1,f,c
 11505  0046F6  E30E               	bnc	u2590
 11506  0046F8  0EF9               	movlw	-7
 11507  0046FA  2AE3               	incf	plusw1,f,c
 11508  0046FC  E30B               	bnc	u2590
 11509  0046FE  0EFA               	movlw	-6
 11510  004700  2AE3               	incf	plusw1,f,c
 11511  004702  E308               	bnc	u2590
 11512  004704  0EFB               	movlw	-5
 11513  004706  2AE3               	incf	plusw1,f,c
 11514  004708  E305               	bnc	u2590
 11515  00470A  0EFC               	movlw	-4
 11516  00470C  2AE3               	incf	plusw1,f,c
 11517  00470E  E302               	bnc	u2590
 11518  004710  0EFD               	movlw	-3
 11519  004712  2AE3               	incf	plusw1,f,c
 11520  004714                     u2590:
 11521                           
 11522                           ;stkvar	_sign @ sp[(-2)+0]
 11523  004714  0EFE               	movlw	-2
 11524  004716  6AE3               	clrf	plusw1,c
 11525  004718  2AE3               	incf	plusw1,f,c
 11526  00471A                     l5423:
 11527                           
 11528                           ;stkvar	_divisor @ sp[(-2)+-16]
 11529  00471A  0EF5               	movlw	-11
 11530  00471C  AEE3               	btfss	plusw1,7,c
 11531  00471E  D025               	goto	u2610
 11532                           
 11533                           ;stkvar	_divisor @ sp[(-2)+-16]
 11534                           ;stkvar	_divisor @ sp[(-2)+-16]
 11535  004720  0EEE               	movlw	-18
 11536  004722  6CE3               	negf	plusw1,c
 11537  004724  0EEF               	movlw	-17
 11538  004726  1EE3               	comf	plusw1,f,c
 11539  004728  0EF0               	movlw	-16
 11540  00472A  1EE3               	comf	plusw1,f,c
 11541  00472C  0EF1               	movlw	-15
 11542  00472E  1EE3               	comf	plusw1,f,c
 11543  004730  0EF2               	movlw	-14
 11544  004732  1EE3               	comf	plusw1,f,c
 11545  004734  0EF3               	movlw	-13
 11546  004736  1EE3               	comf	plusw1,f,c
 11547  004738  0EF4               	movlw	-12
 11548  00473A  1EE3               	comf	plusw1,f,c
 11549  00473C  0EF5               	movlw	-11
 11550  00473E  1EE3               	comf	plusw1,f,c
 11551  004740  E314               	bnc	u2610
 11552  004742  0EEF               	movlw	-17
 11553  004744  2AE3               	incf	plusw1,f,c
 11554  004746  E311               	bnc	u2610
 11555  004748  0EF0               	movlw	-16
 11556  00474A  2AE3               	incf	plusw1,f,c
 11557  00474C  E30E               	bnc	u2610
 11558  00474E  0EF1               	movlw	-15
 11559  004750  2AE3               	incf	plusw1,f,c
 11560  004752  E30B               	bnc	u2610
 11561  004754  0EF2               	movlw	-14
 11562  004756  2AE3               	incf	plusw1,f,c
 11563  004758  E308               	bnc	u2610
 11564  00475A  0EF3               	movlw	-13
 11565  00475C  2AE3               	incf	plusw1,f,c
 11566  00475E  E305               	bnc	u2610
 11567  004760  0EF4               	movlw	-12
 11568  004762  2AE3               	incf	plusw1,f,c
 11569  004764  E302               	bnc	u2610
 11570  004766  0EF5               	movlw	-11
 11571  004768  2AE3               	incf	plusw1,f,c
 11572  00476A                     u2610:
 11573                           
 11574                           ;stkvar	_divisor @ sp[(-2)+-16]
 11575  00476A  0EEE               	movlw	-18
 11576  00476C  50E3               	movf	plusw1,w,c
 11577  00476E  E116               	bnz	u2620
 11578  004770  0EEF               	movlw	-17
 11579  004772  50E3               	movf	plusw1,w,c
 11580  004774  E113               	bnz	u2620
 11581  004776  0EF0               	movlw	-16
 11582  004778  50E3               	movf	plusw1,w,c
 11583  00477A  E110               	bnz	u2620
 11584  00477C  0EF1               	movlw	-15
 11585  00477E  50E3               	movf	plusw1,w,c
 11586  004780  E10D               	bnz	u2620
 11587  004782  0EF2               	movlw	-14
 11588  004784  50E3               	movf	plusw1,w,c
 11589  004786  E10A               	bnz	u2620
 11590  004788  0EF3               	movlw	-13
 11591  00478A  50E3               	movf	plusw1,w,c
 11592  00478C  E107               	bnz	u2620
 11593  00478E  0EF4               	movlw	-12
 11594  004790  50E3               	movf	plusw1,w,c
 11595  004792  E104               	bnz	u2620
 11596  004794  0EF5               	movlw	-11
 11597  004796  50E3               	movf	plusw1,w,c
 11598  004798  B4D8               	btfsc	status,2,c
 11599  00479A  D075               	goto	u2650
 11600  00479C                     u2620:
 11601                           
 11602                           ;stkvar	_counter @ sp[(-2)+1]
 11603  00479C  0EFF               	movlw	-1
 11604  00479E  6AE3               	clrf	plusw1,c
 11605  0047A0  D012               	goto	L29
 11606  0047A2                     l5431:
 11607                           
 11608                           ;stkvar	_divisor @ sp[(-2)+-16]
 11609  0047A2  90D8               	bcf	status,0,c
 11610  0047A4  0EEE               	movlw	-18
 11611  0047A6  36E3               	rlcf	plusw1,f,c
 11612  0047A8  0EEF               	movlw	-17
 11613  0047AA  36E3               	rlcf	plusw1,f,c
 11614  0047AC  0EF0               	movlw	-16
 11615  0047AE  36E3               	rlcf	plusw1,f,c
 11616  0047B0  0EF1               	movlw	-15
 11617  0047B2  36E3               	rlcf	plusw1,f,c
 11618  0047B4  0EF2               	movlw	-14
 11619  0047B6  36E3               	rlcf	plusw1,f,c
 11620  0047B8  0EF3               	movlw	-13
 11621  0047BA  36E3               	rlcf	plusw1,f,c
 11622  0047BC  0EF4               	movlw	-12
 11623  0047BE  36E3               	rlcf	plusw1,f,c
 11624  0047C0  0EF5               	movlw	-11
 11625  0047C2  36E3               	rlcf	plusw1,f,c
 11626                           
 11627                           ;stkvar	_counter @ sp[(-2)+1]
 11628  0047C4  0EFF               	movlw	-1
 11629  0047C6                     L29:
 11630  0047C6  2AE3               	incf	plusw1,f,c
 11631                           
 11632                           ;stkvar	_divisor @ sp[(-2)+-16]
 11633  0047C8  0EF5               	movlw	-11
 11634  0047CA  AEE3               	btfss	plusw1,7,c
 11635  0047CC  D7EA               	goto	l5431
 11636  0047CE                     u2630:
 11637                           
 11638                           ;stkvar	_divisor @ sp[(-2)+-16]
 11639                           ;stkvar	_dividend @ sp[(-2)+-8]
 11640  0047CE  50E1               	movf	fsr1l,w,c
 11641  0047D0  0FF6               	addlw	-10
 11642  0047D2  6ED9               	movwf	fsr2l,c
 11643  0047D4  50E2               	movf	fsr1h,w,c
 11644  0047D6  6EDA               	movwf	fsr2h,c
 11645  0047D8  0EFF               	movlw	255
 11646  0047DA  22DA               	addwfc	fsr2h,f,c
 11647  0047DC  0EEE               	movlw	-18
 11648  0047DE  50E3               	movf	plusw1,w,c
 11649  0047E0  5CDE               	subwf	postinc2,w,c
 11650  0047E2  0EEF               	movlw	-17
 11651  0047E4  50E3               	movf	plusw1,w,c
 11652  0047E6  58DE               	subwfb	postinc2,w,c
 11653  0047E8  0EF0               	movlw	-16
 11654  0047EA  50E3               	movf	plusw1,w,c
 11655  0047EC  58DE               	subwfb	postinc2,w,c
 11656  0047EE  0EF1               	movlw	-15
 11657  0047F0  50E3               	movf	plusw1,w,c
 11658  0047F2  58DE               	subwfb	postinc2,w,c
 11659  0047F4  0EF2               	movlw	-14
 11660  0047F6  50E3               	movf	plusw1,w,c
 11661  0047F8  58DE               	subwfb	postinc2,w,c
 11662  0047FA  0EF3               	movlw	-13
 11663  0047FC  50E3               	movf	plusw1,w,c
 11664  0047FE  58DE               	subwfb	postinc2,w,c
 11665  004800  0EF4               	movlw	-12
 11666  004802  50E3               	movf	plusw1,w,c
 11667  004804  58DE               	subwfb	postinc2,w,c
 11668  004806  0EF5               	movlw	-11
 11669  004808  50E3               	movf	plusw1,w,c
 11670  00480A  58DE               	subwfb	postinc2,w,c
 11671  00480C  A0D8               	btfss	status,0,c
 11672  00480E  D01F               	goto	l5439
 11673                           
 11674                           ;stkvar	_divisor @ sp[(-2)+-16]
 11675                           ;stkvar	_dividend @ sp[(-2)+-8]
 11676  004810  50E1               	movf	fsr1l,w,c
 11677  004812  0FF6               	addlw	-10
 11678  004814  6ED9               	movwf	fsr2l,c
 11679  004816  50E2               	movf	fsr1h,w,c
 11680  004818  6EDA               	movwf	fsr2h,c
 11681  00481A  0EFF               	movlw	255
 11682  00481C  22DA               	addwfc	fsr2h,f,c
 11683  00481E  0EEE               	movlw	-18
 11684  004820  50E3               	movf	plusw1,w,c
 11685  004822  5EDE               	subwf	postinc2,f,c
 11686  004824  0EEF               	movlw	-17
 11687  004826  50E3               	movf	plusw1,w,c
 11688  004828  5ADE               	subwfb	postinc2,f,c
 11689  00482A  0EF0               	movlw	-16
 11690  00482C  50E3               	movf	plusw1,w,c
 11691  00482E  5ADE               	subwfb	postinc2,f,c
 11692  004830  0EF1               	movlw	-15
 11693  004832  50E3               	movf	plusw1,w,c
 11694  004834  5ADE               	subwfb	postinc2,f,c
 11695  004836  0EF2               	movlw	-14
 11696  004838  50E3               	movf	plusw1,w,c
 11697  00483A  5ADE               	subwfb	postinc2,f,c
 11698  00483C  0EF3               	movlw	-13
 11699  00483E  50E3               	movf	plusw1,w,c
 11700  004840  5ADE               	subwfb	postinc2,f,c
 11701  004842  0EF4               	movlw	-12
 11702  004844  50E3               	movf	plusw1,w,c
 11703  004846  5ADE               	subwfb	postinc2,f,c
 11704  004848  0EF5               	movlw	-11
 11705  00484A  50E3               	movf	plusw1,w,c
 11706  00484C  5ADE               	subwfb	postinc2,f,c
 11707  00484E                     l5439:
 11708                           
 11709                           ;stkvar	_divisor @ sp[(-2)+-16]
 11710  00484E  90D8               	bcf	status,0,c
 11711  004850  0EF5               	movlw	-11
 11712  004852  32E3               	rrcf	plusw1,f,c
 11713  004854  0EF4               	movlw	-12
 11714  004856  32E3               	rrcf	plusw1,f,c
 11715  004858  0EF3               	movlw	-13
 11716  00485A  32E3               	rrcf	plusw1,f,c
 11717  00485C  0EF2               	movlw	-14
 11718  00485E  32E3               	rrcf	plusw1,f,c
 11719  004860  0EF1               	movlw	-15
 11720  004862  32E3               	rrcf	plusw1,f,c
 11721  004864  0EF0               	movlw	-16
 11722  004866  32E3               	rrcf	plusw1,f,c
 11723  004868  0EEF               	movlw	-17
 11724  00486A  32E3               	rrcf	plusw1,f,c
 11725  00486C  0EEE               	movlw	-18
 11726  00486E  32E3               	rrcf	plusw1,f,c
 11727                           
 11728                           ;stkvar	_counter @ sp[(-2)+1]
 11729  004870  0EFF               	movlw	-1
 11730  004872  50E3               	movf	plusw1,w,c
 11731  004874  6E3D               	movwf	btemp,c
 11732  004876  0E01               	movlw	1
 11733  004878  5E3D               	subwf	btemp,f,c
 11734  00487A  0EFF               	movlw	-1
 11735  00487C  0060  F0F7  FFE3   	movff	btemp,plusw1
 11736  004882  A4D8               	btfss	status,2,c
 11737  004884  D7A4               	goto	u2630
 11738  004886                     u2650:
 11739                           
 11740                           ;stkvar	_sign @ sp[(-2)+0]
 11741  004886  0EFE               	movlw	-2
 11742  004888  50E3               	movf	plusw1,w,c
 11743  00488A  B4D8               	btfsc	status,2,c
 11744  00488C  D025               	goto	u2670
 11745                           
 11746                           ;stkvar	_dividend @ sp[(-2)+-8]
 11747                           ;stkvar	_dividend @ sp[(-2)+-8]
 11748  00488E  0EF6               	movlw	-10
 11749  004890  6CE3               	negf	plusw1,c
 11750  004892  0EF7               	movlw	-9
 11751  004894  1EE3               	comf	plusw1,f,c
 11752  004896  0EF8               	movlw	-8
 11753  004898  1EE3               	comf	plusw1,f,c
 11754  00489A  0EF9               	movlw	-7
 11755  00489C  1EE3               	comf	plusw1,f,c
 11756  00489E  0EFA               	movlw	-6
 11757  0048A0  1EE3               	comf	plusw1,f,c
 11758  0048A2  0EFB               	movlw	-5
 11759  0048A4  1EE3               	comf	plusw1,f,c
 11760  0048A6  0EFC               	movlw	-4
 11761  0048A8  1EE3               	comf	plusw1,f,c
 11762  0048AA  0EFD               	movlw	-3
 11763  0048AC  1EE3               	comf	plusw1,f,c
 11764  0048AE  E314               	bnc	u2670
 11765  0048B0  0EF7               	movlw	-9
 11766  0048B2  2AE3               	incf	plusw1,f,c
 11767  0048B4  E311               	bnc	u2670
 11768  0048B6  0EF8               	movlw	-8
 11769  0048B8  2AE3               	incf	plusw1,f,c
 11770  0048BA  E30E               	bnc	u2670
 11771  0048BC  0EF9               	movlw	-7
 11772  0048BE  2AE3               	incf	plusw1,f,c
 11773  0048C0  E30B               	bnc	u2670
 11774  0048C2  0EFA               	movlw	-6
 11775  0048C4  2AE3               	incf	plusw1,f,c
 11776  0048C6  E308               	bnc	u2670
 11777  0048C8  0EFB               	movlw	-5
 11778  0048CA  2AE3               	incf	plusw1,f,c
 11779  0048CC  E305               	bnc	u2670
 11780  0048CE  0EFC               	movlw	-4
 11781  0048D0  2AE3               	incf	plusw1,f,c
 11782  0048D2  E302               	bnc	u2670
 11783  0048D4  0EFD               	movlw	-3
 11784  0048D6  2AE3               	incf	plusw1,f,c
 11785  0048D8                     u2670:
 11786                           
 11787                           ;stkvar	_dividend @ sp[(-2)+-8]
 11788  0048D8  0EF6               	movlw	246
 11789  0048DA  24E1               	addwf	fsr1l,w,c
 11790  0048DC  6ED9               	movwf	fsr2l,c
 11791  0048DE  0EFF               	movlw	255
 11792  0048E0  20E2               	addwfc	fsr1h,w,c
 11793  0048E2  6EDA               	movwf	fsr2h,c
 11794                           
 11795                           ;stkvar	?___aomod @ sp[(-2)+-8]
 11796  0048E4  0E08               	movlw	8
 11797  0048E6  6E3D               	movwf	btemp,c
 11798  0048E8  0EF6               	movlw	-10
 11799  0048EA                     us268999:
 11800  0048EA  006F FF7B FFE3     	movff	postinc2,plusw1
 11801  0048F0  28E8               	incf	wreg,w,c
 11802  0048F2  2E3D               	decfsz	btemp,f,c
 11803  0048F4  D7FA               	bra	us268999
 11804                           
 11805                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 11806  0048F6  52E5               	movf	postdec1,f,c
 11807  0048F8  52E5               	movf	postdec1,f,c
 11808  0048FA  0012               	return		;funcret
 11809  0048FC                     __end_of___aomod:
 11810                           	opt callstack 0
 11811                           
 11812 ;; *************** function ___aodiv *****************
 11813 ;; Defined at:
 11814 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 11815 ;; Parameters:    Size  Location     Type
 11816 ;;  dividend        8  [STACK] long long 
 11817 ;;  divisor         8  [STACK] long long 
 11818 ;; Auto vars:     Size  Location     Type
 11819 ;;  quotient        8  [STACK] long long 
 11820 ;;  sign            1  [STACK] unsigned char 
 11821 ;;  counter         1  [STACK] unsigned char 
 11822 ;; Return value:  Size  Location     Type
 11823 ;;                  8  [STACK] long long 
 11824 ;; Registers used:
 11825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 11826 ;; Tracked objects:
 11827 ;;		On entry : 0/1
 11828 ;;		On exit  : 0/0
 11829 ;;		Unchanged: 0/0
 11830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11835 ;;Total ram usage:        0 bytes
 11836 ;; Hardware stack levels used:    1
 11837 ;; Hardware stack levels required when called:    3
 11838 ;; This function calls:
 11839 ;;		Nothing
 11840 ;; This function is called by:
 11841 ;;		_dtoa
 11842 ;; This function uses a reentrant model
 11843 ;;
 11844                           
 11845                           	psect	text47
 11846  003D10                     __ptext47:
 11847                           	opt callstack 0
 11848  003D10                     ___aodiv:
 11849                           	opt callstack 0
 11850                           
 11851                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 11852  003D10  0E0A               	movlw	10
 11853  003D12  26E1               	addwf	fsr1l,f,c
 11854  003D14  0E00               	movlw	0
 11855  003D16  22E2               	addwfc	fsr1h,f,c
 11856                           
 11857                           ;stkvar	_sign @ sp[(-10)+8]
 11858                           
 11859                           ;incstack = 0
 11860  003D18  0EFE               	movlw	-2
 11861  003D1A  6AE3               	clrf	plusw1,c
 11862                           
 11863                           ;stkvar	_divisor @ sp[(-10)+-16]
 11864  003D1C  0EED               	movlw	-19
 11865  003D1E  AEE3               	btfss	plusw1,7,c
 11866  003D20  D028               	goto	l5379
 11867                           
 11868                           ;stkvar	_divisor @ sp[(-10)+-16]
 11869                           ;stkvar	_divisor @ sp[(-10)+-16]
 11870  003D22  0EE6               	movlw	-26
 11871  003D24  6CE3               	negf	plusw1,c
 11872  003D26  0EE7               	movlw	-25
 11873  003D28  1EE3               	comf	plusw1,f,c
 11874  003D2A  0EE8               	movlw	-24
 11875  003D2C  1EE3               	comf	plusw1,f,c
 11876  003D2E  0EE9               	movlw	-23
 11877  003D30  1EE3               	comf	plusw1,f,c
 11878  003D32  0EEA               	movlw	-22
 11879  003D34  1EE3               	comf	plusw1,f,c
 11880  003D36  0EEB               	movlw	-21
 11881  003D38  1EE3               	comf	plusw1,f,c
 11882  003D3A  0EEC               	movlw	-20
 11883  003D3C  1EE3               	comf	plusw1,f,c
 11884  003D3E  0EED               	movlw	-19
 11885  003D40  1EE3               	comf	plusw1,f,c
 11886  003D42  E314               	bnc	u2470
 11887  003D44  0EE7               	movlw	-25
 11888  003D46  2AE3               	incf	plusw1,f,c
 11889  003D48  E311               	bnc	u2470
 11890  003D4A  0EE8               	movlw	-24
 11891  003D4C  2AE3               	incf	plusw1,f,c
 11892  003D4E  E30E               	bnc	u2470
 11893  003D50  0EE9               	movlw	-23
 11894  003D52  2AE3               	incf	plusw1,f,c
 11895  003D54  E30B               	bnc	u2470
 11896  003D56  0EEA               	movlw	-22
 11897  003D58  2AE3               	incf	plusw1,f,c
 11898  003D5A  E308               	bnc	u2470
 11899  003D5C  0EEB               	movlw	-21
 11900  003D5E  2AE3               	incf	plusw1,f,c
 11901  003D60  E305               	bnc	u2470
 11902  003D62  0EEC               	movlw	-20
 11903  003D64  2AE3               	incf	plusw1,f,c
 11904  003D66  E302               	bnc	u2470
 11905  003D68  0EED               	movlw	-19
 11906  003D6A  2AE3               	incf	plusw1,f,c
 11907  003D6C                     u2470:
 11908                           
 11909                           ;stkvar	_sign @ sp[(-10)+8]
 11910  003D6C  0EFE               	movlw	-2
 11911  003D6E  6AE3               	clrf	plusw1,c
 11912  003D70  2AE3               	incf	plusw1,f,c
 11913  003D72                     l5379:
 11914                           
 11915                           ;stkvar	_dividend @ sp[(-10)+-8]
 11916  003D72  0EF5               	movlw	-11
 11917  003D74  AEE3               	btfss	plusw1,7,c
 11918  003D76  D027               	goto	l5385
 11919                           
 11920                           ;stkvar	_dividend @ sp[(-10)+-8]
 11921                           ;stkvar	_dividend @ sp[(-10)+-8]
 11922  003D78  0EEE               	movlw	-18
 11923  003D7A  6CE3               	negf	plusw1,c
 11924  003D7C  0EEF               	movlw	-17
 11925  003D7E  1EE3               	comf	plusw1,f,c
 11926  003D80  0EF0               	movlw	-16
 11927  003D82  1EE3               	comf	plusw1,f,c
 11928  003D84  0EF1               	movlw	-15
 11929  003D86  1EE3               	comf	plusw1,f,c
 11930  003D88  0EF2               	movlw	-14
 11931  003D8A  1EE3               	comf	plusw1,f,c
 11932  003D8C  0EF3               	movlw	-13
 11933  003D8E  1EE3               	comf	plusw1,f,c
 11934  003D90  0EF4               	movlw	-12
 11935  003D92  1EE3               	comf	plusw1,f,c
 11936  003D94  0EF5               	movlw	-11
 11937  003D96  1EE3               	comf	plusw1,f,c
 11938  003D98  E314               	bnc	u2490
 11939  003D9A  0EEF               	movlw	-17
 11940  003D9C  2AE3               	incf	plusw1,f,c
 11941  003D9E  E311               	bnc	u2490
 11942  003DA0  0EF0               	movlw	-16
 11943  003DA2  2AE3               	incf	plusw1,f,c
 11944  003DA4  E30E               	bnc	u2490
 11945  003DA6  0EF1               	movlw	-15
 11946  003DA8  2AE3               	incf	plusw1,f,c
 11947  003DAA  E30B               	bnc	u2490
 11948  003DAC  0EF2               	movlw	-14
 11949  003DAE  2AE3               	incf	plusw1,f,c
 11950  003DB0  E308               	bnc	u2490
 11951  003DB2  0EF3               	movlw	-13
 11952  003DB4  2AE3               	incf	plusw1,f,c
 11953  003DB6  E305               	bnc	u2490
 11954  003DB8  0EF4               	movlw	-12
 11955  003DBA  2AE3               	incf	plusw1,f,c
 11956  003DBC  E302               	bnc	u2490
 11957  003DBE  0EF5               	movlw	-11
 11958  003DC0  2AE3               	incf	plusw1,f,c
 11959  003DC2                     u2490:
 11960                           
 11961                           ;stkvar	_sign @ sp[(-10)+8]
 11962  003DC2  0EFE               	movlw	-2
 11963  003DC4  70E3               	btg	plusw1,0,c
 11964  003DC6                     l5385:
 11965                           
 11966                           ;stkvar	_quotient @ sp[(-10)+0]
 11967  003DC6  0E07               	movlw	7
 11968  003DC8  6E3D               	movwf	btemp,c
 11969  003DCA  0EF6               	movlw	-10
 11970  003DCC                     u2501:
 11971  003DCC  6AE3               	clrf	plusw1,c
 11972  003DCE  2AE8               	incf	wreg,f,c
 11973  003DD0  063D               	decf	btemp,f,c
 11974  003DD2  E2FC               	bc	u2501
 11975                           
 11976                           ;stkvar	_divisor @ sp[(-10)+-16]
 11977  003DD4  0EE6               	movlw	-26
 11978  003DD6  50E3               	movf	plusw1,w,c
 11979  003DD8  E116               	bnz	u2510
 11980  003DDA  0EE7               	movlw	-25
 11981  003DDC  50E3               	movf	plusw1,w,c
 11982  003DDE  E113               	bnz	u2510
 11983  003DE0  0EE8               	movlw	-24
 11984  003DE2  50E3               	movf	plusw1,w,c
 11985  003DE4  E110               	bnz	u2510
 11986  003DE6  0EE9               	movlw	-23
 11987  003DE8  50E3               	movf	plusw1,w,c
 11988  003DEA  E10D               	bnz	u2510
 11989  003DEC  0EEA               	movlw	-22
 11990  003DEE  50E3               	movf	plusw1,w,c
 11991  003DF0  E10A               	bnz	u2510
 11992  003DF2  0EEB               	movlw	-21
 11993  003DF4  50E3               	movf	plusw1,w,c
 11994  003DF6  E107               	bnz	u2510
 11995  003DF8  0EEC               	movlw	-20
 11996  003DFA  50E3               	movf	plusw1,w,c
 11997  003DFC  E104               	bnz	u2510
 11998  003DFE  0EED               	movlw	-19
 11999  003E00  50E3               	movf	plusw1,w,c
 12000  003E02  B4D8               	btfsc	status,2,c
 12001  003E04  D088               	goto	u2540
 12002  003E06                     u2510:
 12003                           
 12004                           ;stkvar	_counter @ sp[(-10)+9]
 12005  003E06  0EFF               	movlw	-1
 12006  003E08  6AE3               	clrf	plusw1,c
 12007  003E0A  D012               	goto	L30
 12008  003E0C                     l5391:
 12009                           
 12010                           ;stkvar	_divisor @ sp[(-10)+-16]
 12011  003E0C  90D8               	bcf	status,0,c
 12012  003E0E  0EE6               	movlw	-26
 12013  003E10  36E3               	rlcf	plusw1,f,c
 12014  003E12  0EE7               	movlw	-25
 12015  003E14  36E3               	rlcf	plusw1,f,c
 12016  003E16  0EE8               	movlw	-24
 12017  003E18  36E3               	rlcf	plusw1,f,c
 12018  003E1A  0EE9               	movlw	-23
 12019  003E1C  36E3               	rlcf	plusw1,f,c
 12020  003E1E  0EEA               	movlw	-22
 12021  003E20  36E3               	rlcf	plusw1,f,c
 12022  003E22  0EEB               	movlw	-21
 12023  003E24  36E3               	rlcf	plusw1,f,c
 12024  003E26  0EEC               	movlw	-20
 12025  003E28  36E3               	rlcf	plusw1,f,c
 12026  003E2A  0EED               	movlw	-19
 12027  003E2C  36E3               	rlcf	plusw1,f,c
 12028                           
 12029                           ;stkvar	_counter @ sp[(-10)+9]
 12030  003E2E  0EFF               	movlw	-1
 12031  003E30                     L30:
 12032  003E30  2AE3               	incf	plusw1,f,c
 12033                           
 12034                           ;stkvar	_divisor @ sp[(-10)+-16]
 12035  003E32  0EED               	movlw	-19
 12036  003E34  AEE3               	btfss	plusw1,7,c
 12037  003E36  D7EA               	goto	l5391
 12038  003E38                     u2520:
 12039                           
 12040                           ;stkvar	_quotient @ sp[(-10)+0]
 12041  003E38  90D8               	bcf	status,0,c
 12042  003E3A  0EF6               	movlw	-10
 12043  003E3C  36E3               	rlcf	plusw1,f,c
 12044  003E3E  0EF7               	movlw	-9
 12045  003E40  36E3               	rlcf	plusw1,f,c
 12046  003E42  0EF8               	movlw	-8
 12047  003E44  36E3               	rlcf	plusw1,f,c
 12048  003E46  0EF9               	movlw	-7
 12049  003E48  36E3               	rlcf	plusw1,f,c
 12050  003E4A  0EFA               	movlw	-6
 12051  003E4C  36E3               	rlcf	plusw1,f,c
 12052  003E4E  0EFB               	movlw	-5
 12053  003E50  36E3               	rlcf	plusw1,f,c
 12054  003E52  0EFC               	movlw	-4
 12055  003E54  36E3               	rlcf	plusw1,f,c
 12056  003E56  0EFD               	movlw	-3
 12057  003E58  36E3               	rlcf	plusw1,f,c
 12058                           
 12059                           ;stkvar	_divisor @ sp[(-10)+-16]
 12060                           ;stkvar	_dividend @ sp[(-10)+-8]
 12061  003E5A  50E1               	movf	fsr1l,w,c
 12062  003E5C  0FEE               	addlw	-18
 12063  003E5E  6ED9               	movwf	fsr2l,c
 12064  003E60  50E2               	movf	fsr1h,w,c
 12065  003E62  6EDA               	movwf	fsr2h,c
 12066  003E64  0EFF               	movlw	255
 12067  003E66  22DA               	addwfc	fsr2h,f,c
 12068  003E68  0EE6               	movlw	-26
 12069  003E6A  50E3               	movf	plusw1,w,c
 12070  003E6C  5CDE               	subwf	postinc2,w,c
 12071  003E6E  0EE7               	movlw	-25
 12072  003E70  50E3               	movf	plusw1,w,c
 12073  003E72  58DE               	subwfb	postinc2,w,c
 12074  003E74  0EE8               	movlw	-24
 12075  003E76  50E3               	movf	plusw1,w,c
 12076  003E78  58DE               	subwfb	postinc2,w,c
 12077  003E7A  0EE9               	movlw	-23
 12078  003E7C  50E3               	movf	plusw1,w,c
 12079  003E7E  58DE               	subwfb	postinc2,w,c
 12080  003E80  0EEA               	movlw	-22
 12081  003E82  50E3               	movf	plusw1,w,c
 12082  003E84  58DE               	subwfb	postinc2,w,c
 12083  003E86  0EEB               	movlw	-21
 12084  003E88  50E3               	movf	plusw1,w,c
 12085  003E8A  58DE               	subwfb	postinc2,w,c
 12086  003E8C  0EEC               	movlw	-20
 12087  003E8E  50E3               	movf	plusw1,w,c
 12088  003E90  58DE               	subwfb	postinc2,w,c
 12089  003E92  0EED               	movlw	-19
 12090  003E94  50E3               	movf	plusw1,w,c
 12091  003E96  58DE               	subwfb	postinc2,w,c
 12092  003E98  A0D8               	btfss	status,0,c
 12093  003E9A  D021               	goto	l5403
 12094                           
 12095                           ;stkvar	_divisor @ sp[(-10)+-16]
 12096                           ;stkvar	_dividend @ sp[(-10)+-8]
 12097  003E9C  50E1               	movf	fsr1l,w,c
 12098  003E9E  0FEE               	addlw	-18
 12099  003EA0  6ED9               	movwf	fsr2l,c
 12100  003EA2  50E2               	movf	fsr1h,w,c
 12101  003EA4  6EDA               	movwf	fsr2h,c
 12102  003EA6  0EFF               	movlw	255
 12103  003EA8  22DA               	addwfc	fsr2h,f,c
 12104  003EAA  0EE6               	movlw	-26
 12105  003EAC  50E3               	movf	plusw1,w,c
 12106  003EAE  5EDE               	subwf	postinc2,f,c
 12107  003EB0  0EE7               	movlw	-25
 12108  003EB2  50E3               	movf	plusw1,w,c
 12109  003EB4  5ADE               	subwfb	postinc2,f,c
 12110  003EB6  0EE8               	movlw	-24
 12111  003EB8  50E3               	movf	plusw1,w,c
 12112  003EBA  5ADE               	subwfb	postinc2,f,c
 12113  003EBC  0EE9               	movlw	-23
 12114  003EBE  50E3               	movf	plusw1,w,c
 12115  003EC0  5ADE               	subwfb	postinc2,f,c
 12116  003EC2  0EEA               	movlw	-22
 12117  003EC4  50E3               	movf	plusw1,w,c
 12118  003EC6  5ADE               	subwfb	postinc2,f,c
 12119  003EC8  0EEB               	movlw	-21
 12120  003ECA  50E3               	movf	plusw1,w,c
 12121  003ECC  5ADE               	subwfb	postinc2,f,c
 12122  003ECE  0EEC               	movlw	-20
 12123  003ED0  50E3               	movf	plusw1,w,c
 12124  003ED2  5ADE               	subwfb	postinc2,f,c
 12125  003ED4  0EED               	movlw	-19
 12126  003ED6  50E3               	movf	plusw1,w,c
 12127  003ED8  5ADE               	subwfb	postinc2,f,c
 12128                           
 12129                           ;stkvar	_quotient @ sp[(-10)+0]
 12130  003EDA  0EF6               	movlw	-10
 12131  003EDC  80E3               	bsf	plusw1,0,c
 12132  003EDE                     l5403:
 12133                           
 12134                           ;stkvar	_divisor @ sp[(-10)+-16]
 12135  003EDE  90D8               	bcf	status,0,c
 12136  003EE0  0EED               	movlw	-19
 12137  003EE2  32E3               	rrcf	plusw1,f,c
 12138  003EE4  0EEC               	movlw	-20
 12139  003EE6  32E3               	rrcf	plusw1,f,c
 12140  003EE8  0EEB               	movlw	-21
 12141  003EEA  32E3               	rrcf	plusw1,f,c
 12142  003EEC  0EEA               	movlw	-22
 12143  003EEE  32E3               	rrcf	plusw1,f,c
 12144  003EF0  0EE9               	movlw	-23
 12145  003EF2  32E3               	rrcf	plusw1,f,c
 12146  003EF4  0EE8               	movlw	-24
 12147  003EF6  32E3               	rrcf	plusw1,f,c
 12148  003EF8  0EE7               	movlw	-25
 12149  003EFA  32E3               	rrcf	plusw1,f,c
 12150  003EFC  0EE6               	movlw	-26
 12151  003EFE  32E3               	rrcf	plusw1,f,c
 12152                           
 12153                           ;stkvar	_counter @ sp[(-10)+9]
 12154  003F00  0EFF               	movlw	-1
 12155  003F02  50E3               	movf	plusw1,w,c
 12156  003F04  6E3D               	movwf	btemp,c
 12157  003F06  0E01               	movlw	1
 12158  003F08  5E3D               	subwf	btemp,f,c
 12159  003F0A  0EFF               	movlw	-1
 12160  003F0C  0060  F0F7  FFE3   	movff	btemp,plusw1
 12161  003F12  A4D8               	btfss	status,2,c
 12162  003F14  D791               	goto	u2520
 12163  003F16                     u2540:
 12164                           
 12165                           ;stkvar	_sign @ sp[(-10)+8]
 12166  003F16  0EFE               	movlw	-2
 12167  003F18  50E3               	movf	plusw1,w,c
 12168  003F1A  B4D8               	btfsc	status,2,c
 12169  003F1C  D025               	goto	u2560
 12170                           
 12171                           ;stkvar	_quotient @ sp[(-10)+0]
 12172                           ;stkvar	_quotient @ sp[(-10)+0]
 12173  003F1E  0EF6               	movlw	-10
 12174  003F20  6CE3               	negf	plusw1,c
 12175  003F22  0EF7               	movlw	-9
 12176  003F24  1EE3               	comf	plusw1,f,c
 12177  003F26  0EF8               	movlw	-8
 12178  003F28  1EE3               	comf	plusw1,f,c
 12179  003F2A  0EF9               	movlw	-7
 12180  003F2C  1EE3               	comf	plusw1,f,c
 12181  003F2E  0EFA               	movlw	-6
 12182  003F30  1EE3               	comf	plusw1,f,c
 12183  003F32  0EFB               	movlw	-5
 12184  003F34  1EE3               	comf	plusw1,f,c
 12185  003F36  0EFC               	movlw	-4
 12186  003F38  1EE3               	comf	plusw1,f,c
 12187  003F3A  0EFD               	movlw	-3
 12188  003F3C  1EE3               	comf	plusw1,f,c
 12189  003F3E  E314               	bnc	u2560
 12190  003F40  0EF7               	movlw	-9
 12191  003F42  2AE3               	incf	plusw1,f,c
 12192  003F44  E311               	bnc	u2560
 12193  003F46  0EF8               	movlw	-8
 12194  003F48  2AE3               	incf	plusw1,f,c
 12195  003F4A  E30E               	bnc	u2560
 12196  003F4C  0EF9               	movlw	-7
 12197  003F4E  2AE3               	incf	plusw1,f,c
 12198  003F50  E30B               	bnc	u2560
 12199  003F52  0EFA               	movlw	-6
 12200  003F54  2AE3               	incf	plusw1,f,c
 12201  003F56  E308               	bnc	u2560
 12202  003F58  0EFB               	movlw	-5
 12203  003F5A  2AE3               	incf	plusw1,f,c
 12204  003F5C  E305               	bnc	u2560
 12205  003F5E  0EFC               	movlw	-4
 12206  003F60  2AE3               	incf	plusw1,f,c
 12207  003F62  E302               	bnc	u2560
 12208  003F64  0EFD               	movlw	-3
 12209  003F66  2AE3               	incf	plusw1,f,c
 12210  003F68                     u2560:
 12211                           
 12212                           ;stkvar	_quotient @ sp[(-10)+0]
 12213  003F68  0EF6               	movlw	246
 12214  003F6A  24E1               	addwf	fsr1l,w,c
 12215  003F6C  6ED9               	movwf	fsr2l,c
 12216  003F6E  0EFF               	movlw	255
 12217  003F70  20E2               	addwfc	fsr1h,w,c
 12218  003F72  6EDA               	movwf	fsr2h,c
 12219                           
 12220                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 12221  003F74  0E08               	movlw	8
 12222  003F76  6E3D               	movwf	btemp,c
 12223  003F78  0EEE               	movlw	-18
 12224  003F7A                     us257999:
 12225  003F7A  006F FF7B FFE3     	movff	postinc2,plusw1
 12226  003F80  28E8               	incf	wreg,w,c
 12227  003F82  2E3D               	decfsz	btemp,f,c
 12228  003F84  D7FA               	bra	us257999
 12229                           
 12230                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 12231  003F86  0EF6               	movlw	246
 12232  003F88  26E1               	addwf	fsr1l,f,c
 12233  003F8A  0EFF               	movlw	255
 12234  003F8C  22E2               	addwfc	fsr1h,f,c
 12235  003F8E  0012               	return		;funcret
 12236  003F90                     __end_of___aodiv:
 12237                           	opt callstack 0
 12238                           
 12239 ;; *************** function _ctoa *****************
 12240 ;; Defined at:
 12241 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12242 ;; Parameters:    Size  Location     Type
 12243 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12244 ;;		 -> f(5), NULL(0), 
 12245 ;;  c               1  [STACK] unsigned char 
 12246 ;; Auto vars:     Size  Location     Type
 12247 ;;  w               2  [STACK] int 
 12248 ;;  l               2    0        int 
 12249 ;; Return value:  Size  Location     Type
 12250 ;;                  2  [STACK] int 
 12251 ;; Registers used:
 12252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12253 ;; Tracked objects:
 12254 ;;		On entry : 0/0
 12255 ;;		On exit  : 0/0
 12256 ;;		Unchanged: 0/0
 12257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12262 ;;Total ram usage:        0 bytes
 12263 ;; Hardware stack levels used:    1
 12264 ;; Hardware stack levels required when called:    8
 12265 ;; This function calls:
 12266 ;;		_pad
 12267 ;; This function is called by:
 12268 ;;		_vfpfcnvrt
 12269 ;; This function uses a reentrant model
 12270 ;;
 12271                           
 12272                           	psect	text48
 12273  0056F8                     __ptext48:
 12274                           	opt callstack 0
 12275  0056F8                     _ctoa:
 12276                           	opt callstack 0
 12277                           
 12278                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12279  0056F8  52E6               	movf	postinc1,f,c
 12280  0056FA  52E6               	movf	postinc1,f,c
 12281                           
 12282                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 12283                           
 12284                           ;incstack = 0
 12285  0056FC  501D               	movf	_width,w,c
 12286  0056FE  101E               	iorwf	_width+1,w,c
 12287  005700  A4D8               	btfss	status,2,c
 12288  005702  D009               	goto	l8129
 12289                           
 12290                           ;stkvar	_w @ sp[(-2)+0]
 12291  005704  0EFE               	movlw	-2
 12292  005706  0060  F077  FFE3   	movff	_width,plusw1
 12293  00570C  0EFF               	movlw	-1
 12294  00570E  0060  F07B  FFE3   	movff	_width+1,plusw1
 12295  005714  D016               	goto	l8131
 12296  005716                     l8129:
 12297  005716  0EFF               	movlw	255
 12298  005718  6E47               	movwf	btemp+10,c
 12299  00571A  0EFF               	movlw	255
 12300  00571C  6E48               	movwf	btemp+11,c
 12301  00571E  0060  F074  F045   	movff	_width,btemp+8
 12302  005724  0060  F078  F046   	movff	_width+1,btemp+9
 12303  00572A  5047               	movf	btemp+10,w,c
 12304  00572C  2645               	addwf	btemp+8,f,c
 12305  00572E  5048               	movf	btemp+11,w,c
 12306  005730  2246               	addwfc	btemp+9,f,c
 12307                           
 12308                           ;stkvar	_w @ sp[(-2)+0]
 12309  005732  0EFE               	movlw	-2
 12310  005734  0060  F117  FFE3   	movff	btemp+8,plusw1
 12311  00573A  0EFF               	movlw	-1
 12312  00573C  0060  F11B  FFE3   	movff	btemp+9,plusw1
 12313  005742                     l8131:
 12314                           
 12315                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 12316                           ;stkvar	_c @ sp[(-2)+-3]
 12317  005742  0EFB               	movlw	-5
 12318  005744  006F FF8C  F1D0    	movff	plusw1,_dbuf
 12319                           
 12320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 12321  00574A  0101               	movlb	1	; () banked
 12322  00574C  6BD1               	clrf	(_dbuf+1)& (0+255),b
 12323                           
 12324                           ; BSR set to: 1
 12325                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 12326                           ;stkvar	_w @ sp[(-2)+0]
 12327  00574E  0EFE               	movlw	-2
 12328  005750  006F FF8F FFE6     	movff	plusw1,postinc1
 12329  005756  006F FF8F FFE6     	movff	plusw1,postinc1
 12330  00575C  0ED0               	movlw	low _dbuf
 12331  00575E  6EE6               	movwf	postinc1,c
 12332  005760  0E01               	movlw	high _dbuf
 12333  005762  6EE6               	movwf	postinc1,c
 12334                           
 12335                           ;stkvar	_fp @ sp[(-6)+-2]
 12336  005764  0EF8               	movlw	-8
 12337  005766  006F FF8F FFE6     	movff	plusw1,postinc1
 12338  00576C  006F FF8F FFE6     	movff	plusw1,postinc1
 12339  005772  EC46  F025         	call	_pad	;wreg free
 12340                           
 12341                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 12342  005776  0EFB               	movlw	251
 12343  005778  26E1               	addwf	fsr1l,f,c
 12344  00577A  0EFF               	movlw	255
 12345  00577C  22E2               	addwfc	fsr1h,f,c
 12346  00577E  0012               	return		;funcret
 12347  005780                     __end_of_ctoa:
 12348                           	opt callstack 0
 12349                           
 12350 ;; *************** function _pad *****************
 12351 ;; Defined at:
 12352 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12353 ;; Parameters:    Size  Location     Type
 12354 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12355 ;;		 -> f(5), NULL(0), 
 12356 ;;  buf             2  [STACK] PTR unsigned char 
 12357 ;;		 -> dbuf(32), 
 12358 ;;  p               2  [STACK] int 
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;  w               2  [STACK] int 
 12361 ;;  i               2  [STACK] int 
 12362 ;; Return value:  Size  Location     Type
 12363 ;;                  2  [STACK] int 
 12364 ;; Registers used:
 12365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12366 ;; Tracked objects:
 12367 ;;		On entry : 0/1
 12368 ;;		On exit  : 0/0
 12369 ;;		Unchanged: 0/0
 12370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12375 ;;Total ram usage:        0 bytes
 12376 ;; Hardware stack levels used:    1
 12377 ;; Hardware stack levels required when called:    7
 12378 ;; This function calls:
 12379 ;;		_fputc
 12380 ;;		_fputs
 12381 ;;		_strlen
 12382 ;; This function is called by:
 12383 ;;		_ctoa
 12384 ;;		_dtoa
 12385 ;; This function uses a reentrant model
 12386 ;;
 12387                           
 12388                           	psect	text49
 12389  004A8C                     __ptext49:
 12390                           	opt callstack 0
 12391  004A8C                     _pad:
 12392                           	opt callstack 0
 12393                           
 12394                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12395  004A8C  52E6               	movf	postinc1,f,c
 12396  004A8E  52E6               	movf	postinc1,f,c
 12397  004A90  52E6               	movf	postinc1,f,c
 12398  004A92  52E6               	movf	postinc1,f,c
 12399                           
 12400                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 12401                           
 12402                           ;incstack = 0
 12403  004A94  A021               	btfss	_flags,0,c
 12404  004A96  D010               	goto	l8107
 12405                           
 12406                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 12407                           ;stkvar	_fp @ sp[(-4)+-2]
 12408  004A98  0EFA               	movlw	-6
 12409  004A9A  006F FF8F FFE6     	movff	plusw1,postinc1
 12410  004AA0  006F FF8F FFE6     	movff	plusw1,postinc1
 12411                           
 12412                           ;stkvar	_buf @ sp[(-6)+-4]
 12413  004AA6  0EF6               	movlw	-10
 12414  004AA8  006F FF8F FFE6     	movff	plusw1,postinc1
 12415  004AAE  006F FF8F FFE6     	movff	plusw1,postinc1
 12416  004AB4  ECE7  F02A         	call	_fputs	;wreg free
 12417  004AB8                     l8107:
 12418                           
 12419                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 12420                           ;stkvar	_p @ sp[(-4)+-6]
 12421  004AB8  0EF7               	movlw	-9
 12422  004ABA  BEE3               	btfsc	plusw1,7,c
 12423  004ABC  D011               	goto	l8111
 12424                           
 12425                           ;stkvar	_p @ sp[(-4)+-6]
 12426                           ;stkvar	_w @ sp[(-4)+0]
 12427  004ABE  0EF6               	movlw	-10
 12428  004AC0  006F FF8C  F03D    	movff	plusw1,btemp
 12429  004AC6  0EFC               	movlw	-4
 12430  004AC8  0060  F0F7  FFE3   	movff	btemp,plusw1
 12431  004ACE  0EF7               	movlw	-9
 12432  004AD0  006F FF8C  F03D    	movff	plusw1,btemp
 12433  004AD6  0EFD               	movlw	-3
 12434  004AD8  0060  F0F7  FFE3   	movff	btemp,plusw1
 12435  004ADE  D004               	goto	l1845
 12436  004AE0                     l8111:
 12437                           
 12438                           ;stkvar	_w @ sp[(-4)+0]
 12439  004AE0  0EFC               	movlw	-4
 12440  004AE2  6AE3               	clrf	plusw1,c
 12441  004AE4  0EFD               	movlw	-3
 12442  004AE6  6AE3               	clrf	plusw1,c
 12443  004AE8                     l1845:
 12444                           
 12445                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 12446                           ;stkvar	_i @ sp[(-4)+2]
 12447  004AE8  0EFE               	movlw	-2
 12448  004AEA  6AE3               	clrf	plusw1,c
 12449  004AEC  0EFF               	movlw	-1
 12450  004AEE  6AE3               	clrf	plusw1,c
 12451                           
 12452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 12453  004AF0  D01E               	goto	l8117
 12454  004AF2                     l8113:
 12455                           
 12456                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 12457                           ;stkvar	_fp @ sp[(-4)+-2]
 12458  004AF2  0EFA               	movlw	-6
 12459  004AF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12460  004AFA  006F FF8F FFE6     	movff	plusw1,postinc1
 12461  004B00  0E20               	movlw	32
 12462  004B02  6EE6               	movwf	postinc1,c
 12463  004B04  0E00               	movlw	0
 12464  004B06  6EE6               	movwf	postinc1,c
 12465  004B08  ECD0  F025         	call	_fputc	;wreg free
 12466                           
 12467                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 12468                           ;stkvar	_i @ sp[(-4)+2]
 12469  004B0C  0EFE               	movlw	-2
 12470  004B0E  50E3               	movf	plusw1,w,c
 12471  004B10  0F01               	addlw	1
 12472  004B12  6E3D               	movwf	btemp,c
 12473  004B14  0EFE               	movlw	-2
 12474  004B16  0060  F0F7  FFE3   	movff	btemp,plusw1
 12475  004B1C  6A3D               	clrf	btemp,c
 12476  004B1E  0EFF               	movlw	-1
 12477  004B20  50E3               	movf	plusw1,w,c
 12478  004B22  203D               	addwfc	btemp,w,c
 12479  004B24  6E3D               	movwf	btemp,c
 12480  004B26  0EFF               	movlw	-1
 12481  004B28  0060  F0F7  FFE3   	movff	btemp,plusw1
 12482  004B2E                     l8117:
 12483                           
 12484                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 12485                           ;stkvar	_w @ sp[(-4)+0]
 12486                           ;stkvar	_i @ sp[(-4)+2]
 12487  004B2E  50E1               	movf	fsr1l,w,c
 12488  004B30  0FFE               	addlw	-2
 12489  004B32  6ED9               	movwf	fsr2l,c
 12490  004B34  50E2               	movf	fsr1h,w,c
 12491  004B36  6EDA               	movwf	fsr2h,c
 12492  004B38  0EFF               	movlw	255
 12493  004B3A  22DA               	addwfc	fsr2h,f,c
 12494  004B3C  0EFC               	movlw	-4
 12495  004B3E  50E3               	movf	plusw1,w,c
 12496  004B40  5CDE               	subwf	postinc2,w,c
 12497  004B42  50DE               	movf	postinc2,w,c
 12498  004B44  0A80               	xorlw	128
 12499  004B46  6E3D               	movwf	btemp,c
 12500  004B48  0EFD               	movlw	-3
 12501  004B4A  50E3               	movf	plusw1,w,c
 12502  004B4C  0A80               	xorlw	128
 12503  004B4E  583D               	subwfb	btemp,w,c
 12504  004B50  A0D8               	btfss	status,0,c
 12505  004B52  D7CF               	goto	l8113
 12506                           
 12507                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 12508  004B54  B021               	btfsc	_flags,0,c
 12509  004B56  D010               	goto	l8121
 12510                           
 12511                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 12512                           ;stkvar	_fp @ sp[(-4)+-2]
 12513  004B58  0EFA               	movlw	-6
 12514  004B5A  006F FF8F FFE6     	movff	plusw1,postinc1
 12515  004B60  006F FF8F FFE6     	movff	plusw1,postinc1
 12516                           
 12517                           ;stkvar	_buf @ sp[(-6)+-4]
 12518  004B66  0EF6               	movlw	-10
 12519  004B68  006F FF8F FFE6     	movff	plusw1,postinc1
 12520  004B6E  006F FF8F FFE6     	movff	plusw1,postinc1
 12521  004B74  ECE7  F02A         	call	_fputs	;wreg free
 12522  004B78                     l8121:
 12523                           
 12524                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 12525                           ;stkvar	_w @ sp[(-4)+0]
 12526                           ;stkvar	_buf @ sp[(-4)+-4]
 12527  004B78  0EF8               	movlw	-8
 12528  004B7A  006F FF8F FFE6     	movff	plusw1,postinc1
 12529  004B80  006F FF8F FFE6     	movff	plusw1,postinc1
 12530  004B86  ECAC  F029         	call	_strlen	;wreg free
 12531  004B8A  0EFC               	movlw	-4
 12532  004B8C  50E3               	movf	plusw1,w,c
 12533  004B8E  263D               	addwf	btemp,f,c
 12534  004B90  0EFD               	movlw	-3
 12535  004B92  50E3               	movf	plusw1,w,c
 12536  004B94  223E               	addwfc	btemp+1,f,c
 12537                           
 12538                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 12539  004B96  0EF6               	movlw	246
 12540  004B98  26E1               	addwf	fsr1l,f,c
 12541  004B9A  0EFF               	movlw	255
 12542  004B9C  22E2               	addwfc	fsr1h,f,c
 12543  004B9E  0012               	return		;funcret
 12544  004BA0                     __end_of_pad:
 12545                           	opt callstack 0
 12546                           
 12547 ;; *************** function _strlen *****************
 12548 ;; Defined at:
 12549 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 12550 ;; Parameters:    Size  Location     Type
 12551 ;;  s               2  [STACK] PTR const unsigned char 
 12552 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 12553 ;;		 -> STR_3(6), V(98), 
 12554 ;; Auto vars:     Size  Location     Type
 12555 ;;  a               2  [STACK] PTR const unsigned char 
 12556 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 12557 ;;		 -> STR_3(6), V(98), 
 12558 ;; Return value:  Size  Location     Type
 12559 ;;                  2  [STACK] unsigned int 
 12560 ;; Registers used:
 12561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 12562 ;; Tracked objects:
 12563 ;;		On entry : 0/0
 12564 ;;		On exit  : 0/0
 12565 ;;		Unchanged: 0/0
 12566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12571 ;;Total ram usage:        0 bytes
 12572 ;; Hardware stack levels used:    1
 12573 ;; Hardware stack levels required when called:    3
 12574 ;; This function calls:
 12575 ;;		Nothing
 12576 ;; This function is called by:
 12577 ;;		_eaDogM_WriteString
 12578 ;;		_pad
 12579 ;;		_stoa
 12580 ;; This function uses a reentrant model
 12581 ;;
 12582                           
 12583                           	psect	text50
 12584  005358                     __ptext50:
 12585                           	opt callstack 0
 12586  005358                     _strlen:
 12587                           	opt callstack 0
 12588                           
 12589                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12590  005358  52E6               	movf	postinc1,f,c
 12591  00535A  52E6               	movf	postinc1,f,c
 12592                           
 12593                           ;stkvar	_s @ sp[(-2)+-2]
 12594                           
 12595                           ;incstack = 0
 12596  00535C  0EFC               	movlw	-4
 12597  00535E  006F FF8C  F047    	movff	plusw1,btemp+10
 12598  005364  0EFD               	movlw	-3
 12599  005366  006F FF8C  F048    	movff	plusw1,btemp+11
 12600                           
 12601                           ;stkvar	_a @ sp[(-2)+0]
 12602  00536C  0EFF               	movlw	-1
 12603  00536E  0060  F123  FFE3   	movff	btemp+11,plusw1
 12604  005374  0EFE               	movlw	-2
 12605  005376  0060  F11F  FFE3   	movff	btemp+10,plusw1
 12606  00537C  D011               	goto	l8089
 12607  00537E                     l8087:
 12608                           
 12609                           ;stkvar	_s @ sp[(-2)+-2]
 12610  00537E  0EFC               	movlw	-4
 12611  005380  50E3               	movf	plusw1,w,c
 12612  005382  0F01               	addlw	1
 12613  005384  6E3D               	movwf	btemp,c
 12614  005386  0EFC               	movlw	-4
 12615  005388  0060  F0F7  FFE3   	movff	btemp,plusw1
 12616  00538E  6A3D               	clrf	btemp,c
 12617  005390  0EFD               	movlw	-3
 12618  005392  50E3               	movf	plusw1,w,c
 12619  005394  203D               	addwfc	btemp,w,c
 12620  005396  6E3D               	movwf	btemp,c
 12621  005398  0EFD               	movlw	-3
 12622  00539A  0060  F0F7  FFE3   	movff	btemp,plusw1
 12623  0053A0                     l8089:
 12624                           
 12625                           ;stkvar	_s @ sp[(-2)+-2]
 12626  0053A0  0EFC               	movlw	-4
 12627  0053A2  006F FF8F FFF6     	movff	plusw1,tblptrl
 12628  0053A8  0EFD               	movlw	-3
 12629  0053AA  006F FF8F FFF7     	movff	plusw1,tblptrh
 12630  0053B0  0E00               	movlw	low (__smallconst shr (0+16))
 12631  0053B2  6EF8               	movwf	tblptru,c
 12632  0053B4  0E1F               	movlw	(high __ramtop+-1)
 12633  0053B6  64F7               	cpfsgt	tblptrh,c
 12634  0053B8  D003               	bra	u4647
 12635  0053BA  0008               	tblrd		*
 12636  0053BC  50F5               	movf	tablat,w,c
 12637  0053BE  D007               	bra	u4640
 12638  0053C0                     u4647:
 12639  0053C0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12640  0053C6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12641  0053CC  50EF               	movf	indf0,w,c
 12642  0053CE                     u4640:
 12643  0053CE  0900               	iorlw	0
 12644  0053D0  A4D8               	btfss	status,2,c
 12645  0053D2  D7D5               	goto	l8087
 12646                           
 12647                           ;stkvar	_a @ sp[(-2)+0]
 12648                           ;stkvar	_s @ sp[(-2)+-2]
 12649  0053D4  0EFC               	movlw	-4
 12650  0053D6  006F FF8C  F03D    	movff	plusw1,btemp
 12651  0053DC  0EFD               	movlw	-3
 12652  0053DE  006F FF8C  F03E    	movff	plusw1,btemp+1
 12653  0053E4  0EFE               	movlw	-2
 12654  0053E6  50E3               	movf	plusw1,w,c
 12655  0053E8  5E3D               	subwf	btemp,f,c
 12656  0053EA  0EFF               	movlw	-1
 12657  0053EC  50E3               	movf	plusw1,w,c
 12658  0053EE  5A3E               	subwfb	btemp+1,f,c
 12659                           
 12660                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 12661  0053F0  52E5               	movf	postdec1,f,c
 12662  0053F2  52E5               	movf	postdec1,f,c
 12663  0053F4  52E5               	movf	postdec1,f,c
 12664  0053F6  52E5               	movf	postdec1,f,c
 12665  0053F8  0012               	return		;funcret
 12666  0053FA                     __end_of_strlen:
 12667                           	opt callstack 0
 12668                           
 12669 ;; *************** function _fputs *****************
 12670 ;; Defined at:
 12671 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 12672 ;; Parameters:    Size  Location     Type
 12673 ;;  s               2  [STACK] PTR const unsigned char 
 12674 ;;		 -> dbuf(32), 
 12675 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12676 ;;		 -> f(5), NULL(0), 
 12677 ;; Auto vars:     Size  Location     Type
 12678 ;;  i               2  [STACK] int 
 12679 ;;  c               1  [STACK] unsigned char 
 12680 ;; Return value:  Size  Location     Type
 12681 ;;                  2  [STACK] int 
 12682 ;; Registers used:
 12683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 12684 ;; Tracked objects:
 12685 ;;		On entry : 0/1
 12686 ;;		On exit  : 0/0
 12687 ;;		Unchanged: 0/0
 12688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12693 ;;Total ram usage:        0 bytes
 12694 ;; Hardware stack levels used:    1
 12695 ;; Hardware stack levels required when called:    6
 12696 ;; This function calls:
 12697 ;;		_fputc
 12698 ;; This function is called by:
 12699 ;;		_pad
 12700 ;; This function uses a reentrant model
 12701 ;;
 12702                           
 12703                           	psect	text51
 12704  0055CE                     __ptext51:
 12705                           	opt callstack 0
 12706  0055CE                     _fputs:
 12707                           	opt callstack 0
 12708                           
 12709                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12710  0055CE  52E6               	movf	postinc1,f,c
 12711  0055D0  52E6               	movf	postinc1,f,c
 12712  0055D2  52E6               	movf	postinc1,f,c
 12713                           
 12714                           ;stkvar	_i @ sp[(-3)+0]
 12715                           
 12716                           ;incstack = 0
 12717  0055D4  0EFD               	movlw	-3
 12718  0055D6  6AE3               	clrf	plusw1,c
 12719  0055D8  0EFE               	movlw	-2
 12720  0055DA  6AE3               	clrf	plusw1,c
 12721  0055DC  D01F               	goto	l8101
 12722  0055DE                     l8097:
 12723                           
 12724                           ;stkvar	_fp @ sp[(-3)+-4]
 12725  0055DE  0EF9               	movlw	-7
 12726  0055E0  006F FF8F FFE6     	movff	plusw1,postinc1
 12727  0055E6  006F FF8F FFE6     	movff	plusw1,postinc1
 12728                           
 12729                           ;stkvar	_c @ sp[(-5)+2]
 12730  0055EC  0EFD               	movlw	-3
 12731  0055EE  50E3               	movf	plusw1,w,c
 12732  0055F0  6EE6               	movwf	postinc1,c
 12733  0055F2  0E00               	movlw	0
 12734  0055F4  6EE6               	movwf	postinc1,c
 12735  0055F6  ECD0  F025         	call	_fputc	;wreg free
 12736                           
 12737                           ;stkvar	_i @ sp[(-3)+0]
 12738  0055FA  0EFD               	movlw	-3
 12739  0055FC  50E3               	movf	plusw1,w,c
 12740  0055FE  0F01               	addlw	1
 12741  005600  6E3D               	movwf	btemp,c
 12742  005602  0EFD               	movlw	-3
 12743  005604  0060  F0F7  FFE3   	movff	btemp,plusw1
 12744  00560A  6A3D               	clrf	btemp,c
 12745  00560C  0EFE               	movlw	-2
 12746  00560E  50E3               	movf	plusw1,w,c
 12747  005610  203D               	addwfc	btemp,w,c
 12748  005612  6E3D               	movwf	btemp,c
 12749  005614  0EFE               	movlw	-2
 12750  005616  0060  F0F7  FFE3   	movff	btemp,plusw1
 12751  00561C                     l8101:
 12752                           
 12753                           ;stkvar	_i @ sp[(-3)+0]
 12754  00561C  0EFD               	movlw	-3
 12755  00561E  006F FF8C  F047    	movff	plusw1,btemp+10
 12756  005624  0EFE               	movlw	-2
 12757  005626  006F FF8C  F048    	movff	plusw1,btemp+11
 12758                           
 12759                           ;stkvar	_s @ sp[(-3)+-2]
 12760  00562C  0EFB               	movlw	-5
 12761  00562E  006F FF8C  F045    	movff	plusw1,btemp+8
 12762  005634  0EFC               	movlw	-4
 12763  005636  006F FF8C  F046    	movff	plusw1,btemp+9
 12764  00563C  5047               	movf	btemp+10,w,c
 12765  00563E  2445               	addwf	btemp+8,w,c
 12766  005640  6ED9               	movwf	fsr2l,c
 12767  005642  5048               	movf	btemp+11,w,c
 12768  005644  2046               	addwfc	btemp+9,w,c
 12769  005646  6EDA               	movwf	fsr2h,c
 12770  005648  50DF               	movf	indf2,w,c
 12771  00564A  6E48               	movwf	btemp+11,c
 12772                           
 12773                           ;stkvar	_c @ sp[(-3)+2]
 12774  00564C  0EFF               	movlw	-1
 12775  00564E  0060  F123  FFE3   	movff	btemp+11,plusw1
 12776  005654  0EFF               	movlw	-1
 12777  005656  50E3               	movf	plusw1,w,c
 12778  005658  A4D8               	btfss	status,2,c
 12779  00565A  D7C1               	goto	l8097
 12780                           
 12781                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12782  00565C  0EF9               	movlw	249
 12783  00565E  26E1               	addwf	fsr1l,f,c
 12784  005660  0EFF               	movlw	255
 12785  005662  22E2               	addwfc	fsr1h,f,c
 12786  005664  0012               	return		;funcret
 12787  005666                     __end_of_fputs:
 12788                           	opt callstack 0
 12789                           
 12790 ;; *************** function _fputc *****************
 12791 ;; Defined at:
 12792 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 12793 ;; Parameters:    Size  Location     Type
 12794 ;;  c               2  [STACK] int 
 12795 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12796 ;;		 -> f(5), NULL(0), 
 12797 ;; Auto vars:     Size  Location     Type
 12798 ;;		None
 12799 ;; Return value:  Size  Location     Type
 12800 ;;                  2  [STACK] int 
 12801 ;; Registers used:
 12802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 12803 ;; Tracked objects:
 12804 ;;		On entry : 0/0
 12805 ;;		On exit  : 0/0
 12806 ;;		Unchanged: 0/0
 12807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12812 ;;Total ram usage:        0 bytes
 12813 ;; Hardware stack levels used:    1
 12814 ;; Hardware stack levels required when called:    5
 12815 ;; This function calls:
 12816 ;;		_putch
 12817 ;; This function is called by:
 12818 ;;		_pad
 12819 ;;		_stoa
 12820 ;;		_vfpfcnvrt
 12821 ;;		_fputs
 12822 ;; This function uses a reentrant model
 12823 ;;
 12824                           
 12825                           	psect	text52
 12826  004BA0                     __ptext52:
 12827                           	opt callstack 0
 12828  004BA0                     _fputc:
 12829                           	opt callstack 21
 12830                           
 12831                           ;stkvar	_fp @ sp[(0)+-4]
 12832                           
 12833                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12834                           ;incstack = 0
 12835  004BA0  0EFC               	movlw	-4
 12836  004BA2  006F FF8C  F03D    	movff	plusw1,btemp
 12837  004BA8  0EFD               	movlw	-3
 12838  004BAA  50E3               	movf	plusw1,w,c
 12839  004BAC  103D               	iorwf	btemp,w,c
 12840  004BAE  B4D8               	btfsc	status,2,c
 12841  004BB0  D009               	goto	u4610
 12842                           
 12843                           ;stkvar	_fp @ sp[(0)+-4]
 12844  004BB2  0EFC               	movlw	-4
 12845  004BB4  006F FF8C  F03D    	movff	plusw1,btemp
 12846  004BBA  0EFD               	movlw	-3
 12847  004BBC  50E3               	movf	plusw1,w,c
 12848  004BBE  103D               	iorwf	btemp,w,c
 12849  004BC0  A4D8               	btfss	status,2,c
 12850  004BC2  D006               	goto	l8077
 12851  004BC4                     u4610:
 12852                           
 12853                           ;stkvar	_c @ sp[(0)+-2]
 12854  004BC4  0EFE               	movlw	-2
 12855  004BC6  50E3               	movf	plusw1,w,c
 12856  004BC8  6EE6               	movwf	postinc1,c
 12857  004BCA  EC1A  F032         	call	_putch	;wreg free
 12858  004BCE  D069               	goto	l2628
 12859  004BD0                     l8077:
 12860                           
 12861                           ;stkvar	_fp @ sp[(0)+-4]
 12862  004BD0  0EFC               	movlw	-4
 12863  004BD2  006F FF8C  F047    	movff	plusw1,btemp+10
 12864  004BD8  0EFD               	movlw	-3
 12865  004BDA  006F FF8C  F048    	movff	plusw1,btemp+11
 12866  004BE0  0E03               	movlw	3
 12867  004BE2  2447               	addwf	btemp+10,w,c
 12868  004BE4  6ED9               	movwf	fsr2l,c
 12869  004BE6  0E00               	movlw	0
 12870  004BE8  2048               	addwfc	btemp+11,w,c
 12871  004BEA  6EDA               	movwf	fsr2h,c
 12872  004BEC  50DE               	movf	postinc2,w,c
 12873  004BEE  10DE               	iorwf	postinc2,w,c
 12874  004BF0  B4D8               	btfsc	status,2,c
 12875  004BF2  D026               	goto	u4630
 12876                           
 12877                           ;stkvar	_fp @ sp[(0)+-4]
 12878  004BF4  0EFC               	movlw	-4
 12879  004BF6  006F FF8C  F047    	movff	plusw1,btemp+10
 12880  004BFC  0EFD               	movlw	-3
 12881  004BFE  006F FF8C  F048    	movff	plusw1,btemp+11
 12882  004C04  0E03               	movlw	3
 12883  004C06  2447               	addwf	btemp+10,w,c
 12884  004C08  6ED9               	movwf	fsr2l,c
 12885  004C0A  0E00               	movlw	0
 12886  004C0C  2048               	addwfc	btemp+11,w,c
 12887  004C0E  6EDA               	movwf	fsr2h,c
 12888                           
 12889                           ;stkvar	_fp @ sp[(0)+-4]
 12890  004C10  0EFC               	movlw	-4
 12891  004C12  006F FF8C  F047    	movff	plusw1,btemp+10
 12892  004C18  0EFD               	movlw	-3
 12893  004C1A  006F FF8C  F048    	movff	plusw1,btemp+11
 12894  004C20  0E01               	movlw	1
 12895  004C22  2447               	addwf	btemp+10,w,c
 12896  004C24  6EE9               	movwf	fsr0l,c
 12897  004C26  0E00               	movlw	0
 12898  004C28  2048               	addwfc	btemp+11,w,c
 12899  004C2A  6EEA               	movwf	fsr0h,c
 12900  004C2C  50DE               	movf	postinc2,w,c
 12901  004C2E  5CEE               	subwf	postinc0,w,c
 12902  004C30  50EE               	movf	postinc0,w,c
 12903  004C32  0A80               	xorlw	128
 12904  004C34  6E3D               	movwf	btemp,c
 12905  004C36  50DE               	movf	postinc2,w,c
 12906  004C38  0A80               	xorlw	128
 12907  004C3A  583D               	subwfb	btemp,w,c
 12908  004C3C  B0D8               	btfsc	status,0,c
 12909  004C3E  D031               	goto	l2628
 12910  004C40                     u4630:
 12911                           
 12912                           ;stkvar	_c @ sp[(0)+-2]
 12913                           ;stkvar	_fp @ sp[(0)+-4]
 12914  004C40  0EFC               	movlw	-4
 12915  004C42  006F FF8C  F047    	movff	plusw1,btemp+10
 12916  004C48  0EFD               	movlw	-3
 12917  004C4A  006F FF8C  F048    	movff	plusw1,btemp+11
 12918  004C50  0E01               	movlw	1
 12919  004C52  2447               	addwf	btemp+10,w,c
 12920  004C54  6ED9               	movwf	fsr2l,c
 12921  004C56  0E00               	movlw	0
 12922  004C58  2048               	addwfc	btemp+11,w,c
 12923  004C5A  6EDA               	movwf	fsr2h,c
 12924  004C5C  50DF               	movf	indf2,w,c
 12925  004C5E  6E48               	movwf	btemp+11,c
 12926                           
 12927                           ;stkvar	_fp @ sp[(0)+-4]
 12928  004C60  0EFC               	movlw	-4
 12929  004C62  006F FF8F FFD9     	movff	plusw1,fsr2l
 12930  004C68  0EFD               	movlw	-3
 12931  004C6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12932  004C70  50DF               	movf	indf2,w,c
 12933  004C72  2448               	addwf	btemp+11,w,c
 12934  004C74  6ED9               	movwf	fsr2l,c
 12935  004C76  6ADA               	clrf	fsr2h,c
 12936  004C78  0EFE               	movlw	-2
 12937  004C7A  006F FF8F FFDF     	movff	plusw1,indf2
 12938                           
 12939                           ;stkvar	_fp @ sp[(0)+-4]
 12940  004C80  0EFC               	movlw	-4
 12941  004C82  006F FF8C  F047    	movff	plusw1,btemp+10
 12942  004C88  0EFD               	movlw	-3
 12943  004C8A  006F FF8C  F048    	movff	plusw1,btemp+11
 12944  004C90  0E01               	movlw	1
 12945  004C92  2447               	addwf	btemp+10,w,c
 12946  004C94  6ED9               	movwf	fsr2l,c
 12947  004C96  0E00               	movlw	0
 12948  004C98  2048               	addwfc	btemp+11,w,c
 12949  004C9A  6EDA               	movwf	fsr2h,c
 12950  004C9C  2ADE               	incf	postinc2,f,c
 12951  004C9E  0E00               	movlw	0
 12952  004CA0  22DD               	addwfc	postdec2,f,c
 12953  004CA2                     l2628:
 12954                           
 12955                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12956  004CA2  52E5               	movf	postdec1,f,c
 12957  004CA4  52E5               	movf	postdec1,f,c
 12958  004CA6  52E5               	movf	postdec1,f,c
 12959  004CA8  52E5               	movf	postdec1,f,c
 12960  004CAA  0012               	return		;funcret
 12961  004CAC                     __end_of_fputc:
 12962                           	opt callstack 0
 12963                           
 12964 ;; *************** function _putch *****************
 12965 ;; Defined at:
 12966 ;;		line 138 in file "eadog.c"
 12967 ;; Parameters:    Size  Location     Type
 12968 ;;  c               1  [STACK] unsigned char 
 12969 ;; Auto vars:     Size  Location     Type
 12970 ;;		None
 12971 ;; Return value:  Size  Location     Type
 12972 ;;                  1  [STACK] void 
 12973 ;; Registers used:
 12974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12975 ;; Tracked objects:
 12976 ;;		On entry : 0/0
 12977 ;;		On exit  : 0/0
 12978 ;;		Unchanged: 0/0
 12979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12984 ;;Total ram usage:        0 bytes
 12985 ;; Hardware stack levels used:    1
 12986 ;; Hardware stack levels required when called:    4
 12987 ;; This function calls:
 12988 ;;		_ringBufS_put_dma
 12989 ;; This function is called by:
 12990 ;;		_fputc
 12991 ;; This function uses a reentrant model
 12992 ;;
 12993                           
 12994                           	psect	text53
 12995  006434                     __ptext53:
 12996                           	opt callstack 0
 12997  006434                     _putch:
 12998                           	opt callstack 21
 12999                           
 13000                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 13001                           ;stkvar	_c @ sp[(0)+-1]
 13002                           
 13003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13004                           ;incstack = 0
 13005  006434  0EFF               	movlw	-1
 13006  006436  50E3               	movf	plusw1,w,c
 13007  006438  6EE6               	movwf	postinc1,c
 13008  00643A  0060  F357  FFE6   	movff	_spi_link+6,postinc1
 13009  006440  0060  F35B  FFE6   	movff	_spi_link+7,postinc1
 13010  006446  EC57  F029         	call	_ringBufS_put_dma	;wreg free
 13011                           
 13012                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 13013  00644A  52E5               	movf	postdec1,f,c
 13014  00644C  0012               	return		;funcret
 13015  00644E                     __end_of_putch:
 13016                           	opt callstack 0
 13017                           
 13018 ;; *************** function _ringBufS_put_dma *****************
 13019 ;; Defined at:
 13020 ;;		line 67 in file "ringbufs.c"
 13021 ;; Parameters:    Size  Location     Type
 13022 ;;  _this           2  [STACK] PTR struct ringBufS_t
 13023 ;;		 -> ring_buf1(67), 
 13024 ;;  c               1  [STACK] const unsigned char 
 13025 ;; Auto vars:     Size  Location     Type
 13026 ;;		None
 13027 ;; Return value:  Size  Location     Type
 13028 ;;                  1  [STACK] void 
 13029 ;; Registers used:
 13030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13031 ;; Tracked objects:
 13032 ;;		On entry : 0/0
 13033 ;;		On exit  : 0/0
 13034 ;;		Unchanged: 0/0
 13035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13040 ;;Total ram usage:        0 bytes
 13041 ;; Hardware stack levels used:    1
 13042 ;; Hardware stack levels required when called:    3
 13043 ;; This function calls:
 13044 ;;		Nothing
 13045 ;; This function is called by:
 13046 ;;		_putch
 13047 ;; This function uses a reentrant model
 13048 ;;
 13049                           
 13050                           	psect	text54
 13051  0052AE                     __ptext54:
 13052                           	opt callstack 0
 13053  0052AE                     _ringBufS_put_dma:
 13054                           	opt callstack 21
 13055                           
 13056                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 13057                           ;stkvar	__this @ sp[(0)+-2]
 13058                           
 13059                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13060                           ;incstack = 0
 13061  0052AE  0EFE               	movlw	-2
 13062  0052B0  006F FF8C  F047    	movff	plusw1,btemp+10
 13063  0052B6  0EFF               	movlw	-1
 13064  0052B8  006F FF8C  F048    	movff	plusw1,btemp+11
 13065  0052BE  0E42               	movlw	66
 13066  0052C0  2447               	addwf	btemp+10,w,c
 13067  0052C2  6ED9               	movwf	fsr2l,c
 13068  0052C4  0E00               	movlw	0
 13069  0052C6  2048               	addwfc	btemp+11,w,c
 13070  0052C8  6EDA               	movwf	fsr2h,c
 13071  0052CA  0E40               	movlw	64
 13072  0052CC  60DF               	cpfslt	indf2,c
 13073  0052CE  D040               	goto	l1489
 13074                           
 13075                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 13076                           ;stkvar	_c @ sp[(0)+-3]
 13077                           ;stkvar	__this @ sp[(0)+-2]
 13078  0052D0  0EFE               	movlw	-2
 13079  0052D2  006F FF8C  F047    	movff	plusw1,btemp+10
 13080  0052D8  0EFF               	movlw	-1
 13081  0052DA  006F FF8C  F048    	movff	plusw1,btemp+11
 13082  0052E0  0E40               	movlw	64
 13083  0052E2  2447               	addwf	btemp+10,w,c
 13084  0052E4  6ED9               	movwf	fsr2l,c
 13085  0052E6  0E00               	movlw	0
 13086  0052E8  2048               	addwfc	btemp+11,w,c
 13087  0052EA  6EDA               	movwf	fsr2h,c
 13088  0052EC  50DF               	movf	indf2,w,c
 13089  0052EE  6E48               	movwf	btemp+11,c
 13090                           
 13091                           ;stkvar	__this @ sp[(0)+-2]
 13092  0052F0  0EFE               	movlw	-2
 13093  0052F2  006F FF8C  F045    	movff	plusw1,btemp+8
 13094  0052F8  0EFF               	movlw	-1
 13095  0052FA  006F FF8C  F046    	movff	plusw1,btemp+9
 13096  005300  5048               	movf	btemp+11,w,c
 13097  005302  2445               	addwf	btemp+8,w,c
 13098  005304  6ED9               	movwf	fsr2l,c
 13099  005306  0E00               	movlw	0
 13100  005308  2046               	addwfc	btemp+9,w,c
 13101  00530A  6EDA               	movwf	fsr2h,c
 13102  00530C  0EFD               	movlw	-3
 13103  00530E  006F FF8F FFDF     	movff	plusw1,indf2
 13104                           
 13105                           ;ringbufs.c: 71:   ++_this->head;
 13106                           ;stkvar	__this @ sp[(0)+-2]
 13107  005314  0EFE               	movlw	-2
 13108  005316  006F FF8C  F047    	movff	plusw1,btemp+10
 13109  00531C  0EFF               	movlw	-1
 13110  00531E  006F FF8C  F048    	movff	plusw1,btemp+11
 13111  005324  0E40               	movlw	64
 13112  005326  2447               	addwf	btemp+10,w,c
 13113  005328  6ED9               	movwf	fsr2l,c
 13114  00532A  0E00               	movlw	0
 13115  00532C  2048               	addwfc	btemp+11,w,c
 13116  00532E  6EDA               	movwf	fsr2h,c
 13117  005330  2ADF               	incf	indf2,f,c
 13118                           
 13119                           ;ringbufs.c: 72:   ++_this->count;
 13120                           ;stkvar	__this @ sp[(0)+-2]
 13121  005332  0EFE               	movlw	-2
 13122  005334  006F FF8C  F047    	movff	plusw1,btemp+10
 13123  00533A  0EFF               	movlw	-1
 13124  00533C  006F FF8C  F048    	movff	plusw1,btemp+11
 13125  005342  0E42               	movlw	66
 13126  005344  2447               	addwf	btemp+10,w,c
 13127  005346  6ED9               	movwf	fsr2l,c
 13128  005348  0E00               	movlw	0
 13129  00534A  2048               	addwfc	btemp+11,w,c
 13130  00534C  6EDA               	movwf	fsr2h,c
 13131  00534E  2ADF               	incf	indf2,f,c
 13132  005350                     l1489:
 13133                           
 13134                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 13135  005350  52E5               	movf	postdec1,f,c
 13136  005352  52E5               	movf	postdec1,f,c
 13137  005354  52E5               	movf	postdec1,f,c
 13138  005356  0012               	return		;funcret
 13139  005358                     __end_of_ringBufS_put_dma:
 13140                           	opt callstack 0
 13141                           
 13142 ;; *************** function _SYSTEM_Initialize *****************
 13143 ;; Defined at:
 13144 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13145 ;; Parameters:    Size  Location     Type
 13146 ;;		None
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;		None
 13149 ;; Return value:  Size  Location     Type
 13150 ;;                  1  [STACK] void 
 13151 ;; Registers used:
 13152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 13153 ;; Tracked objects:
 13154 ;;		On entry : 0/0
 13155 ;;		On exit  : 3F/3C
 13156 ;;		Unchanged: 0/0
 13157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13162 ;;Total ram usage:        0 bytes
 13163 ;; Hardware stack levels used:    1
 13164 ;; Hardware stack levels required when called:    5
 13165 ;; This function calls:
 13166 ;;		_ADCC_Initialize
 13167 ;;		_CLC1_Initialize
 13168 ;;		_CLKREF_Initialize
 13169 ;;		_DMA1_Initialize
 13170 ;;		_DSM_Initialize
 13171 ;;		_EXT_INT_Initialize
 13172 ;;		_INTERRUPT_Initialize
 13173 ;;		_NCO1_Initialize
 13174 ;;		_OSCILLATOR_Initialize
 13175 ;;		_PIN_MANAGER_Initialize
 13176 ;;		_PMD_Initialize
 13177 ;;		_SPI1_Initialize
 13178 ;;		_TMR5_Initialize
 13179 ;;		_TMR6_Initialize
 13180 ;;		_UART1_Initialize
 13181 ;;		_UART2_Initialize
 13182 ;; This function is called by:
 13183 ;;		_main
 13184 ;; This function uses a reentrant model
 13185 ;;
 13186                           
 13187                           	psect	text55
 13188  005C3A                     __ptext55:
 13189                           	opt callstack 0
 13190  005C3A                     _SYSTEM_Initialize:
 13191                           	opt callstack 25
 13192                           
 13193                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 13194                           
 13195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13196                           ;incstack = 0
 13197  005C3A  ECF5  F02B         	call	_INTERRUPT_Initialize	;wreg free
 13198                           
 13199                           ; BSR set to: 57
 13200                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 13201  005C3E  EC58  F032         	call	_PMD_Initialize	;wreg free
 13202                           
 13203                           ; BSR set to: 57
 13204                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13205  005C42  EC4C  F02A         	call	_PIN_MANAGER_Initialize	;wreg free
 13206                           
 13207                           ; BSR set to: 58
 13208                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13209  005C46  EC4D  F032         	call	_OSCILLATOR_Initialize	;wreg free
 13210                           
 13211                           ; BSR set to: 57
 13212                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 13213  005C4A  EC8F  F02D         	call	_ADCC_Initialize	;wreg free
 13214                           
 13215                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 13216  005C4E  ECFE  F031         	call	_NCO1_Initialize	;wreg free
 13217                           
 13218                           ; BSR set to: 63
 13219                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 13220  005C52  EC69  F02D         	call	_EXT_INT_Initialize	;wreg free
 13221                           
 13222                           ; BSR set to: 57
 13223                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 13224  005C56  EC6C  F030         	call	_TMR6_Initialize	;wreg free
 13225                           
 13226                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 13227  005C5A  EC7D  F031         	call	_CLC1_Initialize	;wreg free
 13228                           
 13229                           ; BSR set to: 60
 13230                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 13231  005C5E  ECD7  F02D         	call	_TMR5_Initialize	;wreg free
 13232                           
 13233                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 13234  005C62  EC0C  F032         	call	_DSM_Initialize	;wreg free
 13235                           
 13236                           ; BSR set to: 60
 13237                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 13238  005C66  EC28  F02C         	call	_UART1_Initialize	;wreg free
 13239                           
 13240                           ; BSR set to: 57
 13241                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 13242  005C6A  ECBC  F02C         	call	_UART2_Initialize	;wreg free
 13243                           
 13244                           ; BSR set to: 57
 13245                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 13246  005C6E  EC42  F032         	call	_SPI1_Initialize	;wreg free
 13247                           
 13248                           ; BSR set to: 61
 13249                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 13250  005C72  ECC0  F02B         	call	_DMA1_Initialize	;wreg free
 13251                           
 13252                           ; BSR set to: 59
 13253                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 13254  005C76  EC89  F032         	call	_CLKREF_Initialize	;wreg free
 13255                           
 13256                           ; BSR set to: 60
 13257                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13258  005C7A  0012               	return		;funcret
 13259  005C7C                     __end_of_SYSTEM_Initialize:
 13260                           	opt callstack 0
 13261                           
 13262 ;; *************** function _UART2_Initialize *****************
 13263 ;; Defined at:
 13264 ;;		line 78 in file "mcc_generated_files/uart2.c"
 13265 ;; Parameters:    Size  Location     Type
 13266 ;;		None
 13267 ;; Auto vars:     Size  Location     Type
 13268 ;;		None
 13269 ;; Return value:  Size  Location     Type
 13270 ;;                  1  [STACK] void 
 13271 ;; Registers used:
 13272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13273 ;; Tracked objects:
 13274 ;;		On entry : 3F/39
 13275 ;;		On exit  : 3F/39
 13276 ;;		Unchanged: 0/0
 13277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13282 ;;Total ram usage:        0 bytes
 13283 ;; Hardware stack levels used:    1
 13284 ;; Hardware stack levels required when called:    4
 13285 ;; This function calls:
 13286 ;;		_UART2_SetRxInterruptHandler
 13287 ;;		_UART2_SetTxInterruptHandler
 13288 ;; This function is called by:
 13289 ;;		_SYSTEM_Initialize
 13290 ;; This function uses a reentrant model
 13291 ;;
 13292                           
 13293                           	psect	text56
 13294  005978                     __ptext56:
 13295                           	opt callstack 0
 13296  005978                     _UART2_Initialize:
 13297                           	opt callstack 25
 13298                           
 13299                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 13300                           
 13301                           ; BSR set to: 60
 13302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13303                           ;incstack = 0
 13304  005978  0139               	movlb	57	; () banked
 13305  00597A  9596               	bcf	150,2,b	;volatile
 13306                           
 13307                           ; BSR set to: 57
 13308                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 13309  00597C  0EA2               	movlw	low _UART2_Receive_ISR
 13310  00597E  6EE6               	movwf	postinc1,c
 13311  005980  0E63               	movlw	high _UART2_Receive_ISR
 13312  005982  6EE6               	movwf	postinc1,c
 13313  005984  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 13314  005986  6EE6               	movwf	postinc1,c
 13315  005988  EC30  F030         	call	_UART2_SetRxInterruptHandler	;wreg free
 13316                           
 13317                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 13318  00598C  0139               	movlb	57	; () banked
 13319  00598E  9796               	bcf	150,3,b	;volatile
 13320                           
 13321                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 13322  005990  0E18               	movlw	low _UART2_Transmit_ISR
 13323  005992  6EE6               	movwf	postinc1,c
 13324  005994  0E5F               	movlw	high _UART2_Transmit_ISR
 13325  005996  6EE6               	movwf	postinc1,c
 13326  005998  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 13327  00599A  6EE6               	movwf	postinc1,c
 13328  00599C  EC1C  F030         	call	_UART2_SetTxInterruptHandler	;wreg free
 13329                           
 13330                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 13331  0059A0  013D               	movlb	61	; () banked
 13332  0059A2  6BD4               	clrf	212,b	;volatile
 13333                           
 13334                           ; BSR set to: 61
 13335                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 13336  0059A4  6BD6               	clrf	214,b	;volatile
 13337                           
 13338                           ; BSR set to: 61
 13339                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 13340  0059A6  6BD8               	clrf	216,b	;volatile
 13341                           
 13342                           ; BSR set to: 61
 13343                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 13344  0059A8  0EB0               	movlw	176
 13345  0059AA  6FDA               	movwf	218,b	;volatile
 13346                           
 13347                           ; BSR set to: 61
 13348                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 13349  0059AC  0E80               	movlw	128
 13350  0059AE  6FDB               	movwf	219,b	;volatile
 13351                           
 13352                           ; BSR set to: 61
 13353                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 13354  0059B0  6BDC               	clrf	220,b	;volatile
 13355                           
 13356                           ; BSR set to: 61
 13357                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 13358  0059B2  0E82               	movlw	130
 13359  0059B4  6FDD               	movwf	221,b	;volatile
 13360                           
 13361                           ; BSR set to: 61
 13362                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 13363  0059B6  0E06               	movlw	6
 13364  0059B8  6FDE               	movwf	222,b	;volatile
 13365                           
 13366                           ; BSR set to: 61
 13367                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 13368  0059BA  6BDF               	clrf	223,b	;volatile
 13369                           
 13370                           ; BSR set to: 61
 13371                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 13372  0059BC  6BE0               	clrf	224,b	;volatile
 13373                           
 13374                           ; BSR set to: 61
 13375                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 13376  0059BE  6BE1               	clrf	225,b	;volatile
 13377                           
 13378                           ; BSR set to: 61
 13379                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 13380  0059C0  6BE2               	clrf	226,b	;volatile
 13381                           
 13382                           ; BSR set to: 61
 13383                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 13384  0059C2  6A36               	clrf	_uart2TxHead,c	;volatile
 13385                           
 13386                           ; BSR set to: 61
 13387                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 13388  0059C4  6A35               	clrf	_uart2TxTail,c	;volatile
 13389                           
 13390                           ; BSR set to: 61
 13391                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 13392  0059C6  0E40               	movlw	64
 13393  0059C8  6E34               	movwf	_uart2TxBufferRemaining,c	;volatile
 13394                           
 13395                           ; BSR set to: 61
 13396                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 13397  0059CA  6A33               	clrf	_uart2RxHead,c	;volatile
 13398                           
 13399                           ; BSR set to: 61
 13400                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 13401  0059CC  6A32               	clrf	_uart2RxTail,c	;volatile
 13402                           
 13403                           ; BSR set to: 61
 13404                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 13405  0059CE  6A31               	clrf	_uart2RxCount,c	;volatile
 13406                           
 13407                           ; BSR set to: 61
 13408                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 13409  0059D0  0139               	movlb	57	; () banked
 13410  0059D2  8596               	bsf	150,2,b	;volatile
 13411                           
 13412                           ; BSR set to: 57
 13413                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13414  0059D4  0012               	return		;funcret
 13415  0059D6                     __end_of_UART2_Initialize:
 13416                           	opt callstack 0
 13417                           
 13418 ;; *************** function _UART2_SetTxInterruptHandler *****************
 13419 ;; Defined at:
 13420 ;;		line 252 in file "mcc_generated_files/uart2.c"
 13421 ;; Parameters:    Size  Location     Type
 13422 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13423 ;;		 -> UART2_Transmit_ISR(1), 
 13424 ;; Auto vars:     Size  Location     Type
 13425 ;;		None
 13426 ;; Return value:  Size  Location     Type
 13427 ;;                  1  [STACK] void 
 13428 ;; Registers used:
 13429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13430 ;; Tracked objects:
 13431 ;;		On entry : 3F/39
 13432 ;;		On exit  : 0/0
 13433 ;;		Unchanged: 0/0
 13434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13439 ;;Total ram usage:        0 bytes
 13440 ;; Hardware stack levels used:    1
 13441 ;; Hardware stack levels required when called:    3
 13442 ;; This function calls:
 13443 ;;		Nothing
 13444 ;; This function is called by:
 13445 ;;		_UART2_Initialize
 13446 ;; This function uses a reentrant model
 13447 ;;
 13448                           
 13449                           	psect	text57
 13450  006038                     __ptext57:
 13451                           	opt callstack 0
 13452  006038                     _UART2_SetTxInterruptHandler:
 13453                           	opt callstack 25
 13454                           
 13455                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 13456                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13457                           
 13458                           ; BSR set to: 57
 13459                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13460                           ;incstack = 0
 13461  006038  50E1               	movf	fsr1l,w,c
 13462  00603A  0FFD               	addlw	-3
 13463  00603C  6ED9               	movwf	fsr2l,c
 13464  00603E  50E2               	movf	fsr1h,w,c
 13465  006040  6EDA               	movwf	fsr2h,c
 13466  006042  0EFF               	movlw	255
 13467  006044  22DA               	addwfc	fsr2h,f,c
 13468  006046  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler
 13469  00604C  006F FF78  F00F    	movff	postinc2,_UART2_TxInterruptHandler+1
 13470  006052  006F FF74  F010    	movff	postdec2,_UART2_TxInterruptHandler+2
 13471                           
 13472                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13473  006058  52E5               	movf	postdec1,f,c
 13474  00605A  52E5               	movf	postdec1,f,c
 13475  00605C  52E5               	movf	postdec1,f,c
 13476  00605E  0012               	return		;funcret
 13477  006060                     __end_of_UART2_SetTxInterruptHandler:
 13478                           	opt callstack 0
 13479                           
 13480 ;; *************** function _UART2_SetRxInterruptHandler *****************
 13481 ;; Defined at:
 13482 ;;		line 248 in file "mcc_generated_files/uart2.c"
 13483 ;; Parameters:    Size  Location     Type
 13484 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13485 ;;		 -> UART2_Receive_ISR(1), 
 13486 ;; Auto vars:     Size  Location     Type
 13487 ;;		None
 13488 ;; Return value:  Size  Location     Type
 13489 ;;                  1  [STACK] void 
 13490 ;; Registers used:
 13491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13492 ;; Tracked objects:
 13493 ;;		On entry : 3F/39
 13494 ;;		On exit  : 0/0
 13495 ;;		Unchanged: 0/0
 13496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13501 ;;Total ram usage:        0 bytes
 13502 ;; Hardware stack levels used:    1
 13503 ;; Hardware stack levels required when called:    3
 13504 ;; This function calls:
 13505 ;;		Nothing
 13506 ;; This function is called by:
 13507 ;;		_UART2_Initialize
 13508 ;; This function uses a reentrant model
 13509 ;;
 13510                           
 13511                           	psect	text58
 13512  006060                     __ptext58:
 13513                           	opt callstack 0
 13514  006060                     _UART2_SetRxInterruptHandler:
 13515                           	opt callstack 25
 13516                           
 13517                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 13518                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13519                           
 13520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13521                           ;incstack = 0
 13522  006060  50E1               	movf	fsr1l,w,c
 13523  006062  0FFD               	addlw	-3
 13524  006064  6ED9               	movwf	fsr2l,c
 13525  006066  50E2               	movf	fsr1h,w,c
 13526  006068  6EDA               	movwf	fsr2h,c
 13527  00606A  0EFF               	movlw	255
 13528  00606C  22DA               	addwfc	fsr2h,f,c
 13529  00606E  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler
 13530  006074  006F FF78  F012    	movff	postinc2,_UART2_RxInterruptHandler+1
 13531  00607A  006F FF74  F013    	movff	postdec2,_UART2_RxInterruptHandler+2
 13532                           
 13533                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13534  006080  52E5               	movf	postdec1,f,c
 13535  006082  52E5               	movf	postdec1,f,c
 13536  006084  52E5               	movf	postdec1,f,c
 13537  006086  0012               	return		;funcret
 13538  006088                     __end_of_UART2_SetRxInterruptHandler:
 13539                           	opt callstack 0
 13540                           
 13541 ;; *************** function _UART1_Initialize *****************
 13542 ;; Defined at:
 13543 ;;		line 78 in file "mcc_generated_files/uart1.c"
 13544 ;; Parameters:    Size  Location     Type
 13545 ;;		None
 13546 ;; Auto vars:     Size  Location     Type
 13547 ;;		None
 13548 ;; Return value:  Size  Location     Type
 13549 ;;                  1  [STACK] void 
 13550 ;; Registers used:
 13551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13552 ;; Tracked objects:
 13553 ;;		On entry : 3F/3C
 13554 ;;		On exit  : 3F/39
 13555 ;;		Unchanged: 0/0
 13556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13561 ;;Total ram usage:        0 bytes
 13562 ;; Hardware stack levels used:    1
 13563 ;; Hardware stack levels required when called:    4
 13564 ;; This function calls:
 13565 ;;		_UART1_SetRxInterruptHandler
 13566 ;;		_UART1_SetTxInterruptHandler
 13567 ;; This function is called by:
 13568 ;;		_SYSTEM_Initialize
 13569 ;; This function uses a reentrant model
 13570 ;;
 13571                           
 13572                           	psect	text59
 13573  005850                     __ptext59:
 13574                           	opt callstack 0
 13575  005850                     _UART1_Initialize:
 13576                           	opt callstack 25
 13577                           
 13578                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 13579                           
 13580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13581                           ;incstack = 0
 13582  005850  0139               	movlb	57	; () banked
 13583  005852  9793               	bcf	147,3,b	;volatile
 13584                           
 13585                           ; BSR set to: 57
 13586                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13587  005854  0E82               	movlw	low _UART1_Receive_ISR
 13588  005856  6EE6               	movwf	postinc1,c
 13589  005858  0E63               	movlw	high _UART1_Receive_ISR
 13590  00585A  6EE6               	movwf	postinc1,c
 13591  00585C  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 13592  00585E  6EE6               	movwf	postinc1,c
 13593  005860  EC58  F030         	call	_UART1_SetRxInterruptHandler	;wreg free
 13594                           
 13595                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 13596  005864  0139               	movlb	57	; () banked
 13597  005866  9993               	bcf	147,4,b	;volatile
 13598                           
 13599                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13600  005868  0EEC               	movlw	low _UART1_Transmit_ISR
 13601  00586A  6EE6               	movwf	postinc1,c
 13602  00586C  0E5E               	movlw	high _UART1_Transmit_ISR
 13603  00586E  6EE6               	movwf	postinc1,c
 13604  005870  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 13605  005872  6EE6               	movwf	postinc1,c
 13606  005874  EC44  F030         	call	_UART1_SetTxInterruptHandler	;wreg free
 13607                           
 13608                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 13609  005878  013D               	movlb	61	; () banked
 13610  00587A  6BEC               	clrf	236,b	;volatile
 13611                           
 13612                           ; BSR set to: 61
 13613                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 13614  00587C  6BED               	clrf	237,b	;volatile
 13615                           
 13616                           ; BSR set to: 61
 13617                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 13618  00587E  6BEE               	clrf	238,b	;volatile
 13619                           
 13620                           ; BSR set to: 61
 13621                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 13622  005880  6BEF               	clrf	239,b	;volatile
 13623                           
 13624                           ; BSR set to: 61
 13625                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 13626  005882  6BF0               	clrf	240,b	;volatile
 13627                           
 13628                           ; BSR set to: 61
 13629                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 13630  005884  6BF1               	clrf	241,b	;volatile
 13631                           
 13632                           ; BSR set to: 61
 13633                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 13634  005886  0EB0               	movlw	176
 13635  005888  6FF2               	movwf	242,b	;volatile
 13636                           
 13637                           ; BSR set to: 61
 13638                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 13639  00588A  0E80               	movlw	128
 13640  00588C  6FF3               	movwf	243,b	;volatile
 13641                           
 13642                           ; BSR set to: 61
 13643                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 13644  00588E  6BF4               	clrf	244,b	;volatile
 13645                           
 13646                           ; BSR set to: 61
 13647                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 13648  005890  0E82               	movlw	130
 13649  005892  6FF5               	movwf	245,b	;volatile
 13650                           
 13651                           ; BSR set to: 61
 13652                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 13653  005894  0E06               	movlw	6
 13654  005896  6FF6               	movwf	246,b	;volatile
 13655                           
 13656                           ; BSR set to: 61
 13657                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 13658  005898  6BF7               	clrf	247,b	;volatile
 13659                           
 13660                           ; BSR set to: 61
 13661                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 13662  00589A  6BF8               	clrf	248,b	;volatile
 13663                           
 13664                           ; BSR set to: 61
 13665                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 13666  00589C  6BF9               	clrf	249,b	;volatile
 13667                           
 13668                           ; BSR set to: 61
 13669                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 13670  00589E  6BFA               	clrf	250,b	;volatile
 13671                           
 13672                           ; BSR set to: 61
 13673                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 13674  0058A0  6A3C               	clrf	_uart1TxHead,c	;volatile
 13675                           
 13676                           ; BSR set to: 61
 13677                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 13678  0058A2  6A3B               	clrf	_uart1TxTail,c	;volatile
 13679                           
 13680                           ; BSR set to: 61
 13681                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 13682  0058A4  0E40               	movlw	64
 13683  0058A6  6E3A               	movwf	_uart1TxBufferRemaining,c	;volatile
 13684                           
 13685                           ; BSR set to: 61
 13686                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 13687  0058A8  6A39               	clrf	_uart1RxHead,c	;volatile
 13688                           
 13689                           ; BSR set to: 61
 13690                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 13691  0058AA  6A38               	clrf	_uart1RxTail,c	;volatile
 13692                           
 13693                           ; BSR set to: 61
 13694                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 13695  0058AC  6A37               	clrf	_uart1RxCount,c	;volatile
 13696                           
 13697                           ; BSR set to: 61
 13698                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 13699  0058AE  0139               	movlb	57	; () banked
 13700  0058B0  8793               	bsf	147,3,b	;volatile
 13701                           
 13702                           ; BSR set to: 57
 13703                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13704  0058B2  0012               	return		;funcret
 13705  0058B4                     __end_of_UART1_Initialize:
 13706                           	opt callstack 0
 13707                           
 13708 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13709 ;; Defined at:
 13710 ;;		line 244 in file "mcc_generated_files/uart1.c"
 13711 ;; Parameters:    Size  Location     Type
 13712 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13713 ;;		 -> UART1_Transmit_ISR(1), 
 13714 ;; Auto vars:     Size  Location     Type
 13715 ;;		None
 13716 ;; Return value:  Size  Location     Type
 13717 ;;                  1  [STACK] void 
 13718 ;; Registers used:
 13719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13720 ;; Tracked objects:
 13721 ;;		On entry : 3F/39
 13722 ;;		On exit  : 0/0
 13723 ;;		Unchanged: 0/0
 13724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13729 ;;Total ram usage:        0 bytes
 13730 ;; Hardware stack levels used:    1
 13731 ;; Hardware stack levels required when called:    3
 13732 ;; This function calls:
 13733 ;;		Nothing
 13734 ;; This function is called by:
 13735 ;;		_UART1_Initialize
 13736 ;; This function uses a reentrant model
 13737 ;;
 13738                           
 13739                           	psect	text60
 13740  006088                     __ptext60:
 13741                           	opt callstack 0
 13742  006088                     _UART1_SetTxInterruptHandler:
 13743                           	opt callstack 25
 13744                           
 13745                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 13746                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13747                           
 13748                           ; BSR set to: 57
 13749                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13750                           ;incstack = 0
 13751  006088  50E1               	movf	fsr1l,w,c
 13752  00608A  0FFD               	addlw	-3
 13753  00608C  6ED9               	movwf	fsr2l,c
 13754  00608E  50E2               	movf	fsr1h,w,c
 13755  006090  6EDA               	movwf	fsr2h,c
 13756  006092  0EFF               	movlw	255
 13757  006094  22DA               	addwfc	fsr2h,f,c
 13758  006096  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler
 13759  00609C  006F FF78  F009    	movff	postinc2,_UART1_TxInterruptHandler+1
 13760  0060A2  006F FF74  F00A    	movff	postdec2,_UART1_TxInterruptHandler+2
 13761                           
 13762                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13763  0060A8  52E5               	movf	postdec1,f,c
 13764  0060AA  52E5               	movf	postdec1,f,c
 13765  0060AC  52E5               	movf	postdec1,f,c
 13766  0060AE  0012               	return		;funcret
 13767  0060B0                     __end_of_UART1_SetTxInterruptHandler:
 13768                           	opt callstack 0
 13769                           
 13770 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13771 ;; Defined at:
 13772 ;;		line 239 in file "mcc_generated_files/uart1.c"
 13773 ;; Parameters:    Size  Location     Type
 13774 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13775 ;;		 -> UART1_Receive_ISR(1), 
 13776 ;; Auto vars:     Size  Location     Type
 13777 ;;		None
 13778 ;; Return value:  Size  Location     Type
 13779 ;;                  1  [STACK] void 
 13780 ;; Registers used:
 13781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13782 ;; Tracked objects:
 13783 ;;		On entry : 3F/39
 13784 ;;		On exit  : 0/0
 13785 ;;		Unchanged: 0/0
 13786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13791 ;;Total ram usage:        0 bytes
 13792 ;; Hardware stack levels used:    1
 13793 ;; Hardware stack levels required when called:    3
 13794 ;; This function calls:
 13795 ;;		Nothing
 13796 ;; This function is called by:
 13797 ;;		_UART1_Initialize
 13798 ;; This function uses a reentrant model
 13799 ;;
 13800                           
 13801                           	psect	text61
 13802  0060B0                     __ptext61:
 13803                           	opt callstack 0
 13804  0060B0                     _UART1_SetRxInterruptHandler:
 13805                           	opt callstack 25
 13806                           
 13807                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 13808                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13809                           
 13810                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13811                           ;incstack = 0
 13812  0060B0  50E1               	movf	fsr1l,w,c
 13813  0060B2  0FFD               	addlw	-3
 13814  0060B4  6ED9               	movwf	fsr2l,c
 13815  0060B6  50E2               	movf	fsr1h,w,c
 13816  0060B8  6EDA               	movwf	fsr2h,c
 13817  0060BA  0EFF               	movlw	255
 13818  0060BC  22DA               	addwfc	fsr2h,f,c
 13819  0060BE  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler
 13820  0060C4  006F FF78  F00C    	movff	postinc2,_UART1_RxInterruptHandler+1
 13821  0060CA  006F FF74  F00D    	movff	postdec2,_UART1_RxInterruptHandler+2
 13822                           
 13823                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13824  0060D0  52E5               	movf	postdec1,f,c
 13825  0060D2  52E5               	movf	postdec1,f,c
 13826  0060D4  52E5               	movf	postdec1,f,c
 13827  0060D6  0012               	return		;funcret
 13828  0060D8                     __end_of_UART1_SetRxInterruptHandler:
 13829                           	opt callstack 0
 13830                           
 13831 ;; *************** function _TMR6_Initialize *****************
 13832 ;; Defined at:
 13833 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 13834 ;; Parameters:    Size  Location     Type
 13835 ;;		None
 13836 ;; Auto vars:     Size  Location     Type
 13837 ;;		None
 13838 ;; Return value:  Size  Location     Type
 13839 ;;                  1  [STACK] void 
 13840 ;; Registers used:
 13841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13842 ;; Tracked objects:
 13843 ;;		On entry : 3F/39
 13844 ;;		On exit  : 0/0
 13845 ;;		Unchanged: 0/0
 13846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13851 ;;Total ram usage:        0 bytes
 13852 ;; Hardware stack levels used:    1
 13853 ;; Hardware stack levels required when called:    4
 13854 ;; This function calls:
 13855 ;;		_TMR6_SetInterruptHandler
 13856 ;; This function is called by:
 13857 ;;		_SYSTEM_Initialize
 13858 ;; This function uses a reentrant model
 13859 ;;
 13860                           
 13861                           	psect	text62
 13862  0060D8                     __ptext62:
 13863                           	opt callstack 0
 13864  0060D8                     _TMR6_Initialize:
 13865                           	opt callstack 25
 13866                           
 13867                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 13868                           
 13869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13870                           ;incstack = 0
 13871  0060D8  0E01               	movlw	1
 13872  0060DA  6E96               	movwf	16278,c	;volatile
 13873                           
 13874                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 13875  0060DC  6A95               	clrf	16277,c	;volatile
 13876                           
 13877                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 13878  0060DE  6A97               	clrf	16279,c	;volatile
 13879                           
 13880                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 13881  0060E0  0E03               	movlw	3
 13882  0060E2  6E93               	movwf	16275,c	;volatile
 13883                           
 13884                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 13885  0060E4  6A92               	clrf	16274,c	;volatile
 13886                           
 13887                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 13888  0060E6  0139               	movlb	57	; () banked
 13889  0060E8  91A9               	bcf	169,0,b	;volatile
 13890                           
 13891                           ; BSR set to: 57
 13892                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 13893  0060EA  8199               	bsf	153,0,b	;volatile
 13894                           
 13895                           ; BSR set to: 57
 13896                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 13897  0060EC  0EF4               	movlw	low _TMR6_DefaultInterruptHandler
 13898  0060EE  6EE6               	movwf	postinc1,c
 13899  0060F0  0E5B               	movlw	high _TMR6_DefaultInterruptHandler
 13900  0060F2  6EE6               	movwf	postinc1,c
 13901  0060F4  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 13902  0060F6  6EE6               	movwf	postinc1,c
 13903  0060F8  EC80  F030         	call	_TMR6_SetInterruptHandler	;wreg free
 13904                           
 13905                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 13906  0060FC  6894               	setf	16276,c	;volatile
 13907                           
 13908                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13909  0060FE  0012               	return		;funcret
 13910  006100                     __end_of_TMR6_Initialize:
 13911                           	opt callstack 0
 13912                           
 13913 ;; *************** function _TMR6_SetInterruptHandler *****************
 13914 ;; Defined at:
 13915 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 13916 ;; Parameters:    Size  Location     Type
 13917 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13918 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 13919 ;; Auto vars:     Size  Location     Type
 13920 ;;		None
 13921 ;; Return value:  Size  Location     Type
 13922 ;;                  1  [STACK] void 
 13923 ;; Registers used:
 13924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13925 ;; Tracked objects:
 13926 ;;		On entry : 3F/39
 13927 ;;		On exit  : 0/0
 13928 ;;		Unchanged: 0/0
 13929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13934 ;;Total ram usage:        0 bytes
 13935 ;; Hardware stack levels used:    1
 13936 ;; Hardware stack levels required when called:    3
 13937 ;; This function calls:
 13938 ;;		Nothing
 13939 ;; This function is called by:
 13940 ;;		_TMR6_Initialize
 13941 ;; This function uses a reentrant model
 13942 ;;
 13943                           
 13944                           	psect	text63
 13945  006100                     __ptext63:
 13946                           	opt callstack 0
 13947  006100                     _TMR6_SetInterruptHandler:
 13948                           	opt callstack 25
 13949                           
 13950                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 13951                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13952                           
 13953                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13954                           ;incstack = 0
 13955  006100  50E1               	movf	fsr1l,w,c
 13956  006102  0FFD               	addlw	-3
 13957  006104  6ED9               	movwf	fsr2l,c
 13958  006106  50E2               	movf	fsr1h,w,c
 13959  006108  6EDA               	movwf	fsr2h,c
 13960  00610A  0EFF               	movlw	255
 13961  00610C  22DA               	addwfc	fsr2h,f,c
 13962  00610E  006F FF78  F0F5    	movff	postinc2,_TMR6_InterruptHandler
 13963  006114  006F FF78  F0F6    	movff	postinc2,_TMR6_InterruptHandler+1
 13964  00611A  006F FF74  F0F7    	movff	postdec2,_TMR6_InterruptHandler+2
 13965                           
 13966                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13967  006120  52E5               	movf	postdec1,f,c
 13968  006122  52E5               	movf	postdec1,f,c
 13969  006124  52E5               	movf	postdec1,f,c
 13970  006126  0012               	return		;funcret
 13971  006128                     __end_of_TMR6_SetInterruptHandler:
 13972                           	opt callstack 0
 13973                           
 13974 ;; *************** function _TMR5_Initialize *****************
 13975 ;; Defined at:
 13976 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 13977 ;; Parameters:    Size  Location     Type
 13978 ;;		None
 13979 ;; Auto vars:     Size  Location     Type
 13980 ;;		None
 13981 ;; Return value:  Size  Location     Type
 13982 ;;                  1  [STACK] void 
 13983 ;; Registers used:
 13984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 13985 ;; Tracked objects:
 13986 ;;		On entry : 3F/3C
 13987 ;;		On exit  : 0/0
 13988 ;;		Unchanged: 0/0
 13989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13994 ;;Total ram usage:        0 bytes
 13995 ;; Hardware stack levels used:    1
 13996 ;; Hardware stack levels required when called:    4
 13997 ;; This function calls:
 13998 ;;		_TMR5_SetInterruptHandler
 13999 ;; This function is called by:
 14000 ;;		_SYSTEM_Initialize
 14001 ;; This function uses a reentrant model
 14002 ;;
 14003                           
 14004                           	psect	text64
 14005  005BAE                     __ptext64:
 14006                           	opt callstack 0
 14007  005BAE                     _TMR5_Initialize:
 14008                           	opt callstack 25
 14009                           
 14010                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 14011                           
 14012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14013                           ;incstack = 0
 14014  005BAE  6A9B               	clrf	16283,c	;volatile
 14015                           
 14016                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 14017  005BB0  6A9C               	clrf	16284,c	;volatile
 14018                           
 14019                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 14020  005BB2  0E01               	movlw	1
 14021  005BB4  6E9D               	movwf	16285,c	;volatile
 14022                           
 14023                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 14024  005BB6  0E63               	movlw	99
 14025  005BB8  6E99               	movwf	16281,c	;volatile
 14026                           
 14027                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 14028  005BBA  0EC0               	movlw	192
 14029  005BBC  6E98               	movwf	16280,c	;volatile
 14030                           
 14031                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 14032  005BBE  5098               	movf	16280,w,c	;volatile
 14033  005BC0  006F FE64  F03D    	movff	16281,btemp	;volatile
 14034  005BC6  6A3E               	clrf	btemp+1,c
 14035  005BC8  0060  F0F4  F03E   	movff	btemp,btemp+1
 14036  005BCE  6A3D               	clrf	btemp,c
 14037  005BD0  103D               	iorwf	btemp,w,c
 14038  005BD2  6E29               	movwf	_timer5ReloadVal,c	;volatile
 14039  005BD4  503E               	movf	btemp+1,w,c
 14040  005BD6  6E2A               	movwf	_timer5ReloadVal+1,c	;volatile
 14041                           
 14042                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 14043  005BD8  0139               	movlb	57	; () banked
 14044  005BDA  9DA8               	bcf	168,6,b	;volatile
 14045                           
 14046                           ; BSR set to: 57
 14047                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 14048  005BDC  8D98               	bsf	152,6,b	;volatile
 14049                           
 14050                           ; BSR set to: 57
 14051                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 14052  005BDE  0E6A               	movlw	low _TMR5_DefaultInterruptHandler
 14053  005BE0  6EE6               	movwf	postinc1,c
 14054  005BE2  0E64               	movlw	high _TMR5_DefaultInterruptHandler
 14055  005BE4  6EE6               	movwf	postinc1,c
 14056  005BE6  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 14057  005BE8  6EE6               	movwf	postinc1,c
 14058  005BEA  EC94  F030         	call	_TMR5_SetInterruptHandler	;wreg free
 14059                           
 14060                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 14061  005BEE  0E31               	movlw	49
 14062  005BF0  6E9A               	movwf	16282,c	;volatile
 14063                           
 14064                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14065  005BF2  0012               	return		;funcret
 14066  005BF4                     __end_of_TMR5_Initialize:
 14067                           	opt callstack 0
 14068                           
 14069 ;; *************** function _TMR5_SetInterruptHandler *****************
 14070 ;; Defined at:
 14071 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 14072 ;; Parameters:    Size  Location     Type
 14073 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14074 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 14075 ;; Auto vars:     Size  Location     Type
 14076 ;;		None
 14077 ;; Return value:  Size  Location     Type
 14078 ;;                  1  [STACK] void 
 14079 ;; Registers used:
 14080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14081 ;; Tracked objects:
 14082 ;;		On entry : 3F/39
 14083 ;;		On exit  : 0/0
 14084 ;;		Unchanged: 0/0
 14085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14090 ;;Total ram usage:        0 bytes
 14091 ;; Hardware stack levels used:    1
 14092 ;; Hardware stack levels required when called:    3
 14093 ;; This function calls:
 14094 ;;		Nothing
 14095 ;; This function is called by:
 14096 ;;		_TMR5_Initialize
 14097 ;; This function uses a reentrant model
 14098 ;;
 14099                           
 14100                           	psect	text65
 14101  006128                     __ptext65:
 14102                           	opt callstack 0
 14103  006128                     _TMR5_SetInterruptHandler:
 14104                           	opt callstack 25
 14105                           
 14106                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 14107                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14108                           
 14109                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14110                           ;incstack = 0
 14111  006128  50E1               	movf	fsr1l,w,c
 14112  00612A  0FFD               	addlw	-3
 14113  00612C  6ED9               	movwf	fsr2l,c
 14114  00612E  50E2               	movf	fsr1h,w,c
 14115  006130  6EDA               	movwf	fsr2h,c
 14116  006132  0EFF               	movlw	255
 14117  006134  22DA               	addwfc	fsr2h,f,c
 14118  006136  006F FF78  F0F2    	movff	postinc2,_TMR5_InterruptHandler
 14119  00613C  006F FF78  F0F3    	movff	postinc2,_TMR5_InterruptHandler+1
 14120  006142  006F FF74  F0F4    	movff	postdec2,_TMR5_InterruptHandler+2
 14121                           
 14122                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14123  006148  52E5               	movf	postdec1,f,c
 14124  00614A  52E5               	movf	postdec1,f,c
 14125  00614C  52E5               	movf	postdec1,f,c
 14126  00614E  0012               	return		;funcret
 14127  006150                     __end_of_TMR5_SetInterruptHandler:
 14128                           	opt callstack 0
 14129                           
 14130 ;; *************** function _SPI1_Initialize *****************
 14131 ;; Defined at:
 14132 ;;		line 64 in file "mcc_generated_files/spi1.c"
 14133 ;; Parameters:    Size  Location     Type
 14134 ;;		None
 14135 ;; Auto vars:     Size  Location     Type
 14136 ;;		None
 14137 ;; Return value:  Size  Location     Type
 14138 ;;                  1  [STACK] void 
 14139 ;; Registers used:
 14140 ;;		wreg, status,2
 14141 ;; Tracked objects:
 14142 ;;		On entry : 3F/39
 14143 ;;		On exit  : 3F/3D
 14144 ;;		Unchanged: 0/0
 14145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14150 ;;Total ram usage:        0 bytes
 14151 ;; Hardware stack levels used:    1
 14152 ;; Hardware stack levels required when called:    3
 14153 ;; This function calls:
 14154 ;;		Nothing
 14155 ;; This function is called by:
 14156 ;;		_SYSTEM_Initialize
 14157 ;; This function uses a reentrant model
 14158 ;;
 14159                           
 14160                           	psect	text66
 14161  006484                     __ptext66:
 14162                           	opt callstack 0
 14163  006484                     _SPI1_Initialize:
 14164                           	opt callstack 26
 14165                           
 14166                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 14167                           
 14168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14169                           ;incstack = 0
 14170  006484  0E40               	movlw	64
 14171  006486  013D               	movlb	61	; () banked
 14172  006488  6F15               	movwf	21,b	;volatile
 14173                           
 14174                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 14175  00648A  0E03               	movlw	3
 14176  00648C  6F16               	movwf	22,b	;volatile
 14177                           
 14178                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 14179  00648E  0E4F               	movlw	79
 14180  006490  6F19               	movwf	25,b	;volatile
 14181                           
 14182                           ; BSR set to: 61
 14183                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 14184  006492  6B1C               	clrf	28,b	;volatile
 14185                           
 14186                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 14187  006494  0E83               	movlw	131
 14188  006496  6F14               	movwf	20,b	;volatile
 14189                           
 14190                           ; BSR set to: 61
 14191                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14192  006498  0012               	return		;funcret
 14193  00649A                     __end_of_SPI1_Initialize:
 14194                           	opt callstack 0
 14195                           
 14196 ;; *************** function _PMD_Initialize *****************
 14197 ;; Defined at:
 14198 ;;		line 88 in file "mcc_generated_files/mcc.c"
 14199 ;; Parameters:    Size  Location     Type
 14200 ;;		None
 14201 ;; Auto vars:     Size  Location     Type
 14202 ;;		None
 14203 ;; Return value:  Size  Location     Type
 14204 ;;                  1  [STACK] void 
 14205 ;; Registers used:
 14206 ;;		None
 14207 ;; Tracked objects:
 14208 ;;		On entry : 3F/39
 14209 ;;		On exit  : 3F/39
 14210 ;;		Unchanged: 0/0
 14211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14216 ;;Total ram usage:        0 bytes
 14217 ;; Hardware stack levels used:    1
 14218 ;; Hardware stack levels required when called:    3
 14219 ;; This function calls:
 14220 ;;		Nothing
 14221 ;; This function is called by:
 14222 ;;		_SYSTEM_Initialize
 14223 ;; This function uses a reentrant model
 14224 ;;
 14225                           
 14226                           	psect	text67
 14227  0064B0                     __ptext67:
 14228                           	opt callstack 0
 14229  0064B0                     _PMD_Initialize:
 14230                           	opt callstack 26
 14231                           
 14232                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 14233                           
 14234                           ; BSR set to: 61
 14235                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14236                           ;incstack = 0
 14237  0064B0  0139               	movlb	57	; () banked
 14238  0064B2  6BC0               	clrf	192,b	;volatile
 14239                           
 14240                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 14241  0064B4  6BC1               	clrf	193,b	;volatile
 14242                           
 14243                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 14244  0064B6  6BC2               	clrf	194,b	;volatile
 14245                           
 14246                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 14247  0064B8  6BC3               	clrf	195,b	;volatile
 14248                           
 14249                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 14250  0064BA  6BC4               	clrf	196,b	;volatile
 14251                           
 14252                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 14253  0064BC  6BC5               	clrf	197,b	;volatile
 14254                           
 14255                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 14256  0064BE  6BC6               	clrf	198,b	;volatile
 14257                           
 14258                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 14259  0064C0  6BC7               	clrf	199,b	;volatile
 14260                           
 14261                           ; BSR set to: 57
 14262                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14263  0064C2  0012               	return		;funcret
 14264  0064C4                     __end_of_PMD_Initialize:
 14265                           	opt callstack 0
 14266                           
 14267 ;; *************** function _PIN_MANAGER_Initialize *****************
 14268 ;; Defined at:
 14269 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 14270 ;; Parameters:    Size  Location     Type
 14271 ;;		None
 14272 ;; Auto vars:     Size  Location     Type
 14273 ;;		None
 14274 ;; Return value:  Size  Location     Type
 14275 ;;                  1  [STACK] void 
 14276 ;; Registers used:
 14277 ;;		wreg, status,2
 14278 ;; Tracked objects:
 14279 ;;		On entry : 3F/39
 14280 ;;		On exit  : 3F/3A
 14281 ;;		Unchanged: 0/0
 14282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14287 ;;Total ram usage:        0 bytes
 14288 ;; Hardware stack levels used:    1
 14289 ;; Hardware stack levels required when called:    3
 14290 ;; This function calls:
 14291 ;;		Nothing
 14292 ;; This function is called by:
 14293 ;;		_SYSTEM_Initialize
 14294 ;; This function uses a reentrant model
 14295 ;;
 14296                           
 14297                           	psect	text68
 14298  005498                     __ptext68:
 14299                           	opt callstack 0
 14300  005498                     _PIN_MANAGER_Initialize:
 14301                           	opt callstack 26
 14302                           
 14303                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 14304                           
 14305                           ; BSR set to: 57
 14306                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14307                           ;incstack = 0
 14308  005498  0E07               	movlw	7
 14309  00549A  6EBE               	movwf	16318,c	;volatile
 14310                           
 14311                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 14312  00549C  6ABD               	clrf	16317,c	;volatile
 14313                           
 14314                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 14315  00549E  6ABA               	clrf	16314,c	;volatile
 14316                           
 14317                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 14318  0054A0  6ABF               	clrf	16319,c	;volatile
 14319                           
 14320                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 14321  0054A2  6ABB               	clrf	16315,c	;volatile
 14322                           
 14323                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 14324  0054A4  0E06               	movlw	6
 14325  0054A6  6EBC               	movwf	16316,c	;volatile
 14326                           
 14327                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 14328  0054A8  6AC6               	clrf	16326,c	;volatile
 14329                           
 14330                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 14331  0054AA  68C7               	setf	16327,c	;volatile
 14332                           
 14333                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 14334  0054AC  0E8F               	movlw	143
 14335  0054AE  6EC2               	movwf	16322,c	;volatile
 14336                           
 14337                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 14338  0054B0  0EBF               	movlw	191
 14339  0054B2  6EC3               	movwf	16323,c	;volatile
 14340                           
 14341                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 14342  0054B4  0E91               	movlw	145
 14343  0054B6  6EC4               	movwf	16324,c	;volatile
 14344                           
 14345                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 14346  0054B8  0E0C               	movlw	12
 14347  0054BA  6EC5               	movwf	16325,c	;volatile
 14348                           
 14349                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 14350  0054BC  013A               	movlb	58	; () banked
 14351  0054BE  6B70               	clrf	112,b	;volatile
 14352                           
 14353                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 14354  0054C0  0E01               	movlw	1
 14355  0054C2  6F60               	movwf	96,b	;volatile
 14356                           
 14357                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 14358  0054C4  0E38               	movlw	56
 14359  0054C6  6F50               	movwf	80,b	;volatile
 14360                           
 14361                           ; BSR set to: 58
 14362                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 14363  0054C8  6B80               	clrf	128,b	;volatile
 14364                           
 14365                           ; BSR set to: 58
 14366                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 14367  0054CA  6990               	setf	144,b	;volatile
 14368                           
 14369                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 14370  0054CC  0E8F               	movlw	143
 14371  0054CE  6F40               	movwf	64,b	;volatile
 14372                           
 14373                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0xFC;
 14374  0054D0  0EFC               	movlw	252
 14375  0054D2  6F71               	movwf	113,b	;volatile
 14376                           
 14377                           ; BSR set to: 58
 14378                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 14379  0054D4  6B91               	clrf	145,b	;volatile
 14380                           
 14381                           ; BSR set to: 58
 14382                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 14383  0054D6  6B81               	clrf	129,b	;volatile
 14384                           
 14385                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 14386  0054D8  0E87               	movlw	135
 14387  0054DA  6F51               	movwf	81,b	;volatile
 14388                           
 14389                           ; BSR set to: 58
 14390                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 14391  0054DC  6B41               	clrf	65,b	;volatile
 14392                           
 14393                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 14394  0054DE  0E90               	movlw	144
 14395  0054E0  6F61               	movwf	97,b	;volatile
 14396                           
 14397                           ; BSR set to: 58
 14398                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 14399  0054E2  6B82               	clrf	130,b	;volatile
 14400                           
 14401                           ; BSR set to: 58
 14402                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 14403  0054E4  6B92               	clrf	146,b	;volatile
 14404                           
 14405                           ; BSR set to: 58
 14406                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 14407  0054E6  6B42               	clrf	66,b	;volatile
 14408                           
 14409                           ; BSR set to: 58
 14410                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 14411  0054E8  6B52               	clrf	82,b	;volatile
 14412                           
 14413                           ; BSR set to: 58
 14414                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 14415  0054EA  6B62               	clrf	98,b	;volatile
 14416                           
 14417                           ; BSR set to: 58
 14418                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 14419  0054EC  6B72               	clrf	114,b	;volatile
 14420                           
 14421                           ; BSR set to: 58
 14422                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 14423  0054EE  6943               	setf	67,b	;volatile
 14424                           
 14425                           ; BSR set to: 58
 14426                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 14427  0054F0  6953               	setf	83,b	;volatile
 14428                           
 14429                           ; BSR set to: 58
 14430                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 14431  0054F2  6963               	setf	99,b	;volatile
 14432                           
 14433                           ; BSR set to: 58
 14434                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 14435  0054F4  6973               	setf	115,b	;volatile
 14436                           
 14437                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 14438  0054F6  0E07               	movlw	7
 14439  0054F8  6F83               	movwf	131,b	;volatile
 14440                           
 14441                           ; BSR set to: 58
 14442                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 14443  0054FA  6993               	setf	147,b	;volatile
 14444                           
 14445                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 14446  0054FC  0E0F               	movlw	15
 14447  0054FE  6FE8               	movwf	232,b	;volatile
 14448                           
 14449                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 14450  005500  0E16               	movlw	22
 14451  005502  6F0E               	movwf	14,b	;volatile
 14452                           
 14453                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 14454  005504  0E1E               	movlw	30
 14455  005506  6F13               	movwf	19,b	;volatile
 14456                           
 14457                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 14458  005508  0E08               	movlw	8
 14459  00550A  6FC0               	movwf	192,b	;volatile
 14460                           
 14461                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 14462  00550C  0E0A               	movlw	10
 14463  00550E  6FC2               	movwf	194,b	;volatile
 14464                           
 14465                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 14466  005510  0E09               	movlw	9
 14467  005512  6FC1               	movwf	193,b	;volatile
 14468                           
 14469                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 14470  005514  0E17               	movlw	23
 14471  005516  6FE5               	movwf	229,b	;volatile
 14472                           
 14473                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 14474  005518  0E13               	movlw	19
 14475  00551A  6FDE               	movwf	222,b	;volatile
 14476                           
 14477                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 14478  00551C  0E01               	movlw	1
 14479  00551E  6F04               	movwf	4,b	;volatile
 14480                           
 14481                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 14482  005520  0E26               	movlw	38
 14483  005522  6F05               	movwf	5,b	;volatile
 14484                           
 14485                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 14486  005524  0E28               	movlw	40
 14487  005526  6F06               	movwf	6,b	;volatile
 14488                           
 14489                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 14490  005528  0E1F               	movlw	31
 14491  00552A  6F15               	movwf	21,b	;volatile
 14492                           
 14493                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 14494  00552C  0E13               	movlw	19
 14495  00552E  6F16               	movwf	22,b	;volatile
 14496                           
 14497                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 14498  005530  0E14               	movlw	20
 14499  005532  6FDF               	movwf	223,b	;volatile
 14500                           
 14501                           ; BSR set to: 58
 14502                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 14503  005534  0012               	return		;funcret
 14504  005536                     __end_of_PIN_MANAGER_Initialize:
 14505                           	opt callstack 0
 14506                           
 14507 ;; *************** function _OSCILLATOR_Initialize *****************
 14508 ;; Defined at:
 14509 ;;		line 70 in file "mcc_generated_files/mcc.c"
 14510 ;; Parameters:    Size  Location     Type
 14511 ;;		None
 14512 ;; Auto vars:     Size  Location     Type
 14513 ;;		None
 14514 ;; Return value:  Size  Location     Type
 14515 ;;                  1  [STACK] void 
 14516 ;; Registers used:
 14517 ;;		wreg, status,2
 14518 ;; Tracked objects:
 14519 ;;		On entry : 3F/3A
 14520 ;;		On exit  : 3F/39
 14521 ;;		Unchanged: 0/0
 14522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14527 ;;Total ram usage:        0 bytes
 14528 ;; Hardware stack levels used:    1
 14529 ;; Hardware stack levels required when called:    3
 14530 ;; This function calls:
 14531 ;;		Nothing
 14532 ;; This function is called by:
 14533 ;;		_SYSTEM_Initialize
 14534 ;; This function uses a reentrant model
 14535 ;;
 14536                           
 14537                           	psect	text69
 14538  00649A                     __ptext69:
 14539                           	opt callstack 0
 14540  00649A                     _OSCILLATOR_Initialize:
 14541                           	opt callstack 26
 14542                           
 14543                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 14544                           
 14545                           ; BSR set to: 58
 14546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14547                           ;incstack = 0
 14548  00649A  0E20               	movlw	32
 14549  00649C  0139               	movlb	57	; () banked
 14550  00649E  6FD9               	movwf	217,b	;volatile
 14551                           
 14552                           ; BSR set to: 57
 14553                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 14554  0064A0  6BDB               	clrf	219,b	;volatile
 14555                           
 14556                           ; BSR set to: 57
 14557                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 14558  0064A2  6BDD               	clrf	221,b	;volatile
 14559                           
 14560                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 14561  0064A4  0E02               	movlw	2
 14562  0064A6  6FDF               	movwf	223,b	;volatile
 14563                           
 14564                           ; BSR set to: 57
 14565                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 14566  0064A8  6BDE               	clrf	222,b	;volatile
 14567  0064AA                     l194:
 14568                           
 14569                           ; BSR set to: 57
 14570                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 14571  0064AA  B1DC               	btfsc	220,0,b	;volatile
 14572  0064AC  0012               	return	
 14573  0064AE  D7FD               	goto	l194
 14574  0064B0                     __end_of_OSCILLATOR_Initialize:
 14575                           	opt callstack 0
 14576                           
 14577 ;; *************** function _NCO1_Initialize *****************
 14578 ;; Defined at:
 14579 ;;		line 58 in file "mcc_generated_files/nco1.c"
 14580 ;; Parameters:    Size  Location     Type
 14581 ;;		None
 14582 ;; Auto vars:     Size  Location     Type
 14583 ;;		None
 14584 ;; Return value:  Size  Location     Type
 14585 ;;                  1  [STACK] void 
 14586 ;; Registers used:
 14587 ;;		wreg, status,2
 14588 ;; Tracked objects:
 14589 ;;		On entry : 0/39
 14590 ;;		On exit  : 3F/3F
 14591 ;;		Unchanged: 0/0
 14592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14597 ;;Total ram usage:        0 bytes
 14598 ;; Hardware stack levels used:    1
 14599 ;; Hardware stack levels required when called:    3
 14600 ;; This function calls:
 14601 ;;		Nothing
 14602 ;; This function is called by:
 14603 ;;		_SYSTEM_Initialize
 14604 ;; This function uses a reentrant model
 14605 ;;
 14606                           
 14607                           	psect	text70
 14608  0063FC                     __ptext70:
 14609                           	opt callstack 0
 14610  0063FC                     _NCO1_Initialize:
 14611                           	opt callstack 26
 14612                           
 14613                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 14614                           
 14615                           ; BSR set to: 57
 14616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14617                           ;incstack = 0
 14618  0063FC  013F               	movlb	63	; () banked
 14619  0063FE  6B3E               	clrf	62,b	;volatile
 14620                           
 14621                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 14622  006400  6B3F               	clrf	63,b	;volatile
 14623                           
 14624                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 14625  006402  6B3A               	clrf	58,b	;volatile
 14626                           
 14627                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 14628  006404  6B39               	clrf	57,b	;volatile
 14629                           
 14630                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 14631  006406  6B38               	clrf	56,b	;volatile
 14632                           
 14633                           ; BSR set to: 63
 14634                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 14635  006408  0E06               	movlw	6
 14636  00640A  6F3D               	movwf	61,b	;volatile
 14637                           
 14638                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 14639  00640C  0EC7               	movlw	199
 14640  00640E  6F3C               	movwf	60,b	;volatile
 14641                           
 14642                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 14643  006410  0EAE               	movlw	174
 14644  006412  6F3B               	movwf	59,b	;volatile
 14645                           
 14646                           ; BSR set to: 63
 14647                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 14648  006414  8F3E               	bsf	62,7,b	;volatile
 14649                           
 14650                           ; BSR set to: 63
 14651                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14652  006416  0012               	return		;funcret
 14653  006418                     __end_of_NCO1_Initialize:
 14654                           	opt callstack 0
 14655                           
 14656 ;; *************** function _INTERRUPT_Initialize *****************
 14657 ;; Defined at:
 14658 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14659 ;; Parameters:    Size  Location     Type
 14660 ;;		None
 14661 ;; Auto vars:     Size  Location     Type
 14662 ;;  state           1  [STACK] _Bool 
 14663 ;; Return value:  Size  Location     Type
 14664 ;;                  1  [STACK] void 
 14665 ;; Registers used:
 14666 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 14667 ;; Tracked objects:
 14668 ;;		On entry : 0/0
 14669 ;;		On exit  : 3F/39
 14670 ;;		Unchanged: 0/0
 14671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14676 ;;Total ram usage:        0 bytes
 14677 ;; Hardware stack levels used:    1
 14678 ;; Hardware stack levels required when called:    3
 14679 ;; This function calls:
 14680 ;;		Nothing
 14681 ;; This function is called by:
 14682 ;;		_SYSTEM_Initialize
 14683 ;; This function uses a reentrant model
 14684 ;;
 14685                           
 14686                           	psect	text71
 14687  0057EA                     __ptext71:
 14688                           	opt callstack 0
 14689  0057EA                     _INTERRUPT_Initialize:
 14690                           	opt callstack 0
 14691                           
 14692                           ; BSR set to: 63
 14693                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14694  0057EA  52E6               	movf	postinc1,f,c
 14695                           
 14696                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 14697                           
 14698                           ;incstack = 0
 14699  0057EC  8AD2               	bsf	16338,5,c	;volatile
 14700                           
 14701                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 14702  0057EE  AED2               	btfss	16338,7,c	;volatile
 14703  0057F0  D003               	goto	u3300
 14704  0057F2  6A48               	clrf	btemp+11,c
 14705  0057F4  2A48               	incf	btemp+11,f,c
 14706  0057F6  D001               	goto	u3318
 14707  0057F8                     u3300:
 14708  0057F8  6A48               	clrf	btemp+11,c
 14709  0057FA                     u3318:
 14710                           
 14711                           ;stkvar	_state @ sp[(-1)+0]
 14712  0057FA  0EFF               	movlw	-1
 14713  0057FC  0060  F123  FFE3   	movff	btemp+11,plusw1
 14714                           
 14715                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 14716  005802  9ED2               	bcf	16338,7,c	;volatile
 14717                           
 14718                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 14719  005804  0E55               	movlw	85
 14720  005806  6ED4               	movwf	16340,c	;volatile
 14721                           
 14722                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 14723  005808  0EAA               	movlw	170
 14724  00580A  6ED4               	movwf	16340,c	;volatile
 14725                           
 14726                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 14727  00580C  90D4               	bcf	16340,0,c	;volatile
 14728                           
 14729                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 14730  00580E  0138               	movlb	56	; () banked
 14731  005810  6B9F               	clrf	159,b	;volatile
 14732                           
 14733                           ; BSR set to: 56
 14734                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 14735  005812  6B9E               	clrf	158,b	;volatile
 14736                           
 14737                           ; BSR set to: 56
 14738                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 14739  005814  0E08               	movlw	8
 14740  005816  6F9D               	movwf	157,b	;volatile
 14741                           
 14742                           ; BSR set to: 56
 14743                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 14744  005818  0E55               	movlw	85
 14745  00581A  6ED4               	movwf	16340,c	;volatile
 14746                           
 14747                           ; BSR set to: 56
 14748                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 14749  00581C  0EAA               	movlw	170
 14750  00581E  6ED4               	movwf	16340,c	;volatile
 14751                           
 14752                           ; BSR set to: 56
 14753                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 14754  005820  80D4               	bsf	16340,0,c	;volatile
 14755                           
 14756                           ; BSR set to: 56
 14757                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 14758                           ;stkvar	_state @ sp[(-1)+0]
 14759  005822  0EFF               	movlw	-1
 14760  005824  B0E3               	btfsc	plusw1,0,c
 14761  005826  D002               	bra	u3325
 14762  005828  9ED2               	bcf	16338,7,c	;volatile
 14763  00582A  D001               	bra	u3326
 14764  00582C                     u3325:
 14765  00582C  8ED2               	bsf	16338,7,c	;volatile
 14766  00582E                     u3326:
 14767                           
 14768                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 14769  00582E  0139               	movlb	57	; () banked
 14770  005830  8782               	bsf	130,3,b	;volatile
 14771                           
 14772                           ; BSR set to: 57
 14773                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 14774  005832  8382               	bsf	130,1,b	;volatile
 14775                           
 14776                           ; BSR set to: 57
 14777                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 14778  005834  8182               	bsf	130,0,b	;volatile
 14779                           
 14780                           ; BSR set to: 57
 14781                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 14782  005836  8582               	bsf	130,2,b	;volatile
 14783                           
 14784                           ; BSR set to: 57
 14785                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 14786  005838  8786               	bsf	134,3,b	;volatile
 14787                           
 14788                           ; BSR set to: 57
 14789                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 14790  00583A  8586               	bsf	134,2,b	;volatile
 14791                           
 14792                           ; BSR set to: 57
 14793                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 14794  00583C  8983               	bsf	131,4,b	;volatile
 14795                           
 14796                           ; BSR set to: 57
 14797                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 14798  00583E  8783               	bsf	131,3,b	;volatile
 14799                           
 14800                           ; BSR set to: 57
 14801                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 14802  005840  8181               	bsf	129,0,b	;volatile
 14803                           
 14804                           ; BSR set to: 57
 14805                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 14806  005842  8185               	bsf	133,0,b	;volatile
 14807                           
 14808                           ; BSR set to: 57
 14809                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 14810  005844  8B87               	bsf	135,5,b	;volatile
 14811                           
 14812                           ; BSR set to: 57
 14813                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 14814  005846  8189               	bsf	137,0,b	;volatile
 14815                           
 14816                           ; BSR set to: 57
 14817                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 14818  005848  8D88               	bsf	136,6,b	;volatile
 14819                           
 14820                           ; BSR set to: 57
 14821                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 14822  00584A  8581               	bsf	129,2,b	;volatile
 14823                           
 14824                           ; BSR set to: 57
 14825                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 14826  00584C  52E5               	movf	postdec1,f,c
 14827  00584E  0012               	return		;funcret
 14828  005850                     __end_of_INTERRUPT_Initialize:
 14829                           	opt callstack 0
 14830                           
 14831 ;; *************** function _EXT_INT_Initialize *****************
 14832 ;; Defined at:
 14833 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 14834 ;; Parameters:    Size  Location     Type
 14835 ;;		None
 14836 ;; Auto vars:     Size  Location     Type
 14837 ;;		None
 14838 ;; Return value:  Size  Location     Type
 14839 ;;                  1  [STACK] void 
 14840 ;; Registers used:
 14841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14842 ;; Tracked objects:
 14843 ;;		On entry : 3F/3F
 14844 ;;		On exit  : 3F/39
 14845 ;;		Unchanged: 0/0
 14846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14851 ;;Total ram usage:        0 bytes
 14852 ;; Hardware stack levels used:    1
 14853 ;; Hardware stack levels required when called:    4
 14854 ;; This function calls:
 14855 ;;		_INT0_SetInterruptHandler
 14856 ;;		_INT1_SetInterruptHandler
 14857 ;;		_INT2_SetInterruptHandler
 14858 ;; This function is called by:
 14859 ;;		_SYSTEM_Initialize
 14860 ;; This function uses a reentrant model
 14861 ;;
 14862                           
 14863                           	psect	text72
 14864  005AD2                     __ptext72:
 14865                           	opt callstack 0
 14866  005AD2                     _EXT_INT_Initialize:
 14867                           	opt callstack 25
 14868                           
 14869                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 14870                           
 14871                           ; BSR set to: 57
 14872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14873                           ;incstack = 0
 14874  005AD2  0139               	movlb	57	; () banked
 14875  005AD4  91A1               	bcf	161,0,b	;volatile
 14876                           
 14877                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 14878  005AD6  90D2               	bcf	16338,0,c	;volatile
 14879                           
 14880                           ; BSR set to: 57
 14881                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 14882  005AD8  0E72               	movlw	low _INT0_DefaultInterruptHandler
 14883  005ADA  6EE6               	movwf	postinc1,c
 14884  005ADC  0E65               	movlw	high _INT0_DefaultInterruptHandler
 14885  005ADE  6EE6               	movwf	postinc1,c
 14886  005AE0  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 14887  005AE2  6EE6               	movwf	postinc1,c
 14888  005AE4  ECD0  F030         	call	_INT0_SetInterruptHandler	;wreg free
 14889                           
 14890                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 14891  005AE8  0139               	movlb	57	; () banked
 14892  005AEA  8191               	bsf	145,0,b	;volatile
 14893                           
 14894                           ; BSR set to: 57
 14895                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 14896  005AEC  91A5               	bcf	165,0,b	;volatile
 14897                           
 14898                           ; BSR set to: 57
 14899                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 14900  005AEE  92D2               	bcf	16338,1,c	;volatile
 14901                           
 14902                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 14903  005AF0  0E74               	movlw	low _INT1_DefaultInterruptHandler
 14904  005AF2  6EE6               	movwf	postinc1,c
 14905  005AF4  0E65               	movlw	high _INT1_DefaultInterruptHandler
 14906  005AF6  6EE6               	movwf	postinc1,c
 14907  005AF8  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 14908  005AFA  6EE6               	movwf	postinc1,c
 14909  005AFC  ECBC  F030         	call	_INT1_SetInterruptHandler	;wreg free
 14910                           
 14911                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 14912  005B00  0139               	movlb	57	; () banked
 14913  005B02  8195               	bsf	149,0,b	;volatile
 14914                           
 14915                           ; BSR set to: 57
 14916                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 14917  005B04  9BA7               	bcf	167,5,b	;volatile
 14918                           
 14919                           ; BSR set to: 57
 14920                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 14921  005B06  94D2               	bcf	16338,2,c	;volatile
 14922                           
 14923                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 14924  005B08  0E76               	movlw	low _INT2_DefaultInterruptHandler
 14925  005B0A  6EE6               	movwf	postinc1,c
 14926  005B0C  0E65               	movlw	high _INT2_DefaultInterruptHandler
 14927  005B0E  6EE6               	movwf	postinc1,c
 14928  005B10  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 14929  005B12  6EE6               	movwf	postinc1,c
 14930  005B14  ECA8  F030         	call	_INT2_SetInterruptHandler	;wreg free
 14931                           
 14932                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 14933  005B18  0139               	movlb	57	; () banked
 14934  005B1A  8B97               	bsf	151,5,b	;volatile
 14935                           
 14936                           ; BSR set to: 57
 14937                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14938  005B1C  0012               	return		;funcret
 14939  005B1E                     __end_of_EXT_INT_Initialize:
 14940                           	opt callstack 0
 14941                           
 14942 ;; *************** function _INT2_SetInterruptHandler *****************
 14943 ;; Defined at:
 14944 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 14945 ;; Parameters:    Size  Location     Type
 14946 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14947 ;;		 -> INT2_DefaultInterruptHandler(1), 
 14948 ;; Auto vars:     Size  Location     Type
 14949 ;;		None
 14950 ;; Return value:  Size  Location     Type
 14951 ;;                  1  [STACK] void 
 14952 ;; Registers used:
 14953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14954 ;; Tracked objects:
 14955 ;;		On entry : 3F/39
 14956 ;;		On exit  : 0/0
 14957 ;;		Unchanged: 0/0
 14958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14963 ;;Total ram usage:        0 bytes
 14964 ;; Hardware stack levels used:    1
 14965 ;; Hardware stack levels required when called:    3
 14966 ;; This function calls:
 14967 ;;		Nothing
 14968 ;; This function is called by:
 14969 ;;		_EXT_INT_Initialize
 14970 ;; This function uses a reentrant model
 14971 ;;
 14972                           
 14973                           	psect	text73
 14974  006150                     __ptext73:
 14975                           	opt callstack 0
 14976  006150                     _INT2_SetInterruptHandler:
 14977                           	opt callstack 25
 14978                           
 14979                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 14980                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14981                           
 14982                           ; BSR set to: 57
 14983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14984                           ;incstack = 0
 14985  006150  50E1               	movf	fsr1l,w,c
 14986  006152  0FFD               	addlw	-3
 14987  006154  6ED9               	movwf	fsr2l,c
 14988  006156  50E2               	movf	fsr1h,w,c
 14989  006158  6EDA               	movwf	fsr2h,c
 14990  00615A  0EFF               	movlw	255
 14991  00615C  22DA               	addwfc	fsr2h,f,c
 14992  00615E  006F FF78  F014    	movff	postinc2,_INT2_InterruptHandler
 14993  006164  006F FF78  F015    	movff	postinc2,_INT2_InterruptHandler+1
 14994  00616A  006F FF74  F016    	movff	postdec2,_INT2_InterruptHandler+2
 14995                           
 14996                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14997  006170  52E5               	movf	postdec1,f,c
 14998  006172  52E5               	movf	postdec1,f,c
 14999  006174  52E5               	movf	postdec1,f,c
 15000  006176  0012               	return		;funcret
 15001  006178                     __end_of_INT2_SetInterruptHandler:
 15002                           	opt callstack 0
 15003                           
 15004 ;; *************** function _INT1_SetInterruptHandler *****************
 15005 ;; Defined at:
 15006 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 15007 ;; Parameters:    Size  Location     Type
 15008 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15009 ;;		 -> INT1_DefaultInterruptHandler(1), 
 15010 ;; Auto vars:     Size  Location     Type
 15011 ;;		None
 15012 ;; Return value:  Size  Location     Type
 15013 ;;                  1  [STACK] void 
 15014 ;; Registers used:
 15015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15016 ;; Tracked objects:
 15017 ;;		On entry : 3F/39
 15018 ;;		On exit  : 0/0
 15019 ;;		Unchanged: 0/0
 15020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15025 ;;Total ram usage:        0 bytes
 15026 ;; Hardware stack levels used:    1
 15027 ;; Hardware stack levels required when called:    3
 15028 ;; This function calls:
 15029 ;;		Nothing
 15030 ;; This function is called by:
 15031 ;;		_EXT_INT_Initialize
 15032 ;; This function uses a reentrant model
 15033 ;;
 15034                           
 15035                           	psect	text74
 15036  006178                     __ptext74:
 15037                           	opt callstack 0
 15038  006178                     _INT1_SetInterruptHandler:
 15039                           	opt callstack 25
 15040                           
 15041                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 15042                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15043                           
 15044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15045                           ;incstack = 0
 15046  006178  50E1               	movf	fsr1l,w,c
 15047  00617A  0FFD               	addlw	-3
 15048  00617C  6ED9               	movwf	fsr2l,c
 15049  00617E  50E2               	movf	fsr1h,w,c
 15050  006180  6EDA               	movwf	fsr2h,c
 15051  006182  0EFF               	movlw	255
 15052  006184  22DA               	addwfc	fsr2h,f,c
 15053  006186  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler
 15054  00618C  006F FF78  F018    	movff	postinc2,_INT1_InterruptHandler+1
 15055  006192  006F FF74  F019    	movff	postdec2,_INT1_InterruptHandler+2
 15056                           
 15057                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15058  006198  52E5               	movf	postdec1,f,c
 15059  00619A  52E5               	movf	postdec1,f,c
 15060  00619C  52E5               	movf	postdec1,f,c
 15061  00619E  0012               	return		;funcret
 15062  0061A0                     __end_of_INT1_SetInterruptHandler:
 15063                           	opt callstack 0
 15064                           
 15065 ;; *************** function _INT0_SetInterruptHandler *****************
 15066 ;; Defined at:
 15067 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 15068 ;; Parameters:    Size  Location     Type
 15069 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15070 ;;		 -> INT0_DefaultInterruptHandler(1), 
 15071 ;; Auto vars:     Size  Location     Type
 15072 ;;		None
 15073 ;; Return value:  Size  Location     Type
 15074 ;;                  1  [STACK] void 
 15075 ;; Registers used:
 15076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15077 ;; Tracked objects:
 15078 ;;		On entry : 3F/39
 15079 ;;		On exit  : 0/0
 15080 ;;		Unchanged: 0/0
 15081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15086 ;;Total ram usage:        0 bytes
 15087 ;; Hardware stack levels used:    1
 15088 ;; Hardware stack levels required when called:    3
 15089 ;; This function calls:
 15090 ;;		Nothing
 15091 ;; This function is called by:
 15092 ;;		_EXT_INT_Initialize
 15093 ;; This function uses a reentrant model
 15094 ;;
 15095                           
 15096                           	psect	text75
 15097  0061A0                     __ptext75:
 15098                           	opt callstack 0
 15099  0061A0                     _INT0_SetInterruptHandler:
 15100                           	opt callstack 25
 15101                           
 15102                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 15103                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15104                           
 15105                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15106                           ;incstack = 0
 15107  0061A0  50E1               	movf	fsr1l,w,c
 15108  0061A2  0FFD               	addlw	-3
 15109  0061A4  6ED9               	movwf	fsr2l,c
 15110  0061A6  50E2               	movf	fsr1h,w,c
 15111  0061A8  6EDA               	movwf	fsr2h,c
 15112  0061AA  0EFF               	movlw	255
 15113  0061AC  22DA               	addwfc	fsr2h,f,c
 15114  0061AE  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler
 15115  0061B4  006F FF78  F01B    	movff	postinc2,_INT0_InterruptHandler+1
 15116  0061BA  006F FF74  F01C    	movff	postdec2,_INT0_InterruptHandler+2
 15117                           
 15118                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15119  0061C0  52E5               	movf	postdec1,f,c
 15120  0061C2  52E5               	movf	postdec1,f,c
 15121  0061C4  52E5               	movf	postdec1,f,c
 15122  0061C6  0012               	return		;funcret
 15123  0061C8                     __end_of_INT0_SetInterruptHandler:
 15124                           	opt callstack 0
 15125                           
 15126 ;; *************** function _DSM_Initialize *****************
 15127 ;; Defined at:
 15128 ;;		line 58 in file "mcc_generated_files/dsm.c"
 15129 ;; Parameters:    Size  Location     Type
 15130 ;;		None
 15131 ;; Auto vars:     Size  Location     Type
 15132 ;;		None
 15133 ;; Return value:  Size  Location     Type
 15134 ;;                  1  [STACK] void 
 15135 ;; Registers used:
 15136 ;;		wreg, status,2
 15137 ;; Tracked objects:
 15138 ;;		On entry : 0/3C
 15139 ;;		On exit  : 3F/3C
 15140 ;;		Unchanged: 0/0
 15141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15146 ;;Total ram usage:        0 bytes
 15147 ;; Hardware stack levels used:    1
 15148 ;; Hardware stack levels required when called:    3
 15149 ;; This function calls:
 15150 ;;		Nothing
 15151 ;; This function is called by:
 15152 ;;		_SYSTEM_Initialize
 15153 ;; This function uses a reentrant model
 15154 ;;
 15155                           
 15156                           	psect	text76
 15157  006418                     __ptext76:
 15158                           	opt callstack 0
 15159  006418                     _DSM_Initialize:
 15160                           	opt callstack 26
 15161                           
 15162                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 15163                           
 15164                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15165                           ;incstack = 0
 15166  006418  013C               	movlb	60	; () banked
 15167  00641A  99FA               	bcf	250,4,b	;volatile
 15168                           
 15169                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 15170  00641C  81FB               	bsf	251,0,b	;volatile
 15171                           
 15172                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 15173  00641E  93FB               	bcf	251,1,b	;volatile
 15174                           
 15175                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 15176  006420  89FB               	bsf	251,4,b	;volatile
 15177                           
 15178                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 15179  006422  9BFB               	bcf	251,5,b	;volatile
 15180                           
 15181                           ; BSR set to: 60
 15182                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 15183  006424  0E13               	movlw	19
 15184  006426  6FFC               	movwf	252,b	;volatile
 15185                           
 15186                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 15187  006428  0E0E               	movlw	14
 15188  00642A  6FFE               	movwf	254,b	;volatile
 15189                           
 15190                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 15191  00642C  0E04               	movlw	4
 15192  00642E  6FFD               	movwf	253,b	;volatile
 15193                           
 15194                           ; BSR set to: 60
 15195                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 15196  006430  8FFA               	bsf	250,7,b	;volatile
 15197                           
 15198                           ; BSR set to: 60
 15199                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 15200  006432  0012               	return		;funcret
 15201  006434                     __end_of_DSM_Initialize:
 15202                           	opt callstack 0
 15203                           
 15204 ;; *************** function _DMA1_Initialize *****************
 15205 ;; Defined at:
 15206 ;;		line 86 in file "mcc_generated_files/dma1.c"
 15207 ;; Parameters:    Size  Location     Type
 15208 ;;		None
 15209 ;; Auto vars:     Size  Location     Type
 15210 ;;		None
 15211 ;; Return value:  Size  Location     Type
 15212 ;;                  1  [STACK] void 
 15213 ;; Registers used:
 15214 ;;		wreg, status,2
 15215 ;; Tracked objects:
 15216 ;;		On entry : 3F/3D
 15217 ;;		On exit  : 3F/3B
 15218 ;;		Unchanged: 0/0
 15219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15224 ;;Total ram usage:        0 bytes
 15225 ;; Hardware stack levels used:    1
 15226 ;; Hardware stack levels required when called:    3
 15227 ;; This function calls:
 15228 ;;		Nothing
 15229 ;; This function is called by:
 15230 ;;		_SYSTEM_Initialize
 15231 ;; This function uses a reentrant model
 15232 ;;
 15233                           
 15234                           	psect	text77
 15235  005780                     __ptext77:
 15236                           	opt callstack 0
 15237  005780                     _DMA1_Initialize:
 15238                           	opt callstack 26
 15239                           
 15240                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 15241                           
 15242                           ; BSR set to: 60
 15243                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15244                           ;incstack = 0
 15245  005780  0E00               	movlw	0
 15246  005782  013B               	movlb	59	; () banked
 15247  005784  6FF9               	movwf	249,b	;volatile
 15248  005786  0E10               	movlw	16
 15249  005788  6FFA               	movwf	250,b	;volatile
 15250  00578A  0E00               	movlw	0
 15251  00578C  6FFB               	movwf	251,b	;volatile
 15252                           
 15253                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 15254  00578E  0E3D               	movlw	61
 15255  005790  6FF1               	movwf	241,b	;volatile
 15256  005792  0E11               	movlw	17
 15257  005794  6FF0               	movwf	240,b	;volatile
 15258                           
 15259                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 15260  005796  0E03               	movlw	3
 15261  005798  6FFD               	movwf	253,b	;volatile
 15262                           
 15263                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 15264  00579A  0E00               	movlw	0
 15265  00579C  6FF8               	movwf	248,b	;volatile
 15266  00579E  0E01               	movlw	1
 15267  0057A0  6FF7               	movwf	247,b	;volatile
 15268                           
 15269                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 15270  0057A2  0E00               	movlw	0
 15271  0057A4  6FEF               	movwf	239,b	;volatile
 15272  0057A6  0E01               	movlw	1
 15273  0057A8  6FEE               	movwf	238,b	;volatile
 15274                           
 15275                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 15276  0057AA  0E15               	movlw	21
 15277  0057AC  6FFF               	movwf	255,b	;volatile
 15278                           
 15279                           ; BSR set to: 59
 15280                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 15281  0057AE  6BFE               	clrf	254,b	;volatile
 15282                           
 15283                           ; BSR set to: 59
 15284                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 15285  0057B0  0139               	movlb	57	; () banked
 15286  0057B2  93A2               	bcf	162,1,b	;volatile
 15287                           
 15288                           ; BSR set to: 57
 15289                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 15290  0057B4  91A2               	bcf	162,0,b	;volatile
 15291                           
 15292                           ; BSR set to: 57
 15293                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 15294  0057B6  97A2               	bcf	162,3,b	;volatile
 15295                           
 15296                           ; BSR set to: 57
 15297                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 15298  0057B8  95A2               	bcf	162,2,b	;volatile
 15299                           
 15300                           ; BSR set to: 57
 15301                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 15302  0057BA  8392               	bsf	146,1,b	;volatile
 15303                           
 15304                           ; BSR set to: 57
 15305                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 15306  0057BC  8192               	bsf	146,0,b	;volatile
 15307                           
 15308                           ; BSR set to: 57
 15309                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 15310  0057BE  8792               	bsf	146,3,b	;volatile
 15311                           
 15312                           ; BSR set to: 57
 15313                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 15314  0057C0  8592               	bsf	146,2,b	;volatile
 15315                           
 15316                           ; BSR set to: 57
 15317                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 15318  0057C2  6BF1               	clrf	241,b	;volatile
 15319                           
 15320                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 15321  0057C4  0E01               	movlw	1
 15322  0057C6  6FF2               	movwf	242,b	;volatile
 15323                           
 15324                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 15325  0057C8  0E04               	movlw	4
 15326  0057CA  6FF3               	movwf	243,b	;volatile
 15327                           
 15328                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 15329  0057CC  0E02               	movlw	2
 15330  0057CE  6FF4               	movwf	244,b	;volatile
 15331                           
 15332                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 15333  0057D0  0E03               	movlw	3
 15334  0057D2  6FF7               	movwf	247,b	;volatile
 15335  0057D4  9ED2               	bcf	16338,7,c	;# 
 15336  0057D6  0139               	banksel	14831	;# 
 15337  0057D8  0E55               	movlw	85	;# 
 15338  0057DA  6FEF               	movwf	14831,b	;# 
 15339  0057DC  0EAA               	movlw	170	;# 
 15340  0057DE  6FEF               	movwf	14831,b	;# 
 15341  0057E0  81EF               	bsf	14831,0,b	;# 
 15342  0057E2  8ED2               	bsf	16338,7,c	;# 
 15343                           
 15344                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 15345  0057E4  013B               	movlb	59	; () banked
 15346  0057E6  6BFC               	clrf	252,b	;volatile
 15347                           
 15348                           ; BSR set to: 59
 15349                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15350  0057E8  0012               	return		;funcret
 15351  0057EA                     __end_of_DMA1_Initialize:
 15352                           	opt callstack 0
 15353                           
 15354 ;; *************** function _CLKREF_Initialize *****************
 15355 ;; Defined at:
 15356 ;;		line 58 in file "mcc_generated_files/clkref.c"
 15357 ;; Parameters:    Size  Location     Type
 15358 ;;		None
 15359 ;; Auto vars:     Size  Location     Type
 15360 ;;		None
 15361 ;; Return value:  Size  Location     Type
 15362 ;;                  1  [STACK] void 
 15363 ;; Registers used:
 15364 ;;		wreg, status,2
 15365 ;; Tracked objects:
 15366 ;;		On entry : 3F/3B
 15367 ;;		On exit  : 3F/3C
 15368 ;;		Unchanged: 0/0
 15369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15374 ;;Total ram usage:        0 bytes
 15375 ;; Hardware stack levels used:    1
 15376 ;; Hardware stack levels required when called:    3
 15377 ;; This function calls:
 15378 ;;		Nothing
 15379 ;; This function is called by:
 15380 ;;		_SYSTEM_Initialize
 15381 ;; This function uses a reentrant model
 15382 ;;
 15383                           
 15384                           	psect	text78
 15385  006512                     __ptext78:
 15386                           	opt callstack 0
 15387  006512                     _CLKREF_Initialize:
 15388                           	opt callstack 26
 15389                           
 15390                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 15391                           
 15392                           ; BSR set to: 59
 15393                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15394                           ;incstack = 0
 15395  006512  013C               	movlb	60	; () banked
 15396  006514  6BE6               	clrf	230,b	;volatile
 15397                           
 15398                           ; BSR set to: 60
 15399                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 15400  006516  0E94               	movlw	148
 15401  006518  6FE5               	movwf	229,b	;volatile
 15402                           
 15403                           ; BSR set to: 60
 15404                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15405  00651A  0012               	return		;funcret
 15406  00651C                     __end_of_CLKREF_Initialize:
 15407                           	opt callstack 0
 15408                           
 15409 ;; *************** function _CLC1_Initialize *****************
 15410 ;; Defined at:
 15411 ;;		line 58 in file "mcc_generated_files/clc1.c"
 15412 ;; Parameters:    Size  Location     Type
 15413 ;;		None
 15414 ;; Auto vars:     Size  Location     Type
 15415 ;;		None
 15416 ;; Return value:  Size  Location     Type
 15417 ;;                  1  [STACK] void 
 15418 ;; Registers used:
 15419 ;;		wreg, status,2
 15420 ;; Tracked objects:
 15421 ;;		On entry : 0/39
 15422 ;;		On exit  : 3F/3C
 15423 ;;		Unchanged: 0/0
 15424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15429 ;;Total ram usage:        0 bytes
 15430 ;; Hardware stack levels used:    1
 15431 ;; Hardware stack levels required when called:    3
 15432 ;; This function calls:
 15433 ;;		Nothing
 15434 ;; This function is called by:
 15435 ;;		_SYSTEM_Initialize
 15436 ;; This function uses a reentrant model
 15437 ;;
 15438                           
 15439                           	psect	text79
 15440  0062FA                     __ptext79:
 15441                           	opt callstack 0
 15442  0062FA                     _CLC1_Initialize:
 15443                           	opt callstack 26
 15444                           
 15445                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 15446                           
 15447                           ; BSR set to: 60
 15448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15449                           ;incstack = 0
 15450  0062FA  013C               	movlb	60	; () banked
 15451  0062FC  6B75               	clrf	117,b	;volatile
 15452                           
 15453                           ; BSR set to: 60
 15454                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 15455  0062FE  0E04               	movlw	4
 15456  006300  6F76               	movwf	118,b	;volatile
 15457                           
 15458                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 15459  006302  0E04               	movlw	4
 15460  006304  6F77               	movwf	119,b	;volatile
 15461                           
 15462                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 15463  006306  0E04               	movlw	4
 15464  006308  6F78               	movwf	120,b	;volatile
 15465                           
 15466                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 15467  00630A  0E04               	movlw	4
 15468  00630C  6F79               	movwf	121,b	;volatile
 15469                           
 15470                           ; BSR set to: 60
 15471                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 15472  00630E  6B7A               	clrf	122,b	;volatile
 15473                           
 15474                           ; BSR set to: 60
 15475                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 15476  006310  6B7B               	clrf	123,b	;volatile
 15477                           
 15478                           ; BSR set to: 60
 15479                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 15480  006312  6B7C               	clrf	124,b	;volatile
 15481                           
 15482                           ; BSR set to: 60
 15483                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 15484  006314  6B7D               	clrf	125,b	;volatile
 15485                           
 15486                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 15487  006316  0E81               	movlw	129
 15488  006318  6F74               	movwf	116,b	;volatile
 15489                           
 15490                           ; BSR set to: 60
 15491                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15492  00631A  0012               	return		;funcret
 15493  00631C                     __end_of_CLC1_Initialize:
 15494                           	opt callstack 0
 15495                           
 15496 ;; *************** function _ADCC_Initialize *****************
 15497 ;; Defined at:
 15498 ;;		line 64 in file "mcc_generated_files/adcc.c"
 15499 ;; Parameters:    Size  Location     Type
 15500 ;;		None
 15501 ;; Auto vars:     Size  Location     Type
 15502 ;;		None
 15503 ;; Return value:  Size  Location     Type
 15504 ;;                  1  [STACK] void 
 15505 ;; Registers used:
 15506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 15507 ;; Tracked objects:
 15508 ;;		On entry : 3F/39
 15509 ;;		On exit  : 0/0
 15510 ;;		Unchanged: 0/0
 15511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15516 ;;Total ram usage:        0 bytes
 15517 ;; Hardware stack levels used:    1
 15518 ;; Hardware stack levels required when called:    4
 15519 ;; This function calls:
 15520 ;;		_ADCC_SetADIInterruptHandler
 15521 ;; This function is called by:
 15522 ;;		_SYSTEM_Initialize
 15523 ;; This function uses a reentrant model
 15524 ;;
 15525                           
 15526                           	psect	text80
 15527  005B1E                     __ptext80:
 15528                           	opt callstack 0
 15529  005B1E                     _ADCC_Initialize:
 15530                           	opt callstack 25
 15531                           
 15532                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 15533                           
 15534                           ; BSR set to: 60
 15535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15536                           ;incstack = 0
 15537  005B1E  013E               	movlb	62	; () banked
 15538  005B20  6BDE               	clrf	222,b	;volatile
 15539                           
 15540                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 15541  005B22  6BDF               	clrf	223,b	;volatile
 15542                           
 15543                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 15544  005B24  6BE0               	clrf	224,b	;volatile
 15545                           
 15546                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 15547  005B26  6BE1               	clrf	225,b	;volatile
 15548                           
 15549                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 15550  005B28  6BE4               	clrf	228,b	;volatile
 15551                           
 15552                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 15553  005B2A  6BE5               	clrf	229,b	;volatile
 15554                           
 15555                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 15556  005B2C  6BEA               	clrf	234,b	;volatile
 15557                           
 15558                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 15559  005B2E  6BEC               	clrf	236,b	;volatile
 15560                           
 15561                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 15562  005B30  6BF1               	clrf	241,b	;volatile
 15563                           
 15564                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 15565  005B32  6BF3               	clrf	243,b	;volatile
 15566                           
 15567                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 15568  005B34  6BF4               	clrf	244,b	;volatile
 15569                           
 15570                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 15571  005B36  6BF5               	clrf	245,b	;volatile
 15572                           
 15573                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 15574  005B38  6BF6               	clrf	246,b	;volatile
 15575                           
 15576                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 15577  005B3A  6BF7               	clrf	247,b	;volatile
 15578                           
 15579                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 15580  005B3C  6BF9               	clrf	249,b	;volatile
 15581                           
 15582                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 15583  005B3E  6BFA               	clrf	250,b	;volatile
 15584                           
 15585                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 15586  005B40  6BFB               	clrf	251,b	;volatile
 15587                           
 15588                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 15589  005B42  6BFC               	clrf	252,b	;volatile
 15590                           
 15591                           ; BSR set to: 62
 15592                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 15593  005B44  0E02               	movlw	2
 15594  005B46  6FFD               	movwf	253,b	;volatile
 15595                           
 15596                           ; BSR set to: 62
 15597                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 15598  005B48  6BFE               	clrf	254,b	;volatile
 15599                           
 15600                           ; BSR set to: 62
 15601                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 15602  005B4A  6BFF               	clrf	255,b	;volatile
 15603                           
 15604                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 15605  005B4C  0E94               	movlw	148
 15606  005B4E  6FF8               	movwf	248,b	;volatile
 15607                           
 15608                           ; BSR set to: 62
 15609                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 15610  005B50  0139               	movlb	57	; () banked
 15611  005B52  95A1               	bcf	161,2,b	;volatile
 15612                           
 15613                           ; BSR set to: 57
 15614                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 15615  005B54  8591               	bsf	145,2,b	;volatile
 15616                           
 15617                           ; BSR set to: 57
 15618                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 15619  005B56  0E78               	movlw	low _ADCC_DefaultInterruptHandler
 15620  005B58  6EE6               	movwf	postinc1,c
 15621  005B5A  0E65               	movlw	high _ADCC_DefaultInterruptHandler
 15622  005B5C  6EE6               	movwf	postinc1,c
 15623  005B5E  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 15624  005B60  6EE6               	movwf	postinc1,c
 15625  005B62  ECE4  F030         	call	_ADCC_SetADIInterruptHandler	;wreg free
 15626                           
 15627                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15628  005B66  0012               	return		;funcret
 15629  005B68                     __end_of_ADCC_Initialize:
 15630                           	opt callstack 0
 15631                           
 15632 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 15633 ;; Defined at:
 15634 ;;		line 316 in file "mcc_generated_files/adcc.c"
 15635 ;; Parameters:    Size  Location     Type
 15636 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15637 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 15638 ;; Auto vars:     Size  Location     Type
 15639 ;;		None
 15640 ;; Return value:  Size  Location     Type
 15641 ;;                  1  [STACK] void 
 15642 ;; Registers used:
 15643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15644 ;; Tracked objects:
 15645 ;;		On entry : 3F/39
 15646 ;;		On exit  : 0/0
 15647 ;;		Unchanged: 0/0
 15648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15653 ;;Total ram usage:        0 bytes
 15654 ;; Hardware stack levels used:    1
 15655 ;; Hardware stack levels required when called:    3
 15656 ;; This function calls:
 15657 ;;		Nothing
 15658 ;; This function is called by:
 15659 ;;		_ADCC_Initialize
 15660 ;; This function uses a reentrant model
 15661 ;;
 15662                           
 15663                           	psect	text81
 15664  0061C8                     __ptext81:
 15665                           	opt callstack 0
 15666  0061C8                     _ADCC_SetADIInterruptHandler:
 15667                           	opt callstack 25
 15668                           
 15669                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 15670                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15671                           
 15672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15673                           ;incstack = 0
 15674  0061C8  50E1               	movf	fsr1l,w,c
 15675  0061CA  0FFD               	addlw	-3
 15676  0061CC  6ED9               	movwf	fsr2l,c
 15677  0061CE  50E2               	movf	fsr1h,w,c
 15678  0061D0  6EDA               	movwf	fsr2h,c
 15679  0061D2  0EFF               	movlw	255
 15680  0061D4  22DA               	addwfc	fsr2h,f,c
 15681  0061D6  006F FF78  F0F8    	movff	postinc2,_ADCC_ADI_InterruptHandler
 15682  0061DC  006F FF78  F0F9    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 15683  0061E2  006F FF74  F0FA    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 15684                           
 15685                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 15686  0061E8  52E5               	movf	postdec1,f,c
 15687  0061EA  52E5               	movf	postdec1,f,c
 15688  0061EC  52E5               	movf	postdec1,f,c
 15689  0061EE  0012               	return		;funcret
 15690  0061F0                     __end_of_ADCC_SetADIInterruptHandler:
 15691                           	opt callstack 0
 15692                           
 15693 ;; *************** function _INT0_ISR *****************
 15694 ;; Defined at:
 15695 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 15696 ;; Parameters:    Size  Location     Type
 15697 ;;		None
 15698 ;; Auto vars:     Size  Location     Type
 15699 ;;		None
 15700 ;; Return value:  Size  Location     Type
 15701 ;;                  1    wreg      void 
 15702 ;; Registers used:
 15703 ;;		wreg, status,2, status,0, pclath, tosl
 15704 ;; Tracked objects:
 15705 ;;		On entry : 0/0
 15706 ;;		On exit  : 0/0
 15707 ;;		Unchanged: 0/0
 15708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15713 ;;Total ram usage:        0 bytes
 15714 ;; Hardware stack levels used:    1
 15715 ;; Hardware stack levels required when called:    2
 15716 ;; This function calls:
 15717 ;;		_INT0_CallBack
 15718 ;; This function is called by:
 15719 ;;		Interrupt level 2
 15720 ;; This function uses a non-reentrant model
 15721 ;;
 15722                           
 15723                           	psect	text82
 15724  0064E4                     __ptext82:
 15725                           	opt callstack 0
 15726  0064E4                     _INT0_ISR:
 15727                           	opt callstack 17
 15728                           
 15729                           ;incstack = 0
 15730  0064E4  EE13  F1D6         	lfsr	1,___inthi_sp
 15731                           
 15732                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 15733  0064E8  0139               	movlb	57	; () banked
 15734  0064EA  91A1               	bcf	161,0,b	;volatile
 15735                           
 15736                           ; BSR set to: 57
 15737                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 15738  0064EC  EC8E  F031         	call	_INT0_CallBack	;wreg free
 15739  0064F0  0011               	retfie		f
 15740  0064F2                     __end_of_INT0_ISR:
 15741                           	opt callstack 0
 15742                           
 15743 ;; *************** function _INT0_CallBack *****************
 15744 ;; Defined at:
 15745 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 15746 ;; Parameters:    Size  Location     Type
 15747 ;;		None
 15748 ;; Auto vars:     Size  Location     Type
 15749 ;;		None
 15750 ;; Return value:  Size  Location     Type
 15751 ;;                  1  [STACK] void 
 15752 ;; Registers used:
 15753 ;;		wreg, status,2, status,0, pclath, tosl
 15754 ;; Tracked objects:
 15755 ;;		On entry : 3F/39
 15756 ;;		On exit  : 0/0
 15757 ;;		Unchanged: 0/0
 15758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15763 ;;Total ram usage:        0 bytes
 15764 ;; Hardware stack levels used:    1
 15765 ;; Hardware stack levels required when called:    1
 15766 ;; This function calls:
 15767 ;;		Absolute function
 15768 ;;		_INT0_DefaultInterruptHandler
 15769 ;; This function is called by:
 15770 ;;		_INT0_ISR
 15771 ;; This function uses a reentrant model
 15772 ;;
 15773                           
 15774                           	psect	text83
 15775  00631C                     __ptext83:
 15776                           	opt callstack 0
 15777  00631C                     _INT0_CallBack:
 15778                           	opt callstack 17
 15779                           
 15780                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 15781                           
 15782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15783                           ;incstack = 0
 15784  00631C  501A               	movf	_INT0_InterruptHandler,w,c
 15785  00631E  101B               	iorwf	_INT0_InterruptHandler+1,w,c
 15786  006320  101C               	iorwf	_INT0_InterruptHandler+2,w,c
 15787  006322  B4D8               	btfsc	status,2,c
 15788  006324  0012               	return	
 15789                           
 15790                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 15791  006326  D801               	call	u125_48
 15792  006328  0012               	return	
 15793  00632A                     u125_48:
 15794  00632A  0005               	push	
 15795  00632C  6EFA               	movwf	pclath,c
 15796  00632E  501A               	movf	_INT0_InterruptHandler,w,c
 15797  006330  6EFD               	movwf	tosl,c
 15798  006332  501B               	movf	_INT0_InterruptHandler+1,w,c
 15799  006334  6EFE               	movwf	tosh,c
 15800  006336  501C               	movf	_INT0_InterruptHandler+2,w,c
 15801  006338  6EFF               	movwf	tosu,c
 15802  00633A  50FA               	movf	pclath,w,c
 15803  00633C  0012               	return		;indir
 15804  00633E                     __end_of_INT0_CallBack:
 15805                           	opt callstack 0
 15806                           
 15807 ;; *************** function _INT0_DefaultInterruptHandler *****************
 15808 ;; Defined at:
 15809 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 15810 ;; Parameters:    Size  Location     Type
 15811 ;;		None
 15812 ;; Auto vars:     Size  Location     Type
 15813 ;;		None
 15814 ;; Return value:  Size  Location     Type
 15815 ;;                  1  [STACK] void 
 15816 ;; Registers used:
 15817 ;;		None
 15818 ;; Tracked objects:
 15819 ;;		On entry : 0/39
 15820 ;;		On exit  : 0/0
 15821 ;;		Unchanged: 0/0
 15822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15827 ;;Total ram usage:        0 bytes
 15828 ;; Hardware stack levels used:    1
 15829 ;; This function calls:
 15830 ;;		Nothing
 15831 ;; This function is called by:
 15832 ;;		_EXT_INT_Initialize
 15833 ;;		_INT0_CallBack
 15834 ;; This function uses a reentrant model
 15835 ;;
 15836                           
 15837                           	psect	text84
 15838  006572                     __ptext84:
 15839                           	opt callstack 0
 15840  006572                     _INT0_DefaultInterruptHandler:
 15841                           	opt callstack 17
 15842                           
 15843                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15844                           
 15845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15846                           ;incstack = 0
 15847  006572  0012               	return		;funcret
 15848  006574                     __end_of_INT0_DefaultInterruptHandler:
 15849                           	opt callstack 0
 15850                           
 15851 ;; *************** function _INT1_ISR *****************
 15852 ;; Defined at:
 15853 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 15854 ;; Parameters:    Size  Location     Type
 15855 ;;		None
 15856 ;; Auto vars:     Size  Location     Type
 15857 ;;		None
 15858 ;; Return value:  Size  Location     Type
 15859 ;;                  1    wreg      void 
 15860 ;; Registers used:
 15861 ;;		wreg, status,2, status,0, pclath, tosl
 15862 ;; Tracked objects:
 15863 ;;		On entry : 0/0
 15864 ;;		On exit  : 0/0
 15865 ;;		Unchanged: 0/0
 15866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15871 ;;Total ram usage:        0 bytes
 15872 ;; Hardware stack levels used:    1
 15873 ;; Hardware stack levels required when called:    2
 15874 ;; This function calls:
 15875 ;;		_INT1_CallBack
 15876 ;; This function is called by:
 15877 ;;		Interrupt level 2
 15878 ;; This function uses a non-reentrant model
 15879 ;;
 15880                           
 15881                           	psect	text85
 15882  0064F4                     __ptext85:
 15883                           	opt callstack 0
 15884  0064F4                     _INT1_ISR:
 15885                           	opt callstack 17
 15886                           
 15887                           ;incstack = 0
 15888  0064F4  EE13  F1D6         	lfsr	1,___inthi_sp
 15889                           
 15890                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 15891  0064F8  0139               	movlb	57	; () banked
 15892  0064FA  91A5               	bcf	165,0,b	;volatile
 15893                           
 15894                           ; BSR set to: 57
 15895                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 15896  0064FC  EC9F  F031         	call	_INT1_CallBack	;wreg free
 15897  006500  0011               	retfie		f
 15898  006502                     __end_of_INT1_ISR:
 15899                           	opt callstack 0
 15900                           
 15901 ;; *************** function _INT1_CallBack *****************
 15902 ;; Defined at:
 15903 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 15904 ;; Parameters:    Size  Location     Type
 15905 ;;		None
 15906 ;; Auto vars:     Size  Location     Type
 15907 ;;		None
 15908 ;; Return value:  Size  Location     Type
 15909 ;;                  1  [STACK] void 
 15910 ;; Registers used:
 15911 ;;		wreg, status,2, status,0, pclath, tosl
 15912 ;; Tracked objects:
 15913 ;;		On entry : 3F/39
 15914 ;;		On exit  : 0/0
 15915 ;;		Unchanged: 0/0
 15916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15921 ;;Total ram usage:        0 bytes
 15922 ;; Hardware stack levels used:    1
 15923 ;; Hardware stack levels required when called:    1
 15924 ;; This function calls:
 15925 ;;		Absolute function
 15926 ;;		_INT1_DefaultInterruptHandler
 15927 ;; This function is called by:
 15928 ;;		_INT1_ISR
 15929 ;; This function uses a reentrant model
 15930 ;;
 15931                           
 15932                           	psect	text86
 15933  00633E                     __ptext86:
 15934                           	opt callstack 0
 15935  00633E                     _INT1_CallBack:
 15936                           	opt callstack 17
 15937                           
 15938                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 15939                           
 15940                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15941                           ;incstack = 0
 15942  00633E  5017               	movf	_INT1_InterruptHandler,w,c
 15943  006340  1018               	iorwf	_INT1_InterruptHandler+1,w,c
 15944  006342  1019               	iorwf	_INT1_InterruptHandler+2,w,c
 15945  006344  B4D8               	btfsc	status,2,c
 15946  006346  0012               	return	
 15947                           
 15948                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 15949  006348  D801               	call	u127_48
 15950  00634A  0012               	return	
 15951  00634C                     u127_48:
 15952  00634C  0005               	push	
 15953  00634E  6EFA               	movwf	pclath,c
 15954  006350  5017               	movf	_INT1_InterruptHandler,w,c
 15955  006352  6EFD               	movwf	tosl,c
 15956  006354  5018               	movf	_INT1_InterruptHandler+1,w,c
 15957  006356  6EFE               	movwf	tosh,c
 15958  006358  5019               	movf	_INT1_InterruptHandler+2,w,c
 15959  00635A  6EFF               	movwf	tosu,c
 15960  00635C  50FA               	movf	pclath,w,c
 15961  00635E  0012               	return		;indir
 15962  006360                     __end_of_INT1_CallBack:
 15963                           	opt callstack 0
 15964                           
 15965 ;; *************** function _INT1_DefaultInterruptHandler *****************
 15966 ;; Defined at:
 15967 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 15968 ;; Parameters:    Size  Location     Type
 15969 ;;		None
 15970 ;; Auto vars:     Size  Location     Type
 15971 ;;		None
 15972 ;; Return value:  Size  Location     Type
 15973 ;;                  1  [STACK] void 
 15974 ;; Registers used:
 15975 ;;		None
 15976 ;; Tracked objects:
 15977 ;;		On entry : 0/39
 15978 ;;		On exit  : 0/0
 15979 ;;		Unchanged: 0/0
 15980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15985 ;;Total ram usage:        0 bytes
 15986 ;; Hardware stack levels used:    1
 15987 ;; This function calls:
 15988 ;;		Nothing
 15989 ;; This function is called by:
 15990 ;;		_EXT_INT_Initialize
 15991 ;;		_INT1_CallBack
 15992 ;; This function uses a reentrant model
 15993 ;;
 15994                           
 15995                           	psect	text87
 15996  006574                     __ptext87:
 15997                           	opt callstack 0
 15998  006574                     _INT1_DefaultInterruptHandler:
 15999                           	opt callstack 17
 16000                           
 16001                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16002                           
 16003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16004                           ;incstack = 0
 16005  006574  0012               	return		;funcret
 16006  006576                     __end_of_INT1_DefaultInterruptHandler:
 16007                           	opt callstack 0
 16008                           
 16009 ;; *************** function _INT2_ISR *****************
 16010 ;; Defined at:
 16011 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 16012 ;; Parameters:    Size  Location     Type
 16013 ;;		None
 16014 ;; Auto vars:     Size  Location     Type
 16015 ;;		None
 16016 ;; Return value:  Size  Location     Type
 16017 ;;                  1    wreg      void 
 16018 ;; Registers used:
 16019 ;;		wreg, status,2, status,0, pclath, tosl
 16020 ;; Tracked objects:
 16021 ;;		On entry : 0/0
 16022 ;;		On exit  : 0/0
 16023 ;;		Unchanged: 0/0
 16024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16029 ;;Total ram usage:        0 bytes
 16030 ;; Hardware stack levels used:    1
 16031 ;; Hardware stack levels required when called:    2
 16032 ;; This function calls:
 16033 ;;		_INT2_CallBack
 16034 ;; This function is called by:
 16035 ;;		Interrupt level 2
 16036 ;; This function uses a non-reentrant model
 16037 ;;
 16038                           
 16039                           	psect	text88
 16040  006504                     __ptext88:
 16041                           	opt callstack 0
 16042  006504                     _INT2_ISR:
 16043                           	opt callstack 17
 16044                           
 16045                           ;incstack = 0
 16046  006504  EE13  F1D6         	lfsr	1,___inthi_sp
 16047                           
 16048                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 16049  006508  0139               	movlb	57	; () banked
 16050  00650A  9BA7               	bcf	167,5,b	;volatile
 16051                           
 16052                           ; BSR set to: 57
 16053                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 16054  00650C  ECB0  F031         	call	_INT2_CallBack	;wreg free
 16055  006510  0011               	retfie		f
 16056  006512                     __end_of_INT2_ISR:
 16057                           	opt callstack 0
 16058                           
 16059 ;; *************** function _INT2_CallBack *****************
 16060 ;; Defined at:
 16061 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 16062 ;; Parameters:    Size  Location     Type
 16063 ;;		None
 16064 ;; Auto vars:     Size  Location     Type
 16065 ;;		None
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  1  [STACK] void 
 16068 ;; Registers used:
 16069 ;;		wreg, status,2, status,0, pclath, tosl
 16070 ;; Tracked objects:
 16071 ;;		On entry : 3F/39
 16072 ;;		On exit  : 0/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16079 ;;Total ram usage:        0 bytes
 16080 ;; Hardware stack levels used:    1
 16081 ;; Hardware stack levels required when called:    1
 16082 ;; This function calls:
 16083 ;;		Absolute function
 16084 ;;		_INT2_DefaultInterruptHandler
 16085 ;; This function is called by:
 16086 ;;		_INT2_ISR
 16087 ;; This function uses a reentrant model
 16088 ;;
 16089                           
 16090                           	psect	text89
 16091  006360                     __ptext89:
 16092                           	opt callstack 0
 16093  006360                     _INT2_CallBack:
 16094                           	opt callstack 17
 16095                           
 16096                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 16097                           
 16098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16099                           ;incstack = 0
 16100  006360  5014               	movf	_INT2_InterruptHandler,w,c
 16101  006362  1015               	iorwf	_INT2_InterruptHandler+1,w,c
 16102  006364  1016               	iorwf	_INT2_InterruptHandler+2,w,c
 16103  006366  B4D8               	btfsc	status,2,c
 16104  006368  0012               	return	
 16105                           
 16106                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 16107  00636A  D801               	call	u129_48
 16108  00636C  0012               	return	
 16109  00636E                     u129_48:
 16110  00636E  0005               	push	
 16111  006370  6EFA               	movwf	pclath,c
 16112  006372  5014               	movf	_INT2_InterruptHandler,w,c
 16113  006374  6EFD               	movwf	tosl,c
 16114  006376  5015               	movf	_INT2_InterruptHandler+1,w,c
 16115  006378  6EFE               	movwf	tosh,c
 16116  00637A  5016               	movf	_INT2_InterruptHandler+2,w,c
 16117  00637C  6EFF               	movwf	tosu,c
 16118  00637E  50FA               	movf	pclath,w,c
 16119  006380  0012               	return		;indir
 16120  006382                     __end_of_INT2_CallBack:
 16121                           	opt callstack 0
 16122                           
 16123 ;; *************** function _INT2_DefaultInterruptHandler *****************
 16124 ;; Defined at:
 16125 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 16126 ;; Parameters:    Size  Location     Type
 16127 ;;		None
 16128 ;; Auto vars:     Size  Location     Type
 16129 ;;		None
 16130 ;; Return value:  Size  Location     Type
 16131 ;;                  1  [STACK] void 
 16132 ;; Registers used:
 16133 ;;		None
 16134 ;; Tracked objects:
 16135 ;;		On entry : 0/39
 16136 ;;		On exit  : 0/0
 16137 ;;		Unchanged: 0/0
 16138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16143 ;;Total ram usage:        0 bytes
 16144 ;; Hardware stack levels used:    1
 16145 ;; This function calls:
 16146 ;;		Nothing
 16147 ;; This function is called by:
 16148 ;;		_EXT_INT_Initialize
 16149 ;;		_INT2_CallBack
 16150 ;; This function uses a reentrant model
 16151 ;;
 16152                           
 16153                           	psect	text90
 16154  006576                     __ptext90:
 16155                           	opt callstack 0
 16156  006576                     _INT2_DefaultInterruptHandler:
 16157                           	opt callstack 17
 16158                           
 16159                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16160                           
 16161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16162                           ;incstack = 0
 16163  006576  0012               	return		;funcret
 16164  006578                     __end_of_INT2_DefaultInterruptHandler:
 16165                           	opt callstack 0
 16166                           
 16167 ;; *************** function _Default_ISR *****************
 16168 ;; Defined at:
 16169 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 16170 ;; Parameters:    Size  Location     Type
 16171 ;;		None
 16172 ;; Auto vars:     Size  Location     Type
 16173 ;;		None
 16174 ;; Return value:  Size  Location     Type
 16175 ;;                  1    wreg      void 
 16176 ;; Registers used:
 16177 ;;		None
 16178 ;; Tracked objects:
 16179 ;;		On entry : 0/0
 16180 ;;		On exit  : 0/0
 16181 ;;		Unchanged: 0/0
 16182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16187 ;;Total ram usage:        0 bytes
 16188 ;; Hardware stack levels used:    1
 16189 ;; This function calls:
 16190 ;;		Nothing
 16191 ;; This function is called by:
 16192 ;;		Interrupt level 2
 16193 ;; This function uses a non-reentrant model
 16194 ;;
 16195                           
 16196                           	psect	text91
 16197  00656C                     __ptext91:
 16198                           	opt callstack 0
 16199  00656C                     _Default_ISR:
 16200                           	opt callstack 19
 16201                           
 16202                           ;incstack = 0
 16203  00656C  EE13  F1D6         	lfsr	1,___inthi_sp
 16204  006570  0011               	retfie		f
 16205  006572                     __end_of_Default_ISR:
 16206                           	opt callstack 0
 16207                           
 16208 ;; *************** function _ADCC_ISR *****************
 16209 ;; Defined at:
 16210 ;;		line 307 in file "mcc_generated_files/adcc.c"
 16211 ;; Parameters:    Size  Location     Type
 16212 ;;		None
 16213 ;; Auto vars:     Size  Location     Type
 16214 ;;		None
 16215 ;; Return value:  Size  Location     Type
 16216 ;;                  1    wreg      void 
 16217 ;; Registers used:
 16218 ;;		wreg, status,2, status,0, pclath, tosl
 16219 ;; Tracked objects:
 16220 ;;		On entry : 0/0
 16221 ;;		On exit  : 0/0
 16222 ;;		Unchanged: 0/0
 16223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16228 ;;Total ram usage:        0 bytes
 16229 ;; Hardware stack levels used:    1
 16230 ;; Hardware stack levels required when called:    1
 16231 ;; This function calls:
 16232 ;;		Absolute function
 16233 ;;		_ADCC_DefaultInterruptHandler
 16234 ;; This function is called by:
 16235 ;;		Interrupt level 2
 16236 ;; This function uses a non-reentrant model
 16237 ;;
 16238                           
 16239                           	psect	text92
 16240  005EC0                     __ptext92:
 16241                           	opt callstack 0
 16242  005EC0                     _ADCC_ISR:
 16243                           	opt callstack 18
 16244                           
 16245                           ;incstack = 0
 16246  005EC0  EE13  F1D6         	lfsr	1,___inthi_sp
 16247                           
 16248                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 16249  005EC4  0139               	movlb	57	; () banked
 16250  005EC6  95A1               	bcf	161,2,b	;volatile
 16251                           
 16252                           ; BSR set to: 57
 16253                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 16254  005EC8  0100               	movlb	0	; () banked
 16255  005ECA  51F8               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 16256  005ECC  11F9               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 16257  005ECE  11FA               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 16258  005ED0  B4D8               	btfsc	status,2,c
 16259  005ED2  0011               	retfie		f
 16260                           
 16261                           ; BSR set to: 0
 16262                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 16263  005ED4  D801               	call	i2u431_48
 16264  005ED6  0011               	retfie		f
 16265  005ED8                     i2u431_48:
 16266  005ED8  0005               	push	
 16267  005EDA  6EFA               	movwf	pclath,c
 16268  005EDC  51F8               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 16269  005EDE  6EFD               	movwf	tosl,c
 16270  005EE0  51F9               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 16271  005EE2  6EFE               	movwf	tosh,c
 16272  005EE4  51FA               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 16273  005EE6  6EFF               	movwf	tosu,c
 16274  005EE8  50FA               	movf	pclath,w,c
 16275  005EEA  0012               	return		;indir
 16276  005EEC                     __end_of_ADCC_ISR:
 16277                           	opt callstack 0
 16278                           
 16279 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 16280 ;; Defined at:
 16281 ;;		line 320 in file "mcc_generated_files/adcc.c"
 16282 ;; Parameters:    Size  Location     Type
 16283 ;;		None
 16284 ;; Auto vars:     Size  Location     Type
 16285 ;;		None
 16286 ;; Return value:  Size  Location     Type
 16287 ;;                  1  [STACK] void 
 16288 ;; Registers used:
 16289 ;;		None
 16290 ;; Tracked objects:
 16291 ;;		On entry : 3F/0
 16292 ;;		On exit  : 0/0
 16293 ;;		Unchanged: 0/0
 16294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16299 ;;Total ram usage:        0 bytes
 16300 ;; Hardware stack levels used:    1
 16301 ;; This function calls:
 16302 ;;		Nothing
 16303 ;; This function is called by:
 16304 ;;		_ADCC_Initialize
 16305 ;;		_ADCC_ISR
 16306 ;; This function uses a reentrant model
 16307 ;;
 16308                           
 16309                           	psect	text93
 16310  006578                     __ptext93:
 16311                           	opt callstack 0
 16312  006578                     _ADCC_DefaultInterruptHandler:
 16313                           	opt callstack 18
 16314                           
 16315                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16316                           
 16317                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16318                           ;incstack = 0
 16319  006578  0012               	return		;funcret
 16320  00657A                     __end_of_ADCC_DefaultInterruptHandler:
 16321                           	opt callstack 0
 16322                           
 16323 ;; *************** function _UART1_tx_vect_isr *****************
 16324 ;; Defined at:
 16325 ;;		line 197 in file "mcc_generated_files/uart1.c"
 16326 ;; Parameters:    Size  Location     Type
 16327 ;;		None
 16328 ;; Auto vars:     Size  Location     Type
 16329 ;;		None
 16330 ;; Return value:  Size  Location     Type
 16331 ;;                  1    wreg      void 
 16332 ;; Registers used:
 16333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16334 ;; Tracked objects:
 16335 ;;		On entry : 0/0
 16336 ;;		On exit  : 0/0
 16337 ;;		Unchanged: 0/0
 16338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16343 ;;Total ram usage:        0 bytes
 16344 ;; Hardware stack levels used:    1
 16345 ;; Hardware stack levels required when called:    1
 16346 ;; This function calls:
 16347 ;;		Absolute function
 16348 ;;		_UART1_Transmit_ISR
 16349 ;; This function is called by:
 16350 ;;		Interrupt level 2
 16351 ;; This function uses a non-reentrant model
 16352 ;;
 16353                           
 16354                           	psect	text94
 16355  0061F0                     __ptext94:
 16356                           	opt callstack 0
 16357  0061F0                     _UART1_tx_vect_isr:
 16358                           	opt callstack 18
 16359                           
 16360                           ;incstack = 0
 16361  0061F0  EE13  F1D6         	lfsr	1,___inthi_sp
 16362                           
 16363                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 16364  0061F4  5008               	movf	_UART1_TxInterruptHandler,w,c
 16365  0061F6  1009               	iorwf	_UART1_TxInterruptHandler+1,w,c
 16366  0061F8  100A               	iorwf	_UART1_TxInterruptHandler+2,w,c
 16367  0061FA  B4D8               	btfsc	status,2,c
 16368  0061FC  0011               	retfie		f
 16369                           
 16370                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 16371  0061FE  D801               	call	i2u433_48
 16372  006200  0011               	retfie		f
 16373  006202                     i2u433_48:
 16374  006202  0005               	push	
 16375  006204  6EFA               	movwf	pclath,c
 16376  006206  5008               	movf	_UART1_TxInterruptHandler,w,c
 16377  006208  6EFD               	movwf	tosl,c
 16378  00620A  5009               	movf	_UART1_TxInterruptHandler+1,w,c
 16379  00620C  6EFE               	movwf	tosh,c
 16380  00620E  500A               	movf	_UART1_TxInterruptHandler+2,w,c
 16381  006210  6EFF               	movwf	tosu,c
 16382  006212  50FA               	movf	pclath,w,c
 16383  006214  0012               	return		;indir
 16384  006216                     __end_of_UART1_tx_vect_isr:
 16385                           	opt callstack 0
 16386                           
 16387 ;; *************** function _UART1_Transmit_ISR *****************
 16388 ;; Defined at:
 16389 ;;		line 211 in file "mcc_generated_files/uart1.c"
 16390 ;; Parameters:    Size  Location     Type
 16391 ;;		None
 16392 ;; Auto vars:     Size  Location     Type
 16393 ;;		None
 16394 ;; Return value:  Size  Location     Type
 16395 ;;                  1  [STACK] void 
 16396 ;; Registers used:
 16397 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16398 ;; Tracked objects:
 16399 ;;		On entry : 0/0
 16400 ;;		On exit  : 3B/39
 16401 ;;		Unchanged: 0/0
 16402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16407 ;;Total ram usage:        0 bytes
 16408 ;; Hardware stack levels used:    1
 16409 ;; This function calls:
 16410 ;;		Nothing
 16411 ;; This function is called by:
 16412 ;;		_UART1_Initialize
 16413 ;;		_UART1_tx_vect_isr
 16414 ;; This function uses a reentrant model
 16415 ;;
 16416                           
 16417                           	psect	text95
 16418  005EEC                     __ptext95:
 16419                           	opt callstack 0
 16420  005EEC                     _UART1_Transmit_ISR:
 16421                           	opt callstack 18
 16422                           
 16423                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 16424                           
 16425                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16426                           ;incstack = 0
 16427  005EEC  0E40               	movlw	64
 16428  005EEE  603A               	cpfslt	_uart1TxBufferRemaining,c
 16429  005EF0  D010               	goto	l597
 16430                           
 16431                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 16432  005EF2  0EC0               	movlw	low _uart1TxBuffer
 16433  005EF4  243B               	addwf	_uart1TxTail,w,c	;volatile
 16434  005EF6  6ED9               	movwf	fsr2l,c
 16435  005EF8  6ADA               	clrf	fsr2h,c
 16436  005EFA  0E02               	movlw	high _uart1TxBuffer
 16437  005EFC  22DA               	addwfc	fsr2h,f,c
 16438  005EFE  50DF               	movf	indf2,w,c
 16439  005F00  013D               	movlb	61	; () banked
 16440  005F02  6FEA               	movwf	234,b	;volatile
 16441                           
 16442                           ; BSR set to: 61
 16443  005F04  2A3B               	incf	_uart1TxTail,f,c	;volatile
 16444                           
 16445                           ; BSR set to: 61
 16446                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 16447  005F06  0E3F               	movlw	63
 16448  005F08  643B               	cpfsgt	_uart1TxTail,c
 16449  005F0A  D001               	goto	l6703
 16450                           
 16451                           ; BSR set to: 61
 16452                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 16453  005F0C  6A3B               	clrf	_uart1TxTail,c	;volatile
 16454  005F0E                     l6703:
 16455                           
 16456                           ; BSR set to: 61
 16457                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 16458  005F0E  2A3A               	incf	_uart1TxBufferRemaining,f,c	;volatile
 16459                           
 16460                           ;mcc_generated_files/uart1.c: 220:  } else {
 16461  005F10  0012               	return	
 16462  005F12                     l597:
 16463                           
 16464                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 16465  005F12  0139               	movlb	57	; () banked
 16466  005F14  9993               	bcf	147,4,b	;volatile
 16467                           
 16468                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16469  005F16  0012               	return		;funcret
 16470  005F18                     __end_of_UART1_Transmit_ISR:
 16471                           	opt callstack 0
 16472                           
 16473 ;; *************** function _UART1_rx_vect_isr *****************
 16474 ;; Defined at:
 16475 ;;		line 204 in file "mcc_generated_files/uart1.c"
 16476 ;; Parameters:    Size  Location     Type
 16477 ;;		None
 16478 ;; Auto vars:     Size  Location     Type
 16479 ;;		None
 16480 ;; Return value:  Size  Location     Type
 16481 ;;                  1    wreg      void 
 16482 ;; Registers used:
 16483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16484 ;; Tracked objects:
 16485 ;;		On entry : 0/0
 16486 ;;		On exit  : 0/0
 16487 ;;		Unchanged: 0/0
 16488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16493 ;;Total ram usage:        0 bytes
 16494 ;; Hardware stack levels used:    1
 16495 ;; Hardware stack levels required when called:    1
 16496 ;; This function calls:
 16497 ;;		Absolute function
 16498 ;;		_UART1_Receive_ISR
 16499 ;; This function is called by:
 16500 ;;		Interrupt level 2
 16501 ;; This function uses a non-reentrant model
 16502 ;;
 16503                           
 16504                           	psect	text96
 16505  006218                     __ptext96:
 16506                           	opt callstack 0
 16507  006218                     _UART1_rx_vect_isr:
 16508                           	opt callstack 18
 16509                           
 16510                           ;incstack = 0
 16511  006218  EE13  F1D6         	lfsr	1,___inthi_sp
 16512                           
 16513                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 16514  00621C  500B               	movf	_UART1_RxInterruptHandler,w,c
 16515  00621E  100C               	iorwf	_UART1_RxInterruptHandler+1,w,c
 16516  006220  100D               	iorwf	_UART1_RxInterruptHandler+2,w,c
 16517  006222  B4D8               	btfsc	status,2,c
 16518  006224  0011               	retfie		f
 16519                           
 16520                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 16521  006226  D801               	call	i2u435_48
 16522  006228  0011               	retfie		f
 16523  00622A                     i2u435_48:
 16524  00622A  0005               	push	
 16525  00622C  6EFA               	movwf	pclath,c
 16526  00622E  500B               	movf	_UART1_RxInterruptHandler,w,c
 16527  006230  6EFD               	movwf	tosl,c
 16528  006232  500C               	movf	_UART1_RxInterruptHandler+1,w,c
 16529  006234  6EFE               	movwf	tosh,c
 16530  006236  500D               	movf	_UART1_RxInterruptHandler+2,w,c
 16531  006238  6EFF               	movwf	tosu,c
 16532  00623A  50FA               	movf	pclath,w,c
 16533  00623C  0012               	return		;indir
 16534  00623E                     __end_of_UART1_rx_vect_isr:
 16535                           	opt callstack 0
 16536                           
 16537 ;; *************** function _UART1_Receive_ISR *****************
 16538 ;; Defined at:
 16539 ;;		line 227 in file "mcc_generated_files/uart1.c"
 16540 ;; Parameters:    Size  Location     Type
 16541 ;;		None
 16542 ;; Auto vars:     Size  Location     Type
 16543 ;;		None
 16544 ;; Return value:  Size  Location     Type
 16545 ;;                  1  [STACK] void 
 16546 ;; Registers used:
 16547 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16548 ;; Tracked objects:
 16549 ;;		On entry : 0/0
 16550 ;;		On exit  : 0/0
 16551 ;;		Unchanged: 0/0
 16552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16557 ;;Total ram usage:        0 bytes
 16558 ;; Hardware stack levels used:    1
 16559 ;; This function calls:
 16560 ;;		Nothing
 16561 ;; This function is called by:
 16562 ;;		_UART1_Initialize
 16563 ;;		_UART1_rx_vect_isr
 16564 ;; This function uses a reentrant model
 16565 ;;
 16566                           
 16567                           	psect	text97
 16568  006382                     __ptext97:
 16569                           	opt callstack 0
 16570  006382                     _UART1_Receive_ISR:
 16571                           	opt callstack 18
 16572                           
 16573                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 16574                           
 16575                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16576                           ;incstack = 0
 16577  006382  0E80               	movlw	low _uart1RxBuffer
 16578  006384  2439               	addwf	_uart1RxHead,w,c	;volatile
 16579  006386  6ED9               	movwf	fsr2l,c
 16580  006388  6ADA               	clrf	fsr2h,c
 16581  00638A  0E02               	movlw	high _uart1RxBuffer
 16582  00638C  22DA               	addwfc	fsr2h,f,c
 16583  00638E  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 16584  006394  2A39               	incf	_uart1RxHead,f,c	;volatile
 16585                           
 16586                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 16587  006396  0E3F               	movlw	63
 16588  006398  6439               	cpfsgt	_uart1RxHead,c
 16589  00639A  D001               	goto	l6713
 16590                           
 16591                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 16592  00639C  6A39               	clrf	_uart1RxHead,c	;volatile
 16593  00639E                     l6713:
 16594                           
 16595                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 16596  00639E  2A37               	incf	_uart1RxCount,f,c	;volatile
 16597                           
 16598                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16599  0063A0  0012               	return		;funcret
 16600  0063A2                     __end_of_UART1_Receive_ISR:
 16601                           	opt callstack 0
 16602                           
 16603 ;; *************** function _UART2_tx_vect_isr *****************
 16604 ;; Defined at:
 16605 ;;		line 195 in file "mcc_generated_files/uart2.c"
 16606 ;; Parameters:    Size  Location     Type
 16607 ;;		None
 16608 ;; Auto vars:     Size  Location     Type
 16609 ;;		None
 16610 ;; Return value:  Size  Location     Type
 16611 ;;                  1    wreg      void 
 16612 ;; Registers used:
 16613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16614 ;; Tracked objects:
 16615 ;;		On entry : 0/0
 16616 ;;		On exit  : 0/0
 16617 ;;		Unchanged: 0/0
 16618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16623 ;;Total ram usage:        0 bytes
 16624 ;; Hardware stack levels used:    1
 16625 ;; Hardware stack levels required when called:    1
 16626 ;; This function calls:
 16627 ;;		Absolute function
 16628 ;;		_UART2_Transmit_ISR
 16629 ;; This function is called by:
 16630 ;;		Interrupt level 2
 16631 ;; This function uses a non-reentrant model
 16632 ;;
 16633                           
 16634                           	psect	text98
 16635  006240                     __ptext98:
 16636                           	opt callstack 0
 16637  006240                     _UART2_tx_vect_isr:
 16638                           	opt callstack 18
 16639                           
 16640                           ;incstack = 0
 16641  006240  EE13  F1D6         	lfsr	1,___inthi_sp
 16642                           
 16643                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 16644  006244  500E               	movf	_UART2_TxInterruptHandler,w,c
 16645  006246  100F               	iorwf	_UART2_TxInterruptHandler+1,w,c
 16646  006248  1010               	iorwf	_UART2_TxInterruptHandler+2,w,c
 16647  00624A  B4D8               	btfsc	status,2,c
 16648  00624C  0011               	retfie		f
 16649                           
 16650                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 16651  00624E  D801               	call	i2u437_48
 16652  006250  0011               	retfie		f
 16653  006252                     i2u437_48:
 16654  006252  0005               	push	
 16655  006254  6EFA               	movwf	pclath,c
 16656  006256  500E               	movf	_UART2_TxInterruptHandler,w,c
 16657  006258  6EFD               	movwf	tosl,c
 16658  00625A  500F               	movf	_UART2_TxInterruptHandler+1,w,c
 16659  00625C  6EFE               	movwf	tosh,c
 16660  00625E  5010               	movf	_UART2_TxInterruptHandler+2,w,c
 16661  006260  6EFF               	movwf	tosu,c
 16662  006262  50FA               	movf	pclath,w,c
 16663  006264  0012               	return		;indir
 16664  006266                     __end_of_UART2_tx_vect_isr:
 16665                           	opt callstack 0
 16666                           
 16667 ;; *************** function _UART2_Transmit_ISR *****************
 16668 ;; Defined at:
 16669 ;;		line 213 in file "mcc_generated_files/uart2.c"
 16670 ;; Parameters:    Size  Location     Type
 16671 ;;		None
 16672 ;; Auto vars:     Size  Location     Type
 16673 ;;		None
 16674 ;; Return value:  Size  Location     Type
 16675 ;;                  1  [STACK] void 
 16676 ;; Registers used:
 16677 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16678 ;; Tracked objects:
 16679 ;;		On entry : 0/0
 16680 ;;		On exit  : 3B/39
 16681 ;;		Unchanged: 0/0
 16682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16687 ;;Total ram usage:        0 bytes
 16688 ;; Hardware stack levels used:    1
 16689 ;; This function calls:
 16690 ;;		Nothing
 16691 ;; This function is called by:
 16692 ;;		_UART2_Initialize
 16693 ;;		_UART2_tx_vect_isr
 16694 ;; This function uses a reentrant model
 16695 ;;
 16696                           
 16697                           	psect	text99
 16698  005F18                     __ptext99:
 16699                           	opt callstack 0
 16700  005F18                     _UART2_Transmit_ISR:
 16701                           	opt callstack 18
 16702                           
 16703                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 16704                           
 16705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16706                           ;incstack = 0
 16707  005F18  0E40               	movlw	64
 16708  005F1A  6034               	cpfslt	_uart2TxBufferRemaining,c
 16709  005F1C  D010               	goto	l717
 16710                           
 16711                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 16712  005F1E  0E40               	movlw	low _uart2TxBuffer
 16713  005F20  2435               	addwf	_uart2TxTail,w,c	;volatile
 16714  005F22  6ED9               	movwf	fsr2l,c
 16715  005F24  6ADA               	clrf	fsr2h,c
 16716  005F26  0E02               	movlw	high _uart2TxBuffer
 16717  005F28  22DA               	addwfc	fsr2h,f,c
 16718  005F2A  50DF               	movf	indf2,w,c
 16719  005F2C  013D               	movlb	61	; () banked
 16720  005F2E  6FD2               	movwf	210,b	;volatile
 16721                           
 16722                           ; BSR set to: 61
 16723  005F30  2A35               	incf	_uart2TxTail,f,c	;volatile
 16724                           
 16725                           ; BSR set to: 61
 16726                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 16727  005F32  0E3F               	movlw	63
 16728  005F34  6435               	cpfsgt	_uart2TxTail,c
 16729  005F36  D001               	goto	l6725
 16730                           
 16731                           ; BSR set to: 61
 16732                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 16733  005F38  6A35               	clrf	_uart2TxTail,c	;volatile
 16734  005F3A                     l6725:
 16735                           
 16736                           ; BSR set to: 61
 16737                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 16738  005F3A  2A34               	incf	_uart2TxBufferRemaining,f,c	;volatile
 16739                           
 16740                           ;mcc_generated_files/uart2.c: 224:     }
 16741  005F3C  0012               	return	
 16742  005F3E                     l717:
 16743                           
 16744                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 16745  005F3E  0139               	movlb	57	; () banked
 16746  005F40  9796               	bcf	150,3,b	;volatile
 16747                           
 16748                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16749  005F42  0012               	return		;funcret
 16750  005F44                     __end_of_UART2_Transmit_ISR:
 16751                           	opt callstack 0
 16752                           
 16753 ;; *************** function _UART2_rx_vect_isr *****************
 16754 ;; Defined at:
 16755 ;;		line 203 in file "mcc_generated_files/uart2.c"
 16756 ;; Parameters:    Size  Location     Type
 16757 ;;		None
 16758 ;; Auto vars:     Size  Location     Type
 16759 ;;		None
 16760 ;; Return value:  Size  Location     Type
 16761 ;;                  1    wreg      void 
 16762 ;; Registers used:
 16763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16764 ;; Tracked objects:
 16765 ;;		On entry : 0/0
 16766 ;;		On exit  : 0/0
 16767 ;;		Unchanged: 0/0
 16768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16773 ;;Total ram usage:        0 bytes
 16774 ;; Hardware stack levels used:    1
 16775 ;; Hardware stack levels required when called:    1
 16776 ;; This function calls:
 16777 ;;		Absolute function
 16778 ;;		_UART2_Receive_ISR
 16779 ;; This function is called by:
 16780 ;;		Interrupt level 2
 16781 ;; This function uses a non-reentrant model
 16782 ;;
 16783                           
 16784                           	psect	text100
 16785  006268                     __ptext100:
 16786                           	opt callstack 0
 16787  006268                     _UART2_rx_vect_isr:
 16788                           	opt callstack 18
 16789                           
 16790                           ;incstack = 0
 16791  006268  EE13  F1D6         	lfsr	1,___inthi_sp
 16792                           
 16793                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 16794  00626C  5011               	movf	_UART2_RxInterruptHandler,w,c
 16795  00626E  1012               	iorwf	_UART2_RxInterruptHandler+1,w,c
 16796  006270  1013               	iorwf	_UART2_RxInterruptHandler+2,w,c
 16797  006272  B4D8               	btfsc	status,2,c
 16798  006274  0011               	retfie		f
 16799                           
 16800                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 16801  006276  D801               	call	i2u439_48
 16802  006278  0011               	retfie		f
 16803  00627A                     i2u439_48:
 16804  00627A  0005               	push	
 16805  00627C  6EFA               	movwf	pclath,c
 16806  00627E  5011               	movf	_UART2_RxInterruptHandler,w,c
 16807  006280  6EFD               	movwf	tosl,c
 16808  006282  5012               	movf	_UART2_RxInterruptHandler+1,w,c
 16809  006284  6EFE               	movwf	tosh,c
 16810  006286  5013               	movf	_UART2_RxInterruptHandler+2,w,c
 16811  006288  6EFF               	movwf	tosu,c
 16812  00628A  50FA               	movf	pclath,w,c
 16813  00628C  0012               	return		;indir
 16814  00628E                     __end_of_UART2_rx_vect_isr:
 16815                           	opt callstack 0
 16816                           
 16817 ;; *************** function _UART2_Receive_ISR *****************
 16818 ;; Defined at:
 16819 ;;		line 233 in file "mcc_generated_files/uart2.c"
 16820 ;; Parameters:    Size  Location     Type
 16821 ;;		None
 16822 ;; Auto vars:     Size  Location     Type
 16823 ;;		None
 16824 ;; Return value:  Size  Location     Type
 16825 ;;                  1  [STACK] void 
 16826 ;; Registers used:
 16827 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16828 ;; Tracked objects:
 16829 ;;		On entry : 0/0
 16830 ;;		On exit  : 0/0
 16831 ;;		Unchanged: 0/0
 16832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16837 ;;Total ram usage:        0 bytes
 16838 ;; Hardware stack levels used:    1
 16839 ;; This function calls:
 16840 ;;		Nothing
 16841 ;; This function is called by:
 16842 ;;		_UART2_Initialize
 16843 ;;		_UART2_rx_vect_isr
 16844 ;; This function uses a reentrant model
 16845 ;;
 16846                           
 16847                           	psect	text101
 16848  0063A2                     __ptext101:
 16849                           	opt callstack 0
 16850  0063A2                     _UART2_Receive_ISR:
 16851                           	opt callstack 18
 16852                           
 16853                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 16854                           
 16855                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16856                           ;incstack = 0
 16857  0063A2  0E00               	movlw	low _uart2RxBuffer
 16858  0063A4  2433               	addwf	_uart2RxHead,w,c	;volatile
 16859  0063A6  6ED9               	movwf	fsr2l,c
 16860  0063A8  6ADA               	clrf	fsr2h,c
 16861  0063AA  0E02               	movlw	high _uart2RxBuffer
 16862  0063AC  22DA               	addwfc	fsr2h,f,c
 16863  0063AE  006F F743 FFDF     	movff	15824,indf2	;volatile
 16864  0063B4  2A33               	incf	_uart2RxHead,f,c	;volatile
 16865                           
 16866                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 16867  0063B6  0E3F               	movlw	63
 16868  0063B8  6433               	cpfsgt	_uart2RxHead,c
 16869  0063BA  D001               	goto	l6735
 16870                           
 16871                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 16872  0063BC  6A33               	clrf	_uart2RxHead,c	;volatile
 16873  0063BE                     l6735:
 16874                           
 16875                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 16876  0063BE  2A31               	incf	_uart2RxCount,f,c	;volatile
 16877                           
 16878                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16879  0063C0  0012               	return		;funcret
 16880  0063C2                     __end_of_UART2_Receive_ISR:
 16881                           	opt callstack 0
 16882                           
 16883 ;; *************** function _TMR6_ISR *****************
 16884 ;; Defined at:
 16885 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 16886 ;; Parameters:    Size  Location     Type
 16887 ;;		None
 16888 ;; Auto vars:     Size  Location     Type
 16889 ;;		None
 16890 ;; Return value:  Size  Location     Type
 16891 ;;                  1    wreg      void 
 16892 ;; Registers used:
 16893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16894 ;; Tracked objects:
 16895 ;;		On entry : 0/0
 16896 ;;		On exit  : 0/0
 16897 ;;		Unchanged: 0/0
 16898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16902 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16903 ;;Total ram usage:        1 bytes
 16904 ;; Hardware stack levels used:    1
 16905 ;; Hardware stack levels required when called:    2
 16906 ;; This function calls:
 16907 ;;		_TMR6_CallBack
 16908 ;; This function is called by:
 16909 ;;		Interrupt level 2
 16910 ;; This function uses a non-reentrant model
 16911 ;;
 16912                           
 16913                           	psect	text102
 16914  006450                     __ptext102:
 16915                           	opt callstack 0
 16916  006450                     _TMR6_ISR:
 16917                           	opt callstack 17
 16918                           
 16919                           ;incstack = 0
 16920  006450  0060  F0F4  F05E   	movff	btemp,??_TMR6_ISR
 16921  006456  EE13  F1D6         	lfsr	1,___inthi_sp
 16922                           
 16923                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 16924  00645A  0139               	movlb	57	; () banked
 16925  00645C  91A9               	bcf	169,0,b	;volatile
 16926                           
 16927                           ; BSR set to: 57
 16928                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 16929  00645E  EC59  F031         	call	_TMR6_CallBack	;wreg free
 16930  006462  0060  F178  F03D   	movff	??_TMR6_ISR,btemp
 16931  006468  0011               	retfie		f
 16932  00646A                     __end_of_TMR6_ISR:
 16933                           	opt callstack 0
 16934                           
 16935 ;; *************** function _TMR6_CallBack *****************
 16936 ;; Defined at:
 16937 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 16938 ;; Parameters:    Size  Location     Type
 16939 ;;		None
 16940 ;; Auto vars:     Size  Location     Type
 16941 ;;		None
 16942 ;; Return value:  Size  Location     Type
 16943 ;;                  1  [STACK] void 
 16944 ;; Registers used:
 16945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16946 ;; Tracked objects:
 16947 ;;		On entry : 3F/39
 16948 ;;		On exit  : 0/0
 16949 ;;		Unchanged: 0/0
 16950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16955 ;;Total ram usage:        0 bytes
 16956 ;; Hardware stack levels used:    1
 16957 ;; Hardware stack levels required when called:    1
 16958 ;; This function calls:
 16959 ;;		Absolute function
 16960 ;;		_TMR6_DefaultInterruptHandler
 16961 ;; This function is called by:
 16962 ;;		_TMR6_ISR
 16963 ;; This function uses a reentrant model
 16964 ;;
 16965                           
 16966                           	psect	text103
 16967  0062B2                     __ptext103:
 16968                           	opt callstack 0
 16969  0062B2                     _TMR6_CallBack:
 16970                           	opt callstack 17
 16971                           
 16972                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 16973                           
 16974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16975                           ;incstack = 0
 16976  0062B2  0100               	movlb	0	; () banked
 16977  0062B4  51F5               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16978  0062B6  11F6               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16979  0062B8  11F7               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16980  0062BA  B4D8               	btfsc	status,2,c
 16981  0062BC  0012               	return	
 16982                           
 16983                           ; BSR set to: 0
 16984                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 16985  0062BE  D801               	call	u363_48
 16986  0062C0  0012               	return	
 16987  0062C2                     u363_48:
 16988  0062C2  0005               	push	
 16989  0062C4  6EFA               	movwf	pclath,c
 16990  0062C6  51F5               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16991  0062C8  6EFD               	movwf	tosl,c
 16992  0062CA  51F6               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16993  0062CC  6EFE               	movwf	tosh,c
 16994  0062CE  51F7               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16995  0062D0  6EFF               	movwf	tosu,c
 16996  0062D2  50FA               	movf	pclath,w,c
 16997  0062D4  0012               	return		;indir
 16998  0062D6                     __end_of_TMR6_CallBack:
 16999                           	opt callstack 0
 17000                           
 17001 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 17002 ;; Defined at:
 17003 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 17004 ;; Parameters:    Size  Location     Type
 17005 ;;		None
 17006 ;; Auto vars:     Size  Location     Type
 17007 ;;  i               1  [STACK] unsigned char 
 17008 ;; Return value:  Size  Location     Type
 17009 ;;                  1  [STACK] void 
 17010 ;; Registers used:
 17011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 17012 ;; Tracked objects:
 17013 ;;		On entry : 3F/0
 17014 ;;		On exit  : 0/0
 17015 ;;		Unchanged: 0/0
 17016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17021 ;;Total ram usage:        0 bytes
 17022 ;; Hardware stack levels used:    1
 17023 ;; This function calls:
 17024 ;;		Nothing
 17025 ;; This function is called by:
 17026 ;;		_TMR6_Initialize
 17027 ;;		_TMR6_CallBack
 17028 ;; This function uses a reentrant model
 17029 ;;
 17030                           
 17031                           	psect	text104
 17032  005BF4                     __ptext104:
 17033                           	opt callstack 0
 17034  005BF4                     _TMR6_DefaultInterruptHandler:
 17035                           	opt callstack 0
 17036                           
 17037                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17038  005BF4  52E6               	movf	postinc1,f,c
 17039                           
 17040                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 17041                           ;stkvar	_i @ sp[(-1)+0]
 17042                           
 17043                           ;incstack = 0
 17044  005BF6  0EFF               	movlw	-1
 17045  005BF8  6AE3               	clrf	plusw1,c
 17046  005BFA                     l6267:
 17047                           
 17048                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 17049                           ;stkvar	_i @ sp[(-1)+0]
 17050  005BFA  0EFF               	movlw	-1
 17051  005BFC  50E3               	movf	plusw1,w,c
 17052  005BFE  0D02               	mullw	2
 17053  005C00  50F3               	movf	prodl,w,c
 17054  005C02  0FDB               	addlw	low _tickCount
 17055  005C04  6ED9               	movwf	fsr2l,c
 17056  005C06  6ADA               	clrf	fsr2h,c
 17057  005C08  50DE               	movf	postinc2,w,c
 17058  005C0A  10DE               	iorwf	postinc2,w,c
 17059  005C0C  B4D8               	btfsc	status,2,c
 17060  005C0E  D00A               	goto	l6271
 17061                           
 17062                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 17063                           ;stkvar	_i @ sp[(-1)+0]
 17064  005C10  0EFF               	movlw	-1
 17065  005C12  50E3               	movf	plusw1,w,c
 17066  005C14  0D02               	mullw	2
 17067  005C16  50F3               	movf	prodl,w,c
 17068  005C18  0FDB               	addlw	low _tickCount
 17069  005C1A  6ED9               	movwf	fsr2l,c
 17070  005C1C  6ADA               	clrf	fsr2h,c
 17071  005C1E  06DE               	decf	postinc2,f,c
 17072  005C20  0E00               	movlw	0
 17073  005C22  5ADD               	subwfb	postdec2,f,c
 17074  005C24                     l6271:
 17075                           
 17076                           ;mcc_generated_files/tmr6.c: 207:  }
 17077                           ;stkvar	_i @ sp[(-1)+0]
 17078  005C24  0EFF               	movlw	-1
 17079  005C26  2AE3               	incf	plusw1,f,c
 17080                           
 17081                           ;stkvar	_i @ sp[(-1)+0]
 17082  005C28  0EFF               	movlw	-1
 17083  005C2A  006F FF8C  F03D    	movff	plusw1,btemp
 17084  005C30  0E05               	movlw	5
 17085  005C32  643D               	cpfsgt	btemp,c
 17086  005C34  D7E2               	goto	l6267
 17087                           
 17088                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17089  005C36  52E5               	movf	postdec1,f,c
 17090  005C38  0012               	return		;funcret
 17091  005C3A                     __end_of_TMR6_DefaultInterruptHandler:
 17092                           	opt callstack 0
 17093                           
 17094 ;; *************** function _DMA1_DMASCNT_ISR *****************
 17095 ;; Defined at:
 17096 ;;		line 126 in file "mcc_generated_files/dma1.c"
 17097 ;; Parameters:    Size  Location     Type
 17098 ;;		None
 17099 ;; Auto vars:     Size  Location     Type
 17100 ;;		None
 17101 ;; Return value:  Size  Location     Type
 17102 ;;                  1    wreg      void 
 17103 ;; Registers used:
 17104 ;;		None
 17105 ;; Tracked objects:
 17106 ;;		On entry : 0/0
 17107 ;;		On exit  : 3F/0
 17108 ;;		Unchanged: 0/0
 17109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17114 ;;Total ram usage:        0 bytes
 17115 ;; Hardware stack levels used:    1
 17116 ;; This function calls:
 17117 ;;		Nothing
 17118 ;; This function is called by:
 17119 ;;		Interrupt level 2
 17120 ;; This function uses a non-reentrant model
 17121 ;;
 17122                           
 17123                           	psect	text105
 17124  0064C4                     __ptext105:
 17125                           	opt callstack 0
 17126  0064C4                     _DMA1_DMASCNT_ISR:
 17127                           	opt callstack 19
 17128                           
 17129                           ;incstack = 0
 17130  0064C4  EE13  F1D6         	lfsr	1,___inthi_sp
 17131                           
 17132                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 17133  0064C8  0139               	movlb	57	; () banked
 17134  0064CA  91A2               	bcf	162,0,b	;volatile
 17135                           
 17136                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 17137  0064CC  0100               	movlb	0	; () banked
 17138  0064CE  97CF               	bcf	_spi_link& (0+255),3,b	;volatile
 17139                           
 17140                           ; BSR set to: 0
 17141                           
 17142                           ;mcc_generated_files/dma1.c: 131:  do { LATEbits.LATE1 = 0; } while(0);
 17143  0064D0  92BE               	bcf	16318,1,c	;volatile
 17144                           
 17145                           ; BSR set to: 0
 17146  0064D2  0011               	retfie		f
 17147  0064D4                     __end_of_DMA1_DMASCNT_ISR:
 17148                           	opt callstack 0
 17149                           
 17150 ;; *************** function _DMA1_DMADCNT_ISR *****************
 17151 ;; Defined at:
 17152 ;;		line 134 in file "mcc_generated_files/dma1.c"
 17153 ;; Parameters:    Size  Location     Type
 17154 ;;		None
 17155 ;; Auto vars:     Size  Location     Type
 17156 ;;		None
 17157 ;; Return value:  Size  Location     Type
 17158 ;;                  1    wreg      void 
 17159 ;; Registers used:
 17160 ;;		None
 17161 ;; Tracked objects:
 17162 ;;		On entry : 0/0
 17163 ;;		On exit  : 3F/39
 17164 ;;		Unchanged: 0/0
 17165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17170 ;;Total ram usage:        0 bytes
 17171 ;; Hardware stack levels used:    1
 17172 ;; This function calls:
 17173 ;;		Nothing
 17174 ;; This function is called by:
 17175 ;;		Interrupt level 2
 17176 ;; This function uses a non-reentrant model
 17177 ;;
 17178                           
 17179                           	psect	text106
 17180  00651C                     __ptext106:
 17181                           	opt callstack 0
 17182  00651C                     _DMA1_DMADCNT_ISR:
 17183                           	opt callstack 19
 17184                           
 17185                           ; BSR set to: 0
 17186                           ;incstack = 0
 17187  00651C  EE13  F1D6         	lfsr	1,___inthi_sp
 17188                           
 17189                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 17190  006520  0139               	movlb	57	; () banked
 17191  006522  93A2               	bcf	162,1,b	;volatile
 17192                           
 17193                           ; BSR set to: 57
 17194  006524  0011               	retfie		f
 17195  006526                     __end_of_DMA1_DMADCNT_ISR:
 17196                           	opt callstack 0
 17197                           
 17198 ;; *************** function _DMA1_DMAA_ISR *****************
 17199 ;; Defined at:
 17200 ;;		line 144 in file "mcc_generated_files/dma1.c"
 17201 ;; Parameters:    Size  Location     Type
 17202 ;;		None
 17203 ;; Auto vars:     Size  Location     Type
 17204 ;;		None
 17205 ;; Return value:  Size  Location     Type
 17206 ;;                  1    wreg      void 
 17207 ;; Registers used:
 17208 ;;		None
 17209 ;; Tracked objects:
 17210 ;;		On entry : 0/0
 17211 ;;		On exit  : 3F/39
 17212 ;;		Unchanged: 0/0
 17213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17218 ;;Total ram usage:        0 bytes
 17219 ;; Hardware stack levels used:    1
 17220 ;; This function calls:
 17221 ;;		Nothing
 17222 ;; This function is called by:
 17223 ;;		Interrupt level 2
 17224 ;; This function uses a non-reentrant model
 17225 ;;
 17226                           
 17227                           	psect	text107
 17228  006528                     __ptext107:
 17229                           	opt callstack 0
 17230  006528                     _DMA1_DMAA_ISR:
 17231                           	opt callstack 19
 17232                           
 17233                           ; BSR set to: 57
 17234                           ;incstack = 0
 17235  006528  EE13  F1D6         	lfsr	1,___inthi_sp
 17236                           
 17237                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 17238  00652C  0139               	movlb	57	; () banked
 17239  00652E  97A2               	bcf	162,3,b	;volatile
 17240                           
 17241                           ; BSR set to: 57
 17242  006530  0011               	retfie		f
 17243  006532                     __end_of_DMA1_DMAA_ISR:
 17244                           	opt callstack 0
 17245                           
 17246 ;; *************** function _DMA1_DMAOR_ISR *****************
 17247 ;; Defined at:
 17248 ;;		line 155 in file "mcc_generated_files/dma1.c"
 17249 ;; Parameters:    Size  Location     Type
 17250 ;;		None
 17251 ;; Auto vars:     Size  Location     Type
 17252 ;;		None
 17253 ;; Return value:  Size  Location     Type
 17254 ;;                  1    wreg      void 
 17255 ;; Registers used:
 17256 ;;		None
 17257 ;; Tracked objects:
 17258 ;;		On entry : 0/0
 17259 ;;		On exit  : 3F/39
 17260 ;;		Unchanged: 0/0
 17261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17266 ;;Total ram usage:        0 bytes
 17267 ;; Hardware stack levels used:    1
 17268 ;; This function calls:
 17269 ;;		Nothing
 17270 ;; This function is called by:
 17271 ;;		Interrupt level 2
 17272 ;; This function uses a non-reentrant model
 17273 ;;
 17274                           
 17275                           	psect	text108
 17276  006534                     __ptext108:
 17277                           	opt callstack 0
 17278  006534                     _DMA1_DMAOR_ISR:
 17279                           	opt callstack 19
 17280                           
 17281                           ; BSR set to: 57
 17282                           ;incstack = 0
 17283  006534  EE13  F1D6         	lfsr	1,___inthi_sp
 17284                           
 17285                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 17286  006538  0139               	movlb	57	; () banked
 17287  00653A  95A2               	bcf	162,2,b	;volatile
 17288                           
 17289                           ; BSR set to: 57
 17290  00653C  0011               	retfie		f
 17291  00653E                     __end_of_DMA1_DMAOR_ISR:
 17292                           	opt callstack 0
 17293                           
 17294 ;; *************** function _TMR5_ISR *****************
 17295 ;; Defined at:
 17296 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 17297 ;; Parameters:    Size  Location     Type
 17298 ;;		None
 17299 ;; Auto vars:     Size  Location     Type
 17300 ;;		None
 17301 ;; Return value:  Size  Location     Type
 17302 ;;                  1    wreg      void 
 17303 ;; Registers used:
 17304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 17305 ;; Tracked objects:
 17306 ;;		On entry : 0/0
 17307 ;;		On exit  : 0/0
 17308 ;;		Unchanged: 0/0
 17309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17312 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17313 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17314 ;;Total ram usage:        3 bytes
 17315 ;; Hardware stack levels used:    1
 17316 ;; Hardware stack levels required when called:    2
 17317 ;; This function calls:
 17318 ;;		_TMR5_CallBack
 17319 ;;		_TMR5_WriteTimer
 17320 ;; This function is called by:
 17321 ;;		Interrupt level 2
 17322 ;; This function uses a non-reentrant model
 17323 ;;
 17324                           
 17325                           	psect	text109
 17326  005A84                     __ptext109:
 17327                           	opt callstack 0
 17328  005A84                     _TMR5_ISR:
 17329                           	opt callstack 17
 17330                           
 17331                           ; BSR set to: 57
 17332                           ;incstack = 0
 17333  005A84  0060  F120  F0FF   	movff	btemp+11,??_TMR5_ISR+2
 17334  005A8A  EE13  F1D6         	lfsr	1,___inthi_sp
 17335                           
 17336                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 17337  005A8E  0139               	movlb	57	; () banked
 17338  005A90  9DA8               	bcf	168,6,b	;volatile
 17339                           
 17340                           ; BSR set to: 57
 17341                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 17342  005A92  0060  F0A7  FFE6   	movff	_timer5ReloadVal,postinc1
 17343  005A98  0060  F0AB  FFE6   	movff	_timer5ReloadVal+1,postinc1
 17344  005A9E  EC3E  F02E         	call	_TMR5_WriteTimer	;wreg free
 17345                           
 17346                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 17347  005AA2  0100               	movlb	0	; () banked
 17348  005AA4  51C1               	movf	(_V+97)& (0+255),w,b	;volatile
 17349  005AA6  6FFD               	movwf	??_TMR5_ISR& (0+255),b
 17350  005AA8  6BFE               	clrf	(??_TMR5_ISR+1)& (0+255),b
 17351  005AAA  0E05               	movlw	5
 17352  005AAC  27FD               	addwf	??_TMR5_ISR& (0+255),f,b
 17353  005AAE  0E00               	movlw	0
 17354  005AB0  23FE               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 17355  005AB2  4A27               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 17356  005AB4  2A28               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 17357  005AB6  51FD               	movf	??_TMR5_ISR& (0+255),w,b
 17358  005AB8  5C27               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 17359  005ABA  51FE               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 17360  005ABC  5828               	subwfb	TMR5_ISR@CountCallBack+1,w,c	;volatile
 17361  005ABE  A0D8               	btfss	status,0,c
 17362  005AC0  D004               	goto	i2l1145
 17363                           
 17364                           ; BSR set to: 0
 17365                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 17366  005AC2  EC6B  F031         	call	_TMR5_CallBack	;wreg free
 17367                           
 17368                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 17369  005AC6  6A27               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 17370  005AC8  6A28               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 17371  005ACA                     i2l1145:
 17372  005ACA  0060  F3FC  F048   	movff	??_TMR5_ISR+2,btemp+11
 17373  005AD0  0011               	retfie		f
 17374  005AD2                     __end_of_TMR5_ISR:
 17375                           	opt callstack 0
 17376                           
 17377 ;; *************** function _TMR5_WriteTimer *****************
 17378 ;; Defined at:
 17379 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 17380 ;; Parameters:    Size  Location     Type
 17381 ;;  timerVal        2  [STACK] unsigned short 
 17382 ;; Auto vars:     Size  Location     Type
 17383 ;;		None
 17384 ;; Return value:  Size  Location     Type
 17385 ;;                  1  [STACK] void 
 17386 ;; Registers used:
 17387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17388 ;; Tracked objects:
 17389 ;;		On entry : 3F/39
 17390 ;;		On exit  : 0/0
 17391 ;;		Unchanged: 0/0
 17392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17397 ;;Total ram usage:        0 bytes
 17398 ;; Hardware stack levels used:    1
 17399 ;; This function calls:
 17400 ;;		Nothing
 17401 ;; This function is called by:
 17402 ;;		_TMR5_ISR
 17403 ;; This function uses a reentrant model
 17404 ;;
 17405                           
 17406                           	psect	text110
 17407  005C7C                     __ptext110:
 17408                           	opt callstack 0
 17409  005C7C                     _TMR5_WriteTimer:
 17410                           	opt callstack 18
 17411                           
 17412                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 17413                           
 17414                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17415                           ;incstack = 0
 17416  005C7C  A49A               	btfss	16282,2,c	;volatile
 17417  005C7E  D00F               	goto	l6751
 17418                           
 17419                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 17420  005C80  909A               	bcf	16282,0,c	;volatile
 17421                           
 17422                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 17423                           ;stkvar	_timerVal @ sp[(0)+-2]
 17424  005C82  0EFF               	movlw	255
 17425  005C84  24E1               	addwf	fsr1l,w,c
 17426  005C86  6ED9               	movwf	fsr2l,c
 17427  005C88  0EFF               	movlw	255
 17428  005C8A  20E2               	addwfc	fsr1h,w,c
 17429  005C8C  6EDA               	movwf	fsr2h,c
 17430  005C8E  50DF               	movf	indf2,w,c
 17431  005C90  6E99               	movwf	16281,c	;volatile
 17432                           
 17433                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 17434                           ;stkvar	_timerVal @ sp[(0)+-2]
 17435  005C92  0EFE               	movlw	-2
 17436  005C94  006F FF8F FF98     	movff	plusw1,16280	;volatile
 17437                           
 17438                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 17439  005C9A  809A               	bsf	16282,0,c	;volatile
 17440                           
 17441                           ;mcc_generated_files/tmr5.c: 142:  } else {
 17442  005C9C  D00C               	goto	l1128
 17443  005C9E                     l6751:
 17444                           
 17445                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 17446                           ;stkvar	_timerVal @ sp[(0)+-2]
 17447  005C9E  0EFF               	movlw	255
 17448  005CA0  24E1               	addwf	fsr1l,w,c
 17449  005CA2  6ED9               	movwf	fsr2l,c
 17450  005CA4  0EFF               	movlw	255
 17451  005CA6  20E2               	addwfc	fsr1h,w,c
 17452  005CA8  6EDA               	movwf	fsr2h,c
 17453  005CAA  50DF               	movf	indf2,w,c
 17454  005CAC  6E99               	movwf	16281,c	;volatile
 17455                           
 17456                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 17457                           ;stkvar	_timerVal @ sp[(0)+-2]
 17458  005CAE  0EFE               	movlw	-2
 17459  005CB0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 17460  005CB6                     l1128:
 17461                           
 17462                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 17463  005CB6  52E5               	movf	postdec1,f,c
 17464  005CB8  52E5               	movf	postdec1,f,c
 17465  005CBA  0012               	return		;funcret
 17466  005CBC                     __end_of_TMR5_WriteTimer:
 17467                           	opt callstack 0
 17468                           
 17469 ;; *************** function _TMR5_CallBack *****************
 17470 ;; Defined at:
 17471 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 17472 ;; Parameters:    Size  Location     Type
 17473 ;;		None
 17474 ;; Auto vars:     Size  Location     Type
 17475 ;;		None
 17476 ;; Return value:  Size  Location     Type
 17477 ;;                  1  [STACK] void 
 17478 ;; Registers used:
 17479 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 17480 ;; Tracked objects:
 17481 ;;		On entry : 3F/0
 17482 ;;		On exit  : 0/0
 17483 ;;		Unchanged: 0/0
 17484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17489 ;;Total ram usage:        0 bytes
 17490 ;; Hardware stack levels used:    1
 17491 ;; Hardware stack levels required when called:    1
 17492 ;; This function calls:
 17493 ;;		Absolute function
 17494 ;;		_TMR5_DefaultInterruptHandler
 17495 ;; This function is called by:
 17496 ;;		_TMR5_ISR
 17497 ;; This function uses a reentrant model
 17498 ;;
 17499                           
 17500                           	psect	text111
 17501  0062D6                     __ptext111:
 17502                           	opt callstack 0
 17503  0062D6                     _TMR5_CallBack:
 17504                           	opt callstack 17
 17505                           
 17506                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 17507                           
 17508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17509                           ;incstack = 0
 17510  0062D6  0100               	movlb	0	; () banked
 17511  0062D8  51F2               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17512  0062DA  11F3               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17513  0062DC  11F4               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17514  0062DE  B4D8               	btfsc	status,2,c
 17515  0062E0  0012               	return	
 17516                           
 17517                           ; BSR set to: 0
 17518                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 17519  0062E2  D801               	call	u366_48
 17520  0062E4  0012               	return	
 17521  0062E6                     u366_48:
 17522  0062E6  0005               	push	
 17523  0062E8  6EFA               	movwf	pclath,c
 17524  0062EA  51F2               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17525  0062EC  6EFD               	movwf	tosl,c
 17526  0062EE  51F3               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17527  0062F0  6EFE               	movwf	tosh,c
 17528  0062F2  51F4               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17529  0062F4  6EFF               	movwf	tosu,c
 17530  0062F6  50FA               	movf	pclath,w,c
 17531  0062F8  0012               	return		;indir
 17532  0062FA                     __end_of_TMR5_CallBack:
 17533                           	opt callstack 0
 17534                           
 17535 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 17536 ;; Defined at:
 17537 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 17538 ;; Parameters:    Size  Location     Type
 17539 ;;		None
 17540 ;; Auto vars:     Size  Location     Type
 17541 ;;		None
 17542 ;; Return value:  Size  Location     Type
 17543 ;;                  1  [STACK] void 
 17544 ;; Registers used:
 17545 ;;		wreg, status,2, status,0, btemp+11
 17546 ;; Tracked objects:
 17547 ;;		On entry : 3F/0
 17548 ;;		On exit  : 0/0
 17549 ;;		Unchanged: 0/0
 17550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17555 ;;Total ram usage:        0 bytes
 17556 ;; Hardware stack levels used:    1
 17557 ;; This function calls:
 17558 ;;		Nothing
 17559 ;; This function is called by:
 17560 ;;		_TMR5_Initialize
 17561 ;;		_TMR5_CallBack
 17562 ;; This function uses a reentrant model
 17563 ;;
 17564                           
 17565                           	psect	text112
 17566  00646A                     __ptext112:
 17567                           	opt callstack 0
 17568  00646A                     _TMR5_DefaultInterruptHandler:
 17569                           	opt callstack 17
 17570                           
 17571                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 17572                           
 17573                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17574                           ;incstack = 0
 17575  00646A  A0BE               	btfss	16318,0,c	;volatile
 17576  00646C  D002               	goto	u340_40
 17577  00646E  0E01               	movlw	1
 17578  006470  D001               	goto	u340_46
 17579  006472                     u340_40:
 17580  006472  0E00               	movlw	0
 17581  006474                     u340_46:
 17582  006474  0AFF               	xorlw	255
 17583  006476  6E48               	movwf	btemp+11,c
 17584  006478  50BE               	movf	16318,w,c	;volatile
 17585  00647A  1848               	xorwf	btemp+11,w,c
 17586  00647C  0BFE               	andlw	-2
 17587  00647E  1848               	xorwf	btemp+11,w,c
 17588  006480  6EBE               	movwf	16318,c	;volatile
 17589                           
 17590                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17591  006482  0012               	return		;funcret
 17592  006484                     __end_of_TMR5_DefaultInterruptHandler:
 17593                           	opt callstack 0
 17594                           
 17595                           ;
 17596                           ; Interrupt Vector Table @ 0x8
 17597                           ;
 17598                           
 17599                           	psect	ivt0x8
 17600  000008                     __pivt0x8:
 17601                           	opt callstack 0
 17602  000008                     ivt0x8_base:
 17603                           	opt callstack 0
 17604                           
 17605                           ; Vector 0 : SWINT
 17606  000008  195B               	dw	_Default_ISR shr (0+2)
 17607                           
 17608                           ; Vector 1 : HLVD
 17609  00000A  195B               	dw	_Default_ISR shr (0+2)
 17610                           
 17611                           ; Vector 2 : OSF
 17612  00000C  195B               	dw	_Default_ISR shr (0+2)
 17613                           
 17614                           ; Vector 3 : CSW
 17615  00000E  195B               	dw	_Default_ISR shr (0+2)
 17616                           
 17617                           ; Vector 4 : NVM
 17618  000010  195B               	dw	_Default_ISR shr (0+2)
 17619                           
 17620                           ; Vector 5 : SCAN
 17621  000012  195B               	dw	_Default_ISR shr (0+2)
 17622                           
 17623                           ; Vector 6 : CRC
 17624  000014  195B               	dw	_Default_ISR shr (0+2)
 17625                           
 17626                           ; Vector 7 : IOC
 17627  000016  195B               	dw	_Default_ISR shr (0+2)
 17628                           
 17629                           ; Vector 8 : INT0
 17630  000018  1939               	dw	_INT0_ISR shr (0+2)
 17631                           
 17632                           ; Vector 9 : ZCD
 17633  00001A  195B               	dw	_Default_ISR shr (0+2)
 17634                           
 17635                           ; Vector 10 : AD
 17636  00001C  17B0               	dw	_ADCC_ISR shr (0+2)
 17637                           
 17638                           ; Vector 11 : ADT
 17639  00001E  195B               	dw	_Default_ISR shr (0+2)
 17640                           
 17641                           ; Vector 12 : CMP1
 17642  000020  195B               	dw	_Default_ISR shr (0+2)
 17643                           
 17644                           ; Vector 13 : SMT1
 17645  000022  195B               	dw	_Default_ISR shr (0+2)
 17646                           
 17647                           ; Vector 14 : SMT1PRA
 17648  000024  195B               	dw	_Default_ISR shr (0+2)
 17649                           
 17650                           ; Vector 15 : SMT1PRW
 17651  000026  195B               	dw	_Default_ISR shr (0+2)
 17652                           
 17653                           ; Vector 16 : DMA1SCNT
 17654  000028  1931               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 17655                           
 17656                           ; Vector 17 : DMA1DCNT
 17657  00002A  1947               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 17658                           
 17659                           ; Vector 18 : DMA1OR
 17660  00002C  194D               	dw	_DMA1_DMAOR_ISR shr (0+2)
 17661                           
 17662                           ; Vector 19 : DMA1A
 17663  00002E  194A               	dw	_DMA1_DMAA_ISR shr (0+2)
 17664                           
 17665                           ; Vector 20 : SPI1RX
 17666  000030  195B               	dw	_Default_ISR shr (0+2)
 17667                           
 17668                           ; Vector 21 : SPI1TX
 17669  000032  195B               	dw	_Default_ISR shr (0+2)
 17670                           
 17671                           ; Vector 22 : SPI1
 17672  000034  195B               	dw	_Default_ISR shr (0+2)
 17673                           
 17674                           ; Vector 23 : I2C1RX
 17675  000036  195B               	dw	_Default_ISR shr (0+2)
 17676                           
 17677                           ; Vector 24 : I2C1TX
 17678  000038  195B               	dw	_Default_ISR shr (0+2)
 17679                           
 17680                           ; Vector 25 : I2C1
 17681  00003A  195B               	dw	_Default_ISR shr (0+2)
 17682                           
 17683                           ; Vector 26 : I2C1E
 17684  00003C  195B               	dw	_Default_ISR shr (0+2)
 17685                           
 17686                           ; Vector 27 : U1RX
 17687  00003E  1886               	dw	_UART1_rx_vect_isr shr (0+2)
 17688                           
 17689                           ; Vector 28 : U1TX
 17690  000040  187C               	dw	_UART1_tx_vect_isr shr (0+2)
 17691                           
 17692                           ; Vector 29 : U1E
 17693  000042  195B               	dw	_Default_ISR shr (0+2)
 17694                           
 17695                           ; Vector 30 : U1
 17696  000044  195B               	dw	_Default_ISR shr (0+2)
 17697                           
 17698                           ; Vector 31 : TMR0
 17699  000046  195B               	dw	_Default_ISR shr (0+2)
 17700                           
 17701                           ; Vector 32 : TMR1
 17702  000048  195B               	dw	_Default_ISR shr (0+2)
 17703                           
 17704                           ; Vector 33 : TMR1G
 17705  00004A  195B               	dw	_Default_ISR shr (0+2)
 17706                           
 17707                           ; Vector 34 : TMR2
 17708  00004C  195B               	dw	_Default_ISR shr (0+2)
 17709                           
 17710                           ; Vector 35 : CCP1
 17711  00004E  195B               	dw	_Default_ISR shr (0+2)
 17712                           
 17713                           ; Vector 36 : Undefined
 17714  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17715                           
 17716                           ; Vector 37 : NCO1
 17717  000052  195B               	dw	_Default_ISR shr (0+2)
 17718                           
 17719                           ; Vector 38 : CWG1
 17720  000054  195B               	dw	_Default_ISR shr (0+2)
 17721                           
 17722                           ; Vector 39 : CLC1
 17723  000056  195B               	dw	_Default_ISR shr (0+2)
 17724                           
 17725                           ; Vector 40 : INT1
 17726  000058  193D               	dw	_INT1_ISR shr (0+2)
 17727                           
 17728                           ; Vector 41 : CMP2
 17729  00005A  195B               	dw	_Default_ISR shr (0+2)
 17730                           
 17731                           ; Vector 42 : DMA2SCNT
 17732  00005C  195B               	dw	_Default_ISR shr (0+2)
 17733                           
 17734                           ; Vector 43 : DMA2DCNT
 17735  00005E  195B               	dw	_Default_ISR shr (0+2)
 17736                           
 17737                           ; Vector 44 : DMA2OR
 17738  000060  195B               	dw	_Default_ISR shr (0+2)
 17739                           
 17740                           ; Vector 45 : DMA2A
 17741  000062  195B               	dw	_Default_ISR shr (0+2)
 17742                           
 17743                           ; Vector 46 : I2C2RX
 17744  000064  195B               	dw	_Default_ISR shr (0+2)
 17745                           
 17746                           ; Vector 47 : I2C2TX
 17747  000066  195B               	dw	_Default_ISR shr (0+2)
 17748                           
 17749                           ; Vector 48 : I2C2
 17750  000068  195B               	dw	_Default_ISR shr (0+2)
 17751                           
 17752                           ; Vector 49 : I2C2E
 17753  00006A  195B               	dw	_Default_ISR shr (0+2)
 17754                           
 17755                           ; Vector 50 : U2RX
 17756  00006C  189A               	dw	_UART2_rx_vect_isr shr (0+2)
 17757                           
 17758                           ; Vector 51 : U2TX
 17759  00006E  1890               	dw	_UART2_tx_vect_isr shr (0+2)
 17760                           
 17761                           ; Vector 52 : U2E
 17762  000070  195B               	dw	_Default_ISR shr (0+2)
 17763                           
 17764                           ; Vector 53 : U2
 17765  000072  195B               	dw	_Default_ISR shr (0+2)
 17766                           
 17767                           ; Vector 54 : TMR3
 17768  000074  195B               	dw	_Default_ISR shr (0+2)
 17769                           
 17770                           ; Vector 55 : TMR3G
 17771  000076  195B               	dw	_Default_ISR shr (0+2)
 17772                           
 17773                           ; Vector 56 : TMR4
 17774  000078  195B               	dw	_Default_ISR shr (0+2)
 17775                           
 17776                           ; Vector 57 : CCP2
 17777  00007A  195B               	dw	_Default_ISR shr (0+2)
 17778                           
 17779                           ; Vector 58 : Undefined
 17780  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17781                           
 17782                           ; Vector 59 : CWG2
 17783  00007E  195B               	dw	_Default_ISR shr (0+2)
 17784                           
 17785                           ; Vector 60 : CLC2
 17786  000080  195B               	dw	_Default_ISR shr (0+2)
 17787                           
 17788                           ; Vector 61 : INT2
 17789  000082  1941               	dw	_INT2_ISR shr (0+2)
 17790                           
 17791                           ; Vector 62 : Undefined
 17792  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17793                           
 17794                           ; Vector 63 : Undefined
 17795  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17796                           
 17797                           ; Vector 64 : Undefined
 17798  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17799                           
 17800                           ; Vector 65 : Undefined
 17801  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17802                           
 17803                           ; Vector 66 : Undefined
 17804  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17805                           
 17806                           ; Vector 67 : Undefined
 17807  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17808                           
 17809                           ; Vector 68 : Undefined
 17810  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17811                           
 17812                           ; Vector 69 : Undefined
 17813  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17814                           
 17815                           ; Vector 70 : TMR5
 17816  000094  16A1               	dw	_TMR5_ISR shr (0+2)
 17817                           
 17818                           ; Vector 71 : TMR5G
 17819  000096  195B               	dw	_Default_ISR shr (0+2)
 17820                           
 17821                           ; Vector 72 : TMR6
 17822  000098  1914               	dw	_TMR6_ISR shr (0+2)
 17823                           
 17824                           ; Vector 73 : CCP3
 17825  00009A  195B               	dw	_Default_ISR shr (0+2)
 17826                           
 17827                           ; Vector 74 : CWG3
 17828  00009C  195B               	dw	_Default_ISR shr (0+2)
 17829                           
 17830                           ; Vector 75 : CLC3
 17831  00009E  195B               	dw	_Default_ISR shr (0+2)
 17832                           
 17833                           ; Vector 76 : Undefined
 17834  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17835                           
 17836                           ; Vector 77 : Undefined
 17837  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17838                           
 17839                           ; Vector 78 : Undefined
 17840  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17841                           
 17842                           ; Vector 79 : Undefined
 17843  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17844                           
 17845                           ; Vector 80 : CCP4
 17846  0000A8  195B               	dw	_Default_ISR shr (0+2)
 17847                           
 17848                           ; Vector 81 : CLC4
 17849  0000AA  195B               	dw	_Default_ISR shr (0+2)
 17850  0000AC                     ivt0x8_undefint:
 17851                           	opt callstack 0
 17852  0000AC  00FF               	reset	
 17853                           
 17854                           	psect	text113
 17855  000000                     __ptext113:
 17856                           	opt callstack 0
 17857                           
 17858                           	psect	rparam
 17859  0000                     
 17860                           	psect	temp
 17861  00003D                     btemp:
 17862                           	opt callstack 0
 17863  00003D                     	ds	32
 17864  0000                     wtemp0	set	btemp
 17865  0000                     wtemp1	set	btemp+2
 17866  0000                     wtemp2	set	btemp+4
 17867  0000                     wtemp3	set	btemp+6
 17868  0000                     wtemp4	set	btemp+8
 17869  0000                     wtemp5	set	btemp+10
 17870  0000                     wtemp8	set	btemp+1
 17871  0000                     ttemp0	set	btemp
 17872  0000                     ttemp1	set	btemp+3
 17873  0000                     ttemp2	set	btemp+6
 17874  0000                     ttemp3	set	btemp+9
 17875  0000                     ttemp5	set	btemp+1
 17876  0000                     ttemp6	set	btemp+4
 17877  0000                     ttemp7	set	btemp+8
 17878  0000                     ltemp0	set	btemp
 17879  0000                     ltemp1	set	btemp+4
 17880  0000                     ltemp2	set	btemp+8
 17881  0000                     lltemp0	set	btemp
 17882  0000                     lltemp1	set	btemp+8
 17883  0000                     lltemp2	set	btemp+16
 17884  0000                     lltemp3	set	btemp+24
 17885                           tosu	equ	0x3FFF
 17886                           tosh	equ	0x3FFE
 17887                           tosl	equ	0x3FFD
 17888                           stkptr	equ	0x3FFC
 17889                           pclatu	equ	0x3FFB
 17890                           pclath	equ	0x3FFA
 17891                           pcl	equ	0x3FF9
 17892                           tblptru	equ	0x3FF8
 17893                           tblptrh	equ	0x3FF7
 17894                           tblptrl	equ	0x3FF6
 17895                           tablat	equ	0x3FF5
 17896                           prodh	equ	0x3FF4
 17897                           prodl	equ	0x3FF3
 17898                           indf0	equ	0x3FEF
 17899                           postinc0	equ	0x3FEE
 17900                           postdec0	equ	0x3FED
 17901                           preinc0	equ	0x3FEC
 17902                           plusw0	equ	0x3FEB
 17903                           fsr0h	equ	0x3FEA
 17904                           fsr0l	equ	0x3FE9
 17905                           wreg	equ	0x3FE8
 17906                           indf1	equ	0x3FE7
 17907                           postinc1	equ	0x3FE6
 17908                           postdec1	equ	0x3FE5
 17909                           preinc1	equ	0x3FE4
 17910                           plusw1	equ	0x3FE3
 17911                           fsr1h	equ	0x3FE2
 17912                           fsr1l	equ	0x3FE1
 17913                           bsr	equ	0x3FE0
 17914                           indf2	equ	0x3FDF
 17915                           postinc2	equ	0x3FDE
 17916                           postdec2	equ	0x3FDD
 17917                           preinc2	equ	0x3FDC
 17918                           plusw2	equ	0x3FDB
 17919                           fsr2h	equ	0x3FDA
 17920                           fsr2l	equ	0x3FD9
 17921                           status	equ	0x3FD8


Data Sizes:
    Strings     195
    Constant    0
    Data        620
    BSS         549
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      1      62
    BANK0           160      3     160
    BANK1           256      0     248
    BANK2           256      0     256
    BANK3           256      0     190
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 98
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[98]), 

    a	PTR const unsigned char  size(2) Largest target is 98
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[98]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_15(CODE[26]), STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4458_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[98]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[98]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[98]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16646.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16646.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    k	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    t_link	PTR enum E16172 size(1) Largest target is 98
		 -> V(BANK0[98]), 

    S3767response_type$reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16634.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    S3767response_type$header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    F16634.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    r_protocol@b_block	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), NULL(NULL[0]), 

    r_link	PTR enum E16172 size(1) Largest target is 98
		 -> V(BANK0[98]), 

    m_link	PTR enum E16172 size(1) Largest target is 98
		 -> V(BANK0[98]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[91]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    strPtr	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1986spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1986spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   42791
                  _SYSTEM_Initialize
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                              _srand
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    1978
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5    1188
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     132
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21     9     12    8432
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    1001
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           2     1      1    1083
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (2) _secs_gem_state                                       2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   19158
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9633
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9463
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9432
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8207
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    8108
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7869
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            3     3      0      90
                                              0 BANK0      3     3      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _srand
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     101      69        3.1%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      BE      11       74.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F8       7       96.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3      A0       5      100.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      1      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     394      58        0.0%
DATA                 0      0     495       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr  2 20:30:08 2019

                    _SPI1_Exchange8bit 63C2                                      _V 0060  
     __end_of_TMR5_SetInterruptHandler 6150              __end_of_UART2_is_rx_ready 6556  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 6546                            __CFG_LVP$ON 000000  
                                  _H10 0107                                    _H12 0162  
                                  _H13 01C0                                    _H14 01AF  
                                  _H24 0180                                    _H17 019B  
                                  _H53 0386                                    l194 64AA  
                                  l572 5DA0                                    l717 5F3E  
                                  l851 63D0                                    l579 5D10  
                                  l692 5D62                                    l597 5F12  
                                  l699 5CD2                                    _GIE 01FE97  
                                  _abs 5B68                                    _pad 4A8C  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 631C  
                         _run_checksum 5F98                     _UART1_Transmit_ISR 5EEC  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 633E  
                         __CFG_ZCD$OFF 000000                                   _H254 03BE  
                                 l1230 2102                                   l1128 5CB6  
                                 l1240 21BE                                   l1251 22B6  
                                 l1260 23FA                                   l1270 256C  
                                 l1254 2304                                   l1271 2598  
                                 l1280 25B8                                   l1256 2308  
                                 l1353 59E2                                   l1290 25D0  
                                 l1266 24FE                                   l1711 446E  
                                 l1636 3448                                   l1493 56F0  
                                 l1581 2B94                                   l2606 5BA8  
                                 l1814 5E40                                   l1911 2AEA  
                                 l1489 5350                                   l1690 40FE  
                                 l2628 4CA2                                   l1845 4AE8  
                                 l1865 306A                                   l5403 3EDE  
                                 l1892 3B3C                                   l2668 4A82  
                                 l5431 47A2                                   l5423 471A  
                                 l6217 5D78                                   l6241 5D3A  
                                 l8101 561C                                   l6271 5C24  
                                 l8111 4AE0                                   l5391 3E0C  
                                 l5439 484E                                   l5367 5B98  
                                 l6351 520C                                   l6503 45E0  
                                 l6423 44CA                                   l8121 4B78  
                                 l8113 4AF2                                   l5385 3DC6  
                                 l8201 33C2                                   l6337 5FA4  
                                 l6345 51FA                                   l9001 2E8E  
                                 l6505 461E                                   l6409 448C  
                                 l6267 5BFA                                   l8107 4AB8  
                                 l8131 5742                                   l5379 3D72  
                                 l6355 5210                                   l6443 4522  
                                 l8117 4B2E                                   l8213 3ABE  
                                 l6365 521C                                   l6349 5204  
                                 l9021 2F0C                                   l6453 4544  
                                 l6429 44E8                                   l6541 4672  
                                 l5813 5CF2                                   l6703 5F0E  
                                 l5591 4960                                   l6279 5E4A  
                                 l6383 526A                                   l6375 525A  
                                 l6367 5248                                   l6359 5214  
                                 l6391 52A2                                   l9031 2F2A  
                                 l9023 2F10                                   l6455 456A  
                                 l6543 46A4                                   l5815 5CF4  
                                 l6713 639E                                   l8129 5716  
                                 l8233 3BAE                                   l9025 2F18  
                                 l6529 4658                                   l6473 458E  
                                 l8401 4FA8                                   l8163 30A4  
                                 l8155 305A                                   l8251 3CD0  
                                 l8243 3C68                                   l5595 4990  
                                 l8315 2A7C                                   l9027 2F1C  
                                 l9019 2EFE                                   l9035 2F38  
                                 l6491 45C6                                   l6475 45A8  
                                 l5827 5F66                                   l9211 24C0  
                                 l6725 5F3A                                   l8077 4BD0  
                                 l8237 3BDE                                   l8229 3B72  
                                 l8309 2A28                                   l8325 2A9C  
                                 l6389 527C                                   l9029 2F24  
                                 l9037 2F7A                                   l5773 5D30  
                                 l8405 501A                                   l8501 4420  
                                 l9141 228E                                   l6751 5C9E  
                                 l6735 63BE                                   l8087 537E  
                                 l8167 30C2                                   l8247 3C94  
                                 l8319 2A80                                   l5687 59F4  
                                 l5775 5D32                                   l8503 4448  
                                 l9215 24D0                                   l9135 2282  
                                 l9119 2222                                   l9071 20EC  
                                 l8097 55DE                                   l8089 53A0  
                                 l8177 32D4                                   l8353 38BC  
                                 l8441 5448                                   l9225 2502  
                                 l9145 22A6                                   l9137 2286  
                                 l9073 20F4                                   l8283 2808  
                                 l8275 2724                                   l8347 37FE  
                                 l5787 5F90                                   l9243 25BC  
                                 l9227 252E                                   l9155 22D6  
                                 l9075 2108                                   l8197 3386  
                                 l8381 5592                                   l5885 62AA  
                                 l8509 444E                                   l9245 25D4  
                                 l9237 2570                                   l8287 285A  
                                 l8367 39D4                                   l8359 3926  
                                 l8471 434A                                   l8463 429A  
                                 l9255 2642                                   l9183 23E0  
                                 l9175 236A                                   l9159 22EC  
                                 l8721 36FE                                   l8617 3476  
                                 l9177 239C                                   l8299 2980  
                                 l8379 5550                                   l8715 36E4  
                                 l8651 3532                                   l8643 3504  
                                 l8627 34AA                                   l8731 3712  
                                 l8483 439E                                   l8475 4364  
                                 l8811 413C                                   l8803 411E  
                                 l8901 2BE6                                   l8725 370A  
                                 l8629 34B6                                   l8733 3754  
                                 l8493 43E6                                   l8485 43C6  
                                 l8821 415C                                   l8719 36FA  
                                 l8671 35D4                                   l8663 3576  
                                 l8655 3542                                   l8647 3522  
                                 l8831 418A                                   l8807 4134  
                                 l9199 2454                                   l8921 2C5C  
                                 l8913 2C1A                                   l8681 363C  
                                 l8489 43CC                                   l8833 4198  
                                 l8753 3FC2                                   l8745 3F94  
                                 l8683 3640                                   l8667 35A4  
                                 l8659 3552                                   l8835 419C  
                                 l8763 3FF6                                   l8843 41BA  
                                 l8925 2C8A                                   l8917 2C38  
                                 l8837 41A4                                   l8781 406E  
                                 l8765 4008                                   l8845 41FC  
                                 l8951 2D40                                   l8871 2B46  
                                 l8695 3668                                   l8599 3410  
                                 l8839 41AC                                   l8775 404A  
                                 l8937 2D08                                   l8929 2CBA  
                                 l8857 2AF8                                   l8793 40D0  
                                 l8785 4094                                   l8971 2DB6  
                                 l8963 2D74                                   l8939 2D0C  
                                 l8891 2BBA                                   l8779 4062  
                                 l8975 2DE4                                   l8967 2D92  
                                 STR_1 206F                                   STR_2 209D  
                                 STR_3 20B5                                   STR_4 2080  
                                 l8987 2E62                                   l8979 2E14  
                                 STR_5 2035                                   STR_6 208F  
                                 l8989 2E66                                   STR_7 20AF  
                                 STR_8 20A9                                   STR_9 205D  
                                 u3010 4A38                                   _LATA 003FBA  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 _LATD 003FBD                                   _LATE 003FBE  
                                 _LATF 003FBF                                   u3300 57F8  
                                 u2501 3DCC                                   u2510 3E06  
                                 u2520 3E38                                   u2610 476A  
                                 u2450 5B7C                                   u2540 3F16  
                                 u2620 479C                                   u5020 2774  
                                 u3325 582C                                   u3326 582E  
                                 u3318 57FA                                   u2470 3D6C  
                                 u2630 47CE                                   u5110 3A48  
                                 u2560 3F68                                   u5040 28B2  
                                 u2490 3DC2                                   u2650 4886  
                                 u3450 5256                                   u2670 48D8  
                                 u2590 4714                                   u5150 5438  
                                 u5160 4294                                   u4610 4BC4  
                                 _T6PR 003F93                                   _PMD0 0039C0  
                                 u5405 36A2                                   _PMD1 0039C1  
                                 u4630 4C40                                   _PMD2 0039C2  
                                 u5415 36B2                                   u5407 36A6  
                                 _PMD3 0039C3                                   u4640 53CE  
                                 u4800 3090                                   _PMD4 0039C4  
                                 u5417 36B6                                   _PMD5 0039C5  
                                 u4810 32E8                                   u4730 2FBC  
                                 _PMD6 0039C6                                   _PMD7 0039C7  
                                 u4740 2FBE                                   u4821 3318  
                                 u4830 332E                                   u4647 53C0  
                                 u4831 332C                                   u4840 3342  
                                 u4760 302E                                   u4850 3346  
                                 u5395 3692                                   u5491 4088  
                                 u4780 3040                                   u4940 3BD4  
                                 u5397 3696                                   u4870 335C  
                                 u4950 3C1A                                   u5815 2EB8  
                                 u5825 2EC8                                   u5817 2EBC  
                                 u5835 2ED8                                   u5827 2ECC  
                                 u4980 3CF6                                   u4957 3C0C  
                                 u5837 2EDC                                   _PLLR 01CEE0  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                        _INT2_CallBack 6360                       __end_of_ADCC_ISR 5EEC  
                        __CFG_FCMEN$ON 000000                                   _dbuf 01D0  
                                 _ctoa 56F8                                   _main 20C6  
                                 _dtoa 2F8C                                   _seed 01F0  
                                 _prec 001F                                   _nout 00FB  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 3A52  
                                 btemp 003D      __size_of_INT2_SetInterruptHandler 0028  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 0029              __end_of_SPI1_Exchange8bit 63E0  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 6218  
                         ___param_bank 000000             __size_of_UART1_is_rx_ready 0008  
                   ?_UART1_rx_vect_isr 005E             __size_of_UART1_is_tx_ready 0008  
                     __end_of_INT0_ISR 64F2                       __end_of_INT1_ISR 6502  
                     __end_of_INT2_ISR 6512         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 5358          __end_of_OSCILLATOR_Initialize 64B0  
                                PRLOCK 0039EF                        __end_of___aodiv 3F90  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                                _ADCLK 003EFF                        __end_of___aomod 48FC  
                                _ADPCH 003EF1                                  _ADREF 003EFD  
                                STR_10 2035                                  STR_11 2001  
                                STR_12 204A                                  STR_13 20A9  
                                STR_21 20BB                                  STR_14 2001  
                                STR_23 20BE                                  STR_15 201B  
                                STR_16 20A6                                  STR_25 20BE  
                                STR_17 20C1                          __CFG_WDTE$OFF 000000  
                                STR_19 20BB                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
                                _U1UIR 003DF8                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 005E                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 656C  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 61F0  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 5AD2  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 646A  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 002E  
                                _flags 0021                                  _fputc 4BA0  
           __size_of_send_lcd_cmd_long 0028                                  _fputs 55CE  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 005E  
                                _srand 5E5E                                  _width 001D  
                                _putch 6434               _INT1_SetInterruptHandler 6178  
                                pclath 003FFA                                  tablat 003FF5  
              __size_of_DSM_Initialize 001C                                  ltemp0 003D  
                                ltemp1 0041                                  ltemp2 0045  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 003D  
                                ttemp1 0040                                  ttemp2 0043  
                                ttemp3 0046                                  ttemp5 003E  
                                ttemp6 0041                                  ttemp7 0045  
                       _secs_gem_state 51F8                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 60D8            _UART1_SetRxInterruptHandler 60B0  
                                wtemp0 003D                                  wtemp1 003F  
                                wtemp2 0041                                  wtemp3 0043  
                                wtemp4 0045                                  wtemp5 0047  
                                wtemp8 003E                        __end_of_sprintf 51F8  
                      __end_of_strncmp 4A8C                    ??_UART1_tx_vect_isr 005E  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 623E  
             __size_of_SPI1_Initialize 0016                        _TMR5_Initialize 5BAE  
                __end_of_ringBufS_init 6038                        __initialization 4DAE  
                    _UART2_rx_vect_isr 6268                           __end_of_ctoa 5780  
                         __end_of_main 2646                           __end_of_dtoa 340C  
                         __end_of_stoa 3D10             __size_of_UART2_is_rx_ready 0008  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005E  
           __size_of_UART2_is_tx_ready 0008               _TMR5_SetInterruptHandler 6128  
                        __activetblptr 000003              __size_of_DMA1_DMASCNT_ISR 0010  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 005E  
            __end_of_UART1_tx_vect_isr 6216                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 60D8                       _UART1_Initialize 5850  
                    _UART2_tx_vect_isr 6240                     _UART2_Transmit_ISR 5F18  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                                 _ADLTHH 003EDF  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 005E                                 _MD1SRC 003CFC  
               __end_of_secs_gem_state 52AE                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                    __size_of_UART2_Read 003E  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RA4PPS 003A04                                 _RA5PPS 003A05  
                               _RA6PPS 003A06                                 _RC3PPS 003A13  
                               _RB6PPS 003A0E                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                                 i2l1145 5ACA  
                       __CFG_WDTCCS$SC 000000                                 u125_48 632A  
                               u127_48 634C                                 u129_48 636E  
                               u340_40 6472                                 u340_46 6474  
                               _SCANPR 0039F7                                 u363_48 62C2  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F                                 u366_48 62E6  
         __size_of_eaDogM_WriteCommand 000E                                 _OSCFRQ 0039DF  
             __end_of_send_lcd_cmd_dma 5A82                    ??_UART2_tx_vect_isr 005E  
            __end_of_UART2_rx_vect_isr 628E             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 6512                       _UART2_Initialize 5978  
                               _WaitMs 5E28   __size_of_ADCC_SetADIInterruptHandler 0028  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 5666  
                               _memset 3766                                 clear_0 4E54  
                               clear_1 4E62                                 clear_2 4E74  
                               clear_3 4E80                                 clear_4 4E8C  
                               _printf 5916                     _eaDogM_WriteString 53FA  
                            ?_ADCC_ISR 005E                                 _strlen 5358  
                   __size_of_TimerDone 0024                           __pdataBIGRAM 03BE  
                      _ADCC_Initialize 5B1E                         _PMD_Initialize 64B0  
 __end_of_INT2_DefaultInterruptHandler 6578  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 6576                           __pdataCOMRAM 005D  
            __end_of_UART2_tx_vect_isr 6266                                 lltemp0 003D  
                               lltemp1 0045                                 lltemp2 004D  
                               lltemp3 0055                           __mediumconst 0000  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 5A32  
                     __end_of_vfprintf 55CE                             _StartTimer 5DB4  
                      _CLC1_Initialize 62FA          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 5BF4                      _SYSTEM_Initialize 5C3A  
                           __accesstop 0060                __end_of__initialization 4E9E  
                            ?_INT0_ISR 005E                              ?_INT1_ISR 005E  
                            ?_INT2_ISR 005E              __end_of_CLKREF_Initialize 651C  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 5C7C                 __end_of_ringBufS_flush 56F8  
                       __pcstackCOMRAM 005E                             ___inthi_sp 0DD6  
                         __pidataBANK0 58B4                           __pidataBANK1 5060  
                         __pidataBANK3 5DF0                              ?_TMR5_ISR 005E  
                            ?_TMR6_ISR 005E                         ivt0x8_undefint 00AC  
                        __end_of_fputc 4CAC                          __end_of_fputs 5666  
                        __end_of_srand 5E92                  __end_of_TMR5_CallBack 62FA  
                        __end_of_putch 644E                __end_of_TMR6_Initialize 6100  
               __end_of_PMD_Initialize 64C4                __size_of_block_checksum 00D2  
                           ??_ADCC_ISR 005E                  __end_of_TMR6_CallBack 62D6  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 6528       __end_of_INT2_SetInterruptHandler 6178  
             _UART2_RxInterruptHandler 0011              __end_of_SYSTEM_Initialize 5C7C  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 6418                             __pbssBANK0 00C2  
                           __pbssBANK1 01D0                             __pbssBANK2 0200  
                           __pbssBANK3 0300                  _INT0_InterruptHandler 001A  
                           ??_INT0_ISR 005E                             ??_INT1_ISR 005E  
                           ??_INT2_ISR 005E                      __end_of_TimerDone 62B2  
                     _DMA1_DMADCNT_ISR 651C              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                __end_of_wait_lcd_done 63FC                        __CFG_PPS1WAY$ON 000000  
     __end_of_TMR6_SetInterruptHandler 6128                __end_of_ADCC_Initialize 5B68  
                           ??_TMR5_ISR 00FD                             ??_TMR6_ISR 005E  
                   __size_of_secs_send 026A                                _CLC1CON 003C74  
                              _CLC1POL 003C75                                _DMA1DSA 003BF0  
                              _DMA1DSZ 003BEE                                _DMA1SSA 003BF9  
                              _DMA1SSZ 003BF7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                                _MD1CARH 003CFE  
                              _MD1CARL 003CFD                      _UART1_Receive_ISR 6382  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                              _NCO1CLK 003F3F                         ?_DMA1_DMAA_ISR 005E  
                     _DMA1_DMASCNT_ISR 64C4                                _NCO1CON 003F3E  
                              _U1ERRIE 003DFA                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 631C                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 005E  
                 __size_of_UART1_Write 003E              __size_of_UART2_put_buffer 002A  
           __size_of_UART2_tx_vect_isr 0026                   __size_of_UART2_Write 003E  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 04AE  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
               __end_of_DSM_Initialize 6434                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 5CBC                     __end_of_UART1_Read 5DB4  
                   __end_of_UART2_Read 5D76      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000                                __Lparam 0000  
             __end_of_UART1_Initialize 58B4                        __size_of_WaitMs 0036  
                              ___aodiv 3D10                                ___aomod 46BC  
                           _m_protocol 2AF4              __end_of_UART1_Receive_ISR 63A2  
                         __psmallconst 2000                   __end_of_init_display 4F8E  
                              __pcinit 4DAE                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 64D4                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 20C6                                __ptext1 3F90  
                              __ptext2 420E                                __ptext3 4F8E  
                              __ptext4 5F44                                __ptext5 653E  
                              __ptext6 5CBC                                __ptext7 5F6E  
                              __ptext8 6546                                __ptext9 4478  
                    _UART2_Receive_ISR 63A2                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 00A2  
                              us257999 3F7A                  _OSCILLATOR_Initialize 649A  
                              us268999 48EA                                us348999 46AE  
                         __size_of_abs 0046                                _r_block 00C2  
                              us472999 2FA6                           __size_of_pad 0114  
                              us489999 3A64                                _mode_sw 0030  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 59D6                     m_protocol@rxData_l 002F  
           __size_of_SYSTEM_Initialize 0042                                _sprintf 5130  
                              _strncmp 48FC                   end_of_initialization 4E9E  
                    __end_of_secs_send 4478               _INT2_SetInterruptHandler 6150  
             __size_of_secs_II_message 0244                             _r_protocol 340C  
  __end_of_UART1_SetTxInterruptHandler 60B0            _UART1_SetTxInterruptHandler 6088  
  __end_of_UART2_SetRxInterruptHandler 6088            _UART2_SetRxInterruptHandler 6060  
                           _t_protocol 3F90                      __end_of_vfpfcnvrt 2AF4  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 656A  
            __end_of_UART2_Receive_ISR 63C2                         wdtdelay@dcount 00EE  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 005F  
                       _block_checksum 4F8E                  _INT1_InterruptHandler 0017  
                            _PORTBbits 003FCB               _TMR6_SetInterruptHandler 6100  
                _TMR5_InterruptHandler 00F2   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002C    __end_of_ADCC_SetADIInterruptHandler 61F0  
          _ADCC_SetADIInterruptHandler 61C8                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 5780  
                      _SPI1_Initialize 6484                       _UART1_put_buffer 5F6E  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E                      r_protocol@b_block 0023  
                       __end_of_WaitMs 5E5E           __end_of_INTERRUPT_Initialize 5850  
               __end_of_block_checksum 5060   __end_of_INT0_DefaultInterruptHandler 6574  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 6572  
           __size_of_UART1_Receive_ISR 0020                          __pidataBIGRAM 4CAC  
                        __pidataCOMRAM 657A                      __size_of_TMR5_ISR 004E  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 3A52                         __end_of_printf 5978  
             __end_of_DMA1_DMADCNT_ISR 6526                       _UART2_put_buffer 5F44  
                __end_of_INT0_CallBack 633E                         __end_of_strlen 53FA  
                  start_initialization 4DAE   __end_of_TMR5_DefaultInterruptHandler 6484  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 646A  
      __size_of_PIN_MANAGER_Initialize 009E                            __end_of_abs 5BAE  
                __end_of_INT1_CallBack 6360                            __end_of_pad 4BA0  
                 __size_of_Default_ISR 0006                   __end_of_send_lcd_cmd 6010  
                           ivt0x8_base 0008                  __end_of_INT2_CallBack 6382  
                 secs_II_message@block 0001                          _uart1RxBuffer 0280  
                        _uart1TxBuffer 02C0                          _uart2RxBuffer 0200  
             __end_of_DMA1_DMASCNT_ISR 64D4                          _uart2TxBuffer 0240  
                       _DMA1_DMAOR_ISR 6534                       __CFG_LPBOREN$OFF 000000  
                __size_of_init_display 00EA            __size_of_eaDogM_WriteString 009E  
                            _TimerDone 628E                          _ringBufS_init 6010  
                          _MD1CON0bits 003CFA                            _MD1CON1bits 003CFB  
                          __pdataBANK0 0060                            __pdataBANK1 0100  
                          __pdataBANK3 0386             __size_of_UART2_Receive_ISR 0020  
           __end_of_EXT_INT_Initialize 5B1E                        run_checksum@sum 0025  
      __end_of_eaDogM_WriteStringAtPos 5EBE                __end_of_DMA1_Initialize 57EA  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 61C8  
                        __pcstackBANK0 00FD                __end_of_SPI1_Initialize 649A  
             _UART1_RxInterruptHandler 000B               _UART2_TxInterruptHandler 000E  
                  __size_of_m_protocol 0498              __size_of_ringBufS_put_dma 00AA  
                         _init_display 4EA4                 __end_of_DMA1_DMAOR_ISR 653E  
               __size_of_TMR5_CallBack 0024                  _INT2_InterruptHandler 0014  
                _TMR6_InterruptHandler 00F5                 __size_of_TMR6_CallBack 0024  
               _PIN_MANAGER_Initialize 5498                   __end_of_wait_lcd_set 6564  
                            __ptext100 6268                              __ptext101 63A2  
                            __ptext110 5C7C                              __ptext102 6450  
                            __ptext111 62D6                              __ptext103 62B2  
                            __ptext112 646A                              __ptext104 5BF4  
                            __ptext113 0000                              __ptext105 64C4  
                            __ptext106 651C                              __ptext107 6528  
                            __ptext108 6534                              __ptext109 5A84  
                   __end_of_StartTimer 5DF0                      __size_of_wdtdelay 005C  
                    __size_of_vfprintf 0098                               _ADCC_ISR 5EC0  
                  __size_of_r_protocol 035A                 __CFG_BBSIZE$BBSIZE_512 000000  
                          __smallconst 2000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 027E                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 010C                         __size_of_fputs 0098  
                       __size_of_srand 0034                               _NCO1ACCH 003F39  
                       __size_of_putch 001A                               _NCO1ACCL 003F38  
                             _NCO1ACCU 003F3A                   _INTERRUPT_Initialize 57EA  
                             _T6CLKCON 003F96                               _NCO1INCH 003F3C  
                             _NCO1INCL 003F3B                               _NCO1INCU 003F3D  
                      ?_DMA1_DMAOR_ISR 005E                               _INT0_ISR 64E4  
                             _INT1_ISR 64F4                               _INT2_ISR 6504  
                             _LATCbits 003FBC                               _LATDbits 003FBD  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                            _secs_send 420E                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 00DB                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR7bits 003987  
                             _IPR8bits 003988                               _PIE6bits 003996  
                             _PIE7bits 003997                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0343  
                            _ring_buf2 0300                               i2u431_48 5ED8  
                             _PIR1bits 0039A1                               i2u433_48 6202  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             i2u435_48 622A                               i2u437_48 6252  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               i2u439_48 627A  
                             _PIR5bits 0039A5                               _PIR7bits 0039A7  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
             __size_of_TMR5_Initialize 0046             __end_of_UART1_Transmit_ISR 5F18  
                             _TMR5_ISR 5A84                               _TMR6_ISR 6450  
                            _vfpfcnvrt 2646                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 62D6                              _start_lcd 6564  
            __size_of_send_lcd_cmd_dma 0050                          _TMR6_CallBack 62B2  
             __end_of_UART1_put_buffer 5F98                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                    __end_of_UART1_Write 5D38  
                  __end_of_UART2_Write 5CFA               __size_of_TMR6_Initialize 0028  
                          _INTCON0bits 003FD2                              copy_data0 4DC2  
                            copy_data1 4DE8                              copy_data2 4E0A  
                            copy_data3 4E2C               _INT0_SetInterruptHandler 61A0  
               _uart1TxBufferRemaining 003A    __end_of_UART2_SetTxInterruptHandler 6060  
          _UART2_SetTxInterruptHandler 6038                           _uart1RxCount 0037  
             __end_of_UART2_put_buffer 5F6E                           _uart2RxCount 0031  
                             __Hrparam 0000       __size_of_eaDogM_WriteStringAtPos 002C  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                   __end_of_run_checksum 5FC0  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                        _wait_lcd_done 63E0                           _send_lcd_cmd 5FE8  
                     __size_of___aodiv 0280                       __size_of___aomod 0240  
                      _NCO1_Initialize 63FC                  __end_of_DMA1_DMAA_ISR 6532  
 __size_of_UART1_SetRxInterruptHandler 0028                      ?_DMA1_DMADCNT_ISR 005E  
             __size_of_ADCC_Initialize 004A            __end_of_eaDogM_WriteCommand 64E2  
                             __pivt0x8 0008                     ??_DMA1_DMADCNT_ISR 005F  
                             __ptext10 5E5E                               __ptext11 5130  
                             __ptext20 654E                               __ptext12 340C  
                             __ptext21 5D38                               __ptext13 5CFA  
                             __ptext30 53FA                               __ptext22 6556  
                             __ptext14 2AF4                               __ptext31 64D4  
                             __ptext23 5D76                               __ptext15 51F8  
                             __ptext40 5536                               __ptext32 5A32  
                             __ptext24 4EA4                               __ptext16 5F98  
                             __ptext41 2646                               __ptext33 655E  
                             __ptext25 5FC0                               __ptext17 5E28  
                             __ptext50 5358                               __ptext42 48FC  
                             __ptext34 63E0                               __ptext26 5FE8  
                             __ptext18 628E                               __ptext51 55CE  
                             __ptext43 3A52                               __ptext35 59D6  
                             __ptext27 63C2                               __ptext19 5DB4  
                             __ptext60 6088                               __ptext52 4BA0  
                             __ptext44 2F8C                               __ptext36 6564  
                             __ptext28 6010                               __ptext61 60B0  
                             __ptext53 6434                               __ptext45 5B68  
                             __ptext37 5666                               __ptext29 5E92  
                             __ptext70 63FC                               __ptext62 60D8  
                             __ptext54 52AE                               __ptext46 46BC  
                             __ptext38 3766                               __ptext71 57EA  
                             __ptext63 6100                               __ptext55 5C3A  
                             __ptext47 3D10                               __ptext39 5916  
                             __ptext80 5B1E                               __ptext72 5AD2  
                             __ptext64 5BAE                               __ptext56 5978  
                             __ptext48 56F8                               __ptext81 61C8  
                             __ptext73 6150                               __ptext65 6128  
                             __ptext57 6038                               __ptext49 4A8C  
                             __ptext90 6576                               __ptext82 64E4  
                             __ptext74 6178                               __ptext66 6484  
                             __ptext58 6060                               __ptext91 656C  
                             __ptext83 631C                               __ptext75 61A0  
                             __ptext67 64B0                               __ptext59 5850  
                             __ptext92 5EC0                               __ptext84 6572  
                             __ptext76 6418                               __ptext68 5498  
                             __ptext93 6578                               __ptext85 64F4  
                             __ptext77 5780                               __ptext69 649A  
                             __ptext94 61F0                               __ptext86 633E  
                             __ptext78 6512                               __ptext95 5EEC  
                             __ptext87 6574                               __ptext79 62FA  
                             __ptext96 6218                               __ptext88 6504  
                             __ptext97 6382                               __ptext89 6360  
                             __ptext98 6240                               __ptext99 5F18  
                      _secs_II_message 4478               __size_of_CLC1_Initialize 0022  
                     __size_of_sprintf 00C8                       __size_of_strncmp 0190  
                     _ringBufS_put_dma 52AE                     __end_of_m_protocol 2F8C  
                        __size_of_ctoa 0088                          __size_of_main 0580  
                        __size_of_dtoa 0480                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 005E                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 00F8  
                            stoa@F1142 0100                     ??_DMA1_DMASCNT_ISR 005F  
                             _spi_link 00CF                               _wdtdelay 59D6  
           __end_of_UART2_Transmit_ISR 5F44                               _vfprintf 5536  
                  secs_gem_state@block 002B                      _UART1_is_rx_ready 6556  
                          _UART1_Write 5CFA   __end_of_INT1_DefaultInterruptHandler 6576  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 6574  
                          _UART2_Write 5CBC                      _UART1_is_tx_ready 6546  
                      r_protocol@retry 005D                      t_protocol@requeue 002C  
                        ??_Default_ISR 005E                     __end_of_r_protocol 3766  
                          _uart1RxHead 0039                            _uart1TxHead 003C  
                          _uart2RxHead 0033                            _uart1RxTail 0038  
                          _uart2TxHead 0036                            _uart1TxTail 003B  
                          _uart2RxTail 0032                            _uart2TxTail 0035  
                         _wait_lcd_set 655E                     _EXT_INT_Initialize 5AD2  
 __end_of_TMR6_DefaultInterruptHandler 5C3A  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 5BF4                     __end_of_t_protocol 420E  
 __end_of_ADCC_DefaultInterruptHandler 657A  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 6578                               intlevel2 0000  
                    _send_lcd_cmd_long 5FC0                __size_of_secs_gem_state 00B6  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 5498  
              __end_of_NCO1_Initialize 6418                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
            __end_of_UART1_is_rx_ready 655E                             _UART1_Read 5D76  
               __size_of_INT1_CallBack 0022                             _UART2_Read 5D38  
            __end_of_UART1_is_tx_ready 654E                 __size_of_INT2_CallBack 0022  
                    _UART2_is_rx_ready 654E                 _uart2TxBufferRemaining 0034  
                    _UART2_is_tx_ready 653E                       _send_lcd_cmd_dma 5A32  
                TMR5_ISR@CountCallBack 0027                __end_of_secs_II_message 46BC  
     __end_of_INT1_SetInterruptHandler 61A0              __size_of_UART1_Initialize 0064  
                      t_protocol@block 00E7                       ??_DMA1_DMAOR_ISR 005F  
             _UART1_TxInterruptHandler 0008                        t_protocol@retry 002D  
            __end_of_send_lcd_cmd_long 5FE8                    __end_of_Default_ISR 6572  
       __end_of_PIN_MANAGER_Initialize 5536                  __size_of_run_checksum 0028  
              _eaDogM_WriteStringAtPos 5E92              __size_of_UART2_Initialize 005E  
