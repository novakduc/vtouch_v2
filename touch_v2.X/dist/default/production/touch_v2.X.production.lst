

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 12 04:32:40 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	text0,global,reloc=2,class=CODE,delta=1
    28                           	psect	text1,global,reloc=2,class=CODE,delta=1
    29                           	psect	text2,global,reloc=2,class=CODE,delta=1
    30                           	psect	text3,global,reloc=2,class=CODE,delta=1
    31                           	psect	text4,global,reloc=2,class=CODE,delta=1
    32                           	psect	text5,global,reloc=2,class=CODE,delta=1
    33                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text7,global,reloc=2,class=CODE,delta=1
    35                           	psect	text8,global,reloc=2,class=CODE,delta=1
    36                           	psect	text9,global,reloc=2,class=CODE,delta=1
    37                           	psect	text10,global,reloc=2,class=CODE,delta=1
    38                           	psect	text11,global,reloc=2,class=CODE,delta=1
    39                           	psect	text12,global,reloc=2,class=CODE,delta=1
    40                           	psect	text13,global,reloc=2,class=CODE,delta=1
    41                           	psect	text14,global,reloc=2,class=CODE,delta=1
    42                           	psect	text15,global,reloc=2,class=CODE,delta=1
    43                           	psect	text16,global,reloc=2,class=CODE,delta=1
    44                           	psect	text17,global,reloc=2,class=CODE,delta=1
    45                           	psect	text18,global,reloc=2,class=CODE,delta=1
    46                           	psect	text19,global,reloc=2,class=CODE,delta=1
    47                           	psect	text20,global,reloc=2,class=CODE,delta=1
    48                           	psect	text21,global,reloc=2,class=CODE,delta=1
    49                           	psect	text22,global,reloc=2,class=CODE,delta=1
    50                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text24,global,reloc=2,class=CODE,delta=1
    52                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text26,global,reloc=2,class=CODE,delta=1
    54                           	psect	text27,global,reloc=2,class=CODE,delta=1
    55                           	psect	text28,global,reloc=2,class=CODE,delta=1
    56                           	psect	text29,global,reloc=2,class=CODE,delta=1
    57                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text31,global,reloc=2,class=CODE,delta=1
    59                           	psect	text32,global,reloc=2,class=CODE,delta=1
    60                           	psect	text33,global,reloc=2,class=CODE,delta=1
    61                           	psect	text34,global,reloc=2,class=CODE,delta=1
    62                           	psect	text35,global,reloc=2,class=CODE,delta=1
    63                           	psect	text36,global,reloc=2,class=CODE,delta=1
    64                           	psect	text37,global,reloc=2,class=CODE,delta=1
    65                           	psect	text38,global,reloc=2,class=CODE,delta=1
    66                           	psect	text39,global,reloc=2,class=CODE,delta=1
    67                           	psect	text40,global,reloc=2,class=CODE,delta=1
    68                           	psect	text41,global,reloc=2,class=CODE,delta=1
    69                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text44,global,reloc=2,class=CODE,delta=1
    72                           	psect	text45,global,reloc=2,class=CODE,delta=1
    73                           	psect	text46,global,reloc=2,class=CODE,delta=1
    74                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text50,global,reloc=2,class=CODE,delta=1
    78                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text54,global,reloc=2,class=CODE,delta=1
    82                           	psect	text55,global,reloc=2,class=CODE,delta=1
    83                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text68,global,reloc=2,class=CODE,delta=1
    96                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text72,global,reloc=2,class=CODE,delta=1
   100                           	psect	text73,global,reloc=2,class=CODE,delta=1
   101                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text77,global,reloc=2,class=CODE,delta=1
   105                           	psect	text78,global,reloc=2,class=CODE,delta=1
   106                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text82,global,reloc=2,class=CODE,delta=1
   110                           	psect	text83,global,reloc=2,class=CODE,delta=1
   111                           	psect	text84,global,reloc=2,class=CODE,delta=1
   112                           	psect	text85,global,reloc=2,class=CODE,delta=1
   113                           	psect	text86,global,reloc=2,class=CODE,delta=1
   114                           	psect	text87,global,reloc=2,class=CODE,delta=1
   115                           	psect	text88,global,reloc=2,class=CODE,delta=1
   116                           	psect	text89,global,reloc=2,class=CODE,delta=1
   117                           	psect	text90,global,reloc=2,class=CODE,delta=1
   118                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   120                           	psect	text93,global,reloc=2,class=CODE,delta=1
   121                           	psect	text94,global,reloc=2,class=CODE,delta=1
   122                           	psect	text95,global,reloc=2,class=CODE,delta=1
   123                           	psect	text96,global,reloc=2,class=CODE,delta=1
   124                           	psect	text97,global,reloc=2,class=CODE,delta=1
   125                           	psect	text98,global,reloc=2,class=CODE,delta=1
   126                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text102,global,reloc=2,class=CODE,delta=1
   130                           	psect	text103,global,reloc=2,class=CODE,delta=1
   131                           	psect	text104,global,reloc=2,class=CODE,delta=1
   132                           	psect	text105,global,reloc=2,class=CODE,delta=1
   133                           	psect	text106,global,reloc=2,class=CODE,delta=1
   134                           	psect	text107,global,reloc=2,class=CODE,delta=1
   135                           	psect	text108,global,reloc=2,class=CODE,delta=1
   136                           	psect	text109,global,reloc=2,class=CODE,delta=1
   137                           	psect	text110,global,reloc=2,class=CODE,delta=1
   138                           	psect	text111,global,reloc=2,class=CODE,delta=1
   139                           	psect	text112,global,reloc=2,class=CODE,delta=1
   140                           	psect	text113,global,reloc=2,class=CODE,delta=1
   141                           	psect	text114,global,reloc=2,class=CODE,delta=1
   142                           	psect	text115,global,reloc=2,class=CODE,delta=1
   143                           	psect	text116,global,reloc=2,class=CODE,delta=1
   144                           	psect	text117,global,reloc=2,class=CODE,delta=1
   145                           	psect	text118,global,reloc=2,class=CODE,delta=1
   146                           	psect	text119,global,reloc=2,class=CODE,delta=1
   147                           	psect	text120,global,reloc=2,class=CODE,delta=1
   148                           	psect	text121,global,reloc=2,class=CODE,delta=1
   149                           	psect	text122,global,reloc=2,class=CODE,delta=1
   150                           	psect	text123,global,reloc=2,class=CODE,delta=1
   151                           	psect	text124,global,reloc=2,class=CODE,delta=1
   152                           	psect	text125,global,reloc=2,class=CODE,delta=1
   153                           	psect	text126,global,reloc=2,class=CODE,delta=1
   154                           	psect	text127,global,reloc=2,class=CODE,delta=1
   155                           	psect	text128,global,reloc=2,class=CODE,delta=1
   156                           	psect	text129,global,reloc=2,class=CODE,delta=1
   157                           	psect	text130,global,reloc=2,class=CODE,delta=1
   158                           	psect	text131,global,reloc=4,class=CODE,delta=1
   159                           	psect	text132,global,reloc=2,class=CODE,delta=1
   160                           	psect	text133,global,reloc=2,class=CODE,delta=1
   161                           	psect	text134,global,reloc=2,class=CODE,delta=1
   162                           	psect	text135,global,reloc=4,class=CODE,delta=1
   163                           	psect	text136,global,reloc=2,class=CODE,delta=1
   164                           	psect	text137,global,reloc=2,class=CODE,delta=1
   165                           	psect	text138,global,reloc=2,class=CODE,delta=1
   166                           	psect	text139,global,reloc=4,class=CODE,delta=1
   167                           	psect	text140,global,reloc=2,class=CODE,delta=1
   168                           	psect	text141,global,reloc=2,class=CODE,delta=1
   169                           	psect	text142,global,reloc=2,class=CODE,delta=1
   170                           	psect	text143,global,reloc=2,class=CODE,delta=1
   171                           	psect	text144,global,reloc=2,class=CODE,delta=1
   172                           	psect	text145,global,reloc=2,class=CODE,delta=1
   173                           	psect	text146,global,reloc=4,class=CODE,delta=1
   174                           	psect	text147,global,reloc=2,class=CODE,delta=1
   175                           	psect	text148,global,reloc=2,class=CODE,delta=1
   176                           	psect	text149,global,reloc=4,class=CODE,delta=1
   177                           	psect	text150,global,reloc=4,class=CODE,delta=1
   178                           	psect	text151,global,reloc=2,class=CODE,delta=1
   179                           	psect	text152,global,reloc=2,class=CODE,delta=1
   180                           	psect	text153,global,reloc=2,class=CODE,delta=1
   181                           	psect	text154,global,reloc=4,class=CODE,delta=1
   182                           	psect	text155,global,reloc=4,class=CODE,delta=1
   183                           	psect	text156,global,reloc=2,class=CODE,delta=1
   184                           	psect	text157,global,reloc=4,class=CODE,delta=1
   185                           	psect	text158,global,reloc=2,class=CODE,delta=1
   186                           	psect	text159,global,reloc=4,class=CODE,delta=1
   187                           	psect	text160,global,reloc=2,class=CODE,delta=1
   188                           	psect	text161,global,reloc=4,class=CODE,delta=1
   189                           	psect	text162,global,reloc=2,class=CODE,delta=1
   190                           	psect	text163,global,reloc=2,class=CODE,delta=1
   191                           	psect	text164,global,reloc=4,class=CODE,delta=1
   192                           	psect	text165,global,reloc=4,class=CODE,delta=1
   193                           	psect	text166,global,reloc=4,class=CODE,delta=1
   194                           	psect	text167,global,reloc=4,class=CODE,delta=1
   195                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   196                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   197                           	psect	text168,global,reloc=4,class=CODE,delta=1
   198                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   199                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   200  0000                     
   201                           ; Version 2.10
   202                           ; Generated 31/07/2019 GMT
   203                           ; 
   204                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   205                           ; All rights reserved.
   206                           ; 
   207                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   208                           ; 
   209                           ; Redistribution and use in source and binary forms, with or without modification, are
   210                           ; permitted provided that the following conditions are met:
   211                           ; 
   212                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   213                           ;        conditions and the following disclaimer.
   214                           ; 
   215                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   216                           ;        of conditions and the following disclaimer in the documentation and/or other
   217                           ;        materials provided with the distribution.
   218                           ; 
   219                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   220                           ;        software without specific prior written permission.
   221                           ; 
   222                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   223                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   224                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   225                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   226                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   227                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   228                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   229                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   230                           ; 
   231                           ; 
   232                           ; Code-generator required, PIC18F57K42 Definitions
   233                           ; 
   234                           ; SFR Addresses
   235  0000                     
   236 ;;_k	offset	0
   237 ;;_j	offset	1
   238 ;;_i	offset	2
   239 ;;_inp_index	offset	3
   240 ;;_mode	offset	4
   241 ;;_i_ror	offset	5
   242 ;;_channel	offset=-1 (param)
   243 ;;_s	offset=-2 (param)
   244 ;;_mode	offset=-1 (param)
   245 ;;_mode	offset=-1 (param)
   246 ;;_cmd	offset=-1 (param)
   247 ;;_cmd	offset=-1 (param)
   248 ;;_data	offset=-1 (param)
   249 ;;__this	offset=-2 (param)
   250 ;;_cvoltage	offset=-4 (param)
   251 ;;_h	offset=-1 (param)
   252 ;;_h	offset=-1 (param)
   253 ;;_i	offset=-1 (param)
   254 ;;_cmd	offset=-1 (param)
   255 ;;_i	offset	0
   256 ;;_chan	offset=-1 (param)
   257 ;;_to_what	offset=-2 (param)
   258 ;;_u	offset	0
   259 ;;_s	offset=-2 (param)
   260 ;;_index	offset=-1 (param)
   261 ;;_arg	offset	0
   262 ;;_exp	offset	4
   263 ;;_sign	offset=-1 (param)
   264 ;;_val	offset=-5 (param)
   265 ;;_h	offset=-1 (param)
   266 ;;_flipper	offset=-1 (param)
   267 ;;_f	offset	0
   268 ;;_ap	offset	6
   269 ;;_s	offset=-3 (param)
   270 ;;_fmt	offset=-5 (param)
   271 ;;_line	offset=-1 (param)
   272 ;;_vterm	offset=-2 (param)
   273 ;;_numMilliseconds	offset=-2 (param)
   274 ;;_vterm	offset=-1 (param)
   275 ;;_r	offset=-1 (param)
   276 ;;_c	offset=-2 (param)
   277 ;;_strPtr	offset=-4 (param)
   278 ;;_strPtr	offset=-1 (param)
   279 ;;_delay	offset=-4 (param)
   280 ;;_strPtr	offset=-2 (param)
   281 ;;__this	offset=-2 (param)
   282 ;;_clearBuffer	offset=-3 (param)
   283 ;;_s	offset	0
   284 ;;_k	offset	2
   285 ;;_dest	offset=-2 (param)
   286 ;;_c	offset=-4 (param)
   287 ;;_n	offset=-6 (param)
   288 ;;_ap	offset	0
   289 ;;_fmt	offset=-3 (param)
   290 ;;_cfmt	offset	0
   291 ;;_fp	offset=-2 (param)
   292 ;;_fmt	offset=-4 (param)
   293 ;;_ap	offset=-6 (param)
   294 ;;_vfpfcnvrt$5270	offset	0
   295 ;;_vfpfcnvrt$5281	offset	2
   296 ;;_vfpfcnvrt$5269	offset	4
   297 ;;_llu	offset	6
   298 ;;_ll	offset	14
   299 ;;_f	offset	22
   300 ;;_ct	offset	26
   301 ;;_cp	offset	29
   302 ;;_c	offset	31
   303 ;;_fp	offset=-2 (param)
   304 ;;_fmt	offset=-4 (param)
   305 ;;_ap	offset=-6 (param)
   306 ;;_xtoa$5255	offset	0
   307 ;;_xtoa$5254	offset	2
   308 ;;_n	offset	4
   309 ;;_c	offset	12
   310 ;;_i	offset	14
   311 ;;_w	offset	16
   312 ;;_p	offset	18
   313 ;;_fp	offset=-2 (param)
   314 ;;_d	offset=-10 (param)
   315 ;;_x	offset=-11 (param)
   316 ;;_toupper$6054	offset	0
   317 ;;_c	offset=-2 (param)
   318 ;;_c	offset=-2 (param)
   319 ;;_c	offset=-2 (param)
   320 ;;_n	offset	0
   321 ;;_i	offset	8
   322 ;;_w	offset	10
   323 ;;_p	offset	12
   324 ;;_fp	offset=-2 (param)
   325 ;;_d	offset=-10 (param)
   326 ;;_counter	offset	0
   327 ;;_dividend	offset=-8 (param)
   328 ;;_divisor	offset=-16 (param)
   329 ;;_quotient	offset	0
   330 ;;_counter	offset	8
   331 ;;_dividend	offset=-8 (param)
   332 ;;_divisor	offset=-16 (param)
   333 ;;_r	offset	0
   334 ;;_l	offset	2
   335 ;;__l	offset=-2 (param)
   336 ;;__r	offset=-4 (param)
   337 ;;_n	offset=-6 (param)
   338 ;;_nuls	offset	0
   339 ;;_l	offset	7
   340 ;;_p	offset	9
   341 ;;_cp	offset	11
   342 ;;_w	offset	13
   343 ;;_i	offset	15
   344 ;;_fp	offset=-2 (param)
   345 ;;_s	offset=-4 (param)
   346 ;;_efgtoa$5227	offset	0
   347 ;;_efgtoa$5226	offset	2
   348 ;;_efgtoa$5225	offset	4
   349 ;;_efgtoa$5221	offset	6
   350 ;;_efgtoa$5217	offset	8
   351 ;;_efgtoa$5216	offset	10
   352 ;;_u	offset	12
   353 ;;_g	offset	16
   354 ;;_l	offset	20
   355 ;;_h	offset	24
   356 ;;_ou	offset	28
   357 ;;_n	offset	32
   358 ;;_e	offset	34
   359 ;;_i	offset	36
   360 ;;_w	offset	38
   361 ;;_p	offset	40
   362 ;;_sign	offset	42
   363 ;;_d	offset	44
   364 ;;_ne	offset	46
   365 ;;_m	offset	48
   366 ;;_pp	offset	50
   367 ;;_t	offset	52
   368 ;;_mode	offset	54
   369 ;;_nmode	offset	55
   370 ;;_fp	offset=-2 (param)
   371 ;;_f	offset=-6 (param)
   372 ;;_c	offset=-7 (param)
   373 ;;_tolower$6039	offset	0
   374 ;;_c	offset=-2 (param)
   375 ;;_c	offset=-2 (param)
   376 ;;_d	offset	0
   377 ;;_s	offset	2
   378 ;;_dest	offset=-2 (param)
   379 ;;_src	offset=-4 (param)
   380 ;;_u	offset	0
   381 ;;_m	offset	4
   382 ;;_e	offset	8
   383 ;;_x	offset=-4 (param)
   384 ;;_u	offset	0
   385 ;;_e	offset	4
   386 ;;_x	offset=-4 (param)
   387 ;;_exp1	offset	0
   388 ;;_sign1	offset	1
   389 ;;_f1	offset=-4 (param)
   390 ;;_f1	offset=-4 (param)
   391 ;;_ff1	offset=-4 (param)
   392 ;;_ff2	offset=-8 (param)
   393 ;;_ff1	offset=-4 (param)
   394 ;;_ff2	offset=-8 (param)
   395 ;;_grs	offset	0
   396 ;;_rem	offset	4
   397 ;;_new_exp	offset	8
   398 ;;_aexp	offset	10
   399 ;;_bexp	offset	11
   400 ;;_sign	offset	12
   401 ;;_b	offset=-4 (param)
   402 ;;_a	offset=-8 (param)
   403 ;;_sign	offset	0
   404 ;;_counter	offset	1
   405 ;;_dividend	offset=-2 (param)
   406 ;;_divisor	offset=-4 (param)
   407 ;;_quotient	offset	0
   408 ;;_sign	offset	2
   409 ;;_counter	offset	3
   410 ;;_dividend	offset=-2 (param)
   411 ;;_divisor	offset=-4 (param)
   412 ;;_dtoa$5193	offset	0
   413 ;;_n	offset	2
   414 ;;_i	offset	10
   415 ;;_s	offset	12
   416 ;;_w	offset	14
   417 ;;_p	offset	16
   418 ;;_fp	offset=-2 (param)
   419 ;;_d	offset=-10 (param)
   420 ;;_a	offset=-2 (param)
   421 ;;_sign	offset	0
   422 ;;_counter	offset	1
   423 ;;_dividend	offset=-8 (param)
   424 ;;_divisor	offset=-16 (param)
   425 ;;_quotient	offset	0
   426 ;;_sign	offset	8
   427 ;;_counter	offset	9
   428 ;;_dividend	offset=-8 (param)
   429 ;;_divisor	offset=-16 (param)
   430 ;;_w	offset	0
   431 ;;_fp	offset=-2 (param)
   432 ;;_c	offset=-3 (param)
   433 ;;_w	offset	0
   434 ;;_i	offset	2
   435 ;;_fp	offset=-2 (param)
   436 ;;_buf	offset=-4 (param)
   437 ;;_p	offset=-6 (param)
   438 ;;_a	offset	0
   439 ;;_s	offset=-2 (param)
   440 ;;_i	offset	0
   441 ;;_c	offset	2
   442 ;;_s	offset=-2 (param)
   443 ;;_fp	offset=-4 (param)
   444 ;;_c	offset=-2 (param)
   445 ;;_fp	offset=-4 (param)
   446 ;;_c	offset=-1 (param)
   447 ;;__this	offset=-2 (param)
   448 ;;_c	offset=-3 (param)
   449 ;;_atoi$5777	offset	0
   450 ;;_atoi$5775	offset	2
   451 ;;_atoi$5776	offset	4
   452 ;;_n	offset	5
   453 ;;_neg	offset	7
   454 ;;_s	offset=-2 (param)
   455 ;;_isspace$5815	offset	0
   456 ;;_c	offset=-2 (param)
   457 ;;_c	offset=-2 (param)
   458 ;;_vterm	offset=-1 (param)
   459 ;;_new_response_info	offset=-1 (param)
   460 ;;_new_response_info	offset=-1 (param)
   461 ;;_level	offset=-2 (param)
   462 ;;_dutyValue	offset=-2 (param)
   463 ;;_timer	offset=-1 (param)
   464 ;;_timer	offset=-1 (param)
   465 ;;_count	offset=-3 (param)
   466 ;;_h	offset=-1 (param)
   467 ;;_lp_speed	offset	0
   468 ;;_new	offset=-4 (param)
   469 ;;_bn	offset=-5 (param)
   470 ;;_slow	offset=-6 (param)
   471 ;;_b	offset=-4 (param)
   472 ;;_a	offset=-8 (param)
   473 ;;_grs	offset	0
   474 ;;_bexp	offset	1
   475 ;;_aexp	offset	2
   476 ;;_signs	offset	3
   477 ;;_b	offset=-4 (param)
   478 ;;_a	offset=-8 (param)
   479 ;;_prod	offset	0
   480 ;;_grs	offset	4
   481 ;;_temp	offset	8
   482 ;;_bexp	offset	10
   483 ;;_aexp	offset	11
   484 ;;_sign	offset	12
   485 ;;_b	offset=-4 (param)
   486 ;;_a	offset=-8 (param)
   487 ;;_InterruptHandler	offset=-3 (param)
   488 ;;_InterruptHandler	offset=-3 (param)
   489 ;;_InterruptHandler	offset=-3 (param)
   490 ;;_InterruptHandler	offset=-3 (param)
   491 ;;_InterruptHandler	offset=-3 (param)
   492 ;;_InterruptHandler	offset=-3 (param)
   493 ;;_state	offset	0
   494 ;;_InterruptHandler	offset=-3 (param)
   495 ;;_InterruptHandler	offset=-3 (param)
   496 ;;_InterruptHandler	offset=-3 (param)
   497 ;;_InterruptHandler	offset=-3 (param)
   498 ;;_i	offset	0
   499 ;;_sw_value	offset	1
   500 ;;_timerVal	offset=-2 (param)
   501 ;;_timerVal	offset=-2 (param)
   502 ;;_log_ptr	offset	0
   503 ;;_f	offset	0
   504 ;;_ap	offset	6
   505 ;;_s	offset=-3 (param)
   506 ;;_fmt	offset=-5 (param)
   507 ;;_cfmt	offset	0
   508 ;;_fp	offset=-2 (param)
   509 ;;_fmt	offset=-4 (param)
   510 ;;_ap	offset=-6 (param)
   511 ;;_vfpfcnvrt$5270	offset	0
   512 ;;_vfpfcnvrt$5281	offset	2
   513 ;;_vfpfcnvrt$5269	offset	4
   514 ;;_llu	offset	6
   515 ;;_ll	offset	14
   516 ;;_f	offset	22
   517 ;;_ct	offset	26
   518 ;;_cp	offset	29
   519 ;;_c	offset	31
   520 ;;_fp	offset=-2 (param)
   521 ;;_fmt	offset=-4 (param)
   522 ;;_ap	offset=-6 (param)
   523 ;;_xtoa$5255	offset	0
   524 ;;_xtoa$5254	offset	2
   525 ;;_n	offset	4
   526 ;;_c	offset	12
   527 ;;_i	offset	14
   528 ;;_w	offset	16
   529 ;;_p	offset	18
   530 ;;_fp	offset=-2 (param)
   531 ;;_d	offset=-10 (param)
   532 ;;_x	offset=-11 (param)
   533 ;;_toupper$6054	offset	0
   534 ;;_c	offset=-2 (param)
   535 ;;_c	offset=-2 (param)
   536 ;;_c	offset=-2 (param)
   537 ;;_n	offset	0
   538 ;;_i	offset	8
   539 ;;_w	offset	10
   540 ;;_p	offset	12
   541 ;;_fp	offset=-2 (param)
   542 ;;_d	offset=-10 (param)
   543 ;;_counter	offset	0
   544 ;;_dividend	offset=-8 (param)
   545 ;;_divisor	offset=-16 (param)
   546 ;;_quotient	offset	0
   547 ;;_counter	offset	8
   548 ;;_dividend	offset=-8 (param)
   549 ;;_divisor	offset=-16 (param)
   550 ;;_r	offset	0
   551 ;;_l	offset	2
   552 ;;__l	offset=-2 (param)
   553 ;;__r	offset=-4 (param)
   554 ;;_n	offset=-6 (param)
   555 ;;_nuls	offset	0
   556 ;;_l	offset	7
   557 ;;_p	offset	9
   558 ;;_cp	offset	11
   559 ;;_w	offset	13
   560 ;;_i	offset	15
   561 ;;_fp	offset=-2 (param)
   562 ;;_s	offset=-4 (param)
   563 ;;_efgtoa$5227	offset	0
   564 ;;_efgtoa$5226	offset	2
   565 ;;_efgtoa$5225	offset	4
   566 ;;_efgtoa$5221	offset	6
   567 ;;_efgtoa$5217	offset	8
   568 ;;_efgtoa$5216	offset	10
   569 ;;_u	offset	12
   570 ;;_g	offset	16
   571 ;;_l	offset	20
   572 ;;_h	offset	24
   573 ;;_ou	offset	28
   574 ;;_n	offset	32
   575 ;;_e	offset	34
   576 ;;_i	offset	36
   577 ;;_w	offset	38
   578 ;;_p	offset	40
   579 ;;_sign	offset	42
   580 ;;_d	offset	44
   581 ;;_ne	offset	46
   582 ;;_m	offset	48
   583 ;;_pp	offset	50
   584 ;;_t	offset	52
   585 ;;_mode	offset	54
   586 ;;_nmode	offset	55
   587 ;;_fp	offset=-2 (param)
   588 ;;_f	offset=-6 (param)
   589 ;;_c	offset=-7 (param)
   590 ;;_tolower$6039	offset	0
   591 ;;_c	offset=-2 (param)
   592 ;;_c	offset=-2 (param)
   593 ;;_d	offset	0
   594 ;;_s	offset	2
   595 ;;_dest	offset=-2 (param)
   596 ;;_src	offset=-4 (param)
   597 ;;_u	offset	0
   598 ;;_m	offset	4
   599 ;;_e	offset	8
   600 ;;_x	offset=-4 (param)
   601 ;;_u	offset	0
   602 ;;_e	offset	4
   603 ;;_x	offset=-4 (param)
   604 ;;_exp1	offset	0
   605 ;;_sign1	offset	1
   606 ;;_f1	offset=-4 (param)
   607 ;;_b	offset=-4 (param)
   608 ;;_a	offset=-8 (param)
   609 ;;_grs	offset	0
   610 ;;_bexp	offset	1
   611 ;;_aexp	offset	2
   612 ;;_signs	offset	3
   613 ;;_b	offset=-4 (param)
   614 ;;_a	offset=-8 (param)
   615 ;;_f1	offset=-4 (param)
   616 ;;_prod	offset	0
   617 ;;_grs	offset	4
   618 ;;_temp	offset	8
   619 ;;_bexp	offset	10
   620 ;;_aexp	offset	11
   621 ;;_sign	offset	12
   622 ;;_b	offset=-4 (param)
   623 ;;_a	offset=-8 (param)
   624 ;;_ff1	offset=-4 (param)
   625 ;;_ff2	offset=-8 (param)
   626 ;;_ff1	offset=-4 (param)
   627 ;;_ff2	offset=-8 (param)
   628 ;;_grs	offset	0
   629 ;;_rem	offset	4
   630 ;;_new_exp	offset	8
   631 ;;_aexp	offset	10
   632 ;;_bexp	offset	11
   633 ;;_sign	offset	12
   634 ;;_b	offset=-4 (param)
   635 ;;_a	offset=-8 (param)
   636 ;;_sign	offset	0
   637 ;;_counter	offset	1
   638 ;;_dividend	offset=-2 (param)
   639 ;;_divisor	offset=-4 (param)
   640 ;;_quotient	offset	0
   641 ;;_sign	offset	2
   642 ;;_counter	offset	3
   643 ;;_dividend	offset=-2 (param)
   644 ;;_divisor	offset=-4 (param)
   645 ;;_dtoa$5193	offset	0
   646 ;;_n	offset	2
   647 ;;_i	offset	10
   648 ;;_s	offset	12
   649 ;;_w	offset	14
   650 ;;_p	offset	16
   651 ;;_fp	offset=-2 (param)
   652 ;;_d	offset=-10 (param)
   653 ;;_a	offset=-2 (param)
   654 ;;_sign	offset	0
   655 ;;_counter	offset	1
   656 ;;_dividend	offset=-8 (param)
   657 ;;_divisor	offset=-16 (param)
   658 ;;_quotient	offset	0
   659 ;;_sign	offset	8
   660 ;;_counter	offset	9
   661 ;;_dividend	offset=-8 (param)
   662 ;;_divisor	offset=-16 (param)
   663 ;;_w	offset	0
   664 ;;_fp	offset=-2 (param)
   665 ;;_c	offset=-3 (param)
   666 ;;_w	offset	0
   667 ;;_i	offset	2
   668 ;;_fp	offset=-2 (param)
   669 ;;_buf	offset=-4 (param)
   670 ;;_p	offset=-6 (param)
   671 ;;_a	offset	0
   672 ;;_s	offset=-2 (param)
   673 ;;_i	offset	0
   674 ;;_c	offset	2
   675 ;;_s	offset=-2 (param)
   676 ;;_fp	offset=-4 (param)
   677 ;;_c	offset=-2 (param)
   678 ;;_fp	offset=-4 (param)
   679 ;;_c	offset=-1 (param)
   680 ;;__this	offset=-2 (param)
   681 ;;_c	offset=-3 (param)
   682 ;;_atoi$5777	offset	0
   683 ;;_atoi$5775	offset	2
   684 ;;_atoi$5776	offset	4
   685 ;;_n	offset	5
   686 ;;_neg	offset	7
   687 ;;_s	offset=-2 (param)
   688 ;;_isspace$5815	offset	0
   689 ;;_c	offset=-2 (param)
   690 ;;_c	offset=-2 (param)
   691 ;;_dsize	offset=-2 (param)
   692 ;;_timer	offset=-1 (param)
   693 ;;_count	offset=-3 (param)
   694 ;;_channel	offset=-1 (param)
   695 ;;_i	offset	0
   696                           
   697                           	psect	idataBIGRAM
   698  017188                     __pidataBIGRAM:
   699                           	opt callstack 0
   700                           
   701                           ;initializer for _port_data
   702  017188  FF                 	db	255
   703  017189  00                 	db	0
   704  01718A  FF                 	db	255
   705  01718B  00                 	db	0
   706  01718C  FF                 	db	255
   707  01718D  00                 	db	0
   708  01718E  FF                 	db	255
   709  01718F  00                 	db	0
   710  017190  FF                 	db	255
   711  017191  00                 	db	0
   712  017192  FF                 	db	255
   713  017193  00                 	db	0
   714  017194  FF                 	db	255
   715  017195  00                 	db	0
   716  017196  FF                 	db	255
   717  017197  00                 	db	0
   718  017198  00                 	db	0
   719  017199  00                 	db	0
   720  01719A  00                 	db	0
   721  01719B  00                 	db	0
   722  01719C  00                 	db	0
   723  01719D  00                 	db	0
   724  01719E  00                 	db	0
   725  01719F  00                 	db	0
   726  0171A0  00                 	db	0
   727  0171A1  00                 	db	0
   728  0171A2  00                 	db	0
   729  0171A3  00                 	db	0
   730  0171A4  00                 	db	0
   731  0171A5  00                 	db	0
   732  0171A6  00                 	db	0
   733  0171A7  00                 	db	0
   734  0171A8  00                 	db	0
   735  0171A9  00                 	db	0
   736  0171AA  00                 	db	0
   737  0171AB  00                 	db	0
   738  0171AC  00                 	db	0
   739  0171AD  00                 	db	0
   740  0171AE  00                 	db	0
   741  0171AF  00                 	db	0
   742  0171B0  00                 	db	0
   743  0171B1  00                 	db	0
   744  0171B2  00                 	db	0
   745  0171B3  00                 	db	0
   746  0171B4  00                 	db	0
   747  0171B5  00                 	db	0
   748  0171B6  00                 	db	0
   749  0171B7  00                 	db	0
   750  0171B8  00                 	db	0
   751  0171B9  00                 	db	0
   752  0171BA  00                 	db	0
   753  0171BB  00                 	db	0
   754  0171BC  00                 	db	0
   755  0171BD  00                 	db	0
   756  0171BE  00                 	db	0
   757  0171BF  00                 	db	0
   758  0171C0  00                 	db	0
   759  0171C1  00                 	db	0
   760  0171C2  00                 	db	0
   761  0171C3  00                 	db	0
   762  0171C4  00                 	db	0
   763  0171C5  00                 	db	0
   764  0171C6  00                 	db	0
   765  0171C7  00                 	db	0
   766  0171C8  00                 	db	0
   767  0171C9  00                 	db	0
   768  0171CA  00                 	db	0
   769  0171CB  00                 	db	0
   770  0171CC  00                 	db	0
   771  0171CD  00                 	db	0
   772  0171CE  00                 	db	0
   773  0171CF  00                 	db	0
   774  0171D0  00                 	db	0
   775  0171D1  00                 	db	0
   776  0171D2  00                 	db	0
   777  0171D3  00                 	db	0
   778  0171D4  00                 	db	0
   779  0171D5  00                 	db	0
   780  0171D6  00                 	db	0
   781  0171D7  00                 	db	0
   782  0171D8  00                 	db	0
   783  0171D9  00                 	db	0
   784  0171DA  00                 	db	0
   785  0171DB  00                 	db	0
   786  0171DC  00                 	db	0
   787  0171DD  00                 	db	0
   788  0171DE  00                 	db	0
   789  0171DF  00                 	db	0
   790  0171E0  00                 	db	0
   791  0171E1  00                 	db	0
   792  0171E2  00                 	db	0
   793  0171E3  00                 	db	0
   794  0171E4  00                 	db	0
   795  0171E5  00                 	db	0
   796  0171E6  00                 	db	0
   797  0171E7  00                 	db	0
   798  0171E8  00                 	db	0
   799  0171E9  00                 	db	0
   800  0171EA  00                 	db	0
   801  0171EB  00                 	db	0
   802  0171EC  00                 	db	0
   803  0171ED  00                 	db	0
   804  0171EE  00                 	db	0
   805  0171EF  00                 	db	0
   806  0171F0  00                 	db	0
   807  0171F1  00                 	db	0
   808  0171F2  00                 	db	0
   809  0171F3  00                 	db	0
   810  0171F4  00                 	db	0
   811  0171F5  00                 	db	0
   812  0171F6  00                 	db	0
   813  0171F7  00                 	db	0
   814  0171F8  00                 	db	0
   815  0171F9  00                 	db	0
   816  0171FA  00                 	db	0
   817  0171FB  00                 	db	0
   818  0171FC  00                 	db	0
   819  0171FD  00                 	db	0
   820  0171FE  00                 	db	0
   821  0171FF  00                 	db	0
   822  017200  00                 	db	0
   823  017201  00                 	db	0
   824  017202  00                 	db	0
   825  017203  00                 	db	0
   826  017204  00                 	db	0
   827  017205  00                 	db	0
   828  017206  00                 	db	0
   829  017207  00                 	db	0
   830  017208  00                 	db	0
   831  017209  00                 	db	0
   832  01720A  00                 	db	0
   833  01720B  00                 	db	0
   834  01720C  00                 	db	0
   835  01720D  00                 	db	0
   836  01720E  00                 	db	0
   837  01720F  00                 	db	0
   838  017210  00                 	db	0
   839  017211  00                 	db	0
   840  017212  00                 	db	0
   841  017213  00                 	db	0
   842  017214  00                 	db	0
   843  017215  00                 	db	0
   844  017216  00                 	db	0
   845  017217  00                 	db	0
   846  017218  00                 	db	0
   847  017219  00                 	db	0
   848  01721A  00                 	db	0
   849  01721B  00                 	db	0
   850  01721C  00                 	db	0
   851  01721D  00                 	db	0
   852  01721E  00                 	db	0
   853  01721F  00                 	db	0
   854  017220  00                 	db	0
   855  017221  00                 	db	0
   856  017222  00                 	db	0
   857  017223  00                 	db	0
   858  017224  00                 	db	0
   859  017225  00                 	db	0
   860  017226  00                 	db	0
   861  017227  00                 	db	0
   862  017228  00                 	db	0
   863  017229  00                 	db	0
   864  01722A  00                 	db	0
   865  01722B  00                 	db	0
   866  01722C  00                 	db	0
   867  01722D  00                 	db	0
   868  01722E  00                 	db	0
   869  01722F  00                 	db	0
   870  017230  00                 	db	0
   871  017231  00                 	db	0
   872  017232  00                 	db	0
   873  017233  00                 	db	0
   874  017234  00                 	db	0
   875  017235  00                 	db	0
   876  017236  00                 	db	0
   877  017237  00                 	db	0
   878  017238  00                 	db	0
   879  017239  00                 	db	0
   880  01723A  00                 	db	0
   881  01723B  00                 	db	0
   882  01723C  00                 	db	0
   883  01723D  00                 	db	0
   884  01723E  00                 	db	0
   885  01723F  00                 	db	0
   886  017240  00                 	db	0
   887  017241  00                 	db	0
   888  017242  00                 	db	0
   889  017243  00                 	db	0
   890  017244  00                 	db	0
   891  017245  00                 	db	0
   892  017246  00                 	db	0
   893  017247  00                 	db	0
   894  017248  00                 	db	0
   895  017249  00                 	db	0
   896  01724A  00                 	db	0
   897  01724B  00                 	db	0
   898  01724C  00                 	db	0
   899  01724D  00                 	db	0
   900  01724E  00                 	db	0
   901  01724F  00                 	db	0
   902  017250  00                 	db	0
   903  017251  00                 	db	0
   904  017252  00                 	db	0
   905  017253  00                 	db	0
   906  017254  00                 	db	0
   907  017255  00                 	db	0
   908  017256  00                 	db	0
   909  017257  00                 	db	0
   910  017258  00                 	db	0
   911  017259  00                 	db	0
   912  01725A  00                 	db	0
   913  01725B  00                 	db	0
   914  01725C  00                 	db	0
   915  01725D  00                 	db	0
   916  01725E  00                 	db	0
   917  01725F  00                 	db	0
   918  017260  00                 	db	0
   919  017261  00                 	db	0
   920  017262  00                 	db	0
   921  017263  00                 	db	0
   922  017264  00                 	db	0
   923  017265  00                 	db	0
   924  017266  00                 	db	0
   925  017267  00                 	db	0
   926  017268  00                 	db	0
   927  017269  00                 	db	0
   928  01726A  00                 	db	0
   929  01726B  00                 	db	0
   930  01726C  00                 	db	0
   931  01726D  00                 	db	0
   932  01726E  00                 	db	0
   933  01726F  00                 	db	0
   934  017270  00                 	db	0
   935  017271  00                 	db	0
   936  017272  00                 	db	0
   937  017273  00                 	db	0
   938  017274  00                 	db	0
   939  017275  00                 	db	0
   940  017276  00                 	db	0
   941  017277  00                 	db	0
   942  017278  00                 	db	0
   943  017279  00                 	db	0
   944  01727A  00                 	db	0
   945  01727B  00                 	db	0
   946  01727C  00                 	db	0
   947  01727D  00                 	db	0
   948  01727E  00                 	db	0
   949  01727F  00                 	db	0
   950  017280  00                 	db	0
   951  017281  00                 	db	0
   952  017282  00                 	db	0
   953  017283  00                 	db	0
   954  017284  00                 	db	0
   955  017285  00                 	db	0
   956  017286  00                 	db	0
   957  017287  00                 	db	0
   958  017288  00                 	db	0
   959  017289  00                 	db	0
   960  01728A  00                 	db	0
   961  01728B  00                 	db	0
   962  01728C  00                 	db	0
   963  01728D  00                 	db	0
   964  01728E  00                 	db	0
   965  01728F  00                 	db	0
   966  017290  00                 	db	0
   967  017291  00                 	db	0
   968  017292  00                 	db	0
   969  017293  00                 	db	0
   970  017294  00                 	db	0
   971  017295  00                 	db	0
   972  017296  00                 	db	0
   973  017297  00                 	db	0
   974  017298  00                 	db	0
   975  017299  00                 	db	0
   976  01729A  00                 	db	0
   977  01729B  00                 	db	0
   978  01729C  00                 	db	0
   979  01729D  00                 	db	0
   980  01729E  00                 	db	0
   981  01729F  00                 	db	0
   982  0172A0  00                 	db	0
   983  0172A1  00                 	db	0
   984  0172A2  00                 	db	0
   985  0172A3  00                 	db	0
   986  0172A4  00                 	db	0
   987  0172A5  00                 	db	0
   988  0172A6  00                 	db	0
   989  0172A7  00                 	db	0
   990  0172A8  00                 	db	0
   991  0172A9  00                 	db	0
   992  0172AA  00                 	db	0
   993  0172AB  00                 	db	0
   994  0172AC  00                 	db	0
   995  0172AD  00                 	db	0
   996  0172AE  00                 	db	0
   997  0172AF  00                 	db	0
   998  0172B0  00                 	db	0
   999  0172B1  00                 	db	0
  1000  0172B2  00                 	db	0
  1001  0172B3  00                 	db	0
  1002  0172B4  00                 	db	0
  1003  0172B5  00                 	db	0
  1004  0172B6  00                 	db	0
  1005  0172B7  00                 	db	0
  1006  0172B8  00                 	db	0
  1007  0172B9  00                 	db	0
  1008  0172BA  00                 	db	0
  1009  0172BB  00                 	db	0
  1010  0172BC  00                 	db	0
  1011  0172BD  00                 	db	0
  1012  0172BE  00                 	db	0
  1013  0172BF  00                 	db	0
  1014  0172C0  00                 	db	0
  1015  0172C1  00                 	db	0
  1016  0172C2  00                 	db	0
  1017  0172C3  00                 	db	0
  1018  0172C4  00                 	db	0
  1019  0172C5  00                 	db	0
  1020  0172C6  00                 	db	0
  1021  0172C7  00                 	db	0
  1022  0172C8  00                 	db	0
  1023  0172C9  00                 	db	0
  1024  0172CA  00                 	db	0
  1025  0172CB  00                 	db	0
  1026  0172CC  00                 	db	0
  1027  0172CD  00                 	db	0
  1028  0172CE  00                 	db	0
  1029  0172CF  00                 	db	0
  1030  0172D0  00                 	db	0
  1031  0172D1  00                 	db	0
  1032  0172D2  00                 	db	0
  1033  0172D3  00                 	db	0
  1034  0172D4  00                 	db	0
  1035  0172D5  00                 	db	0
  1036  0172D6  00                 	db	0
  1037  0172D7  00                 	db	0
  1038  0172D8  00                 	db	0
  1039  0172D9  00                 	db	0
  1040  0172DA  00                 	db	0
  1041  0172DB  00                 	db	0
  1042  0172DC  00                 	db	0
  1043  0172DD  00                 	db	0
  1044  0172DE  00                 	db	0
  1045  0172DF  00                 	db	0
  1046  0172E0  00                 	db	0
  1047  0172E1  00                 	db	0
  1048  0172E2  00                 	db	0
  1049  0172E3  00                 	db	0
  1050  0172E4  00                 	db	0
  1051  0172E5  00                 	db	0
  1052  0172E6  00                 	db	0
  1053  0172E7  00                 	db	0
  1054  0172E8  00                 	db	0
  1055  0172E9  00                 	db	0
  1056  0172EA  00                 	db	0
  1057  0172EB  00                 	db	0
  1058  0172EC  00                 	db	0
  1059  0172ED  00                 	db	0
  1060  0172EE  00                 	db	0
  1061  0172EF  00                 	db	0
  1062  0172F0  00                 	db	0
  1063  0172F1  00                 	db	0
  1064  0172F2  00                 	db	0
  1065  0172F3  00                 	db	0
  1066  0172F4  00                 	db	0
  1067  0172F5  00                 	db	0
  1068  0172F6  00                 	db	0
  1069  0172F7  00                 	db	0
  1070  0172F8  00                 	db	0
  1071  0172F9  00                 	db	0
  1072  0172FA  00                 	db	0
  1073  0172FB  00                 	db	0
  1074  0172FC  00                 	db	0
  1075  0172FD  00                 	db	0
  1076  0172FE  00                 	db	0
  1077  0172FF  00                 	db	0
  1078  017300  00                 	db	0
  1079  017301  00                 	db	0
  1080  017302  00                 	db	0
  1081  017303  00                 	db	0
  1082  017304  00                 	db	0
  1083  017305  00                 	db	0
  1084  017306  00                 	db	0
  1085  017307  00                 	db	0
  1086  017308  00                 	db	0
  1087  017309  00                 	db	0
  1088  01730A  00                 	db	0
  1089  01730B  00                 	db	0
  1090  01730C  00                 	db	0
  1091  01730D  00                 	db	0
  1092  01730E  00                 	db	0
  1093  01730F  00                 	db	0
  1094  017310  00                 	db	0
  1095  017311  00                 	db	0
  1096  017312  00                 	db	0
  1097  017313  00                 	db	0
  1098  017314  00                 	db	0
  1099  017315  00                 	db	0
  1100  017316  00                 	db	0
  1101  017317  00                 	db	0
  1102  017318  00                 	db	0
  1103  017319  00                 	db	0
  1104  01731A  00                 	db	0
  1105  01731B  00                 	db	0
  1106  01731C  00                 	db	0
  1107  01731D  00                 	db	0
  1108  01731E  00                 	db	0
  1109  01731F  00                 	db	0
  1110  017320  00                 	db	0
  1111  017321  00                 	db	0
  1112  017322  00                 	db	0
  1113  017323  00                 	db	0
  1114  017324  00                 	db	0
  1115  017325  00                 	db	0
  1116  017326  00                 	db	0
  1117  017327  00                 	db	0
  1118  017328  00                 	db	0
  1119  017329  00                 	db	0
  1120  01732A  00                 	db	0
  1121  01732B  00                 	db	0
  1122  01732C  00                 	db	0
  1123  01732D  00                 	db	0
  1124  01732E  00                 	db	0
  1125  01732F  00                 	db	0
  1126  017330  00                 	db	0
  1127  017331  00                 	db	0
  1128  017332  00                 	db	0
  1129  017333  00                 	db	0
  1130  017334  00                 	db	0
  1131  017335  00                 	db	0
  1132  017336  00                 	db	0
  1133  017337  00                 	db	0
  1134  017338  00                 	db	0
  1135  017339  00                 	db	0
  1136  01733A  00                 	db	0
  1137  01733B  00                 	db	0
  1138  01733C  00                 	db	0
  1139  01733D  00                 	db	0
  1140  01733E  00                 	db	0
  1141  01733F  00                 	db	0
  1142  017340  00                 	db	0
  1143  017341  00                 	db	0
  1144  017342  00                 	db	0
  1145  017343  00                 	db	0
  1146  017344  00                 	db	0
  1147  017345  00                 	db	0
  1148  017346  00                 	db	0
  1149  017347  00                 	db	0
  1150  017348  00                 	db	0
  1151  017349  00                 	db	0
  1152  01734A  00                 	db	0
  1153  01734B  00                 	db	0
  1154  01734C  00                 	db	0
  1155  01734D  00                 	db	0
  1156  01734E  00                 	db	0
  1157  01734F  00                 	db	0
  1158  017350  00                 	db	0
  1159  017351  00                 	db	0
  1160  017352  00                 	db	0
  1161  017353  00                 	db	0
  1162  017354  00                 	db	0
  1163  017355  00                 	db	0
  1164  017356  00                 	db	0
  1165  017357  00                 	db	0
  1166  017358  00                 	db	0
  1167  017359  00                 	db	0
  1168  01735A  00                 	db	0
  1169  01735B  00                 	db	0
  1170  01735C  00                 	db	0
  1171  01735D  00                 	db	0
  1172  01735E  00                 	db	0
  1173  01735F  00                 	db	0
  1174  017360  00                 	db	0
  1175  017361  00                 	db	0
  1176  017362  00                 	db	0
  1177  017363  00                 	db	0
  1178  017364  00                 	db	0
  1179  017365  00                 	db	0
  1180  017366  00                 	db	0
  1181  017367  00                 	db	0
  1182  017368  00                 	db	0
  1183  017369  00                 	db	0
  1184  01736A  00                 	db	0
  1185  01736B  00                 	db	0
  1186  01736C  00                 	db	0
  1187  01736D  00                 	db	0
  1188  01736E  00                 	db	0
  1189  01736F  00                 	db	0
  1190  017370  00                 	db	0
  1191  017371  00                 	db	0
  1192  017372  00                 	db	0
  1193  017373  00                 	db	0
  1194  017374  00                 	db	0
  1195  017375  00                 	db	0
  1196  017376  00                 	db	0
  1197  017377  00                 	db	0
  1198  017378  00                 	db	0
  1199  017379  00                 	db	0
  1200  01737A  00                 	db	0
  1201  01737B  00                 	db	0
  1202  01737C  00                 	db	0
  1203  01737D  00                 	db	0
  1204  01737E  00                 	db	0
  1205  01737F  00                 	db	0
  1206  017380  00                 	db	0
  1207  017381  00                 	db	0
  1208  017382  00                 	db	0
  1209  017383  00                 	db	0
  1210  017384  00                 	db	0
  1211  017385  00                 	db	0
  1212  017386  00                 	db	0
  1213  017387  00                 	db	0
  1214                           
  1215                           	psect	idataBANK0
  1216  01A22A                     __pidataBANK0:
  1217                           	opt callstack 0
  1218                           
  1219                           ;initializer for _R
  1220  01A22A  0000               	dw	0
  1221  01A22C  0000               	dw	0
  1222  01A22E  0000               	dw	0
  1223  01A230  0000               	dw	0
  1224  01A232  0000               	dw	0
  1225  01A234  0000               	dw	0
  1226  01A236  0000               	dw	0
  1227  01A238  0000               	dw	0
  1228  01A23A  0000               	dw	0
  1229  01A23C  0000               	dw	0
  1230  01A23E  0000               	dw	0
  1231  01A240  0000               	dw	0
  1232  01A242  0000               	dw	0
  1233  01A244  0000               	dw	0
  1234  01A246  0000               	dw	0
  1235  01A248  0000               	dw	0
  1236  01A24A  0F67               	dw	3943
  1237  01A24C  0F8F               	dw	3983
  1238  01A24E  00                 	db	0
  1239  01A24F  0000               	dw	0
  1240  01A251  00                 	db	0
  1241                           
  1242                           ;initializer for _H
  1243  01A252  00                 	db	0
  1244  01A253  00                 	db	0
  1245  01A254  01                 	db	1
  1246  01A255  00                 	db	0
  1247  01A256  01                 	db	1
  1248  01A257  00                 	db	0
  1249  01A258  00                 	db	0
  1250                           
  1251                           	psect	idataBANK1
  1252  018B80                     __pidataBANK1:
  1253                           	opt callstack 0
  1254                           
  1255                           ;initializer for _C
  1256  018B80  0000               	dw	0
  1257  018B82  0000               	dw	0
  1258  018B84  0000               	dw	0
  1259  018B86  0000               	dw	0
  1260  018B88  0000               	dw	0
  1261  018B8A  0000               	dw	0
  1262  018B8C  0000               	dw	0
  1263  018B8E  0000               	dw	0
  1264  018B90  0000               	dw	0
  1265  018B92  0000               	dw	0
  1266  018B94  0000               	dw	0
  1267  018B96  0000               	dw	0
  1268  018B98  0000               	dw	0
  1269  018B9A  0000               	dw	0
  1270  018B9C  0000               	dw	0
  1271  018B9E  0000               	dw	0
  1272  018BA0  0000               	dw	0
  1273  018BA2  0000               	dw	0
  1274  018BA4  0000               	dw	0
  1275  018BA6  0000               	dw	0
  1276  018BA8  0000               	dw	0
  1277  018BAA  0000               	dw	0
  1278  018BAC  0000               	dw	0
  1279  018BAE  0000               	dw	0
  1280  018BB0  0000               	dw	0
  1281  018BB2  0000               	dw	0
  1282  018BB4  0000               	dw	0
  1283  018BB6  0000               	dw	0
  1284  018BB8  0000               	dw	0
  1285  018BBA  0000               	dw	0
  1286  018BBC  0000               	dw	0
  1287  018BBE  0000               	dw	0
  1288  018BC0  0000               	dw	0
  1289  018BC2  0000               	dw	0
  1290  018BC4  0000               	dw	0
  1291  018BC6  0000               	dw	0
  1292  018BC8  0000               	dw	0
  1293  018BCA  0000               	dw	0
  1294  018BCC  0000               	dw	0
  1295  018BCE  0000               	dw	0
  1296  018BD0  0000               	dw	0
  1297  018BD2  0000               	dw	0
  1298  018BD4  0000               	dw	0
  1299  018BD6  0000               	dw	0
  1300  018BD8  0000               	dw	0
  1301  018BDA  0000               	dw	0
  1302  018BDC  0000               	dw	0
  1303  018BDE  0000               	dw	0
  1304  018BE0  0000               	dw	0
  1305  018BE2  0000               	dw	0
  1306  018BE4  0000               	dw	0
  1307  018BE6  0000               	dw	0
  1308  018BE8  0000               	dw	0
  1309  018BEA  0000               	dw	0
  1310  018BEC  0000               	dw	0
  1311  018BEE  0000               	dw	0
  1312  018BF0  0000               	dw	0
  1313  018BF2  0000               	dw	0
  1314  018BF4  0000               	dw	0
  1315  018BF6  0000               	dw	0
  1316  018BF8  0000               	dw	0
  1317  018BFA  0000               	dw	0
  1318  018BFC  0000               	dw	0
  1319  018BFE  0000               	dw	0
  1320  018C00  0000               	dw	0
  1321  018C02  0000               	dw	0
  1322  018C04  0000               	dw	0
  1323  018C06  0000               	dw	0
  1324  018C08  0000               	dw	0
  1325  018C0A  42FA               	dw	17146
  1326  018C0C  00                 	db	0
  1327  018C0D  00                 	db	0
  1328  018C0E  00                 	db	0
  1329  018C0F  00                 	db	0
  1330  018C10  00                 	db	0
  1331  018C11  00                 	db	0
  1332  018C12  00                 	db	0
  1333  018C13  00                 	db	0
  1334  018C14  00                 	db	0
  1335  018C15  00                 	db	0
  1336  018C16  00                 	db	0
  1337  018C17  00                 	db	0
  1338  018C18  00                 	db	0
  1339  018C19  00                 	db	0
  1340  018C1A  00                 	db	0
  1341  018C1B  00                 	db	0
  1342  018C1C  00                 	db	0
  1343  018C1D  00                 	db	0
  1344  018C1E  00                 	db	0
  1345  018C1F  00                 	db	0
  1346  018C20  00                 	db	0
  1347  018C21  00                 	db	0
  1348  018C22  00                 	db	0
  1349  018C23  00                 	db	0
  1350  018C24  00                 	db	0
  1351  018C25  00                 	db	0
  1352  018C26  00                 	db	0
  1353  018C27  00                 	db	0
  1354  018C28  00                 	db	0
  1355  018C29  00                 	db	0
  1356  018C2A  00                 	db	0
  1357  018C2B  00                 	db	0
  1358  018C2C  00                 	db	0
  1359  018C2D  00                 	db	0
  1360  018C2E  00                 	db	0
  1361  018C2F  00                 	db	0
  1362  018C30  00                 	db	0
  1363  018C31  00                 	db	0
  1364  018C32  00                 	db	0
  1365  018C33  00                 	db	0
  1366  018C34  00                 	db	0
  1367  018C35  00                 	db	0
  1368  018C36  00                 	db	0
  1369  018C37  00                 	db	0
  1370  018C38  00                 	db	0
  1371  018C39  00                 	db	0
  1372  018C3A  00                 	db	0
  1373  018C3B  00                 	db	0
  1374  018C3C  00                 	db	0
  1375  018C3D  00                 	db	0
  1376  018C3E  00                 	db	0
  1377  018C3F  00                 	db	0
  1378  018C40  00                 	db	0
  1379  018C41  00                 	db	0
  1380  018C42  00                 	db	0
  1381  018C43  00                 	db	0
  1382  018C44  00                 	db	0
  1383  018C45  00                 	db	0
  1384  018C46  00                 	db	0
  1385  018C47  00                 	db	0
  1386  018C48  00                 	db	0
  1387  018C49  00                 	db	0
  1388  018C4A  00                 	db	0
  1389  018C4B  00                 	db	0
  1390  018C4C  00                 	db	0
  1391  018C4D  00                 	db	0
  1392  018C4E  00                 	db	0
  1393  018C4F  00                 	db	0
  1394  018C50  00                 	db	0
  1395  018C51  00                 	db	0
  1396  018C52  00                 	db	0
  1397  018C53  00                 	db	0
  1398  018C54  00                 	db	0
  1399  018C55  00                 	db	0
  1400  018C56  00                 	db	0
  1401  018C57  00                 	db	0
  1402  018C58  00                 	db	0
  1403  018C59  00                 	db	0
  1404  018C5A  00                 	db	0
  1405  018C5B  00                 	db	0
  1406  018C5C  00                 	db	0
  1407  018C5D  00                 	db	0
  1408  018C5E  00                 	db	0
  1409                           
  1410                           	psect	idataBANK2
  1411  018DF8                     __pidataBANK2:
  1412                           	opt callstack 0
  1413                           
  1414                           ;initializer for _V
  1415  018DF8  00                 	db	0
  1416  018DF9  00                 	db	0
  1417  018DFA  00                 	db	0
  1418  018DFB  00                 	db	0
  1419  018DFC  00                 	db	0
  1420  018DFD  00                 	db	0
  1421  018DFE  00                 	db	0
  1422  018DFF  00                 	db	0
  1423  018E00  00                 	db	0
  1424  018E01  00                 	db	0
  1425  018E02  00                 	db	0
  1426  018E03  00                 	db	0
  1427  018E04  00                 	db	0
  1428  018E05  00                 	db	0
  1429  018E06  00                 	db	0
  1430  018E07  00                 	db	0
  1431  018E08  00                 	db	0
  1432  018E09  00                 	db	0
  1433  018E0A  00                 	db	0
  1434  018E0B  00                 	db	0
  1435  018E0C  00                 	db	0
  1436  018E0D  00                 	db	0
  1437  018E0E  00                 	db	0
  1438  018E0F  00                 	db	0
  1439  018E10  00                 	db	0
  1440  018E11  00                 	db	0
  1441  018E12  00                 	db	0
  1442  018E13  00                 	db	0
  1443  018E14  00                 	db	0
  1444  018E15  00                 	db	0
  1445  018E16  00                 	db	0
  1446  018E17  00                 	db	0
  1447  018E18  00                 	db	0
  1448  018E19  00                 	db	0
  1449  018E1A  00                 	db	0
  1450  018E1B  00                 	db	0
  1451  018E1C  00                 	db	0
  1452  018E1D  00                 	db	0
  1453  018E1E  00                 	db	0
  1454  018E1F  00                 	db	0
  1455  018E20  00                 	db	0
  1456  018E21  00                 	db	0
  1457  018E22  00                 	db	0
  1458  018E23  00                 	db	0
  1459  018E24  00                 	db	0
  1460  018E25  00                 	db	0
  1461  018E26  00                 	db	0
  1462  018E27  00                 	db	0
  1463  018E28  00                 	db	0
  1464  018E29  00                 	db	0
  1465  018E2A  00                 	db	0
  1466  018E2B  00                 	db	0
  1467  018E2C  00                 	db	0
  1468  018E2D  00                 	db	0
  1469  018E2E  00                 	db	0
  1470  018E2F  00                 	db	0
  1471  018E30  00                 	db	0
  1472  018E31  00                 	db	0
  1473  018E32  00                 	db	0
  1474  018E33  00                 	db	0
  1475  018E34  00                 	db	0
  1476  018E35  00                 	db	0
  1477  018E36  00                 	db	0
  1478  018E37  00                 	db	0
  1479  018E38  00                 	db	0
  1480  018E39  00                 	db	0
  1481  018E3A  00                 	db	0
  1482  018E3B  00                 	db	0
  1483  018E3C  00                 	db	0
  1484  018E3D  00                 	db	0
  1485  018E3E  00                 	db	0
  1486  018E3F  00                 	db	0
  1487  018E40  00                 	db	0
  1488  018E41  00                 	db	0
  1489  018E42  00                 	db	0
  1490  018E43  00                 	db	0
  1491  018E44  00                 	db	0
  1492  018E45  00                 	db	0
  1493  018E46  00                 	db	0
  1494  018E47  00                 	db	0
  1495  018E48  00                 	db	0
  1496  018E49  00                 	db	0
  1497  018E4A  00                 	db	0
  1498  018E4B  00                 	db	0
  1499  018E4C  00                 	db	0
  1500  018E4D  00                 	db	0
  1501  018E4E  00                 	db	0
  1502  018E4F  00                 	db	0
  1503  018E50  00                 	db	0
  1504  018E51  00                 	db	0
  1505  018E52  00                 	db	0
  1506  018E53  00                 	db	0
  1507  018E54  00                 	db	0
  1508  018E55  00                 	db	0
  1509  018E56  00                 	db	0
  1510  018E57  00                 	db	0
  1511  018E58  00                 	db	0
  1512  018E59  00                 	db	0
  1513  018E5A  00                 	db	0
  1514  018E5B  00                 	db	0
  1515  018E5C  00                 	db	0
  1516  018E5D  00                 	db	0
  1517  018E5E  00                 	db	0
  1518  018E5F  00                 	db	0
  1519  018E60  00                 	db	0
  1520  018E61  00                 	db	0
  1521  018E62  00                 	db	0
  1522  018E63  00                 	db	0
  1523  018E64  00                 	db	0
  1524  018E65  00                 	db	0
  1525  018E66  00                 	db	0
  1526  018E67  00                 	db	0
  1527  018E68  00                 	db	0
  1528  018E69  00                 	db	0
  1529  018E6A  00                 	db	0
  1530  018E6B  00                 	db	0
  1531  018E6C  00                 	db	0
  1532  018E6D  00                 	db	0
  1533  018E6E  00                 	db	0
  1534  018E6F  00                 	db	0
  1535  018E70  00                 	db	0
  1536  018E71  00                 	db	0
  1537  018E72  00                 	db	0
  1538  018E73  00                 	db	0
  1539  018E74  00                 	db	0
  1540  018E75  00                 	db	0
  1541  018E76  00                 	db	0
  1542  018E77  00                 	db	0
  1543  018E78  00                 	db	0
  1544  018E79  0000               	dw	0
  1545  018E7B  0000               	dw	0
  1546  018E7D  0000               	dw	0
  1547  018E7F  0000               	dw	0
  1548  018E81  00                 	db	0
  1549  018E82  00                 	db	0
  1550  018E83  00                 	db	0
  1551  018E84  00                 	db	0
  1552  018E85  00                 	db	0
  1553  018E86  00                 	db	0
  1554  018E87  0000               	dw	0
  1555  018E89  0000               	dw	0
  1556  018E8B  0000               	dw	0
  1557  018E8D  0000               	dw	0
  1558  018E8F  0000               	dw	0
  1559  018E91  0000               	dw	0
  1560  018E93  00                 	db	0
  1561  018E94  00                 	db	0
  1562  018E95  00                 	db	0
  1563  018E96  00                 	db	0
  1564  018E97  00                 	db	0
  1565  018E98  00                 	db	0
  1566  018E99  00                 	db	0
  1567  018E9A  00                 	db	0
  1568  018E9B  00                 	db	0
  1569  018E9C  00                 	db	0
  1570  018E9D  0000               	dw	0
  1571  018E9F  0000               	dw	0
  1572  018EA1  2D                 	db	45
  1573  018EA2  00                 	db	0
  1574  018EA3  00                 	db	0
  1575  018EA4  0000               	dw	0
  1576  018EA6  0000               	dw	0
  1577  018EA8  0000               	dw	0
  1578  018EAA  0000               	dw	0
  1579  018EAC  0000               	dw	0
  1580  018EAE  0000               	dw	0
  1581  018EB0  0000               	dw	0
  1582  018EB2  0000               	dw	0
  1583                           
  1584                           	psect	idataBANK3
  1585  01A98A                     __pidataBANK3:
  1586                           	opt callstack 0
  1587                           
  1588                           ;initializer for stoa@F1166
  1589  01A98A  28                 	db	40
  1590  01A98B  6E                 	db	110
  1591  01A98C  75                 	db	117
  1592  01A98D  6C                 	db	108
  1593  01A98E  6C                 	db	108
  1594  01A98F  29                 	db	41
  1595  01A990  00                 	db	0
  1596                           
  1597                           	psect	mediumconst
  1598  00FC58                     __pmediumconst:
  1599                           	opt callstack 0
  1600  00FC58  00                 	db	0
  1601  00FC59                     _BVSOC_TABLE:
  1602                           	opt callstack 0
  1603  00FC59  59D8               	dw	23000
  1604  00FC5B  0000               	dw	0
  1605  00FC5D  0005               	dw	5
  1606  00FC5F  0000               	dw	0
  1607  00FC61  5B68               	dw	23400
  1608  00FC63  0000               	dw	0
  1609  00FC65  000A               	dw	10
  1610  00FC67  0000               	dw	0
  1611  00FC69  5C30               	dw	23600
  1612  00FC6B  0000               	dw	0
  1613  00FC6D  0014               	dw	20
  1614  00FC6F  0000               	dw	0
  1615  00FC71  5E38               	dw	24120
  1616  00FC73  0000               	dw	0
  1617  00FC75  0019               	dw	25
  1618  00FC77  0000               	dw	0
  1619  00FC79  5E88               	dw	24200
  1620  00FC7B  0000               	dw	0
  1621  00FC7D  001E               	dw	30
  1622  00FC7F  0000               	dw	0
  1623  00FC81  5F78               	dw	24440
  1624  00FC83  0000               	dw	0
  1625  00FC85  0028               	dw	40
  1626  00FC87  0000               	dw	0
  1627  00FC89  5FDC               	dw	24540
  1628  00FC8B  0000               	dw	0
  1629  00FC8D  002D               	dw	45
  1630  00FC8F  0000               	dw	0
  1631  00FC91  6018               	dw	24600
  1632  00FC93  0000               	dw	0
  1633  00FC95  0032               	dw	50
  1634  00FC97  0000               	dw	0
  1635  00FC99  6046               	dw	24646
  1636  00FC9B  0000               	dw	0
  1637  00FC9D  0035               	dw	53
  1638  00FC9F  0000               	dw	0
  1639  00FCA1  607C               	dw	24700
  1640  00FCA3  0000               	dw	0
  1641  00FCA5  0037               	dw	55
  1642  00FCA7  0000               	dw	0
  1643  00FCA9  60AE               	dw	24750
  1644  00FCAB  0000               	dw	0
  1645  00FCAD  0039               	dw	57
  1646  00FCAF  0000               	dw	0
  1647  00FCB1  60E0               	dw	24800
  1648  00FCB3  0000               	dw	0
  1649  00FCB5  003C               	dw	60
  1650  00FCB7  0000               	dw	0
  1651  00FCB9  6112               	dw	24850
  1652  00FCBB  0000               	dw	0
  1653  00FCBD  003F               	dw	63
  1654  00FCBF  0000               	dw	0
  1655  00FCC1  6176               	dw	24950
  1656  00FCC3  0000               	dw	0
  1657  00FCC5  0043               	dw	67
  1658  00FCC7  0000               	dw	0
  1659  00FCC9  61A8               	dw	25000
  1660  00FCCB  0000               	dw	0
  1661  00FCCD  0046               	dw	70
  1662  00FCCF  0000               	dw	0
  1663  00FCD1  61BC               	dw	25020
  1664  00FCD3  0000               	dw	0
  1665  00FCD5  0048               	dw	72
  1666  00FCD7  0000               	dw	0
  1667  00FCD9  61D0               	dw	25040
  1668  00FCDB  0000               	dw	0
  1669  00FCDD  004B               	dw	75
  1670  00FCDF  0000               	dw	0
  1671  00FCE1  61DA               	dw	25050
  1672  00FCE3  0000               	dw	0
  1673  00FCE5  0050               	dw	80
  1674  00FCE7  0000               	dw	0
  1675  00FCE9  61E4               	dw	25060
  1676  00FCEB  0000               	dw	0
  1677  00FCED  0055               	dw	85
  1678  00FCEF  0000               	dw	0
  1679  00FCF1  61F8               	dw	25080
  1680  00FCF3  0000               	dw	0
  1681  00FCF5  005A               	dw	90
  1682  00FCF7  0000               	dw	0
  1683  00FCF9  6208               	dw	25096
  1684  00FCFB  0000               	dw	0
  1685  00FCFD  005C               	dw	92
  1686  00FCFF  0000               	dw	0
  1687  00FD01  6222               	dw	25122
  1688  00FD03  0000               	dw	0
  1689  00FD05  005D               	dw	93
  1690  00FD07  0000               	dw	0
  1691  00FD09  6234               	dw	25140
  1692  00FD0B  0000               	dw	0
  1693  00FD0D  005F               	dw	95
  1694  00FD0F  0000               	dw	0
  1695  00FD11  6248               	dw	25160
  1696  00FD13  0000               	dw	0
  1697  00FD15  0061               	dw	97
  1698  00FD17  0000               	dw	0
  1699  00FD19  625C               	dw	25180
  1700  00FD1B  0000               	dw	0
  1701  00FD1D  0064               	dw	100
  1702  00FD1F  0000               	dw	0
  1703  00FD21  6658               	dw	26200
  1704  00FD23  0000               	dw	0
  1705  00FD25  005A               	dw	90
  1706  00FD27  0000               	dw	0
  1707  00FD29                     __end_of_BVSOC_TABLE:
  1708                           	opt callstack 0
  1709  00FD29                     _T:
  1710                           	opt callstack 0
  1711  00FD29  63                 	db	99
  1712  00FD2A  6F                 	db	111
  1713  00FD2B  6D                 	db	109
  1714  00FD2C  6D                 	db	109
  1715  00FD2D  61                 	db	97
  1716  00FD2E  6E                 	db	110
  1717  00FD2F  64                 	db	100
  1718  00FD30  73                 	db	115
  1719  00FD31  20                 	db	32
  1720  00FD32  31                 	db	49
  1721  00FD33  00                 	db	0
  1722  00FD34  00                 	db	0
  1723  00FD35  00                 	db	0
  1724  00FD36  00                 	db	0
  1725  00FD37  00                 	db	0
  1726  00FD38  00                 	db	0
  1727  00FD39  00                 	db	0
  1728  00FD3A  00                 	db	0
  1729  00FD3B  64                 	db	100
  1730  00FD3C  69                 	db	105
  1731  00FD3D  73                 	db	115
  1732  00FD3E  70                 	db	112
  1733  00FD3F  6C                 	db	108
  1734  00FD40  61                 	db	97
  1735  00FD41  79                 	db	121
  1736  00FD42  73                 	db	115
  1737  00FD43  20                 	db	32
  1738  00FD44  31                 	db	49
  1739  00FD45  00                 	db	0
  1740  00FD46  00                 	db	0
  1741  00FD47  00                 	db	0
  1742  00FD48  00                 	db	0
  1743  00FD49  00                 	db	0
  1744  00FD4A  00                 	db	0
  1745  00FD4B  00                 	db	0
  1746  00FD4C  00                 	db	0
  1747  00FD4D  63                 	db	99
  1748  00FD4E  6F                 	db	111
  1749  00FD4F  6D                 	db	109
  1750  00FD50  6D                 	db	109
  1751  00FD51  61                 	db	97
  1752  00FD52  6E                 	db	110
  1753  00FD53  64                 	db	100
  1754  00FD54  73                 	db	115
  1755  00FD55  20                 	db	32
  1756  00FD56  32                 	db	50
  1757  00FD57  00                 	db	0
  1758  00FD58  00                 	db	0
  1759  00FD59  00                 	db	0
  1760  00FD5A  00                 	db	0
  1761  00FD5B  00                 	db	0
  1762  00FD5C  00                 	db	0
  1763  00FD5D  00                 	db	0
  1764  00FD5E  00                 	db	0
  1765  00FD5F  64                 	db	100
  1766  00FD60  69                 	db	105
  1767  00FD61  73                 	db	115
  1768  00FD62  70                 	db	112
  1769  00FD63  6C                 	db	108
  1770  00FD64  61                 	db	97
  1771  00FD65  79                 	db	121
  1772  00FD66  73                 	db	115
  1773  00FD67  20                 	db	32
  1774  00FD68  32                 	db	50
  1775  00FD69  00                 	db	0
  1776  00FD6A  00                 	db	0
  1777  00FD6B  00                 	db	0
  1778  00FD6C  00                 	db	0
  1779  00FD6D  00                 	db	0
  1780  00FD6E  00                 	db	0
  1781  00FD6F  00                 	db	0
  1782  00FD70  00                 	db	0
  1783  00FD71  63                 	db	99
  1784  00FD72  6F                 	db	111
  1785  00FD73  6D                 	db	109
  1786  00FD74  6D                 	db	109
  1787  00FD75  61                 	db	97
  1788  00FD76  6E                 	db	110
  1789  00FD77  64                 	db	100
  1790  00FD78  73                 	db	115
  1791  00FD79  20                 	db	32
  1792  00FD7A  33                 	db	51
  1793  00FD7B  00                 	db	0
  1794  00FD7C  00                 	db	0
  1795  00FD7D  00                 	db	0
  1796  00FD7E  00                 	db	0
  1797  00FD7F  00                 	db	0
  1798  00FD80  00                 	db	0
  1799  00FD81  00                 	db	0
  1800  00FD82  00                 	db	0
  1801  00FD83  64                 	db	100
  1802  00FD84  69                 	db	105
  1803  00FD85  73                 	db	115
  1804  00FD86  70                 	db	112
  1805  00FD87  6C                 	db	108
  1806  00FD88  61                 	db	97
  1807  00FD89  79                 	db	121
  1808  00FD8A  73                 	db	115
  1809  00FD8B  20                 	db	32
  1810  00FD8C  33                 	db	51
  1811  00FD8D  00                 	db	0
  1812  00FD8E  00                 	db	0
  1813  00FD8F  00                 	db	0
  1814  00FD90  00                 	db	0
  1815  00FD91  00                 	db	0
  1816  00FD92  00                 	db	0
  1817  00FD93  00                 	db	0
  1818  00FD94  00                 	db	0
  1819  00FD95  63                 	db	99
  1820  00FD96  6F                 	db	111
  1821  00FD97  6D                 	db	109
  1822  00FD98  6D                 	db	109
  1823  00FD99  61                 	db	97
  1824  00FD9A  6E                 	db	110
  1825  00FD9B  64                 	db	100
  1826  00FD9C  73                 	db	115
  1827  00FD9D  20                 	db	32
  1828  00FD9E  34                 	db	52
  1829  00FD9F  00                 	db	0
  1830  00FDA0  00                 	db	0
  1831  00FDA1  00                 	db	0
  1832  00FDA2  00                 	db	0
  1833  00FDA3  00                 	db	0
  1834  00FDA4  00                 	db	0
  1835  00FDA5  00                 	db	0
  1836  00FDA6  00                 	db	0
  1837  00FDA7  64                 	db	100
  1838  00FDA8  69                 	db	105
  1839  00FDA9  73                 	db	115
  1840  00FDAA  70                 	db	112
  1841  00FDAB  6C                 	db	108
  1842  00FDAC  61                 	db	97
  1843  00FDAD  79                 	db	121
  1844  00FDAE  73                 	db	115
  1845  00FDAF  20                 	db	32
  1846  00FDB0  34                 	db	52
  1847  00FDB1  00                 	db	0
  1848  00FDB2  00                 	db	0
  1849  00FDB3  00                 	db	0
  1850  00FDB4  00                 	db	0
  1851  00FDB5  00                 	db	0
  1852  00FDB6  00                 	db	0
  1853  00FDB7  00                 	db	0
  1854  00FDB8  00                 	db	0
  1855  00FDB9                     __end_of_T:
  1856                           	opt callstack 0
  1857  00FDB9  0000               	dw	0
  1858  00FDBB  3F80               	dw	16256
  1859  00FDBD  0000               	dw	0
  1860  00FDBF  3FC0               	dw	16320
  1861  00FDC1                     __end_of_bp:
  1862                           	opt callstack 0
  1863  00FDC1  AA00               	dw	43520
  1864  00FDC3  3FB8               	dw	16312
  1865  00FDC5                     __end_of_ivln2_h:
  1866                           	opt callstack 0
  1867  00FDC5  23C6               	dw	9158
  1868  00FDC7  B8F6               	dw	47350
  1869  00FDC9                     __end_of_cp_l:
  1870                           	opt callstack 0
  1871  00FDC9  4000               	dw	16384
  1872  00FDCB  3F76               	dw	16246
  1873  00FDCD                     __end_of_cp_h:
  1874                           	opt callstack 0
  1875  0000                     _IVTADL	set	14493
  1876  0000                     _IVTADH	set	14494
  1877  0000                     _IVTADU	set	14495
  1878  0000                     _PIR6bits	set	14758
  1879  0000                     _PIR4bits	set	14756
  1880  0000                     _PIE8bits	set	14744
  1881  0000                     _PIR8bits	set	14760
  1882  0000                     _SCANPR	set	14839
  1883  0000                     _DMA2PR	set	14836
  1884  0000                     _DMA1PR	set	14835
  1885  0000                     _MAINPR	set	14834
  1886  0000                     _ISRPR	set	14833
  1887  0000                     _PIE2bits	set	14738
  1888  0000                     _PIR2bits	set	14754
  1889  0000                     _PIE9bits	set	14745
  1890  0000                     _PIR9bits	set	14761
  1891  0000                     _PIE6bits	set	14742
  1892  0000                     _PIE3bits	set	14739
  1893  0000                     _PMD7	set	14791
  1894  0000                     _PMD6	set	14790
  1895  0000                     _PMD5	set	14789
  1896  0000                     _PMD4	set	14788
  1897  0000                     _PMD3	set	14787
  1898  0000                     _PMD2	set	14786
  1899  0000                     _PMD1	set	14785
  1900  0000                     _PMD0	set	14784
  1901  0000                     _OSCTUNE	set	14814
  1902  0000                     _OSCFRQ	set	14815
  1903  0000                     _OSCEN	set	14813
  1904  0000                     _OSCCON3	set	14811
  1905  0000                     _OSCCON1	set	14809
  1906  0000                     _IPR8bits	set	14728
  1907  0000                     _IPR9bits	set	14729
  1908  0000                     _IPR5bits	set	14725
  1909  0000                     _IPR1bits	set	14721
  1910  0000                     _IPR3bits	set	14723
  1911  0000                     _IPR6bits	set	14726
  1912  0000                     _IPR2bits	set	14722
  1913  0000                     _PIE5bits	set	14741
  1914  0000                     _PIE1bits	set	14737
  1915  0000                     _PIR5bits	set	14757
  1916  0000                     _PIR1bits	set	14753
  1917  0000                     _PLLR	set	118496
  1918  0000                     _SPI1SDIPPS	set	15071
  1919  0000                     _U1RXPPS	set	15077
  1920  0000                     _RC6PPS	set	14870
  1921  0000                     _RC5PPS	set	14869
  1922  0000                     _INT1PPS	set	15041
  1923  0000                     _RD1PPS	set	14873
  1924  0000                     _INT0PPS	set	15040
  1925  0000                     _RC3PPS	set	14867
  1926  0000                     _RB6PPS	set	14862
  1927  0000                     _SPI1SCKPPS	set	15070
  1928  0000                     _U2RXPPS	set	15080
  1929  0000                     _SLRCONF	set	14995
  1930  0000                     _SLRCONE	set	14979
  1931  0000                     _SLRCOND	set	14963
  1932  0000                     _SLRCONC	set	14947
  1933  0000                     _SLRCONB	set	14931
  1934  0000                     _SLRCONA	set	14915
  1935  0000                     _ODCOND	set	14962
  1936  0000                     _ODCONC	set	14946
  1937  0000                     _ODCONB	set	14930
  1938  0000                     _ODCONA	set	14914
  1939  0000                     _ODCONF	set	14994
  1940  0000                     _ODCONE	set	14978
  1941  0000                     _WPUC	set	14945
  1942  0000                     _WPUA	set	14913
  1943  0000                     _WPUB	set	14929
  1944  0000                     _WPUE	set	14977
  1945  0000                     _WPUF	set	14993
  1946  0000                     _WPUD	set	14961
  1947  0000                     _ANSELA	set	14912
  1948  0000                     _ANSELF	set	14992
  1949  0000                     _ANSELE	set	14976
  1950  0000                     _ANSELB	set	14928
  1951  0000                     _ANSELC	set	14944
  1952  0000                     _ANSELD	set	14960
  1953  0000                     _DMA2SSA	set	15321
  1954  0000                     _DMA1SSA	set	15353
  1955  0000                     _DMA2DSZ	set	15310
  1956  0000                     _DMA2SSZ	set	15319
  1957  0000                     _DMA2DSA	set	15312
  1958  0000                     _DMA1DSZ	set	15342
  1959  0000                     _DMA1SSZ	set	15351
  1960  0000                     _DMA1DSA	set	15344
  1961  0000                     _DMA2CON0bits	set	15324
  1962  0000                     _DMA2CON1bits	set	15325
  1963  0000                     _DMA1CON0bits	set	15356
  1964  0000                     _DMA1CON1bits	set	15357
  1965  0000                     _DMA2CON0	set	15324
  1966  0000                     _DMA2AIRQ	set	15326
  1967  0000                     _DMA2SIRQ	set	15327
  1968  0000                     _DMA2CON1	set	15325
  1969  0000                     _DMA1CON0	set	15356
  1970  0000                     _DMA1AIRQ	set	15358
  1971  0000                     _DMA1SIRQ	set	15359
  1972  0000                     _DMA1CON1	set	15357
  1973  0000                     _CLKRCON	set	15589
  1974  0000                     _CLKRCLK	set	15590
  1975  0000                     _SPI1INTFbits	set	15642
  1976  0000                     _SPI1RXB	set	15632
  1977  0000                     _SPI1TXB	set	15633
  1978  0000                     _SPI1TCNTL	set	15634
  1979  0000                     _SPI1CON0	set	15636
  1980  0000                     _SPI1CLK	set	15644
  1981  0000                     _SPI1BAUD	set	15641
  1982  0000                     _SPI1CON2	set	15638
  1983  0000                     _SPI1CON1	set	15637
  1984  0000                     _U2RXB	set	15824
  1985  0000                     _U2TXB	set	15826
  1986  0000                     _U2ERRIE	set	15842
  1987  0000                     _U2ERRIR	set	15841
  1988  0000                     _U2UIR	set	15840
  1989  0000                     _U2FIFO	set	15839
  1990  0000                     _U2BRGH	set	15838
  1991  0000                     _U2BRGL	set	15837
  1992  0000                     _U2CON2	set	15836
  1993  0000                     _U2CON1	set	15835
  1994  0000                     _U2CON0	set	15834
  1995  0000                     _U2P3L	set	15832
  1996  0000                     _U2P2L	set	15830
  1997  0000                     _U2P1L	set	15828
  1998  0000                     _U1RXB	set	15848
  1999  0000                     _U1ERRIE	set	15866
  2000  0000                     _U1ERRIR	set	15865
  2001  0000                     _U1UIR	set	15864
  2002  0000                     _U1FIFO	set	15863
  2003  0000                     _U1BRGH	set	15862
  2004  0000                     _U1BRGL	set	15861
  2005  0000                     _U1CON2	set	15860
  2006  0000                     _U1CON1	set	15859
  2007  0000                     _U1CON0	set	15858
  2008  0000                     _U1P3H	set	15857
  2009  0000                     _U1P3L	set	15856
  2010  0000                     _U1P2H	set	15855
  2011  0000                     _U1P2L	set	15854
  2012  0000                     _U1P1H	set	15853
  2013  0000                     _U1P1L	set	15852
  2014  0000                     _FVRCON	set	16065
  2015  0000                     _ADFLTRL	set	16102
  2016  0000                     _ADFLTRH	set	16103
  2017  0000                     _ADCON0bits	set	16120
  2018  0000                     _ADCON0	set	16120
  2019  0000                     _ADCLK	set	16127
  2020  0000                     _ADACT	set	16126
  2021  0000                     _ADREF	set	16125
  2022  0000                     _ADSTAT	set	16124
  2023  0000                     _ADCON3	set	16123
  2024  0000                     _ADCON2	set	16122
  2025  0000                     _ADCON1	set	16121
  2026  0000                     _ADPREH	set	16119
  2027  0000                     _ADPREL	set	16118
  2028  0000                     _ADCAP	set	16117
  2029  0000                     _ADACQH	set	16116
  2030  0000                     _ADACQL	set	16115
  2031  0000                     _ADPCH	set	16113
  2032  0000                     _ADRPT	set	16108
  2033  0000                     _ADACCU	set	16106
  2034  0000                     _ADSTPTH	set	16101
  2035  0000                     _ADSTPTL	set	16100
  2036  0000                     _ADUTHH	set	16097
  2037  0000                     _ADUTHL	set	16096
  2038  0000                     _ADLTHH	set	16095
  2039  0000                     _ADLTHL	set	16094
  2040  0000                     _CCPTMRS1bits	set	16223
  2041  0000                     _PORTFbits	set	16335
  2042  0000                     _LATCbits	set	16316
  2043  0000                     _LATDbits	set	16317
  2044  0000                     _PORTBbits	set	16331
  2045  0000                     _T3CONbits	set	16294
  2046  0000                     _T3CON	set	16294
  2047  0000                     _TMR3L	set	16292
  2048  0000                     _TMR3H	set	16293
  2049  0000                     _T3CLK	set	16297
  2050  0000                     _T3GATE	set	16296
  2051  0000                     _T3GCON	set	16295
  2052  0000                     _T2CON	set	16300
  2053  0000                     _T2TMR	set	16298
  2054  0000                     _T2PR	set	16299
  2055  0000                     _T2RST	set	16303
  2056  0000                     _T2HLT	set	16301
  2057  0000                     _T2CLKCON	set	16302
  2058  0000                     _PWM8DCL	set	16224
  2059  0000                     _PWM8DCH	set	16225
  2060  0000                     _PWM8CON	set	16226
  2061  0000                     _LATEbits	set	16318
  2062  0000                     _T5CONbits	set	16282
  2063  0000                     _T5CON	set	16282
  2064  0000                     _TMR5L	set	16280
  2065  0000                     _TMR5H	set	16281
  2066  0000                     _T5CLK	set	16285
  2067  0000                     _T5GATE	set	16284
  2068  0000                     _T5GCON	set	16283
  2069  0000                     _T6CON	set	16276
  2070  0000                     _T6TMR	set	16274
  2071  0000                     _T6PR	set	16275
  2072  0000                     _T6RST	set	16279
  2073  0000                     _T6HLT	set	16277
  2074  0000                     _T6CLKCON	set	16278
  2075  0000                     _TRISD	set	16325
  2076  0000                     _TRISC	set	16324
  2077  0000                     _TRISB	set	16323
  2078  0000                     _TRISA	set	16322
  2079  0000                     _TRISF	set	16327
  2080  0000                     _TRISE	set	16326
  2081  0000                     _LATC	set	16316
  2082  0000                     _LATB	set	16315
  2083  0000                     _LATF	set	16319
  2084  0000                     _LATA	set	16314
  2085  0000                     _LATD	set	16317
  2086  0000                     _LATE	set	16318
  2087  0000                     _IVTLOCKbits	set	16340
  2088  0000                     _IVTLOCK	set	16340
  2089  0000                     _INTCON0bits	set	16338
  2090  0000                     _GIE	set	130711
  2091  00FDCD                     STR_47:
  2092                           
  2093                           ; BSR set to: 57
  2094  00FDCD  20                 	db	32
  2095  00FDCE  25                 	db	37
  2096  00FDCF  6C                 	db	108	;'l'
  2097  00FDD0  75                 	db	117	;'u'
  2098  00FDD1  2C                 	db	44
  2099  00FDD2  25                 	db	37
  2100  00FDD3  34                 	db	52	;'4'
  2101  00FDD4  2E                 	db	46
  2102  00FDD5  34                 	db	52	;'4'
  2103  00FDD6  66                 	db	102	;'f'
  2104  00FDD7  2C                 	db	44
  2105  00FDD8  25                 	db	37
  2106  00FDD9  34                 	db	52	;'4'
  2107  00FDDA  2E                 	db	46
  2108  00FDDB  34                 	db	52	;'4'
  2109  00FDDC  66                 	db	102	;'f'
  2110  00FDDD  2C                 	db	44
  2111  00FDDE  25                 	db	37
  2112  00FDDF  34                 	db	52	;'4'
  2113  00FDE0  2E                 	db	46
  2114  00FDE1  34                 	db	52	;'4'
  2115  00FDE2  66                 	db	102	;'f'
  2116  00FDE3  2C                 	db	44
  2117  00FDE4  25                 	db	37
  2118  00FDE5  34                 	db	52	;'4'
  2119  00FDE6  2E                 	db	46
  2120  00FDE7  34                 	db	52	;'4'
  2121  00FDE8  66                 	db	102	;'f'
  2122  00FDE9  2C                 	db	44
  2123  00FDEA  25                 	db	37
  2124  00FDEB  34                 	db	52	;'4'
  2125  00FDEC  2E                 	db	46
  2126  00FDED  33                 	db	51	;'3'
  2127  00FDEE  66                 	db	102	;'f'
  2128  00FDEF  2C                 	db	44
  2129  00FDF0  25                 	db	37
  2130  00FDF1  34                 	db	52	;'4'
  2131  00FDF2  2E                 	db	46
  2132  00FDF3  33                 	db	51	;'3'
  2133  00FDF4  66                 	db	102	;'f'
  2134  00FDF5  2C                 	db	44
  2135  00FDF6  25                 	db	37
  2136  00FDF7  34                 	db	52	;'4'
  2137  00FDF8  2E                 	db	46
  2138  00FDF9  33                 	db	51	;'3'
  2139  00FDFA  66                 	db	102	;'f'
  2140  00FDFB  2C                 	db	44
  2141  00FDFC  25                 	db	37
  2142  00FDFD  34                 	db	52	;'4'
  2143  00FDFE  2E                 	db	46
  2144  00FDFF  33                 	db	51	;'3'
  2145  00FE00  66                 	db	102	;'f'
  2146  00FE01  2C                 	db	44
  2147  00FE02  25                 	db	37
  2148  00FE03  34                 	db	52	;'4'
  2149  00FE04  2E                 	db	46
  2150  00FE05  33                 	db	51	;'3'
  2151  00FE06  66                 	db	102	;'f'
  2152  00FE07  2C                 	db	44
  2153  00FE08  25                 	db	37
  2154  00FE09  34                 	db	52	;'4'
  2155  00FE0A  2E                 	db	46
  2156  00FE0B  33                 	db	51	;'3'
  2157  00FE0C  66                 	db	102	;'f'
  2158  00FE0D  2C                 	db	44
  2159  00FE0E  25                 	db	37
  2160  00FE0F  34                 	db	52	;'4'
  2161  00FE10  2E                 	db	46
  2162  00FE11  33                 	db	51	;'3'
  2163  00FE12  64                 	db	100	;'d'
  2164  00FE13  2C                 	db	44
  2165  00FE14  25                 	db	37
  2166  00FE15  34                 	db	52	;'4'
  2167  00FE16  2E                 	db	46
  2168  00FE17  33                 	db	51	;'3'
  2169  00FE18  64                 	db	100	;'d'
  2170  00FE19  0D                 	db	13
  2171  00FE1A  0A                 	db	10
  2172  00FE1B  00                 	db	0
  2173  00FE1C                     
  2174                           ; BSR set to: 57
  2175  00FE1C  20                 	db	32
  2176  00FE1D  4D                 	db	77	;'M'
  2177  00FE1E  65                 	db	101	;'e'
  2178  00FE1F  73                 	db	115	;'s'
  2179  00FE20  67                 	db	103	;'g'
  2180  00FE21  20                 	db	32
  2181  00FE22  25                 	db	37
  2182  00FE23  64                 	db	100	;'d'
  2183  00FE24  20                 	db	32
  2184  00FE25  53                 	db	83	;'S'
  2185  00FE26  74                 	db	116	;'t'
  2186  00FE27  61                 	db	97	;'a'
  2187  00FE28  63                 	db	99	;'c'
  2188  00FE29  6B                 	db	107	;'k'
  2189  00FE2A  20                 	db	32
  2190  00FE2B  25                 	db	37
  2191  00FE2C  64                 	db	100	;'d'
  2192  00FE2D  20                 	db	32
  2193  00FE2E  20                 	db	32
  2194  00FE2F  20                 	db	32
  2195  00FE30  20                 	db	32
  2196  00FE31  20                 	db	32
  2197  00FE32  20                 	db	32
  2198  00FE33  00                 	db	0
  2199  00FE34                     STR_9:
  2200                           
  2201                           ; BSR set to: 57
  2202  00FE34  53                 	db	83	;'S'
  2203  00FE35  54                 	db	84	;'T'
  2204  00FE36  41                 	db	65	;'A'
  2205  00FE37  54                 	db	84	;'T'
  2206  00FE38  49                 	db	73	;'I'
  2207  00FE39  43                 	db	67	;'C'
  2208  00FE3A  20                 	db	32
  2209  00FE3B  53                 	db	83	;'S'
  2210  00FE3C  4F                 	db	79	;'O'
  2211  00FE3D  43                 	db	67	;'C'
  2212  00FE3E  20                 	db	32
  2213  00FE3F  25                 	db	37
  2214  00FE40  64                 	db	100	;'d'
  2215  00FE41  20                 	db	32
  2216  00FE42  25                 	db	37
  2217  00FE43  32                 	db	50	;'2'
  2218  00FE44  2E                 	db	46
  2219  00FE45  34                 	db	52	;'4'
  2220  00FE46  66                 	db	102	;'f'
  2221  00FE47  20                 	db	32
  2222  00FE48  20                 	db	32
  2223  00FE49  20                 	db	32
  2224  00FE4A  00                 	db	0
  2225  00FE4B                     STR_20:
  2226                           
  2227                           ; BSR set to: 57
  2228  00FE4B  42                 	db	66	;'B'
  2229  00FE4C  41                 	db	65	;'A'
  2230  00FE4D  48                 	db	72	;'H'
  2231  00FE4E  20                 	db	32
  2232  00FE4F  25                 	db	37
  2233  00FE50  33                 	db	51	;'3'
  2234  00FE51  2E                 	db	46
  2235  00FE52  32                 	db	50	;'2'
  2236  00FE53  66                 	db	102	;'f'
  2237  00FE54  20                 	db	32
  2238  00FE55  50                 	db	80	;'P'
  2239  00FE56  25                 	db	37
  2240  00FE57  33                 	db	51	;'3'
  2241  00FE58  2E                 	db	46
  2242  00FE59  32                 	db	50	;'2'
  2243  00FE5A  66                 	db	102	;'f'
  2244  00FE5B  20                 	db	32
  2245  00FE5C  20                 	db	32
  2246  00FE5D  20                 	db	32
  2247  00FE5E  00                 	db	0
  2248  00FE5F                     STR_40:
  2249                           
  2250                           ; BSR set to: 57
  2251  00FE5F  20                 	db	32
  2252  00FE60  20                 	db	32
  2253  00FE61  20                 	db	32
  2254  00FE62  20                 	db	32
  2255  00FE63  20                 	db	32
  2256  00FE64  20                 	db	32
  2257  00FE65  20                 	db	32
  2258  00FE66  20                 	db	32
  2259  00FE67  20                 	db	32
  2260  00FE68  20                 	db	32
  2261  00FE69  20                 	db	32
  2262  00FE6A  20                 	db	32
  2263  00FE6B  20                 	db	32
  2264  00FE6C  20                 	db	32
  2265  00FE6D  20                 	db	32
  2266  00FE6E  20                 	db	32
  2267  00FE6F  20                 	db	32
  2268  00FE70  20                 	db	32
  2269  00FE71  00                 	db	0
  2270  00FE72                     STR_30:
  2271                           
  2272                           ; BSR set to: 57
  2273  00FE72  48                 	db	72	;'H'
  2274  00FE73  45                 	db	69	;'E'
  2275  00FE74  4C                 	db	76	;'L'
  2276  00FE75  50                 	db	80	;'P'
  2277  00FE76  20                 	db	32
  2278  00FE77  25                 	db	37
  2279  00FE78  73                 	db	115	;'s'
  2280  00FE79  20                 	db	32
  2281  00FE7A  20                 	db	32
  2282  00FE7B  20                 	db	32
  2283  00FE7C  20                 	db	32
  2284  00FE7D  20                 	db	32
  2285  00FE7E  20                 	db	32
  2286  00FE7F  20                 	db	32
  2287  00FE80  20                 	db	32
  2288  00FE81  20                 	db	32
  2289  00FE82  20                 	db	32
  2290  00FE83  20                 	db	32
  2291  00FE84  00                 	db	0
  2292  00FE85                     
  2293                           ; BSR set to: 57
  2294  00FE85  44                 	db	68	;'D'
  2295  00FE86  49                 	db	73	;'I'
  2296  00FE87  53                 	db	83	;'S'
  2297  00FE88  50                 	db	80	;'P'
  2298  00FE89  4C                 	db	76	;'L'
  2299  00FE8A  41                 	db	65	;'A'
  2300  00FE8B  59                 	db	89	;'Y'
  2301  00FE8C  20                 	db	32
  2302  00FE8D  25                 	db	37
  2303  00FE8E  73                 	db	115	;'s'
  2304  00FE8F  20                 	db	32
  2305  00FE90  20                 	db	32
  2306  00FE91  20                 	db	32
  2307  00FE92  20                 	db	32
  2308  00FE93  20                 	db	32
  2309  00FE94  20                 	db	32
  2310  00FE95  20                 	db	32
  2311  00FE96  20                 	db	32
  2312  00FE97  00                 	db	0
  2313  00FE98                     STR_21:
  2314                           
  2315                           ; BSR set to: 57
  2316  00FE98  53                 	db	83	;'S'
  2317  00FE99  4F                 	db	79	;'O'
  2318  00FE9A  43                 	db	67	;'C'
  2319  00FE9B  20                 	db	32
  2320  00FE9C  25                 	db	37
  2321  00FE9D  64                 	db	100	;'d'
  2322  00FE9E  20                 	db	32
  2323  00FE9F  52                 	db	82	;'R'
  2324  00FEA0  55                 	db	85	;'U'
  2325  00FEA1  4E                 	db	78	;'N'
  2326  00FEA2  20                 	db	32
  2327  00FEA3  25                 	db	37
  2328  00FEA4  64                 	db	100	;'d'
  2329  00FEA5  20                 	db	32
  2330  00FEA6  20                 	db	32
  2331  00FEA7  20                 	db	32
  2332  00FEA8  20                 	db	32
  2333  00FEA9  20                 	db	32
  2334  00FEAA  00                 	db	0
  2335  00FEAB                     STR_13:
  2336                           
  2337                           ; BSR set to: 57
  2338  00FEAB  50                 	db	80	;'P'
  2339  00FEAC  56                 	db	86	;'V'
  2340  00FEAD  20                 	db	32
  2341  00FEAE  20                 	db	32
  2342  00FEAF  20                 	db	32
  2343  00FEB0  50                 	db	80	;'P'
  2344  00FEB1  57                 	db	87	;'W'
  2345  00FEB2  52                 	db	82	;'R'
  2346  00FEB3  20                 	db	32
  2347  00FEB4  25                 	db	37
  2348  00FEB5  33                 	db	51	;'3'
  2349  00FEB6  2E                 	db	46
  2350  00FEB7  32                 	db	50	;'2'
  2351  00FEB8  66                 	db	102	;'f'
  2352  00FEB9  20                 	db	32
  2353  00FEBA  20                 	db	32
  2354  00FEBB  20                 	db	32
  2355  00FEBC  20                 	db	32
  2356  00FEBD  00                 	db	0
  2357  00FEBE                     STR_15:
  2358                           
  2359                           ; BSR set to: 57
  2360  00FEBE  49                 	db	73	;'I'
  2361  00FEBF  4E                 	db	78	;'N'
  2362  00FEC0  56                 	db	86	;'V'
  2363  00FEC1  20                 	db	32
  2364  00FEC2  20                 	db	32
  2365  00FEC3  50                 	db	80	;'P'
  2366  00FEC4  57                 	db	87	;'W'
  2367  00FEC5  52                 	db	82	;'R'
  2368  00FEC6  20                 	db	32
  2369  00FEC7  25                 	db	37
  2370  00FEC8  33                 	db	51	;'3'
  2371  00FEC9  2E                 	db	46
  2372  00FECA  32                 	db	50	;'2'
  2373  00FECB  66                 	db	102	;'f'
  2374  00FECC  20                 	db	32
  2375  00FECD  20                 	db	32
  2376  00FECE  20                 	db	32
  2377  00FECF  20                 	db	32
  2378  00FED0  00                 	db	0
  2379  00FED1                     STR_14:
  2380                           
  2381                           ; BSR set to: 57
  2382  00FED1  4C                 	db	76	;'L'
  2383  00FED2  4F                 	db	79	;'O'
  2384  00FED3  41                 	db	65	;'A'
  2385  00FED4  44                 	db	68	;'D'
  2386  00FED5  20                 	db	32
  2387  00FED6  50                 	db	80	;'P'
  2388  00FED7  57                 	db	87	;'W'
  2389  00FED8  52                 	db	82	;'R'
  2390  00FED9  20                 	db	32
  2391  00FEDA  25                 	db	37
  2392  00FEDB  33                 	db	51	;'3'
  2393  00FEDC  2E                 	db	46
  2394  00FEDD  32                 	db	50	;'2'
  2395  00FEDE  66                 	db	102	;'f'
  2396  00FEDF  20                 	db	32
  2397  00FEE0  20                 	db	32
  2398  00FEE1  20                 	db	32
  2399  00FEE2  20                 	db	32
  2400  00FEE3  00                 	db	0
  2401  00FEE4                     STR_19:
  2402                           
  2403                           ; BSR set to: 57
  2404  00FEE4  42                 	db	66	;'B'
  2405  00FEE5  41                 	db	65	;'A'
  2406  00FEE6  54                 	db	84	;'T'
  2407  00FEE7  54                 	db	84	;'T'
  2408  00FEE8  20                 	db	32
  2409  00FEE9  50                 	db	80	;'P'
  2410  00FEEA  57                 	db	87	;'W'
  2411  00FEEB  52                 	db	82	;'R'
  2412  00FEEC  20                 	db	32
  2413  00FEED  25                 	db	37
  2414  00FEEE  33                 	db	51	;'3'
  2415  00FEEF  2E                 	db	46
  2416  00FEF0  32                 	db	50	;'2'
  2417  00FEF1  66                 	db	102	;'f'
  2418  00FEF2  20                 	db	32
  2419  00FEF3  20                 	db	32
  2420  00FEF4  20                 	db	32
  2421  00FEF5  20                 	db	32
  2422  00FEF6  00                 	db	0
  2423  00FEF7                     STR_17:
  2424                           
  2425                           ; BSR set to: 57
  2426  00FEF7  42                 	db	66	;'B'
  2427  00FEF8  56                 	db	86	;'V'
  2428  00FEF9  20                 	db	32
  2429  00FEFA  25                 	db	37
  2430  00FEFB  32                 	db	50	;'2'
  2431  00FEFC  2E                 	db	46
  2432  00FEFD  32                 	db	50	;'2'
  2433  00FEFE  66                 	db	102	;'f'
  2434  00FEFF  20                 	db	32
  2435  00FF00  42                 	db	66	;'B'
  2436  00FF01  41                 	db	65	;'A'
  2437  00FF02  20                 	db	32
  2438  00FF03  25                 	db	37
  2439  00FF04  32                 	db	50	;'2'
  2440  00FF05  2E                 	db	46
  2441  00FF06  32                 	db	50	;'2'
  2442  00FF07  66                 	db	102	;'f'
  2443  00FF08  20                 	db	32
  2444  00FF09  00                 	db	0
  2445  00FF0A                     STR_18:
  2446                           
  2447                           ; BSR set to: 57
  2448  00FF0A  43                 	db	67	;'C'
  2449  00FF0B  56                 	db	86	;'V'
  2450  00FF0C  20                 	db	32
  2451  00FF0D  25                 	db	37
  2452  00FF0E  32                 	db	50	;'2'
  2453  00FF0F  2E                 	db	46
  2454  00FF10  32                 	db	50	;'2'
  2455  00FF11  66                 	db	102	;'f'
  2456  00FF12  20                 	db	32
  2457  00FF13  4C                 	db	76	;'L'
  2458  00FF14  41                 	db	65	;'A'
  2459  00FF15  20                 	db	32
  2460  00FF16  25                 	db	37
  2461  00FF17  32                 	db	50	;'2'
  2462  00FF18  2E                 	db	46
  2463  00FF19  32                 	db	50	;'2'
  2464  00FF1A  66                 	db	102	;'f'
  2465  00FF1B  20                 	db	32
  2466  00FF1C  00                 	db	0
  2467  00FF1D                     STR_16:
  2468                           
  2469                           ; BSR set to: 57
  2470  00FF1D  50                 	db	80	;'P'
  2471  00FF1E  56                 	db	86	;'V'
  2472  00FF1F  20                 	db	32
  2473  00FF20  25                 	db	37
  2474  00FF21  32                 	db	50	;'2'
  2475  00FF22  2E                 	db	46
  2476  00FF23  32                 	db	50	;'2'
  2477  00FF24  66                 	db	102	;'f'
  2478  00FF25  20                 	db	32
  2479  00FF26  50                 	db	80	;'P'
  2480  00FF27  41                 	db	65	;'A'
  2481  00FF28  20                 	db	32
  2482  00FF29  25                 	db	37
  2483  00FF2A  32                 	db	50	;'2'
  2484  00FF2B  2E                 	db	46
  2485  00FF2C  32                 	db	50	;'2'
  2486  00FF2D  66                 	db	102	;'f'
  2487  00FF2E  20                 	db	32
  2488  00FF2F  00                 	db	0
  2489  00FF30                     STR_8:
  2490                           
  2491                           ; BSR set to: 57
  2492  00FF30  20                 	db	32
  2493  00FF31  56                 	db	86	;'V'
  2494  00FF32  54                 	db	84	;'T'
  2495  00FF33  45                 	db	69	;'E'
  2496  00FF34  52                 	db	82	;'R'
  2497  00FF35  4D                 	db	77	;'M'
  2498  00FF36  20                 	db	32
  2499  00FF37  23                 	db	35
  2500  00FF38  32                 	db	50	;'2'
  2501  00FF39  20                 	db	32
  2502  00FF3A  20                 	db	32
  2503  00FF3B  20                 	db	32
  2504  00FF3C  20                 	db	32
  2505  00FF3D  20                 	db	32
  2506  00FF3E  20                 	db	32
  2507  00FF3F  20                 	db	32
  2508  00FF40  00                 	db	0
  2509  00FF41                     STR_4:
  2510                           
  2511                           ; BSR set to: 57
  2512  00FF41  20                 	db	32
  2513  00FF42  4E                 	db	78	;'N'
  2514  00FF43  53                 	db	83	;'S'
  2515  00FF44  41                 	db	65	;'A'
  2516  00FF45  53                 	db	83	;'S'
  2517  00FF46  50                 	db	80	;'P'
  2518  00FF47  4F                 	db	79	;'O'
  2519  00FF48  4F                 	db	79	;'O'
  2520  00FF49  4B                 	db	75	;'K'
  2521  00FF4A  20                 	db	32
  2522  00FF4B  20                 	db	32
  2523  00FF4C  20                 	db	32
  2524  00FF4D  20                 	db	32
  2525  00FF4E  20                 	db	32
  2526  00FF4F  20                 	db	32
  2527  00FF50  20                 	db	32
  2528  00FF51  00                 	db	0
  2529  00FF52                     STR_1:
  2530                           
  2531                           ; BSR set to: 57
  2532  00FF52  20                 	db	32
  2533  00FF53  4D                 	db	77	;'M'
  2534  00FF54  42                 	db	66	;'B'
  2535  00FF55  4D                 	db	77	;'M'
  2536  00FF56  43                 	db	67	;'C'
  2537  00FF57  20                 	db	32
  2538  00FF58  53                 	db	83	;'S'
  2539  00FF59  4F                 	db	79	;'O'
  2540  00FF5A  4C                 	db	76	;'L'
  2541  00FF5B  41                 	db	65	;'A'
  2542  00FF5C  52                 	db	82	;'R'
  2543  00FF5D  4D                 	db	77	;'M'
  2544  00FF5E  4F                 	db	79	;'O'
  2545  00FF5F  4E                 	db	78	;'N'
  2546  00FF60  20                 	db	32
  2547  00FF61  20                 	db	32
  2548  00FF62  00                 	db	0
  2549  00FF63                     STR_5:
  2550                           
  2551                           ; BSR set to: 57
  2552  00FF63  20                 	db	32
  2553  00FF64  53                 	db	83	;'S'
  2554  00FF65  45                 	db	69	;'E'
  2555  00FF66  51                 	db	81	;'Q'
  2556  00FF67  55                 	db	85	;'U'
  2557  00FF68  45                 	db	69	;'E'
  2558  00FF69  4E                 	db	78	;'N'
  2559  00FF6A  43                 	db	67	;'C'
  2560  00FF6B  45                 	db	69	;'E'
  2561  00FF6C  20                 	db	32
  2562  00FF6D  54                 	db	84	;'T'
  2563  00FF6E  45                 	db	69	;'E'
  2564  00FF6F  53                 	db	83	;'S'
  2565  00FF70  54                 	db	84	;'T'
  2566  00FF71  20                 	db	32
  2567  00FF72  20                 	db	32
  2568  00FF73  00                 	db	0
  2569  00FF74                     STR_12:
  2570                           
  2571                           ; BSR set to: 57
  2572  00FF74  25                 	db	37
  2573  00FF75  64                 	db	100	;'d'
  2574  00FF76  20                 	db	32
  2575  00FF77  25                 	db	37
  2576  00FF78  32                 	db	50	;'2'
  2577  00FF79  2E                 	db	46
  2578  00FF7A  34                 	db	52	;'4'
  2579  00FF7B  66                 	db	102	;'f'
  2580  00FF7C  2C                 	db	44
  2581  00FF7D  20                 	db	32
  2582  00FF7E  25                 	db	37
  2583  00FF7F  64                 	db	100	;'d'
  2584  00FF80  20                 	db	32
  2585  00FF81  20                 	db	32
  2586  00FF82  20                 	db	32
  2587  00FF83  23                 	db	35
  2588  00FF84  00                 	db	0
  2589  00FF85                     STR_10:
  2590                           
  2591                           ; BSR set to: 57
  2592  00FF85  25                 	db	37
  2593  00FF86  64                 	db	100	;'d'
  2594  00FF87  20                 	db	32
  2595  00FF88  25                 	db	37
  2596  00FF89  32                 	db	50	;'2'
  2597  00FF8A  2E                 	db	46
  2598  00FF8B  34                 	db	52	;'4'
  2599  00FF8C  66                 	db	102	;'f'
  2600  00FF8D  20                 	db	32
  2601  00FF8E  20                 	db	32
  2602  00FF8F  20                 	db	32
  2603  00FF90  25                 	db	37
  2604  00FF91  64                 	db	100	;'d'
  2605  00FF92  20                 	db	32
  2606  00FF93  20                 	db	32
  2607  00FF94  00                 	db	0
  2608  00FF95                     STR_34:
  2609                           
  2610                           ; BSR set to: 57
  2611  00FF95  76                 	db	118	;'v'
  2612  00FF96  74                 	db	116	;'t'
  2613  00FF97  65                 	db	101	;'e'
  2614  00FF98  72                 	db	114	;'r'
  2615  00FF99  6D                 	db	109	;'m'
  2616  00FF9A  20                 	db	32
  2617  00FF9B  25                 	db	37
  2618  00FF9C  78                 	db	120	;'x'
  2619  00FF9D  3A                 	db	58	;':'
  2620  00FF9E  25                 	db	37
  2621  00FF9F  78                 	db	120	;'x'
  2622  00FFA0  20                 	db	32
  2623  00FFA1  20                 	db	32
  2624  00FFA2  20                 	db	32
  2625  00FFA3  00                 	db	0
  2626  00FFA4                     STR_2:
  2627                           
  2628                           ; BSR set to: 57
  2629  00FFA4  20                 	db	32
  2630  00FFA5  56                 	db	86	;'V'
  2631  00FFA6  65                 	db	101	;'e'
  2632  00FFA7  72                 	db	114	;'r'
  2633  00FFA8  73                 	db	115	;'s'
  2634  00FFA9  69                 	db	105	;'i'
  2635  00FFAA  6F                 	db	111	;'o'
  2636  00FFAB  6E                 	db	110	;'n'
  2637  00FFAC  20                 	db	32
  2638  00FFAD  25                 	db	37
  2639  00FFAE  73                 	db	115	;'s'
  2640  00FFAF  20                 	db	32
  2641  00FFB0  20                 	db	32
  2642  00FFB1  20                 	db	32
  2643  00FFB2  00                 	db	0
  2644  00FFB3                     STR_28:
  2645                           
  2646                           ; BSR set to: 57
  2647  00FFB3  44                 	db	68	;'D'
  2648  00FFB4  65                 	db	101	;'e'
  2649  00FFB5  63                 	db	99	;'c'
  2650  00FFB6  20                 	db	32
  2651  00FFB7  31                 	db	49	;'1'
  2652  00FFB8  31                 	db	49	;'1'
  2653  00FFB9  20                 	db	32
  2654  00FFBA  32                 	db	50	;'2'
  2655  00FFBB  30                 	db	48	;'0'
  2656  00FFBC  31                 	db	49	;'1'
  2657  00FFBD  39                 	db	57	;'9'
  2658  00FFBE  00                 	db	0
  2659  00FFBF                     STR_32:
  2660                           
  2661                           ; BSR set to: 57
  2662  00FFBF  25                 	db	37
  2663  00FFC0  73                 	db	115	;'s'
  2664  00FFC1  20                 	db	32
  2665  00FFC2  20                 	db	32
  2666  00FFC3  20                 	db	32
  2667  00FFC4  20                 	db	32
  2668  00FFC5  20                 	db	32
  2669  00FFC6  20                 	db	32
  2670  00FFC7  20                 	db	32
  2671  00FFC8  00                 	db	0
  2672  00FFC9                     STR_29:
  2673                           
  2674                           ; BSR set to: 57
  2675  00FFC9  31                 	db	49	;'1'
  2676  00FFCA  39                 	db	57	;'9'
  2677  00FFCB  3A                 	db	58	;':'
  2678  00FFCC  34                 	db	52	;'4'
  2679  00FFCD  38                 	db	56	;'8'
  2680  00FFCE  3A                 	db	58	;':'
  2681  00FFCF  34                 	db	52	;'4'
  2682  00FFD0  38                 	db	56	;'8'
  2683  00FFD1  00                 	db	0
  2684  00FFD2                     STR_48:
  2685                           
  2686                           ; BSR set to: 57
  2687  00FFD2  49                 	db	73	;'I'
  2688  00FFD3  4E                 	db	78	;'N'
  2689  00FFD4  46                 	db	70	;'F'
  2690  00FFD5  00                 	db	0
  2691  00FFD6                     STR_52:
  2692                           
  2693                           ; BSR set to: 57
  2694  00FFD6  4E                 	db	78	;'N'
  2695  00FFD7  41                 	db	65	;'A'
  2696  00FFD8  4E                 	db	78	;'N'
  2697  00FFD9  00                 	db	0
  2698  00FFDA                     STR_49:
  2699                           
  2700                           ; BSR set to: 57
  2701  00FFDA  69                 	db	105	;'i'
  2702  00FFDB  6E                 	db	110	;'n'
  2703  00FFDC  66                 	db	102	;'f'
  2704  00FFDD  00                 	db	0
  2705  00FFDE                     STR_53:
  2706                           
  2707                           ; BSR set to: 57
  2708  00FFDE  6E                 	db	110	;'n'
  2709  00FFDF  61                 	db	97	;'a'
  2710  00FFE0  6E                 	db	110	;'n'
  2711  00FFE1  00                 	db	0
  2712  00FFE2                     STR_3:
  2713                           
  2714                           ; BSR set to: 57
  2715  00FFE2  31                 	db	49	;'1'
  2716  00FFE3  2E                 	db	46
  2717  00FFE4  30                 	db	48	;'0'
  2718  00FFE5  00                 	db	0
  2719  00FFE6                     STR_79:
  2720                           
  2721                           ; BSR set to: 57
  2722  00FFE6  6C                 	db	108	;'l'
  2723  00FFE7  58                 	db	88	;'X'
  2724  00FFE8  00                 	db	0
  2725  00FFE9                     STR_56:
  2726                           
  2727                           ; BSR set to: 57
  2728  00FFE9  6C                 	db	108	;'l'
  2729  00FFEA  64                 	db	100	;'d'
  2730  00FFEB  00                 	db	0
  2731  00FFEC                     STR_65:
  2732                           
  2733                           ; BSR set to: 57
  2734  00FFEC  6C                 	db	108	;'l'
  2735  00FFED  66                 	db	102	;'f'
  2736  00FFEE  00                 	db	0
  2737  00FFEF                     STR_60:
  2738                           
  2739                           ; BSR set to: 57
  2740  00FFEF  6C                 	db	108	;'l'
  2741  00FFF0  69                 	db	105	;'i'
  2742  00FFF1  00                 	db	0
  2743  00FFF2                     STR_70:
  2744                           
  2745                           ; BSR set to: 57
  2746  00FFF2  6C                 	db	108	;'l'
  2747  00FFF3  75                 	db	117	;'u'
  2748  00FFF4  00                 	db	0
  2749  00FFF5                     STR_75:
  2750                           
  2751                           ; BSR set to: 57
  2752  00FFF5  6C                 	db	108	;'l'
  2753  00FFF6  78                 	db	120	;'x'
  2754  00FFF7  00                 	db	0
  2755  00FFF8                     STR_26:
  2756                           
  2757                           ; BSR set to: 57
  2758  00FFF8  25                 	db	37
  2759  00FFF9  63                 	db	99	;'c'
  2760  00FFFA  00                 	db	0
  2761  00FFFB                     STR_25:
  2762                           
  2763                           ; BSR set to: 57
  2764  00FFFB  25                 	db	37
  2765  00FFFC  73                 	db	115	;'s'
  2766  00FFFD  00                 	db	0
  2767  0000                     
  2768                           ; #config settings
  2769  00FFFE  00                 	db	0	; dummy byte at the end
  2770  0000                     
  2771                           	psect	cinit
  2772  0181CC                     __pcinit:
  2773                           	opt callstack 0
  2774  0181CC                     start_initialization:
  2775                           	opt callstack 0
  2776  0181CC                     __initialization:
  2777                           	opt callstack 0
  2778                           
  2779                           ; Initialize objects allocated to BIGRAM (512 bytes)
  2780                           ; load TBLPTR registers with __pidataBIGRAM
  2781  0181CC  0E88               	movlw	low __pidataBIGRAM
  2782  0181CE  6EF6               	movwf	tblptrl,c
  2783  0181D0  0E71               	movlw	high __pidataBIGRAM
  2784  0181D2  6EF7               	movwf	tblptrh,c
  2785  0181D4  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  2786  0181D6  6EF8               	movwf	tblptru,c
  2787  0181D8  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  2788  0181DC  EE20 F200          	lfsr	2,512
  2789  0181E0                     copy_data0:
  2790  0181E0  0009               	tblrd		*+
  2791  0181E2  006F FFD7 FFEE     	movff	tablat,postinc0
  2792  0181E8  50DD               	movf	postdec2,w,c
  2793  0181EA  50D9               	movf	fsr2l,w,c
  2794  0181EC  E1F9               	bnz	copy_data0
  2795  0181EE  50DA               	movf	fsr2h,w,c
  2796  0181F0  E1F7               	bnz	copy_data0
  2797                           
  2798                           ; Initialize objects allocated to BANK3 (7 bytes)
  2799                           ; load TBLPTR registers with __pidataBANK3
  2800  0181F2  0E8A               	movlw	low __pidataBANK3
  2801  0181F4  6EF6               	movwf	tblptrl,c
  2802  0181F6  0EA9               	movlw	high __pidataBANK3
  2803  0181F8  6EF7               	movwf	tblptrh,c
  2804  0181FA  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  2805  0181FC  6EF8               	movwf	tblptru,c
  2806  0181FE  EE00  F3EC         	lfsr	0,__pdataBANK3
  2807  018202  EE20 F007          	lfsr	2,7
  2808  018206                     copy_data1:
  2809  018206  0009               	tblrd		*+
  2810  018208  006F FFD7 FFEE     	movff	tablat,postinc0
  2811  01820E  50DD               	movf	postdec2,w,c
  2812  018210  50D9               	movf	fsr2l,w,c
  2813  018212  E1F9               	bnz	copy_data1
  2814                           
  2815                           ; Initialize objects allocated to BANK2 (188 bytes)
  2816                           ; load TBLPTR registers with __pidataBANK2
  2817  018214  0EF8               	movlw	low __pidataBANK2
  2818  018216  6EF6               	movwf	tblptrl,c
  2819  018218  0E8D               	movlw	high __pidataBANK2
  2820  01821A  6EF7               	movwf	tblptrh,c
  2821  01821C  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  2822  01821E  6EF8               	movwf	tblptru,c
  2823  018220  EE00  F200         	lfsr	0,__pdataBANK2
  2824  018224  EE20 F0BC          	lfsr	2,188
  2825  018228                     copy_data2:
  2826  018228  0009               	tblrd		*+
  2827  01822A  006F FFD7 FFEE     	movff	tablat,postinc0
  2828  018230  50DD               	movf	postdec2,w,c
  2829  018232  50D9               	movf	fsr2l,w,c
  2830  018234  E1F9               	bnz	copy_data2
  2831                           
  2832                           ; Initialize objects allocated to BANK1 (223 bytes)
  2833                           ; load TBLPTR registers with __pidataBANK1
  2834  018236  0E80               	movlw	low __pidataBANK1
  2835  018238  6EF6               	movwf	tblptrl,c
  2836  01823A  0E8B               	movlw	high __pidataBANK1
  2837  01823C  6EF7               	movwf	tblptrh,c
  2838  01823E  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  2839  018240  6EF8               	movwf	tblptru,c
  2840  018242  EE00  F100         	lfsr	0,__pdataBANK1
  2841  018246  EE20 F0DF          	lfsr	2,223
  2842  01824A                     copy_data3:
  2843  01824A  0009               	tblrd		*+
  2844  01824C  006F FFD7 FFEE     	movff	tablat,postinc0
  2845  018252  50DD               	movf	postdec2,w,c
  2846  018254  50D9               	movf	fsr2l,w,c
  2847  018256  E1F9               	bnz	copy_data3
  2848                           
  2849                           ; Initialize objects allocated to BANK0 (47 bytes)
  2850                           ; load TBLPTR registers with __pidataBANK0
  2851  018258  0E2A               	movlw	low __pidataBANK0
  2852  01825A  6EF6               	movwf	tblptrl,c
  2853  01825C  0EA2               	movlw	high __pidataBANK0
  2854  01825E  6EF7               	movwf	tblptrh,c
  2855  018260  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2856  018262  6EF8               	movwf	tblptru,c
  2857  018264  EE00  F0AA         	lfsr	0,__pdataBANK0
  2858  018268  EE20 F02F          	lfsr	2,47
  2859  01826C                     copy_data4:
  2860  01826C  0009               	tblrd		*+
  2861  01826E  006F FFD7 FFEE     	movff	tablat,postinc0
  2862  018274  50DD               	movf	postdec2,w,c
  2863  018276  50D9               	movf	fsr2l,w,c
  2864  018278  E1F9               	bnz	copy_data4
  2865                           
  2866                           ; Clear objects allocated to BIGRAM (290 bytes)
  2867  01827A  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  2868  01827E  EE20 F122          	lfsr	2,290
  2869  018282                     clear_0:
  2870  018282  6AEE               	clrf	postinc0,c
  2871  018284  50DD               	movf	postdec2,w,c
  2872  018286  50D9               	movf	fsr2l,w,c
  2873  018288  E1FC               	bnz	clear_0
  2874  01828A  50DA               	movf	fsr2h,w,c
  2875  01828C  E1FA               	bnz	clear_0
  2876                           
  2877                           ; Clear objects allocated to BANK5 (255 bytes)
  2878  01828E  EE01  F100         	lfsr	0,__pbssBANK5
  2879  018292  EE20 F0FF          	lfsr	2,255
  2880  018296                     clear_1:
  2881  018296  6AEE               	clrf	postinc0,c
  2882  018298  50DD               	movf	postdec2,w,c
  2883  01829A  50D9               	movf	fsr2l,w,c
  2884  01829C  E1FC               	bnz	clear_1
  2885  01829E  50DA               	movf	fsr2h,w,c
  2886  0182A0  E1FA               	bnz	clear_1
  2887                           
  2888                           ; Clear objects allocated to BANK4 (134 bytes)
  2889  0182A2  EE01  F000         	lfsr	0,__pbssBANK4
  2890  0182A6  0E86               	movlw	134
  2891  0182A8                     clear_2:
  2892  0182A8  6AEE               	clrf	postinc0,c
  2893  0182AA  06E8               	decf	wreg,f,c
  2894  0182AC  E1FD               	bnz	clear_2
  2895                           
  2896                           ; Clear objects allocated to BANK3 (236 bytes)
  2897  0182AE  EE00  F300         	lfsr	0,__pbssBANK3
  2898  0182B2  0EEC               	movlw	236
  2899  0182B4                     clear_3:
  2900  0182B4  6AEE               	clrf	postinc0,c
  2901  0182B6  06E8               	decf	wreg,f,c
  2902  0182B8  E1FD               	bnz	clear_3
  2903                           
  2904                           ; Clear objects allocated to BANK2 (41 bytes)
  2905  0182BA  EE00  F2BC         	lfsr	0,__pbssBANK2
  2906  0182BE  0E29               	movlw	41
  2907  0182C0                     clear_4:
  2908  0182C0  6AEE               	clrf	postinc0,c
  2909  0182C2  06E8               	decf	wreg,f,c
  2910  0182C4  E1FD               	bnz	clear_4
  2911                           
  2912                           ; Clear objects allocated to BANK1 (32 bytes)
  2913  0182C6  EE00  F1DF         	lfsr	0,__pbssBANK1
  2914  0182CA  0E20               	movlw	32
  2915  0182CC                     clear_5:
  2916  0182CC  6AEE               	clrf	postinc0,c
  2917  0182CE  06E8               	decf	wreg,f,c
  2918  0182D0  E1FD               	bnz	clear_5
  2919                           
  2920                           ; Clear objects allocated to BANK0 (74 bytes)
  2921  0182D2  EE00  F060         	lfsr	0,__pbssBANK0
  2922  0182D6  0E4A               	movlw	74
  2923  0182D8                     clear_6:
  2924  0182D8  6AEE               	clrf	postinc0,c
  2925  0182DA  06E8               	decf	wreg,f,c
  2926  0182DC  E1FD               	bnz	clear_6
  2927                           
  2928                           ; Clear objects allocated to COMRAM (23 bytes)
  2929  0182DE  EE00  F021         	lfsr	0,__pbssCOMRAM
  2930  0182E2  0E17               	movlw	23
  2931  0182E4                     clear_7:
  2932  0182E4  6AEE               	clrf	postinc0,c
  2933  0182E6  06E8               	decf	wreg,f,c
  2934  0182E8  E1FD               	bnz	clear_7
  2935                           
  2936                           ;
  2937                           ; Setup IVTBASE
  2938                           ;
  2939  0182EA  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2940  0182EC  6ED5               	movwf	213,c
  2941  0182EE  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2942  0182F0  6ED6               	movwf	214,c
  2943  0182F2  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2944  0182F4  6ED7               	movwf	215,c
  2945  0182F6                     end_of_initialization:
  2946                           	opt callstack 0
  2947  0182F6                     __end_of__initialization:
  2948                           	opt callstack 0
  2949  0182F6  0100               	movlb	0
  2950  0182F8  EFF8  F090         	goto	_main	;jump to C main() function
  2951                           
  2952                           	psect	bssCOMRAM
  2953  000021                     __pbssCOMRAM:
  2954                           	opt callstack 0
  2955  000021                     _width:
  2956                           	opt callstack 0
  2957  000021                     	ds	2
  2958  000023                     _prec:
  2959                           	opt callstack 0
  2960  000023                     	ds	2
  2961  000025                     _flags:
  2962                           	opt callstack 0
  2963  000025                     	ds	2
  2964  000027                     _timer3ReloadVal:
  2965                           	opt callstack 0
  2966  000027                     	ds	2
  2967  000029                     TMR5_ISR@CountCallBack:
  2968                           	opt callstack 0
  2969  000029                     	ds	2
  2970  00002B                     _timer5ReloadVal:
  2971                           	opt callstack 0
  2972  00002B                     	ds	2
  2973  00002D                     Volts_to_SOC@slot:
  2974                           	opt callstack 0
  2975  00002D                     	ds	1
  2976  00002E                     _mode_sw:
  2977                           	opt callstack 0
  2978  00002E                     	ds	1
  2979  00002F                     _uart2RxCount:
  2980                           	opt callstack 0
  2981  00002F                     	ds	1
  2982  000030                     _uart2RxTail:
  2983                           	opt callstack 0
  2984  000030                     	ds	1
  2985  000031                     _uart2RxHead:
  2986                           	opt callstack 0
  2987  000031                     	ds	1
  2988  000032                     _uart2TxBufferRemaining:
  2989                           	opt callstack 0
  2990  000032                     	ds	1
  2991  000033                     _uart2TxTail:
  2992                           	opt callstack 0
  2993  000033                     	ds	1
  2994  000034                     _uart2TxHead:
  2995                           	opt callstack 0
  2996  000034                     	ds	1
  2997  000035                     _uart1RxCount:
  2998                           	opt callstack 0
  2999  000035                     	ds	1
  3000  000036                     _uart1RxTail:
  3001                           	opt callstack 0
  3002  000036                     	ds	1
  3003  000037                     _uart1RxHead:
  3004                           	opt callstack 0
  3005  000037                     	ds	1
  3006                           
  3007                           	psect	bssBANK0
  3008  000060                     __pbssBANK0:
  3009                           	opt callstack 0
  3010  000060                     _spi_link:
  3011                           	opt callstack 0
  3012  000060                     	ds	12
  3013  00006C                     floorf@F524:
  3014                           	opt callstack 0
  3015  00006C                     	ds	4
  3016  000070                     ___fpclassifyf@F463:
  3017                           	opt callstack 0
  3018  000070                     	ds	4
  3019  000074                     calc_model_data@bcror:
  3020                           	opt callstack 0
  3021  000074                     	ds	4
  3022  000078                     calc_model_data@bvror:
  3023                           	opt callstack 0
  3024  000078                     	ds	4
  3025  00007C                     _utctime:
  3026                           	opt callstack 0
  3027  00007C                     	ds	4
  3028  000080                     wdtdelay@dcount:
  3029                           	opt callstack 0
  3030  000080                     	ds	4
  3031  000084                     _P:
  3032                           	opt callstack 0
  3033  000084                     	ds	4
  3034  000088                     _TMR3_InterruptHandler:
  3035                           	opt callstack 0
  3036  000088                     	ds	3
  3037  00008B                     _TMR5_InterruptHandler:
  3038                           	opt callstack 0
  3039  00008B                     	ds	3
  3040  00008E                     _TMR6_InterruptHandler:
  3041                           	opt callstack 0
  3042  00008E                     	ds	3
  3043  000091                     _ADCC_ADTI_InterruptHandler:
  3044                           	opt callstack 0
  3045  000091                     	ds	3
  3046  000094                     _ADCC_ADI_InterruptHandler:
  3047                           	opt callstack 0
  3048  000094                     	ds	3
  3049  000097                     _UART1_RxInterruptHandler:
  3050                           	opt callstack 0
  3051  000097                     	ds	3
  3052  00009A                     _UART2_TxInterruptHandler:
  3053                           	opt callstack 0
  3054  00009A                     	ds	3
  3055  00009D                     _UART2_RxInterruptHandler:
  3056                           	opt callstack 0
  3057  00009D                     	ds	3
  3058  0000A0                     _INT1_InterruptHandler:
  3059                           	opt callstack 0
  3060  0000A0                     	ds	3
  3061  0000A3                     _INT0_InterruptHandler:
  3062                           	opt callstack 0
  3063  0000A3                     	ds	3
  3064  0000A6                     _nout:
  3065                           	opt callstack 0
  3066  0000A6                     	ds	2
  3067  0000A8                     TMR3_ISR@CountCallBack:
  3068                           	opt callstack 0
  3069  0000A8                     	ds	2
  3070                           
  3071                           	psect	dataBANK0
  3072  0000AA                     __pdataBANK0:
  3073                           	opt callstack 0
  3074  0000AA                     _R:
  3075                           	opt callstack 0
  3076  0000AA                     	ds	40
  3077  0000D2                     _H:
  3078                           	opt callstack 0
  3079  0000D2                     	ds	7
  3080                           
  3081                           	psect	bssBANK1
  3082  0001DF                     __pbssBANK1:
  3083                           	opt callstack 0
  3084  0001DF                     _tickCount:
  3085                           	opt callstack 0
  3086  0001DF                     	ds	24
  3087  0001F7                     _uart1RxBuffer:
  3088                           	opt callstack 0
  3089  0001F7                     	ds	8
  3090                           
  3091                           	psect	dataBANK1
  3092  000100                     __pdataBANK1:
  3093                           	opt callstack 0
  3094  000100                     _C:
  3095                           	opt callstack 0
  3096  000100                     	ds	223
  3097                           
  3098                           	psect	bssBANK2
  3099  0002BC                     __pbssBANK2:
  3100                           	opt callstack 0
  3101  0002BC                     _S:
  3102                           	opt callstack 0
  3103  0002BC                     	ds	41
  3104                           
  3105                           	psect	dataBANK2
  3106  000200                     __pdataBANK2:
  3107                           	opt callstack 0
  3108  000200                     _V:
  3109                           	opt callstack 0
  3110  000200                     	ds	188
  3111                           
  3112                           	psect	bssBANK3
  3113  000300                     __pbssBANK3:
  3114                           	opt callstack 0
  3115  000300                     lp_filter@smooth:
  3116                           	opt callstack 0
  3117  000300                     	ds	84
  3118  000354                     _uart2TxBuffer:
  3119                           	opt callstack 0
  3120  000354                     	ds	64
  3121  000394                     _dbuf:
  3122                           	opt callstack 0
  3123  000394                     	ds	80
  3124  0003E4                     _seed:
  3125                           	opt callstack 0
  3126  0003E4                     	ds	8
  3127                           
  3128                           	psect	dataBANK3
  3129  0003EC                     __pdataBANK3:
  3130                           	opt callstack 0
  3131  0003EC                     stoa@F1166:
  3132                           	opt callstack 0
  3133  0003EC                     	ds	7
  3134                           
  3135                           	psect	bssBANK4
  3136  000400                     __pbssBANK4:
  3137                           	opt callstack 0
  3138  000400                     _ring_buf2:
  3139                           	opt callstack 0
  3140  000400                     	ds	67
  3141  000443                     _ring_buf1:
  3142                           	opt callstack 0
  3143  000443                     	ds	67
  3144                           
  3145                           	psect	bssBANK5
  3146  000500                     __pbssBANK5:
  3147                           	opt callstack 0
  3148  000500                     _uart2RxBuffer:
  3149                           	opt callstack 0
  3150  000500                     	ds	255
  3151                           
  3152                           	psect	bssBIGRAM
  3153  0007FF                     __pbssBIGRAM:
  3154                           	opt callstack 0
  3155  0007FF                     _D:
  3156                           	opt callstack 0
  3157  0007FF                     	ds	290
  3158                           
  3159                           	psect	dataBIGRAM
  3160  0005FF                     __pdataBIGRAM:
  3161                           	opt callstack 0
  3162  0005FF                     _port_data:
  3163                           	opt callstack 0
  3164  0005FF                     	ds	512
  3165                           
  3166                           	psect	cstackBANK0
  3167  0000D9                     __pcstackBANK0:
  3168                           	opt callstack 0
  3169  0000D9                     ??_TMR3_ISR:
  3170                           
  3171                           ; 1 bytes @ 0x0
  3172  0000D9                     	ds	25
  3173                           
  3174                           	psect	cstackCOMRAM
  3175  000038                     __pcstackCOMRAM:
  3176                           	opt callstack 0
  3177  000038                     ??_ADCC_ThresholdISR:
  3178  000038                     
  3179                           ; 1 bytes @ 0x0
  3180  000038                     	ds	5
  3181  00003D                     ??_TMR6_ISR:
  3182                           
  3183                           ; 1 bytes @ 0x5
  3184  00003D                     	ds	1
  3185  00003E                     ??_INT1_ISR:
  3186  00003E                     
  3187                           ; 1 bytes @ 0x6
  3188  00003E                     	ds	4
  3189  000042                     ??_TMR5_ISR:
  3190                           
  3191                           ; 1 bytes @ 0xA
  3192  000042                     	ds	4
  3193                           
  3194 ;;
  3195 ;;Main: autosize = 6, tempsize = 0, incstack = 0, save=0
  3196 ;;
  3197 ;; *************** function _main *****************
  3198 ;; Defined at:
  3199 ;;		line 174 in file "main.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;		None
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;  k               1  [STACK] unsigned char 
  3204 ;;  j               1  [STACK] unsigned char 
  3205 ;;  i               1  [STACK] unsigned char 
  3206 ;;  inp_index       1  [STACK] unsigned char 
  3207 ;;  mode            1  [STACK] enum E17013
  3208 ;;  i_ror           1  [STACK] unsigned char 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1  [STACK] void 
  3211 ;; Registers used:
  3212 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3222 ;;Total ram usage:        0 bytes
  3223 ;; Hardware stack levels required when called:   28
  3224 ;; This function calls:
  3225 ;;		_SYSTEM_Initialize
  3226 ;;		_StartTimer
  3227 ;;		_TimerDone
  3228 ;;		_WaitMs
  3229 ;;		_calc_model_data
  3230 ;;		_check_adc_scan
  3231 ;;		_check_enter_button
  3232 ;;		_check_help
  3233 ;;		_clear_adc_scan
  3234 ;;		_clear_hid_pflags
  3235 ;;		_convert_adc_data
  3236 ;;		_eaDogM_WriteCommand
  3237 ;;		_get_raw_result
  3238 ;;		_get_switch
  3239 ;;		_get_vterm_ptr
  3240 ;;		_hid_display
  3241 ;;		_init_bsoc
  3242 ;;		_init_display
  3243 ;;		_init_port_dma
  3244 ;;		_lp_filter
  3245 ;;		_mode_lamp_dim
  3246 ;;		_set_display_info
  3247 ;;		_set_load_relay_one
  3248 ;;		_set_load_relay_two
  3249 ;;		_set_vterm
  3250 ;;		_sprintf
  3251 ;;		_srand
  3252 ;;		_start_adc_scan
  3253 ;;		_start_switch_handler
  3254 ;;		_static_soc
  3255 ;;		_update_lcd
  3256 ;; This function is called by:
  3257 ;;		Startup code after reset
  3258 ;; This function uses a reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text0
  3262  0121F0                     __ptext0:
  3263                           	opt callstack 0
  3264  0121F0                     _main:
  3265                           	opt callstack 0
  3266                           
  3267                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3268  0121F0  0E06               	movlw	6
  3269  0121F2  26E1               	addwf	fsr1l,f,c
  3270  0121F4  0E00               	movlw	0
  3271  0121F6  22E2               	addwfc	fsr1h,f,c
  3272                           
  3273                           ;main.c: 176:  UI_STATES mode;;main.c: 177:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3274                           ;stkvar	_inp_index @ sp[(-6)+3]
  3275                           
  3276                           ;incstack = 0
  3277  0121F8  0EFD               	movlw	-3
  3278  0121FA  6AE3               	clrf	plusw1,c
  3279                           
  3280                           ;stkvar	_i @ sp[(-6)+2]
  3281  0121FC  0EFC               	movlw	-4
  3282  0121FE  6AE3               	clrf	plusw1,c
  3283                           
  3284                           ;stkvar	_j @ sp[(-6)+1]
  3285  012200  0EFB               	movlw	-5
  3286  012202  6AE3               	clrf	plusw1,c
  3287  012204  2AE3               	incf	plusw1,f,c
  3288                           
  3289                           ;stkvar	_k @ sp[(-6)+0]
  3290  012206  0EFA               	movlw	-6
  3291  012208  6AE3               	clrf	plusw1,c
  3292  01220A  82E3               	bsf	plusw1,1,c
  3293                           
  3294                           ;main.c: 180:  SYSTEM_Initialize();
  3295  01220C  EC3B  F0CE         	call	_SYSTEM_Initialize	;wreg free
  3296                           
  3297                           ; BSR set to: 60
  3298                           ;main.c: 183:  (INTCON0bits.GIEH = 1);
  3299  012210  8ED2               	bsf	210,7,c	;volatile
  3300                           
  3301                           ; BSR set to: 60
  3302                           ;main.c: 186:  (INTCON0bits.GIEL = 1);
  3303  012212  8CD2               	bsf	210,6,c	;volatile
  3304                           
  3305                           ; BSR set to: 60
  3306                           ;main.c: 188:  V.ui_state = UI_STATE_INIT;
  3307  012214  0102               	movlb	2	; () banked
  3308  012216  6B00               	clrf	_V& (0+255),b	;volatile
  3309                           
  3310                           ; BSR set to: 2
  3311                           ;main.c: 193:  WaitMs(300);
  3312  012218  0E2C               	movlw	44
  3313  01221A  6EE6               	movwf	postinc1,c
  3314  01221C  0E01               	movlw	1
  3315  01221E  6EE6               	movwf	postinc1,c
  3316  012220  EC31  F0D0         	call	_WaitMs	;wreg free
  3317                           
  3318                           ;main.c: 194:  if (PORTBbits.RB0) {
  3319  012224  A0CB               	btfss	203,0,c	;volatile
  3320  012226  D004               	goto	l12218
  3321                           
  3322                           ;main.c: 195:   mode = UI_STATE_HOST;
  3323                           ;stkvar	_mode @ sp[(-6)+4]
  3324  012228  0EFE               	movlw	-2
  3325  01222A  6AE3               	clrf	plusw1,c
  3326  01222C  2AE3               	incf	plusw1,f,c
  3327                           
  3328                           ;main.c: 196:  } else {
  3329  01222E  D004               	goto	l12220
  3330  012230                     l12218:
  3331                           
  3332                           ;main.c: 197:   mode = UI_STATE_LOG;
  3333                           ;stkvar	_mode @ sp[(-6)+4]
  3334  012230  0EFE               	movlw	-2
  3335  012232  6AE3               	clrf	plusw1,c
  3336  012234  80E3               	bsf	plusw1,0,c
  3337  012236  82E3               	bsf	plusw1,1,c	;indir
  3338  012238                     l12220:
  3339                           
  3340                           ;main.c: 200:  if (mode == UI_STATE_HOST) {
  3341                           ;stkvar	_mode @ sp[(-6)+4]
  3342  012238  0EFE               	movlw	-2
  3343  01223A  04E3               	decf	plusw1,w,c
  3344  01223C  A4D8               	btfss	status,2,c
  3345  01223E  D007               	goto	l1312
  3346                           
  3347                           ;main.c: 201:   do { LATDbits.LATD0 = 1; } while(0);
  3348  012240  80BD               	bsf	189,0,c	;volatile
  3349                           
  3350                           ;main.c: 202:   V.mode_pwm = 70;
  3351  012242  0E00               	movlw	0
  3352  012244  0102               	movlb	2	; () banked
  3353  012246  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3354  012248  0E46               	movlw	70
  3355  01224A  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3356                           
  3357                           ;main.c: 203:  } else {
  3358  01224C  D004               	goto	l12224
  3359  01224E                     l1312:
  3360  01224E  90BD               	bcf	189,0,c	;volatile
  3361                           
  3362                           ;main.c: 205:   V.mode_pwm = 0;
  3363  012250  0102               	movlb	2	; () banked
  3364  012252  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3365  012254  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3366  012256                     l12224:
  3367                           
  3368                           ; BSR set to: 2
  3369                           ;main.c: 207:  mode_lamp_dim(V.mode_pwm);
  3370  012256  0060  FA57  FFE6   	movff	_V+149,postinc1
  3371  01225C  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3372  012262  EC13  F0D4         	call	_mode_lamp_dim	;wreg free
  3373  012266  D136               	goto	l12298
  3374  012268                     l12226:
  3375                           
  3376                           ; BSR set to: 2
  3377                           ;main.c: 215:    init_port_dma();
  3378  012268  ECB5  F0D0         	call	_init_port_dma	;wreg free
  3379                           
  3380                           ; BSR set to: 59
  3381                           ;main.c: 217:    init_display();
  3382  01226C  EC4B  F0C5         	call	_init_display	;wreg free
  3383                           
  3384                           ; BSR set to: 61
  3385                           ;main.c: 218:    eaDogM_WriteCommand(0b00001100);
  3386  012270  0E0C               	movlw	12
  3387  012272  6EE6               	movwf	postinc1,c
  3388  012274  EC77  F0D4         	call	_eaDogM_WriteCommand	;wreg free
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;main.c: 219:    set_load_relay_one(1);
  3392  012278  0E01               	movlw	1
  3393  01227A  6EE6               	movwf	postinc1,c
  3394  01227C  EC67  F0D4         	call	_set_load_relay_one	;wreg free
  3395                           
  3396                           ;main.c: 220:    set_load_relay_two(1);
  3397  012280  0E01               	movlw	1
  3398  012282  6EE6               	movwf	postinc1,c
  3399  012284  EC5F  F0D4         	call	_set_load_relay_two	;wreg free
  3400                           
  3401                           ;main.c: 222:    V.ui_state = mode;
  3402                           ;stkvar	_mode @ sp[(-6)+4]
  3403  012288  0EFE               	movlw	-2
  3404  01228A  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3405                           
  3406                           ;main.c: 223:    srand(1957);
  3407  012290  0EA5               	movlw	165
  3408  012292  6EE6               	movwf	postinc1,c
  3409  012294  0E07               	movlw	7
  3410  012296  6EE6               	movwf	postinc1,c
  3411  012298  EC67  F0D0         	call	_srand	;wreg free
  3412                           
  3413                           ; BSR set to: 3
  3414                           ;main.c: 224:    set_vterm(0);
  3415  01229C  0E00               	movlw	0
  3416  01229E  6EE6               	movwf	postinc1,c
  3417  0122A0  ECBD  F0D3         	call	_set_vterm	;wreg free
  3418                           
  3419                           ;main.c: 225:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3420  0122A4  0E52               	movlw	low STR_1
  3421  0122A6  6EE6               	movwf	postinc1,c
  3422  0122A8  0EFF               	movlw	high STR_1
  3423  0122AA  6EE6               	movwf	postinc1,c
  3424  0122AC  0E00               	movlw	0
  3425  0122AE  6EE6               	movwf	postinc1,c
  3426  0122B0  0E00               	movlw	0
  3427  0122B2  6EE6               	movwf	postinc1,c
  3428  0122B4  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  3429  0122B8  0060  F007  FFE6   	movff	btemp,postinc1
  3430  0122BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3431  0122C4  0E04               	movlw	4
  3432  0122C6  6EE6               	movwf	postinc1,c
  3433  0122C8  EC45  F0C4         	call	_sprintf	;wreg free
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;main.c: 226:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.0");
  3437  0122CC  0EE2               	movlw	low STR_3
  3438  0122CE  6EE6               	movwf	postinc1,c
  3439  0122D0  0EFF               	movlw	high STR_3
  3440  0122D2  6EE6               	movwf	postinc1,c
  3441  0122D4  0EA4               	movlw	low STR_2
  3442  0122D6  6EE6               	movwf	postinc1,c
  3443  0122D8  0EFF               	movlw	high STR_2
  3444  0122DA  6EE6               	movwf	postinc1,c
  3445  0122DC  0E00               	movlw	0
  3446  0122DE  6EE6               	movwf	postinc1,c
  3447  0122E0  0E01               	movlw	1
  3448  0122E2  6EE6               	movwf	postinc1,c
  3449  0122E4  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  3450  0122E8  0060  F007  FFE6   	movff	btemp,postinc1
  3451  0122EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3452  0122F4  0E06               	movlw	6
  3453  0122F6  6EE6               	movwf	postinc1,c
  3454  0122F8  EC45  F0C4         	call	_sprintf	;wreg free
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;main.c: 227:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  3458  0122FC  0E41               	movlw	low STR_4
  3459  0122FE  6EE6               	movwf	postinc1,c
  3460  012300  0EFF               	movlw	high STR_4
  3461  012302  6EE6               	movwf	postinc1,c
  3462  012304  0E00               	movlw	0
  3463  012306  6EE6               	movwf	postinc1,c
  3464  012308  0E02               	movlw	2
  3465  01230A  6EE6               	movwf	postinc1,c
  3466  01230C  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  3467  012310  0060  F007  FFE6   	movff	btemp,postinc1
  3468  012316  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3469  01231C  0E04               	movlw	4
  3470  01231E  6EE6               	movwf	postinc1,c
  3471  012320  EC45  F0C4         	call	_sprintf	;wreg free
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;main.c: 228:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  3475  012324  0E63               	movlw	low STR_5
  3476  012326  6EE6               	movwf	postinc1,c
  3477  012328  0EFF               	movlw	high STR_5
  3478  01232A  6EE6               	movwf	postinc1,c
  3479  01232C  0E02               	movlw	2
  3480  01232E  6EE6               	movwf	postinc1,c
  3481  012330  0E00               	movlw	0
  3482  012332  6EE6               	movwf	postinc1,c
  3483  012334  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  3484  012338  0060  F007  FFE6   	movff	btemp,postinc1
  3485  01233E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3486  012344  0E04               	movlw	4
  3487  012346  6EE6               	movwf	postinc1,c
  3488  012348  EC45  F0C4         	call	_sprintf	;wreg free
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;main.c: 229:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "1.0");
  3492  01234C  0EE2               	movlw	low STR_3
  3493  01234E  6EE6               	movwf	postinc1,c
  3494  012350  0EFF               	movlw	high STR_3
  3495  012352  6EE6               	movwf	postinc1,c
  3496  012354  0EA4               	movlw	low STR_2
  3497  012356  6EE6               	movwf	postinc1,c
  3498  012358  0EFF               	movlw	high STR_2
  3499  01235A  6EE6               	movwf	postinc1,c
  3500  01235C  0E02               	movlw	2
  3501  01235E  6EE6               	movwf	postinc1,c
  3502  012360  0E01               	movlw	1
  3503  012362  6EE6               	movwf	postinc1,c
  3504  012364  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  3505  012368  0060  F007  FFE6   	movff	btemp,postinc1
  3506  01236E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3507  012374  0E06               	movlw	6
  3508  012376  6EE6               	movwf	postinc1,c
  3509  012378  EC45  F0C4         	call	_sprintf	;wreg free
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;main.c: 230:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  3513  01237C  0E30               	movlw	low STR_8
  3514  01237E  6EE6               	movwf	postinc1,c
  3515  012380  0EFF               	movlw	high STR_8
  3516  012382  6EE6               	movwf	postinc1,c
  3517  012384  0E02               	movlw	2
  3518  012386  6EE6               	movwf	postinc1,c
  3519  012388  0E02               	movlw	2
  3520  01238A  6EE6               	movwf	postinc1,c
  3521  01238C  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  3522  012390  0060  F007  FFE6   	movff	btemp,postinc1
  3523  012396  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3524  01239C  0E04               	movlw	4
  3525  01239E  6EE6               	movwf	postinc1,c
  3526  0123A0  EC45  F0C4         	call	_sprintf	;wreg free
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;main.c: 231:    update_lcd(0);
  3530  0123A4  0E00               	movlw	0
  3531  0123A6  6EE6               	movwf	postinc1,c
  3532  0123A8  ECBD  F0C3         	call	_update_lcd	;wreg free
  3533                           
  3534                           ;main.c: 232:    WaitMs(1000);
  3535  0123AC  0EE8               	movlw	232
  3536  0123AE  6EE6               	movwf	postinc1,c
  3537  0123B0  0E03               	movlw	3
  3538  0123B2  6EE6               	movwf	postinc1,c
  3539  0123B4  EC31  F0D0         	call	_WaitMs	;wreg free
  3540                           
  3541                           ;main.c: 233:    StartTimer(TMR_DISPLAY, 250);
  3542  0123B8  0EFA               	movlw	250
  3543  0123BA  6EE6               	movwf	postinc1,c
  3544  0123BC  0E00               	movlw	0
  3545  0123BE  6EE6               	movwf	postinc1,c
  3546  0123C0  0E0A               	movlw	10
  3547  0123C2  6EE6               	movwf	postinc1,c
  3548  0123C4  EC76  F0CF         	call	_StartTimer	;wreg free
  3549                           
  3550                           ;main.c: 234:    StartTimer(TMR_ADC, 200);
  3551  0123C8  0EC8               	movlw	200
  3552  0123CA  6EE6               	movwf	postinc1,c
  3553  0123CC  0E00               	movlw	0
  3554  0123CE  6EE6               	movwf	postinc1,c
  3555  0123D0  0E01               	movlw	1
  3556  0123D2  6EE6               	movwf	postinc1,c
  3557  0123D4  EC76  F0CF         	call	_StartTimer	;wreg free
  3558                           
  3559                           ;main.c: 235:    StartTimer(TMR_INFO, 3000);
  3560  0123D8  0EB8               	movlw	184
  3561  0123DA  6EE6               	movwf	postinc1,c
  3562  0123DC  0E0B               	movlw	11
  3563  0123DE  6EE6               	movwf	postinc1,c
  3564  0123E0  0E07               	movlw	7
  3565  0123E2  6EE6               	movwf	postinc1,c
  3566  0123E4  EC76  F0CF         	call	_StartTimer	;wreg free
  3567                           
  3568                           ;main.c: 236:    StartTimer(TMR_FLIPPER, 1500);
  3569  0123E8  0EDC               	movlw	220
  3570  0123EA  6EE6               	movwf	postinc1,c
  3571  0123EC  0E05               	movlw	5
  3572  0123EE  6EE6               	movwf	postinc1,c
  3573  0123F0  0E0B               	movlw	11
  3574  0123F2  6EE6               	movwf	postinc1,c
  3575  0123F4  EC76  F0CF         	call	_StartTimer	;wreg free
  3576                           
  3577                           ;main.c: 237:    StartTimer(TMR_HELPDIS, 3000);
  3578  0123F8  0EB8               	movlw	184
  3579  0123FA  6EE6               	movwf	postinc1,c
  3580  0123FC  0E0B               	movlw	11
  3581  0123FE  6EE6               	movwf	postinc1,c
  3582  012400  0E09               	movlw	9
  3583  012402  6EE6               	movwf	postinc1,c
  3584  012404  EC76  F0CF         	call	_StartTimer	;wreg free
  3585                           
  3586                           ;main.c: 239:    start_adc_scan();
  3587  012408  EC4E  F0CC         	call	_start_adc_scan	;wreg free
  3588                           
  3589                           ;main.c: 240:    start_switch_handler();
  3590  01240C  EC7F  F0D3         	call	_start_switch_handler	;wreg free
  3591                           
  3592                           ; BSR set to: 57
  3593                           ;main.c: 241:    WaitMs(1000);
  3594  012410  0EE8               	movlw	232
  3595  012412  6EE6               	movwf	postinc1,c
  3596  012414  0E03               	movlw	3
  3597  012416  6EE6               	movwf	postinc1,c
  3598  012418  EC31  F0D0         	call	_WaitMs	;wreg free
  3599                           
  3600                           ;main.c: 242:    i_ror = 1;
  3601                           ;stkvar	_i_ror @ sp[(-6)+5]
  3602  01241C  0EFF               	movlw	-1
  3603  01241E  6AE3               	clrf	plusw1,c
  3604  012420  2AE3               	incf	plusw1,f,c
  3605  012422                     l12276:
  3606                           
  3607                           ;main.c: 244:     sprintf(get_vterm_ptr(2, 0), "STATIC SOC %d %2.4f   ", i_ror, C.bv_ror
      +                          );
  3608  012422  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3609  012428  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3610  01242E  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3611  012434  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3612                           
  3613                           ;stkvar	_i_ror @ sp[(-10)+5]
  3614  01243A  0EFB               	movlw	-5
  3615  01243C  50E3               	movf	plusw1,w,c
  3616  01243E  6EE6               	movwf	postinc1,c
  3617  012440  0E00               	movlw	0
  3618  012442  6EE6               	movwf	postinc1,c
  3619  012444  0E34               	movlw	low STR_9
  3620  012446  6EE6               	movwf	postinc1,c
  3621  012448  0EFE               	movlw	high STR_9
  3622  01244A  6EE6               	movwf	postinc1,c
  3623  01244C  0E00               	movlw	0
  3624  01244E  6EE6               	movwf	postinc1,c
  3625  012450  0E02               	movlw	2
  3626  012452  6EE6               	movwf	postinc1,c
  3627  012454  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  3628  012458  0060  F007  FFE6   	movff	btemp,postinc1
  3629  01245E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3630  012464  0E0A               	movlw	10
  3631  012466  6EE6               	movwf	postinc1,c
  3632  012468  EC45  F0C4         	call	_sprintf	;wreg free
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;main.c: 245:     update_lcd(0);
  3636  01246C  0E00               	movlw	0
  3637  01246E  6EE6               	movwf	postinc1,c
  3638  012470  ECBD  F0C3         	call	_update_lcd	;wreg free
  3639                           
  3640                           ;main.c: 246:     WaitMs(1000);
  3641  012474  0EE8               	movlw	232
  3642  012476  6EE6               	movwf	postinc1,c
  3643  012478  0E03               	movlw	3
  3644  01247A  6EE6               	movwf	postinc1,c
  3645  01247C  EC31  F0D0         	call	_WaitMs	;wreg free
  3646                           
  3647                           ;main.c: 247:    } while (i_ror++ < 8);
  3648                           ;stkvar	_i_ror @ sp[(-6)+5]
  3649  012480  0EFF               	movlw	-1
  3650  012482  006F FF8C  F00C    	movff	plusw1,btemp+11
  3651  012488  2A0C               	incf	(btemp+11)^0,f,c
  3652  01248A  0060  F033  FFE3   	movff	btemp+11,plusw1
  3653  012490  060C               	decf	(btemp+11)^0,f,c
  3654  012492  0E07               	movlw	7
  3655  012494  640C               	cpfsgt	(btemp+11)^0,c
  3656  012496  D7C5               	goto	l12276
  3657                           
  3658                           ;main.c: 249:    WaitMs(2000);
  3659  012498  0ED0               	movlw	208
  3660  01249A  6EE6               	movwf	postinc1,c
  3661  01249C  0E07               	movlw	7
  3662  01249E  6EE6               	movwf	postinc1,c
  3663  0124A0  EC31  F0D0         	call	_WaitMs	;wreg free
  3664                           
  3665                           ;main.c: 250:    static_soc();
  3666  0124A4  ECF0  F0D2         	call	_static_soc	;wreg free
  3667                           
  3668                           ; BSR set to: 1
  3669                           ;main.c: 251:    init_bsoc();
  3670  0124A8  ECE6  F0BC         	call	_init_bsoc	;wreg free
  3671                           
  3672                           ;main.c: 252:    WaitMs(1000);
  3673  0124AC  0EE8               	movlw	232
  3674  0124AE  6EE6               	movwf	postinc1,c
  3675  0124B0  0E03               	movlw	3
  3676  0124B2  6EE6               	movwf	postinc1,c
  3677  0124B4  EC31  F0D0         	call	_WaitMs	;wreg free
  3678                           
  3679                           ;main.c: 253:    set_load_relay_one(0);
  3680  0124B8  0E00               	movlw	0
  3681  0124BA  6EE6               	movwf	postinc1,c
  3682  0124BC  EC67  F0D4         	call	_set_load_relay_one	;wreg free
  3683                           
  3684                           ;main.c: 254:    set_load_relay_two(0);
  3685  0124C0  0E00               	movlw	0
  3686  0124C2  6EE6               	movwf	postinc1,c
  3687  0124C4  EC5F  F0D4         	call	_set_load_relay_two	;wreg free
  3688                           
  3689                           ;main.c: 256:    break;
  3690  0124C8  D01C               	goto	l12300
  3691  0124CA                     l1322:
  3692                           
  3693                           ; BSR set to: 2
  3694                           ;main.c: 262:    P.SYSTEM_STABLE = 1;
  3695  0124CA  0100               	movlb	0	; () banked
  3696  0124CC  8185               	bsf	(_P+1)& (0+255),0,b	;volatile
  3697                           
  3698                           ;main.c: 263:    break;
  3699  0124CE  D019               	goto	l12300
  3700  0124D0                     l1324:
  3701                           
  3702                           ; BSR set to: 2
  3703                           ;main.c: 266:    V.ui_state = UI_STATE_INIT;
  3704  0124D0  6B00               	clrf	_V& (0+255),b	;volatile
  3705                           
  3706                           ;main.c: 267:    break;
  3707  0124D2  D017               	goto	l12300
  3708  0124D4                     l12298:
  3709  0124D4  0102               	movlb	2	; () banked
  3710  0124D6  5100               	movf	_V& (0+255),w,b	;volatile
  3711  0124D8  6E0B               	movwf	(btemp+10)^0,c
  3712  0124DA  6A0C               	clrf	(btemp+11)^0,c
  3713                           
  3714                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3715                           ; Switch size 1, requested type "simple"
  3716                           ; Number of cases is 1, Range of values is 0 to 0
  3717                           ; switch strategies available:
  3718                           ; Name         Instructions Cycles
  3719                           ; simple_byte            4     3 (average)
  3720                           ;	Chosen strategy is simple_byte
  3721  0124DC  500C               	movf	(btemp+11)^0,w,c
  3722  0124DE  0A00               	xorlw	0	; case 0
  3723  0124E0  A4D8               	btfss	status,2,c
  3724  0124E2  D7F6               	goto	l1324
  3725                           
  3726                           ; BSR set to: 2
  3727                           ; Switch size 1, requested type "simple"
  3728                           ; Number of cases is 5, Range of values is 0 to 5
  3729                           ; switch strategies available:
  3730                           ; Name         Instructions Cycles
  3731                           ; simple_byte           16     9 (average)
  3732                           ;	Chosen strategy is simple_byte
  3733  0124E4  500B               	movf	(btemp+10)^0,w,c
  3734  0124E6  0A00               	xorlw	0	; case 0
  3735  0124E8  B4D8               	btfsc	status,2,c
  3736  0124EA  D6BE               	goto	l12226
  3737  0124EC  0A01               	xorlw	1	; case 1
  3738  0124EE  B4D8               	btfsc	status,2,c
  3739  0124F0  D008               	goto	l12300
  3740  0124F2  0A02               	xorlw	2	; case 3
  3741  0124F4  B4D8               	btfsc	status,2,c
  3742  0124F6  D005               	goto	l12300
  3743  0124F8  0A07               	xorlw	7	; case 4
  3744  0124FA  B4D8               	btfsc	status,2,c
  3745  0124FC  D7E6               	goto	l1322
  3746  0124FE  0A01               	xorlw	1	; case 5
  3747  012500  D7E7               	goto	l1324
  3748  012502                     l12300:
  3749                           
  3750                           ;main.c: 270:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  3751  012502  0E01               	movlw	1
  3752  012504  6EE6               	movwf	postinc1,c
  3753  012506  ECD7  F0D1         	call	_TimerDone	;wreg free
  3754  01250A  5001               	movf	btemp^0,w,c
  3755  01250C  B4D8               	btfsc	status,2,c
  3756  01250E  D013               	goto	l12312
  3757  012510  ECBD  F0D4         	call	_check_adc_scan	;wreg free
  3758  012514  5001               	movf	btemp^0,w,c
  3759  012516  B4D8               	btfsc	status,2,c
  3760  012518  D00E               	goto	l12312
  3761                           
  3762                           ;main.c: 274:    convert_adc_data();
  3763  01251A  EC5A  F0C7         	call	_convert_adc_data	;wreg free
  3764                           
  3765                           ;main.c: 278:    clear_adc_scan();
  3766  01251E  ECC9  F0D4         	call	_clear_adc_scan	;wreg free
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;main.c: 279:    start_adc_scan();
  3770  012522  EC4E  F0CC         	call	_start_adc_scan	;wreg free
  3771                           
  3772                           ;main.c: 280:    StartTimer(TMR_ADC, 200);
  3773  012526  0EC8               	movlw	200
  3774  012528  6EE6               	movwf	postinc1,c
  3775  01252A  0E00               	movlw	0
  3776  01252C  6EE6               	movwf	postinc1,c
  3777  01252E  0E01               	movlw	1
  3778  012530  6EE6               	movwf	postinc1,c
  3779  012532  EC76  F0CF         	call	_StartTimer	;wreg free
  3780  012536                     l12312:
  3781                           
  3782                           ;main.c: 287:   if (TimerDone(TMR_DISPLAY)) {
  3783                           
  3784                           ;main.c: 283:   if (V.ticks) {
  3785  012536  0E0A               	movlw	10
  3786  012538  6EE6               	movwf	postinc1,c
  3787  01253A  ECD7  F0D1         	call	_TimerDone	;wreg free
  3788  01253E  5001               	movf	btemp^0,w,c
  3789  012540  B4D8               	btfsc	status,2,c
  3790  012542  D27F               	goto	l12354
  3791                           
  3792                           ;main.c: 288:    if (TimerDone(TMR_HELPDIS)) {
  3793  012544  0E09               	movlw	9
  3794  012546  6EE6               	movwf	postinc1,c
  3795  012548  ECD7  F0D1         	call	_TimerDone	;wreg free
  3796  01254C  5001               	movf	btemp^0,w,c
  3797  01254E  B4D8               	btfsc	status,2,c
  3798  012550  D004               	goto	l12320
  3799                           
  3800                           ;main.c: 289:     set_display_info(DIS_STR);
  3801  012552  0E00               	movlw	0
  3802  012554  6EE6               	movwf	postinc1,c
  3803  012556  ECCC  F0D3         	call	_set_display_info	;wreg free
  3804  01255A                     l12320:
  3805                           
  3806                           ;main.c: 291:    calc_model_data();
  3807  01255A  EC13  F0AA         	call	_calc_model_data	;wreg free
  3808                           
  3809                           ; BSR set to: 1
  3810                           ;main.c: 298:     hid_display(&H);
  3811                           
  3812                           ;main.c: 293:    if (0) {
  3813  01255E  0ED2               	movlw	_H& (0+255)
  3814  012560  6EE6               	movwf	postinc1,c
  3815  012562  ECCA  F0C4         	call	_hid_display	;wreg free
  3816                           
  3817                           ;main.c: 299:     switch (H.hid_display) {
  3818  012566  D248               	goto	l12346
  3819  012568                     l1332:
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;main.c: 301:      V.calib = 0;
  3823  012568  0102               	movlb	2	; () banked
  3824  01256A  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3825                           
  3826                           ; BSR set to: 2
  3827                           ;main.c: 302:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  3828  01256C  0060  F5E3  FFE6   	movff	_C+120,postinc1
  3829  012572  0060  F5E7  FFE6   	movff	_C+121,postinc1
  3830  012578  0060  F5EB  FFE6   	movff	_C+122,postinc1
  3831  01257E  0060  F5EF  FFE6   	movff	_C+123,postinc1
  3832  012584  0EAB               	movlw	low STR_13
  3833  012586  6EE6               	movwf	postinc1,c
  3834  012588  0EFE               	movlw	high STR_13
  3835  01258A  6EE6               	movwf	postinc1,c
  3836  01258C  0E00               	movlw	0
  3837  01258E  6EE6               	movwf	postinc1,c
  3838  012590  0E00               	movlw	0
  3839  012592  6EE6               	movwf	postinc1,c
  3840  012594  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  3841  012598  0060  F007  FFE6   	movff	btemp,postinc1
  3842  01259E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3843  0125A4  0E08               	movlw	8
  3844  0125A6  6EE6               	movwf	postinc1,c
  3845  0125A8  EC45  F0C4         	call	_sprintf	;wreg free
  3846                           
  3847                           ;main.c: 303:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  3848  0125AC  0060  F5C3  FFE6   	movff	_C+112,postinc1
  3849  0125B2  0060  F5C7  FFE6   	movff	_C+113,postinc1
  3850  0125B8  0060  F5CB  FFE6   	movff	_C+114,postinc1
  3851  0125BE  0060  F5CF  FFE6   	movff	_C+115,postinc1
  3852  0125C4  0ED1               	movlw	low STR_14
  3853  0125C6  6EE6               	movwf	postinc1,c
  3854  0125C8  0EFE               	movlw	high STR_14
  3855  0125CA  6EE6               	movwf	postinc1,c
  3856  0125CC  0E00               	movlw	0
  3857  0125CE  6EE6               	movwf	postinc1,c
  3858  0125D0  0E01               	movlw	1
  3859  0125D2  6EE6               	movwf	postinc1,c
  3860  0125D4  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  3861  0125D8  0060  F007  FFE6   	movff	btemp,postinc1
  3862  0125DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3863  0125E4  0E08               	movlw	8
  3864  0125E6  6EE6               	movwf	postinc1,c
  3865  0125E8  EC45  F0C4         	call	_sprintf	;wreg free
  3866                           
  3867                           ;main.c: 304:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  3868  0125EC  0060  F5D3  FFE6   	movff	_C+116,postinc1
  3869  0125F2  0060  F5D7  FFE6   	movff	_C+117,postinc1
  3870  0125F8  0060  F5DB  FFE6   	movff	_C+118,postinc1
  3871  0125FE  0060  F5DF  FFE6   	movff	_C+119,postinc1
  3872  012604  0EBE               	movlw	low STR_15
  3873  012606  6EE6               	movwf	postinc1,c
  3874  012608  0EFE               	movlw	high STR_15
  3875  01260A  6EE6               	movwf	postinc1,c
  3876  01260C  0E00               	movlw	0
  3877  01260E  6EE6               	movwf	postinc1,c
  3878  012610  0E02               	movlw	2
  3879  012612  6EE6               	movwf	postinc1,c
  3880  012614  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  3881  012618  0060  F007  FFE6   	movff	btemp,postinc1
  3882  01261E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3883  012624  0E08               	movlw	8
  3884  012626  6EE6               	movwf	postinc1,c
  3885  012628  EC45  F0C4         	call	_sprintf	;wreg free
  3886                           
  3887                           ;main.c: 305:      break;
  3888  01262C  D1FA               	goto	l12348
  3889  01262E                     l1334:
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;main.c: 307:      V.calib = 0;
  3893  01262E  0102               	movlb	2	; () banked
  3894  012630  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3895                           
  3896                           ; BSR set to: 2
  3897                           ;main.c: 308:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  3898  012632  0060  F413  FFE6   	movff	_C+4,postinc1
  3899  012638  0060  F417  FFE6   	movff	_C+5,postinc1
  3900  01263E  0060  F41B  FFE6   	movff	_C+6,postinc1
  3901  012644  0060  F41F  FFE6   	movff	_C+7,postinc1
  3902  01264A  0060  F453  FFE6   	movff	_C+20,postinc1
  3903  012650  0060  F457  FFE6   	movff	_C+21,postinc1
  3904  012656  0060  F45B  FFE6   	movff	_C+22,postinc1
  3905  01265C  0060  F45F  FFE6   	movff	_C+23,postinc1
  3906  012662  0E1D               	movlw	low STR_16
  3907  012664  6EE6               	movwf	postinc1,c
  3908  012666  0EFF               	movlw	high STR_16
  3909  012668  6EE6               	movwf	postinc1,c
  3910  01266A  0E00               	movlw	0
  3911  01266C  6EE6               	movwf	postinc1,c
  3912  01266E  0E00               	movlw	0
  3913  012670  6EE6               	movwf	postinc1,c
  3914  012672  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  3915  012676  0060  F007  FFE6   	movff	btemp,postinc1
  3916  01267C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3917  012682  0E0C               	movlw	12
  3918  012684  6EE6               	movwf	postinc1,c
  3919  012686  EC45  F0C4         	call	_sprintf	;wreg free
  3920                           
  3921                           ;main.c: 309:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  3922  01268A  0060  F403  FFE6   	movff	_C,postinc1
  3923  012690  0060  F407  FFE6   	movff	_C+1,postinc1
  3924  012696  0060  F40B  FFE6   	movff	_C+2,postinc1
  3925  01269C  0060  F40F  FFE6   	movff	_C+3,postinc1
  3926  0126A2  0060  F443  FFE6   	movff	_C+16,postinc1
  3927  0126A8  0060  F447  FFE6   	movff	_C+17,postinc1
  3928  0126AE  0060  F44B  FFE6   	movff	_C+18,postinc1
  3929  0126B4  0060  F44F  FFE6   	movff	_C+19,postinc1
  3930  0126BA  0EF7               	movlw	low STR_17
  3931  0126BC  6EE6               	movwf	postinc1,c
  3932  0126BE  0EFE               	movlw	high STR_17
  3933  0126C0  6EE6               	movwf	postinc1,c
  3934  0126C2  0E00               	movlw	0
  3935  0126C4  6EE6               	movwf	postinc1,c
  3936  0126C6  0E01               	movlw	1
  3937  0126C8  6EE6               	movwf	postinc1,c
  3938  0126CA  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  3939  0126CE  0060  F007  FFE6   	movff	btemp,postinc1
  3940  0126D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3941  0126DA  0E0C               	movlw	12
  3942  0126DC  6EE6               	movwf	postinc1,c
  3943  0126DE  EC45  F0C4         	call	_sprintf	;wreg free
  3944                           
  3945                           ;main.c: 310:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  3946  0126E2  0060  F503  FFE6   	movff	_C+64,postinc1
  3947  0126E8  0060  F507  FFE6   	movff	_C+65,postinc1
  3948  0126EE  0060  F50B  FFE6   	movff	_C+66,postinc1
  3949  0126F4  0060  F50F  FFE6   	movff	_C+67,postinc1
  3950  0126FA  0060  F423  FFE6   	movff	_C+8,postinc1
  3951  012700  0060  F427  FFE6   	movff	_C+9,postinc1
  3952  012706  0060  F42B  FFE6   	movff	_C+10,postinc1
  3953  01270C  0060  F42F  FFE6   	movff	_C+11,postinc1
  3954  012712  0E0A               	movlw	low STR_18
  3955  012714  6EE6               	movwf	postinc1,c
  3956  012716  0EFF               	movlw	high STR_18
  3957  012718  6EE6               	movwf	postinc1,c
  3958  01271A  0E00               	movlw	0
  3959  01271C  6EE6               	movwf	postinc1,c
  3960  01271E  0E02               	movlw	2
  3961  012720  6EE6               	movwf	postinc1,c
  3962  012722  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  3963  012726  0060  F007  FFE6   	movff	btemp,postinc1
  3964  01272C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3965  012732  0E0C               	movlw	12
  3966  012734  6EE6               	movwf	postinc1,c
  3967  012736  EC45  F0C4         	call	_sprintf	;wreg free
  3968                           
  3969                           ;main.c: 311:      break;
  3970  01273A  D173               	goto	l12348
  3971  01273C                     l1335:
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;main.c: 313:      V.calib = 0;
  3975  01273C  0102               	movlb	2	; () banked
  3976  01273E  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3977                           
  3978                           ; BSR set to: 2
  3979                           ;main.c: 314:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  3980  012740  0060  F5F3  FFE6   	movff	_C+124,postinc1
  3981  012746  0060  F5F7  FFE6   	movff	_C+125,postinc1
  3982  01274C  0060  F5FB  FFE6   	movff	_C+126,postinc1
  3983  012752  0060  F5FF  FFE6   	movff	_C+127,postinc1
  3984  012758  0EE4               	movlw	low STR_19
  3985  01275A  6EE6               	movwf	postinc1,c
  3986  01275C  0EFE               	movlw	high STR_19
  3987  01275E  6EE6               	movwf	postinc1,c
  3988  012760  0E00               	movlw	0
  3989  012762  6EE6               	movwf	postinc1,c
  3990  012764  0E00               	movlw	0
  3991  012766  6EE6               	movwf	postinc1,c
  3992  012768  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  3993  01276C  0060  F007  FFE6   	movff	btemp,postinc1
  3994  012772  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3995  012778  0E08               	movlw	8
  3996  01277A  6EE6               	movwf	postinc1,c
  3997  01277C  EC45  F0C4         	call	_sprintf	;wreg free
  3998                           
  3999                           ;main.c: 315:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  4000  012780  0060  F643  FFE6   	movff	_C+144,postinc1
  4001  012786  0060  F647  FFE6   	movff	_C+145,postinc1
  4002  01278C  0060  F64B  FFE6   	movff	_C+146,postinc1
  4003  012792  0060  F64F  FFE6   	movff	_C+147,postinc1
  4004  012798  0060  F633  FFE6   	movff	_C+140,postinc1
  4005  01279E  0060  F637  FFE6   	movff	_C+141,postinc1
  4006  0127A4  0060  F63B  FFE6   	movff	_C+142,postinc1
  4007  0127AA  0060  F63F  FFE6   	movff	_C+143,postinc1
  4008  0127B0  0E4B               	movlw	low STR_20
  4009  0127B2  6EE6               	movwf	postinc1,c
  4010  0127B4  0EFE               	movlw	high STR_20
  4011  0127B6  6EE6               	movwf	postinc1,c
  4012  0127B8  0E00               	movlw	0
  4013  0127BA  6EE6               	movwf	postinc1,c
  4014  0127BC  0E01               	movlw	1
  4015  0127BE  6EE6               	movwf	postinc1,c
  4016  0127C0  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  4017  0127C4  0060  F007  FFE6   	movff	btemp,postinc1
  4018  0127CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4019  0127D0  0E0C               	movlw	12
  4020  0127D2  6EE6               	movwf	postinc1,c
  4021  0127D4  EC45  F0C4         	call	_sprintf	;wreg free
  4022                           
  4023                           ;main.c: 316:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  4024  0127D8  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4025  0127DE  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4026  0127E4  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4027  0127EA  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4028  0127F0  0E98               	movlw	low STR_21
  4029  0127F2  6EE6               	movwf	postinc1,c
  4030  0127F4  0EFE               	movlw	high STR_21
  4031  0127F6  6EE6               	movwf	postinc1,c
  4032  0127F8  0E00               	movlw	0
  4033  0127FA  6EE6               	movwf	postinc1,c
  4034  0127FC  0E02               	movlw	2
  4035  0127FE  6EE6               	movwf	postinc1,c
  4036  012800  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  4037  012804  0060  F007  FFE6   	movff	btemp,postinc1
  4038  01280A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4039  012810  0E08               	movlw	8
  4040  012812  6EE6               	movwf	postinc1,c
  4041  012814  EC45  F0C4         	call	_sprintf	;wreg free
  4042                           
  4043                           ;main.c: 317:      break;
  4044  012818  D104               	goto	l12348
  4045  01281A                     l12332:
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;main.c: 319:      if (!V.calib) {
  4049  01281A  0102               	movlb	2	; () banked
  4050  01281C  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4051  01281E  A4D8               	btfss	status,2,c
  4052  012820  D02D               	goto	l12336
  4053                           
  4054                           ; BSR set to: 2
  4055                           ;main.c: 320:       lp_filter(0.0, i, -1);
  4056  012822  0EFF               	movlw	255
  4057  012824  6EE6               	movwf	postinc1,c
  4058                           
  4059                           ;stkvar	_i @ sp[(-7)+2]
  4060  012826  0EFB               	movlw	-5
  4061  012828  50E3               	movf	plusw1,w,c
  4062  01282A  6EE6               	movwf	postinc1,c
  4063  01282C  0E00               	movlw	0
  4064  01282E  6EE6               	movwf	postinc1,c
  4065  012830  0E00               	movlw	0
  4066  012832  6EE6               	movwf	postinc1,c
  4067  012834  0E00               	movlw	0
  4068  012836  6EE6               	movwf	postinc1,c
  4069  012838  0E00               	movlw	0
  4070  01283A  6EE6               	movwf	postinc1,c
  4071  01283C  ECC4  F0B9         	call	_lp_filter	;wreg free
  4072                           
  4073                           ;main.c: 321:       lp_filter(0.0, j, -1);
  4074  012840  0EFF               	movlw	255
  4075  012842  6EE6               	movwf	postinc1,c
  4076                           
  4077                           ;stkvar	_j @ sp[(-7)+1]
  4078  012844  0EFA               	movlw	-6
  4079  012846  50E3               	movf	plusw1,w,c
  4080  012848  6EE6               	movwf	postinc1,c
  4081  01284A  0E00               	movlw	0
  4082  01284C  6EE6               	movwf	postinc1,c
  4083  01284E  0E00               	movlw	0
  4084  012850  6EE6               	movwf	postinc1,c
  4085  012852  0E00               	movlw	0
  4086  012854  6EE6               	movwf	postinc1,c
  4087  012856  0E00               	movlw	0
  4088  012858  6EE6               	movwf	postinc1,c
  4089  01285A  ECC4  F0B9         	call	_lp_filter	;wreg free
  4090                           
  4091                           ;main.c: 322:       lp_filter(0.0, k, -1);
  4092  01285E  0EFF               	movlw	255
  4093  012860  6EE6               	movwf	postinc1,c
  4094                           
  4095                           ;stkvar	_k @ sp[(-7)+0]
  4096  012862  0EF9               	movlw	-7
  4097  012864  50E3               	movf	plusw1,w,c
  4098  012866  6EE6               	movwf	postinc1,c
  4099  012868  0E00               	movlw	0
  4100  01286A  6EE6               	movwf	postinc1,c
  4101  01286C  0E00               	movlw	0
  4102  01286E  6EE6               	movwf	postinc1,c
  4103  012870  0E00               	movlw	0
  4104  012872  6EE6               	movwf	postinc1,c
  4105  012874  0E00               	movlw	0
  4106  012876  6EE6               	movwf	postinc1,c
  4107  012878  ECC4  F0B9         	call	_lp_filter	;wreg free
  4108  01287C                     l12336:
  4109                           
  4110                           ;main.c: 324:      V.calib = 1;
  4111  01287C  0E01               	movlw	1
  4112  01287E  0102               	movlb	2	; () banked
  4113  012880  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  4114                           
  4115                           ; BSR set to: 2
  4116                           ;main.c: 325:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  4117  012882  0E02               	movlw	2
  4118  012884  6EE6               	movwf	postinc1,c
  4119  012886  EC44  F0D1         	call	_get_switch	;wreg free
  4120  01288A  5001               	movf	btemp^0,w,c
  4121  01288C  6EE6               	movwf	postinc1,c
  4122  01288E  0E00               	movlw	0
  4123  012890  6EE6               	movwf	postinc1,c
  4124                           
  4125                           ;stkvar	_i @ sp[(-8)+2]
  4126  012892  0EFA               	movlw	-6
  4127  012894  50E3               	movf	plusw1,w,c
  4128  012896  0D04               	mullw	4
  4129  012898  0E00               	movlw	low _C
  4130  01289A  24F3               	addwf	243,w,c
  4131  01289C  6ED9               	movwf	fsr2l,c
  4132  01289E  0E01               	movlw	high _C
  4133  0128A0  20F4               	addwfc	prodh,w,c
  4134  0128A2  6EDA               	movwf	fsr2h,c
  4135  0128A4  006F FF7B FFE6     	movff	postinc2,postinc1
  4136  0128AA  006F FF7B FFE6     	movff	postinc2,postinc1
  4137  0128B0  006F FF7B FFE6     	movff	postinc2,postinc1
  4138  0128B6  006F FF7B FFE6     	movff	postinc2,postinc1
  4139                           
  4140                           ;stkvar	_i @ sp[(-12)+2]
  4141  0128BC  0EF6               	movlw	-10
  4142  0128BE  50E3               	movf	plusw1,w,c
  4143  0128C0  6EE6               	movwf	postinc1,c
  4144  0128C2  ECAE  F0D3         	call	_get_raw_result	;wreg free
  4145  0128C6  0060  F007  FFE6   	movff	btemp,postinc1
  4146  0128CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4147  0128D2  0E85               	movlw	low STR_10
  4148  0128D4  6EE6               	movwf	postinc1,c
  4149  0128D6  0EFF               	movlw	high STR_10
  4150  0128D8  6EE6               	movwf	postinc1,c
  4151  0128DA  0E00               	movlw	0
  4152  0128DC  6EE6               	movwf	postinc1,c
  4153  0128DE  0E00               	movlw	0
  4154  0128E0  6EE6               	movwf	postinc1,c
  4155  0128E2  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  4156  0128E6  0060  F007  FFE6   	movff	btemp,postinc1
  4157  0128EC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4158  0128F2  0E0C               	movlw	12
  4159  0128F4  6EE6               	movwf	postinc1,c
  4160  0128F6  EC45  F0C4         	call	_sprintf	;wreg free
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;main.c: 326:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  4164  0128FA  0E03               	movlw	3
  4165  0128FC  6EE6               	movwf	postinc1,c
  4166  0128FE  EC44  F0D1         	call	_get_switch	;wreg free
  4167  012902  5001               	movf	btemp^0,w,c
  4168  012904  6EE6               	movwf	postinc1,c
  4169  012906  0E00               	movlw	0
  4170  012908  6EE6               	movwf	postinc1,c
  4171                           
  4172                           ;stkvar	_j @ sp[(-8)+1]
  4173  01290A  0EF9               	movlw	-7
  4174  01290C  50E3               	movf	plusw1,w,c
  4175  01290E  0D04               	mullw	4
  4176  012910  0E00               	movlw	low _C
  4177  012912  24F3               	addwf	243,w,c
  4178  012914  6ED9               	movwf	fsr2l,c
  4179  012916  0E01               	movlw	high _C
  4180  012918  20F4               	addwfc	prodh,w,c
  4181  01291A  6EDA               	movwf	fsr2h,c
  4182  01291C  006F FF7B FFE6     	movff	postinc2,postinc1
  4183  012922  006F FF7B FFE6     	movff	postinc2,postinc1
  4184  012928  006F FF7B FFE6     	movff	postinc2,postinc1
  4185  01292E  006F FF7B FFE6     	movff	postinc2,postinc1
  4186                           
  4187                           ;stkvar	_j @ sp[(-12)+1]
  4188  012934  0EF5               	movlw	-11
  4189  012936  50E3               	movf	plusw1,w,c
  4190  012938  6EE6               	movwf	postinc1,c
  4191  01293A  ECAE  F0D3         	call	_get_raw_result	;wreg free
  4192  01293E  0060  F007  FFE6   	movff	btemp,postinc1
  4193  012944  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4194  01294A  0E85               	movlw	low STR_10
  4195  01294C  6EE6               	movwf	postinc1,c
  4196  01294E  0EFF               	movlw	high STR_10
  4197  012950  6EE6               	movwf	postinc1,c
  4198  012952  0E00               	movlw	0
  4199  012954  6EE6               	movwf	postinc1,c
  4200  012956  0E01               	movlw	1
  4201  012958  6EE6               	movwf	postinc1,c
  4202  01295A  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  4203  01295E  0060  F007  FFE6   	movff	btemp,postinc1
  4204  012964  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4205  01296A  0E0C               	movlw	12
  4206  01296C  6EE6               	movwf	postinc1,c
  4207  01296E  EC45  F0C4         	call	_sprintf	;wreg free
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;main.c: 327:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  4211                           ;stkvar	_inp_index @ sp[(-6)+3]
  4212  012972  0EFD               	movlw	-3
  4213  012974  50E3               	movf	plusw1,w,c
  4214  012976  6E0B               	movwf	(btemp+10)^0,c
  4215  012978  6A0C               	clrf	(btemp+11)^0,c
  4216  01297A  0E01               	movlw	1
  4217  01297C  260B               	addwf	(btemp+10)^0,f,c
  4218  01297E  0E00               	movlw	0
  4219  012980  220C               	addwfc	(btemp+11)^0,f,c
  4220  012982  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4221  012988  0060  F033  FFE6   	movff	btemp+11,postinc1
  4222                           
  4223                           ;stkvar	_k @ sp[(-8)+0]
  4224  01298E  0EF8               	movlw	-8
  4225  012990  50E3               	movf	plusw1,w,c
  4226  012992  0D04               	mullw	4
  4227  012994  0E00               	movlw	low _C
  4228  012996  24F3               	addwf	243,w,c
  4229  012998  6ED9               	movwf	fsr2l,c
  4230  01299A  0E01               	movlw	high _C
  4231  01299C  20F4               	addwfc	prodh,w,c
  4232  01299E  6EDA               	movwf	fsr2h,c
  4233  0129A0  006F FF7B FFE6     	movff	postinc2,postinc1
  4234  0129A6  006F FF7B FFE6     	movff	postinc2,postinc1
  4235  0129AC  006F FF7B FFE6     	movff	postinc2,postinc1
  4236  0129B2  006F FF7B FFE6     	movff	postinc2,postinc1
  4237                           
  4238                           ;stkvar	_k @ sp[(-12)+0]
  4239  0129B8  0EF4               	movlw	-12
  4240  0129BA  50E3               	movf	plusw1,w,c
  4241  0129BC  6EE6               	movwf	postinc1,c
  4242  0129BE  ECAE  F0D3         	call	_get_raw_result	;wreg free
  4243  0129C2  0060  F007  FFE6   	movff	btemp,postinc1
  4244  0129C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4245  0129CE  0E74               	movlw	low STR_12
  4246  0129D0  6EE6               	movwf	postinc1,c
  4247  0129D2  0EFF               	movlw	high STR_12
  4248  0129D4  6EE6               	movwf	postinc1,c
  4249  0129D6  0E00               	movlw	0
  4250  0129D8  6EE6               	movwf	postinc1,c
  4251  0129DA  0E02               	movlw	2
  4252  0129DC  6EE6               	movwf	postinc1,c
  4253  0129DE  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  4254  0129E2  0060  F007  FFE6   	movff	btemp,postinc1
  4255  0129E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4256  0129EE  0E0C               	movlw	12
  4257  0129F0  6EE6               	movwf	postinc1,c
  4258  0129F2  EC45  F0C4         	call	_sprintf	;wreg free
  4259                           
  4260                           ;main.c: 328:      break;
  4261  0129F6  D015               	goto	l12348
  4262  0129F8                     l12346:
  4263  0129F8  0100               	movlb	0	; () banked
  4264  0129FA  51D2               	movf	_H& (0+255),w,b
  4265  0129FC  6E0B               	movwf	(btemp+10)^0,c
  4266  0129FE  6A0C               	clrf	(btemp+11)^0,c
  4267                           
  4268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4269                           ; Switch size 1, requested type "simple"
  4270                           ; Number of cases is 1, Range of values is 0 to 0
  4271                           ; switch strategies available:
  4272                           ; Name         Instructions Cycles
  4273                           ; simple_byte            4     3 (average)
  4274                           ;	Chosen strategy is simple_byte
  4275  012A00  500C               	movf	(btemp+11)^0,w,c
  4276  012A02  0A00               	xorlw	0	; case 0
  4277  012A04  A4D8               	btfss	status,2,c
  4278  012A06  D00D               	goto	l12348
  4279                           
  4280                           ; BSR set to: 0
  4281                           ; Switch size 1, requested type "simple"
  4282                           ; Number of cases is 4, Range of values is 0 to 3
  4283                           ; switch strategies available:
  4284                           ; Name         Instructions Cycles
  4285                           ; simple_byte           13     7 (average)
  4286                           ;	Chosen strategy is simple_byte
  4287  012A08  500B               	movf	(btemp+10)^0,w,c
  4288  012A0A  0A00               	xorlw	0	; case 0
  4289  012A0C  B4D8               	btfsc	status,2,c
  4290  012A0E  D60F               	goto	l1334
  4291  012A10  0A01               	xorlw	1	; case 1
  4292  012A12  B4D8               	btfsc	status,2,c
  4293  012A14  D5A9               	goto	l1332
  4294  012A16  0A03               	xorlw	3	; case 2
  4295  012A18  B4D8               	btfsc	status,2,c
  4296  012A1A  D690               	goto	l1335
  4297  012A1C  0A01               	xorlw	1	; case 3
  4298  012A1E  B4D8               	btfsc	status,2,c
  4299  012A20  D6FC               	goto	l12332
  4300  012A22                     l12348:
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;main.c: 332:     clear_hid_pflags(&H);
  4304  012A22  0ED2               	movlw	_H& (0+255)
  4305  012A24  6EE6               	movwf	postinc1,c
  4306  012A26  EC02  F0D3         	call	_clear_hid_pflags	;wreg free
  4307                           
  4308                           ;main.c: 334:    StartTimer(TMR_DISPLAY, 250);
  4309  012A2A  0EFA               	movlw	250
  4310  012A2C  6EE6               	movwf	postinc1,c
  4311  012A2E  0E00               	movlw	0
  4312  012A30  6EE6               	movwf	postinc1,c
  4313  012A32  0E0A               	movlw	10
  4314  012A34  6EE6               	movwf	postinc1,c
  4315  012A36  EC76  F0CF         	call	_StartTimer	;wreg free
  4316                           
  4317                           ;main.c: 335:    update_lcd(0);
  4318  012A3A  0E00               	movlw	0
  4319  012A3C  6EE6               	movwf	postinc1,c
  4320  012A3E  ECBD  F0C3         	call	_update_lcd	;wreg free
  4321  012A42                     l12354:
  4322                           
  4323                           ;main.c: 341:   check_help(V.flipper);
  4324  012A42  0102               	movlb	2	; () banked
  4325  012A44  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4326  012A46  6EE6               	movwf	postinc1,c
  4327  012A48  ECB9  F0B6         	call	_check_help	;wreg free
  4328                           
  4329                           ;main.c: 343:   if (check_enter_button(&H)) {
  4330  012A4C  0ED2               	movlw	_H& (0+255)
  4331  012A4E  6EE6               	movwf	postinc1,c
  4332  012A50  EC96  F0CF         	call	_check_enter_button	;wreg free
  4333  012A54  5001               	movf	btemp^0,w,c
  4334  012A56  B4D8               	btfsc	status,2,c
  4335  012A58  D062               	goto	l1339
  4336                           
  4337                           ;main.c: 344:    V.calib = 0;
  4338  012A5A  0102               	movlb	2	; () banked
  4339  012A5C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4340                           
  4341                           ; BSR set to: 2
  4342                           ;main.c: 345:    inp_index += 3;
  4343                           ;stkvar	_inp_index @ sp[(-6)+3]
  4344  012A5E  0EFD               	movlw	-3
  4345  012A60  006F FF8C  F001    	movff	plusw1,btemp
  4346  012A66  0E03               	movlw	3
  4347  012A68  2601               	addwf	btemp^0,f,c
  4348  012A6A  0EFD               	movlw	-3
  4349  012A6C  0060  F007  FFE3   	movff	btemp,plusw1
  4350                           
  4351                           ;main.c: 346:    if (inp_index > 9)
  4352                           ;stkvar	_inp_index @ sp[(-6)+3]
  4353  012A72  0EFD               	movlw	-3
  4354  012A74  006F FF8C  F001    	movff	plusw1,btemp
  4355  012A7A  0E09               	movlw	9
  4356  012A7C  6401               	cpfsgt	btemp^0,c
  4357  012A7E  D03A               	goto	l12382
  4358                           
  4359                           ; BSR set to: 2
  4360                           ;main.c: 347:     inp_index = 0;
  4361                           ;stkvar	_inp_index @ sp[(-6)+3]
  4362  012A80  0EFD               	movlw	-3
  4363  012A82  6AE3               	clrf	plusw1,c
  4364  012A84  D037               	goto	l12382
  4365  012A86                     l12364:
  4366                           
  4367                           ; BSR set to: 2
  4368                           ;main.c: 350:     i = C_BATT;
  4369                           ;stkvar	_i @ sp[(-6)+2]
  4370  012A86  0EFC               	movlw	-4
  4371  012A88  6AE3               	clrf	plusw1,c
  4372                           
  4373                           ; BSR set to: 2
  4374                           ;main.c: 351:     j = C_PV;
  4375                           ;stkvar	_j @ sp[(-6)+1]
  4376  012A8A  0EFB               	movlw	-5
  4377  012A8C  6AE3               	clrf	plusw1,c
  4378  012A8E  2AE3               	incf	plusw1,f,c
  4379                           
  4380                           ; BSR set to: 2
  4381                           ;main.c: 352:     k = V_CC;
  4382                           ;stkvar	_k @ sp[(-6)+0]
  4383  012A90  0EFA               	movlw	-6
  4384  012A92  6AE3               	clrf	plusw1,c
  4385  012A94  82E3               	bsf	plusw1,1,c
  4386                           
  4387                           ;main.c: 353:     break;
  4388  012A96  D043               	goto	l1339
  4389  012A98                     l12370:
  4390                           
  4391                           ; BSR set to: 2
  4392                           ;main.c: 355:     i = V_BAT;
  4393                           ;stkvar	_i @ sp[(-6)+2]
  4394  012A98  0EFC               	movlw	-4
  4395  012A9A  6AE3               	clrf	plusw1,c
  4396  012A9C  84E3               	bsf	plusw1,2,c
  4397                           
  4398                           ;main.c: 356:     j = V_PV;
  4399                           ;stkvar	_j @ sp[(-6)+1]
  4400  012A9E  0EFB               	movlw	-5
  4401  012AA0  6AE3               	clrf	plusw1,c
  4402  012AA2  80E3               	bsf	plusw1,0,c
  4403  012AA4  84E3               	bsf	plusw1,2,c	;indir
  4404                           
  4405                           ;main.c: 357:     k = V_CBUS;
  4406                           ;stkvar	_k @ sp[(-6)+0]
  4407  012AA6  0EFA               	movlw	-6
  4408  012AA8  6AE3               	clrf	plusw1,c
  4409  012AAA  82E3               	bsf	plusw1,1,c
  4410  012AAC  84E3               	bsf	plusw1,2,c	;indir
  4411                           
  4412                           ;main.c: 358:     break;
  4413  012AAE  D037               	goto	l1339
  4414  012AB0                     l12372:
  4415                           
  4416                           ; BSR set to: 2
  4417                           ;main.c: 360:     i = V_BBAT;
  4418                           ;stkvar	_i @ sp[(-6)+2]
  4419  012AB0  0EFC               	movlw	-4
  4420  012AB2  6AE3               	clrf	plusw1,c
  4421  012AB4  82E3               	bsf	plusw1,1,c
  4422  012AB6  86E3               	bsf	plusw1,3,c	;indir
  4423                           
  4424                           ; BSR set to: 2
  4425                           ;main.c: 361:     j = V_TEMP;
  4426  012AB8  0E0B               	movlw	11
  4427  012ABA  6E0C               	movwf	(btemp+11)^0,c
  4428                           
  4429                           ;stkvar	_j @ sp[(-6)+1]
  4430  012ABC  0EFB               	movlw	-5
  4431  012ABE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4432                           
  4433                           ; BSR set to: 2
  4434                           ;main.c: 362:     k = V_INVERTER;
  4435                           ;stkvar	_k @ sp[(-6)+0]
  4436  012AC4  0EFA               	movlw	-6
  4437  012AC6  6AE3               	clrf	plusw1,c
  4438  012AC8  84E3               	bsf	plusw1,2,c
  4439  012ACA  86E3               	bsf	plusw1,3,c	;indir
  4440                           
  4441                           ;main.c: 363:     break;
  4442  012ACC  D028               	goto	l1339
  4443  012ACE                     l12378:
  4444                           
  4445                           ; BSR set to: 2
  4446                           ;main.c: 365:     i = channel_ANB5;
  4447  012ACE  0E0D               	movlw	13
  4448  012AD0  6E0C               	movwf	(btemp+11)^0,c
  4449                           
  4450                           ;stkvar	_i @ sp[(-6)+2]
  4451  012AD2  0EFC               	movlw	-4
  4452  012AD4  0060  F033  FFE3   	movff	btemp+11,plusw1
  4453                           
  4454                           ;main.c: 366:     j = channel_ANB5;
  4455  012ADA  0E0D               	movlw	13
  4456  012ADC  6E0C               	movwf	(btemp+11)^0,c
  4457                           
  4458                           ;stkvar	_j @ sp[(-6)+1]
  4459  012ADE  0EFB               	movlw	-5
  4460  012AE0  0060  F033  FFE3   	movff	btemp+11,plusw1
  4461                           
  4462                           ;main.c: 367:     k = channel_ANB5;
  4463  012AE6  0E0D               	movlw	13
  4464  012AE8  6E0C               	movwf	(btemp+11)^0,c
  4465                           
  4466                           ;stkvar	_k @ sp[(-6)+0]
  4467  012AEA  0EFA               	movlw	-6
  4468  012AEC  0060  F033  FFE3   	movff	btemp+11,plusw1
  4469                           
  4470                           ;main.c: 368:     break;
  4471  012AF2  D015               	goto	l1339
  4472  012AF4                     l12382:
  4473                           
  4474                           ; BSR set to: 2
  4475                           ;stkvar	_inp_index @ sp[(-6)+3]
  4476  012AF4  0EFD               	movlw	-3
  4477  012AF6  50E3               	movf	plusw1,w,c
  4478  012AF8  6E0B               	movwf	(btemp+10)^0,c
  4479  012AFA  6A0C               	clrf	(btemp+11)^0,c
  4480                           
  4481                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4482                           ; Switch size 1, requested type "simple"
  4483                           ; Number of cases is 1, Range of values is 0 to 0
  4484                           ; switch strategies available:
  4485                           ; Name         Instructions Cycles
  4486                           ; simple_byte            4     3 (average)
  4487                           ;	Chosen strategy is simple_byte
  4488  012AFC  500C               	movf	(btemp+11)^0,w,c
  4489  012AFE  0A00               	xorlw	0	; case 0
  4490  012B00  A4D8               	btfss	status,2,c
  4491  012B02  D00D               	goto	l1339
  4492                           
  4493                           ; BSR set to: 2
  4494                           ; Switch size 1, requested type "simple"
  4495                           ; Number of cases is 4, Range of values is 0 to 9
  4496                           ; switch strategies available:
  4497                           ; Name         Instructions Cycles
  4498                           ; simple_byte           13     7 (average)
  4499                           ;	Chosen strategy is simple_byte
  4500  012B04  500B               	movf	(btemp+10)^0,w,c
  4501  012B06  0A00               	xorlw	0	; case 0
  4502  012B08  B4D8               	btfsc	status,2,c
  4503  012B0A  D7BD               	goto	l12364
  4504  012B0C  0A03               	xorlw	3	; case 3
  4505  012B0E  B4D8               	btfsc	status,2,c
  4506  012B10  D7C3               	goto	l12370
  4507  012B12  0A05               	xorlw	5	; case 6
  4508  012B14  B4D8               	btfsc	status,2,c
  4509  012B16  D7CC               	goto	l12372
  4510  012B18  0A0F               	xorlw	15	; case 9
  4511  012B1A  B4D8               	btfsc	status,2,c
  4512  012B1C  D7D8               	goto	l12378
  4513  012B1E                     l1339:
  4514                           
  4515                           ;main.c: 377:   if (V.set_sequ) {
  4516  012B1E  0102               	movlb	2	; () banked
  4517  012B20  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  4518  012B22  D4D8               	goto	l12298
  4519                           
  4520                           ; BSR set to: 2
  4521                           ;main.c: 378:    if (TimerDone(TMR_INFO)) {
  4522  012B24  0E07               	movlw	7
  4523  012B26  6EE6               	movwf	postinc1,c
  4524  012B28  ECD7  F0D1         	call	_TimerDone	;wreg free
  4525  012B2C  5001               	movf	btemp^0,w,c
  4526  012B2E  B4D8               	btfsc	status,2,c
  4527  012B30  D00B               	goto	l12392
  4528                           
  4529                           ;main.c: 379:     V.set_sequ = 0;
  4530  012B32  0102               	movlb	2	; () banked
  4531  012B34  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  4532                           
  4533                           ; BSR set to: 2
  4534                           ;main.c: 380:     set_vterm(0);
  4535  012B36  0E00               	movlw	0
  4536  012B38  6EE6               	movwf	postinc1,c
  4537  012B3A  ECBD  F0D3         	call	_set_vterm	;wreg free
  4538                           
  4539                           ;main.c: 381:     update_lcd(0);
  4540  012B3E  0E00               	movlw	0
  4541  012B40  6EE6               	movwf	postinc1,c
  4542  012B42  ECBD  F0C3         	call	_update_lcd	;wreg free
  4543                           
  4544                           ;main.c: 382:    } else {
  4545  012B46  D4C6               	goto	l12298
  4546  012B48                     l12392:
  4547                           
  4548                           ;main.c: 383:     set_vterm(2);
  4549  012B48  0E02               	movlw	2
  4550  012B4A  6EE6               	movwf	postinc1,c
  4551  012B4C  ECBD  F0D3         	call	_set_vterm	;wreg free
  4552                           
  4553                           ;main.c: 384:     update_lcd(2);
  4554  012B50  0E02               	movlw	2
  4555  012B52  6EE6               	movwf	postinc1,c
  4556  012B54  ECBD  F0C3         	call	_update_lcd	;wreg free
  4557  012B58  D4BD               	goto	l12298
  4558  012B5A                     __end_of_main:
  4559                           	opt callstack 0
  4560                           
  4561 ;; *************** function _static_soc *****************
  4562 ;; Defined at:
  4563 ;;		line 90 in file "mbmc.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;		None
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;		None
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1  [STACK] void 
  4570 ;; Registers used:
  4571 ;;		wreg, status,2
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 3F/1
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4581 ;;Total ram usage:        0 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:   15
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_main
  4588 ;; This function uses a reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text1
  4592  01A5E0                     __ptext1:
  4593                           	opt callstack 0
  4594  01A5E0                     _static_soc:
  4595                           	opt callstack 15
  4596                           
  4597                           ;mbmc.c: 92:  C.runtime = 120;
  4598                           
  4599                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4600                           ;incstack = 0
  4601  01A5E0  0E00               	movlw	0
  4602  01A5E2  0101               	movlb	1	; () banked
  4603  01A5E4  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
  4604  01A5E6  0E78               	movlw	120
  4605  01A5E8  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
  4606                           
  4607                           ;mbmc.c: 93:  C.soc = 100;
  4608  01A5EA  0E00               	movlw	0
  4609  01A5EC  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
  4610  01A5EE  0E64               	movlw	100
  4611  01A5F0  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
  4612                           
  4613                           ; BSR set to: 1
  4614                           ;mbmc.c: 94:  C.dynamic_ah = C.bank_ah;
  4615  01A5F2  C188  F18C         	movff	_C+136,_C+140	;volatile
  4616  01A5F6  C189  F18D         	movff	_C+137,_C+141	;volatile
  4617  01A5FA  C18A  F18E         	movff	_C+138,_C+142	;volatile
  4618  01A5FE  C18B  F18F         	movff	_C+139,_C+143	;volatile
  4619                           
  4620                           ; BSR set to: 1
  4621                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4622  01A602  0012               	return		;funcret
  4623  01A604                     __end_of_static_soc:
  4624                           	opt callstack 0
  4625                           
  4626 ;; *************** function _start_switch_handler *****************
  4627 ;; Defined at:
  4628 ;;		line 119 in file "dio.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;		None
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1  [STACK] void 
  4635 ;; Registers used:
  4636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  4637 ;; Tracked objects:
  4638 ;;		On entry : 1/0
  4639 ;;		On exit  : 3F/39
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4646 ;;Total ram usage:        0 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:   16
  4649 ;; This function calls:
  4650 ;;		_INT1_SetInterruptHandler
  4651 ;; This function is called by:
  4652 ;;		_main
  4653 ;; This function uses a reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text2
  4657  01A6FE                     __ptext2:
  4658                           	opt callstack 0
  4659  01A6FE                     _start_switch_handler:
  4660                           	opt callstack 14
  4661                           
  4662                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  4663                           
  4664                           ; BSR set to: 1
  4665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4666                           ;incstack = 0
  4667  01A6FE  0139               	movlb	57	; () banked
  4668  01A700  9195               	bcf	149,0,b	;volatile
  4669                           
  4670                           ; BSR set to: 57
  4671                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  4672  01A702  0E90               	movlw	low _switch_handler
  4673  01A704  6EE6               	movwf	postinc1,c
  4674  01A706  0E80               	movlw	high _switch_handler
  4675  01A708  6EE6               	movwf	postinc1,c
  4676  01A70A  0E01               	movlw	low (_switch_handler shr (0+16))
  4677  01A70C  6EE6               	movwf	postinc1,c
  4678  01A70E  EC63  F0D2         	call	_INT1_SetInterruptHandler	;wreg free
  4679                           
  4680                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  4681  01A712  0E02               	movlw	2
  4682  01A714  0102               	movlb	2	; () banked
  4683  01A716  6FDF               	movwf	(_S+35)& (0+255),b	;volatile
  4684                           
  4685                           ; BSR set to: 2
  4686                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  4687  01A718  0139               	movlb	57	; () banked
  4688  01A71A  8195               	bsf	149,0,b	;volatile
  4689                           
  4690                           ; BSR set to: 57
  4691                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  4692  01A71C  0012               	return		;funcret
  4693  01A71E                     __end_of_start_switch_handler:
  4694                           	opt callstack 0
  4695                           
  4696 ;; *************** function _start_adc_scan *****************
  4697 ;; Defined at:
  4698 ;;		line 33 in file "daq.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;		None
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;		None
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  1  [STACK] _Bool 
  4705 ;; Registers used:
  4706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 1/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4716 ;;Total ram usage:        0 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:   16
  4719 ;; This function calls:
  4720 ;;		_ADCC_DischargeSampleCapacitor
  4721 ;;		_ADCC_SetADIInterruptHandler
  4722 ;;		_ADCC_SetADTIInterruptHandler
  4723 ;;		_ADCC_StartConversion
  4724 ;; This function is called by:
  4725 ;;		_main
  4726 ;; This function uses a reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text3
  4730  01989C                     __ptext3:
  4731                           	opt callstack 0
  4732  01989C                     _start_adc_scan:
  4733                           	opt callstack 14
  4734                           
  4735                           ;daq.c: 35:  if (R.done)
  4736                           
  4737                           ; BSR set to: 57
  4738                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4739                           ;incstack = 0
  4740  01989C  0100               	movlb	0	; () banked
  4741  01989E  51D1               	movf	(_R+39)& (0+255),w,b	;volatile
  4742  0198A0  A4D8               	btfss	status,2,c
  4743  0198A2  0012               	return	
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;daq.c: 38:  R.scan_index = 0;
  4747  0198A4  6BCE               	clrf	(_R+36)& (0+255),b	;volatile
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  4751  0198A6  013A               	movlb	58	; () banked
  4752  0198A8  5140               	movf	64,w,b	;volatile
  4753  0198AA  006E F940  F001    	movff	14928,btemp	;volatile
  4754  0198B0  6A02               	clrf	(btemp+1)^0,c
  4755  0198B2  0060  F004  F002   	movff	btemp,btemp+1
  4756  0198B8  6A01               	clrf	btemp^0,c
  4757  0198BA  2601               	addwf	btemp^0,f,c
  4758  0198BC  0E00               	movlw	0
  4759  0198BE  2202               	addwfc	(btemp+1)^0,f,c
  4760  0198C0  0E77               	movlw	119
  4761  0198C2  1401               	andwf	btemp^0,w,c
  4762  0198C4  0100               	movlb	0	; () banked
  4763  0198C6  6FCF               	movwf	(_R+37)& (0+255),b	;volatile
  4764  0198C8  0E3C               	movlw	60
  4765  0198CA  1402               	andwf	(btemp+1)^0,w,c
  4766  0198CC  6FD0               	movwf	(_R+38)& (0+255),b	;volatile
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  4770  0198CE  0EBA               	movlw	low _adc_int_handler
  4771  0198D0  6EE6               	movwf	postinc1,c
  4772  0198D2  0EA9               	movlw	high _adc_int_handler
  4773  0198D4  6EE6               	movwf	postinc1,c
  4774  0198D6  0E01               	movlw	low (_adc_int_handler shr (0+16))
  4775  0198D8  6EE6               	movwf	postinc1,c
  4776  0198DA  EC9F  F0D2         	call	_ADCC_SetADIInterruptHandler	;wreg free
  4777                           
  4778                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  4779  0198DE  0E78               	movlw	low _adc_int_t_handler
  4780  0198E0  6EE6               	movwf	postinc1,c
  4781  0198E2  0E96               	movlw	high _adc_int_t_handler
  4782  0198E4  6EE6               	movwf	postinc1,c
  4783  0198E6  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  4784  0198E8  6EE6               	movwf	postinc1,c
  4785  0198EA  EC8B  F0D2         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  4786                           
  4787                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  4788  0198EE  ECB1  F0D4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  4789                           
  4790                           ; BSR set to: 62
  4791                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  4792  0198F2  0100               	movlb	0	; () banked
  4793  0198F4  51CE               	movf	(_R+36)& (0+255),w,b	;volatile
  4794  0198F6  0B0F               	andlw	15
  4795  0198F8  6EE6               	movwf	postinc1,c
  4796  0198FA  EC56  F0D4         	call	_ADCC_StartConversion	;wreg free
  4797                           
  4798                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4799  0198FE  0012               	return		;funcret
  4800  019900                     __end_of_start_adc_scan:
  4801                           	opt callstack 0
  4802                           
  4803 ;; *************** function _ADCC_StartConversion *****************
  4804 ;; Defined at:
  4805 ;;		line 128 in file "mcc_generated_files/adcc.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  channel         1  [STACK] enum E16136
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;		None
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1  [STACK] void 
  4812 ;; Registers used:
  4813 ;;		fsr1l, fsr1h
  4814 ;; Tracked objects:
  4815 ;;		On entry : 3F/0
  4816 ;;		On exit  : 3F/3E
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4823 ;;Total ram usage:        0 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:   15
  4826 ;; This function calls:
  4827 ;;		Nothing
  4828 ;; This function is called by:
  4829 ;;		_start_adc_scan
  4830 ;;		_adc_int_t_handler
  4831 ;; This function uses a reentrant model
  4832 ;;
  4833                           
  4834                           	psect	text4
  4835  01A8AC                     __ptext4:
  4836                           	opt callstack 0
  4837  01A8AC                     _ADCC_StartConversion:
  4838                           	opt callstack 0
  4839                           
  4840                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  4841                           ;stkvar	_channel @ sp[(0)+-1]
  4842                           
  4843                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4844                           ;incstack = 0
  4845 ;; hardware stack exceeded
  4846  01A8AC  0EFF               	movlw	-1
  4847  01A8AE  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  4848                           
  4849                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  4850  01A8B4  013E               	movlb	62	; () banked
  4851  01A8B6  8FF8               	bsf	248,7,b	;volatile
  4852                           
  4853                           ; BSR set to: 62
  4854                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  4855  01A8B8  81F8               	bsf	248,0,b	;volatile
  4856                           
  4857                           ; BSR set to: 62
  4858                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  4859  01A8BA  52E5               	movf	postdec1,f,c
  4860  01A8BC  0012               	return		;funcret
  4861  01A8BE                     __end_of_ADCC_StartConversion:
  4862                           	opt callstack 0
  4863                           
  4864 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  4865 ;; Defined at:
  4866 ;;		line 189 in file "mcc_generated_files/adcc.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;		None
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1  [STACK] void 
  4873 ;; Registers used:
  4874 ;;		wreg, status,2
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 3F/3E
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4884 ;;Total ram usage:        0 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:   15
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		_start_adc_scan
  4891 ;;		_adc_int_t_handler
  4892 ;; This function uses a reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text5
  4896  01A962                     __ptext5:
  4897                           	opt callstack 0
  4898  01A962                     _ADCC_DischargeSampleCapacitor:
  4899                           	opt callstack 0
  4900                           
  4901                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  4902                           
  4903                           ; BSR set to: 62
  4904                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4905                           ;incstack = 0
  4906 ;; hardware stack exceeded
  4907  01A962  0E3B               	movlw	59
  4908  01A964  013E               	movlb	62	; () banked
  4909  01A966  6FF1               	movwf	241,b	;volatile
  4910                           
  4911                           ; BSR set to: 62
  4912                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  4913  01A968  0012               	return		;funcret
  4914  01A96A                     __end_of_ADCC_DischargeSampleCapacitor:
  4915                           	opt callstack 0
  4916                           
  4917 ;; *************** function _srand *****************
  4918 ;; Defined at:
  4919 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;  s               2  [STACK] unsigned int 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;		None
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1  [STACK] void 
  4926 ;; Registers used:
  4927 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 3F/3
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4937 ;;Total ram usage:        0 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:   15
  4940 ;; This function calls:
  4941 ;;		Nothing
  4942 ;; This function is called by:
  4943 ;;		_main
  4944 ;; This function uses a reentrant model
  4945 ;;
  4946                           
  4947                           	psect	text6
  4948  01A0CE                     __ptext6:
  4949                           	opt callstack 0
  4950  01A0CE                     _srand:
  4951                           	opt callstack 15
  4952                           
  4953                           ;stkvar	_s @ sp[(0)+-2]
  4954                           
  4955                           ; BSR set to: 62
  4956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4957                           ;incstack = 0
  4958  01A0CE  0EFE               	movlw	-2
  4959  01A0D0  50E3               	movf	plusw1,w,c
  4960  01A0D2  0FFF               	addlw	255
  4961  01A0D4  6E0B               	movwf	(btemp+10)^0,c
  4962  01A0D6  0EFF               	movlw	-1
  4963  01A0D8  006F FF8C  F00C    	movff	plusw1,btemp+11
  4964  01A0DE  0EFF               	movlw	255
  4965  01A0E0  220C               	addwfc	(btemp+11)^0,f,c
  4966  01A0E2  0060  F02C  F3E4   	movff	btemp+10,_seed
  4967  01A0E8  0060  F030  F3E5   	movff	btemp+11,_seed+1
  4968  01A0EE  0103               	movlb	3	; () banked
  4969  01A0F0  6BE6               	clrf	(_seed+2)& (0+255),b
  4970  01A0F2  6BE7               	clrf	(_seed+3)& (0+255),b
  4971  01A0F4  6BE8               	clrf	(_seed+4)& (0+255),b
  4972  01A0F6  6BE9               	clrf	(_seed+5)& (0+255),b
  4973  01A0F8  6BEA               	clrf	(_seed+6)& (0+255),b
  4974  01A0FA  6BEB               	clrf	(_seed+7)& (0+255),b
  4975                           
  4976                           ; BSR set to: 3
  4977                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  4978  01A0FC  52E5               	movf	postdec1,f,c
  4979  01A0FE  52E5               	movf	postdec1,f,c
  4980  01A100  0012               	return		;funcret
  4981  01A102                     __end_of_srand:
  4982                           	opt callstack 0
  4983                           
  4984 ;; *************** function _set_load_relay_two *****************
  4985 ;; Defined at:
  4986 ;;		line 102 in file "mbmc.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  mode            1  [STACK] _Bool 
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1  [STACK] void 
  4993 ;; Registers used:
  4994 ;;		wreg, fsr1l, fsr1h
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5004 ;;Total ram usage:        0 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; Hardware stack levels required when called:   15
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_main
  5011 ;; This function uses a reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text7
  5015  01A8BE                     __ptext7:
  5016                           	opt callstack 0
  5017  01A8BE                     _set_load_relay_two:
  5018                           	opt callstack 15
  5019                           
  5020                           ;mbmc.c: 102: void set_load_relay_two(_Bool mode);mbmc.c: 103: {;mbmc.c: 104:  LATDbits.
      +                          LATD5 = mode;
  5021                           ;stkvar	_mode @ sp[(0)+-1]
  5022                           
  5023                           ; BSR set to: 3
  5024                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5025                           ;incstack = 0
  5026  01A8BE  0EFF               	movlw	-1
  5027  01A8C0  B0E3               	btfsc	plusw1,0,c
  5028  01A8C2  D002               	bra	u9465
  5029  01A8C4  9ABD               	bcf	189,5,c	;volatile
  5030  01A8C6  D001               	bra	u9466
  5031  01A8C8                     u9465:
  5032  01A8C8  8ABD               	bsf	189,5,c	;volatile
  5033  01A8CA                     u9466:
  5034                           
  5035                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5036  01A8CA  52E5               	movf	postdec1,f,c
  5037  01A8CC  0012               	return		;funcret
  5038  01A8CE                     __end_of_set_load_relay_two:
  5039                           	opt callstack 0
  5040                           
  5041 ;; *************** function _set_load_relay_one *****************
  5042 ;; Defined at:
  5043 ;;		line 97 in file "mbmc.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  mode            1  [STACK] _Bool 
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1  [STACK] void 
  5050 ;; Registers used:
  5051 ;;		wreg, fsr1l, fsr1h
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5061 ;;Total ram usage:        0 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:   15
  5064 ;; This function calls:
  5065 ;;		Nothing
  5066 ;; This function is called by:
  5067 ;;		_main
  5068 ;; This function uses a reentrant model
  5069 ;;
  5070                           
  5071                           	psect	text8
  5072  01A8CE                     __ptext8:
  5073                           	opt callstack 0
  5074  01A8CE                     _set_load_relay_one:
  5075                           	opt callstack 15
  5076                           
  5077                           ;mbmc.c: 97: void set_load_relay_one(_Bool mode);mbmc.c: 98: {;mbmc.c: 99:  LATDbits.LAT
      +                          D4 = mode;
  5078                           ;stkvar	_mode @ sp[(0)+-1]
  5079                           
  5080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5081                           ;incstack = 0
  5082  01A8CE  0EFF               	movlw	-1
  5083  01A8D0  B0E3               	btfsc	plusw1,0,c
  5084  01A8D2  D002               	bra	u9455
  5085  01A8D4  98BD               	bcf	189,4,c	;volatile
  5086  01A8D6  D001               	bra	u9456
  5087  01A8D8                     u9455:
  5088  01A8D8  88BD               	bsf	189,4,c	;volatile
  5089  01A8DA                     u9456:
  5090                           
  5091                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5092  01A8DA  52E5               	movf	postdec1,f,c
  5093  01A8DC  0012               	return		;funcret
  5094  01A8DE                     __end_of_set_load_relay_one:
  5095                           	opt callstack 0
  5096                           
  5097 ;; *************** function _init_port_dma *****************
  5098 ;; Defined at:
  5099 ;;		line 90 in file "eadog.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;		None
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;		None
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  1  [STACK] void 
  5106 ;; Registers used:
  5107 ;;		wreg, status,2
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/2
  5110 ;;		On exit  : 3F/3B
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5117 ;;Total ram usage:        0 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; Hardware stack levels required when called:   15
  5120 ;; This function calls:
  5121 ;;		Nothing
  5122 ;; This function is called by:
  5123 ;;		_main
  5124 ;; This function uses a reentrant model
  5125 ;;
  5126                           
  5127                           	psect	text9
  5128  01A16A                     __ptext9:
  5129                           	opt callstack 0
  5130  01A16A                     _init_port_dma:
  5131                           	opt callstack 15
  5132                           
  5133                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  5134                           
  5135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5136                           ;incstack = 0
  5137  01A16A  0E3F               	movlw	-193
  5138  01A16C  013B               	movlb	59	; () banked
  5139  01A16E  17DD               	andwf	221,f,b	;volatile
  5140                           
  5141                           ; BSR set to: 59
  5142                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  5143  01A170  9BDD               	bcf	221,5,b	;volatile
  5144                           
  5145                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  5146  01A172  51DD               	movf	221,w,b	;volatile
  5147  01A174  0BF9               	andlw	-7
  5148  01A176  0902               	iorlw	2
  5149  01A178  6FDD               	movwf	221,b	;volatile
  5150                           
  5151                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  5152  01A17A  0EE7               	movlw	-25
  5153  01A17C  17DD               	andwf	221,f,b	;volatile
  5154                           
  5155                           ; BSR set to: 59
  5156                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  5157  01A17E  81DD               	bsf	221,0,b	;volatile
  5158                           
  5159                           ; BSR set to: 59
  5160                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  5161  01A180  9DDC               	bcf	220,6,b	;volatile
  5162                           
  5163                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  5164  01A182  0E3D               	movlw	61
  5165  01A184  6FD1               	movwf	209,b	;volatile
  5166  01A186  0EEA               	movlw	234
  5167  01A188  6FD0               	movwf	208,b	;volatile
  5168                           
  5169                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  5170  01A18A  0EFF               	movlw	low _port_data
  5171  01A18C  6FD9               	movwf	217,b	;volatile
  5172  01A18E  0E05               	movlw	high _port_data
  5173  01A190  6FDA               	movwf	218,b	;volatile
  5174  01A192  0E00               	movlw	low (_port_data shr (0+16))
  5175  01A194  6FDB               	movwf	219,b	;volatile
  5176                           
  5177                           ; BSR set to: 59
  5178                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  5179  01A196  9BDC               	bcf	220,5,b	;volatile
  5180                           
  5181                           ; BSR set to: 59
  5182                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5183  01A198  0012               	return		;funcret
  5184  01A19A                     __end_of_init_port_dma:
  5185                           	opt callstack 0
  5186                           
  5187 ;; *************** function _init_display *****************
  5188 ;; Defined at:
  5189 ;;		line 38 in file "eadog.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;		None
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;		None
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1  [STACK] void 
  5196 ;; Registers used:
  5197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5198 ;; Tracked objects:
  5199 ;;		On entry : 3F/3B
  5200 ;;		On exit  : 3F/3D
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5207 ;;Total ram usage:        0 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:   17
  5210 ;; This function calls:
  5211 ;;		_ringBufS_init
  5212 ;;		_send_lcd_cmd
  5213 ;;		_send_lcd_cmd_long
  5214 ;;		_wdtdelay
  5215 ;; This function is called by:
  5216 ;;		_main
  5217 ;; This function uses a reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text10
  5221  018A96                     __ptext10:
  5222                           	opt callstack 0
  5223  018A96                     _init_display:
  5224                           	opt callstack 13
  5225                           
  5226                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  5227                           
  5228                           ; BSR set to: 59
  5229                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5230                           ;incstack = 0
  5231  018A96  0E43               	movlw	low _ring_buf1
  5232  018A98  0100               	movlb	0	; () banked
  5233  018A9A  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  5234  018A9C  0E04               	movlw	high _ring_buf1
  5235  018A9E  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  5236                           
  5237                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  5238  018AA0  0E00               	movlw	low _ring_buf2
  5239  018AA2  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  5240  018AA4  0E04               	movlw	high _ring_buf2
  5241  018AA6  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  5245  018AA8  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  5246  018AAE  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  5247  018AB4  ECC3  F0D1         	call	_ringBufS_init	;wreg free
  5248                           
  5249                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  5250  018AB8  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  5251  018ABE  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  5252  018AC4  ECC3  F0D1         	call	_ringBufS_init	;wreg free
  5253                           
  5254                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  5255  018AC8  84BE               	bsf	190,2,c	;volatile
  5256  018ACA  84BC               	bsf	188,2,c	;volatile
  5257                           
  5258                           ;eadog.c: 59:  wdtdelay(350000);
  5259  018ACC  0E30               	movlw	48
  5260  018ACE  6EE6               	movwf	postinc1,c
  5261  018AD0  0E57               	movlw	87
  5262  018AD2  6EE6               	movwf	postinc1,c
  5263  018AD4  0E05               	movlw	5
  5264  018AD6  6EE6               	movwf	postinc1,c
  5265  018AD8  0E00               	movlw	0
  5266  018ADA  6EE6               	movwf	postinc1,c
  5267  018ADC  EC11  F0CD         	call	_wdtdelay	;wreg free
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  5271  018AE0  0E39               	movlw	57
  5272  018AE2  6EE6               	movwf	postinc1,c
  5273  018AE4  ECAF  F0D1         	call	_send_lcd_cmd	;wreg free
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  5277  018AE8  0E1D               	movlw	29
  5278  018AEA  6EE6               	movwf	postinc1,c
  5279  018AEC  ECAF  F0D1         	call	_send_lcd_cmd	;wreg free
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  5283  018AF0  0E50               	movlw	80
  5284  018AF2  6EE6               	movwf	postinc1,c
  5285  018AF4  ECAF  F0D1         	call	_send_lcd_cmd	;wreg free
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  5289  018AF8  0E6C               	movlw	108
  5290  018AFA  6EE6               	movwf	postinc1,c
  5291  018AFC  ECAF  F0D1         	call	_send_lcd_cmd	;wreg free
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  5295  018B00  0E76               	movlw	118
  5296  018B02  6EE6               	movwf	postinc1,c
  5297  018B04  ECAF  F0D1         	call	_send_lcd_cmd	;wreg free
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  5301  018B08  0E38               	movlw	56
  5302  018B0A  6EE6               	movwf	postinc1,c
  5303  018B0C  EC9B  F0D1         	call	_send_lcd_cmd_long	;wreg free
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  5307  018B10  0E0F               	movlw	15
  5308  018B12  6EE6               	movwf	postinc1,c
  5309  018B14  ECAF  F0D1         	call	_send_lcd_cmd	;wreg free
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  5313  018B18  0E01               	movlw	1
  5314  018B1A  6EE6               	movwf	postinc1,c
  5315  018B1C  EC9B  F0D1         	call	_send_lcd_cmd_long	;wreg free
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  5319  018B20  0E02               	movlw	2
  5320  018B22  6EE6               	movwf	postinc1,c
  5321  018B24  ECAF  F0D1         	call	_send_lcd_cmd	;wreg free
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  5325  018B28  0E06               	movlw	6
  5326  018B2A  6EE6               	movwf	postinc1,c
  5327  018B2C  ECAF  F0D1         	call	_send_lcd_cmd	;wreg free
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;eadog.c: 70:  wdtdelay(30);
  5331  018B30  0E1E               	movlw	30
  5332  018B32  6EE6               	movwf	postinc1,c
  5333  018B34  0E00               	movlw	0
  5334  018B36  6EE6               	movwf	postinc1,c
  5335  018B38  0E00               	movlw	0
  5336  018B3A  6EE6               	movwf	postinc1,c
  5337  018B3C  0E00               	movlw	0
  5338  018B3E  6EE6               	movwf	postinc1,c
  5339  018B40  EC11  F0CD         	call	_wdtdelay	;wreg free
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  5343  018B44  0E02               	movlw	2
  5344  018B46  013D               	movlb	61	; () banked
  5345  018B48  6F16               	movwf	22,b	;volatile
  5346                           
  5347                           ; BSR set to: 61
  5348                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  5349  018B4A  0E40               	movlw	64
  5350  018B4C  6F15               	movwf	21,b	;volatile
  5351                           
  5352                           ; BSR set to: 61
  5353                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  5354  018B4E  0E83               	movlw	131
  5355  018B50  6F14               	movwf	20,b	;volatile
  5356                           
  5357                           ; BSR set to: 61
  5358                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  5359  018B52  931A               	bcf	26,1,b	;volatile
  5360                           
  5361                           ; BSR set to: 61
  5362                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  5363  018B54  0E3F               	movlw	-193
  5364  018B56  013B               	movlb	59	; () banked
  5365  018B58  17FD               	andwf	253,f,b	;volatile
  5366                           
  5367                           ; BSR set to: 59
  5368                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  5369  018B5A  9BFD               	bcf	253,5,b	;volatile
  5370                           
  5371                           ; BSR set to: 59
  5372                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  5373  018B5C  51FD               	movf	253,w,b	;volatile
  5374  018B5E  0BF9               	andlw	-7
  5375  018B60  0902               	iorlw	2
  5376  018B62  6FFD               	movwf	253,b	;volatile
  5377                           
  5378                           ; BSR set to: 59
  5379                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  5380  018B64  0EE7               	movlw	-25
  5381  018B66  17FD               	andwf	253,f,b	;volatile
  5382                           
  5383                           ; BSR set to: 59
  5384                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  5385  018B68  81FD               	bsf	253,0,b	;volatile
  5386                           
  5387                           ; BSR set to: 59
  5388                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  5389  018B6A  0E43               	movlw	low _ring_buf1
  5390  018B6C  6FF9               	movwf	249,b	;volatile
  5391  018B6E  0E04               	movlw	high _ring_buf1
  5392  018B70  6FFA               	movwf	250,b	;volatile
  5393  018B72  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5394  018B74  6FFB               	movwf	251,b	;volatile
  5395                           
  5396                           ; BSR set to: 59
  5397                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  5398  018B76  9BFC               	bcf	252,5,b	;volatile
  5399                           
  5400                           ; BSR set to: 59
  5401                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  5402  018B78  013D               	movlb	61	; () banked
  5403  018B7A  831A               	bsf	26,1,b	;volatile
  5404                           
  5405                           ; BSR set to: 61
  5406                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  5407  018B7C  94BE               	bcf	190,2,c	;volatile
  5408                           
  5409                           ; BSR set to: 61
  5410                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5411  018B7E  0012               	return		;funcret
  5412  018B80                     __end_of_init_display:
  5413                           	opt callstack 0
  5414                           
  5415 ;; *************** function _send_lcd_cmd_long *****************
  5416 ;; Defined at:
  5417 ;;		line 129 in file "eadog.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  cmd             1  [STACK] const unsigned char 
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1  [STACK] void 
  5424 ;; Registers used:
  5425 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5426 ;; Tracked objects:
  5427 ;;		On entry : 3F/0
  5428 ;;		On exit  : 3F/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5435 ;;Total ram usage:        0 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:   16
  5438 ;; This function calls:
  5439 ;;		_SPI1_Exchange8bit
  5440 ;;		_wdtdelay
  5441 ;; This function is called by:
  5442 ;;		_init_display
  5443 ;; This function uses a reentrant model
  5444 ;;
  5445                           
  5446                           	psect	text11
  5447  01A336                     __ptext11:
  5448                           	opt callstack 0
  5449  01A336                     _send_lcd_cmd_long:
  5450                           	opt callstack 13
  5451                           
  5452                           ; BSR set to: 61
  5453                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5454                           ;incstack = 0
  5455                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  5456  01A336  92BC               	bcf	188,1,c	;volatile
  5457                           
  5458                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  5459  01A338  94BC               	bcf	188,2,c	;volatile
  5460                           
  5461                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  5462                           ;stkvar	_cmd @ sp[(0)+-1]
  5463  01A33A  0EFF               	movlw	-1
  5464  01A33C  50E3               	movf	plusw1,w,c
  5465  01A33E  6EE6               	movwf	postinc1,c
  5466  01A340  EC9F  F0D3         	call	_SPI1_Exchange8bit	;wreg free
  5467                           
  5468                           ; BSR set to: 57
  5469                           ;eadog.c: 134:  wdtdelay(800);
  5470  01A344  0E20               	movlw	32
  5471  01A346  6EE6               	movwf	postinc1,c
  5472  01A348  0E03               	movlw	3
  5473  01A34A  6EE6               	movwf	postinc1,c
  5474  01A34C  0E00               	movlw	0
  5475  01A34E  6EE6               	movwf	postinc1,c
  5476  01A350  0E00               	movlw	0
  5477  01A352  6EE6               	movwf	postinc1,c
  5478  01A354  EC11  F0CD         	call	_wdtdelay	;wreg free
  5479                           
  5480                           ; BSR set to: 0
  5481  01A358  82BC               	bsf	188,1,c	;volatile
  5482                           
  5483                           ; BSR set to: 0
  5484                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5485  01A35A  52E5               	movf	postdec1,f,c
  5486  01A35C  0012               	return		;funcret
  5487  01A35E                     __end_of_send_lcd_cmd_long:
  5488                           	opt callstack 0
  5489                           
  5490 ;; *************** function _send_lcd_cmd *****************
  5491 ;; Defined at:
  5492 ;;		line 117 in file "eadog.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  cmd             1  [STACK] const unsigned char 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1  [STACK] void 
  5499 ;; Registers used:
  5500 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5501 ;; Tracked objects:
  5502 ;;		On entry : 3F/0
  5503 ;;		On exit  : 3F/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5510 ;;Total ram usage:        0 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:   16
  5513 ;; This function calls:
  5514 ;;		_SPI1_Exchange8bit
  5515 ;;		_wdtdelay
  5516 ;; This function is called by:
  5517 ;;		_init_display
  5518 ;; This function uses a reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text12
  5522  01A35E                     __ptext12:
  5523                           	opt callstack 0
  5524  01A35E                     _send_lcd_cmd:
  5525                           	opt callstack 13
  5526                           
  5527                           ; BSR set to: 0
  5528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5529                           ;incstack = 0
  5530                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  5531  01A35E  92BC               	bcf	188,1,c	;volatile
  5532                           
  5533                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  5534  01A360  94BC               	bcf	188,2,c	;volatile
  5535                           
  5536                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  5537                           ;stkvar	_cmd @ sp[(0)+-1]
  5538  01A362  0EFF               	movlw	-1
  5539  01A364  50E3               	movf	plusw1,w,c
  5540  01A366  6EE6               	movwf	postinc1,c
  5541  01A368  EC9F  F0D3         	call	_SPI1_Exchange8bit	;wreg free
  5542                           
  5543                           ; BSR set to: 57
  5544                           ;eadog.c: 122:  wdtdelay(30);
  5545  01A36C  0E1E               	movlw	30
  5546  01A36E  6EE6               	movwf	postinc1,c
  5547  01A370  0E00               	movlw	0
  5548  01A372  6EE6               	movwf	postinc1,c
  5549  01A374  0E00               	movlw	0
  5550  01A376  6EE6               	movwf	postinc1,c
  5551  01A378  0E00               	movlw	0
  5552  01A37A  6EE6               	movwf	postinc1,c
  5553  01A37C  EC11  F0CD         	call	_wdtdelay	;wreg free
  5554                           
  5555                           ; BSR set to: 0
  5556  01A380  82BC               	bsf	188,1,c	;volatile
  5557                           
  5558                           ; BSR set to: 0
  5559                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5560  01A382  52E5               	movf	postdec1,f,c
  5561  01A384  0012               	return		;funcret
  5562  01A386                     __end_of_send_lcd_cmd:
  5563                           	opt callstack 0
  5564                           
  5565 ;; *************** function _SPI1_Exchange8bit *****************
  5566 ;; Defined at:
  5567 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  data            1  [STACK] unsigned char 
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;		None
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  1  [STACK] unsigned char 
  5574 ;; Registers used:
  5575 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 3F/39
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5585 ;;Total ram usage:        0 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:   15
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_send_lcd_cmd
  5592 ;;		_send_lcd_cmd_long
  5593 ;; This function uses a reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text13
  5597  01A73E                     __ptext13:
  5598                           	opt callstack 0
  5599  01A73E                     _SPI1_Exchange8bit:
  5600                           	opt callstack 13
  5601                           
  5602                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  5603                           
  5604                           ; BSR set to: 0
  5605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5606                           ;incstack = 0
  5607  01A73E  0E01               	movlw	1
  5608  01A740  013D               	movlb	61	; () banked
  5609  01A742  6F12               	movwf	18,b	;volatile
  5610                           
  5611                           ; BSR set to: 61
  5612                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  5613                           ;stkvar	_data @ sp[(0)+-1]
  5614  01A744  0EFF               	movlw	-1
  5615  01A746  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5616  01A74C                     l807:
  5617                           
  5618                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5619  01A74C  0139               	movlb	57	; () banked
  5620  01A74E  A9A2               	btfss	162,4,b	;volatile
  5621  01A750  D7FD               	goto	l807
  5622                           
  5623                           ; BSR set to: 57
  5624                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5625  01A752  006F F440  F001    	movff	15632,btemp	;volatile
  5626                           
  5627                           ; BSR set to: 57
  5628                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5629  01A758  52E5               	movf	postdec1,f,c
  5630  01A75A  0012               	return		;funcret
  5631  01A75C                     __end_of_SPI1_Exchange8bit:
  5632                           	opt callstack 0
  5633                           
  5634 ;; *************** function _ringBufS_init *****************
  5635 ;; Defined at:
  5636 ;;		line 22 in file "ringbufs.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  _this           2  [STACK] PTR volatile struct ring
  5639 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;		None
  5642 ;; Return value:  Size  Location     Type
  5643 ;;                  1  [STACK] void 
  5644 ;; Registers used:
  5645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5655 ;;Total ram usage:        0 bytes
  5656 ;; Hardware stack levels used:    1
  5657 ;; Hardware stack levels required when called:   16
  5658 ;; This function calls:
  5659 ;;		_memset
  5660 ;; This function is called by:
  5661 ;;		_init_display
  5662 ;; This function uses a reentrant model
  5663 ;;
  5664                           
  5665                           	psect	text14
  5666  01A386                     __ptext14:
  5667                           	opt callstack 0
  5668  01A386                     _ringBufS_init:
  5669                           	opt callstack 13
  5670                           
  5671                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5672                           
  5673                           ; BSR set to: 57
  5674                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5675                           ;incstack = 0
  5676  01A386  0E43               	movlw	67
  5677  01A388  6EE6               	movwf	postinc1,c
  5678  01A38A  0E00               	movlw	0
  5679  01A38C  6EE6               	movwf	postinc1,c
  5680  01A38E  0E00               	movlw	0
  5681  01A390  6EE6               	movwf	postinc1,c
  5682  01A392  0E00               	movlw	0
  5683  01A394  6EE6               	movwf	postinc1,c
  5684                           
  5685                           ;stkvar	__this @ sp[(-4)+-2]
  5686  01A396  0EFA               	movlw	-6
  5687  01A398  006F FF8F FFE6     	movff	plusw1,postinc1
  5688  01A39E  006F FF8F FFE6     	movff	plusw1,postinc1
  5689  01A3A4  EC3A  F0AF         	call	_memset	;wreg free
  5690                           
  5691                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5692  01A3A8  52E5               	movf	postdec1,f,c
  5693  01A3AA  52E5               	movf	postdec1,f,c
  5694  01A3AC  0012               	return		;funcret
  5695  01A3AE                     __end_of_ringBufS_init:
  5696                           	opt callstack 0
  5697                           
  5698 ;; *************** function _init_bsoc *****************
  5699 ;; Defined at:
  5700 ;;		line 87 in file "bsoc.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;		None
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1  [STACK] void 
  5707 ;; Registers used:
  5708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  5709 ;; Tracked objects:
  5710 ;;		On entry : 3F/1
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5718 ;;Total ram usage:        0 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; Hardware stack levels required when called:   18
  5721 ;; This function calls:
  5722 ;;		_TMR3_SetInterruptHandler
  5723 ;;		_Volts_to_SOC
  5724 ;;		___fldiv
  5725 ;;		___flmul
  5726 ;;		___fltol
  5727 ;;		___xxtofl
  5728 ;;		_conv_raw_result
  5729 ;; This function is called by:
  5730 ;;		_main
  5731 ;; This function uses a reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text15
  5735  0179CC                     __ptext15:
  5736                           	opt callstack 0
  5737  0179CC                     _init_bsoc:
  5738                           	opt callstack 12
  5739                           
  5740                           ;bsoc.c: 92:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  5741                           
  5742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5743                           ;incstack = 0
  5744  0179CC  0E00               	movlw	0
  5745  0179CE  6EE6               	movwf	postinc1,c
  5746  0179D0  0E00               	movlw	0
  5747  0179D2  6EE6               	movwf	postinc1,c
  5748  0179D4  0E7A               	movlw	122
  5749  0179D6  6EE6               	movwf	postinc1,c
  5750  0179D8  0E44               	movlw	68
  5751  0179DA  6EE6               	movwf	postinc1,c
  5752  0179DC  0E00               	movlw	0
  5753  0179DE  6EE6               	movwf	postinc1,c
  5754  0179E0  0E04               	movlw	4
  5755  0179E2  6EE6               	movwf	postinc1,c
  5756  0179E4  ECA0  F0A3         	call	_conv_raw_result	;wreg free
  5757  0179E8  0060  F007  FFE6   	movff	btemp,postinc1
  5758  0179EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5759  0179F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5760  0179FA  0060  F013  FFE6   	movff	btemp+3,postinc1
  5761  017A00  EC2D  F0BC         	call	___fltol	;wreg free
  5762  017A04  0060  F007  FFE6   	movff	btemp,postinc1
  5763  017A0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5764  017A10  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5765  017A16  0060  F013  FFE6   	movff	btemp+3,postinc1
  5766  017A1C  0E00               	movlw	0
  5767  017A1E  6EE6               	movwf	postinc1,c
  5768  017A20  ECC2  F0B7         	call	___xxtofl	;wreg free
  5769  017A24  0060  F007  FFE6   	movff	btemp,postinc1
  5770  017A2A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5771  017A30  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5772  017A36  0060  F013  FFE6   	movff	btemp+3,postinc1
  5773  017A3C  ECAD  F095         	call	___flmul	;wreg free
  5774  017A40  0060  F007  FFE6   	movff	btemp,postinc1
  5775  017A46  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5776  017A4C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5777  017A52  0060  F013  FFE6   	movff	btemp+3,postinc1
  5778  017A58  EC2D  F0BC         	call	___fltol	;wreg free
  5779  017A5C  0060  F007  FFE6   	movff	btemp,postinc1
  5780  017A62  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5781  017A68  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5782  017A6E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5783  017A74  EC51  F0C9         	call	_Volts_to_SOC	;wreg free
  5784  017A78  0060  F004  F1AA   	movff	btemp,_C+170	;volatile
  5785  017A7E  0060  F008  F1AB   	movff	btemp+1,_C+171	;volatile
  5786                           
  5787                           ;bsoc.c: 93:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  5788  017A84  0060  F623  FFE6   	movff	_C+136,postinc1
  5789  017A8A  0060  F627  FFE6   	movff	_C+137,postinc1
  5790  017A90  0060  F62B  FFE6   	movff	_C+138,postinc1
  5791  017A96  0060  F62F  FFE6   	movff	_C+139,postinc1
  5792  017A9C  0E00               	movlw	0
  5793  017A9E  6EE6               	movwf	postinc1,c
  5794  017AA0  0E00               	movlw	0
  5795  017AA2  6EE6               	movwf	postinc1,c
  5796  017AA4  0EC8               	movlw	200
  5797  017AA6  6EE6               	movwf	postinc1,c
  5798  017AA8  0E42               	movlw	66
  5799  017AAA  6EE6               	movwf	postinc1,c
  5800  017AAC  0101               	movlb	1	; () banked
  5801  017AAE  51AA               	movf	(_C+170)& (0+255),w,b	;volatile
  5802  017AB0  6E09               	movwf	(btemp+8)^0,c
  5803  017AB2  51AB               	movf	(_C+171)& (0+255),w,b	;volatile
  5804  017AB4  6E0A               	movwf	(btemp+9)^0,c
  5805  017AB6  6A0B               	clrf	(btemp+10)^0,c
  5806  017AB8  6A0C               	clrf	(btemp+11)^0,c
  5807  017ABA  0060  F027  FFE6   	movff	btemp+8,postinc1
  5808  017AC0  0060  F02B  FFE6   	movff	btemp+9,postinc1
  5809  017AC6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5810  017ACC  0060  F033  FFE6   	movff	btemp+11,postinc1
  5811  017AD2  0E00               	movlw	0
  5812  017AD4  6EE6               	movwf	postinc1,c
  5813  017AD6  ECC2  F0B7         	call	___xxtofl	;wreg free
  5814  017ADA  0060  F007  FFE6   	movff	btemp,postinc1
  5815  017AE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5816  017AE6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5817  017AEC  0060  F013  FFE6   	movff	btemp+3,postinc1
  5818  017AF2  ECE3  F0A0         	call	___fldiv	;wreg free
  5819  017AF6  0060  F007  FFE6   	movff	btemp,postinc1
  5820  017AFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5821  017B02  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5822  017B08  0060  F013  FFE6   	movff	btemp+3,postinc1
  5823  017B0E  ECAD  F095         	call	___flmul	;wreg free
  5824  017B12  0060  F004  F18C   	movff	btemp,_C+140	;volatile
  5825  017B18  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
  5826  017B1E  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
  5827  017B24  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
  5828                           
  5829                           ;bsoc.c: 94:  TMR3_SetInterruptHandler(calc_bsoc);
  5830  017B2A  0E40               	movlw	low _calc_bsoc
  5831  017B2C  6EE6               	movwf	postinc1,c
  5832  017B2E  0E3B               	movlw	high _calc_bsoc
  5833  017B30  6EE6               	movwf	postinc1,c
  5834  017B32  0E01               	movlw	low (_calc_bsoc shr (0+16))
  5835  017B34  6EE6               	movwf	postinc1,c
  5836  017B36  EC4F  F0D2         	call	_TMR3_SetInterruptHandler	;wreg free
  5837                           
  5838                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5839  017B3A  0012               	return		;funcret
  5840  017B3C                     __end_of_init_bsoc:
  5841                           	opt callstack 0
  5842                           
  5843 ;; *************** function _Volts_to_SOC *****************
  5844 ;; Defined at:
  5845 ;;		line 151 in file "bsoc.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  cvoltage        4  [STACK] unsigned long 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;		None
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  2  [STACK] unsigned short 
  5852 ;; Registers used:
  5853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/1
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5863 ;;Total ram usage:        0 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:   15
  5866 ;; This function calls:
  5867 ;;		Nothing
  5868 ;; This function is called by:
  5869 ;;		_init_bsoc
  5870 ;; This function uses a reentrant model
  5871 ;;
  5872                           
  5873                           	psect	text16
  5874  0192A2                     __ptext16:
  5875                           	opt callstack 0
  5876  0192A2                     _Volts_to_SOC:
  5877                           	opt callstack 14
  5878                           
  5879                           ;bsoc.c: 151: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 152: {;bsoc.c: 153:  stat
      +                          ic uint8_t slot;;bsoc.c: 155:  C.soc = 0;
  5880                           
  5881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5882                           ;incstack = 0
  5883  0192A2  0101               	movlb	1	; () banked
  5884  0192A4  6BAA               	clrf	(_C+170)& (0+255),b	;volatile
  5885  0192A6  6BAB               	clrf	(_C+171)& (0+255),b	;volatile
  5886                           
  5887                           ;bsoc.c: 156:  for (slot = 0; slot < 26; slot++) {
  5888  0192A8  6A2D               	clrf	Volts_to_SOC@slot^0,c
  5889  0192AA                     l9964:
  5890                           
  5891                           ;bsoc.c: 157:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  5892                           ;stkvar	_cvoltage @ sp[(0)+-4]
  5893  0192AA  502D               	movf	Volts_to_SOC@slot^0,w,c
  5894  0192AC  0D08               	mullw	8
  5895  0192AE  0E59               	movlw	low _BVSOC_TABLE
  5896  0192B0  24F3               	addwf	243,w,c
  5897  0192B2  6EF6               	movwf	tblptrl,c
  5898  0192B4  0EFC               	movlw	high _BVSOC_TABLE
  5899  0192B6  20F4               	addwfc	244,w,c
  5900  0192B8  6EF7               	movwf	tblptrh,c
  5901  0192BA                     	if	1	;There are 3 active tblptr bytes
  5902  0192BA  6AF8               	clrf	tblptru,c
  5903  0192BC  0E00               	movlw	low (__mediumconst shr (0+16))
  5904  0192BE  22F8               	addwfc	tblptru,f,c
  5905  0192C0                     	endif
  5906  0192C0  0EFC               	movlw	-4
  5907  0192C2  50E3               	movf	plusw1,w,c
  5908  0192C4  0009               	tblrd		*+
  5909  0192C6  5CF5               	subwf	tablat,w,c
  5910  0192C8  0EFD               	movlw	-3
  5911  0192CA  50E3               	movf	plusw1,w,c
  5912  0192CC  0009               	tblrd		*+
  5913  0192CE  58F5               	subwfb	tablat,w,c
  5914  0192D0  0EFE               	movlw	-2
  5915  0192D2  50E3               	movf	plusw1,w,c
  5916  0192D4  0009               	tblrd		*+
  5917  0192D6  58F5               	subwfb	tablat,w,c
  5918  0192D8  0EFF               	movlw	-1
  5919  0192DA  50E3               	movf	plusw1,w,c
  5920  0192DC  0009               	tblrd		*+
  5921  0192DE  58F5               	subwfb	tablat,w,c
  5922  0192E0  B0D8               	btfsc	status,0,c
  5923  0192E2  D017               	goto	l9968
  5924                           
  5925                           ;bsoc.c: 158:    C.soc = BVSOC_TABLE[slot][1];
  5926  0192E4  502D               	movf	Volts_to_SOC@slot^0,w,c
  5927  0192E6  0D08               	mullw	8
  5928  0192E8  0E04               	movlw	4
  5929  0192EA  26F3               	addwf	243,f,c
  5930  0192EC  0E00               	movlw	0
  5931  0192EE  22F4               	addwfc	244,f,c
  5932  0192F0  0E59               	movlw	low _BVSOC_TABLE
  5933  0192F2  24F3               	addwf	243,w,c
  5934  0192F4  6EF6               	movwf	tblptrl,c
  5935  0192F6  0EFC               	movlw	high _BVSOC_TABLE
  5936  0192F8  20F4               	addwfc	244,w,c
  5937  0192FA  6EF7               	movwf	tblptrh,c
  5938  0192FC                     	if	1	;There are 3 active tblptr bytes
  5939  0192FC  6AF8               	clrf	tblptru,c
  5940  0192FE  0E00               	movlw	low (__mediumconst shr (0+16))
  5941  019300  22F8               	addwfc	tblptru,f,c
  5942  019302                     	endif
  5943  019302  0009               	tblrd		*+
  5944  019304  006F FFD4  F1AA    	movff	tablat,_C+170	;volatile
  5945  01930A  000A               	tblrd		*-
  5946  01930C  006F FFD4  F1AB    	movff	tablat,_C+171	;volatile
  5947  019312                     l9968:
  5948                           
  5949                           ;bsoc.c: 160:  }
  5950  019312  2A2D               	incf	Volts_to_SOC@slot^0,f,c
  5951  019314  0E19               	movlw	25
  5952  019316  642D               	cpfsgt	Volts_to_SOC@slot^0,c
  5953  019318  D7C8               	goto	l9964
  5954                           
  5955                           ;bsoc.c: 162:  return C.soc;
  5956  01931A  EE20  F1AA         	lfsr	2,_C+170	;volatile
  5957  01931E  006F FF78  F001    	movff	postinc2,btemp
  5958  019324  006F FF74  F002    	movff	postdec2,btemp+1
  5959                           
  5960                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  5961  01932A  52E5               	movf	postdec1,f,c
  5962  01932C  52E5               	movf	postdec1,f,c
  5963  01932E  52E5               	movf	postdec1,f,c
  5964  019330  52E5               	movf	postdec1,f,c
  5965  019332  0012               	return		;funcret
  5966  019334                     __end_of_Volts_to_SOC:
  5967                           	opt callstack 0
  5968                           
  5969 ;; *************** function _hid_display *****************
  5970 ;; Defined at:
  5971 ;;		line 17 in file "hid.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  h               1  [STACK] PTR struct H_data
  5974 ;;		 -> H(7), 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;		None
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1  [STACK] PTR struct H_data
  5979 ;; Registers used:
  5980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  5981 ;; Tracked objects:
  5982 ;;		On entry : 3F/1
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5990 ;;Total ram usage:        0 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; Hardware stack levels required when called:   17
  5993 ;; This function calls:
  5994 ;;		_hid_input
  5995 ;; This function is called by:
  5996 ;;		_main
  5997 ;; This function uses a reentrant model
  5998 ;;
  5999                           
  6000                           	psect	text17
  6001  018994                     __ptext17:
  6002                           	opt callstack 0
  6003  018994                     _hid_display:
  6004                           	opt callstack 13
  6005                           
  6006                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  6007                           ;stkvar	_h @ sp[(0)+-1]
  6008                           
  6009                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6010                           ;incstack = 0
  6011  018994  0EFF               	movlw	-1
  6012  018996  50E3               	movf	plusw1,w,c
  6013  018998  6EE6               	movwf	postinc1,c
  6014  01899A  EC2C  F0CA         	call	_hid_input	;wreg free
  6015                           
  6016                           ;hid.c: 21:  switch (h->h_state) {
  6017  01899E  D066               	goto	l12124
  6018  0189A0                     l12102:
  6019                           
  6020                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  6021                           ;stkvar	_h @ sp[(0)+-1]
  6022  0189A0  0EFF               	movlw	-1
  6023  0189A2  50E3               	movf	plusw1,w,c
  6024  0189A4  6ED9               	movwf	fsr2l,c
  6025  0189A6  6ADA               	clrf	fsr2h,c
  6026  0189A8  0E01               	movlw	1
  6027  0189AA  26D9               	addwf	fsr2l,f,c
  6028  0189AC  0E01               	movlw	1
  6029  0189AE  6EDF               	movwf	indf2,c
  6030                           
  6031                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  6032                           ;stkvar	_h @ sp[(0)+-1]
  6033  0189B0  0EFF               	movlw	-1
  6034  0189B2  50E3               	movf	plusw1,w,c
  6035  0189B4  6ED9               	movwf	fsr2l,c
  6036  0189B6  6ADA               	clrf	fsr2h,c
  6037  0189B8  0E00               	movlw	0
  6038  0189BA  6EDF               	movwf	indf2,c
  6039                           
  6040                           ;hid.c: 25:   h->wait_enter = 1;
  6041                           ;stkvar	_h @ sp[(0)+-1]
  6042  0189BC  0EFF               	movlw	-1
  6043  0189BE  50E3               	movf	plusw1,w,c
  6044  0189C0  6ED9               	movwf	fsr2l,c
  6045  0189C2  6ADA               	clrf	fsr2h,c
  6046  0189C4  0E04               	movlw	4
  6047  0189C6  26D9               	addwf	fsr2l,f,c
  6048  0189C8  0E01               	movlw	1
  6049  0189CA  6EDF               	movwf	indf2,c
  6050                           
  6051                           ;hid.c: 26:   h->wait_select = 1;
  6052                           ;stkvar	_h @ sp[(0)+-1]
  6053  0189CC  0EFF               	movlw	-1
  6054  0189CE  50E3               	movf	plusw1,w,c
  6055  0189D0  6ED9               	movwf	fsr2l,c
  6056  0189D2  6ADA               	clrf	fsr2h,c
  6057  0189D4  0E02               	movlw	2
  6058  0189D6  26D9               	addwf	fsr2l,f,c
  6059  0189D8  0E01               	movlw	1
  6060  0189DA  6EDF               	movwf	indf2,c
  6061                           
  6062                           ;hid.c: 27:   h->select_p = SW_OFF;
  6063                           ;stkvar	_h @ sp[(0)+-1]
  6064  0189DC  0EFF               	movlw	-1
  6065  0189DE  50E3               	movf	plusw1,w,c
  6066  0189E0  6ED9               	movwf	fsr2l,c
  6067  0189E2  6ADA               	clrf	fsr2h,c
  6068  0189E4  0E03               	movlw	3
  6069  0189E6  26D9               	addwf	fsr2l,f,c
  6070  0189E8  0E00               	movlw	0
  6071  0189EA  6EDF               	movwf	indf2,c
  6072                           
  6073                           ;hid.c: 28:   h->enter_p = SW_OFF;
  6074                           ;stkvar	_h @ sp[(0)+-1]
  6075  0189EC  0EFF               	movlw	-1
  6076  0189EE  50E3               	movf	plusw1,w,c
  6077  0189F0  6ED9               	movwf	fsr2l,c
  6078  0189F2  6ADA               	clrf	fsr2h,c
  6079  0189F4  0E05               	movlw	5
  6080  0189F6  26D9               	addwf	fsr2l,f,c
  6081  0189F8  0E00               	movlw	0
  6082  0189FA  D036               	goto	L1
  6083  0189FC                     l12114:
  6084                           
  6085                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  6086                           ;stkvar	_h @ sp[(0)+-1]
  6087  0189FC  0EFF               	movlw	-1
  6088  0189FE  50E3               	movf	plusw1,w,c
  6089  018A00  6ED9               	movwf	fsr2l,c
  6090  018A02  6ADA               	clrf	fsr2h,c
  6091  018A04  0E02               	movlw	2
  6092  018A06  26D9               	addwf	fsr2l,f,c
  6093  018A08  50DF               	movf	indf2,w,c
  6094  018A0A  A4D8               	btfss	status,2,c
  6095  018A0C  D042               	goto	l1884
  6096                           
  6097                           ;stkvar	_h @ sp[(0)+-1]
  6098  018A0E  0EFF               	movlw	-1
  6099  018A10  50E3               	movf	plusw1,w,c
  6100  018A12  6ED9               	movwf	fsr2l,c
  6101  018A14  6ADA               	clrf	fsr2h,c
  6102  018A16  0E03               	movlw	3
  6103  018A18  26D9               	addwf	fsr2l,f,c
  6104  018A1A  50DF               	movf	indf2,w,c
  6105  018A1C  A4D8               	btfss	status,2,c
  6106  018A1E  D039               	goto	l1884
  6107                           
  6108                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  6109                           ;stkvar	_h @ sp[(0)+-1]
  6110  018A20  0EFF               	movlw	-1
  6111  018A22  50E3               	movf	plusw1,w,c
  6112  018A24  6ED9               	movwf	fsr2l,c
  6113  018A26  6ADA               	clrf	fsr2h,c
  6114  018A28  0E06               	movlw	6
  6115  018A2A  26D9               	addwf	fsr2l,f,c
  6116                           
  6117                           ;stkvar	_h @ sp[(0)+-1]
  6118  018A2C  0EFF               	movlw	-1
  6119  018A2E  50E3               	movf	plusw1,w,c
  6120  018A30  6EE9               	movwf	fsr0l,c
  6121  018A32  6AEA               	clrf	fsr0h,c
  6122  018A34  0E06               	movlw	6
  6123  018A36  26E9               	addwf	fsr0l,f,c
  6124  018A38  2AEF               	incf	indf0,f,c
  6125  018A3A  50EF               	movf	indf0,w,c
  6126  018A3C  0B03               	andlw	3
  6127  018A3E  6EDF               	movwf	indf2,c
  6128                           
  6129                           ;hid.c: 34:    h->hid_display = h->sequence;
  6130                           ;stkvar	_h @ sp[(0)+-1]
  6131  018A40  0EFF               	movlw	-1
  6132  018A42  50E3               	movf	plusw1,w,c
  6133  018A44  6ED9               	movwf	fsr2l,c
  6134  018A46  6ADA               	clrf	fsr2h,c
  6135  018A48  0E06               	movlw	6
  6136  018A4A  26D9               	addwf	fsr2l,f,c
  6137                           
  6138                           ;stkvar	_h @ sp[(0)+-1]
  6139  018A4C  0EFF               	movlw	-1
  6140  018A4E  50E3               	movf	plusw1,w,c
  6141  018A50  6EE9               	movwf	fsr0l,c
  6142  018A52  6AEA               	clrf	fsr0h,c
  6143  018A54  006F FF7F FFEF     	movff	indf2,indf0
  6144                           
  6145                           ;hid.c: 35:    h->wait_select = 1;
  6146                           ;stkvar	_h @ sp[(0)+-1]
  6147  018A5A  0EFF               	movlw	-1
  6148  018A5C  50E3               	movf	plusw1,w,c
  6149  018A5E  6ED9               	movwf	fsr2l,c
  6150  018A60  6ADA               	clrf	fsr2h,c
  6151  018A62  0E02               	movlw	2
  6152  018A64  26D9               	addwf	fsr2l,f,c
  6153  018A66  0E01               	movlw	1
  6154  018A68                     L1:
  6155  018A68  6EDF               	movwf	indf2,c
  6156  018A6A  D013               	goto	l1884
  6157  018A6C                     l12124:
  6158                           
  6159                           ;stkvar	_h @ sp[(0)+-1]
  6160  018A6C  0EFF               	movlw	-1
  6161  018A6E  50E3               	movf	plusw1,w,c
  6162  018A70  6ED9               	movwf	fsr2l,c
  6163  018A72  6ADA               	clrf	fsr2h,c
  6164  018A74  0E01               	movlw	1
  6165  018A76  26D9               	addwf	fsr2l,f,c
  6166  018A78  50DF               	movf	indf2,w,c
  6167  018A7A  6E0B               	movwf	(btemp+10)^0,c
  6168  018A7C  6A0C               	clrf	(btemp+11)^0,c
  6169                           
  6170                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6171                           ; Switch size 1, requested type "simple"
  6172                           ; Number of cases is 1, Range of values is 0 to 0
  6173                           ; switch strategies available:
  6174                           ; Name         Instructions Cycles
  6175                           ; simple_byte            4     3 (average)
  6176                           ;	Chosen strategy is simple_byte
  6177  018A7E  500C               	movf	(btemp+11)^0,w,c
  6178  018A80  0A00               	xorlw	0	; case 0
  6179  018A82  A4D8               	btfss	status,2,c
  6180  018A84  D7BB               	goto	l12114
  6181                           
  6182                           ; Switch size 1, requested type "simple"
  6183                           ; Number of cases is 2, Range of values is 0 to 1
  6184                           ; switch strategies available:
  6185                           ; Name         Instructions Cycles
  6186                           ; simple_byte            7     4 (average)
  6187                           ;	Chosen strategy is simple_byte
  6188  018A86  500B               	movf	(btemp+10)^0,w,c
  6189  018A88  0A00               	xorlw	0	; case 0
  6190  018A8A  B4D8               	btfsc	status,2,c
  6191  018A8C  D789               	goto	l12102
  6192  018A8E  0A01               	xorlw	1	; case 1
  6193  018A90  D7B5               	goto	l12114
  6194  018A92                     l1884:
  6195                           
  6196                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6197  018A92  52E5               	movf	postdec1,f,c
  6198  018A94  0012               	return		;funcret
  6199  018A96                     __end_of_hid_display:
  6200                           	opt callstack 0
  6201                           
  6202 ;; *************** function _hid_input *****************
  6203 ;; Defined at:
  6204 ;;		line 3 in file "hid.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;  h               1  [STACK] PTR struct H_data
  6207 ;;		 -> H(7), 
  6208 ;; Auto vars:     Size  Location     Type
  6209 ;;		None
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  1  [STACK] PTR struct H_data
  6212 ;; Registers used:
  6213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  6214 ;; Tracked objects:
  6215 ;;		On entry : 0/1
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6223 ;;Total ram usage:        0 bytes
  6224 ;; Hardware stack levels used:    1
  6225 ;; Hardware stack levels required when called:   16
  6226 ;; This function calls:
  6227 ;;		_get_switch
  6228 ;; This function is called by:
  6229 ;;		_hid_display
  6230 ;; This function uses a reentrant model
  6231 ;;
  6232                           
  6233                           	psect	text18
  6234  019458                     __ptext18:
  6235                           	opt callstack 0
  6236  019458                     _hid_input:
  6237                           	opt callstack 13
  6238                           
  6239                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  6240                           
  6241                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6242                           ;incstack = 0
  6243  019458  0E02               	movlw	2
  6244  01945A  6EE6               	movwf	postinc1,c
  6245  01945C  EC44  F0D1         	call	_get_switch	;wreg free
  6246  019460  5001               	movf	btemp^0,w,c
  6247  019462  B4D8               	btfsc	status,2,c
  6248  019464  D01C               	goto	l11916
  6249                           
  6250                           ;hid.c: 6:   h->wait_select = 0;
  6251                           ;stkvar	_h @ sp[(0)+-1]
  6252  019466  0EFF               	movlw	-1
  6253  019468  50E3               	movf	plusw1,w,c
  6254  01946A  6ED9               	movwf	fsr2l,c
  6255  01946C  6ADA               	clrf	fsr2h,c
  6256  01946E  0E02               	movlw	2
  6257  019470  26D9               	addwf	fsr2l,f,c
  6258  019472  0E00               	movlw	0
  6259  019474  6EDF               	movwf	indf2,c
  6260                           
  6261                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  6262  019476  0E02               	movlw	2
  6263  019478  6EE6               	movwf	postinc1,c
  6264  01947A  EC44  F0D1         	call	_get_switch	;wreg free
  6265  01947E  5001               	movf	btemp^0,w,c
  6266  019480  B4D8               	btfsc	status,2,c
  6267  019482  D003               	goto	u11630
  6268  019484  6A0C               	clrf	(btemp+11)^0,c
  6269  019486  2A0C               	incf	(btemp+11)^0,f,c
  6270  019488  D001               	goto	u11648
  6271  01948A                     u11630:
  6272  01948A  6A0C               	clrf	(btemp+11)^0,c
  6273  01948C                     u11648:
  6274                           
  6275                           ;stkvar	_h @ sp[(0)+-1]
  6276  01948C  0EFF               	movlw	-1
  6277  01948E  50E3               	movf	plusw1,w,c
  6278  019490  6ED9               	movwf	fsr2l,c
  6279  019492  6ADA               	clrf	fsr2h,c
  6280  019494  0E03               	movlw	3
  6281  019496  26D9               	addwf	fsr2l,f,c
  6282  019498  0060  F033  FFDF   	movff	btemp+11,indf2
  6283  01949E                     l11916:
  6284                           
  6285                           ;hid.c: 10:  if (get_switch(SENTER)) {
  6286  01949E  0E03               	movlw	3
  6287  0194A0  6EE6               	movwf	postinc1,c
  6288  0194A2  EC44  F0D1         	call	_get_switch	;wreg free
  6289  0194A6  5001               	movf	btemp^0,w,c
  6290  0194A8  B4D8               	btfsc	status,2,c
  6291  0194AA  D01C               	goto	l1875
  6292                           
  6293                           ;hid.c: 11:   h->wait_enter = 0;
  6294                           ;stkvar	_h @ sp[(0)+-1]
  6295  0194AC  0EFF               	movlw	-1
  6296  0194AE  50E3               	movf	plusw1,w,c
  6297  0194B0  6ED9               	movwf	fsr2l,c
  6298  0194B2  6ADA               	clrf	fsr2h,c
  6299  0194B4  0E04               	movlw	4
  6300  0194B6  26D9               	addwf	fsr2l,f,c
  6301  0194B8  0E00               	movlw	0
  6302  0194BA  6EDF               	movwf	indf2,c
  6303                           
  6304                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  6305  0194BC  0E03               	movlw	3
  6306  0194BE  6EE6               	movwf	postinc1,c
  6307  0194C0  EC44  F0D1         	call	_get_switch	;wreg free
  6308  0194C4  5001               	movf	btemp^0,w,c
  6309  0194C6  B4D8               	btfsc	status,2,c
  6310  0194C8  D003               	goto	u11660
  6311  0194CA  6A0C               	clrf	(btemp+11)^0,c
  6312  0194CC  2A0C               	incf	(btemp+11)^0,f,c
  6313  0194CE  D001               	goto	u11678
  6314  0194D0                     u11660:
  6315  0194D0  6A0C               	clrf	(btemp+11)^0,c
  6316  0194D2                     u11678:
  6317                           
  6318                           ;stkvar	_h @ sp[(0)+-1]
  6319  0194D2  0EFF               	movlw	-1
  6320  0194D4  50E3               	movf	plusw1,w,c
  6321  0194D6  6ED9               	movwf	fsr2l,c
  6322  0194D8  6ADA               	clrf	fsr2h,c
  6323  0194DA  0E05               	movlw	5
  6324  0194DC  26D9               	addwf	fsr2l,f,c
  6325  0194DE  0060  F033  FFDF   	movff	btemp+11,indf2
  6326  0194E4                     l1875:
  6327                           
  6328                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6329  0194E4  52E5               	movf	postdec1,f,c
  6330  0194E6  0012               	return		;funcret
  6331  0194E8                     __end_of_hid_input:
  6332                           	opt callstack 0
  6333                           
  6334 ;; *************** function _get_switch *****************
  6335 ;; Defined at:
  6336 ;;		line 18 in file "dio.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  i               1  [STACK] unsigned char 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;		None
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1  [STACK] enum E17021
  6343 ;; Registers used:
  6344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/2
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6354 ;;Total ram usage:        0 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; Hardware stack levels required when called:   15
  6357 ;; This function calls:
  6358 ;;		Nothing
  6359 ;; This function is called by:
  6360 ;;		_main
  6361 ;;		_hid_input
  6362 ;; This function uses a reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text19
  6366  01A288                     __ptext19:
  6367                           	opt callstack 0
  6368  01A288                     _get_switch:
  6369                           	opt callstack 13
  6370                           
  6371                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  6372                           ;stkvar	_i @ sp[(0)+-1]
  6373                           
  6374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6375                           ;incstack = 0
  6376  01A288  0EFF               	movlw	-1
  6377  01A28A  006F FF8C  F001    	movff	plusw1,btemp
  6378  01A290  0E03               	movlw	3
  6379  01A292  6401               	cpfsgt	btemp^0,c
  6380  01A294  D002               	goto	l11804
  6381                           
  6382                           ;dio.c: 21:   return SW_OFF;
  6383  01A296  0E00               	movlw	0
  6384  01A298  D00A               	goto	L2
  6385  01A29A                     l11804:
  6386                           
  6387                           ;dio.c: 23:  return S.button[i].sw;
  6388                           ;stkvar	_i @ sp[(0)+-1]
  6389  01A29A  0EFF               	movlw	-1
  6390  01A29C  50E3               	movf	plusw1,w,c
  6391  01A29E  0D05               	mullw	5
  6392  01A2A0  0EBC               	movlw	low _S
  6393  01A2A2  24F3               	addwf	243,w,c
  6394  01A2A4  6ED9               	movwf	fsr2l,c
  6395  01A2A6  0E02               	movlw	high _S
  6396  01A2A8  20F4               	addwfc	prodh,w,c
  6397  01A2AA  6EDA               	movwf	fsr2h,c
  6398  01A2AC  50DF               	movf	indf2,w,c
  6399  01A2AE                     L2:
  6400  01A2AE  6E01               	movwf	btemp^0,c
  6401                           
  6402                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6403  01A2B0  52E5               	movf	postdec1,f,c
  6404  01A2B2  0012               	return		;funcret
  6405  01A2B4                     __end_of_get_switch:
  6406                           	opt callstack 0
  6407                           
  6408 ;; *************** function _eaDogM_WriteCommand *****************
  6409 ;; Defined at:
  6410 ;;		line 175 in file "eadog.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;  cmd             1  [STACK] const unsigned char 
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;		None
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  1  [STACK] void 
  6417 ;; Registers used:
  6418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6419 ;; Tracked objects:
  6420 ;;		On entry : 3F/3D
  6421 ;;		On exit  : 3F/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6428 ;;Total ram usage:        0 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:   25
  6431 ;; This function calls:
  6432 ;;		_send_lcd_cmd_dma
  6433 ;; This function is called by:
  6434 ;;		_main
  6435 ;; This function uses a reentrant model
  6436 ;;
  6437                           
  6438                           	psect	text20
  6439  01A8EE                     __ptext20:
  6440                           	opt callstack 0
  6441  01A8EE                     _eaDogM_WriteCommand:
  6442                           	opt callstack 5
  6443                           
  6444                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  6445                           ;stkvar	_cmd @ sp[(0)+-1]
  6446                           
  6447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6448                           ;incstack = 0
  6449  01A8EE  0EFF               	movlw	-1
  6450  01A8F0  50E3               	movf	plusw1,w,c
  6451  01A8F2  6EE6               	movwf	postinc1,c
  6452  01A8F4  EC99  F0CD         	call	_send_lcd_cmd_dma	;wreg free
  6453                           
  6454                           ; BSR set to: 0
  6455                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  6456  01A8F8  52E5               	movf	postdec1,f,c
  6457  01A8FA  0012               	return		;funcret
  6458  01A8FC                     __end_of_eaDogM_WriteCommand:
  6459                           	opt callstack 0
  6460                           
  6461 ;; *************** function _convert_adc_data *****************
  6462 ;; Defined at:
  6463 ;;		line 40 in file "mbmc.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;		None
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  i               1  [STACK] unsigned char 
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  1  [STACK] void 
  6470 ;; Registers used:
  6471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6472 ;; Tracked objects:
  6473 ;;		On entry : 0/1
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6481 ;;Total ram usage:        0 bytes
  6482 ;; Hardware stack levels used:    1
  6483 ;; Hardware stack levels required when called:   18
  6484 ;; This function calls:
  6485 ;;		_conv_raw_result
  6486 ;;		_lp_filter
  6487 ;; This function is called by:
  6488 ;;		_main
  6489 ;; This function uses a reentrant model
  6490 ;;
  6491                           
  6492                           	psect	text21
  6493  018EB4                     __ptext21:
  6494                           	opt callstack 0
  6495  018EB4                     _convert_adc_data:
  6496                           	opt callstack 0
  6497                           
  6498                           ; BSR set to: 0
  6499                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6500  018EB4  52E6               	movf	postinc1,f,c
  6501                           
  6502                           ;mbmc.c: 42:  uint8_t i = 0;
  6503                           ;stkvar	_i @ sp[(-1)+0]
  6504                           
  6505                           ;incstack = 0
  6506  018EB6  0EFF               	movlw	-1
  6507  018EB8  6AE3               	clrf	plusw1,c
  6508  018EBA                     l10210:
  6509                           
  6510                           ;mbmc.c: 45:   if (V.calib) {
  6511  018EBA  0102               	movlb	2	; () banked
  6512  018EBC  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  6513  018EBE  B4D8               	btfsc	status,2,c
  6514  018EC0  D01B               	goto	l10214
  6515                           
  6516                           ; BSR set to: 2
  6517                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  6518  018EC2  0E01               	movlw	1
  6519  018EC4  6EE6               	movwf	postinc1,c
  6520                           
  6521                           ;stkvar	_i @ sp[(-2)+0]
  6522  018EC6  0EFE               	movlw	-2
  6523  018EC8  50E3               	movf	plusw1,w,c
  6524  018ECA  6EE6               	movwf	postinc1,c
  6525  018ECC  0E01               	movlw	1
  6526  018ECE  6EE6               	movwf	postinc1,c
  6527                           
  6528                           ;stkvar	_i @ sp[(-4)+0]
  6529  018ED0  0EFC               	movlw	-4
  6530  018ED2  50E3               	movf	plusw1,w,c
  6531  018ED4  6EE6               	movwf	postinc1,c
  6532  018ED6  ECA0  F0A3         	call	_conv_raw_result	;wreg free
  6533  018EDA  0060  F007  FFE6   	movff	btemp,postinc1
  6534  018EE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6535  018EE6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6536  018EEC  0060  F013  FFE6   	movff	btemp+3,postinc1
  6537  018EF2  ECC4  F0B9         	call	_lp_filter	;wreg free
  6538  018EF6  D01A               	goto	L3
  6539  018EF8                     l10214:
  6540                           
  6541                           ; BSR set to: 2
  6542                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  6543  018EF8  0E00               	movlw	0
  6544  018EFA  6EE6               	movwf	postinc1,c
  6545                           
  6546                           ;stkvar	_i @ sp[(-2)+0]
  6547  018EFC  0EFE               	movlw	-2
  6548  018EFE  50E3               	movf	plusw1,w,c
  6549  018F00  6EE6               	movwf	postinc1,c
  6550  018F02  0E00               	movlw	0
  6551  018F04  6EE6               	movwf	postinc1,c
  6552                           
  6553                           ;stkvar	_i @ sp[(-4)+0]
  6554  018F06  0EFC               	movlw	-4
  6555  018F08  50E3               	movf	plusw1,w,c
  6556  018F0A  6EE6               	movwf	postinc1,c
  6557  018F0C  ECA0  F0A3         	call	_conv_raw_result	;wreg free
  6558  018F10  0060  F007  FFE6   	movff	btemp,postinc1
  6559  018F16  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6560  018F1C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6561  018F22  0060  F013  FFE6   	movff	btemp+3,postinc1
  6562  018F28  ECC4  F0B9         	call	_lp_filter	;wreg free
  6563  018F2C                     L3:
  6564                           
  6565                           ;stkvar	_i @ sp[(-1)+0]
  6566  018F2C  0EFF               	movlw	-1
  6567  018F2E  50E3               	movf	plusw1,w,c
  6568  018F30  0D04               	mullw	4
  6569  018F32  0E00               	movlw	low _C
  6570  018F34  24F3               	addwf	243,w,c
  6571  018F36  6ED9               	movwf	fsr2l,c
  6572  018F38  0E01               	movlw	high _C
  6573  018F3A  20F4               	addwfc	prodh,w,c
  6574  018F3C  6EDA               	movwf	fsr2h,c
  6575  018F3E  0060  F007  FFDE   	movff	btemp,postinc2
  6576  018F44  0060  F00B  FFDE   	movff	btemp+1,postinc2
  6577  018F4A  0060  F00F  FFDE   	movff	btemp+2,postinc2
  6578  018F50  0060  F013  FFDE   	movff	btemp+3,postinc2
  6579                           
  6580                           ;mbmc.c: 50:  } while (++i < 16);
  6581                           ;stkvar	_i @ sp[(-1)+0]
  6582  018F56  0EFF               	movlw	-1
  6583  018F58  2AE3               	incf	plusw1,f,c
  6584  018F5A  0EFF               	movlw	-1
  6585  018F5C  006F FF8C  F001    	movff	plusw1,btemp
  6586  018F62  0E0F               	movlw	15
  6587  018F64  6401               	cpfsgt	btemp^0,c
  6588  018F66  D7A9               	goto	l10210
  6589                           
  6590                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  6591  018F68  52E5               	movf	postdec1,f,c
  6592  018F6A  0012               	return		;funcret
  6593  018F6C                     __end_of_convert_adc_data:
  6594                           	opt callstack 0
  6595                           
  6596 ;; *************** function _conv_raw_result *****************
  6597 ;; Defined at:
  6598 ;;		line 80 in file "daq.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;  chan            1  [STACK] const enum E16136
  6601 ;;  to_what         1  [STACK] const enum E16198
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;		None
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  4  [STACK] float 
  6606 ;; Registers used:
  6607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/1
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6617 ;;Total ram usage:        0 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:   17
  6620 ;; This function calls:
  6621 ;;		___fldiv
  6622 ;;		___flmul
  6623 ;;		___flsub
  6624 ;;		___xxtofl
  6625 ;;		_get_raw_result
  6626 ;;		_nanf
  6627 ;; This function is called by:
  6628 ;;		_convert_adc_data
  6629 ;;		_init_bsoc
  6630 ;; This function uses a reentrant model
  6631 ;;
  6632                           
  6633                           	psect	text22
  6634  014740                     __ptext22:
  6635                           	opt callstack 0
  6636  014740                     _conv_raw_result:
  6637                           	opt callstack 12
  6638                           
  6639                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  6640                           
  6641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6642                           ;incstack = 0
  6643  014740  D242               	goto	l9830
  6644  014742                     l9776:
  6645                           
  6646                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  6647                           ;stkvar	_chan @ sp[(0)+-1]
  6648  014742  0EFF               	movlw	-1
  6649  014744  006F FF8C  F00C    	movff	plusw1,btemp+11
  6650  01474A  0E77               	movlw	119
  6651  01474C  6E09               	movwf	(btemp+8)^0,c
  6652  01474E  0E3C               	movlw	60
  6653  014750  6E0A               	movwf	(btemp+9)^0,c
  6654  014752  2A0C               	incf	(btemp+11)^0,f,c
  6655  014754  D003               	goto	u8924
  6656  014756                     u8925:
  6657  014756  340A               	rlcf	(btemp+9)^0,w,c
  6658  014758  320A               	rrcf	(btemp+9)^0,f,c
  6659  01475A  3209               	rrcf	(btemp+8)^0,f,c
  6660  01475C                     u8924:
  6661  01475C  2E0C               	decfsz	(btemp+11)^0,f,c
  6662  01475E  D7FB               	goto	u8925
  6663  014760  B009               	btfsc	(btemp+8)^0,0,c
  6664  014762  D007               	goto	l9782
  6665                           
  6666                           ;daq.c: 86:    return nanf("");
  6667  014764  0E1B               	movlw	low (STR_47+78)
  6668  014766  6EE6               	movwf	postinc1,c
  6669  014768  0EFE               	movlw	high (STR_47+78)
  6670  01476A  6EE6               	movwf	postinc1,c
  6671  01476C  EC80  F0CC         	call	_nanf	;wreg free
  6672  014770  D23A               	goto	l1743
  6673  014772                     l9782:
  6674                           
  6675                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  6676                           ;stkvar	_chan @ sp[(0)+-1]
  6677  014772  0EFF               	movlw	-1
  6678  014774  006F FF8C  F00C    	movff	plusw1,btemp+11
  6679  01477A  0E03               	movlw	3
  6680  01477C  6E09               	movwf	(btemp+8)^0,c
  6681  01477E  0E00               	movlw	0
  6682  014780  6E0A               	movwf	(btemp+9)^0,c
  6683  014782  2A0C               	incf	(btemp+11)^0,f,c
  6684  014784  D003               	goto	u8944
  6685  014786                     u8945:
  6686  014786  340A               	rlcf	(btemp+9)^0,w,c
  6687  014788  320A               	rrcf	(btemp+9)^0,f,c
  6688  01478A  3209               	rrcf	(btemp+8)^0,f,c
  6689  01478C                     u8944:
  6690  01478C  2E0C               	decfsz	(btemp+11)^0,f,c
  6691  01478E  D7FB               	goto	u8945
  6692  014790  A009               	btfss	(btemp+8)^0,0,c
  6693  014792  D0EB               	goto	l9796
  6694                           
  6695                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  6696                           ;stkvar	_chan @ sp[(0)+-1]
  6697  014794  0EFF               	movlw	-1
  6698  014796  006F FF8C  F00C    	movff	plusw1,btemp+11
  6699  01479C  0E01               	movlw	1
  6700  01479E  6E09               	movwf	(btemp+8)^0,c
  6701  0147A0  0E00               	movlw	0
  6702  0147A2  6E0A               	movwf	(btemp+9)^0,c
  6703  0147A4  2A0C               	incf	(btemp+11)^0,f,c
  6704  0147A6  D003               	goto	u8964
  6705  0147A8                     u8965:
  6706  0147A8  340A               	rlcf	(btemp+9)^0,w,c
  6707  0147AA  320A               	rrcf	(btemp+9)^0,f,c
  6708  0147AC  3209               	rrcf	(btemp+8)^0,f,c
  6709  0147AE                     u8964:
  6710  0147AE  2E0C               	decfsz	(btemp+11)^0,f,c
  6711  0147B0  D7FB               	goto	u8965
  6712  0147B2  A009               	btfss	(btemp+8)^0,0,c
  6713  0147B4  D06D               	goto	l9792
  6714                           
  6715                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  6716  0147B6  0E7B               	movlw	123
  6717  0147B8  6EE6               	movwf	postinc1,c
  6718  0147BA  0E14               	movlw	20
  6719  0147BC  6EE6               	movwf	postinc1,c
  6720  0147BE  0EAE               	movlw	174
  6721  0147C0  6EE6               	movwf	postinc1,c
  6722  0147C2  0E3D               	movlw	61
  6723  0147C4  6EE6               	movwf	postinc1,c
  6724  0147C6  0060  F328  F009   	movff	_R+32,btemp+8	;volatile
  6725  0147CC  0060  F32C  F00A   	movff	_R+33,btemp+9	;volatile
  6726  0147D2  0E00               	movlw	0
  6727  0147D4  BE0A               	btfsc	(btemp+9)^0,7,c
  6728  0147D6  0EFF               	movlw	255
  6729  0147D8  6E0B               	movwf	(btemp+10)^0,c
  6730  0147DA  6E0C               	movwf	(btemp+11)^0,c
  6731  0147DC  0060  F027  FFE6   	movff	btemp+8,postinc1
  6732  0147E2  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6733  0147E8  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6734  0147EE  0060  F033  FFE6   	movff	btemp+11,postinc1
  6735  0147F4  0E01               	movlw	1
  6736  0147F6  6EE6               	movwf	postinc1,c
  6737  0147F8  ECC2  F0B7         	call	___xxtofl	;wreg free
  6738  0147FC  0060  F007  FFE6   	movff	btemp,postinc1
  6739  014802  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6740  014808  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6741  01480E  0060  F013  FFE6   	movff	btemp+3,postinc1
  6742                           
  6743                           ;stkvar	_chan @ sp[(-8)+-1]
  6744  014814  0EF7               	movlw	-9
  6745  014816  50E3               	movf	plusw1,w,c
  6746  014818  6EE6               	movwf	postinc1,c
  6747  01481A  ECAE  F0D3         	call	_get_raw_result	;wreg free
  6748  01481E  0060  F004  F00B   	movff	btemp,btemp+10
  6749  014824  0060  F008  F00C   	movff	btemp+1,btemp+11
  6750  01482A  500B               	movf	(btemp+10)^0,w,c
  6751  01482C  6E05               	movwf	(btemp+4)^0,c
  6752  01482E  500C               	movf	(btemp+11)^0,w,c
  6753  014830  6E06               	movwf	(btemp+5)^0,c
  6754  014832  6A07               	clrf	(btemp+6)^0,c
  6755  014834  6A08               	clrf	(btemp+7)^0,c
  6756  014836  0060  F017  FFE6   	movff	btemp+4,postinc1
  6757  01483C  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6758  014842  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6759  014848  0060  F023  FFE6   	movff	btemp+7,postinc1
  6760  01484E  0E00               	movlw	0
  6761  014850  6EE6               	movwf	postinc1,c
  6762  014852  ECC2  F0B7         	call	___xxtofl	;wreg free
  6763  014856  0060  F007  FFE6   	movff	btemp,postinc1
  6764  01485C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6765  014862  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6766  014868  0060  F013  FFE6   	movff	btemp+3,postinc1
  6767  01486E  ECA7  F0CE         	call	___flsub	;wreg free
  6768  014872  0060  F007  FFE6   	movff	btemp,postinc1
  6769  014878  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6770  01487E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6771  014884  0060  F013  FFE6   	movff	btemp+3,postinc1
  6772  01488A  ECAD  F095         	call	___flmul	;wreg free
  6773  01488E  D1AB               	goto	l1743
  6774  014890                     l9792:
  6775                           
  6776                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  6777  014890  0E29               	movlw	41
  6778  014892  6EE6               	movwf	postinc1,c
  6779  014894  0E5C               	movlw	92
  6780  014896  6EE6               	movwf	postinc1,c
  6781  014898  0E0F               	movlw	15
  6782  01489A  6EE6               	movwf	postinc1,c
  6783  01489C  0E3D               	movlw	61
  6784  01489E  6EE6               	movwf	postinc1,c
  6785  0148A0  0060  F330  F009   	movff	_R+34,btemp+8	;volatile
  6786  0148A6  0060  F334  F00A   	movff	_R+35,btemp+9	;volatile
  6787  0148AC  0E00               	movlw	0
  6788  0148AE  BE0A               	btfsc	(btemp+9)^0,7,c
  6789  0148B0  0EFF               	movlw	255
  6790  0148B2  6E0B               	movwf	(btemp+10)^0,c
  6791  0148B4  6E0C               	movwf	(btemp+11)^0,c
  6792  0148B6  0060  F027  FFE6   	movff	btemp+8,postinc1
  6793  0148BC  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6794  0148C2  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6795  0148C8  0060  F033  FFE6   	movff	btemp+11,postinc1
  6796  0148CE  0E01               	movlw	1
  6797  0148D0  6EE6               	movwf	postinc1,c
  6798  0148D2  ECC2  F0B7         	call	___xxtofl	;wreg free
  6799  0148D6  0060  F007  FFE6   	movff	btemp,postinc1
  6800  0148DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6801  0148E2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6802  0148E8  0060  F013  FFE6   	movff	btemp+3,postinc1
  6803                           
  6804                           ;stkvar	_chan @ sp[(-8)+-1]
  6805  0148EE  0EF7               	movlw	-9
  6806  0148F0  50E3               	movf	plusw1,w,c
  6807  0148F2  6EE6               	movwf	postinc1,c
  6808  0148F4  ECAE  F0D3         	call	_get_raw_result	;wreg free
  6809  0148F8  0060  F004  F00B   	movff	btemp,btemp+10
  6810  0148FE  0060  F008  F00C   	movff	btemp+1,btemp+11
  6811  014904  500B               	movf	(btemp+10)^0,w,c
  6812  014906  6E05               	movwf	(btemp+4)^0,c
  6813  014908  500C               	movf	(btemp+11)^0,w,c
  6814  01490A  6E06               	movwf	(btemp+5)^0,c
  6815  01490C  6A07               	clrf	(btemp+6)^0,c
  6816  01490E  6A08               	clrf	(btemp+7)^0,c
  6817  014910  0060  F017  FFE6   	movff	btemp+4,postinc1
  6818  014916  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6819  01491C  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6820  014922  0060  F023  FFE6   	movff	btemp+7,postinc1
  6821  014928  0E00               	movlw	0
  6822  01492A  6EE6               	movwf	postinc1,c
  6823  01492C  ECC2  F0B7         	call	___xxtofl	;wreg free
  6824  014930  0060  F007  FFE6   	movff	btemp,postinc1
  6825  014936  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6826  01493C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6827  014942  0060  F013  FFE6   	movff	btemp+3,postinc1
  6828  014948  ECA7  F0CE         	call	___flsub	;wreg free
  6829  01494C  0060  F007  FFE6   	movff	btemp,postinc1
  6830  014952  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6831  014958  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6832  01495E  0060  F013  FFE6   	movff	btemp+3,postinc1
  6833  014964  ECAD  F095         	call	___flmul	;wreg free
  6834  014968  D13E               	goto	l1743
  6835  01496A                     l9796:
  6836                           
  6837                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  6838                           ;stkvar	_chan @ sp[(0)+-1]
  6839  01496A  0EFF               	movlw	-1
  6840  01496C  006F FF8C  F00C    	movff	plusw1,btemp+11
  6841  014972  0E00               	movlw	0
  6842  014974  6E09               	movwf	(btemp+8)^0,c
  6843  014976  0E08               	movlw	8
  6844  014978  6E0A               	movwf	(btemp+9)^0,c
  6845  01497A  2A0C               	incf	(btemp+11)^0,f,c
  6846  01497C  D003               	goto	u8984
  6847  01497E                     u8985:
  6848  01497E  340A               	rlcf	(btemp+9)^0,w,c
  6849  014980  320A               	rrcf	(btemp+9)^0,f,c
  6850  014982  3209               	rrcf	(btemp+8)^0,f,c
  6851  014984                     u8984:
  6852  014984  2E0C               	decfsz	(btemp+11)^0,f,c
  6853  014986  D7FB               	goto	u8985
  6854  014988  A009               	btfss	(btemp+8)^0,0,c
  6855  01498A  D008               	goto	l9804
  6856                           
  6857                           ;daq.c: 96:     return 25.0;
  6858  01498C  0E00               	movlw	0
  6859  01498E  6E01               	movwf	btemp^0,c
  6860  014990  0E00               	movlw	0
  6861  014992  6E02               	movwf	(btemp+1)^0,c
  6862  014994  0EC8               	movlw	200
  6863  014996  6E03               	movwf	(btemp+2)^0,c
  6864  014998  0E41               	movlw	65
  6865  01499A  D113               	goto	L4
  6866  01499C                     l9804:
  6867                           
  6868                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  6869  01499C  0E00               	movlw	0
  6870  01499E  6EE6               	movwf	postinc1,c
  6871  0149A0  0E00               	movlw	0
  6872  0149A2  6EE6               	movwf	postinc1,c
  6873  0149A4  0E7A               	movlw	122
  6874  0149A6  6EE6               	movwf	postinc1,c
  6875  0149A8  0E44               	movlw	68
  6876  0149AA  6EE6               	movwf	postinc1,c
  6877  0149AC  0E61               	movlw	97
  6878  0149AE  6EE6               	movwf	postinc1,c
  6879  0149B0  0E03               	movlw	3
  6880  0149B2  6EE6               	movwf	postinc1,c
  6881  0149B4  0E84               	movlw	132
  6882  0149B6  6EE6               	movwf	postinc1,c
  6883  0149B8  0E40               	movlw	64
  6884  0149BA  6EE6               	movwf	postinc1,c
  6885                           
  6886                           ;stkvar	_chan @ sp[(-8)+-1]
  6887  0149BC  0EF7               	movlw	-9
  6888  0149BE  50E3               	movf	plusw1,w,c
  6889  0149C0  6EE6               	movwf	postinc1,c
  6890  0149C2  ECAE  F0D3         	call	_get_raw_result	;wreg free
  6891  0149C6  0060  F004  F00B   	movff	btemp,btemp+10
  6892  0149CC  0060  F008  F00C   	movff	btemp+1,btemp+11
  6893  0149D2  500B               	movf	(btemp+10)^0,w,c
  6894  0149D4  6E05               	movwf	(btemp+4)^0,c
  6895  0149D6  500C               	movf	(btemp+11)^0,w,c
  6896  0149D8  6E06               	movwf	(btemp+5)^0,c
  6897  0149DA  6A07               	clrf	(btemp+6)^0,c
  6898  0149DC  6A08               	clrf	(btemp+7)^0,c
  6899  0149DE  0060  F017  FFE6   	movff	btemp+4,postinc1
  6900  0149E4  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6901  0149EA  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6902  0149F0  0060  F023  FFE6   	movff	btemp+7,postinc1
  6903  0149F6  0E00               	movlw	0
  6904  0149F8  6EE6               	movwf	postinc1,c
  6905  0149FA  ECC2  F0B7         	call	___xxtofl	;wreg free
  6906  0149FE  0060  F007  FFE6   	movff	btemp,postinc1
  6907  014A04  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6908  014A0A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6909  014A10  0060  F013  FFE6   	movff	btemp+3,postinc1
  6910  014A16  ECAD  F095         	call	___flmul	;wreg free
  6911  014A1A  0060  F007  FFE6   	movff	btemp,postinc1
  6912  014A20  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6913  014A26  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6914  014A2C  0060  F013  FFE6   	movff	btemp+3,postinc1
  6915  014A32  ECE3  F0A0         	call	___fldiv	;wreg free
  6916  014A36  D0D7               	goto	l1743
  6917  014A38                     l9808:
  6918                           
  6919                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  6920                           ;stkvar	_chan @ sp[(0)+-1]
  6921  014A38  0EFF               	movlw	-1
  6922  014A3A  006F FF8C  F00C    	movff	plusw1,btemp+11
  6923  014A40  0E03               	movlw	3
  6924  014A42  6E09               	movwf	(btemp+8)^0,c
  6925  014A44  0E00               	movlw	0
  6926  014A46  6E0A               	movwf	(btemp+9)^0,c
  6927  014A48  2A0C               	incf	(btemp+11)^0,f,c
  6928  014A4A  D003               	goto	u9004
  6929  014A4C                     u9005:
  6930  014A4C  340A               	rlcf	(btemp+9)^0,w,c
  6931  014A4E  320A               	rrcf	(btemp+9)^0,f,c
  6932  014A50  3209               	rrcf	(btemp+8)^0,f,c
  6933  014A52                     u9004:
  6934  014A52  2E0C               	decfsz	(btemp+11)^0,f,c
  6935  014A54  D7FB               	goto	u9005
  6936  014A56  B009               	btfsc	(btemp+8)^0,0,c
  6937  014A58  D011               	goto	u9030
  6938                           
  6939                           ;stkvar	_chan @ sp[(0)+-1]
  6940  014A5A  0EFF               	movlw	-1
  6941  014A5C  006F FF8C  F00C    	movff	plusw1,btemp+11
  6942  014A62  0E00               	movlw	0
  6943  014A64  6E09               	movwf	(btemp+8)^0,c
  6944  014A66  0E08               	movlw	8
  6945  014A68  6E0A               	movwf	(btemp+9)^0,c
  6946  014A6A  2A0C               	incf	(btemp+11)^0,f,c
  6947  014A6C  D003               	goto	u9024
  6948  014A6E                     u9025:
  6949  014A6E  340A               	rlcf	(btemp+9)^0,w,c
  6950  014A70  320A               	rrcf	(btemp+9)^0,f,c
  6951  014A72  3209               	rrcf	(btemp+8)^0,f,c
  6952  014A74                     u9024:
  6953  014A74  2E0C               	decfsz	(btemp+11)^0,f,c
  6954  014A76  D7FB               	goto	u9025
  6955  014A78  A009               	btfss	(btemp+8)^0,0,c
  6956  014A7A  D04E               	goto	l9816
  6957  014A7C                     u9030:
  6958                           
  6959                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  6960  014A7C  0E00               	movlw	0
  6961  014A7E  6EE6               	movwf	postinc1,c
  6962  014A80  0E00               	movlw	0
  6963  014A82  6EE6               	movwf	postinc1,c
  6964  014A84  0E7A               	movlw	122
  6965  014A86  6EE6               	movwf	postinc1,c
  6966  014A88  0E44               	movlw	68
  6967  014A8A  6EE6               	movwf	postinc1,c
  6968  014A8C  0E00               	movlw	0
  6969  014A8E  6EE6               	movwf	postinc1,c
  6970  014A90  0E00               	movlw	0
  6971  014A92  6EE6               	movwf	postinc1,c
  6972  014A94  0E20               	movlw	32
  6973  014A96  6EE6               	movwf	postinc1,c
  6974  014A98  0E3F               	movlw	63
  6975  014A9A  6EE6               	movwf	postinc1,c
  6976                           
  6977                           ;stkvar	_chan @ sp[(-8)+-1]
  6978  014A9C  0EF7               	movlw	-9
  6979  014A9E  50E3               	movf	plusw1,w,c
  6980  014AA0  6EE6               	movwf	postinc1,c
  6981  014AA2  ECAE  F0D3         	call	_get_raw_result	;wreg free
  6982  014AA6  0060  F004  F00B   	movff	btemp,btemp+10
  6983  014AAC  0060  F008  F00C   	movff	btemp+1,btemp+11
  6984  014AB2  500B               	movf	(btemp+10)^0,w,c
  6985  014AB4  6E05               	movwf	(btemp+4)^0,c
  6986  014AB6  500C               	movf	(btemp+11)^0,w,c
  6987  014AB8  6E06               	movwf	(btemp+5)^0,c
  6988  014ABA  6A07               	clrf	(btemp+6)^0,c
  6989  014ABC  6A08               	clrf	(btemp+7)^0,c
  6990  014ABE  0060  F017  FFE6   	movff	btemp+4,postinc1
  6991  014AC4  0060  F01B  FFE6   	movff	btemp+5,postinc1
  6992  014ACA  0060  F01F  FFE6   	movff	btemp+6,postinc1
  6993  014AD0  0060  F023  FFE6   	movff	btemp+7,postinc1
  6994  014AD6  0E00               	movlw	0
  6995  014AD8  6EE6               	movwf	postinc1,c
  6996  014ADA  ECC2  F0B7         	call	___xxtofl	;wreg free
  6997  014ADE  0060  F007  FFE6   	movff	btemp,postinc1
  6998  014AE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6999  014AEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7000  014AF0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7001  014AF6  ECAD  F095         	call	___flmul	;wreg free
  7002  014AFA  0060  F007  FFE6   	movff	btemp,postinc1
  7003  014B00  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7004  014B06  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7005  014B0C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7006  014B12  ECE3  F0A0         	call	___fldiv	;wreg free
  7007  014B16  D067               	goto	l1743
  7008  014B18                     l9816:
  7009                           
  7010                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  7011  014B18  0E00               	movlw	0
  7012  014B1A  6EE6               	movwf	postinc1,c
  7013  014B1C  0E00               	movlw	0
  7014  014B1E  6EE6               	movwf	postinc1,c
  7015  014B20  0E7A               	movlw	122
  7016  014B22  6EE6               	movwf	postinc1,c
  7017  014B24  0E44               	movlw	68
  7018  014B26  6EE6               	movwf	postinc1,c
  7019  014B28  0E61               	movlw	97
  7020  014B2A  6EE6               	movwf	postinc1,c
  7021  014B2C  0E03               	movlw	3
  7022  014B2E  6EE6               	movwf	postinc1,c
  7023  014B30  0E84               	movlw	132
  7024  014B32  6EE6               	movwf	postinc1,c
  7025  014B34  0E40               	movlw	64
  7026  014B36  6EE6               	movwf	postinc1,c
  7027                           
  7028                           ;stkvar	_chan @ sp[(-8)+-1]
  7029  014B38  0EF7               	movlw	-9
  7030  014B3A  50E3               	movf	plusw1,w,c
  7031  014B3C  6EE6               	movwf	postinc1,c
  7032  014B3E  ECAE  F0D3         	call	_get_raw_result	;wreg free
  7033  014B42  0060  F004  F00B   	movff	btemp,btemp+10
  7034  014B48  0060  F008  F00C   	movff	btemp+1,btemp+11
  7035  014B4E  500B               	movf	(btemp+10)^0,w,c
  7036  014B50  6E05               	movwf	(btemp+4)^0,c
  7037  014B52  500C               	movf	(btemp+11)^0,w,c
  7038  014B54  6E06               	movwf	(btemp+5)^0,c
  7039  014B56  6A07               	clrf	(btemp+6)^0,c
  7040  014B58  6A08               	clrf	(btemp+7)^0,c
  7041  014B5A  0060  F017  FFE6   	movff	btemp+4,postinc1
  7042  014B60  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7043  014B66  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7044  014B6C  0060  F023  FFE6   	movff	btemp+7,postinc1
  7045  014B72  0E00               	movlw	0
  7046  014B74  6EE6               	movwf	postinc1,c
  7047  014B76  ECC2  F0B7         	call	___xxtofl	;wreg free
  7048  014B7A  0060  F007  FFE6   	movff	btemp,postinc1
  7049  014B80  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7050  014B86  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7051  014B8C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7052  014B92  ECAD  F095         	call	___flmul	;wreg free
  7053  014B96  0060  F007  FFE6   	movff	btemp,postinc1
  7054  014B9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7055  014BA2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7056  014BA8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7057  014BAE  ECE3  F0A0         	call	___fldiv	;wreg free
  7058  014BB2  D019               	goto	l1743
  7059  014BB4                     l9822:
  7060                           
  7061                           ;daq.c: 109:   return 0.0;
  7062  014BB4  0E00               	movlw	0
  7063  014BB6  6E01               	movwf	btemp^0,c
  7064  014BB8  0E00               	movlw	0
  7065  014BBA  6E02               	movwf	(btemp+1)^0,c
  7066  014BBC  0E00               	movlw	0
  7067  014BBE  6E03               	movwf	(btemp+2)^0,c
  7068  014BC0  0E00               	movlw	0
  7069  014BC2                     L4:
  7070  014BC2  6E04               	movwf	(btemp+3)^0,c
  7071  014BC4  D010               	goto	l1743
  7072  014BC6                     l9830:
  7073                           
  7074                           ;stkvar	_to_what @ sp[(0)+-2]
  7075  014BC6  0EFE               	movlw	-2
  7076  014BC8  50E3               	movf	plusw1,w,c
  7077  014BCA  6E0B               	movwf	(btemp+10)^0,c
  7078  014BCC  6A0C               	clrf	(btemp+11)^0,c
  7079                           
  7080                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7081                           ; Switch size 1, requested type "simple"
  7082                           ; Number of cases is 1, Range of values is 0 to 0
  7083                           ; switch strategies available:
  7084                           ; Name         Instructions Cycles
  7085                           ; simple_byte            4     3 (average)
  7086                           ;	Chosen strategy is simple_byte
  7087  014BCE  500C               	movf	(btemp+11)^0,w,c
  7088  014BD0  0A00               	xorlw	0	; case 0
  7089  014BD2  A4D8               	btfss	status,2,c
  7090  014BD4  D7EF               	goto	l9822
  7091                           
  7092                           ; Switch size 1, requested type "simple"
  7093                           ; Number of cases is 2, Range of values is 0 to 1
  7094                           ; switch strategies available:
  7095                           ; Name         Instructions Cycles
  7096                           ; simple_byte            7     4 (average)
  7097                           ;	Chosen strategy is simple_byte
  7098  014BD6  500B               	movf	(btemp+10)^0,w,c
  7099  014BD8  0A00               	xorlw	0	; case 0
  7100  014BDA  B4D8               	btfsc	status,2,c
  7101  014BDC  D5B2               	goto	l9776
  7102  014BDE  0A01               	xorlw	1	; case 1
  7103  014BE0  B4D8               	btfsc	status,2,c
  7104  014BE2  D72A               	goto	l9808
  7105  014BE4  D7E7               	goto	l9822
  7106  014BE6                     l1743:
  7107                           
  7108                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  7109  014BE6  52E5               	movf	postdec1,f,c
  7110  014BE8  52E5               	movf	postdec1,f,c
  7111  014BEA  0012               	return		;funcret
  7112  014BEC                     __end_of_conv_raw_result:
  7113                           	opt callstack 0
  7114                           
  7115 ;; *************** function _nanf *****************
  7116 ;; Defined at:
  7117 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;  s               2  [STACK] PTR const unsigned char 
  7120 ;;		 -> STR_84(1), STR_46(1), 
  7121 ;; Auto vars:     Size  Location     Type
  7122 ;;  u               4  [STACK] struct .
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  4  [STACK] float 
  7125 ;; Registers used:
  7126 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/1
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7136 ;;Total ram usage:        0 bytes
  7137 ;; Hardware stack levels used:    1
  7138 ;; Hardware stack levels required when called:   15
  7139 ;; This function calls:
  7140 ;;		Nothing
  7141 ;; This function is called by:
  7142 ;;		_conv_raw_result
  7143 ;; This function uses a reentrant model
  7144 ;;
  7145                           
  7146                           	psect	text23
  7147  019900                     __ptext23:
  7148                           	opt callstack 0
  7149  019900                     _nanf:
  7150                           	opt callstack 0
  7151                           
  7152                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7153  019900  52E6               	movf	postinc1,f,c
  7154  019902  52E6               	movf	postinc1,f,c
  7155  019904  52E6               	movf	postinc1,f,c
  7156  019906  52E6               	movf	postinc1,f,c
  7157                           
  7158                           ;incstack = 0
  7159  019908  0EFF               	movlw	255
  7160  01990A  6E09               	movwf	(btemp+8)^0,c
  7161  01990C  0EFF               	movlw	255
  7162  01990E  6E0A               	movwf	(btemp+9)^0,c
  7163  019910  0EFF               	movlw	255
  7164  019912  6E0B               	movwf	(btemp+10)^0,c
  7165  019914  0E7F               	movlw	127
  7166  019916  6E0C               	movwf	(btemp+11)^0,c
  7167                           
  7168                           ;stkvar	_u @ sp[(-4)+0]
  7169  019918  0EFC               	movlw	-4
  7170  01991A  0060  F027  FFE3   	movff	btemp+8,plusw1
  7171  019920  0EFD               	movlw	-3
  7172  019922  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7173  019928  0EFE               	movlw	-2
  7174  01992A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7175  019930  0EFF               	movlw	-1
  7176  019932  0060  F033  FFE3   	movff	btemp+11,plusw1
  7177                           
  7178                           ;stkvar	_u @ sp[(-4)+0]
  7179  019938  0EFC               	movlw	-4
  7180  01993A  006F FF8C  F001    	movff	plusw1,btemp
  7181  019940  0EFD               	movlw	-3
  7182  019942  006F FF8C  F002    	movff	plusw1,btemp+1
  7183  019948  0EFE               	movlw	-2
  7184  01994A  006F FF8C  F003    	movff	plusw1,btemp+2
  7185  019950  0EFF               	movlw	-1
  7186  019952  006F FF8C  F004    	movff	plusw1,btemp+3
  7187                           
  7188                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  7189  019958  0EFA               	movlw	250
  7190  01995A  26E1               	addwf	fsr1l,f,c
  7191  01995C  0EFF               	movlw	255
  7192  01995E  22E2               	addwfc	fsr1h,f,c
  7193  019960  0012               	return		;funcret
  7194  019962                     __end_of_nanf:
  7195                           	opt callstack 0
  7196                           
  7197 ;; *************** function _get_raw_result *****************
  7198 ;; Defined at:
  7199 ;;		line 72 in file "daq.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;  index           1  [STACK] const enum E16136
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;		None
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  2  [STACK] unsigned short 
  7206 ;; Registers used:
  7207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/2
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7217 ;;Total ram usage:        0 bytes
  7218 ;; Hardware stack levels used:    1
  7219 ;; Hardware stack levels required when called:   15
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		_main
  7224 ;;		_conv_raw_result
  7225 ;; This function uses a reentrant model
  7226 ;;
  7227                           
  7228                           	psect	text24
  7229  01A75C                     __ptext24:
  7230                           	opt callstack 0
  7231  01A75C                     _get_raw_result:
  7232                           	opt callstack 13
  7233                           
  7234                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  7235                           ;stkvar	_index @ sp[(0)+-1]
  7236                           
  7237                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7238                           ;incstack = 0
  7239  01A75C  0EFF               	movlw	-1
  7240  01A75E  50E3               	movf	plusw1,w,c
  7241  01A760  0D02               	mullw	2
  7242  01A762  50F3               	movf	243,w,c
  7243  01A764  0FAA               	addlw	low _R
  7244  01A766  6ED9               	movwf	fsr2l,c
  7245  01A768  6ADA               	clrf	fsr2h,c
  7246  01A76A  006F FF78  F001    	movff	postinc2,btemp
  7247  01A770  006F FF74  F002    	movff	postdec2,btemp+1
  7248                           
  7249                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  7250  01A776  52E5               	movf	postdec1,f,c
  7251  01A778  0012               	return		;funcret
  7252  01A77A                     __end_of_get_raw_result:
  7253                           	opt callstack 0
  7254                           
  7255 ;; *************** function ___xxtofl *****************
  7256 ;; Defined at:
  7257 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;  sign            1  [STACK] unsigned char 
  7260 ;;  val             4  [STACK] long 
  7261 ;; Auto vars:     Size  Location     Type
  7262 ;;  arg             4  [STACK] unsigned long 
  7263 ;;  exp             1  [STACK] unsigned char 
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  4  [STACK] unsigned char 
  7266 ;; Registers used:
  7267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/1
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7277 ;;Total ram usage:        0 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:   15
  7280 ;; This function calls:
  7281 ;;		Nothing
  7282 ;; This function is called by:
  7283 ;;		_conv_raw_result
  7284 ;;		_init_bsoc
  7285 ;; This function uses a reentrant model
  7286 ;;
  7287                           
  7288                           	psect	text25
  7289  016F84                     __ptext25:
  7290                           	opt callstack 0
  7291  016F84                     ___xxtofl:
  7292                           	opt callstack 0
  7293                           
  7294                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7295  016F84  0E05               	movlw	5
  7296  016F86  26E1               	addwf	fsr1l,f,c
  7297  016F88  0E00               	movlw	0
  7298  016F8A  22E2               	addwfc	fsr1h,f,c
  7299                           
  7300                           ;stkvar	_sign @ sp[(-5)+-1]
  7301                           
  7302                           ;incstack = 0
  7303  016F8C  0EFA               	movlw	-6
  7304  016F8E  50E3               	movf	plusw1,w,c
  7305  016F90  B4D8               	btfsc	status,2,c
  7306  016F92  D01D               	goto	l9222
  7307                           
  7308                           ;stkvar	_val @ sp[(-5)+-5]
  7309  016F94  0EF9               	movlw	-7
  7310  016F96  AEE3               	btfss	plusw1,7,c
  7311  016F98  D01A               	goto	l9222
  7312                           
  7313                           ;stkvar	_val @ sp[(-5)+-5]
  7314  016F9A  0EF6               	movlw	-10
  7315  016F9C  006F FF8C  F009    	movff	plusw1,btemp+8
  7316  016FA2  0EF7               	movlw	-9
  7317  016FA4  006F FF8C  F00A    	movff	plusw1,btemp+9
  7318  016FAA  0EF8               	movlw	-8
  7319  016FAC  006F FF8C  F00B    	movff	plusw1,btemp+10
  7320  016FB2  0EF9               	movlw	-7
  7321  016FB4  006F FF8C  F00C    	movff	plusw1,btemp+11
  7322  016FBA  1E09               	comf	(btemp+8)^0,f,c
  7323  016FBC  1E0A               	comf	(btemp+9)^0,f,c
  7324  016FBE  1E0B               	comf	(btemp+10)^0,f,c
  7325  016FC0  1E0C               	comf	(btemp+11)^0,f,c
  7326  016FC2  2A09               	incf	(btemp+8)^0,f,c
  7327  016FC4  0E00               	movlw	0
  7328  016FC6  220A               	addwfc	(btemp+9)^0,f,c
  7329  016FC8  220B               	addwfc	(btemp+10)^0,f,c
  7330  016FCA  220C               	addwfc	(btemp+11)^0,f,c
  7331  016FCC  D010               	goto	L5
  7332  016FCE                     l9222:
  7333                           
  7334                           ;stkvar	_val @ sp[(-5)+-5]
  7335  016FCE  0EF6               	movlw	-10
  7336  016FD0  006F FF8C  F009    	movff	plusw1,btemp+8
  7337  016FD6  0EF7               	movlw	-9
  7338  016FD8  006F FF8C  F00A    	movff	plusw1,btemp+9
  7339  016FDE  0EF8               	movlw	-8
  7340  016FE0  006F FF8C  F00B    	movff	plusw1,btemp+10
  7341  016FE6  0EF9               	movlw	-7
  7342  016FE8  006F FF8C  F00C    	movff	plusw1,btemp+11
  7343  016FEE                     L5:
  7344                           
  7345                           ;stkvar	_arg @ sp[(-5)+0]
  7346  016FEE  0EFB               	movlw	-5
  7347  016FF0  0060  F027  FFE3   	movff	btemp+8,plusw1
  7348  016FF6  0EFC               	movlw	-4
  7349  016FF8  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7350  016FFE  0EFD               	movlw	-3
  7351  017000  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7352  017006  0EFE               	movlw	-2
  7353  017008  0060  F033  FFE3   	movff	btemp+11,plusw1
  7354                           
  7355                           ;stkvar	_val @ sp[(-5)+-5]
  7356  01700E  0EF6               	movlw	-10
  7357  017010  50E3               	movf	plusw1,w,c
  7358  017012  E113               	bnz	l9230
  7359  017014  0EF7               	movlw	-9
  7360  017016  50E3               	movf	plusw1,w,c
  7361  017018  E110               	bnz	l9230
  7362  01701A  0EF8               	movlw	-8
  7363  01701C  50E3               	movf	plusw1,w,c
  7364  01701E  E10D               	bnz	l9230
  7365  017020  0EF9               	movlw	-7
  7366  017022  50E3               	movf	plusw1,w,c
  7367  017024  A4D8               	btfss	status,2,c
  7368  017026  D009               	goto	l9230
  7369  017028  0E00               	movlw	0
  7370  01702A  6E01               	movwf	btemp^0,c
  7371  01702C  0E00               	movlw	0
  7372  01702E  6E02               	movwf	(btemp+1)^0,c
  7373  017030  0E00               	movlw	0
  7374  017032  6E03               	movwf	(btemp+2)^0,c
  7375  017034  0E00               	movlw	0
  7376  017036  6E04               	movwf	(btemp+3)^0,c
  7377  017038  D0A2               	goto	l2949
  7378  01703A                     l9230:
  7379  01703A  0E96               	movlw	150
  7380  01703C  6E0C               	movwf	(btemp+11)^0,c
  7381                           
  7382                           ;stkvar	_exp @ sp[(-5)+4]
  7383  01703E  0EFF               	movlw	-1
  7384  017040  0060  F033  FFE3   	movff	btemp+11,plusw1
  7385  017046  D00B               	goto	l9234
  7386  017048                     l9232:
  7387                           
  7388                           ;stkvar	_exp @ sp[(-5)+4]
  7389  017048  0EFF               	movlw	-1
  7390  01704A  2AE3               	incf	plusw1,f,c
  7391                           
  7392                           ;stkvar	_arg @ sp[(-5)+0]
  7393  01704C  90D8               	bcf	status,0,c
  7394  01704E  0EFE               	movlw	-2
  7395  017050  32E3               	rrcf	plusw1,f,c
  7396  017052  0EFD               	movlw	-3
  7397  017054  32E3               	rrcf	plusw1,f,c
  7398  017056  0EFC               	movlw	-4
  7399  017058  32E3               	rrcf	plusw1,f,c
  7400  01705A  0EFB               	movlw	-5
  7401  01705C  32E3               	rrcf	plusw1,f,c
  7402  01705E                     l9234:
  7403                           
  7404                           ;stkvar	_arg @ sp[(-5)+0]
  7405  01705E  50E1               	movf	fsr1l,w,c
  7406  017060  0FFB               	addlw	-5
  7407  017062  6ED9               	movwf	fsr2l,c
  7408  017064  50E2               	movf	fsr1h,w,c
  7409  017066  6EDA               	movwf	fsr2h,c
  7410  017068  0EFF               	movlw	255
  7411  01706A  22DA               	addwfc	fsr2h,f,c
  7412  01706C  52DE               	movf	postinc2,f,c
  7413  01706E  52DE               	movf	postinc2,f,c
  7414  017070  52DE               	movf	postinc2,f,c
  7415  017072  0EFE               	movlw	254
  7416  017074  14DD               	andwf	postdec2,w,c
  7417  017076  B4D8               	btfsc	status,2,c
  7418  017078  D018               	goto	l9242
  7419  01707A  D7E6               	goto	l9232
  7420  01707C                     l9236:
  7421                           
  7422                           ;stkvar	_exp @ sp[(-5)+4]
  7423  01707C  0EFF               	movlw	-1
  7424  01707E  2AE3               	incf	plusw1,f,c
  7425                           
  7426                           ;stkvar	_arg @ sp[(-5)+0]
  7427  017080  50E1               	movf	fsr1l,w,c
  7428  017082  0FFB               	addlw	-5
  7429  017084  6ED9               	movwf	fsr2l,c
  7430  017086  50E2               	movf	fsr1h,w,c
  7431  017088  6EDA               	movwf	fsr2h,c
  7432  01708A  0EFF               	movlw	255
  7433  01708C  22DA               	addwfc	fsr2h,f,c
  7434  01708E  2ADE               	incf	postinc2,f,c
  7435  017090  0E00               	movlw	0
  7436  017092  22DE               	addwfc	postinc2,f,c
  7437  017094  22DE               	addwfc	postinc2,f,c
  7438  017096  22DE               	addwfc	postinc2,f,c
  7439                           
  7440                           ;stkvar	_arg @ sp[(-5)+0]
  7441  017098  90D8               	bcf	status,0,c
  7442  01709A  0EFE               	movlw	-2
  7443  01709C  32E3               	rrcf	plusw1,f,c
  7444  01709E  0EFD               	movlw	-3
  7445  0170A0  32E3               	rrcf	plusw1,f,c
  7446  0170A2  0EFC               	movlw	-4
  7447  0170A4  32E3               	rrcf	plusw1,f,c
  7448  0170A6  0EFB               	movlw	-5
  7449  0170A8  32E3               	rrcf	plusw1,f,c
  7450  0170AA                     l9242:
  7451                           
  7452                           ;stkvar	_arg @ sp[(-5)+0]
  7453  0170AA  50E1               	movf	fsr1l,w,c
  7454  0170AC  0FFB               	addlw	-5
  7455  0170AE  6ED9               	movwf	fsr2l,c
  7456  0170B0  50E2               	movf	fsr1h,w,c
  7457  0170B2  6EDA               	movwf	fsr2h,c
  7458  0170B4  0EFF               	movlw	255
  7459  0170B6  22DA               	addwfc	fsr2h,f,c
  7460  0170B8  52DE               	movf	postinc2,f,c
  7461  0170BA  52DE               	movf	postinc2,f,c
  7462  0170BC  52DE               	movf	postinc2,f,c
  7463  0170BE  0EFF               	movlw	255
  7464  0170C0  14DD               	andwf	postdec2,w,c
  7465  0170C2  B4D8               	btfsc	status,2,c
  7466  0170C4  D00C               	goto	l9246
  7467  0170C6  D7DA               	goto	l9236
  7468  0170C8                     l9244:
  7469                           
  7470                           ;stkvar	_exp @ sp[(-5)+4]
  7471  0170C8  0EFF               	movlw	-1
  7472  0170CA  06E3               	decf	plusw1,f,c
  7473                           
  7474                           ;stkvar	_arg @ sp[(-5)+0]
  7475  0170CC  90D8               	bcf	status,0,c
  7476  0170CE  0EFB               	movlw	-5
  7477  0170D0  36E3               	rlcf	plusw1,f,c
  7478  0170D2  0EFC               	movlw	-4
  7479  0170D4  36E3               	rlcf	plusw1,f,c
  7480  0170D6  0EFD               	movlw	-3
  7481  0170D8  36E3               	rlcf	plusw1,f,c
  7482  0170DA  0EFE               	movlw	-2
  7483  0170DC  36E3               	rlcf	plusw1,f,c
  7484  0170DE                     l9246:
  7485                           
  7486                           ;stkvar	_arg @ sp[(-5)+0]
  7487  0170DE  0EFD               	movlw	-3
  7488  0170E0  BEE3               	btfsc	plusw1,7,c
  7489  0170E2  D007               	goto	u8720
  7490                           
  7491                           ;stkvar	_exp @ sp[(-5)+4]
  7492  0170E4  0EFF               	movlw	-1
  7493  0170E6  006F FF8C  F001    	movff	plusw1,btemp
  7494  0170EC  0E02               	movlw	2
  7495  0170EE  6001               	cpfslt	btemp^0,c
  7496  0170F0  D7EB               	goto	l9244
  7497  0170F2                     u8720:
  7498                           
  7499                           ;stkvar	_exp @ sp[(-5)+4]
  7500  0170F2  0EFF               	movlw	-1
  7501  0170F4  B0E3               	btfsc	plusw1,0,c
  7502  0170F6  D002               	goto	l9254
  7503                           
  7504                           ;stkvar	_arg @ sp[(-5)+0]
  7505  0170F8  0EFD               	movlw	-3
  7506  0170FA  9EE3               	bcf	plusw1,7,c
  7507  0170FC                     l9254:
  7508                           
  7509                           ;stkvar	_exp @ sp[(-5)+4]
  7510  0170FC  50E1               	movf	fsr1l,w,c
  7511  0170FE  0FFF               	addlw	-1
  7512  017100  6ED9               	movwf	fsr2l,c
  7513  017102  50E2               	movf	fsr1h,w,c
  7514  017104  6EDA               	movwf	fsr2h,c
  7515  017106  0EFF               	movlw	255
  7516  017108  22DA               	addwfc	fsr2h,f,c
  7517  01710A  90D8               	bcf	status,0,c
  7518  01710C  32DF               	rrcf	indf2,f,c
  7519                           
  7520                           ;stkvar	_exp @ sp[(-5)+4]
  7521  01710E  0EFF               	movlw	-1
  7522  017110  006F FF8C  F00C    	movff	plusw1,btemp+11
  7523  017116  0060  F030  F005   	movff	btemp+11,btemp+4
  7524  01711C  6A06               	clrf	(btemp+5)^0,c
  7525  01711E  6A07               	clrf	(btemp+6)^0,c
  7526  017120  6A08               	clrf	(btemp+7)^0,c
  7527  017122  0060  F014  F008   	movff	btemp+4,btemp+7
  7528  017128  6A07               	clrf	(btemp+6)^0,c
  7529  01712A  6A06               	clrf	(btemp+5)^0,c
  7530  01712C  6A05               	clrf	(btemp+4)^0,c
  7531                           
  7532                           ;stkvar	_arg @ sp[(-5)+0]
  7533  01712E  50E1               	movf	fsr1l,w,c
  7534  017130  0FFB               	addlw	-5
  7535  017132  6ED9               	movwf	fsr2l,c
  7536  017134  50E2               	movf	fsr1h,w,c
  7537  017136  6EDA               	movwf	fsr2h,c
  7538  017138  0EFF               	movlw	255
  7539  01713A  22DA               	addwfc	fsr2h,f,c
  7540  01713C  5005               	movf	(btemp+4)^0,w,c
  7541  01713E  12DE               	iorwf	postinc2,f,c
  7542  017140  5006               	movf	(btemp+5)^0,w,c
  7543  017142  12DE               	iorwf	postinc2,f,c
  7544  017144  5007               	movf	(btemp+6)^0,w,c
  7545  017146  12DE               	iorwf	postinc2,f,c
  7546  017148  5008               	movf	(btemp+7)^0,w,c
  7547  01714A  12DE               	iorwf	postinc2,f,c
  7548                           
  7549                           ;stkvar	_sign @ sp[(-5)+-1]
  7550  01714C  0EFA               	movlw	-6
  7551  01714E  50E3               	movf	plusw1,w,c
  7552  017150  B4D8               	btfsc	status,2,c
  7553  017152  D005               	goto	l9264
  7554                           
  7555                           ;stkvar	_val @ sp[(-5)+-5]
  7556  017154  0EF9               	movlw	-7
  7557  017156  AEE3               	btfss	plusw1,7,c
  7558  017158  D002               	goto	l9264
  7559                           
  7560                           ;stkvar	_arg @ sp[(-5)+0]
  7561  01715A  0EFE               	movlw	-2
  7562  01715C  8EE3               	bsf	plusw1,7,c
  7563  01715E                     l9264:
  7564                           
  7565                           ;stkvar	_arg @ sp[(-5)+0]
  7566  01715E  0EFB               	movlw	-5
  7567  017160  006F FF8C  F001    	movff	plusw1,btemp
  7568  017166  0EFC               	movlw	-4
  7569  017168  006F FF8C  F002    	movff	plusw1,btemp+1
  7570  01716E  0EFD               	movlw	-3
  7571  017170  006F FF8C  F003    	movff	plusw1,btemp+2
  7572  017176  0EFE               	movlw	-2
  7573  017178  006F FF8C  F004    	movff	plusw1,btemp+3
  7574  01717E                     l2949:
  7575                           
  7576                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  7577  01717E  0EF6               	movlw	246
  7578  017180  26E1               	addwf	fsr1l,f,c
  7579  017182  0EFF               	movlw	255
  7580  017184  22E2               	addwfc	fsr1h,f,c
  7581  017186  0012               	return		;funcret
  7582  017188                     __end_of___xxtofl:
  7583                           	opt callstack 0
  7584                           
  7585 ;; *************** function _clear_hid_pflags *****************
  7586 ;; Defined at:
  7587 ;;		line 51 in file "hid.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  h               1  [STACK] PTR struct H_data
  7590 ;;		 -> H(7), 
  7591 ;; Auto vars:     Size  Location     Type
  7592 ;;		None
  7593 ;; Return value:  Size  Location     Type
  7594 ;;                  1  [STACK] void 
  7595 ;; Registers used:
  7596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7597 ;; Tracked objects:
  7598 ;;		On entry : 3F/0
  7599 ;;		On exit  : 0/0
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7606 ;;Total ram usage:        0 bytes
  7607 ;; Hardware stack levels used:    1
  7608 ;; Hardware stack levels required when called:   15
  7609 ;; This function calls:
  7610 ;;		Nothing
  7611 ;; This function is called by:
  7612 ;;		_main
  7613 ;; This function uses a reentrant model
  7614 ;;
  7615                           
  7616                           	psect	text26
  7617  01A604                     __ptext26:
  7618                           	opt callstack 0
  7619  01A604                     _clear_hid_pflags:
  7620                           	opt callstack 15
  7621                           
  7622                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  7623                           ;stkvar	_h @ sp[(0)+-1]
  7624                           
  7625                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7626                           ;incstack = 0
  7627  01A604  0EFF               	movlw	-1
  7628  01A606  50E3               	movf	plusw1,w,c
  7629  01A608  6ED9               	movwf	fsr2l,c
  7630  01A60A  6ADA               	clrf	fsr2h,c
  7631  01A60C  0E03               	movlw	3
  7632  01A60E  26D9               	addwf	fsr2l,f,c
  7633  01A610  0E00               	movlw	0
  7634  01A612  6EDF               	movwf	indf2,c
  7635                           
  7636                           ;hid.c: 54:  h->enter_p = SW_OFF;
  7637                           ;stkvar	_h @ sp[(0)+-1]
  7638  01A614  0EFF               	movlw	-1
  7639  01A616  50E3               	movf	plusw1,w,c
  7640  01A618  6ED9               	movwf	fsr2l,c
  7641  01A61A  6ADA               	clrf	fsr2h,c
  7642  01A61C  0E05               	movlw	5
  7643  01A61E  26D9               	addwf	fsr2l,f,c
  7644  01A620  0E00               	movlw	0
  7645  01A622  6EDF               	movwf	indf2,c
  7646                           
  7647                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7648  01A624  52E5               	movf	postdec1,f,c
  7649  01A626  0012               	return		;funcret
  7650  01A628                     __end_of_clear_hid_pflags:
  7651                           	opt callstack 0
  7652                           
  7653 ;; *************** function _clear_adc_scan *****************
  7654 ;; Defined at:
  7655 ;;		line 64 in file "daq.c"
  7656 ;; Parameters:    Size  Location     Type
  7657 ;;		None
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;		None
  7660 ;; Return value:  Size  Location     Type
  7661 ;;                  1  [STACK] void 
  7662 ;; Registers used:
  7663 ;;		None
  7664 ;; Tracked objects:
  7665 ;;		On entry : 0/1
  7666 ;;		On exit  : 3F/0
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7673 ;;Total ram usage:        0 bytes
  7674 ;; Hardware stack levels used:    1
  7675 ;; Hardware stack levels required when called:   15
  7676 ;; This function calls:
  7677 ;;		Nothing
  7678 ;; This function is called by:
  7679 ;;		_main
  7680 ;; This function uses a reentrant model
  7681 ;;
  7682                           
  7683                           	psect	text27
  7684  01A992                     __ptext27:
  7685                           	opt callstack 0
  7686  01A992                     _clear_adc_scan:
  7687                           	opt callstack 15
  7688                           
  7689                           ;daq.c: 66:  R.done = 0;
  7690                           
  7691                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7692                           ;incstack = 0
  7693  01A992  0100               	movlb	0	; () banked
  7694  01A994  6BD1               	clrf	(_R+39)& (0+255),b	;volatile
  7695                           
  7696                           ; BSR set to: 0
  7697                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7698  01A996  0012               	return		;funcret
  7699  01A998                     __end_of_clear_adc_scan:
  7700                           	opt callstack 0
  7701                           
  7702 ;; *************** function _check_help *****************
  7703 ;; Defined at:
  7704 ;;		line 40 in file "mconfig.c"
  7705 ;; Parameters:    Size  Location     Type
  7706 ;;  flipper         1  [STACK] const _Bool 
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;  estatus         1    0        _Bool 
  7709 ;; Return value:  Size  Location     Type
  7710 ;;                  1  [STACK] _Bool 
  7711 ;; Registers used:
  7712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7713 ;; Tracked objects:
  7714 ;;		On entry : 3F/2
  7715 ;;		On exit  : 0/0
  7716 ;;		Unchanged: 0/0
  7717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7722 ;;Total ram usage:        0 bytes
  7723 ;; Hardware stack levels used:    1
  7724 ;; Hardware stack levels required when called:   27
  7725 ;; This function calls:
  7726 ;;		_StartTimer
  7727 ;;		_TimerDone
  7728 ;;		_display_help
  7729 ;;		_display_info
  7730 ;;		_get_vterm_ptr
  7731 ;;		_help_button
  7732 ;;		_mode_lamp_bright
  7733 ;;		_mode_lamp_dim
  7734 ;;		_set_display_info
  7735 ;;		_set_temp_display_help
  7736 ;;		_set_vterm
  7737 ;;		_sprintf
  7738 ;;		_update_lcd
  7739 ;;		_vterm_dump
  7740 ;; This function is called by:
  7741 ;;		_main
  7742 ;; This function uses a reentrant model
  7743 ;;
  7744                           
  7745                           	psect	text28
  7746  016D72                     __ptext28:
  7747                           	opt callstack 0
  7748  016D72                     _check_help:
  7749                           	opt callstack 3
  7750                           
  7751                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  7752                           
  7753                           ; BSR set to: 0
  7754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7755                           ;incstack = 0
  7756  016D72  EC15  F0D0         	call	_help_button	;wreg free
  7757  016D76  5001               	movf	btemp^0,w,c
  7758  016D78  B4D8               	btfsc	status,2,c
  7759  016D7A  D0D0               	goto	l12166
  7760  016D7C  ECB5  F0D4         	call	_display_info	;wreg free
  7761  016D80  0401               	decf	btemp^0,w,c
  7762  016D82  B4D8               	btfsc	status,2,c
  7763  016D84  D0CB               	goto	l12166
  7764                           
  7765                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  7766  016D86  0EDC               	movlw	220
  7767  016D88  6EE6               	movwf	postinc1,c
  7768  016D8A  0E05               	movlw	5
  7769  016D8C  6EE6               	movwf	postinc1,c
  7770  016D8E  0E0B               	movlw	11
  7771  016D90  6EE6               	movwf	postinc1,c
  7772  016D92  EC76  F0CF         	call	_StartTimer	;wreg free
  7773                           
  7774                           ;mconfig.c: 48:   if (V.debug)
  7775  016D96  0102               	movlb	2	; () banked
  7776  016D98  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  7777                           
  7778                           ; BSR set to: 2
  7779                           ;mconfig.c: 49:    vterm_dump();
  7780  016D9A  EC7E  F0C1         	call	_vterm_dump	;wreg free
  7781                           
  7782                           ;mconfig.c: 51:   set_vterm(1);
  7783  016D9E  0E01               	movlw	1
  7784  016DA0  6EE6               	movwf	postinc1,c
  7785  016DA2  ECBD  F0D3         	call	_set_vterm	;wreg free
  7786                           
  7787                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  7788  016DA6  ECB5  F0D4         	call	_display_info	;wreg free
  7789  016DAA  5001               	movf	btemp^0,w,c
  7790  016DAC  6EE6               	movwf	postinc1,c
  7791  016DAE  EC6F  F0D4         	call	_set_temp_display_help	;wreg free
  7792                           
  7793                           ; BSR set to: 2
  7794                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  7795  016DB2  0E01               	movlw	1
  7796  016DB4  6EE6               	movwf	postinc1,c
  7797  016DB6  ECCC  F0D3         	call	_set_display_info	;wreg free
  7798                           
  7799                           ;mconfig.c: 54:   if (flipper) {
  7800                           ;stkvar	_flipper @ sp[(0)+-1]
  7801  016DBA  0EFF               	movlw	-1
  7802  016DBC  50E3               	movf	plusw1,w,c
  7803  016DBE  B4D8               	btfsc	status,2,c
  7804  016DC0  D019               	goto	l12152
  7805                           
  7806                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  7807  016DC2  0EB3               	movlw	low STR_28
  7808  016DC4  6EE6               	movwf	postinc1,c
  7809  016DC6  0EFF               	movlw	high STR_28
  7810  016DC8  6EE6               	movwf	postinc1,c
  7811  016DCA  0E72               	movlw	low STR_30
  7812  016DCC  6EE6               	movwf	postinc1,c
  7813  016DCE  0EFE               	movlw	high STR_30
  7814  016DD0  6EE6               	movwf	postinc1,c
  7815  016DD2  0E01               	movlw	1
  7816  016DD4  6EE6               	movwf	postinc1,c
  7817  016DD6  0E00               	movlw	0
  7818  016DD8  6EE6               	movwf	postinc1,c
  7819  016DDA  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  7820  016DDE  0060  F007  FFE6   	movff	btemp,postinc1
  7821  016DE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7822  016DEA  0E06               	movlw	6
  7823  016DEC  6EE6               	movwf	postinc1,c
  7824  016DEE  EC45  F0C4         	call	_sprintf	;wreg free
  7825                           
  7826                           ;mconfig.c: 56:   } else {
  7827  016DF2  D018               	goto	l1647
  7828  016DF4                     l12152:
  7829                           
  7830                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  7831  016DF4  0EC9               	movlw	low STR_29
  7832  016DF6  6EE6               	movwf	postinc1,c
  7833  016DF8  0EFF               	movlw	high STR_29
  7834  016DFA  6EE6               	movwf	postinc1,c
  7835  016DFC  0E72               	movlw	low STR_30
  7836  016DFE  6EE6               	movwf	postinc1,c
  7837  016E00  0EFE               	movlw	high STR_30
  7838  016E02  6EE6               	movwf	postinc1,c
  7839  016E04  0E01               	movlw	1
  7840  016E06  6EE6               	movwf	postinc1,c
  7841  016E08  0E00               	movlw	0
  7842  016E0A  6EE6               	movwf	postinc1,c
  7843  016E0C  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  7844  016E10  0060  F007  FFE6   	movff	btemp,postinc1
  7845  016E16  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7846  016E1C  0E06               	movlw	6
  7847  016E1E  6EE6               	movwf	postinc1,c
  7848  016E20  EC45  F0C4         	call	_sprintf	;wreg free
  7849  016E24                     l1647:
  7850                           
  7851                           ; BSR set to: 0
  7852                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  7853  016E24  0102               	movlb	2	; () banked
  7854  016E26  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7855  016E28  32E8               	rrcf	wreg,f,c
  7856  016E2A  32E8               	rrcf	wreg,f,c
  7857  016E2C  0B03               	andlw	3
  7858  016E2E  0D24               	mullw	36
  7859  016E30  0E12               	movlw	18
  7860  016E32  26F3               	addwf	243,f,c
  7861  016E34  0E00               	movlw	0
  7862  016E36  22F4               	addwfc	244,f,c
  7863  016E38  0E29               	movlw	low _T
  7864  016E3A  6E0B               	movwf	(btemp+10)^0,c
  7865  016E3C  0EFD               	movlw	high _T
  7866  016E3E  6E0C               	movwf	(btemp+11)^0,c
  7867  016E40  50F3               	movf	243,w,c
  7868  016E42  260B               	addwf	(btemp+10)^0,f,c
  7869  016E44  50F4               	movf	244,w,c
  7870  016E46  220C               	addwfc	(btemp+11)^0,f,c
  7871  016E48  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7872  016E4E  0060  F033  FFE6   	movff	btemp+11,postinc1
  7873  016E54  0EBF               	movlw	low STR_32
  7874  016E56  6EE6               	movwf	postinc1,c
  7875  016E58  0EFF               	movlw	high STR_32
  7876  016E5A  6EE6               	movwf	postinc1,c
  7877  016E5C  0E01               	movlw	1
  7878  016E5E  6EE6               	movwf	postinc1,c
  7879  016E60  0E01               	movlw	1
  7880  016E62  6EE6               	movwf	postinc1,c
  7881  016E64  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  7882  016E68  0060  F007  FFE6   	movff	btemp,postinc1
  7883  016E6E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7884  016E74  0E06               	movlw	6
  7885  016E76  6EE6               	movwf	postinc1,c
  7886  016E78  EC45  F0C4         	call	_sprintf	;wreg free
  7887                           
  7888                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  7889  016E7C  0102               	movlb	2	; () banked
  7890  016E7E  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  7891  016E80  32E8               	rrcf	wreg,f,c
  7892  016E82  32E8               	rrcf	wreg,f,c
  7893  016E84  0B03               	andlw	3
  7894  016E86  0D24               	mullw	36
  7895  016E88  0E29               	movlw	low _T
  7896  016E8A  6E0B               	movwf	(btemp+10)^0,c
  7897  016E8C  0EFD               	movlw	high _T
  7898  016E8E  6E0C               	movwf	(btemp+11)^0,c
  7899  016E90  50F3               	movf	243,w,c
  7900  016E92  260B               	addwf	(btemp+10)^0,f,c
  7901  016E94  50F4               	movf	244,w,c
  7902  016E96  220C               	addwfc	(btemp+11)^0,f,c
  7903  016E98  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7904  016E9E  0060  F033  FFE6   	movff	btemp+11,postinc1
  7905  016EA4  0EBF               	movlw	low STR_32
  7906  016EA6  6EE6               	movwf	postinc1,c
  7907  016EA8  0EFF               	movlw	high STR_32
  7908  016EAA  6EE6               	movwf	postinc1,c
  7909  016EAC  0E01               	movlw	1
  7910  016EAE  6EE6               	movwf	postinc1,c
  7911  016EB0  0E02               	movlw	2
  7912  016EB2  6EE6               	movwf	postinc1,c
  7913  016EB4  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  7914  016EB8  0060  F007  FFE6   	movff	btemp,postinc1
  7915  016EBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7916  016EC4  0E06               	movlw	6
  7917  016EC6  6EE6               	movwf	postinc1,c
  7918  016EC8  EC45  F0C4         	call	_sprintf	;wreg free
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;mconfig.c: 61:   V.help_id++;
  7922  016ECC  EE20  F29B         	lfsr	2,_V+155	;volatile
  7923  016ED0  38DF               	swapf	223,w,c
  7924  016ED2  6E0C               	movwf	(btemp+11)^0,c
  7925  016ED4  320C               	rrcf	(btemp+11)^0,f,c
  7926  016ED6  300C               	rrcf	(btemp+11)^0,w,c
  7927  016ED8  0B03               	andlw	3
  7928  016EDA  6E0C               	movwf	(btemp+11)^0,c
  7929  016EDC  2A0C               	incf	(btemp+11)^0,f,c
  7930  016EDE  3A0C               	swapf	(btemp+11)^0,f,c
  7931  016EE0  360C               	rlcf	(btemp+11)^0,f,c
  7932  016EE2  360C               	rlcf	(btemp+11)^0,f,c
  7933  016EE4  50DF               	movf	223,w,c
  7934  016EE6  180C               	xorwf	(btemp+11)^0,w,c
  7935  016EE8  0B3F               	andlw	-193
  7936  016EEA  180C               	xorwf	(btemp+11)^0,w,c
  7937  016EEC  6EDF               	movwf	223,c
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  7941  016EEE  0EB8               	movlw	184
  7942  016EF0  6EE6               	movwf	postinc1,c
  7943  016EF2  0E0B               	movlw	11
  7944  016EF4  6EE6               	movwf	postinc1,c
  7945  016EF6  0E09               	movlw	9
  7946  016EF8  6EE6               	movwf	postinc1,c
  7947  016EFA  EC76  F0CF         	call	_StartTimer	;wreg free
  7948                           
  7949                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  7950  016EFE  0EB8               	movlw	184
  7951  016F00  6EE6               	movwf	postinc1,c
  7952  016F02  0E0B               	movlw	11
  7953  016F04  6EE6               	movwf	postinc1,c
  7954  016F06  0E07               	movlw	7
  7955  016F08  6EE6               	movwf	postinc1,c
  7956  016F0A  EC76  F0CF         	call	_StartTimer	;wreg free
  7957                           
  7958                           ;mconfig.c: 64:   mode_lamp_bright();
  7959  016F0E  EC7E  F0D4         	call	_mode_lamp_bright	;wreg free
  7960                           
  7961                           ;mconfig.c: 65:   update_lcd(1);
  7962  016F12  0E01               	movlw	1
  7963  016F14  6EE6               	movwf	postinc1,c
  7964  016F16  ECBD  F0C3         	call	_update_lcd	;wreg free
  7965                           
  7966                           ;mconfig.c: 67:  } else {
  7967  016F1A  D032               	goto	l1648
  7968  016F1C                     l12166:
  7969                           
  7970                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  7971  016F1C  0E09               	movlw	9
  7972  016F1E  6EE6               	movwf	postinc1,c
  7973  016F20  ECD7  F0D1         	call	_TimerDone	;wreg free
  7974  016F24  5001               	movf	btemp^0,w,c
  7975  016F26  B4D8               	btfsc	status,2,c
  7976  016F28  D02B               	goto	l1648
  7977                           
  7978                           ;mconfig.c: 69:    set_vterm(0);
  7979  016F2A  0E00               	movlw	0
  7980  016F2C  6EE6               	movwf	postinc1,c
  7981  016F2E  ECBD  F0D3         	call	_set_vterm	;wreg free
  7982                           
  7983                           ;mconfig.c: 70:    V.help = 0;
  7984  016F32  0102               	movlb	2	; () banked
  7985  016F34  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  7986                           
  7987                           ; BSR set to: 2
  7988                           ;mconfig.c: 71:    set_display_info(display_help());
  7989  016F36  ECB9  F0D4         	call	_display_help	;wreg free
  7990  016F3A  5001               	movf	btemp^0,w,c
  7991  016F3C  6EE6               	movwf	postinc1,c
  7992  016F3E  ECCC  F0D3         	call	_set_display_info	;wreg free
  7993                           
  7994                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  7995  016F42  0060  FA57  FFE6   	movff	_V+149,postinc1
  7996  016F48  0060  FA5B  FFE6   	movff	_V+150,postinc1
  7997  016F4E  EC13  F0D4         	call	_mode_lamp_dim	;wreg free
  7998                           
  7999                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  8000  016F52  0E0B               	movlw	11
  8001  016F54  6EE6               	movwf	postinc1,c
  8002  016F56  ECD7  F0D1         	call	_TimerDone	;wreg free
  8003  016F5A  5001               	movf	btemp^0,w,c
  8004  016F5C  B4D8               	btfsc	status,2,c
  8005  016F5E  D010               	goto	l1648
  8006                           
  8007                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  8008  016F60  0102               	movlb	2	; () banked
  8009  016F62  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  8010  016F64  A4D8               	btfss	status,2,c
  8011  016F66  D002               	goto	u11870
  8012  016F68  0E01               	movlw	1
  8013  016F6A  D001               	goto	u11880
  8014  016F6C                     u11870:
  8015  016F6C  0E00               	movlw	0
  8016  016F6E                     u11880:
  8017  016F6E  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  8018                           
  8019                           ; BSR set to: 2
  8020                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  8021  016F70  0EDC               	movlw	220
  8022  016F72  6EE6               	movwf	postinc1,c
  8023  016F74  0E05               	movlw	5
  8024  016F76  6EE6               	movwf	postinc1,c
  8025  016F78  0E0B               	movlw	11
  8026  016F7A  6EE6               	movwf	postinc1,c
  8027  016F7C  EC76  F0CF         	call	_StartTimer	;wreg free
  8028  016F80                     l1648:
  8029                           
  8030                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8031  016F80  52E5               	movf	postdec1,f,c
  8032  016F82  0012               	return		;funcret
  8033  016F84                     __end_of_check_help:
  8034                           	opt callstack 0
  8035                           
  8036 ;; *************** function _vterm_dump *****************
  8037 ;; Defined at:
  8038 ;;		line 121 in file "mconfig.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;		None
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;		None
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  1  [STACK] void 
  8045 ;; Registers used:
  8046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8047 ;; Tracked objects:
  8048 ;;		On entry : 3F/2
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8056 ;;Total ram usage:        0 bytes
  8057 ;; Hardware stack levels used:    1
  8058 ;; Hardware stack levels required when called:   26
  8059 ;; This function calls:
  8060 ;;		_WaitMs
  8061 ;;		_eaDogM_WriteStringAtPos
  8062 ;;		_get_vterm_ptr
  8063 ;;		_sprintf
  8064 ;;		_wait_lcd_done
  8065 ;; This function is called by:
  8066 ;;		_check_help
  8067 ;; This function uses a reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text29
  8071  0182FC                     __ptext29:
  8072                           	opt callstack 0
  8073  0182FC                     _vterm_dump:
  8074                           	opt callstack 3
  8075                           
  8076                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  8077                           
  8078                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8079                           ;incstack = 0
  8080  0182FC  0E01               	movlw	1
  8081  0182FE  6EE6               	movwf	postinc1,c
  8082  018300  0E00               	movlw	0
  8083  018302  6EE6               	movwf	postinc1,c
  8084  018304  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  8085  018308  0060  F007  FFE6   	movff	btemp,postinc1
  8086  01830E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8087  018314  0E00               	movlw	0
  8088  018316  6EE6               	movwf	postinc1,c
  8089  018318  0E00               	movlw	0
  8090  01831A  6EE6               	movwf	postinc1,c
  8091  01831C  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  8092  018320  0060  F007  FFE6   	movff	btemp,postinc1
  8093  018326  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8094  01832C  0E95               	movlw	low STR_34
  8095  01832E  6EE6               	movwf	postinc1,c
  8096  018330  0EFF               	movlw	high STR_34
  8097  018332  6EE6               	movwf	postinc1,c
  8098  018334  0E01               	movlw	low (_V+1)
  8099  018336  6EE6               	movwf	postinc1,c
  8100  018338  0E02               	movlw	high (_V+1)
  8101  01833A  6EE6               	movwf	postinc1,c
  8102  01833C  0E08               	movlw	8
  8103  01833E  6EE6               	movwf	postinc1,c
  8104  018340  EC45  F0C4         	call	_sprintf	;wreg free
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;mconfig.c: 124:  wait_lcd_done();
  8108  018344  ECEA  F0D3         	call	_wait_lcd_done	;wreg free
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  8112  018348  0E01               	movlw	low (_V+1)
  8113  01834A  6EE6               	movwf	postinc1,c
  8114  01834C  0E02               	movlw	high (_V+1)
  8115  01834E  6EE6               	movwf	postinc1,c
  8116  018350  0E00               	movlw	0
  8117  018352  6EE6               	movwf	postinc1,c
  8118  018354  0E00               	movlw	0
  8119  018356  6EE6               	movwf	postinc1,c
  8120  018358  EC4C  F0D0         	call	_eaDogM_WriteStringAtPos	;wreg free
  8121                           
  8122                           ; BSR set to: 59
  8123                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  8124  01835C  0E01               	movlw	1
  8125  01835E  6EE6               	movwf	postinc1,c
  8126  018360  0E01               	movlw	1
  8127  018362  6EE6               	movwf	postinc1,c
  8128  018364  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  8129  018368  0060  F007  FFE6   	movff	btemp,postinc1
  8130  01836E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8131  018374  0E00               	movlw	0
  8132  018376  6EE6               	movwf	postinc1,c
  8133  018378  0E01               	movlw	1
  8134  01837A  6EE6               	movwf	postinc1,c
  8135  01837C  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  8136  018380  0060  F007  FFE6   	movff	btemp,postinc1
  8137  018386  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8138  01838C  0E95               	movlw	low STR_34
  8139  01838E  6EE6               	movwf	postinc1,c
  8140  018390  0EFF               	movlw	high STR_34
  8141  018392  6EE6               	movwf	postinc1,c
  8142  018394  0E01               	movlw	low (_V+1)
  8143  018396  6EE6               	movwf	postinc1,c
  8144  018398  0E02               	movlw	high (_V+1)
  8145  01839A  6EE6               	movwf	postinc1,c
  8146  01839C  0E08               	movlw	8
  8147  01839E  6EE6               	movwf	postinc1,c
  8148  0183A0  EC45  F0C4         	call	_sprintf	;wreg free
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;mconfig.c: 127:  wait_lcd_done();
  8152  0183A4  ECEA  F0D3         	call	_wait_lcd_done	;wreg free
  8153                           
  8154                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  8155  0183A8  0E01               	movlw	low (_V+1)
  8156  0183AA  6EE6               	movwf	postinc1,c
  8157  0183AC  0E02               	movlw	high (_V+1)
  8158  0183AE  6EE6               	movwf	postinc1,c
  8159  0183B0  0E00               	movlw	0
  8160  0183B2  6EE6               	movwf	postinc1,c
  8161  0183B4  0E01               	movlw	1
  8162  0183B6  6EE6               	movwf	postinc1,c
  8163  0183B8  EC4C  F0D0         	call	_eaDogM_WriteStringAtPos	;wreg free
  8164                           
  8165                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  8166  0183BC  0E01               	movlw	1
  8167  0183BE  6EE6               	movwf	postinc1,c
  8168  0183C0  0E02               	movlw	2
  8169  0183C2  6EE6               	movwf	postinc1,c
  8170  0183C4  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  8171  0183C8  0060  F007  FFE6   	movff	btemp,postinc1
  8172  0183CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8173  0183D4  0E00               	movlw	0
  8174  0183D6  6EE6               	movwf	postinc1,c
  8175  0183D8  0E02               	movlw	2
  8176  0183DA  6EE6               	movwf	postinc1,c
  8177  0183DC  EC2D  F0D1         	call	_get_vterm_ptr	;wreg free
  8178  0183E0  0060  F007  FFE6   	movff	btemp,postinc1
  8179  0183E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8180  0183EC  0E95               	movlw	low STR_34
  8181  0183EE  6EE6               	movwf	postinc1,c
  8182  0183F0  0EFF               	movlw	high STR_34
  8183  0183F2  6EE6               	movwf	postinc1,c
  8184  0183F4  0E01               	movlw	low (_V+1)
  8185  0183F6  6EE6               	movwf	postinc1,c
  8186  0183F8  0E02               	movlw	high (_V+1)
  8187  0183FA  6EE6               	movwf	postinc1,c
  8188  0183FC  0E08               	movlw	8
  8189  0183FE  6EE6               	movwf	postinc1,c
  8190  018400  EC45  F0C4         	call	_sprintf	;wreg free
  8191                           
  8192                           ; BSR set to: 0
  8193                           ;mconfig.c: 130:  wait_lcd_done();
  8194  018404  ECEA  F0D3         	call	_wait_lcd_done	;wreg free
  8195                           
  8196                           ; BSR set to: 0
  8197                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  8198  018408  0E01               	movlw	low (_V+1)
  8199  01840A  6EE6               	movwf	postinc1,c
  8200  01840C  0E02               	movlw	high (_V+1)
  8201  01840E  6EE6               	movwf	postinc1,c
  8202  018410  0E00               	movlw	0
  8203  018412  6EE6               	movwf	postinc1,c
  8204  018414  0E02               	movlw	2
  8205  018416  6EE6               	movwf	postinc1,c
  8206  018418  EC4C  F0D0         	call	_eaDogM_WriteStringAtPos	;wreg free
  8207                           
  8208                           ; BSR set to: 59
  8209                           ;mconfig.c: 132:  WaitMs(3000);
  8210  01841C  0EB8               	movlw	184
  8211  01841E  6EE6               	movwf	postinc1,c
  8212  018420  0E0B               	movlw	11
  8213  018422  6EE6               	movwf	postinc1,c
  8214  018424  EC31  F0D0         	call	_WaitMs	;wreg free
  8215                           
  8216                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8217  018428  0012               	return		;funcret
  8218  01842A                     __end_of_vterm_dump:
  8219                           	opt callstack 0
  8220                           
  8221 ;; *************** function _sprintf *****************
  8222 ;; Defined at:
  8223 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;  s               2  [STACK] PTR unsigned char 
  8226 ;;		 -> D.lcd(288), D(290), port_data(512), V(188), 
  8227 ;;  fmt             2  [STACK] PTR const unsigned char 
  8228 ;;		 -> STR_47(79), STR_45(3), STR_44(3), STR_43(19), 
  8229 ;;		 -> STR_42(19), STR_41(19), STR_40(19), STR_39(19), 
  8230 ;;		 -> STR_38(19), STR_37(24), STR_36(15), STR_35(15), 
  8231 ;;		 -> STR_34(15), STR_33(10), STR_32(10), STR_31(19), 
  8232 ;;		 -> STR_30(19), STR_24(17), STR_23(16), STR_22(16), 
  8233 ;;		 -> STR_21(19), STR_20(20), STR_19(19), STR_18(19), 
  8234 ;;		 -> STR_17(19), STR_16(19), STR_15(19), STR_14(19), 
  8235 ;;		 -> STR_13(19), STR_12(17), STR_11(16), STR_10(16), 
  8236 ;;		 -> STR_9(23), STR_8(17), STR_6(15), STR_5(17), 
  8237 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  8238 ;; Auto vars:     Size  Location     Type
  8239 ;;  f               6  [STACK] struct _IO_FILE
  8240 ;;  ap              2  [STACK] PTR void [1]
  8241 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8242 ;;  ret             2    0        int 
  8243 ;; Return value:  Size  Location     Type
  8244 ;;                  2  [STACK] int 
  8245 ;; Registers used:
  8246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8247 ;; Tracked objects:
  8248 ;;		On entry : 0/3
  8249 ;;		On exit  : 3F/0
  8250 ;;		Unchanged: 0/0
  8251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8256 ;;Total ram usage:        0 bytes
  8257 ;; Hardware stack levels used:    1
  8258 ;; Hardware stack levels required when called:   23
  8259 ;; This function calls:
  8260 ;;		_vfprintf
  8261 ;; This function is called by:
  8262 ;;		_main
  8263 ;;		_check_help
  8264 ;;		_vterm_dump
  8265 ;;		_calc_bsoc
  8266 ;; This function uses a reentrant model
  8267 ;;
  8268                           
  8269                           	psect	text30
  8270  01888A                     __ptext30:
  8271                           	opt callstack 0
  8272  01888A                     _sprintf:
  8273                           	opt callstack 0
  8274                           
  8275                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 52, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8276  01888A  0E08               	movlw	8
  8277  01888C  26E1               	addwf	fsr1l,f,c
  8278  01888E  0E00               	movlw	0
  8279  018890  22E2               	addwfc	fsr1h,f,c
  8280                           
  8281                           ;incstack = 0
  8282 ;; hardware stack exceeded
  8283  018892  0EFE               	movlw	254
  8284  018894  6E0B               	movwf	(btemp+10)^0,c
  8285  018896  0EFF               	movlw	255
  8286  018898  6E0C               	movwf	(btemp+11)^0,c
  8287                           
  8288                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  8289  01889A  0EF5               	movlw	245
  8290  01889C  24E1               	addwf	fsr1l,w,c
  8291  01889E  6E09               	movwf	(btemp+8)^0,c
  8292  0188A0  0EFF               	movlw	255
  8293  0188A2  20E2               	addwfc	fsr1h,w,c
  8294  0188A4  6E0A               	movwf	(btemp+9)^0,c
  8295  0188A6  500B               	movf	(btemp+10)^0,w,c
  8296  0188A8  2609               	addwf	(btemp+8)^0,f,c
  8297  0188AA  500C               	movf	(btemp+11)^0,w,c
  8298  0188AC  220A               	addwfc	(btemp+9)^0,f,c
  8299                           
  8300                           ;stkvar	_ap @ sp[(-8)+6]
  8301  0188AE  0EFF               	movlw	-1
  8302  0188B0  0060  F02B  FFE3   	movff	btemp+9,plusw1
  8303  0188B6  0EFE               	movlw	-2
  8304  0188B8  0060  F027  FFE3   	movff	btemp+8,plusw1
  8305                           
  8306                           ;stkvar	_s @ sp[(-8)+-3]
  8307  0188BE  0EF5               	movlw	-11
  8308  0188C0  006F FF8C  F00B    	movff	plusw1,btemp+10
  8309  0188C6  0EF6               	movlw	-10
  8310  0188C8  006F FF8C  F00C    	movff	plusw1,btemp+11
  8311                           
  8312                           ;stkvar	_f @ sp[(-8)+0]
  8313  0188CE  0EF9               	movlw	-7
  8314  0188D0  0060  F033  FFE3   	movff	btemp+11,plusw1
  8315  0188D6  0EF8               	movlw	-8
  8316  0188D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8317                           
  8318                           ;stkvar	_f @ sp[(-8)+0]
  8319  0188DE  0EFA               	movlw	250
  8320  0188E0  24E1               	addwf	fsr1l,w,c
  8321  0188E2  6ED9               	movwf	fsr2l,c
  8322  0188E4  0EFF               	movlw	255
  8323  0188E6  20E2               	addwfc	fsr1h,w,c
  8324  0188E8  6EDA               	movwf	fsr2h,c
  8325  0188EA  0E00               	movlw	0
  8326  0188EC  6EDE               	movwf	postinc2,c
  8327  0188EE  0E00               	movlw	0
  8328  0188F0  6EDD               	movwf	postdec2,c
  8329                           
  8330                           ;stkvar	_f @ sp[(-8)+0]
  8331  0188F2  0EFC               	movlw	252
  8332  0188F4  24E1               	addwf	fsr1l,w,c
  8333  0188F6  6ED9               	movwf	fsr2l,c
  8334  0188F8  0EFF               	movlw	255
  8335  0188FA  20E2               	addwfc	fsr1h,w,c
  8336  0188FC  6EDA               	movwf	fsr2h,c
  8337  0188FE  0E00               	movlw	0
  8338  018900  6EDE               	movwf	postinc2,c
  8339  018902  0E00               	movlw	0
  8340  018904  6EDD               	movwf	postdec2,c
  8341                           
  8342                           ;stkvar	_ap @ sp[(-8)+6]
  8343  018906  0EFE               	movlw	254
  8344  018908  24E1               	addwf	fsr1l,w,c
  8345  01890A  6E01               	movwf	btemp^0,c
  8346  01890C  0EFF               	movlw	255
  8347  01890E  20E2               	addwfc	fsr1h,w,c
  8348  018910  6E02               	movwf	(btemp+1)^0,c
  8349  018912  0060  F007  FFE6   	movff	btemp,postinc1
  8350  018918  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8351                           
  8352                           ;stkvar	_fmt @ sp[(-10)+-5]
  8353  01891E  0EF1               	movlw	-15
  8354  018920  006F FF8F FFE6     	movff	plusw1,postinc1
  8355  018926  006F FF8F FFE6     	movff	plusw1,postinc1
  8356                           
  8357                           ;stkvar	_f @ sp[(-12)+0]
  8358  01892C  0EF4               	movlw	244
  8359  01892E  24E1               	addwf	fsr1l,w,c
  8360  018930  6E01               	movwf	btemp^0,c
  8361  018932  0EFF               	movlw	255
  8362  018934  20E2               	addwfc	fsr1h,w,c
  8363  018936  6E02               	movwf	(btemp+1)^0,c
  8364  018938  0060  F007  FFE6   	movff	btemp,postinc1
  8365  01893E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8366  018944  ECB6  F0C7         	call	_vfprintf	;wreg free
  8367                           
  8368                           ; BSR set to: 0
  8369                           ;stkvar	_f @ sp[(-8)+0]
  8370  018948  0EFA               	movlw	250
  8371  01894A  24E1               	addwf	fsr1l,w,c
  8372  01894C  6ED9               	movwf	fsr2l,c
  8373  01894E  0EFF               	movlw	255
  8374  018950  20E2               	addwfc	fsr1h,w,c
  8375  018952  6EDA               	movwf	fsr2h,c
  8376  018954  006F FF78  F00B    	movff	postinc2,btemp+10
  8377  01895A  006F FF74  F00C    	movff	postdec2,btemp+11
  8378                           
  8379                           ;stkvar	_s @ sp[(-8)+-3]
  8380  018960  0EF5               	movlw	-11
  8381  018962  006F FF8C  F009    	movff	plusw1,btemp+8
  8382  018968  0EF6               	movlw	-10
  8383  01896A  006F FF8C  F00A    	movff	plusw1,btemp+9
  8384  018970  500B               	movf	(btemp+10)^0,w,c
  8385  018972  2409               	addwf	(btemp+8)^0,w,c
  8386  018974  6ED9               	movwf	fsr2l,c
  8387  018976  500C               	movf	(btemp+11)^0,w,c
  8388  018978  200A               	addwfc	(btemp+9)^0,w,c
  8389  01897A  6EDA               	movwf	fsr2h,c
  8390  01897C  0E00               	movlw	0
  8391  01897E  6EDF               	movwf	indf2,c
  8392                           
  8393                           ; BSR set to: 0
  8394                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 52, args
      +                          ize = 4, vargsize = 0
  8395  018980  0EF8               	movlw	248
  8396  018982  26E1               	addwf	fsr1l,f,c
  8397  018984  0EFF               	movlw	255
  8398  018986  22E2               	addwfc	fsr1h,f,c
  8399  018988  52E5               	movf	postdec1,f,c
  8400  01898A  50E7               	movf	indf1,w,c
  8401  01898C  5EE1               	subwf	fsr1l,f,c
  8402  01898E  0E00               	movlw	0
  8403  018990  5AE2               	subwfb	fsr1h,f,c
  8404  018992  0012               	return		;funcret
  8405  018994                     __end_of_sprintf:
  8406                           	opt callstack 0
  8407                           
  8408 ;; *************** function _get_vterm_ptr *****************
  8409 ;; Defined at:
  8410 ;;		line 116 in file "mconfig.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;  line            1  [STACK] const unsigned char 
  8413 ;;  vterm           1  [STACK] const unsigned char 
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;		None
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  2  [STACK] PTR unsigned char 
  8418 ;; Registers used:
  8419 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/3
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8429 ;;Total ram usage:        0 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; Hardware stack levels required when called:   15
  8432 ;; This function calls:
  8433 ;;		Nothing
  8434 ;; This function is called by:
  8435 ;;		_main
  8436 ;;		_check_help
  8437 ;;		_vterm_dump
  8438 ;; This function uses a reentrant model
  8439 ;;
  8440                           
  8441                           	psect	text31
  8442  01A25A                     __ptext31:
  8443                           	opt callstack 0
  8444  01A25A                     _get_vterm_ptr:
  8445                           	opt callstack 15
  8446                           
  8447                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  8448                           ;stkvar	_vterm @ sp[(0)+-2]
  8449                           
  8450                           ; BSR set to: 0
  8451                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8452                           ;incstack = 0
  8453  01A25A  0EFE               	movlw	-2
  8454  01A25C  50E3               	movf	plusw1,w,c
  8455  01A25E  0B03               	andlw	3
  8456  01A260  0D48               	mullw	72
  8457  01A262  0EFF               	movlw	low _D
  8458  01A264  6E01               	movwf	btemp^0,c
  8459  01A266  0E07               	movlw	high _D
  8460  01A268  6E02               	movwf	(btemp+1)^0,c
  8461  01A26A  50F3               	movf	243,w,c
  8462  01A26C  2601               	addwf	btemp^0,f,c
  8463  01A26E  50F4               	movf	244,w,c
  8464  01A270  2202               	addwfc	(btemp+1)^0,f,c
  8465                           
  8466                           ;stkvar	_line @ sp[(0)+-1]
  8467  01A272  0EFF               	movlw	-1
  8468  01A274  50E3               	movf	plusw1,w,c
  8469  01A276  0B03               	andlw	3
  8470  01A278  0D18               	mullw	24
  8471  01A27A  50F3               	movf	243,w,c
  8472  01A27C  2601               	addwf	btemp^0,f,c
  8473  01A27E  50F4               	movf	244,w,c
  8474  01A280  2202               	addwfc	(btemp+1)^0,f,c
  8475                           
  8476                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8477  01A282  52E5               	movf	postdec1,f,c
  8478  01A284  52E5               	movf	postdec1,f,c
  8479  01A286  0012               	return		;funcret
  8480  01A288                     __end_of_get_vterm_ptr:
  8481                           	opt callstack 0
  8482                           
  8483 ;; *************** function _WaitMs *****************
  8484 ;; Defined at:
  8485 ;;		line 32 in file "timers.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;  numMilliseco    2  [STACK] const unsigned short 
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;		None
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  1  [STACK] void 
  8492 ;; Registers used:
  8493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/2
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8503 ;;Total ram usage:        0 bytes
  8504 ;; Hardware stack levels used:    1
  8505 ;; Hardware stack levels required when called:   16
  8506 ;; This function calls:
  8507 ;;		_StartTimer
  8508 ;;		_TimerDone
  8509 ;; This function is called by:
  8510 ;;		_main
  8511 ;;		_vterm_dump
  8512 ;; This function uses a reentrant model
  8513 ;;
  8514                           
  8515                           	psect	text32
  8516  01A062                     __ptext32:
  8517                           	opt callstack 0
  8518  01A062                     _WaitMs:
  8519                           	opt callstack 12
  8520                           
  8521                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  8522                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  8523                           
  8524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8525                           ;incstack = 0
  8526  01A062  0EFE               	movlw	-2
  8527  01A064  006F FF8F FFE6     	movff	plusw1,postinc1
  8528  01A06A  006F FF8F FFE6     	movff	plusw1,postinc1
  8529  01A070  0E00               	movlw	0
  8530  01A072  6EE6               	movwf	postinc1,c
  8531  01A074  EC76  F0CF         	call	_StartTimer	;wreg free
  8532                           
  8533                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8534  01A078  D005               	goto	l9154
  8535  01A07A                     l1579:
  8536                           
  8537                           ;timers.c: 36:   __nop();
  8538  01A07A  F000               	nop	
  8539                           
  8540                           ;timers.c: 37:   __nop();
  8541  01A07C  F000               	nop	
  8542                           
  8543                           ;timers.c: 38:   __nop();
  8544  01A07E  F000               	nop	
  8545                           
  8546                           ;timers.c: 39:   __nop();
  8547  01A080  F000               	nop	
  8548  01A082  0004               	clrwdt		;# 
  8549  01A084                     l9154:
  8550                           
  8551                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8552  01A084  0E00               	movlw	0
  8553  01A086  6EE6               	movwf	postinc1,c
  8554  01A088  ECD7  F0D1         	call	_TimerDone	;wreg free
  8555  01A08C  5001               	movf	btemp^0,w,c
  8556  01A08E  B4D8               	btfsc	status,2,c
  8557  01A090  D7F4               	goto	l1579
  8558                           
  8559                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8560  01A092  52E5               	movf	postdec1,f,c
  8561  01A094  52E5               	movf	postdec1,f,c
  8562  01A096  0012               	return		;funcret
  8563  01A098                     __end_of_WaitMs:
  8564                           	opt callstack 0
  8565                           
  8566 ;; *************** function _update_lcd *****************
  8567 ;; Defined at:
  8568 ;;		line 85 in file "mconfig.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  vterm           1  [STACK] unsigned char 
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;		None
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  1  [STACK] unsigned char 
  8575 ;; Registers used:
  8576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8586 ;;Total ram usage:        0 bytes
  8587 ;; Hardware stack levels used:    1
  8588 ;; Hardware stack levels required when called:   26
  8589 ;; This function calls:
  8590 ;;		_eaDogM_WriteStringAtPos
  8591 ;;		_wait_lcd_done
  8592 ;; This function is called by:
  8593 ;;		_main
  8594 ;;		_check_help
  8595 ;; This function uses a reentrant model
  8596 ;;
  8597                           
  8598                           	psect	text33
  8599  01877A                     __ptext33:
  8600                           	opt callstack 0
  8601  01877A                     _update_lcd:
  8602                           	opt callstack 4
  8603                           
  8604                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  8605                           ;stkvar	_vterm @ sp[(0)+-1]
  8606                           
  8607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8608                           ;incstack = 0
  8609  01877A  0EFF               	movlw	-1
  8610  01877C  006F FF8C  F001    	movff	plusw1,btemp
  8611  018782  0E03               	movlw	3
  8612  018784  1601               	andwf	btemp^0,f,c
  8613  018786  0EFF               	movlw	-1
  8614  018788  0060  F007  FFE3   	movff	btemp,plusw1
  8615                           
  8616                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  8617  01878E  EE22  F11F         	lfsr	2,_D+288
  8618  018792  A0DF               	btfss	indf2,0,c
  8619  018794  D004               	goto	l11830
  8620                           
  8621                           ;stkvar	_vterm @ sp[(0)+-1]
  8622  018796  0EFF               	movlw	-1
  8623  018798  50E3               	movf	plusw1,w,c
  8624  01879A  B4D8               	btfsc	status,2,c
  8625  01879C  D074               	goto	l1655
  8626  01879E                     l11830:
  8627                           
  8628                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  8629                           ;stkvar	_vterm @ sp[(0)+-1]
  8630  01879E  0EFF               	movlw	-1
  8631  0187A0  50E3               	movf	plusw1,w,c
  8632  0187A2  0D48               	mullw	72
  8633  0187A4  0E0F               	movlw	low (_D+16)
  8634  0187A6  24F3               	addwf	243,w,c
  8635  0187A8  6ED9               	movwf	fsr2l,c
  8636  0187AA  0E08               	movlw	high (_D+16)
  8637  0187AC  20F4               	addwfc	prodh,w,c
  8638  0187AE  6EDA               	movwf	fsr2h,c
  8639  0187B0  0E00               	movlw	0
  8640  0187B2  6EDF               	movwf	indf2,c
  8641                           
  8642                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  8643                           ;stkvar	_vterm @ sp[(0)+-1]
  8644  0187B4  0EFF               	movlw	-1
  8645  0187B6  50E3               	movf	plusw1,w,c
  8646  0187B8  0D48               	mullw	72
  8647  0187BA  0E27               	movlw	low (_D+40)
  8648  0187BC  24F3               	addwf	243,w,c
  8649  0187BE  6ED9               	movwf	fsr2l,c
  8650  0187C0  0E08               	movlw	high (_D+40)
  8651  0187C2  20F4               	addwfc	prodh,w,c
  8652  0187C4  6EDA               	movwf	fsr2h,c
  8653  0187C6  0E00               	movlw	0
  8654  0187C8  6EDF               	movwf	indf2,c
  8655                           
  8656                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  8657                           ;stkvar	_vterm @ sp[(0)+-1]
  8658  0187CA  0EFF               	movlw	-1
  8659  0187CC  50E3               	movf	plusw1,w,c
  8660  0187CE  0D48               	mullw	72
  8661  0187D0  0E3F               	movlw	low (_D+64)
  8662  0187D2  24F3               	addwf	243,w,c
  8663  0187D4  6ED9               	movwf	fsr2l,c
  8664  0187D6  0E08               	movlw	high (_D+64)
  8665  0187D8  20F4               	addwfc	prodh,w,c
  8666  0187DA  6EDA               	movwf	fsr2h,c
  8667  0187DC  0E00               	movlw	0
  8668  0187DE  6EDF               	movwf	indf2,c
  8669                           
  8670                           ;mconfig.c: 95:  wait_lcd_done();
  8671  0187E0  ECEA  F0D3         	call	_wait_lcd_done	;wreg free
  8672                           
  8673                           ; BSR set to: 0
  8674                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  8675                           ;stkvar	_vterm @ sp[(0)+-1]
  8676  0187E4  0EFF               	movlw	-1
  8677  0187E6  50E3               	movf	plusw1,w,c
  8678  0187E8  0D48               	mullw	72
  8679  0187EA  0EFF               	movlw	low _D
  8680  0187EC  6E0B               	movwf	(btemp+10)^0,c
  8681  0187EE  0E07               	movlw	high _D
  8682  0187F0  6E0C               	movwf	(btemp+11)^0,c
  8683  0187F2  50F3               	movf	243,w,c
  8684  0187F4  260B               	addwf	(btemp+10)^0,f,c
  8685  0187F6  50F4               	movf	244,w,c
  8686  0187F8  220C               	addwfc	(btemp+11)^0,f,c
  8687  0187FA  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8688  018800  0060  F033  FFE6   	movff	btemp+11,postinc1
  8689  018806  0E00               	movlw	0
  8690  018808  6EE6               	movwf	postinc1,c
  8691  01880A  0E00               	movlw	0
  8692  01880C  6EE6               	movwf	postinc1,c
  8693  01880E  EC4C  F0D0         	call	_eaDogM_WriteStringAtPos	;wreg free
  8694                           
  8695                           ; BSR set to: 59
  8696                           ;mconfig.c: 97:  wait_lcd_done();
  8697  018812  ECEA  F0D3         	call	_wait_lcd_done	;wreg free
  8698                           
  8699                           ; BSR set to: 0
  8700                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  8701                           ;stkvar	_vterm @ sp[(0)+-1]
  8702  018816  0EFF               	movlw	-1
  8703  018818  50E3               	movf	plusw1,w,c
  8704  01881A  0D48               	mullw	72
  8705  01881C  0EFF               	movlw	low _D
  8706  01881E  6E0B               	movwf	(btemp+10)^0,c
  8707  018820  0E07               	movlw	high _D
  8708  018822  6E0C               	movwf	(btemp+11)^0,c
  8709  018824  0E18               	movlw	24
  8710  018826  260B               	addwf	(btemp+10)^0,f,c
  8711  018828  0E00               	movlw	0
  8712  01882A  220C               	addwfc	(btemp+11)^0,f,c
  8713  01882C  50F3               	movf	243,w,c
  8714  01882E  260B               	addwf	(btemp+10)^0,f,c
  8715  018830  50F4               	movf	244,w,c
  8716  018832  220C               	addwfc	(btemp+11)^0,f,c
  8717  018834  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8718  01883A  0060  F033  FFE6   	movff	btemp+11,postinc1
  8719  018840  0E00               	movlw	0
  8720  018842  6EE6               	movwf	postinc1,c
  8721  018844  0E01               	movlw	1
  8722  018846  6EE6               	movwf	postinc1,c
  8723  018848  EC4C  F0D0         	call	_eaDogM_WriteStringAtPos	;wreg free
  8724                           
  8725                           ; BSR set to: 59
  8726                           ;mconfig.c: 99:  wait_lcd_done();
  8727  01884C  ECEA  F0D3         	call	_wait_lcd_done	;wreg free
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  8731                           ;stkvar	_vterm @ sp[(0)+-1]
  8732  018850  0EFF               	movlw	-1
  8733  018852  50E3               	movf	plusw1,w,c
  8734  018854  0D48               	mullw	72
  8735  018856  0EFF               	movlw	low _D
  8736  018858  6E0B               	movwf	(btemp+10)^0,c
  8737  01885A  0E07               	movlw	high _D
  8738  01885C  6E0C               	movwf	(btemp+11)^0,c
  8739  01885E  0E30               	movlw	48
  8740  018860  260B               	addwf	(btemp+10)^0,f,c
  8741  018862  0E00               	movlw	0
  8742  018864  220C               	addwfc	(btemp+11)^0,f,c
  8743  018866  50F3               	movf	243,w,c
  8744  018868  260B               	addwf	(btemp+10)^0,f,c
  8745  01886A  50F4               	movf	244,w,c
  8746  01886C  220C               	addwfc	(btemp+11)^0,f,c
  8747  01886E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8748  018874  0060  F033  FFE6   	movff	btemp+11,postinc1
  8749  01887A  0E00               	movlw	0
  8750  01887C  6EE6               	movwf	postinc1,c
  8751  01887E  0E02               	movlw	2
  8752  018880  6EE6               	movwf	postinc1,c
  8753  018882  EC4C  F0D0         	call	_eaDogM_WriteStringAtPos	;wreg free
  8754  018886                     l1655:
  8755                           
  8756                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8757  018886  52E5               	movf	postdec1,f,c
  8758  018888  0012               	return		;funcret
  8759  01888A                     __end_of_update_lcd:
  8760                           	opt callstack 0
  8761                           
  8762 ;; *************** function _eaDogM_WriteStringAtPos *****************
  8763 ;; Defined at:
  8764 ;;		line 278 in file "eadog.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;  r               1  [STACK] const unsigned char 
  8767 ;;  c               1  [STACK] const unsigned char 
  8768 ;;  strPtr          2  [STACK] PTR unsigned char 
  8769 ;;		 -> D.lcd(288), D(290), V(188), 
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;		None
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  1  [STACK] void 
  8774 ;; Registers used:
  8775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8776 ;; Tracked objects:
  8777 ;;		On entry : 3F/0
  8778 ;;		On exit  : 3F/3B
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8785 ;;Total ram usage:        0 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:   25
  8788 ;; This function calls:
  8789 ;;		_eaDogM_WriteString
  8790 ;;		_send_lcd_cmd_dma
  8791 ;; This function is called by:
  8792 ;;		_update_lcd
  8793 ;;		_vterm_dump
  8794 ;; This function uses a reentrant model
  8795 ;;
  8796                           
  8797                           	psect	text34
  8798  01A098                     __ptext34:
  8799                           	opt callstack 0
  8800  01A098                     _eaDogM_WriteStringAtPos:
  8801                           	opt callstack 4
  8802                           
  8803                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  8804                           ;stkvar	_c @ sp[(0)+-2]
  8805                           
  8806                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8807                           ;incstack = 0
  8808  01A098  0EFE               	movlw	-2
  8809  01A09A  006F FF8C  F00C    	movff	plusw1,btemp+11
  8810                           
  8811                           ;stkvar	_r @ sp[(0)+-1]
  8812  01A0A0  0EFF               	movlw	-1
  8813  01A0A2  50E3               	movf	plusw1,w,c
  8814  01A0A4  0D10               	mullw	16
  8815  01A0A6  50F3               	movf	243,w,c
  8816  01A0A8  240C               	addwf	(btemp+11)^0,w,c
  8817  01A0AA  0F80               	addlw	128
  8818  01A0AC  6EE6               	movwf	postinc1,c
  8819  01A0AE  EC99  F0CD         	call	_send_lcd_cmd_dma	;wreg free
  8820                           
  8821                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  8822                           ;stkvar	_strPtr @ sp[(0)+-4]
  8823  01A0B2  0EFC               	movlw	-4
  8824  01A0B4  006F FF8F FFE6     	movff	plusw1,postinc1
  8825  01A0BA  006F FF8F FFE6     	movff	plusw1,postinc1
  8826  01A0C0  EC61  F0C8         	call	_eaDogM_WriteString	;wreg free
  8827                           
  8828                           ; BSR set to: 59
  8829                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  8830  01A0C4  52E5               	movf	postdec1,f,c
  8831  01A0C6  52E5               	movf	postdec1,f,c
  8832  01A0C8  52E5               	movf	postdec1,f,c
  8833  01A0CA  52E5               	movf	postdec1,f,c
  8834  01A0CC  0012               	return		;funcret
  8835  01A0CE                     __end_of_eaDogM_WriteStringAtPos:
  8836                           	opt callstack 0
  8837                           
  8838 ;; *************** function _send_lcd_cmd_dma *****************
  8839 ;; Defined at:
  8840 ;;		line 220 in file "eadog.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;  strPtr          1  [STACK] unsigned char 
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;		None
  8845 ;; Return value:  Size  Location     Type
  8846 ;;                  1  [STACK] void 
  8847 ;; Registers used:
  8848 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8849 ;; Tracked objects:
  8850 ;;		On entry : 0/3D
  8851 ;;		On exit  : 3F/0
  8852 ;;		Unchanged: 0/0
  8853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8858 ;;Total ram usage:        0 bytes
  8859 ;; Hardware stack levels used:    1
  8860 ;; Hardware stack levels required when called:   24
  8861 ;; This function calls:
  8862 ;;		_printf
  8863 ;;		_ringBufS_flush
  8864 ;;		_start_lcd
  8865 ;;		_wait_lcd_done
  8866 ;;		_wait_lcd_set
  8867 ;; This function is called by:
  8868 ;;		_eaDogM_WriteCommand
  8869 ;;		_eaDogM_WriteStringAtPos
  8870 ;; This function uses a reentrant model
  8871 ;;
  8872                           
  8873                           	psect	text35
  8874  019B32                     __ptext35:
  8875                           	opt callstack 0
  8876  019B32                     _send_lcd_cmd_dma:
  8877                           	opt callstack 4
  8878                           
  8879                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  8880                           
  8881                           ; BSR set to: 59
  8882                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8883                           ;incstack = 0
  8884  019B32  ECCC  F0D4         	call	_wait_lcd_set	;wreg free
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  8888  019B36  0E00               	movlw	0
  8889  019B38  6EE6               	movwf	postinc1,c
  8890  019B3A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  8891  019B40  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  8892  019B46  EC9A  F0C9         	call	_ringBufS_flush	;wreg free
  8893  019B4A  92BC               	bcf	188,1,c	;volatile
  8894  019B4C  94BC               	bcf	188,2,c	;volatile
  8895                           
  8896                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  8897  019B4E  013B               	movlb	59	; () banked
  8898  019B50  9FFC               	bcf	252,7,b	;volatile
  8899                           
  8900                           ; BSR set to: 59
  8901                           ;eadog.c: 229:  DMA1SSZ = 1;
  8902  019B52  0E00               	movlw	0
  8903  019B54  6FF8               	movwf	248,b	;volatile
  8904  019B56  0E01               	movlw	1
  8905  019B58  6FF7               	movwf	247,b	;volatile
  8906                           
  8907                           ; BSR set to: 59
  8908                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  8909  019B5A  8FFC               	bsf	252,7,b	;volatile
  8910                           
  8911                           ; BSR set to: 59
  8912                           ;eadog.c: 231:  printf("%c", strPtr);
  8913                           ;stkvar	_strPtr @ sp[(0)+-1]
  8914  019B5C  0EFF               	movlw	-1
  8915  019B5E  50E3               	movf	plusw1,w,c
  8916  019B60  6EE6               	movwf	postinc1,c
  8917  019B62  0E00               	movlw	0
  8918  019B64  6EE6               	movwf	postinc1,c
  8919  019B66  0EF8               	movlw	low STR_26
  8920  019B68  6EE6               	movwf	postinc1,c
  8921  019B6A  0EFF               	movlw	high STR_26
  8922  019B6C  6EE6               	movwf	postinc1,c
  8923  019B6E  0E04               	movlw	4
  8924  019B70  6EE6               	movwf	postinc1,c
  8925  019B72  ECB1  F0CC         	call	_printf	;wreg free
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;eadog.c: 232:  start_lcd();
  8929  019B76  ECCF  F0D4         	call	_start_lcd	;wreg free
  8930                           
  8931                           ; BSR set to: 59
  8932                           ;eadog.c: 233:  wait_lcd_done();
  8933  019B7A  ECEA  F0D3         	call	_wait_lcd_done	;wreg free
  8934                           
  8935                           ; BSR set to: 0
  8936  019B7E  82BC               	bsf	188,1,c	;volatile
  8937                           
  8938                           ; BSR set to: 0
  8939                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8940  019B80  52E5               	movf	postdec1,f,c
  8941  019B82  0012               	return		;funcret
  8942  019B84                     __end_of_send_lcd_cmd_dma:
  8943                           	opt callstack 0
  8944                           
  8945 ;; *************** function _wait_lcd_done *****************
  8946 ;; Defined at:
  8947 ;;		line 156 in file "eadog.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;		None
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;		None
  8952 ;; Return value:  Size  Location     Type
  8953 ;;                  1  [STACK] void 
  8954 ;; Registers used:
  8955 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8956 ;; Tracked objects:
  8957 ;;		On entry : 0/0
  8958 ;;		On exit  : 3F/0
  8959 ;;		Unchanged: 0/0
  8960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8965 ;;Total ram usage:        0 bytes
  8966 ;; Hardware stack levels used:    1
  8967 ;; Hardware stack levels required when called:   16
  8968 ;; This function calls:
  8969 ;;		_wdtdelay
  8970 ;; This function is called by:
  8971 ;;		_send_lcd_cmd_dma
  8972 ;;		_update_lcd
  8973 ;;		_vterm_dump
  8974 ;; This function uses a reentrant model
  8975 ;;
  8976                           
  8977                           	psect	text36
  8978  01A7D4                     __ptext36:
  8979                           	opt callstack 0
  8980  01A7D4                     _wait_lcd_done:
  8981                           	opt callstack 13
  8982                           
  8983                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  8984                           
  8985                           ; BSR set to: 0
  8986                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8987                           ;incstack = 0
  8988  01A7D4  0100               	movlb	0	; () banked
  8989  01A7D6  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  8990  01A7D8  D7FD               	goto	_wait_lcd_done
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;eadog.c: 159:  wdtdelay(50);
  8994  01A7DA  0E32               	movlw	50
  8995  01A7DC  6EE6               	movwf	postinc1,c
  8996  01A7DE  0E00               	movlw	0
  8997  01A7E0  6EE6               	movwf	postinc1,c
  8998  01A7E2  0E00               	movlw	0
  8999  01A7E4  6EE6               	movwf	postinc1,c
  9000  01A7E6  0E00               	movlw	0
  9001  01A7E8  6EE6               	movwf	postinc1,c
  9002  01A7EA  EC11  F0CD         	call	_wdtdelay	;wreg free
  9003                           
  9004                           ; BSR set to: 0
  9005                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9006  01A7EE  0012               	return		;funcret
  9007  01A7F0                     __end_of_wait_lcd_done:
  9008                           	opt callstack 0
  9009                           
  9010 ;; *************** function _wdtdelay *****************
  9011 ;; Defined at:
  9012 ;;		line 23 in file "eadog.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;  delay           4  [STACK] const unsigned long 
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;		None
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  1  [STACK] void 
  9019 ;; Registers used:
  9020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 3F/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9030 ;;Total ram usage:        0 bytes
  9031 ;; Hardware stack levels used:    1
  9032 ;; Hardware stack levels required when called:   15
  9033 ;; This function calls:
  9034 ;;		Nothing
  9035 ;; This function is called by:
  9036 ;;		_init_display
  9037 ;;		_send_lcd_cmd
  9038 ;;		_send_lcd_cmd_long
  9039 ;;		_wait_lcd_done
  9040 ;; This function uses a reentrant model
  9041 ;;
  9042                           
  9043                           	psect	text37
  9044  019A22                     __ptext37:
  9045                           	opt callstack 0
  9046  019A22                     _wdtdelay:
  9047                           	opt callstack 13
  9048                           
  9049                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  9050                           
  9051                           ; BSR set to: 0
  9052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9053                           ;incstack = 0
  9054  019A22  0100               	movlb	0	; () banked
  9055  019A24  6B80               	clrf	wdtdelay@dcount& (0+255),b
  9056  019A26  6B81               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9057  019A28  6B82               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9058  019A2A  6B83               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9059  019A2C                     l1420:
  9060                           
  9061                           ; BSR set to: 0
  9062                           ;eadog.c: 28:   __nop();
  9063  019A2C  F000               	nop	
  9064  019A2E  0004               	clrwdt		;# 
  9065                           
  9066                           ;eadog.c: 30:  };
  9067  019A30  0E01               	movlw	1
  9068  019A32  0100               	movlb	0	; () banked
  9069  019A34  2780               	addwf	wdtdelay@dcount& (0+255),f,b
  9070  019A36  0E00               	movlw	0
  9071  019A38  2381               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9072  019A3A  2382               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9073  019A3C  2383               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9074                           
  9075                           ; BSR set to: 0
  9076                           ;stkvar	_delay @ sp[(0)+-4]
  9077  019A3E  0EFC               	movlw	-4
  9078  019A40  006F FF8C  F001    	movff	plusw1,btemp
  9079  019A46  5180               	movf	wdtdelay@dcount& (0+255),w,b
  9080  019A48  5C01               	subwf	btemp^0,w,c
  9081  019A4A  0EFD               	movlw	-3
  9082  019A4C  006F FF8C  F001    	movff	plusw1,btemp
  9083  019A52  5181               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9084  019A54  5801               	subwfb	btemp^0,w,c
  9085  019A56  0EFE               	movlw	-2
  9086  019A58  006F FF8C  F001    	movff	plusw1,btemp
  9087  019A5E  5182               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9088  019A60  5801               	subwfb	btemp^0,w,c
  9089  019A62  0EFF               	movlw	-1
  9090  019A64  006F FF8C  F001    	movff	plusw1,btemp
  9091  019A6A  5183               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9092  019A6C  5801               	subwfb	btemp^0,w,c
  9093  019A6E  B0D8               	btfsc	status,0,c
  9094  019A70  D7DD               	goto	l1420
  9095                           
  9096                           ; BSR set to: 0
  9097                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9098  019A72  52E5               	movf	postdec1,f,c
  9099  019A74  52E5               	movf	postdec1,f,c
  9100  019A76  52E5               	movf	postdec1,f,c
  9101  019A78  52E5               	movf	postdec1,f,c
  9102  019A7A  0012               	return		;funcret
  9103  019A7C                     __end_of_wdtdelay:
  9104                           	opt callstack 0
  9105                           
  9106 ;; *************** function _eaDogM_WriteString *****************
  9107 ;; Defined at:
  9108 ;;		line 199 in file "eadog.c"
  9109 ;; Parameters:    Size  Location     Type
  9110 ;;  strPtr          2  [STACK] PTR unsigned char 
  9111 ;;		 -> D.lcd(288), D(290), V(188), 
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1  [STACK] void 
  9116 ;; Registers used:
  9117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9118 ;; Tracked objects:
  9119 ;;		On entry : 3F/0
  9120 ;;		On exit  : 3F/3B
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9127 ;;Total ram usage:        0 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; Hardware stack levels required when called:   24
  9130 ;; This function calls:
  9131 ;;		_printf
  9132 ;;		_ringBufS_flush
  9133 ;;		_start_lcd
  9134 ;;		_strlen
  9135 ;;		_wait_lcd_set
  9136 ;; This function is called by:
  9137 ;;		_eaDogM_WriteStringAtPos
  9138 ;; This function uses a reentrant model
  9139 ;;
  9140                           
  9141                           	psect	text38
  9142  0190C2                     __ptext38:
  9143                           	opt callstack 0
  9144  0190C2                     _eaDogM_WriteString:
  9145                           	opt callstack 4
  9146                           
  9147                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
  9148                           
  9149                           ; BSR set to: 0
  9150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9151                           ;incstack = 0
  9152  0190C2  ECCC  F0D4         	call	_wait_lcd_set	;wreg free
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
  9156  0190C6  0E00               	movlw	0
  9157  0190C8  6EE6               	movwf	postinc1,c
  9158  0190CA  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9159  0190D0  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9160  0190D6  EC9A  F0C9         	call	_ringBufS_flush	;wreg free
  9161  0190DA  94BC               	bcf	188,2,c	;volatile
  9162                           
  9163                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  9164                           ;stkvar	_strPtr @ sp[(0)+-2]
  9165  0190DC  0EFE               	movlw	-2
  9166  0190DE  006F FF8F FFE6     	movff	plusw1,postinc1
  9167  0190E4  006F FF8F FFE6     	movff	plusw1,postinc1
  9168  0190EA  ECB4  F0C8         	call	_strlen	;wreg free
  9169  0190EE  5002               	movf	(btemp+1)^0,w,c
  9170  0190F0  E104               	bnz	u11480
  9171  0190F2  0E41               	movlw	65
  9172  0190F4  5C01               	subwf	btemp^0,w,c
  9173  0190F6  A0D8               	btfss	status,0,c
  9174  0190F8  D010               	goto	l11760
  9175  0190FA                     u11480:
  9176                           
  9177                           ;stkvar	_strPtr @ sp[(0)+-2]
  9178  0190FA  0EFE               	movlw	-2
  9179  0190FC  006F FF8C  F00B    	movff	plusw1,btemp+10
  9180  019102  0EFF               	movlw	-1
  9181  019104  006F FF8C  F00C    	movff	plusw1,btemp+11
  9182  01910A  0E40               	movlw	64
  9183  01910C  240B               	addwf	(btemp+10)^0,w,c
  9184  01910E  6ED9               	movwf	fsr2l,c
  9185  019110  0E00               	movlw	0
  9186  019112  200C               	addwfc	(btemp+11)^0,w,c
  9187  019114  6EDA               	movwf	fsr2h,c
  9188  019116  0E00               	movlw	0
  9189  019118  6EDF               	movwf	indf2,c
  9190  01911A                     l11760:
  9191                           
  9192                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
  9193  01911A  013B               	movlb	59	; () banked
  9194  01911C  9FFC               	bcf	252,7,b	;volatile
  9195                           
  9196                           ; BSR set to: 59
  9197                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
  9198                           ;stkvar	_strPtr @ sp[(0)+-2]
  9199  01911E  0EFE               	movlw	-2
  9200  019120  006F FF8F FFE6     	movff	plusw1,postinc1
  9201  019126  006F FF8F FFE6     	movff	plusw1,postinc1
  9202  01912C  ECB4  F0C8         	call	_strlen	;wreg free
  9203  019130  0060  F007  FBF7   	movff	btemp,15351	;volatile
  9204  019136  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
  9205                           
  9206                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
  9207  01913C  013B               	movlb	59	; () banked
  9208  01913E  8FFC               	bsf	252,7,b	;volatile
  9209                           
  9210                           ; BSR set to: 59
  9211                           ;eadog.c: 210:  printf("%s", strPtr);
  9212                           ;stkvar	_strPtr @ sp[(0)+-2]
  9213  019140  0EFE               	movlw	-2
  9214  019142  006F FF8F FFE6     	movff	plusw1,postinc1
  9215  019148  006F FF8F FFE6     	movff	plusw1,postinc1
  9216  01914E  0EFB               	movlw	low STR_25
  9217  019150  6EE6               	movwf	postinc1,c
  9218  019152  0EFF               	movlw	high STR_25
  9219  019154  6EE6               	movwf	postinc1,c
  9220  019156  0E04               	movlw	4
  9221  019158  6EE6               	movwf	postinc1,c
  9222  01915A  ECB1  F0CC         	call	_printf	;wreg free
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;eadog.c: 211:  start_lcd();
  9226  01915E  ECCF  F0D4         	call	_start_lcd	;wreg free
  9227                           
  9228                           ; BSR set to: 59
  9229                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  9230  019162  52E5               	movf	postdec1,f,c
  9231  019164  52E5               	movf	postdec1,f,c
  9232  019166  0012               	return		;funcret
  9233  019168                     __end_of_eaDogM_WriteString:
  9234                           	opt callstack 0
  9235                           
  9236 ;; *************** function _wait_lcd_set *****************
  9237 ;; Defined at:
  9238 ;;		line 146 in file "eadog.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;		None
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;		None
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  1  [STACK] void 
  9245 ;; Registers used:
  9246 ;;		None
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/3D
  9249 ;;		On exit  : 3F/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9256 ;;Total ram usage:        0 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; Hardware stack levels required when called:   15
  9259 ;; This function calls:
  9260 ;;		Nothing
  9261 ;; This function is called by:
  9262 ;;		_eaDogM_WriteString
  9263 ;;		_send_lcd_cmd_dma
  9264 ;; This function uses a reentrant model
  9265 ;;
  9266                           
  9267                           	psect	text39
  9268  01A998                     __ptext39:
  9269                           	opt callstack 0
  9270  01A998                     _wait_lcd_set:
  9271                           	opt callstack 12
  9272                           
  9273                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
  9274                           
  9275                           ; BSR set to: 59
  9276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9277                           ;incstack = 0
  9278  01A998  0100               	movlb	0	; () banked
  9279  01A99A  8760               	bsf	_spi_link& (0+255),3,b	;volatile
  9280                           
  9281                           ; BSR set to: 0
  9282                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9283  01A99C  0012               	return		;funcret
  9284  01A99E                     __end_of_wait_lcd_set:
  9285                           	opt callstack 0
  9286                           
  9287 ;; *************** function _start_lcd *****************
  9288 ;; Defined at:
  9289 ;;		line 141 in file "eadog.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;		None
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;		None
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  1  [STACK] void 
  9296 ;; Registers used:
  9297 ;;		None
  9298 ;; Tracked objects:
  9299 ;;		On entry : 3F/0
  9300 ;;		On exit  : 3F/3B
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9307 ;;Total ram usage:        0 bytes
  9308 ;; Hardware stack levels used:    1
  9309 ;; Hardware stack levels required when called:   15
  9310 ;; This function calls:
  9311 ;;		Nothing
  9312 ;; This function is called by:
  9313 ;;		_eaDogM_WriteString
  9314 ;;		_send_lcd_cmd_dma
  9315 ;; This function uses a reentrant model
  9316 ;;
  9317                           
  9318                           	psect	text40
  9319  01A99E                     __ptext40:
  9320                           	opt callstack 0
  9321  01A99E                     _start_lcd:
  9322                           	opt callstack 12
  9323                           
  9324                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
  9325                           
  9326                           ; BSR set to: 0
  9327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9328                           ;incstack = 0
  9329  01A99E  013B               	movlb	59	; () banked
  9330  01A9A0  8DFC               	bsf	252,6,b	;volatile
  9331                           
  9332                           ; BSR set to: 59
  9333                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9334  01A9A2  0012               	return		;funcret
  9335  01A9A4                     __end_of_start_lcd:
  9336                           	opt callstack 0
  9337                           
  9338 ;; *************** function _ringBufS_flush *****************
  9339 ;; Defined at:
  9340 ;;		line 76 in file "ringbufs.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9343 ;;		 -> ring_buf1(67), 
  9344 ;;  clearBuffer     1  [STACK] const char 
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;		None
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1  [STACK] void 
  9349 ;; Registers used:
  9350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9351 ;; Tracked objects:
  9352 ;;		On entry : 3F/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9360 ;;Total ram usage:        0 bytes
  9361 ;; Hardware stack levels used:    1
  9362 ;; Hardware stack levels required when called:   16
  9363 ;; This function calls:
  9364 ;;		_memset
  9365 ;; This function is called by:
  9366 ;;		_eaDogM_WriteString
  9367 ;;		_send_lcd_cmd_dma
  9368 ;; This function uses a reentrant model
  9369 ;;
  9370                           
  9371                           	psect	text41
  9372  019334                     __ptext41:
  9373                           	opt callstack 0
  9374  019334                     _ringBufS_flush:
  9375                           	opt callstack 11
  9376                           
  9377                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9378                           ;stkvar	__this @ sp[(0)+-2]
  9379                           
  9380                           ; BSR set to: 59
  9381                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9382                           ;incstack = 0
  9383  019334  0EFE               	movlw	-2
  9384  019336  006F FF8C  F00B    	movff	plusw1,btemp+10
  9385  01933C  0EFF               	movlw	-1
  9386  01933E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9387  019344  0E42               	movlw	66
  9388  019346  240B               	addwf	(btemp+10)^0,w,c
  9389  019348  6ED9               	movwf	fsr2l,c
  9390  01934A  0E00               	movlw	0
  9391  01934C  200C               	addwfc	(btemp+11)^0,w,c
  9392  01934E  6EDA               	movwf	fsr2h,c
  9393  019350  0E00               	movlw	0
  9394  019352  6EDF               	movwf	indf2,c
  9395                           
  9396                           ;ringbufs.c: 79:  _this->head = 0;
  9397                           ;stkvar	__this @ sp[(0)+-2]
  9398  019354  0EFE               	movlw	-2
  9399  019356  006F FF8C  F00B    	movff	plusw1,btemp+10
  9400  01935C  0EFF               	movlw	-1
  9401  01935E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9402  019364  0E40               	movlw	64
  9403  019366  240B               	addwf	(btemp+10)^0,w,c
  9404  019368  6ED9               	movwf	fsr2l,c
  9405  01936A  0E00               	movlw	0
  9406  01936C  200C               	addwfc	(btemp+11)^0,w,c
  9407  01936E  6EDA               	movwf	fsr2h,c
  9408  019370  0E00               	movlw	0
  9409  019372  6EDF               	movwf	indf2,c
  9410                           
  9411                           ;ringbufs.c: 80:  _this->tail = 0;
  9412                           ;stkvar	__this @ sp[(0)+-2]
  9413  019374  0EFE               	movlw	-2
  9414  019376  006F FF8C  F00B    	movff	plusw1,btemp+10
  9415  01937C  0EFF               	movlw	-1
  9416  01937E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9417  019384  0E41               	movlw	65
  9418  019386  240B               	addwf	(btemp+10)^0,w,c
  9419  019388  6ED9               	movwf	fsr2l,c
  9420  01938A  0E00               	movlw	0
  9421  01938C  200C               	addwfc	(btemp+11)^0,w,c
  9422  01938E  6EDA               	movwf	fsr2h,c
  9423  019390  0E00               	movlw	0
  9424  019392  6EDF               	movwf	indf2,c
  9425                           
  9426                           ;ringbufs.c: 81:  if (clearBuffer) {
  9427                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9428  019394  0EFD               	movlw	-3
  9429  019396  50E3               	movf	plusw1,w,c
  9430  019398  B4D8               	btfsc	status,2,c
  9431  01939A  D011               	goto	l1564
  9432                           
  9433                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9434  01939C  0E40               	movlw	64
  9435  01939E  6EE6               	movwf	postinc1,c
  9436  0193A0  0E00               	movlw	0
  9437  0193A2  6EE6               	movwf	postinc1,c
  9438  0193A4  0E00               	movlw	0
  9439  0193A6  6EE6               	movwf	postinc1,c
  9440  0193A8  0E00               	movlw	0
  9441  0193AA  6EE6               	movwf	postinc1,c
  9442                           
  9443                           ;stkvar	__this @ sp[(-4)+-2]
  9444  0193AC  0EFA               	movlw	-6
  9445  0193AE  006F FF8F FFE6     	movff	plusw1,postinc1
  9446  0193B4  006F FF8F FFE6     	movff	plusw1,postinc1
  9447  0193BA  EC3A  F0AF         	call	_memset	;wreg free
  9448  0193BE                     l1564:
  9449                           
  9450                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9451  0193BE  52E5               	movf	postdec1,f,c
  9452  0193C0  52E5               	movf	postdec1,f,c
  9453  0193C2  52E5               	movf	postdec1,f,c
  9454  0193C4  0012               	return		;funcret
  9455  0193C6                     __end_of_ringBufS_flush:
  9456                           	opt callstack 0
  9457                           
  9458 ;; *************** function _memset *****************
  9459 ;; Defined at:
  9460 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;  dest            2  [STACK] PTR void 
  9463 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9464 ;;  c               2  [STACK] int 
  9465 ;;  n               2  [STACK] unsigned int 
  9466 ;; Auto vars:     Size  Location     Type
  9467 ;;  s               2  [STACK] PTR unsigned char 
  9468 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9469 ;;  k               2  [STACK] unsigned int 
  9470 ;; Return value:  Size  Location     Type
  9471 ;;                  2  [STACK] PTR void 
  9472 ;; Registers used:
  9473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9474 ;; Tracked objects:
  9475 ;;		On entry : 0/0
  9476 ;;		On exit  : 0/0
  9477 ;;		Unchanged: 0/0
  9478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9483 ;;Total ram usage:        0 bytes
  9484 ;; Hardware stack levels used:    1
  9485 ;; Hardware stack levels required when called:   15
  9486 ;; This function calls:
  9487 ;;		Nothing
  9488 ;; This function is called by:
  9489 ;;		_ringBufS_init
  9490 ;;		_ringBufS_flush
  9491 ;; This function uses a reentrant model
  9492 ;;
  9493                           
  9494                           	psect	text42
  9495  015E74                     __ptext42:
  9496                           	opt callstack 0
  9497  015E74                     _memset:
  9498                           	opt callstack 0
  9499                           
  9500                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9501  015E74  52E6               	movf	postinc1,f,c
  9502  015E76  52E6               	movf	postinc1,f,c
  9503  015E78  52E6               	movf	postinc1,f,c
  9504  015E7A  52E6               	movf	postinc1,f,c
  9505                           
  9506                           ;stkvar	_dest @ sp[(-4)+-2]
  9507                           
  9508                           ;incstack = 0
  9509  015E7C  0EFA               	movlw	-6
  9510  015E7E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9511  015E84  0EFB               	movlw	-5
  9512  015E86  006F FF8C  F00C    	movff	plusw1,btemp+11
  9513                           
  9514                           ;stkvar	_s @ sp[(-4)+0]
  9515  015E8C  0EFD               	movlw	-3
  9516  015E8E  0060  F033  FFE3   	movff	btemp+11,plusw1
  9517  015E94  0EFC               	movlw	-4
  9518  015E96  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9519                           
  9520                           ;stkvar	_n @ sp[(-4)+-6]
  9521  015E9C  0EF6               	movlw	-10
  9522  015E9E  006F FF8C  F001    	movff	plusw1,btemp
  9523  015EA4  0EF7               	movlw	-9
  9524  015EA6  50E3               	movf	plusw1,w,c
  9525  015EA8  1001               	iorwf	btemp^0,w,c
  9526  015EAA  B4D8               	btfsc	status,2,c
  9527  015EAC  D154               	goto	u10090
  9528                           
  9529                           ;stkvar	_c @ sp[(-4)+-4]
  9530                           ;stkvar	_s @ sp[(-4)+0]
  9531  015EAE  0EFC               	movlw	-4
  9532  015EB0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9533  015EB6  0EFD               	movlw	-3
  9534  015EB8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9535  015EBE  0EF8               	movlw	-8
  9536  015EC0  006F FF8F FFDF     	movff	plusw1,indf2
  9537                           
  9538                           ;stkvar	_c @ sp[(-4)+-4]
  9539                           ;stkvar	_n @ sp[(-4)+-6]
  9540                           ;stkvar	_s @ sp[(-4)+0]
  9541  015EC6  0EFC               	movlw	-4
  9542  015EC8  006F FF8C  F00B    	movff	plusw1,btemp+10
  9543  015ECE  0EFD               	movlw	-3
  9544  015ED0  006F FF8C  F00C    	movff	plusw1,btemp+11
  9545  015ED6  0EF6               	movlw	-10
  9546  015ED8  50E3               	movf	plusw1,w,c
  9547  015EDA  260B               	addwf	(btemp+10)^0,f,c
  9548  015EDC  0EF7               	movlw	-9
  9549  015EDE  50E3               	movf	plusw1,w,c
  9550  015EE0  220C               	addwfc	(btemp+11)^0,f,c
  9551  015EE2  0EFF               	movlw	255
  9552  015EE4  240B               	addwf	(btemp+10)^0,w,c
  9553  015EE6  6ED9               	movwf	fsr2l,c
  9554  015EE8  0EFF               	movlw	255
  9555  015EEA  200C               	addwfc	(btemp+11)^0,w,c
  9556  015EEC  6EDA               	movwf	fsr2h,c
  9557  015EEE  0EF8               	movlw	-8
  9558  015EF0  006F FF8F FFDF     	movff	plusw1,indf2
  9559                           
  9560                           ;stkvar	_n @ sp[(-4)+-6]
  9561  015EF6  0EF7               	movlw	-9
  9562  015EF8  50E3               	movf	plusw1,w,c
  9563  015EFA  E108               	bnz	l10932
  9564  015EFC  0EF6               	movlw	-10
  9565  015EFE  006F FF8C  F001    	movff	plusw1,btemp
  9566  015F04  0E03               	movlw	3
  9567  015F06  5E01               	subwf	btemp^0,f,c
  9568  015F08  A0D8               	btfss	status,0,c
  9569  015F0A  D125               	goto	u10090
  9570  015F0C                     l10932:
  9571                           
  9572                           ;stkvar	_c @ sp[(-4)+-4]
  9573                           ;stkvar	_s @ sp[(-4)+0]
  9574  015F0C  0EFC               	movlw	-4
  9575  015F0E  006F FF8C  F00B    	movff	plusw1,btemp+10
  9576  015F14  0EFD               	movlw	-3
  9577  015F16  006F FF8C  F00C    	movff	plusw1,btemp+11
  9578  015F1C  0E01               	movlw	1
  9579  015F1E  240B               	addwf	(btemp+10)^0,w,c
  9580  015F20  6ED9               	movwf	fsr2l,c
  9581  015F22  0E00               	movlw	0
  9582  015F24  200C               	addwfc	(btemp+11)^0,w,c
  9583  015F26  6EDA               	movwf	fsr2h,c
  9584  015F28  0EF8               	movlw	-8
  9585  015F2A  006F FF8F FFDF     	movff	plusw1,indf2
  9586                           
  9587                           ;stkvar	_c @ sp[(-4)+-4]
  9588                           ;stkvar	_s @ sp[(-4)+0]
  9589  015F30  0EFC               	movlw	-4
  9590  015F32  006F FF8C  F00B    	movff	plusw1,btemp+10
  9591  015F38  0EFD               	movlw	-3
  9592  015F3A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9593  015F40  0E02               	movlw	2
  9594  015F42  240B               	addwf	(btemp+10)^0,w,c
  9595  015F44  6ED9               	movwf	fsr2l,c
  9596  015F46  0E00               	movlw	0
  9597  015F48  200C               	addwfc	(btemp+11)^0,w,c
  9598  015F4A  6EDA               	movwf	fsr2h,c
  9599  015F4C  0EF8               	movlw	-8
  9600  015F4E  006F FF8F FFDF     	movff	plusw1,indf2
  9601                           
  9602                           ;stkvar	_c @ sp[(-4)+-4]
  9603                           ;stkvar	_n @ sp[(-4)+-6]
  9604                           ;stkvar	_s @ sp[(-4)+0]
  9605  015F54  0EFC               	movlw	-4
  9606  015F56  006F FF8C  F00B    	movff	plusw1,btemp+10
  9607  015F5C  0EFD               	movlw	-3
  9608  015F5E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9609  015F64  0EF6               	movlw	-10
  9610  015F66  50E3               	movf	plusw1,w,c
  9611  015F68  260B               	addwf	(btemp+10)^0,f,c
  9612  015F6A  0EF7               	movlw	-9
  9613  015F6C  50E3               	movf	plusw1,w,c
  9614  015F6E  220C               	addwfc	(btemp+11)^0,f,c
  9615  015F70  0EFE               	movlw	254
  9616  015F72  240B               	addwf	(btemp+10)^0,w,c
  9617  015F74  6ED9               	movwf	fsr2l,c
  9618  015F76  0EFF               	movlw	255
  9619  015F78  200C               	addwfc	(btemp+11)^0,w,c
  9620  015F7A  6EDA               	movwf	fsr2h,c
  9621  015F7C  0EF8               	movlw	-8
  9622  015F7E  006F FF8F FFDF     	movff	plusw1,indf2
  9623                           
  9624                           ;stkvar	_c @ sp[(-4)+-4]
  9625                           ;stkvar	_n @ sp[(-4)+-6]
  9626                           ;stkvar	_s @ sp[(-4)+0]
  9627  015F84  0EFC               	movlw	-4
  9628  015F86  006F FF8C  F00B    	movff	plusw1,btemp+10
  9629  015F8C  0EFD               	movlw	-3
  9630  015F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9631  015F94  0EF6               	movlw	-10
  9632  015F96  50E3               	movf	plusw1,w,c
  9633  015F98  260B               	addwf	(btemp+10)^0,f,c
  9634  015F9A  0EF7               	movlw	-9
  9635  015F9C  50E3               	movf	plusw1,w,c
  9636  015F9E  220C               	addwfc	(btemp+11)^0,f,c
  9637  015FA0  0EFD               	movlw	253
  9638  015FA2  240B               	addwf	(btemp+10)^0,w,c
  9639  015FA4  6ED9               	movwf	fsr2l,c
  9640  015FA6  0EFF               	movlw	255
  9641  015FA8  200C               	addwfc	(btemp+11)^0,w,c
  9642  015FAA  6EDA               	movwf	fsr2h,c
  9643  015FAC  0EF8               	movlw	-8
  9644  015FAE  006F FF8F FFDF     	movff	plusw1,indf2
  9645                           
  9646                           ;stkvar	_n @ sp[(-4)+-6]
  9647  015FB4  0EF7               	movlw	-9
  9648  015FB6  50E3               	movf	plusw1,w,c
  9649  015FB8  E108               	bnz	l10938
  9650  015FBA  0EF6               	movlw	-10
  9651  015FBC  006F FF8C  F001    	movff	plusw1,btemp
  9652  015FC2  0E07               	movlw	7
  9653  015FC4  5E01               	subwf	btemp^0,f,c
  9654  015FC6  A0D8               	btfss	status,0,c
  9655  015FC8  D0C6               	goto	u10090
  9656  015FCA                     l10938:
  9657                           
  9658                           ;stkvar	_c @ sp[(-4)+-4]
  9659                           ;stkvar	_s @ sp[(-4)+0]
  9660  015FCA  0EFC               	movlw	-4
  9661  015FCC  006F FF8C  F00B    	movff	plusw1,btemp+10
  9662  015FD2  0EFD               	movlw	-3
  9663  015FD4  006F FF8C  F00C    	movff	plusw1,btemp+11
  9664  015FDA  0E03               	movlw	3
  9665  015FDC  240B               	addwf	(btemp+10)^0,w,c
  9666  015FDE  6ED9               	movwf	fsr2l,c
  9667  015FE0  0E00               	movlw	0
  9668  015FE2  200C               	addwfc	(btemp+11)^0,w,c
  9669  015FE4  6EDA               	movwf	fsr2h,c
  9670  015FE6  0EF8               	movlw	-8
  9671  015FE8  006F FF8F FFDF     	movff	plusw1,indf2
  9672                           
  9673                           ;stkvar	_c @ sp[(-4)+-4]
  9674                           ;stkvar	_n @ sp[(-4)+-6]
  9675                           ;stkvar	_s @ sp[(-4)+0]
  9676  015FEE  0EFC               	movlw	-4
  9677  015FF0  006F FF8C  F00B    	movff	plusw1,btemp+10
  9678  015FF6  0EFD               	movlw	-3
  9679  015FF8  006F FF8C  F00C    	movff	plusw1,btemp+11
  9680  015FFE  0EF6               	movlw	-10
  9681  016000  50E3               	movf	plusw1,w,c
  9682  016002  260B               	addwf	(btemp+10)^0,f,c
  9683  016004  0EF7               	movlw	-9
  9684  016006  50E3               	movf	plusw1,w,c
  9685  016008  220C               	addwfc	(btemp+11)^0,f,c
  9686  01600A  0EFC               	movlw	252
  9687  01600C  240B               	addwf	(btemp+10)^0,w,c
  9688  01600E  6ED9               	movwf	fsr2l,c
  9689  016010  0EFF               	movlw	255
  9690  016012  200C               	addwfc	(btemp+11)^0,w,c
  9691  016014  6EDA               	movwf	fsr2h,c
  9692  016016  0EF8               	movlw	-8
  9693  016018  006F FF8F FFDF     	movff	plusw1,indf2
  9694                           
  9695                           ;stkvar	_n @ sp[(-4)+-6]
  9696  01601E  0EF7               	movlw	-9
  9697  016020  50E3               	movf	plusw1,w,c
  9698  016022  E108               	bnz	l10944
  9699  016024  0EF6               	movlw	-10
  9700  016026  006F FF8C  F001    	movff	plusw1,btemp
  9701  01602C  0E09               	movlw	9
  9702  01602E  5E01               	subwf	btemp^0,f,c
  9703  016030  A0D8               	btfss	status,0,c
  9704  016032  D091               	goto	u10090
  9705  016034                     l10944:
  9706                           
  9707                           ;stkvar	_s @ sp[(-4)+0]
  9708  016034  0EFC               	movlw	-4
  9709  016036  006F FF8C  F00B    	movff	plusw1,btemp+10
  9710  01603C  1E0B               	comf	(btemp+10)^0,f,c
  9711  01603E  0EFD               	movlw	-3
  9712  016040  006F FF8C  F00C    	movff	plusw1,btemp+11
  9713  016046  1E0C               	comf	(btemp+11)^0,f,c
  9714  016048  2A0B               	incf	(btemp+10)^0,f,c
  9715  01604A  B4D8               	btfsc	status,2,c
  9716  01604C  2A0C               	incf	(btemp+11)^0,f,c
  9717  01604E  0E03               	movlw	3
  9718  016050  160B               	andwf	(btemp+10)^0,f,c
  9719  016052  0E00               	movlw	0
  9720  016054  160C               	andwf	(btemp+11)^0,f,c
  9721                           
  9722                           ;stkvar	_k @ sp[(-4)+2]
  9723  016056  0EFE               	movlw	-2
  9724  016058  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9725  01605E  0EFF               	movlw	-1
  9726  016060  0060  F033  FFE3   	movff	btemp+11,plusw1
  9727                           
  9728                           ;stkvar	_k @ sp[(-4)+2]
  9729                           ;stkvar	_s @ sp[(-4)+0]
  9730  016066  0EFC               	movlw	-4
  9731  016068  50E3               	movf	plusw1,w,c
  9732  01606A  6E01               	movwf	btemp^0,c
  9733  01606C  0EFE               	movlw	-2
  9734  01606E  50E3               	movf	plusw1,w,c
  9735  016070  2601               	addwf	btemp^0,f,c
  9736  016072  0EFC               	movlw	-4
  9737  016074  0060  F007  FFE3   	movff	btemp,plusw1
  9738  01607A  0EFD               	movlw	-3
  9739  01607C  50E3               	movf	plusw1,w,c
  9740  01607E  6E01               	movwf	btemp^0,c
  9741  016080  0EFF               	movlw	-1
  9742  016082  50E3               	movf	plusw1,w,c
  9743  016084  2201               	addwfc	btemp^0,f,c
  9744  016086  0EFD               	movlw	-3
  9745  016088  0060  F007  FFE3   	movff	btemp,plusw1
  9746                           
  9747                           ;stkvar	_k @ sp[(-4)+2]
  9748                           ;stkvar	_n @ sp[(-4)+-6]
  9749  01608E  0EF6               	movlw	-10
  9750  016090  50E3               	movf	plusw1,w,c
  9751  016092  6E01               	movwf	btemp^0,c
  9752  016094  0EFE               	movlw	-2
  9753  016096  50E3               	movf	plusw1,w,c
  9754  016098  5E01               	subwf	btemp^0,f,c
  9755  01609A  0EF6               	movlw	-10
  9756  01609C  0060  F007  FFE3   	movff	btemp,plusw1
  9757  0160A2  0EF7               	movlw	-9
  9758  0160A4  50E3               	movf	plusw1,w,c
  9759  0160A6  6E01               	movwf	btemp^0,c
  9760  0160A8  0EFF               	movlw	-1
  9761  0160AA  50E3               	movf	plusw1,w,c
  9762  0160AC  5A01               	subwfb	btemp^0,f,c
  9763  0160AE  0EF7               	movlw	-9
  9764  0160B0  0060  F007  FFE3   	movff	btemp,plusw1
  9765  0160B6  0EFC               	movlw	252
  9766  0160B8  6E0B               	movwf	(btemp+10)^0,c
  9767  0160BA  0EFF               	movlw	255
  9768  0160BC  6E0C               	movwf	(btemp+11)^0,c
  9769                           
  9770                           ;stkvar	_n @ sp[(-4)+-6]
  9771  0160BE  0EF6               	movlw	-10
  9772  0160C0  006F FF8C  F001    	movff	plusw1,btemp
  9773  0160C6  500B               	movf	(btemp+10)^0,w,c
  9774  0160C8  1601               	andwf	btemp^0,f,c
  9775  0160CA  0EF6               	movlw	-10
  9776  0160CC  0060  F007  FFE3   	movff	btemp,plusw1
  9777  0160D2  0EF7               	movlw	-9
  9778  0160D4  006F FF8C  F001    	movff	plusw1,btemp
  9779  0160DA  500C               	movf	(btemp+11)^0,w,c
  9780  0160DC  1601               	andwf	btemp^0,f,c
  9781  0160DE  0EF7               	movlw	-9
  9782  0160E0  D02E               	goto	L6
  9783  0160E2                     l10952:
  9784                           
  9785                           ;stkvar	_c @ sp[(-4)+-4]
  9786                           ;stkvar	_s @ sp[(-4)+0]
  9787  0160E2  0EFC               	movlw	-4
  9788  0160E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9789  0160EA  0EFD               	movlw	-3
  9790  0160EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9791  0160F2  0EF8               	movlw	-8
  9792  0160F4  006F FF8F FFDF     	movff	plusw1,indf2
  9793                           
  9794                           ;stkvar	_n @ sp[(-4)+-6]
  9795  0160FA  0EF6               	movlw	-10
  9796  0160FC  006F FF8C  F001    	movff	plusw1,btemp
  9797  016102  0E01               	movlw	1
  9798  016104  5E01               	subwf	btemp^0,f,c
  9799  016106  0EF6               	movlw	-10
  9800  016108  0060  F007  FFE3   	movff	btemp,plusw1
  9801  01610E  0EF7               	movlw	-9
  9802  016110  006F FF8C  F001    	movff	plusw1,btemp
  9803  016116  0E00               	movlw	0
  9804  016118  5A01               	subwfb	btemp^0,f,c
  9805  01611A  0EF7               	movlw	-9
  9806  01611C  0060  F007  FFE3   	movff	btemp,plusw1
  9807                           
  9808                           ;stkvar	_s @ sp[(-4)+0]
  9809  016122  0EFC               	movlw	-4
  9810  016124  50E3               	movf	plusw1,w,c
  9811  016126  0F01               	addlw	1
  9812  016128  6E01               	movwf	btemp^0,c
  9813  01612A  0EFC               	movlw	-4
  9814  01612C  0060  F007  FFE3   	movff	btemp,plusw1
  9815  016132  6A01               	clrf	btemp^0,c
  9816  016134  0EFD               	movlw	-3
  9817  016136  50E3               	movf	plusw1,w,c
  9818  016138  2001               	addwfc	btemp^0,w,c
  9819  01613A  6E01               	movwf	btemp^0,c
  9820  01613C  0EFD               	movlw	-3
  9821  01613E                     L6:
  9822  01613E  0060  F007  FFE3   	movff	btemp,plusw1
  9823                           
  9824                           ;stkvar	_n @ sp[(-4)+-6]
  9825  016144  0EF6               	movlw	-10
  9826  016146  006F FF8C  F001    	movff	plusw1,btemp
  9827  01614C  0EF7               	movlw	-9
  9828  01614E  50E3               	movf	plusw1,w,c
  9829  016150  1001               	iorwf	btemp^0,w,c
  9830  016152  A4D8               	btfss	status,2,c
  9831  016154  D7C6               	goto	l10952
  9832  016156                     u10090:
  9833                           
  9834                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  9835  016156  0EF6               	movlw	246
  9836  016158  26E1               	addwf	fsr1l,f,c
  9837  01615A  0EFF               	movlw	255
  9838  01615C  22E2               	addwfc	fsr1h,f,c
  9839  01615E  0012               	return		;funcret
  9840  016160                     __end_of_memset:
  9841                           	opt callstack 0
  9842                           
  9843 ;; *************** function _printf *****************
  9844 ;; Defined at:
  9845 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  9846 ;; Parameters:    Size  Location     Type
  9847 ;;  fmt             2  [STACK] PTR const unsigned char 
  9848 ;;		 -> STR_27(3), STR_26(3), STR_25(3), 
  9849 ;; Auto vars:     Size  Location     Type
  9850 ;;  ap              2  [STACK] PTR void [1]
  9851 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9852 ;;  ret             2    0        int 
  9853 ;; Return value:  Size  Location     Type
  9854 ;;                  2  [STACK] int 
  9855 ;; Registers used:
  9856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9857 ;; Tracked objects:
  9858 ;;		On entry : 3F/3B
  9859 ;;		On exit  : 3F/0
  9860 ;;		Unchanged: 0/0
  9861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9866 ;;Total ram usage:        0 bytes
  9867 ;; Hardware stack levels used:    1
  9868 ;; Hardware stack levels required when called:   23
  9869 ;; This function calls:
  9870 ;;		_vfprintf
  9871 ;; This function is called by:
  9872 ;;		_eaDogM_WriteString
  9873 ;;		_send_lcd_cmd_dma
  9874 ;; This function uses a reentrant model
  9875 ;;
  9876                           
  9877                           	psect	text43
  9878  019962                     __ptext43:
  9879                           	opt callstack 0
  9880  019962                     _printf:
  9881                           	opt callstack 0
  9882                           
  9883                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9884  019962  52E6               	movf	postinc1,f,c
  9885  019964  52E6               	movf	postinc1,f,c
  9886                           
  9887                           ;stkvar	?_printf @ sp[(-2)+-3]
  9888                           
  9889                           ;incstack = 0
  9890  019966  0EFB               	movlw	251
  9891  019968  24E1               	addwf	fsr1l,w,c
  9892  01996A  6E0B               	movwf	(btemp+10)^0,c
  9893  01996C  0EFF               	movlw	255
  9894  01996E  20E2               	addwfc	fsr1h,w,c
  9895  019970  6E0C               	movwf	(btemp+11)^0,c
  9896                           
  9897                           ;stkvar	_ap @ sp[(-2)+0]
  9898  019972  0EFF               	movlw	-1
  9899  019974  0060  F033  FFE3   	movff	btemp+11,plusw1
  9900  01997A  0EFE               	movlw	-2
  9901  01997C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9902                           
  9903                           ;stkvar	_ap @ sp[(-2)+0]
  9904  019982  0EFE               	movlw	254
  9905  019984  24E1               	addwf	fsr1l,w,c
  9906  019986  6E01               	movwf	btemp^0,c
  9907  019988  0EFF               	movlw	255
  9908  01998A  20E2               	addwfc	fsr1h,w,c
  9909  01998C  6E02               	movwf	(btemp+1)^0,c
  9910  01998E  0060  F007  FFE6   	movff	btemp,postinc1
  9911  019994  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9912                           
  9913                           ;stkvar	_fmt @ sp[(-4)+-3]
  9914  01999A  0EF9               	movlw	-7
  9915  01999C  006F FF8F FFE6     	movff	plusw1,postinc1
  9916  0199A2  006F FF8F FFE6     	movff	plusw1,postinc1
  9917  0199A8  0E00               	movlw	0
  9918  0199AA  6EE6               	movwf	postinc1,c
  9919  0199AC  0E00               	movlw	0
  9920  0199AE  6EE6               	movwf	postinc1,c
  9921  0199B0  ECB6  F0C7         	call	_vfprintf	;wreg free
  9922                           
  9923                           ; BSR set to: 0
  9924                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  9925  0199B4  52E5               	movf	postdec1,f,c
  9926  0199B6  52E5               	movf	postdec1,f,c
  9927  0199B8  52E5               	movf	postdec1,f,c
  9928  0199BA  50E7               	movf	indf1,w,c
  9929  0199BC  5EE1               	subwf	fsr1l,f,c
  9930  0199BE  0E00               	movlw	0
  9931  0199C0  5AE2               	subwfb	fsr1h,f,c
  9932  0199C2  0012               	return		;funcret
  9933  0199C4                     __end_of_printf:
  9934                           	opt callstack 0
  9935                           
  9936 ;; *************** function _vfprintf *****************
  9937 ;; Defined at:
  9938 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9939 ;; Parameters:    Size  Location     Type
  9940 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9941 ;;		 -> f(6), NULL(0), 
  9942 ;;  fmt             2  [STACK] PTR const unsigned char 
  9943 ;;		 -> STR_47(79), STR_45(3), STR_44(3), STR_43(19), 
  9944 ;;		 -> STR_42(19), STR_41(19), STR_40(19), STR_39(19), 
  9945 ;;		 -> STR_38(19), STR_37(24), STR_36(15), STR_35(15), 
  9946 ;;		 -> STR_34(15), STR_33(10), STR_32(10), STR_31(19), 
  9947 ;;		 -> STR_30(19), STR_27(3), STR_26(3), STR_25(3), 
  9948 ;;		 -> STR_24(17), STR_23(16), STR_22(16), STR_21(19), 
  9949 ;;		 -> STR_20(20), STR_19(19), STR_18(19), STR_17(19), 
  9950 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
  9951 ;;		 -> STR_12(17), STR_11(16), STR_10(16), STR_9(23), 
  9952 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  9953 ;;		 -> STR_2(15), STR_1(17), 
  9954 ;;  ap              2  [STACK] PTR PTR void 
  9955 ;;		 -> ap(2), ap(2), 
  9956 ;; Auto vars:     Size  Location     Type
  9957 ;;  cfmt            2  [STACK] PTR unsigned char 
  9958 ;;		 -> STR_47(79), STR_45(3), STR_44(3), STR_43(19), 
  9959 ;;		 -> STR_42(19), STR_41(19), STR_40(19), STR_39(19), 
  9960 ;;		 -> STR_38(19), STR_37(24), STR_36(15), STR_35(15), 
  9961 ;;		 -> STR_34(15), STR_33(10), STR_32(10), STR_31(19), 
  9962 ;;		 -> STR_30(19), STR_27(3), STR_26(3), STR_25(3), 
  9963 ;;		 -> STR_24(17), STR_23(16), STR_22(16), STR_21(19), 
  9964 ;;		 -> STR_20(20), STR_19(19), STR_18(19), STR_17(19), 
  9965 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
  9966 ;;		 -> STR_12(17), STR_11(16), STR_10(16), STR_9(23), 
  9967 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  9968 ;;		 -> STR_2(15), STR_1(17), 
  9969 ;; Return value:  Size  Location     Type
  9970 ;;                  2  [STACK] int 
  9971 ;; Registers used:
  9972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9973 ;; Tracked objects:
  9974 ;;		On entry : 0/3
  9975 ;;		On exit  : 3F/0
  9976 ;;		Unchanged: 0/0
  9977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9982 ;;Total ram usage:        0 bytes
  9983 ;; Hardware stack levels used:    1
  9984 ;; Hardware stack levels required when called:   22
  9985 ;; This function calls:
  9986 ;;		_vfpfcnvrt
  9987 ;; This function is called by:
  9988 ;;		_sprintf
  9989 ;;		_printf
  9990 ;; This function uses a reentrant model
  9991 ;;
  9992                           
  9993                           	psect	text44
  9994  018F6C                     __ptext44:
  9995                           	opt callstack 0
  9996  018F6C                     _vfprintf:
  9997                           	opt callstack 0
  9998                           
  9999                           ; BSR set to: 0
 10000                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10001  018F6C  52E6               	movf	postinc1,f,c
 10002  018F6E  52E6               	movf	postinc1,f,c
 10003                           
 10004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10005                           ;stkvar	_fmt @ sp[(-2)+-4]
 10006                           
 10007                           ;incstack = 0
 10008 ;; hardware stack exceeded
 10009  018F70  0EFA               	movlw	-6
 10010  018F72  006F FF8C  F00B    	movff	plusw1,btemp+10
 10011  018F78  0EFB               	movlw	-5
 10012  018F7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 10013                           
 10014                           ;stkvar	_cfmt @ sp[(-2)+0]
 10015  018F80  0EFF               	movlw	-1
 10016  018F82  0060  F033  FFE3   	movff	btemp+11,plusw1
 10017  018F88  0EFE               	movlw	-2
 10018  018F8A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10019                           
 10020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10021  018F90  0100               	movlb	0	; () banked
 10022  018F92  6BA6               	clrf	_nout& (0+255),b
 10023  018F94  6BA7               	clrf	(_nout+1)& (0+255),b
 10024                           
 10025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10026  018F96  D021               	goto	l11776
 10027  018F98                     l11774:
 10028                           
 10029                           ; BSR set to: 0
 10030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10031                           ;stkvar	_ap @ sp[(-2)+-6]
 10032  018F98  0EF8               	movlw	-8
 10033  018F9A  006F FF8F FFE6     	movff	plusw1,postinc1
 10034  018FA0  006F FF8F FFE6     	movff	plusw1,postinc1
 10035                           
 10036                           ;stkvar	_cfmt @ sp[(-4)+0]
 10037  018FA6  0EFC               	movlw	252
 10038  018FA8  24E1               	addwf	fsr1l,w,c
 10039  018FAA  6E01               	movwf	btemp^0,c
 10040  018FAC  0EFF               	movlw	255
 10041  018FAE  20E2               	addwfc	fsr1h,w,c
 10042  018FB0  6E02               	movwf	(btemp+1)^0,c
 10043  018FB2  0060  F007  FFE6   	movff	btemp,postinc1
 10044  018FB8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10045                           
 10046                           ;stkvar	_fp @ sp[(-6)+-2]
 10047  018FBE  0EF8               	movlw	-8
 10048  018FC0  006F FF8F FFE6     	movff	plusw1,postinc1
 10049  018FC6  006F FF8F FFE6     	movff	plusw1,postinc1
 10050  018FCC  EC22  F089         	call	_vfpfcnvrt	;wreg free
 10051  018FD0  5001               	movf	btemp^0,w,c
 10052  018FD2  0100               	movlb	0	; () banked
 10053  018FD4  27A6               	addwf	_nout& (0+255),f,b
 10054  018FD6  5002               	movf	(btemp+1)^0,w,c
 10055  018FD8  23A7               	addwfc	(_nout+1)& (0+255),f,b
 10056  018FDA                     l11776:
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10060                           ;stkvar	_cfmt @ sp[(-2)+0]
 10061  018FDA  50E1               	movf	fsr1l,w,c
 10062  018FDC  0FFE               	addlw	-2
 10063  018FDE  6ED9               	movwf	fsr2l,c
 10064  018FE0  50E2               	movf	fsr1h,w,c
 10065  018FE2  6EDA               	movwf	fsr2h,c
 10066  018FE4  0EFF               	movlw	255
 10067  018FE6  22DA               	addwfc	fsr2h,f,c
 10068  018FE8  006F FF7B FFF6     	movff	postinc2,tblptrl
 10069  018FEE  006F FF77 FFF7     	movff	postdec2,tblptrh
 10070  018FF4                     	if	0	;tblptru may be non-zero
 10071  018FF4                     	endif
 10072  018FF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10073  018FF4  0E00               	movlw	low (__mediumconst shr (0+16))
 10074  018FF6  6EF8               	movwf	tblptru,c
 10075  018FF8                     	endif
 10076  018FF8  0008               	tblrd		*
 10077  018FFA  50F5               	movf	tablat,w,c
 10078  018FFC  0900               	iorlw	0
 10079  018FFE  A4D8               	btfss	status,2,c
 10080  019000  D7CB               	goto	l11774
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10084  019002  0060  F298  F001   	movff	_nout,btemp
 10085  019008  0060  F29C  F002   	movff	_nout+1,btemp+1
 10086                           
 10087                           ; BSR set to: 0
 10088                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 10089  01900E  0EF8               	movlw	248
 10090  019010  26E1               	addwf	fsr1l,f,c
 10091  019012  0EFF               	movlw	255
 10092  019014  22E2               	addwfc	fsr1h,f,c
 10093  019016  0012               	return		;funcret
 10094  019018                     __end_of_vfprintf:
 10095                           	opt callstack 0
 10096                           
 10097 ;; *************** function _vfpfcnvrt *****************
 10098 ;; Defined at:
 10099 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10102 ;;		 -> f(6), NULL(0), 
 10103 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 10104 ;;		 -> cfmt(2), 
 10105 ;;  ap              2  [STACK] PTR PTR void 
 10106 ;;		 -> ap(2), ap(2), 
 10107 ;; Auto vars:     Size  Location     Type
 10108 ;;  llu             8  [STACK] unsigned long long 
 10109 ;;  ll              8  [STACK] long long 
 10110 ;;  f               4  [STACK] long long 
 10111 ;;  ct              3  [STACK] unsigned char [3]
 10112 ;;  vp              3    0        PTR void 
 10113 ;;  cp              2  [STACK] PTR unsigned char 
 10114 ;;		 -> ?_printf(2), ?_sprintf(2), STR_29(9), STR_28(12), 
 10115 ;;		 -> D.lcd(288), D(290), T(144), STR_7(4), 
 10116 ;;		 -> STR_3(4), V(188), 
 10117 ;;  i               2    0        int 
 10118 ;;  done            2    0        int 
 10119 ;;  c               1  [STACK] unsigned char 
 10120 ;; Return value:  Size  Location     Type
 10121 ;;                  2  [STACK] int 
 10122 ;; Registers used:
 10123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10124 ;; Tracked objects:
 10125 ;;		On entry : 0/0
 10126 ;;		On exit  : 0/0
 10127 ;;		Unchanged: 0/0
 10128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10133 ;;Total ram usage:        0 bytes
 10134 ;; Hardware stack levels used:    1
 10135 ;; Hardware stack levels required when called:   21
 10136 ;; This function calls:
 10137 ;;		_atoi
 10138 ;;		_ctoa
 10139 ;;		_dtoa
 10140 ;;		_efgtoa
 10141 ;;		_fputc
 10142 ;;		_isdigit
 10143 ;;		_isupper
 10144 ;;		_stoa
 10145 ;;		_strncmp
 10146 ;;		_tolower
 10147 ;;		_utoa
 10148 ;;		_xtoa
 10149 ;; This function is called by:
 10150 ;;		_vfprintf
 10151 ;; This function uses a reentrant model
 10152 ;;
 10153                           
 10154                           	psect	text45
 10155  011244                     __ptext45:
 10156                           	opt callstack 0
 10157  011244                     _vfpfcnvrt:
 10158                           	opt callstack 0
 10159                           
 10160                           ; BSR set to: 0
 10161                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10162  011244  0E20               	movlw	32
 10163  011246  26E1               	addwf	fsr1l,f,c
 10164  011248  0E00               	movlw	0
 10165  01124A  22E2               	addwfc	fsr1h,f,c
 10166                           
 10167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 10168                           ;stkvar	_fmt @ sp[(-32)+-4]
 10169                           
 10170                           ;incstack = 0
 10171 ;; hardware stack exceeded
 10172  01124C  0EDC               	movlw	-36
 10173  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10174  011254  0EDD               	movlw	-35
 10175  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
 10176  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10177  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
 10178  011268                     	if	0	;tblptru may be non-zero
 10179  011268                     	endif
 10180  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10181  011268  0E00               	movlw	low (__mediumconst shr (0+16))
 10182  01126A  6EF8               	movwf	tblptru,c
 10183  01126C                     	endif
 10184  01126C  0008               	tblrd		*
 10185  01126E  50F5               	movf	tablat,w,c
 10186  011270  0A25               	xorlw	37
 10187  011272  A4D8               	btfss	status,2,c
 10188  011274  EFC9  F090         	goto	l11720
 10189                           
 10190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 10191                           ;stkvar	_fmt @ sp[(-32)+-4]
 10192  011278  0EDC               	movlw	-36
 10193  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10194  011280  0EDD               	movlw	-35
 10195  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
 10196  011288  2ADE               	incf	postinc2,f,c
 10197  01128A  0E00               	movlw	0
 10198  01128C  22DD               	addwfc	postdec2,f,c
 10199                           
 10200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 10201  01128E  6A21               	clrf	_width^0,c
 10202  011290  6A22               	clrf	(_width+1)^0,c
 10203  011292  6A25               	clrf	_flags^0,c
 10204  011294  6A26               	clrf	(_flags+1)^0,c
 10205                           
 10206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 10207  011296  6823               	setf	_prec^0,c
 10208  011298  6824               	setf	(_prec+1)^0,c
 10209                           
 10210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 10211                           ;stkvar	_fmt @ sp[(-32)+-4]
 10212  01129A  0EDC               	movlw	-36
 10213  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10214  0112A2  0EDD               	movlw	-35
 10215  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10216  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 10217  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10218  0112B6                     	if	0	;tblptru may be non-zero
 10219  0112B6                     	endif
 10220  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10221  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
 10222  0112B8  6EF8               	movwf	tblptru,c
 10223  0112BA                     	endif
 10224  0112BA  0008               	tblrd		*
 10225  0112BC  50F5               	movf	tablat,w,c
 10226  0112BE  0A2A               	xorlw	42
 10227  0112C0  A4D8               	btfss	status,2,c
 10228  0112C2  D031               	goto	l11538
 10229                           
 10230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 10231                           ;stkvar	_fmt @ sp[(-32)+-4]
 10232  0112C4  0EDC               	movlw	-36
 10233  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10234  0112CC  0EDD               	movlw	-35
 10235  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10236  0112D4  2ADE               	incf	postinc2,f,c
 10237  0112D6  0E00               	movlw	0
 10238  0112D8  22DD               	addwfc	postdec2,f,c
 10239                           
 10240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 10241                           ;stkvar	_ap @ sp[(-32)+-6]
 10242  0112DA  0EDA               	movlw	-38
 10243  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10244  0112E2  0EDB               	movlw	-37
 10245  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10246  0112EA  0E02               	movlw	2
 10247  0112EC  5EDE               	subwf	postinc2,f,c
 10248  0112EE  0E00               	movlw	0
 10249  0112F0  5ADD               	subwfb	postdec2,f,c
 10250  0112F2  006F FF78  F00B    	movff	postinc2,btemp+10
 10251  0112F8  006F FF74  F00C    	movff	postdec2,btemp+11
 10252  0112FE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10253  011304  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10254  01130A  006F FF78  F021    	movff	postinc2,_width
 10255  011310  006F FF74  F022    	movff	postdec2,_width+1
 10256                           
 10257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 10258  011316  AE22               	btfss	(_width+1)^0,7,c
 10259  011318  D066               	goto	u11220
 10260                           
 10261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 10262  01131A  8025               	bsf	_flags^0,0,c
 10263                           
 10264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 10265  01131C  6C21               	negf	_width^0,c
 10266  01131E  1E22               	comf	(_width+1)^0,f,c
 10267  011320  B0D8               	btfsc	status,0,c
 10268  011322  2A22               	incf	(_width+1)^0,f,c
 10269  011324  D060               	goto	u11220
 10270  011326                     l11538:
 10271                           
 10272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 10273                           ;stkvar	_fmt @ sp[(-32)+-4]
 10274  011326  0EDC               	movlw	-36
 10275  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
 10276  01132E  0EDD               	movlw	-35
 10277  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
 10278  011336  006F FF78  F00B    	movff	postinc2,btemp+10
 10279  01133C  006F FF74  F00C    	movff	postdec2,btemp+11
 10280  011342  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10281  011348  0060  F033  FFE6   	movff	btemp+11,postinc1
 10282  01134E  EC4F  F0B3         	call	_atoi	;wreg free
 10283  011352  0060  F004  F021   	movff	btemp,_width
 10284  011358  0060  F008  F022   	movff	btemp+1,_width+1
 10285                           
 10286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10287  01135E  D00B               	goto	l11542
 10288  011360                     l11540:
 10289                           
 10290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 10291                           ;stkvar	_fmt @ sp[(-32)+-4]
 10292  011360  0EDC               	movlw	-36
 10293  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
 10294  011368  0EDD               	movlw	-35
 10295  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10296  011370  2ADE               	incf	postinc2,f,c
 10297  011372  0E00               	movlw	0
 10298  011374  22DD               	addwfc	postdec2,f,c
 10299  011376                     l11542:
 10300  011376  0ED0               	movlw	208
 10301  011378  6E0B               	movwf	(btemp+10)^0,c
 10302  01137A  0EFF               	movlw	255
 10303  01137C  6E0C               	movwf	(btemp+11)^0,c
 10304                           
 10305                           ;stkvar	_fmt @ sp[(-32)+-4]
 10306  01137E  0EDC               	movlw	-36
 10307  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
 10308  011386  0EDD               	movlw	-35
 10309  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
 10310  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10311  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
 10312  01139A                     	if	0	;tblptru may be non-zero
 10313  01139A                     	endif
 10314  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10315  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
 10316  01139C  6EF8               	movwf	tblptru,c
 10317  01139E                     	endif
 10318  01139E  0008               	tblrd		*
 10319  0113A0  50F5               	movf	tablat,w,c
 10320  0113A2  6E09               	movwf	(btemp+8)^0,c
 10321  0113A4  6A0A               	clrf	(btemp+9)^0,c
 10322  0113A6  500B               	movf	(btemp+10)^0,w,c
 10323  0113A8  2609               	addwf	(btemp+8)^0,f,c
 10324  0113AA  500C               	movf	(btemp+11)^0,w,c
 10325  0113AC  220A               	addwfc	(btemp+9)^0,f,c
 10326  0113AE  500A               	movf	(btemp+9)^0,w,c
 10327  0113B0  E106               	bnz	u11200
 10328  0113B2  0E0A               	movlw	10
 10329  0113B4  5C09               	subwf	(btemp+8)^0,w,c
 10330  0113B6  B0D8               	btfsc	status,0,c
 10331  0113B8  D002               	goto	u11200
 10332  0113BA  0E01               	movlw	1
 10333  0113BC  D001               	goto	u11210
 10334  0113BE                     u11200:
 10335  0113BE  0E00               	movlw	0
 10336  0113C0                     u11210:
 10337  0113C0  6E0B               	movwf	(btemp+10)^0,c
 10338  0113C2  6A0C               	clrf	(btemp+11)^0,c
 10339                           
 10340                           ;stkvar	_vfpfcnvrt$5269 @ sp[(-32)+4]
 10341  0113C4  0EE4               	movlw	-28
 10342  0113C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10343  0113CC  0EE5               	movlw	-27
 10344  0113CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 10345                           
 10346                           ;stkvar	_vfpfcnvrt$5269 @ sp[(-32)+4]
 10347  0113D4  0EE4               	movlw	-28
 10348  0113D6  006F FF8C  F001    	movff	plusw1,btemp
 10349  0113DC  0EE5               	movlw	-27
 10350  0113DE  50E3               	movf	plusw1,w,c
 10351  0113E0  1001               	iorwf	btemp^0,w,c
 10352  0113E2  A4D8               	btfss	status,2,c
 10353  0113E4  D7BD               	goto	l11540
 10354  0113E6                     u11220:
 10355                           
 10356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 10357                           ;stkvar	_fmt @ sp[(-32)+-4]
 10358  0113E6  0EDC               	movlw	-36
 10359  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10360  0113EE  0EDD               	movlw	-35
 10361  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10362  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10363  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10364  011402                     	if	0	;tblptru may be non-zero
 10365  011402                     	endif
 10366  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10367  011402  0E00               	movlw	low (__mediumconst shr (0+16))
 10368  011404  6EF8               	movwf	tblptru,c
 10369  011406                     	endif
 10370  011406  0008               	tblrd		*
 10371  011408  50F5               	movf	tablat,w,c
 10372  01140A  0A2E               	xorlw	46
 10373  01140C  A4D8               	btfss	status,2,c
 10374  01140E  D0AC               	goto	u11270
 10375                           
 10376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 10377  011410  6A23               	clrf	_prec^0,c
 10378  011412  6A24               	clrf	(_prec+1)^0,c
 10379                           
 10380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 10381                           ;stkvar	_fmt @ sp[(-32)+-4]
 10382  011414  0EDC               	movlw	-36
 10383  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
 10384  01141C  0EDD               	movlw	-35
 10385  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10386  011424  2ADE               	incf	postinc2,f,c
 10387  011426  0E00               	movlw	0
 10388  011428  22DD               	addwfc	postdec2,f,c
 10389                           
 10390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 10391                           ;stkvar	_fmt @ sp[(-32)+-4]
 10392  01142A  0EDC               	movlw	-36
 10393  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10394  011432  0EDD               	movlw	-35
 10395  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
 10396  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10397  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
 10398  011446                     	if	0	;tblptru may be non-zero
 10399  011446                     	endif
 10400  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10401  011446  0E00               	movlw	low (__mediumconst shr (0+16))
 10402  011448  6EF8               	movwf	tblptru,c
 10403  01144A                     	endif
 10404  01144A  0008               	tblrd		*
 10405  01144C  50F5               	movf	tablat,w,c
 10406  01144E  0A2A               	xorlw	42
 10407  011450  A4D8               	btfss	status,2,c
 10408  011452  D02A               	goto	l11560
 10409                           
 10410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 10411                           ;stkvar	_fmt @ sp[(-32)+-4]
 10412  011454  0EDC               	movlw	-36
 10413  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
 10414  01145C  0EDD               	movlw	-35
 10415  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10416  011464  2ADE               	incf	postinc2,f,c
 10417  011466  0E00               	movlw	0
 10418  011468  22DD               	addwfc	postdec2,f,c
 10419                           
 10420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 10421                           ;stkvar	_ap @ sp[(-32)+-6]
 10422  01146A  0EDA               	movlw	-38
 10423  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10424  011472  0EDB               	movlw	-37
 10425  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
 10426  01147A  0E02               	movlw	2
 10427  01147C  5EDE               	subwf	postinc2,f,c
 10428  01147E  0E00               	movlw	0
 10429  011480  5ADD               	subwfb	postdec2,f,c
 10430  011482  006F FF78  F00B    	movff	postinc2,btemp+10
 10431  011488  006F FF74  F00C    	movff	postdec2,btemp+11
 10432  01148E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10433  011494  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10434  01149A  006F FF78  F023    	movff	postinc2,_prec
 10435  0114A0  006F FF74  F024    	movff	postdec2,_prec+1
 10436                           
 10437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 10438  0114A6  D060               	goto	u11270
 10439  0114A8                     l11560:
 10440                           
 10441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 10442                           ;stkvar	_fmt @ sp[(-32)+-4]
 10443  0114A8  0EDC               	movlw	-36
 10444  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10445  0114B0  0EDD               	movlw	-35
 10446  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10447  0114B8  006F FF78  F00B    	movff	postinc2,btemp+10
 10448  0114BE  006F FF74  F00C    	movff	postdec2,btemp+11
 10449  0114C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10450  0114CA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10451  0114D0  EC4F  F0B3         	call	_atoi	;wreg free
 10452  0114D4  0060  F004  F023   	movff	btemp,_prec
 10453  0114DA  0060  F008  F024   	movff	btemp+1,_prec+1
 10454                           
 10455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10456  0114E0  D00B               	goto	l11564
 10457  0114E2                     l11562:
 10458                           
 10459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 10460                           ;stkvar	_fmt @ sp[(-32)+-4]
 10461  0114E2  0EDC               	movlw	-36
 10462  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10463  0114EA  0EDD               	movlw	-35
 10464  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10465  0114F2  2ADE               	incf	postinc2,f,c
 10466  0114F4  0E00               	movlw	0
 10467  0114F6  22DD               	addwfc	postdec2,f,c
 10468  0114F8                     l11564:
 10469  0114F8  0ED0               	movlw	208
 10470  0114FA  6E0B               	movwf	(btemp+10)^0,c
 10471  0114FC  0EFF               	movlw	255
 10472  0114FE  6E0C               	movwf	(btemp+11)^0,c
 10473                           
 10474                           ;stkvar	_fmt @ sp[(-32)+-4]
 10475  011500  0EDC               	movlw	-36
 10476  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
 10477  011508  0EDD               	movlw	-35
 10478  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10479  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
 10480  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
 10481  01151C                     	if	0	;tblptru may be non-zero
 10482  01151C                     	endif
 10483  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10484  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
 10485  01151E  6EF8               	movwf	tblptru,c
 10486  011520                     	endif
 10487  011520  0008               	tblrd		*
 10488  011522  50F5               	movf	tablat,w,c
 10489  011524  6E09               	movwf	(btemp+8)^0,c
 10490  011526  6A0A               	clrf	(btemp+9)^0,c
 10491  011528  500B               	movf	(btemp+10)^0,w,c
 10492  01152A  2609               	addwf	(btemp+8)^0,f,c
 10493  01152C  500C               	movf	(btemp+11)^0,w,c
 10494  01152E  220A               	addwfc	(btemp+9)^0,f,c
 10495  011530  500A               	movf	(btemp+9)^0,w,c
 10496  011532  E106               	bnz	u11250
 10497  011534  0E0A               	movlw	10
 10498  011536  5C09               	subwf	(btemp+8)^0,w,c
 10499  011538  B0D8               	btfsc	status,0,c
 10500  01153A  D002               	goto	u11250
 10501  01153C  0E01               	movlw	1
 10502  01153E  D001               	goto	u11260
 10503  011540                     u11250:
 10504  011540  0E00               	movlw	0
 10505  011542                     u11260:
 10506  011542  6E0B               	movwf	(btemp+10)^0,c
 10507  011544  6A0C               	clrf	(btemp+11)^0,c
 10508                           
 10509                           ;stkvar	_vfpfcnvrt$5270 @ sp[(-32)+0]
 10510  011546  0EE0               	movlw	-32
 10511  011548  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10512  01154E  0EE1               	movlw	-31
 10513  011550  0060  F033  FFE3   	movff	btemp+11,plusw1
 10514                           
 10515                           ;stkvar	_vfpfcnvrt$5270 @ sp[(-32)+0]
 10516  011556  0EE0               	movlw	-32
 10517  011558  006F FF8C  F001    	movff	plusw1,btemp
 10518  01155E  0EE1               	movlw	-31
 10519  011560  50E3               	movf	plusw1,w,c
 10520  011562  1001               	iorwf	btemp^0,w,c
 10521  011564  A4D8               	btfss	status,2,c
 10522  011566  D7BD               	goto	l11562
 10523  011568                     u11270:
 10524                           
 10525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 10526                           ;stkvar	_fmt @ sp[(-32)+-4]
 10527  011568  0EDC               	movlw	-36
 10528  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10529  011570  0EDD               	movlw	-35
 10530  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
 10531  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
 10532  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10533  011584                     	if	0	;tblptru may be non-zero
 10534  011584                     	endif
 10535  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10536  011584  0E00               	movlw	low (__mediumconst shr (0+16))
 10537  011586  6EF8               	movwf	tblptru,c
 10538  011588                     	endif
 10539  011588  0008               	tblrd		*
 10540  01158A  50F5               	movf	tablat,w,c
 10541  01158C  6EE6               	movwf	postinc1,c
 10542  01158E  0E00               	movlw	0
 10543  011590  6EE6               	movwf	postinc1,c
 10544  011592  ECFA  F0CA         	call	_tolower	;wreg free
 10545                           
 10546                           ;stkvar	_ct @ sp[(-32)+26]
 10547  011596  0EFA               	movlw	-6
 10548  011598  0060  F007  FFE3   	movff	btemp,plusw1
 10549                           
 10550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 10551                           ;stkvar	_ct @ sp[(-32)+26]
 10552  01159E  0EFA               	movlw	-6
 10553  0115A0  50E3               	movf	plusw1,w,c
 10554  0115A2  B4D8               	btfsc	status,2,c
 10555  0115A4  D05B               	goto	l11580
 10556                           
 10557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 10558                           ;stkvar	_ct @ sp[(-32)+26]
 10559  0115A6  0EFB               	movlw	251
 10560  0115A8  24E1               	addwf	fsr1l,w,c
 10561  0115AA  6ED9               	movwf	fsr2l,c
 10562  0115AC  0EFF               	movlw	255
 10563  0115AE  20E2               	addwfc	fsr1h,w,c
 10564  0115B0  6EDA               	movwf	fsr2h,c
 10565                           
 10566                           ;stkvar	_fmt @ sp[(-32)+-4]
 10567  0115B2  0EDC               	movlw	-36
 10568  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
 10569  0115BA  0EDD               	movlw	-35
 10570  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
 10571  0115C2  006F FFB8  F00B    	movff	postinc0,btemp+10
 10572  0115C8  006F FFB4  F00C    	movff	postdec0,btemp+11
 10573  0115CE  0E01               	movlw	1
 10574  0115D0  260B               	addwf	(btemp+10)^0,f,c
 10575  0115D2  0E00               	movlw	0
 10576  0115D4  220C               	addwfc	(btemp+11)^0,f,c
 10577  0115D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10578  0115DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10579  0115E2                     	if	0	;tblptru may be non-zero
 10580  0115E2                     	endif
 10581  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10582  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
 10583  0115E4  6EF8               	movwf	tblptru,c
 10584  0115E6                     	endif
 10585  0115E6  0008               	tblrd		*
 10586  0115E8  50F5               	movf	tablat,w,c
 10587  0115EA  6EE6               	movwf	postinc1,c
 10588  0115EC  0E00               	movlw	0
 10589  0115EE  6EE6               	movwf	postinc1,c
 10590  0115F0  ECFA  F0CA         	call	_tolower	;wreg free
 10591  0115F4  5001               	movf	btemp^0,w,c
 10592  0115F6  6EDF               	movwf	indf2,c
 10593                           
 10594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 10595                           ;stkvar	_ct @ sp[(-32)+26]
 10596  0115F8  0EFB               	movlw	251
 10597  0115FA  24E1               	addwf	fsr1l,w,c
 10598  0115FC  6ED9               	movwf	fsr2l,c
 10599  0115FE  0EFF               	movlw	255
 10600  011600  20E2               	addwfc	fsr1h,w,c
 10601  011602  6EDA               	movwf	fsr2h,c
 10602  011604  50DF               	movf	indf2,w,c
 10603  011606  B4D8               	btfsc	status,2,c
 10604  011608  D029               	goto	l11580
 10605                           
 10606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 10607                           ;stkvar	_ct @ sp[(-32)+26]
 10608  01160A  0EFC               	movlw	252
 10609  01160C  24E1               	addwf	fsr1l,w,c
 10610  01160E  6ED9               	movwf	fsr2l,c
 10611  011610  0EFF               	movlw	255
 10612  011612  20E2               	addwfc	fsr1h,w,c
 10613  011614  6EDA               	movwf	fsr2h,c
 10614                           
 10615                           ;stkvar	_fmt @ sp[(-32)+-4]
 10616  011616  0EDC               	movlw	-36
 10617  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
 10618  01161E  0EDD               	movlw	-35
 10619  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
 10620  011626  006F FFB8  F00B    	movff	postinc0,btemp+10
 10621  01162C  006F FFB4  F00C    	movff	postdec0,btemp+11
 10622  011632  0E02               	movlw	2
 10623  011634  260B               	addwf	(btemp+10)^0,f,c
 10624  011636  0E00               	movlw	0
 10625  011638  220C               	addwfc	(btemp+11)^0,f,c
 10626  01163A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10627  011640  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10628  011646                     	if	0	;tblptru may be non-zero
 10629  011646                     	endif
 10630  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10631  011646  0E00               	movlw	low (__mediumconst shr (0+16))
 10632  011648  6EF8               	movwf	tblptru,c
 10633  01164A                     	endif
 10634  01164A  0008               	tblrd		*
 10635  01164C  50F5               	movf	tablat,w,c
 10636  01164E  6EE6               	movwf	postinc1,c
 10637  011650  0E00               	movlw	0
 10638  011652  6EE6               	movwf	postinc1,c
 10639  011654  ECFA  F0CA         	call	_tolower	;wreg free
 10640  011658  5001               	movf	btemp^0,w,c
 10641  01165A  6EDF               	movwf	indf2,c
 10642  01165C                     l11580:
 10643                           
 10644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 10645                           ;stkvar	_fmt @ sp[(-32)+-4]
 10646  01165C  0EDC               	movlw	-36
 10647  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10648  011664  0EDD               	movlw	-35
 10649  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
 10650  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10651  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
 10652  011678                     	if	0	;tblptru may be non-zero
 10653  011678                     	endif
 10654  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10655  011678  0E00               	movlw	low (__mediumconst shr (0+16))
 10656  01167A  6EF8               	movwf	tblptru,c
 10657  01167C                     	endif
 10658  01167C  0008               	tblrd		*
 10659  01167E  50F5               	movf	tablat,w,c
 10660  011680  0A63               	xorlw	99
 10661  011682  A4D8               	btfss	status,2,c
 10662  011684  D037               	goto	l11590
 10663                           
 10664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 10665                           ;stkvar	_fmt @ sp[(-32)+-4]
 10666  011686  0EDC               	movlw	-36
 10667  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
 10668  01168E  0EDD               	movlw	-35
 10669  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
 10670  011696  2ADE               	incf	postinc2,f,c
 10671  011698  0E00               	movlw	0
 10672  01169A  22DD               	addwfc	postdec2,f,c
 10673                           
 10674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10675                           ;stkvar	_ap @ sp[(-32)+-6]
 10676  01169C  0EDA               	movlw	-38
 10677  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10678  0116A4  0EDB               	movlw	-37
 10679  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10680  0116AC  0E02               	movlw	2
 10681  0116AE  5EDE               	subwf	postinc2,f,c
 10682  0116B0  0E00               	movlw	0
 10683  0116B2  5ADD               	subwfb	postdec2,f,c
 10684  0116B4  006F FF78  F00B    	movff	postinc2,btemp+10
 10685  0116BA  006F FF74  F00C    	movff	postdec2,btemp+11
 10686  0116C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10687  0116C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10688  0116CC  50DF               	movf	indf2,w,c
 10689  0116CE  6E0C               	movwf	(btemp+11)^0,c
 10690                           
 10691                           ;stkvar	_c @ sp[(-32)+31]
 10692  0116D0  0EFF               	movlw	-1
 10693  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10694                           
 10695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 10696                           ;stkvar	_c @ sp[(-32)+31]
 10697  0116D8  0EFF               	movlw	-1
 10698  0116DA  50E3               	movf	plusw1,w,c
 10699  0116DC  6EE6               	movwf	postinc1,c
 10700                           
 10701                           ;stkvar	_fp @ sp[(-33)+-2]
 10702  0116DE  0EDD               	movlw	-35
 10703  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10704  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10705  0116EC  EC74  F0CA         	call	_ctoa	;wreg free
 10706  0116F0  EFF3  F090         	goto	l2258
 10707  0116F4                     l11590:
 10708                           
 10709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 10710                           ;stkvar	_fmt @ sp[(-32)+-4]
 10711  0116F4  0EDC               	movlw	-36
 10712  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10713  0116FC  0EDD               	movlw	-35
 10714  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10715  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
 10716  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10717  011710                     	if	0	;tblptru may be non-zero
 10718  011710                     	endif
 10719  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10720  011710  0E00               	movlw	low (__mediumconst shr (0+16))
 10721  011712  6EF8               	movwf	tblptru,c
 10722  011714                     	endif
 10723  011714  0008               	tblrd		*
 10724  011716  50F5               	movf	tablat,w,c
 10725  011718  0A64               	xorlw	100
 10726  01171A  B4D8               	btfsc	status,2,c
 10727  01171C  D015               	goto	u11320
 10728                           
 10729                           ;stkvar	_fmt @ sp[(-32)+-4]
 10730  01171E  0EDC               	movlw	-36
 10731  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
 10732  011726  0EDD               	movlw	-35
 10733  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
 10734  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10735  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
 10736  01173A                     	if	0	;tblptru may be non-zero
 10737  01173A                     	endif
 10738  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10739  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
 10740  01173C  6EF8               	movwf	tblptru,c
 10741  01173E                     	endif
 10742  01173E  0008               	tblrd		*
 10743  011740  50F5               	movf	tablat,w,c
 10744  011742  0A69               	xorlw	105
 10745  011744  A4D8               	btfss	status,2,c
 10746  011746  D076               	goto	l11602
 10747  011748                     u11320:
 10748                           
 10749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 10750                           ;stkvar	_fmt @ sp[(-32)+-4]
 10751  011748  0EDC               	movlw	-36
 10752  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10753  011750  0EDD               	movlw	-35
 10754  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
 10755  011758  2ADE               	incf	postinc2,f,c
 10756  01175A  0E00               	movlw	0
 10757  01175C  22DD               	addwfc	postdec2,f,c
 10758                           
 10759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 10760                           ;stkvar	_ap @ sp[(-32)+-6]
 10761  01175E  0EDA               	movlw	-38
 10762  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
 10763  011766  0EDB               	movlw	-37
 10764  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
 10765  01176E  0E02               	movlw	2
 10766  011770  5EDE               	subwf	postinc2,f,c
 10767  011772  0E00               	movlw	0
 10768  011774  5ADD               	subwfb	postdec2,f,c
 10769  011776  006F FF78  F00B    	movff	postinc2,btemp+10
 10770  01177C  006F FF74  F00C    	movff	postdec2,btemp+11
 10771  011782  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10772  011788  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10773  01178E  006F FF78  F00B    	movff	postinc2,btemp+10
 10774  011794  006F FF74  F00C    	movff	postdec2,btemp+11
 10775                           
 10776                           ;stkvar	_ll @ sp[(-32)+14]
 10777  01179A  0EEE               	movlw	-18
 10778  01179C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10779  0117A2  0EEF               	movlw	-17
 10780  0117A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 10781  0117AA  6A01               	clrf	btemp^0,c
 10782  0117AC  BEE3               	btfsc	plusw1,7,c
 10783  0117AE  6801               	setf	btemp^0,c
 10784  0117B0  0EF0               	movlw	-16
 10785  0117B2  0060  F007  FFE3   	movff	btemp,plusw1
 10786  0117B8  0EF1               	movlw	-15
 10787  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
 10788  0117C0  0EF2               	movlw	-14
 10789  0117C2  0060  F007  FFE3   	movff	btemp,plusw1
 10790  0117C8  0EF3               	movlw	-13
 10791  0117CA  0060  F007  FFE3   	movff	btemp,plusw1
 10792  0117D0  0EF4               	movlw	-12
 10793  0117D2  0060  F007  FFE3   	movff	btemp,plusw1
 10794  0117D8  0EF5               	movlw	-11
 10795  0117DA  0060  F007  FFE3   	movff	btemp,plusw1
 10796  0117E0                     l11598:
 10797                           
 10798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 10799                           ;stkvar	_ll @ sp[(-32)+14]
 10800  0117E0  50E1               	movf	fsr1l,w,c
 10801  0117E2  0FEE               	addlw	-18
 10802  0117E4  6ED9               	movwf	fsr2l,c
 10803  0117E6  50E2               	movf	fsr1h,w,c
 10804  0117E8  6EDA               	movwf	fsr2h,c
 10805  0117EA  0EFF               	movlw	255
 10806  0117EC  22DA               	addwfc	fsr2h,f,c
 10807  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
 10808  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
 10809  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
 10810  011800  006F FF7B FFE6     	movff	postinc2,postinc1
 10811  011806  006F FF7B FFE6     	movff	postinc2,postinc1
 10812  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
 10813  011812  006F FF7B FFE6     	movff	postinc2,postinc1
 10814  011818  006F FF7B FFE6     	movff	postinc2,postinc1
 10815                           
 10816                           ;stkvar	_fp @ sp[(-40)+-2]
 10817  01181E  0ED6               	movlw	-42
 10818  011820  006F FF8F FFE6     	movff	plusw1,postinc1
 10819  011826  006F FF8F FFE6     	movff	plusw1,postinc1
 10820  01182C  ECF6  F0A5         	call	_dtoa	;wreg free
 10821  011830  EFF3  F090         	goto	l2258
 10822  011834                     l11602:
 10823                           
 10824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 10825  011834  0E02               	movlw	2
 10826  011836  6EE6               	movwf	postinc1,c
 10827  011838  0E00               	movlw	0
 10828  01183A  6EE6               	movwf	postinc1,c
 10829  01183C  0EE9               	movlw	low STR_56
 10830  01183E  6EE6               	movwf	postinc1,c
 10831  011840  0EFF               	movlw	high STR_56
 10832  011842  6EE6               	movwf	postinc1,c
 10833                           
 10834                           ;stkvar	_fmt @ sp[(-36)+-4]
 10835  011844  0ED8               	movlw	-40
 10836  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
 10837  01184C  0ED9               	movlw	-39
 10838  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10839  011854  006F FF78  F00B    	movff	postinc2,btemp+10
 10840  01185A  006F FF74  F00C    	movff	postdec2,btemp+11
 10841  011860  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10842  011866  0060  F033  FFE6   	movff	btemp+11,postinc1
 10843  01186C  ECA9  F0B5         	call	_strncmp	;wreg free
 10844  011870  5001               	movf	btemp^0,w,c
 10845  011872  1002               	iorwf	(btemp+1)^0,w,c
 10846  011874  B4D8               	btfsc	status,2,c
 10847  011876  D022               	goto	u11340
 10848  011878  0E02               	movlw	2
 10849  01187A  6EE6               	movwf	postinc1,c
 10850  01187C  0E00               	movlw	0
 10851  01187E  6EE6               	movwf	postinc1,c
 10852  011880  0EEF               	movlw	low STR_60
 10853  011882  6EE6               	movwf	postinc1,c
 10854  011884  0EFF               	movlw	high STR_60
 10855  011886  6EE6               	movwf	postinc1,c
 10856                           
 10857                           ;stkvar	_fmt @ sp[(-36)+-4]
 10858  011888  0ED8               	movlw	-40
 10859  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10860  011890  0ED9               	movlw	-39
 10861  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
 10862  011898  006F FF78  F00B    	movff	postinc2,btemp+10
 10863  01189E  006F FF74  F00C    	movff	postdec2,btemp+11
 10864  0118A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10865  0118AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10866  0118B0  ECA9  F0B5         	call	_strncmp	;wreg free
 10867  0118B4  5001               	movf	btemp^0,w,c
 10868  0118B6  1002               	iorwf	(btemp+1)^0,w,c
 10869  0118B8  A4D8               	btfss	status,2,c
 10870  0118BA  D069               	goto	l11614
 10871  0118BC                     u11340:
 10872                           
 10873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 10874                           ;stkvar	_fmt @ sp[(-32)+-4]
 10875  0118BC  0EDC               	movlw	-36
 10876  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10877  0118C4  0EDD               	movlw	-35
 10878  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10879  0118CC  0E02               	movlw	2
 10880  0118CE  26DE               	addwf	postinc2,f,c
 10881  0118D0  0E00               	movlw	0
 10882  0118D2  22DD               	addwfc	postdec2,f,c
 10883                           
 10884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 10885                           ;stkvar	_ap @ sp[(-32)+-6]
 10886  0118D4  0EDA               	movlw	-38
 10887  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10888  0118DC  0EDB               	movlw	-37
 10889  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10890  0118E4  0E04               	movlw	4
 10891  0118E6  5EDE               	subwf	postinc2,f,c
 10892  0118E8  0E00               	movlw	0
 10893  0118EA  5ADD               	subwfb	postdec2,f,c
 10894  0118EC  006F FF78  F00B    	movff	postinc2,btemp+10
 10895  0118F2  006F FF74  F00C    	movff	postdec2,btemp+11
 10896  0118F8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10897  0118FE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10898  011904  006F FF78  F009    	movff	postinc2,btemp+8
 10899  01190A  006F FF78  F00A    	movff	postinc2,btemp+9
 10900  011910  006F FF78  F00B    	movff	postinc2,btemp+10
 10901  011916  006F FF78  F00C    	movff	postinc2,btemp+11
 10902  01191C  0060  F024  F011   	movff	btemp+8,btemp+16
 10903  011922  0060  F028  F012   	movff	btemp+9,btemp+17
 10904  011928  0060  F02C  F013   	movff	btemp+10,btemp+18
 10905  01192E  0060  F030  F014   	movff	btemp+11,btemp+19
 10906  011934  6A15               	clrf	(btemp+20)^0,c
 10907  011936  BE14               	btfsc	(btemp+19)^0,7,c
 10908  011938  6815               	setf	(btemp+20)^0,c
 10909  01193A  0060  F054  F016   	movff	btemp+20,btemp+21
 10910  011940  0060  F054  F017   	movff	btemp+20,btemp+22
 10911  011946  0060  F054  F018   	movff	btemp+20,btemp+23
 10912                           
 10913                           ;stkvar	_ll @ sp[(-32)+14]
 10914  01194C  0EEE               	movlw	-18
 10915  01194E  0060  F047  FFE3   	movff	btemp+16,plusw1
 10916  011954  0EEF               	movlw	-17
 10917  011956  0060  F04B  FFE3   	movff	btemp+17,plusw1
 10918  01195C  0EF0               	movlw	-16
 10919  01195E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 10920  011964  0EF1               	movlw	-15
 10921  011966  0060  F053  FFE3   	movff	btemp+19,plusw1
 10922  01196C  0EF2               	movlw	-14
 10923  01196E  0060  F057  FFE3   	movff	btemp+20,plusw1
 10924  011974  0EF3               	movlw	-13
 10925  011976  0060  F05B  FFE3   	movff	btemp+21,plusw1
 10926  01197C  0EF4               	movlw	-12
 10927  01197E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 10928  011984  0EF5               	movlw	-11
 10929  011986  0060  F063  FFE3   	movff	btemp+23,plusw1
 10930  01198C  D729               	goto	l11598
 10931  01198E                     l11614:
 10932                           
 10933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 10934                           ;stkvar	_ct @ sp[(-32)+26]
 10935  01198E  0EFA               	movlw	-6
 10936  011990  006F FF8C  F001    	movff	plusw1,btemp
 10937  011996  0E66               	movlw	102
 10938  011998  1801               	xorwf	btemp^0,w,c
 10939  01199A  A4D8               	btfss	status,2,c
 10940  01199C  D06E               	goto	l11626
 10941                           
 10942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 10943                           ;stkvar	_fmt @ sp[(-32)+-4]
 10944  01199E  0EDC               	movlw	-36
 10945  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10946  0119A6  0EDD               	movlw	-35
 10947  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10948  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 10949  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 10950  0119BA                     	if	0	;tblptru may be non-zero
 10951  0119BA                     	endif
 10952  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10953  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
 10954  0119BC  6EF8               	movwf	tblptru,c
 10955  0119BE                     	endif
 10956                           
 10957                           ;stkvar	_c @ sp[(-32)+31]
 10958  0119BE  0008               	tblrd		*
 10959  0119C0  0EFF               	movlw	-1
 10960  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
 10961                           
 10962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 10963                           ;stkvar	_fmt @ sp[(-32)+-4]
 10964  0119C8  0EDC               	movlw	-36
 10965  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10966  0119D0  0EDD               	movlw	-35
 10967  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10968  0119D8  2ADE               	incf	postinc2,f,c
 10969  0119DA  0E00               	movlw	0
 10970  0119DC  22DD               	addwfc	postdec2,f,c
 10971                           
 10972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 10973                           ;stkvar	_ap @ sp[(-32)+-6]
 10974  0119DE  0EDA               	movlw	-38
 10975  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10976  0119E6  0EDB               	movlw	-37
 10977  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10978  0119EE  0E04               	movlw	4
 10979  0119F0  5EDE               	subwf	postinc2,f,c
 10980  0119F2  0E00               	movlw	0
 10981  0119F4  5ADD               	subwfb	postdec2,f,c
 10982  0119F6  006F FF78  F00B    	movff	postinc2,btemp+10
 10983  0119FC  006F FF74  F00C    	movff	postdec2,btemp+11
 10984  011A02  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10985  011A08  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10986  011A0E  006F FF78  F009    	movff	postinc2,btemp+8
 10987  011A14  006F FF78  F00A    	movff	postinc2,btemp+9
 10988  011A1A  006F FF78  F00B    	movff	postinc2,btemp+10
 10989  011A20  006F FF78  F00C    	movff	postinc2,btemp+11
 10990                           
 10991                           ;stkvar	_f @ sp[(-32)+22]
 10992  011A26  0EF6               	movlw	-10
 10993  011A28  0060  F027  FFE3   	movff	btemp+8,plusw1
 10994  011A2E  0EF7               	movlw	-9
 10995  011A30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10996  011A36  0EF8               	movlw	-8
 10997  011A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10998  011A3E  0EF9               	movlw	-7
 10999  011A40  0060  F033  FFE3   	movff	btemp+11,plusw1
 11000  011A46                     l11622:
 11001                           
 11002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 11003                           ;stkvar	_c @ sp[(-32)+31]
 11004  011A46  0EFF               	movlw	-1
 11005  011A48  50E3               	movf	plusw1,w,c
 11006  011A4A  6EE6               	movwf	postinc1,c
 11007                           
 11008                           ;stkvar	_f @ sp[(-33)+22]
 11009  011A4C  0EF5               	movlw	-11
 11010  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
 11011  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
 11012  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
 11013  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
 11014                           
 11015                           ;stkvar	_fp @ sp[(-37)+-2]
 11016  011A66  0ED9               	movlw	-39
 11017  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
 11018  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 11019  011A74  EC00  F080         	call	_efgtoa	;wreg free
 11020  011A78  D3B6               	goto	l2258
 11021  011A7A                     l11626:
 11022                           
 11023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 11024  011A7A  0E02               	movlw	2
 11025  011A7C  6EE6               	movwf	postinc1,c
 11026  011A7E  0E00               	movlw	0
 11027  011A80  6EE6               	movwf	postinc1,c
 11028  011A82  0EEC               	movlw	low STR_65
 11029  011A84  6EE6               	movwf	postinc1,c
 11030  011A86  0EFF               	movlw	high STR_65
 11031  011A88  6EE6               	movwf	postinc1,c
 11032                           
 11033                           ;stkvar	_ct @ sp[(-36)+26]
 11034  011A8A  0EF6               	movlw	246
 11035  011A8C  24E1               	addwf	fsr1l,w,c
 11036  011A8E  6E01               	movwf	btemp^0,c
 11037  011A90  0EFF               	movlw	255
 11038  011A92  20E2               	addwfc	fsr1h,w,c
 11039  011A94  6E02               	movwf	(btemp+1)^0,c
 11040  011A96  0060  F007  FFE6   	movff	btemp,postinc1
 11041  011A9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11042  011AA2  ECA9  F0B5         	call	_strncmp	;wreg free
 11043  011AA6  5001               	movf	btemp^0,w,c
 11044  011AA8  1002               	iorwf	(btemp+1)^0,w,c
 11045  011AAA  A4D8               	btfss	status,2,c
 11046  011AAC  D096               	goto	l11646
 11047                           
 11048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11049                           ;stkvar	_fmt @ sp[(-32)+-4]
 11050  011AAE  0EDC               	movlw	-36
 11051  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11052  011AB6  0EDD               	movlw	-35
 11053  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11054  011ABE  006F FF78  F00B    	movff	postinc2,btemp+10
 11055  011AC4  006F FF74  F00C    	movff	postdec2,btemp+11
 11056  011ACA  0E01               	movlw	1
 11057  011ACC  260B               	addwf	(btemp+10)^0,f,c
 11058  011ACE  0E00               	movlw	0
 11059  011AD0  220C               	addwfc	(btemp+11)^0,f,c
 11060  011AD2  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11061  011AD8  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11062  011ADE                     	if	0	;tblptru may be non-zero
 11063  011ADE                     	endif
 11064  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11065  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
 11066  011AE0  6EF8               	movwf	tblptru,c
 11067  011AE2                     	endif
 11068                           
 11069                           ;stkvar	_c @ sp[(-32)+31]
 11070  011AE2  0008               	tblrd		*
 11071  011AE4  0EFF               	movlw	-1
 11072  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
 11073  011AEC  0EBF               	movlw	191
 11074  011AEE  6E0B               	movwf	(btemp+10)^0,c
 11075  011AF0  0EFF               	movlw	255
 11076  011AF2  6E0C               	movwf	(btemp+11)^0,c
 11077                           
 11078                           ;stkvar	_fmt @ sp[(-32)+-4]
 11079  011AF4  0EDC               	movlw	-36
 11080  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11081  011AFC  0EDD               	movlw	-35
 11082  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11083  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
 11084  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11085  011B10                     	if	0	;tblptru may be non-zero
 11086  011B10                     	endif
 11087  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11088  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
 11089  011B12  6EF8               	movwf	tblptru,c
 11090  011B14                     	endif
 11091  011B14  0008               	tblrd		*
 11092  011B16  50F5               	movf	tablat,w,c
 11093  011B18  6E09               	movwf	(btemp+8)^0,c
 11094  011B1A  6A0A               	clrf	(btemp+9)^0,c
 11095  011B1C  500B               	movf	(btemp+10)^0,w,c
 11096  011B1E  2609               	addwf	(btemp+8)^0,f,c
 11097  011B20  500C               	movf	(btemp+11)^0,w,c
 11098  011B22  220A               	addwfc	(btemp+9)^0,f,c
 11099  011B24  500A               	movf	(btemp+9)^0,w,c
 11100  011B26  E106               	bnz	u11370
 11101  011B28  0E1A               	movlw	26
 11102  011B2A  5C09               	subwf	(btemp+8)^0,w,c
 11103  011B2C  B0D8               	btfsc	status,0,c
 11104  011B2E  D002               	goto	u11370
 11105  011B30  0E01               	movlw	1
 11106  011B32  D001               	goto	u11380
 11107  011B34                     u11370:
 11108  011B34  0E00               	movlw	0
 11109  011B36                     u11380:
 11110  011B36  6E0B               	movwf	(btemp+10)^0,c
 11111  011B38  6A0C               	clrf	(btemp+11)^0,c
 11112                           
 11113                           ;stkvar	_vfpfcnvrt$5281 @ sp[(-32)+2]
 11114  011B3A  0EE2               	movlw	-30
 11115  011B3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11116  011B42  0EE3               	movlw	-29
 11117  011B44  0060  F033  FFE3   	movff	btemp+11,plusw1
 11118                           
 11119                           ;stkvar	_vfpfcnvrt$5281 @ sp[(-32)+2]
 11120  011B4A  0EE2               	movlw	-30
 11121  011B4C  006F FF8C  F001    	movff	plusw1,btemp
 11122  011B52  0EE3               	movlw	-29
 11123  011B54  50E3               	movf	plusw1,w,c
 11124  011B56  1001               	iorwf	btemp^0,w,c
 11125                           
 11126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 11127                           ;stkvar	_ap @ sp[(-32)+-6]
 11128                           
 11129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 11130                           
 11131                           ;stkvar	_f @ sp[(-32)+22]
 11132                           
 11133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 11134                           ;stkvar	_ap @ sp[(-32)+-6]
 11135  011B58  0EDA               	movlw	-38
 11136  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11137  011B60  0EDB               	movlw	-37
 11138  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
 11139  011B68  0E04               	movlw	4
 11140  011B6A  5EDE               	subwf	postinc2,f,c
 11141  011B6C  0E00               	movlw	0
 11142  011B6E  5ADD               	subwfb	postdec2,f,c
 11143  011B70  006F FF78  F00B    	movff	postinc2,btemp+10
 11144  011B76  006F FF74  F00C    	movff	postdec2,btemp+11
 11145  011B7C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11146  011B82  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11147  011B88  006F FF78  F009    	movff	postinc2,btemp+8
 11148  011B8E  006F FF78  F00A    	movff	postinc2,btemp+9
 11149  011B94  006F FF78  F00B    	movff	postinc2,btemp+10
 11150  011B9A  006F FF78  F00C    	movff	postinc2,btemp+11
 11151                           
 11152                           ;stkvar	_f @ sp[(-32)+22]
 11153  011BA0  0EF6               	movlw	-10
 11154  011BA2  0060  F027  FFE3   	movff	btemp+8,plusw1
 11155  011BA8  0EF7               	movlw	-9
 11156  011BAA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11157  011BB0  0EF8               	movlw	-8
 11158  011BB2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11159  011BB8  0EF9               	movlw	-7
 11160  011BBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 11161                           
 11162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 11163                           ;stkvar	_fmt @ sp[(-32)+-4]
 11164  011BC0  0EDC               	movlw	-36
 11165  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11166  011BC8  0EDD               	movlw	-35
 11167  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11168  011BD0  0E02               	movlw	2
 11169  011BD2  26DE               	addwf	postinc2,f,c
 11170  011BD4  0E00               	movlw	0
 11171  011BD6  22DD               	addwfc	postdec2,f,c
 11172  011BD8  D736               	goto	l11622
 11173  011BDA                     l11646:
 11174                           
 11175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 11176                           ;stkvar	_fmt @ sp[(-32)+-4]
 11177  011BDA  0EDC               	movlw	-36
 11178  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11179  011BE2  0EDD               	movlw	-35
 11180  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11181  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11182  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11183  011BF6                     	if	0	;tblptru may be non-zero
 11184  011BF6                     	endif
 11185  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11186  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 11187  011BF8  6EF8               	movwf	tblptru,c
 11188  011BFA                     	endif
 11189  011BFA  0008               	tblrd		*
 11190  011BFC  50F5               	movf	tablat,w,c
 11191  011BFE  0A73               	xorlw	115
 11192  011C00  A4D8               	btfss	status,2,c
 11193  011C02  D042               	goto	l11656
 11194                           
 11195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 11196                           ;stkvar	_fmt @ sp[(-32)+-4]
 11197  011C04  0EDC               	movlw	-36
 11198  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
 11199  011C0C  0EDD               	movlw	-35
 11200  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11201  011C14  2ADE               	incf	postinc2,f,c
 11202  011C16  0E00               	movlw	0
 11203  011C18  22DD               	addwfc	postdec2,f,c
 11204                           
 11205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 11206                           ;stkvar	_ap @ sp[(-32)+-6]
 11207  011C1A  0EDA               	movlw	-38
 11208  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11209  011C22  0EDB               	movlw	-37
 11210  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
 11211  011C2A  0E02               	movlw	2
 11212  011C2C  5EDE               	subwf	postinc2,f,c
 11213  011C2E  0E00               	movlw	0
 11214  011C30  5ADD               	subwfb	postdec2,f,c
 11215  011C32  006F FF78  F00B    	movff	postinc2,btemp+10
 11216  011C38  006F FF74  F00C    	movff	postdec2,btemp+11
 11217  011C3E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11218  011C44  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11219  011C4A  006F FF78  F00B    	movff	postinc2,btemp+10
 11220  011C50  006F FF74  F00C    	movff	postdec2,btemp+11
 11221                           
 11222                           ;stkvar	_cp @ sp[(-32)+29]
 11223  011C56  0EFE               	movlw	-2
 11224  011C58  0060  F033  FFE3   	movff	btemp+11,plusw1
 11225  011C5E  0EFD               	movlw	-3
 11226  011C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11227                           
 11228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 11229                           ;stkvar	_cp @ sp[(-32)+29]
 11230  011C66  0EFD               	movlw	-3
 11231  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
 11232  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
 11233                           
 11234                           ;stkvar	_fp @ sp[(-34)+-2]
 11235  011C74  0EDC               	movlw	-36
 11236  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 11237  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 11238  011C82  ECB0  F0B0         	call	_stoa	;wreg free
 11239  011C86  D2AF               	goto	l2258
 11240  011C88                     l11656:
 11241                           
 11242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 11243                           ;stkvar	_fmt @ sp[(-32)+-4]
 11244  011C88  0EDC               	movlw	-36
 11245  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11246  011C90  0EDD               	movlw	-35
 11247  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
 11248  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
 11249  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11250  011CA4                     	if	0	;tblptru may be non-zero
 11251  011CA4                     	endif
 11252  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11253  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
 11254  011CA6  6EF8               	movwf	tblptru,c
 11255  011CA8                     	endif
 11256  011CA8  0008               	tblrd		*
 11257  011CAA  50F5               	movf	tablat,w,c
 11258  011CAC  0A75               	xorlw	117
 11259  011CAE  A4D8               	btfss	status,2,c
 11260  011CB0  D07C               	goto	l11666
 11261                           
 11262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 11263                           ;stkvar	_fmt @ sp[(-32)+-4]
 11264  011CB2  0EDC               	movlw	-36
 11265  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11266  011CBA  0EDD               	movlw	-35
 11267  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11268  011CC2  2ADE               	incf	postinc2,f,c
 11269  011CC4  0E00               	movlw	0
 11270  011CC6  22DD               	addwfc	postdec2,f,c
 11271                           
 11272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11273                           ;stkvar	_ap @ sp[(-32)+-6]
 11274  011CC8  0EDA               	movlw	-38
 11275  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11276  011CD0  0EDB               	movlw	-37
 11277  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11278  011CD8  0E02               	movlw	2
 11279  011CDA  5EDE               	subwf	postinc2,f,c
 11280  011CDC  0E00               	movlw	0
 11281  011CDE  5ADD               	subwfb	postdec2,f,c
 11282  011CE0  006F FF78  F00B    	movff	postinc2,btemp+10
 11283  011CE6  006F FF74  F00C    	movff	postdec2,btemp+11
 11284  011CEC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11285  011CF2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11286  011CF8  006F FF78  F00B    	movff	postinc2,btemp+10
 11287  011CFE  006F FF74  F00C    	movff	postdec2,btemp+11
 11288  011D04  500B               	movf	(btemp+10)^0,w,c
 11289  011D06  6E11               	movwf	(btemp+16)^0,c
 11290  011D08  500C               	movf	(btemp+11)^0,w,c
 11291  011D0A  6E12               	movwf	(btemp+17)^0,c
 11292  011D0C  6A13               	clrf	(btemp+18)^0,c
 11293  011D0E  6A14               	clrf	(btemp+19)^0,c
 11294  011D10  6A15               	clrf	(btemp+20)^0,c
 11295  011D12  6A16               	clrf	(btemp+21)^0,c
 11296  011D14  6A17               	clrf	(btemp+22)^0,c
 11297  011D16  6A18               	clrf	(btemp+23)^0,c
 11298                           
 11299                           ;stkvar	_llu @ sp[(-32)+6]
 11300  011D18  0EE6               	movlw	-26
 11301  011D1A  0060  F047  FFE3   	movff	btemp+16,plusw1
 11302  011D20  0EE7               	movlw	-25
 11303  011D22  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11304  011D28  0EE8               	movlw	-24
 11305  011D2A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11306  011D30  0EE9               	movlw	-23
 11307  011D32  0060  F053  FFE3   	movff	btemp+19,plusw1
 11308  011D38  0EEA               	movlw	-22
 11309  011D3A  0060  F057  FFE3   	movff	btemp+20,plusw1
 11310  011D40  0EEB               	movlw	-21
 11311  011D42  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11312  011D48  0EEC               	movlw	-20
 11313  011D4A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11314  011D50  0EED               	movlw	-19
 11315  011D52  0060  F063  FFE3   	movff	btemp+23,plusw1
 11316                           
 11317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 11318                           ;stkvar	_llu @ sp[(-32)+6]
 11319  011D58  50E1               	movf	fsr1l,w,c
 11320  011D5A  0FE6               	addlw	-26
 11321  011D5C  6ED9               	movwf	fsr2l,c
 11322  011D5E  50E2               	movf	fsr1h,w,c
 11323  011D60  6EDA               	movwf	fsr2h,c
 11324  011D62  0EFF               	movlw	255
 11325  011D64  22DA               	addwfc	fsr2h,f,c
 11326  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
 11327  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
 11328  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
 11329  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
 11330  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 11331  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
 11332  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 11333  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
 11334                           
 11335                           ;stkvar	_fp @ sp[(-40)+-2]
 11336  011D96  0ED6               	movlw	-42
 11337  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11338  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11339  011DA4  EC9A  F0AD         	call	_utoa	;wreg free
 11340  011DA8  D21E               	goto	l2258
 11341  011DAA                     l11666:
 11342                           
 11343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 11344  011DAA  0E02               	movlw	2
 11345  011DAC  6EE6               	movwf	postinc1,c
 11346  011DAE  0E00               	movlw	0
 11347  011DB0  6EE6               	movwf	postinc1,c
 11348  011DB2  0EF2               	movlw	low STR_70
 11349  011DB4  6EE6               	movwf	postinc1,c
 11350  011DB6  0EFF               	movlw	high STR_70
 11351  011DB8  6EE6               	movwf	postinc1,c
 11352                           
 11353                           ;stkvar	_fmt @ sp[(-36)+-4]
 11354  011DBA  0ED8               	movlw	-40
 11355  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11356  011DC2  0ED9               	movlw	-39
 11357  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11358  011DCA  006F FF78  F00B    	movff	postinc2,btemp+10
 11359  011DD0  006F FF74  F00C    	movff	postdec2,btemp+11
 11360  011DD6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11361  011DDC  0060  F033  FFE6   	movff	btemp+11,postinc1
 11362  011DE2  ECA9  F0B5         	call	_strncmp	;wreg free
 11363  011DE6  5001               	movf	btemp^0,w,c
 11364  011DE8  1002               	iorwf	(btemp+1)^0,w,c
 11365  011DEA  A4D8               	btfss	status,2,c
 11366  011DEC  D039               	goto	l11676
 11367                           
 11368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 11369                           ;stkvar	_fmt @ sp[(-32)+-4]
 11370  011DEE  0EDC               	movlw	-36
 11371  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11372  011DF6  0EDD               	movlw	-35
 11373  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11374  011DFE  0E02               	movlw	2
 11375  011E00  26DE               	addwf	postinc2,f,c
 11376  011E02  0E00               	movlw	0
 11377  011E04  22DD               	addwfc	postdec2,f,c
 11378                           
 11379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11380                           ;stkvar	_ap @ sp[(-32)+-6]
 11381  011E06  0EDA               	movlw	-38
 11382  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
 11383  011E0E  0EDB               	movlw	-37
 11384  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
 11385  011E16  0E04               	movlw	4
 11386  011E18  5EDE               	subwf	postinc2,f,c
 11387  011E1A  0E00               	movlw	0
 11388  011E1C  5ADD               	subwfb	postdec2,f,c
 11389  011E1E  006F FF78  F00B    	movff	postinc2,btemp+10
 11390  011E24  006F FF74  F00C    	movff	postdec2,btemp+11
 11391  011E2A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11392  011E30  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11393  011E36  006F FF78  F009    	movff	postinc2,btemp+8
 11394  011E3C  006F FF78  F00A    	movff	postinc2,btemp+9
 11395  011E42  006F FF78  F00B    	movff	postinc2,btemp+10
 11396  011E48  006F FF78  F00C    	movff	postinc2,btemp+11
 11397  011E4E  5009               	movf	(btemp+8)^0,w,c
 11398  011E50  6E11               	movwf	(btemp+16)^0,c
 11399  011E52  500A               	movf	(btemp+9)^0,w,c
 11400  011E54  6E12               	movwf	(btemp+17)^0,c
 11401  011E56  500B               	movf	(btemp+10)^0,w,c
 11402  011E58  6E13               	movwf	(btemp+18)^0,c
 11403  011E5A  500C               	movf	(btemp+11)^0,w,c
 11404  011E5C  6E14               	movwf	(btemp+19)^0,c
 11405  011E5E  D758               	goto	L7
 11406  011E60                     l11676:
 11407                           
 11408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 11409                           ;stkvar	_fmt @ sp[(-32)+-4]
 11410  011E60  0EDC               	movlw	-36
 11411  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
 11412  011E68  0EDD               	movlw	-35
 11413  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11414  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
 11415  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
 11416  011E7C                     	if	0	;tblptru may be non-zero
 11417  011E7C                     	endif
 11418  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11419  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
 11420  011E7E  6EF8               	movwf	tblptru,c
 11421  011E80                     	endif
 11422  011E80  0008               	tblrd		*
 11423  011E82  50F5               	movf	tablat,w,c
 11424  011E84  0A78               	xorlw	120
 11425  011E86  B4D8               	btfsc	status,2,c
 11426  011E88  D015               	goto	u11440
 11427                           
 11428                           ;stkvar	_fmt @ sp[(-32)+-4]
 11429  011E8A  0EDC               	movlw	-36
 11430  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11431  011E92  0EDD               	movlw	-35
 11432  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
 11433  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11434  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11435  011EA6                     	if	0	;tblptru may be non-zero
 11436  011EA6                     	endif
 11437  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11438  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
 11439  011EA8  6EF8               	movwf	tblptru,c
 11440  011EAA                     	endif
 11441  011EAA  0008               	tblrd		*
 11442  011EAC  50F5               	movf	tablat,w,c
 11443  011EAE  0A58               	xorlw	88
 11444  011EB0  A4D8               	btfss	status,2,c
 11445  011EB2  D094               	goto	l11690
 11446  011EB4                     u11440:
 11447                           
 11448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 11449                           ;stkvar	_fmt @ sp[(-32)+-4]
 11450  011EB4  0EDC               	movlw	-36
 11451  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11452  011EBC  0EDD               	movlw	-35
 11453  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11454  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 11455  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
 11456  011ED0                     	if	0	;tblptru may be non-zero
 11457  011ED0                     	endif
 11458  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11459  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
 11460  011ED2  6EF8               	movwf	tblptru,c
 11461  011ED4                     	endif
 11462                           
 11463                           ;stkvar	_c @ sp[(-32)+31]
 11464  011ED4  0008               	tblrd		*
 11465  011ED6  0EFF               	movlw	-1
 11466  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
 11467                           
 11468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 11469                           ;stkvar	_fmt @ sp[(-32)+-4]
 11470  011EDE  0EDC               	movlw	-36
 11471  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11472  011EE6  0EDD               	movlw	-35
 11473  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11474  011EEE  2ADE               	incf	postinc2,f,c
 11475  011EF0  0E00               	movlw	0
 11476  011EF2  22DD               	addwfc	postdec2,f,c
 11477                           
 11478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11479                           ;stkvar	_ap @ sp[(-32)+-6]
 11480  011EF4  0EDA               	movlw	-38
 11481  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11482  011EFC  0EDB               	movlw	-37
 11483  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11484  011F04  0E02               	movlw	2
 11485  011F06  5EDE               	subwf	postinc2,f,c
 11486  011F08  0E00               	movlw	0
 11487  011F0A  5ADD               	subwfb	postdec2,f,c
 11488  011F0C  006F FF78  F00B    	movff	postinc2,btemp+10
 11489  011F12  006F FF74  F00C    	movff	postdec2,btemp+11
 11490  011F18  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11491  011F1E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11492  011F24  006F FF78  F00B    	movff	postinc2,btemp+10
 11493  011F2A  006F FF74  F00C    	movff	postdec2,btemp+11
 11494  011F30  500B               	movf	(btemp+10)^0,w,c
 11495  011F32  6E11               	movwf	(btemp+16)^0,c
 11496  011F34  500C               	movf	(btemp+11)^0,w,c
 11497  011F36  6E12               	movwf	(btemp+17)^0,c
 11498  011F38  6A13               	clrf	(btemp+18)^0,c
 11499  011F3A  6A14               	clrf	(btemp+19)^0,c
 11500  011F3C  6A15               	clrf	(btemp+20)^0,c
 11501  011F3E  6A16               	clrf	(btemp+21)^0,c
 11502  011F40  6A17               	clrf	(btemp+22)^0,c
 11503  011F42  6A18               	clrf	(btemp+23)^0,c
 11504                           
 11505                           ;stkvar	_llu @ sp[(-32)+6]
 11506  011F44  0EE6               	movlw	-26
 11507  011F46  0060  F047  FFE3   	movff	btemp+16,plusw1
 11508  011F4C  0EE7               	movlw	-25
 11509  011F4E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11510  011F54  0EE8               	movlw	-24
 11511  011F56  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11512  011F5C  0EE9               	movlw	-23
 11513  011F5E  0060  F053  FFE3   	movff	btemp+19,plusw1
 11514  011F64  0EEA               	movlw	-22
 11515  011F66  0060  F057  FFE3   	movff	btemp+20,plusw1
 11516  011F6C  0EEB               	movlw	-21
 11517  011F6E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11518  011F74  0EEC               	movlw	-20
 11519  011F76  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11520  011F7C  0EED               	movlw	-19
 11521  011F7E  0060  F063  FFE3   	movff	btemp+23,plusw1
 11522                           
 11523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 11524                           ;stkvar	_c @ sp[(-32)+31]
 11525  011F84  0EFF               	movlw	-1
 11526  011F86  50E3               	movf	plusw1,w,c
 11527  011F88  6EE6               	movwf	postinc1,c
 11528                           
 11529                           ;stkvar	_llu @ sp[(-33)+6]
 11530  011F8A  50E1               	movf	fsr1l,w,c
 11531  011F8C  0FE5               	addlw	-27
 11532  011F8E  6ED9               	movwf	fsr2l,c
 11533  011F90  50E2               	movf	fsr1h,w,c
 11534  011F92  6EDA               	movwf	fsr2h,c
 11535  011F94  0EFF               	movlw	255
 11536  011F96  22DA               	addwfc	fsr2h,f,c
 11537  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
 11538  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
 11539  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
 11540  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
 11541  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
 11542  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 11543  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 11544  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 11545                           
 11546                           ;stkvar	_fp @ sp[(-41)+-2]
 11547  011FC8  0ED5               	movlw	-43
 11548  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
 11549  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
 11550  011FD6  EC36  F0A8         	call	_xtoa	;wreg free
 11551  011FDA  D105               	goto	l2258
 11552  011FDC                     l11690:
 11553                           
 11554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 11555  011FDC  0E02               	movlw	2
 11556  011FDE  6EE6               	movwf	postinc1,c
 11557  011FE0  0E00               	movlw	0
 11558  011FE2  6EE6               	movwf	postinc1,c
 11559  011FE4  0EF5               	movlw	low STR_75
 11560  011FE6  6EE6               	movwf	postinc1,c
 11561  011FE8  0EFF               	movlw	high STR_75
 11562  011FEA  6EE6               	movwf	postinc1,c
 11563                           
 11564                           ;stkvar	_fmt @ sp[(-36)+-4]
 11565  011FEC  0ED8               	movlw	-40
 11566  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11567  011FF4  0ED9               	movlw	-39
 11568  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11569  011FFC  006F FF78  F00B    	movff	postinc2,btemp+10
 11570  012002  006F FF74  F00C    	movff	postdec2,btemp+11
 11571  012008  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11572  01200E  0060  F033  FFE6   	movff	btemp+11,postinc1
 11573  012014  ECA9  F0B5         	call	_strncmp	;wreg free
 11574  012018  5001               	movf	btemp^0,w,c
 11575  01201A  1002               	iorwf	(btemp+1)^0,w,c
 11576  01201C  B4D8               	btfsc	status,2,c
 11577  01201E  D022               	goto	u11460
 11578  012020  0E02               	movlw	2
 11579  012022  6EE6               	movwf	postinc1,c
 11580  012024  0E00               	movlw	0
 11581  012026  6EE6               	movwf	postinc1,c
 11582  012028  0EE6               	movlw	low STR_79
 11583  01202A  6EE6               	movwf	postinc1,c
 11584  01202C  0EFF               	movlw	high STR_79
 11585  01202E  6EE6               	movwf	postinc1,c
 11586                           
 11587                           ;stkvar	_fmt @ sp[(-36)+-4]
 11588  012030  0ED8               	movlw	-40
 11589  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
 11590  012038  0ED9               	movlw	-39
 11591  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11592  012040  006F FF78  F00B    	movff	postinc2,btemp+10
 11593  012046  006F FF74  F00C    	movff	postdec2,btemp+11
 11594  01204C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11595  012052  0060  F033  FFE6   	movff	btemp+11,postinc1
 11596  012058  ECA9  F0B5         	call	_strncmp	;wreg free
 11597  01205C  5001               	movf	btemp^0,w,c
 11598  01205E  1002               	iorwf	(btemp+1)^0,w,c
 11599  012060  A4D8               	btfss	status,2,c
 11600  012062  D058               	goto	l11704
 11601  012064                     u11460:
 11602                           
 11603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 11604                           ;stkvar	_fmt @ sp[(-32)+-4]
 11605  012064  0EDC               	movlw	-36
 11606  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
 11607  01206C  0EDD               	movlw	-35
 11608  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11609  012074  006F FF78  F00B    	movff	postinc2,btemp+10
 11610  01207A  006F FF74  F00C    	movff	postdec2,btemp+11
 11611  012080  0E01               	movlw	1
 11612  012082  260B               	addwf	(btemp+10)^0,f,c
 11613  012084  0E00               	movlw	0
 11614  012086  220C               	addwfc	(btemp+11)^0,f,c
 11615  012088  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11616  01208E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11617  012094                     	if	0	;tblptru may be non-zero
 11618  012094                     	endif
 11619  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11620  012094  0E00               	movlw	low (__mediumconst shr (0+16))
 11621  012096  6EF8               	movwf	tblptru,c
 11622  012098                     	endif
 11623                           
 11624                           ;stkvar	_c @ sp[(-32)+31]
 11625  012098  0008               	tblrd		*
 11626  01209A  0EFF               	movlw	-1
 11627  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
 11628                           
 11629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 11630                           ;stkvar	_fmt @ sp[(-32)+-4]
 11631  0120A2  0EDC               	movlw	-36
 11632  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11633  0120AA  0EDD               	movlw	-35
 11634  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11635  0120B2  0E02               	movlw	2
 11636  0120B4  26DE               	addwf	postinc2,f,c
 11637  0120B6  0E00               	movlw	0
 11638  0120B8  22DD               	addwfc	postdec2,f,c
 11639                           
 11640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11641                           ;stkvar	_ap @ sp[(-32)+-6]
 11642  0120BA  0EDA               	movlw	-38
 11643  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11644  0120C2  0EDB               	movlw	-37
 11645  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11646  0120CA  0E04               	movlw	4
 11647  0120CC  5EDE               	subwf	postinc2,f,c
 11648  0120CE  0E00               	movlw	0
 11649  0120D0  5ADD               	subwfb	postdec2,f,c
 11650  0120D2  006F FF78  F00B    	movff	postinc2,btemp+10
 11651  0120D8  006F FF74  F00C    	movff	postdec2,btemp+11
 11652  0120DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11653  0120E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11654  0120EA  006F FF78  F009    	movff	postinc2,btemp+8
 11655  0120F0  006F FF78  F00A    	movff	postinc2,btemp+9
 11656  0120F6  006F FF78  F00B    	movff	postinc2,btemp+10
 11657  0120FC  006F FF78  F00C    	movff	postinc2,btemp+11
 11658  012102  5009               	movf	(btemp+8)^0,w,c
 11659  012104  6E11               	movwf	(btemp+16)^0,c
 11660  012106  500A               	movf	(btemp+9)^0,w,c
 11661  012108  6E12               	movwf	(btemp+17)^0,c
 11662  01210A  500B               	movf	(btemp+10)^0,w,c
 11663  01210C  6E13               	movwf	(btemp+18)^0,c
 11664  01210E  500C               	movf	(btemp+11)^0,w,c
 11665  012110  6E14               	movwf	(btemp+19)^0,c
 11666  012112  D714               	goto	L8
 11667  012114                     l11704:
 11668                           
 11669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 11670                           ;stkvar	_fmt @ sp[(-32)+-4]
 11671  012114  0EDC               	movlw	-36
 11672  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
 11673  01211C  0EDD               	movlw	-35
 11674  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11675  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
 11676  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11677  012130                     	if	0	;tblptru may be non-zero
 11678  012130                     	endif
 11679  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11680  012130  0E00               	movlw	low (__mediumconst shr (0+16))
 11681  012132  6EF8               	movwf	tblptru,c
 11682  012134                     	endif
 11683  012134  0008               	tblrd		*
 11684  012136  50F5               	movf	tablat,w,c
 11685  012138  0A25               	xorlw	37
 11686  01213A  A4D8               	btfss	status,2,c
 11687  01213C  D01A               	goto	l11714
 11688                           
 11689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 11690                           ;stkvar	_fmt @ sp[(-32)+-4]
 11691  01213E  0EDC               	movlw	-36
 11692  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
 11693  012146  0EDD               	movlw	-35
 11694  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
 11695  01214E  2ADE               	incf	postinc2,f,c
 11696  012150  0E00               	movlw	0
 11697  012152  22DD               	addwfc	postdec2,f,c
 11698                           
 11699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 11700                           ;stkvar	_fp @ sp[(-32)+-2]
 11701  012154  0EDE               	movlw	-34
 11702  012156  006F FF8F FFE6     	movff	plusw1,postinc1
 11703  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
 11704  012162  0E25               	movlw	37
 11705  012164  6EE6               	movwf	postinc1,c
 11706  012166  0E00               	movlw	0
 11707  012168  6EE6               	movwf	postinc1,c
 11708  01216A  EC15  F0C2         	call	_fputc	;wreg free
 11709  01216E                     l11710:
 11710                           
 11711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 11712  01216E  0E01               	movlw	1
 11713  012170  D00C               	goto	L9
 11714  012172                     l11714:
 11715                           
 11716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 11717                           ;stkvar	_fmt @ sp[(-32)+-4]
 11718  012172  0EDC               	movlw	-36
 11719  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
 11720  01217A  0EDD               	movlw	-35
 11721  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11722  012182  2ADE               	incf	postinc2,f,c
 11723  012184  0E00               	movlw	0
 11724  012186  22DD               	addwfc	postdec2,f,c
 11725                           
 11726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 11727  012188  0E00               	movlw	0
 11728  01218A                     L9:
 11729  01218A  6E01               	movwf	btemp^0,c
 11730  01218C  0E00               	movlw	0
 11731  01218E  6E02               	movwf	(btemp+1)^0,c
 11732  012190  D02A               	goto	l2258
 11733  012192                     l11720:
 11734                           
 11735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 11736                           ;stkvar	_fp @ sp[(-32)+-2]
 11737  012192  0EDE               	movlw	-34
 11738  012194  006F FF8F FFE6     	movff	plusw1,postinc1
 11739  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
 11740                           
 11741                           ;stkvar	_fmt @ sp[(-34)+-4]
 11742  0121A0  0EDA               	movlw	-38
 11743  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11744  0121A8  0EDB               	movlw	-37
 11745  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11746  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 11747  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 11748  0121BC                     	if	0	;tblptru may be non-zero
 11749  0121BC                     	endif
 11750  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11751  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
 11752  0121BE  6EF8               	movwf	tblptru,c
 11753  0121C0                     	endif
 11754  0121C0  0008               	tblrd		*
 11755  0121C2  50F5               	movf	tablat,w,c
 11756  0121C4  6EE6               	movwf	postinc1,c
 11757  0121C6  0E00               	movlw	0
 11758  0121C8  6EE6               	movwf	postinc1,c
 11759  0121CA  EC15  F0C2         	call	_fputc	;wreg free
 11760                           
 11761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 11762                           ;stkvar	_fmt @ sp[(-32)+-4]
 11763  0121CE  0EDC               	movlw	-36
 11764  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11765  0121D6  0EDD               	movlw	-35
 11766  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11767  0121DE  2ADE               	incf	postinc2,f,c
 11768  0121E0  0E00               	movlw	0
 11769  0121E2  22DD               	addwfc	postdec2,f,c
 11770  0121E4  D7C4               	goto	l11710
 11771  0121E6                     l2258:
 11772                           
 11773                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 11774  0121E6  0EDA               	movlw	218
 11775  0121E8  26E1               	addwf	fsr1l,f,c
 11776  0121EA  0EFF               	movlw	255
 11777  0121EC  22E2               	addwfc	fsr1h,f,c
 11778  0121EE  0012               	return		;funcret
 11779  0121F0                     __end_of_vfpfcnvrt:
 11780                           	opt callstack 0
 11781                           
 11782 ;; *************** function _xtoa *****************
 11783 ;; Defined at:
 11784 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11787 ;;		 -> f(6), NULL(0), 
 11788 ;;  d               8  [STACK] unsigned long long 
 11789 ;;  x               1  [STACK] unsigned char 
 11790 ;; Auto vars:     Size  Location     Type
 11791 ;;  n               8  [STACK] unsigned long long 
 11792 ;;  c               2  [STACK] int 
 11793 ;;  i               2  [STACK] int 
 11794 ;;  w               2  [STACK] int 
 11795 ;;  p               2  [STACK] int 
 11796 ;; Return value:  Size  Location     Type
 11797 ;;                  2  [STACK] int 
 11798 ;; Registers used:
 11799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11800 ;; Tracked objects:
 11801 ;;		On entry : 0/0
 11802 ;;		On exit  : 0/0
 11803 ;;		Unchanged: 0/0
 11804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11809 ;;Total ram usage:        0 bytes
 11810 ;; Hardware stack levels used:    1
 11811 ;; Hardware stack levels required when called:   20
 11812 ;; This function calls:
 11813 ;;		_isalpha
 11814 ;;		_isupper
 11815 ;;		_pad
 11816 ;;		_toupper
 11817 ;; This function is called by:
 11818 ;;		_vfpfcnvrt
 11819 ;; This function uses a reentrant model
 11820 ;;
 11821                           
 11822                           	psect	text46
 11823  01506C                     __ptext46:
 11824                           	opt callstack 0
 11825  01506C                     _xtoa:
 11826                           	opt callstack 0
 11827                           
 11828                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11829  01506C  0E14               	movlw	20
 11830  01506E  26E1               	addwf	fsr1l,f,c
 11831  015070  0E00               	movlw	0
 11832  015072  22E2               	addwfc	fsr1h,f,c
 11833                           
 11834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 11835                           
 11836                           ;incstack = 0
 11837 ;; hardware stack exceeded
 11838  015074  AE24               	btfss	(_prec+1)^0,7,c
 11839                           
 11840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 11841  015076  9225               	bcf	_flags^0,1,c
 11842                           
 11843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 11844  015078  BE24               	btfsc	(_prec+1)^0,7,c
 11845  01507A  D005               	goto	u10990
 11846  01507C  5024               	movf	(_prec+1)^0,w,c
 11847  01507E  E110               	bnz	l11444
 11848  015080  0423               	decf	_prec^0,w,c
 11849  015082  B0D8               	btfsc	status,0,c
 11850  015084  D00D               	goto	l11444
 11851  015086                     u10990:
 11852  015086  0E01               	movlw	1
 11853  015088  6E0B               	movwf	(btemp+10)^0,c
 11854  01508A  0E00               	movlw	0
 11855  01508C  6E0C               	movwf	(btemp+11)^0,c
 11856                           
 11857                           ;stkvar	_p @ sp[(-20)+18]
 11858  01508E  0EFE               	movlw	-2
 11859  015090  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11860  015096  0EFF               	movlw	-1
 11861  015098  0060  F033  FFE3   	movff	btemp+11,plusw1
 11862  01509E  D008               	goto	l2208
 11863  0150A0                     l11444:
 11864                           
 11865                           ;stkvar	_p @ sp[(-20)+18]
 11866  0150A0  0EFE               	movlw	-2
 11867  0150A2  0060  F08F  FFE3   	movff	_prec,plusw1
 11868  0150A8  0EFF               	movlw	-1
 11869  0150AA  0060  F093  FFE3   	movff	_prec+1,plusw1
 11870  0150B0                     l2208:
 11871                           
 11872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 11873                           ;stkvar	_w @ sp[(-20)+16]
 11874  0150B0  0EFC               	movlw	-4
 11875  0150B2  0060  F087  FFE3   	movff	_width,plusw1
 11876  0150B8  0EFD               	movlw	-3
 11877  0150BA  0060  F08B  FFE3   	movff	_width+1,plusw1
 11878                           
 11879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 11880  0150C0  A825               	btfss	_flags^0,4,c
 11881  0150C2  D00B               	goto	l11450
 11882                           
 11883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 11884                           ;stkvar	_w @ sp[(-20)+16]
 11885  0150C4  50E1               	movf	fsr1l,w,c
 11886  0150C6  0FFC               	addlw	-4
 11887  0150C8  6ED9               	movwf	fsr2l,c
 11888  0150CA  50E2               	movf	fsr1h,w,c
 11889  0150CC  6EDA               	movwf	fsr2h,c
 11890  0150CE  0EFF               	movlw	255
 11891  0150D0  22DA               	addwfc	fsr2h,f,c
 11892  0150D2  0EFE               	movlw	254
 11893  0150D4  26DE               	addwf	postinc2,f,c
 11894  0150D6  0EFF               	movlw	255
 11895  0150D8  22DD               	addwfc	postdec2,f,c
 11896  0150DA                     l11450:
 11897                           
 11898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 11899                           ;stkvar	_d @ sp[(-20)+-10]
 11900  0150DA  0EE2               	movlw	226
 11901  0150DC  24E1               	addwf	fsr1l,w,c
 11902  0150DE  6ED9               	movwf	fsr2l,c
 11903  0150E0  0EFF               	movlw	255
 11904  0150E2  20E2               	addwfc	fsr1h,w,c
 11905  0150E4  6EDA               	movwf	fsr2h,c
 11906                           
 11907                           ;stkvar	_n @ sp[(-20)+4]
 11908  0150E6  0E08               	movlw	8
 11909  0150E8  6E01               	movwf	btemp^0,c
 11910  0150EA  0EF0               	movlw	-16
 11911  0150EC                     us1101999:
 11912  0150EC  006F FF7B FFE3     	movff	postinc2,plusw1
 11913  0150F2  28E8               	incf	wreg,w,c
 11914  0150F4  2E01               	decfsz	btemp^0,f,c
 11915  0150F6  D7FA               	bra	us1101999
 11916                           
 11917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 11918  0150F8  0E4F               	movlw	79
 11919  0150FA  6E0B               	movwf	(btemp+10)^0,c
 11920  0150FC  0E00               	movlw	0
 11921  0150FE  6E0C               	movwf	(btemp+11)^0,c
 11922                           
 11923                           ;stkvar	_i @ sp[(-20)+14]
 11924  015100  0EFA               	movlw	-6
 11925  015102  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11926  015108  0EFB               	movlw	-5
 11927  01510A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11928                           
 11929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 11930  015110  0103               	movlb	3	; () banked
 11931  015112  6BE3               	clrf	(_dbuf+79)& (0+255),b
 11932                           
 11933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11934  015114  D0EE               	goto	l11488
 11935  015116                     l11456:
 11936                           
 11937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 11938                           ;stkvar	_i @ sp[(-20)+14]
 11939  015116  50E1               	movf	fsr1l,w,c
 11940  015118  0FFA               	addlw	-6
 11941  01511A  6ED9               	movwf	fsr2l,c
 11942  01511C  50E2               	movf	fsr1h,w,c
 11943  01511E  6EDA               	movwf	fsr2h,c
 11944  015120  0EFF               	movlw	255
 11945  015122  22DA               	addwfc	fsr2h,f,c
 11946  015124  06DE               	decf	postinc2,f,c
 11947  015126  0E00               	movlw	0
 11948  015128  5ADD               	subwfb	postdec2,f,c
 11949                           
 11950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 11951                           ;stkvar	_n @ sp[(-20)+4]
 11952  01512A  0EF0               	movlw	-16
 11953  01512C  006F FF8C  F00B    	movff	plusw1,btemp+10
 11954  015132  0EF1               	movlw	-15
 11955  015134  006F FF8C  F00C    	movff	plusw1,btemp+11
 11956  01513A  0E0F               	movlw	15
 11957  01513C  160B               	andwf	(btemp+10)^0,f,c
 11958  01513E  0E00               	movlw	0
 11959  015140  160C               	andwf	(btemp+11)^0,f,c
 11960                           
 11961                           ;stkvar	_c @ sp[(-20)+12]
 11962  015142  0EF8               	movlw	-8
 11963  015144  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11964  01514A  0EF9               	movlw	-7
 11965  01514C  0060  F033  FFE3   	movff	btemp+11,plusw1
 11966                           
 11967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 11968                           ;stkvar	_c @ sp[(-20)+12]
 11969  015152  0EF9               	movlw	-7
 11970  015154  BEE3               	btfsc	plusw1,7,c
 11971  015156  D00F               	goto	l11464
 11972  015158  0EF9               	movlw	-7
 11973  01515A  50E3               	movf	plusw1,w,c
 11974  01515C  E108               	bnz	u11020
 11975  01515E  0EF8               	movlw	-8
 11976  015160  006F FF8C  F001    	movff	plusw1,btemp
 11977  015166  0E0A               	movlw	10
 11978  015168  5E01               	subwf	btemp^0,f,c
 11979  01516A  A0D8               	btfss	status,0,c
 11980  01516C  D004               	goto	l11464
 11981  01516E                     u11020:
 11982                           
 11983                           ;stkvar	_c @ sp[(-20)+12]
 11984  01516E  0EF8               	movlw	-8
 11985  015170  50E3               	movf	plusw1,w,c
 11986  015172  0F57               	addlw	87
 11987  015174  D003               	goto	L10
 11988  015176                     l11464:
 11989                           
 11990                           ;stkvar	_c @ sp[(-20)+12]
 11991  015176  0EF8               	movlw	-8
 11992  015178  50E3               	movf	plusw1,w,c
 11993  01517A  0F30               	addlw	48
 11994  01517C                     L10:
 11995  01517C  6E0B               	movwf	(btemp+10)^0,c
 11996  01517E  0EF9               	movlw	-7
 11997  015180  006F FF8C  F00C    	movff	plusw1,btemp+11
 11998  015186  0E00               	movlw	0
 11999  015188  220C               	addwfc	(btemp+11)^0,f,c
 12000                           
 12001                           ;stkvar	_c @ sp[(-20)+12]
 12002  01518A  0EF8               	movlw	-8
 12003  01518C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12004  015192  0EF9               	movlw	-7
 12005  015194  0060  F033  FFE3   	movff	btemp+11,plusw1
 12006  01519A  0EBF               	movlw	191
 12007  01519C  6E0B               	movwf	(btemp+10)^0,c
 12008  01519E  0EFF               	movlw	255
 12009  0151A0  6E0C               	movwf	(btemp+11)^0,c
 12010                           
 12011                           ;stkvar	_x @ sp[(-20)+-11]
 12012  0151A2  0EE1               	movlw	-31
 12013  0151A4  50E3               	movf	plusw1,w,c
 12014  0151A6  6E09               	movwf	(btemp+8)^0,c
 12015  0151A8  6A0A               	clrf	(btemp+9)^0,c
 12016  0151AA  500B               	movf	(btemp+10)^0,w,c
 12017  0151AC  2609               	addwf	(btemp+8)^0,f,c
 12018  0151AE  500C               	movf	(btemp+11)^0,w,c
 12019  0151B0  220A               	addwfc	(btemp+9)^0,f,c
 12020  0151B2  500A               	movf	(btemp+9)^0,w,c
 12021  0151B4  E106               	bnz	u11030
 12022  0151B6  0E1A               	movlw	26
 12023  0151B8  5C09               	subwf	(btemp+8)^0,w,c
 12024  0151BA  B0D8               	btfsc	status,0,c
 12025  0151BC  D002               	goto	u11030
 12026  0151BE  0E01               	movlw	1
 12027  0151C0  D001               	goto	u11040
 12028  0151C2                     u11030:
 12029  0151C2  0E00               	movlw	0
 12030  0151C4                     u11040:
 12031  0151C4  6E0B               	movwf	(btemp+10)^0,c
 12032  0151C6  6A0C               	clrf	(btemp+11)^0,c
 12033                           
 12034                           ;stkvar	_xtoa$5254 @ sp[(-20)+2]
 12035  0151C8  0EEE               	movlw	-18
 12036  0151CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12037  0151D0  0EEF               	movlw	-17
 12038  0151D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 12039                           
 12040                           ;stkvar	_xtoa$5254 @ sp[(-20)+2]
 12041  0151D8  0EEE               	movlw	-18
 12042  0151DA  006F FF8C  F001    	movff	plusw1,btemp
 12043  0151E0  0EEF               	movlw	-17
 12044  0151E2  50E3               	movf	plusw1,w,c
 12045  0151E4  1001               	iorwf	btemp^0,w,c
 12046  0151E6  B4D8               	btfsc	status,2,c
 12047  0151E8  D041               	goto	l11480
 12048  0151EA  0E9F               	movlw	159
 12049  0151EC  6E0B               	movwf	(btemp+10)^0,c
 12050  0151EE  0EFF               	movlw	255
 12051  0151F0  6E0C               	movwf	(btemp+11)^0,c
 12052                           
 12053                           ;stkvar	_c @ sp[(-20)+12]
 12054  0151F2  0EF8               	movlw	-8
 12055  0151F4  006F FF8C  F009    	movff	plusw1,btemp+8
 12056  0151FA  0EF9               	movlw	-7
 12057  0151FC  006F FF8C  F00A    	movff	plusw1,btemp+9
 12058  015202  0E20               	movlw	32
 12059  015204  1209               	iorwf	(btemp+8)^0,f,c
 12060  015206  0E00               	movlw	0
 12061  015208  120A               	iorwf	(btemp+9)^0,f,c
 12062  01520A  500B               	movf	(btemp+10)^0,w,c
 12063  01520C  2609               	addwf	(btemp+8)^0,f,c
 12064  01520E  500C               	movf	(btemp+11)^0,w,c
 12065  015210  220A               	addwfc	(btemp+9)^0,f,c
 12066  015212  500A               	movf	(btemp+9)^0,w,c
 12067  015214  E106               	bnz	u11060
 12068  015216  0E1A               	movlw	26
 12069  015218  5C09               	subwf	(btemp+8)^0,w,c
 12070  01521A  B0D8               	btfsc	status,0,c
 12071  01521C  D002               	goto	u11060
 12072  01521E  0E01               	movlw	1
 12073  015220  D001               	goto	u11070
 12074  015222                     u11060:
 12075  015222  0E00               	movlw	0
 12076  015224                     u11070:
 12077  015224  6E0B               	movwf	(btemp+10)^0,c
 12078  015226  6A0C               	clrf	(btemp+11)^0,c
 12079                           
 12080                           ;stkvar	_xtoa$5255 @ sp[(-20)+0]
 12081  015228  0EEC               	movlw	-20
 12082  01522A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12083  015230  0EED               	movlw	-19
 12084  015232  0060  F033  FFE3   	movff	btemp+11,plusw1
 12085                           
 12086                           ;stkvar	_xtoa$5255 @ sp[(-20)+0]
 12087  015238  0EEC               	movlw	-20
 12088  01523A  006F FF8C  F001    	movff	plusw1,btemp
 12089  015240  0EED               	movlw	-19
 12090  015242  50E3               	movf	plusw1,w,c
 12091  015244  1001               	iorwf	btemp^0,w,c
 12092  015246  B4D8               	btfsc	status,2,c
 12093  015248  D011               	goto	l11480
 12094                           
 12095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 12096                           ;stkvar	_c @ sp[(-20)+12]
 12097  01524A  0EF8               	movlw	-8
 12098  01524C  006F FF8F FFE6     	movff	plusw1,postinc1
 12099  015252  006F FF8F FFE6     	movff	plusw1,postinc1
 12100  015258  ECB8  F0CA         	call	_toupper	;wreg free
 12101                           
 12102                           ;stkvar	_c @ sp[(-20)+12]
 12103  01525C  0EF8               	movlw	-8
 12104  01525E  0060  F007  FFE3   	movff	btemp,plusw1
 12105  015264  0EF9               	movlw	-7
 12106  015266  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12107  01526C                     l11480:
 12108                           
 12109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 12110                           ;stkvar	_c @ sp[(-20)+12]
 12111                           ;stkvar	_i @ sp[(-20)+14]
 12112  01526C  0EFA               	movlw	-6
 12113  01526E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12114  015274  0EFB               	movlw	-5
 12115  015276  006F FF8C  F00C    	movff	plusw1,btemp+11
 12116  01527C  0E94               	movlw	low _dbuf
 12117  01527E  240B               	addwf	(btemp+10)^0,w,c
 12118  015280  6ED9               	movwf	fsr2l,c
 12119  015282  0E03               	movlw	high _dbuf
 12120  015284  200C               	addwfc	(btemp+11)^0,w,c
 12121  015286  6EDA               	movwf	fsr2h,c
 12122  015288  0EF8               	movlw	-8
 12123  01528A  006F FF8F FFDF     	movff	plusw1,indf2
 12124                           
 12125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 12126                           ;stkvar	_p @ sp[(-20)+18]
 12127  015290  50E1               	movf	fsr1l,w,c
 12128  015292  0FFE               	addlw	-2
 12129  015294  6ED9               	movwf	fsr2l,c
 12130  015296  50E2               	movf	fsr1h,w,c
 12131  015298  6EDA               	movwf	fsr2h,c
 12132  01529A  0EFF               	movlw	255
 12133  01529C  22DA               	addwfc	fsr2h,f,c
 12134  01529E  06DE               	decf	postinc2,f,c
 12135  0152A0  0E00               	movlw	0
 12136  0152A2  5ADD               	subwfb	postdec2,f,c
 12137                           
 12138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 12139                           ;stkvar	_w @ sp[(-20)+16]
 12140  0152A4  50E1               	movf	fsr1l,w,c
 12141  0152A6  0FFC               	addlw	-4
 12142  0152A8  6ED9               	movwf	fsr2l,c
 12143  0152AA  50E2               	movf	fsr1h,w,c
 12144  0152AC  6EDA               	movwf	fsr2h,c
 12145  0152AE  0EFF               	movlw	255
 12146  0152B0  22DA               	addwfc	fsr2h,f,c
 12147  0152B2  06DE               	decf	postinc2,f,c
 12148  0152B4  0E00               	movlw	0
 12149  0152B6  5ADD               	subwfb	postdec2,f,c
 12150                           
 12151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 12152  0152B8  0E04               	movlw	4
 12153  0152BA  6E0C               	movwf	(btemp+11)^0,c
 12154                           
 12155                           ;stkvar	_n @ sp[(-20)+4]
 12156  0152BC  50E1               	movf	fsr1l,w,c
 12157  0152BE  0FF0               	addlw	-16
 12158  0152C0  6ED9               	movwf	fsr2l,c
 12159  0152C2  50E2               	movf	fsr1h,w,c
 12160  0152C4  6EDA               	movwf	fsr2h,c
 12161  0152C6  0EFF               	movlw	255
 12162  0152C8  22DA               	addwfc	fsr2h,f,c
 12163  0152CA  280C               	incf	(btemp+11)^0,w,c
 12164  0152CC  52DE               	movf	postinc2,f,c
 12165  0152CE  D00F               	goto	u11090
 12166  0152D0                     u11095:
 12167  0152D0  52DE               	movf	postinc2,f,c
 12168  0152D2  52DE               	movf	postinc2,f,c
 12169  0152D4  52DE               	movf	postinc2,f,c
 12170  0152D6  52DE               	movf	postinc2,f,c
 12171  0152D8  52DE               	movf	postinc2,f,c
 12172  0152DA  52DE               	movf	postinc2,f,c
 12173  0152DC  90D8               	bcf	status,0,c
 12174  0152DE  32DD               	rrcf	postdec2,f,c
 12175  0152E0  32DD               	rrcf	postdec2,f,c
 12176  0152E2  32DD               	rrcf	postdec2,f,c
 12177  0152E4  32DD               	rrcf	postdec2,f,c
 12178  0152E6  32DD               	rrcf	postdec2,f,c
 12179  0152E8  32DD               	rrcf	postdec2,f,c
 12180  0152EA  32DD               	rrcf	postdec2,f,c
 12181  0152EC  32DE               	rrcf	postinc2,f,c
 12182  0152EE                     u11090:
 12183  0152EE  2EE8               	decfsz	wreg,f,c
 12184  0152F0  D7EF               	goto	u11095
 12185  0152F2                     l11488:
 12186                           
 12187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12188                           ;stkvar	_i @ sp[(-20)+14]
 12189  0152F2  0EFB               	movlw	-5
 12190  0152F4  BEE3               	btfsc	plusw1,7,c
 12191  0152F6  D03A               	goto	u11140
 12192  0152F8  0EFB               	movlw	-5
 12193  0152FA  50E3               	movf	plusw1,w,c
 12194  0152FC  E108               	bnz	u11100
 12195  0152FE  0EFA               	movlw	-6
 12196  015300  006F FF8C  F001    	movff	plusw1,btemp
 12197  015306  0E02               	movlw	2
 12198  015308  5E01               	subwf	btemp^0,f,c
 12199  01530A  A0D8               	btfss	status,0,c
 12200  01530C  D02F               	goto	u11140
 12201  01530E                     u11100:
 12202                           
 12203                           ;stkvar	_n @ sp[(-20)+4]
 12204  01530E  0EF0               	movlw	-16
 12205  015310  50E3               	movf	plusw1,w,c
 12206  015312  E115               	bnz	u11111
 12207  015314  0EF1               	movlw	-15
 12208  015316  50E3               	movf	plusw1,w,c
 12209  015318  E112               	bnz	u11111
 12210  01531A  0EF2               	movlw	-14
 12211  01531C  50E3               	movf	plusw1,w,c
 12212  01531E  E10F               	bnz	u11111
 12213  015320  0EF3               	movlw	-13
 12214  015322  50E3               	movf	plusw1,w,c
 12215  015324  E10C               	bnz	u11111
 12216  015326  0EF4               	movlw	-12
 12217  015328  50E3               	movf	plusw1,w,c
 12218  01532A  E109               	bnz	u11111
 12219  01532C  0EF5               	movlw	-11
 12220  01532E  50E3               	movf	plusw1,w,c
 12221  015330  E106               	bnz	u11111
 12222  015332  0EF6               	movlw	-10
 12223  015334  50E3               	movf	plusw1,w,c
 12224  015336  E103               	bnz	u11111
 12225  015338  0EF7               	movlw	-9
 12226  01533A  50E3               	movf	plusw1,w,c
 12227  01533C  A4D8               	btfss	status,2,c
 12228  01533E                     u11111:
 12229  01533E  D6EB               	goto	l11456
 12230                           
 12231                           ;stkvar	_p @ sp[(-20)+18]
 12232  015340  0EFF               	movlw	-1
 12233  015342  BEE3               	btfsc	plusw1,7,c
 12234  015344  D007               	goto	u11120
 12235  015346  0EFF               	movlw	-1
 12236  015348  50E3               	movf	plusw1,w,c
 12237  01534A  E103               	bnz	u11121
 12238  01534C  0EFE               	movlw	-2
 12239  01534E  04E3               	decf	plusw1,w,c
 12240  015350  B0D8               	btfsc	status,0,c
 12241  015352                     u11121:
 12242  015352  D6E1               	goto	l11456
 12243  015354                     u11120:
 12244                           
 12245                           ;stkvar	_w @ sp[(-20)+16]
 12246  015354  0EFD               	movlw	-3
 12247  015356  BEE3               	btfsc	plusw1,7,c
 12248  015358  D009               	goto	u11140
 12249  01535A  0EFD               	movlw	-3
 12250  01535C  50E3               	movf	plusw1,w,c
 12251  01535E  E104               	bnz	u11130
 12252  015360  0EFC               	movlw	-4
 12253  015362  04E3               	decf	plusw1,w,c
 12254  015364  A0D8               	btfss	status,0,c
 12255  015366  D002               	goto	u11140
 12256  015368                     u11130:
 12257  015368  B225               	btfsc	_flags^0,1,c
 12258  01536A  D6D5               	goto	l11456
 12259  01536C                     u11140:
 12260                           
 12261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 12262  01536C  A825               	btfss	_flags^0,4,c
 12263  01536E  D036               	goto	l11504
 12264                           
 12265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 12266                           ;stkvar	_i @ sp[(-20)+14]
 12267  015370  50E1               	movf	fsr1l,w,c
 12268  015372  0FFA               	addlw	-6
 12269  015374  6ED9               	movwf	fsr2l,c
 12270  015376  50E2               	movf	fsr1h,w,c
 12271  015378  6EDA               	movwf	fsr2h,c
 12272  01537A  0EFF               	movlw	255
 12273  01537C  22DA               	addwfc	fsr2h,f,c
 12274  01537E  06DE               	decf	postinc2,f,c
 12275  015380  0E00               	movlw	0
 12276  015382  5ADD               	subwfb	postdec2,f,c
 12277                           
 12278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 12279                           ;stkvar	_x @ sp[(-20)+-11]
 12280                           ;stkvar	_i @ sp[(-20)+14]
 12281  015384  0EFA               	movlw	-6
 12282  015386  006F FF8C  F00B    	movff	plusw1,btemp+10
 12283  01538C  0EFB               	movlw	-5
 12284  01538E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12285  015394  0E94               	movlw	low _dbuf
 12286  015396  240B               	addwf	(btemp+10)^0,w,c
 12287  015398  6ED9               	movwf	fsr2l,c
 12288  01539A  0E03               	movlw	high _dbuf
 12289  01539C  200C               	addwfc	(btemp+11)^0,w,c
 12290  01539E  6EDA               	movwf	fsr2h,c
 12291  0153A0  0EE1               	movlw	-31
 12292  0153A2  006F FF8F FFDF     	movff	plusw1,indf2
 12293                           
 12294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 12295                           ;stkvar	_i @ sp[(-20)+14]
 12296  0153A8  50E1               	movf	fsr1l,w,c
 12297  0153AA  0FFA               	addlw	-6
 12298  0153AC  6ED9               	movwf	fsr2l,c
 12299  0153AE  50E2               	movf	fsr1h,w,c
 12300  0153B0  6EDA               	movwf	fsr2h,c
 12301  0153B2  0EFF               	movlw	255
 12302  0153B4  22DA               	addwfc	fsr2h,f,c
 12303  0153B6  06DE               	decf	postinc2,f,c
 12304  0153B8  0E00               	movlw	0
 12305  0153BA  5ADD               	subwfb	postdec2,f,c
 12306                           
 12307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 12308                           ;stkvar	_i @ sp[(-20)+14]
 12309  0153BC  0EFA               	movlw	-6
 12310  0153BE  006F FF8C  F00B    	movff	plusw1,btemp+10
 12311  0153C4  0EFB               	movlw	-5
 12312  0153C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 12313  0153CC  0E94               	movlw	low _dbuf
 12314  0153CE  240B               	addwf	(btemp+10)^0,w,c
 12315  0153D0  6ED9               	movwf	fsr2l,c
 12316  0153D2  0E03               	movlw	high _dbuf
 12317  0153D4  200C               	addwfc	(btemp+11)^0,w,c
 12318  0153D6  6EDA               	movwf	fsr2h,c
 12319  0153D8  0E30               	movlw	48
 12320  0153DA  6EDF               	movwf	indf2,c
 12321  0153DC                     l11504:
 12322                           
 12323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 12324                           ;stkvar	_w @ sp[(-20)+16]
 12325  0153DC  0EFC               	movlw	-4
 12326  0153DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12327  0153E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12328                           
 12329                           ;stkvar	_i @ sp[(-22)+14]
 12330  0153EA  0E94               	movlw	low _dbuf
 12331  0153EC  6E0B               	movwf	(btemp+10)^0,c
 12332  0153EE  0E03               	movlw	high _dbuf
 12333  0153F0  6E0C               	movwf	(btemp+11)^0,c
 12334  0153F2  0EF8               	movlw	-8
 12335  0153F4  50E3               	movf	plusw1,w,c
 12336  0153F6  260B               	addwf	(btemp+10)^0,f,c
 12337  0153F8  0EF9               	movlw	-7
 12338  0153FA  50E3               	movf	plusw1,w,c
 12339  0153FC  220C               	addwfc	(btemp+11)^0,f,c
 12340  0153FE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12341  015404  0060  F033  FFE6   	movff	btemp+11,postinc1
 12342                           
 12343                           ;stkvar	_fp @ sp[(-24)+-2]
 12344  01540A  0EE6               	movlw	-26
 12345  01540C  006F FF8F FFE6     	movff	plusw1,postinc1
 12346  015412  006F FF8F FFE6     	movff	plusw1,postinc1
 12347  015418  EC33  F0C3         	call	_pad	;wreg free
 12348                           
 12349                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 12350  01541C  0EE1               	movlw	225
 12351  01541E  26E1               	addwf	fsr1l,f,c
 12352  015420  0EFF               	movlw	255
 12353  015422  22E2               	addwfc	fsr1h,f,c
 12354  015424  0012               	return		;funcret
 12355  015426                     __end_of_xtoa:
 12356                           	opt callstack 0
 12357                           
 12358 ;; *************** function _toupper *****************
 12359 ;; Defined at:
 12360 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;  c               2  [STACK] int 
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;		None
 12365 ;; Return value:  Size  Location     Type
 12366 ;;                  2  [STACK] int 
 12367 ;; Registers used:
 12368 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12369 ;; Tracked objects:
 12370 ;;		On entry : 0/3
 12371 ;;		On exit  : 0/0
 12372 ;;		Unchanged: 0/0
 12373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12378 ;;Total ram usage:        0 bytes
 12379 ;; Hardware stack levels used:    1
 12380 ;; Hardware stack levels required when called:   16
 12381 ;; This function calls:
 12382 ;;		_islower
 12383 ;; This function is called by:
 12384 ;;		_xtoa
 12385 ;; This function uses a reentrant model
 12386 ;;
 12387                           
 12388                           	psect	text47
 12389  019570                     __ptext47:
 12390                           	opt callstack 0
 12391  019570                     _toupper:
 12392                           	opt callstack 0
 12393                           
 12394                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12395  019570  52E6               	movf	postinc1,f,c
 12396  019572  52E6               	movf	postinc1,f,c
 12397                           
 12398                           ;stkvar	_c @ sp[(-2)+-2]
 12399                           
 12400                           ;incstack = 0
 12401 ;; hardware stack exceeded
 12402  019574  0EFC               	movlw	-4
 12403  019576  50E3               	movf	plusw1,w,c
 12404  019578  0F9F               	addlw	159
 12405  01957A  6E0B               	movwf	(btemp+10)^0,c
 12406  01957C  0EFD               	movlw	-3
 12407  01957E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12408  019584  0EFF               	movlw	255
 12409  019586  220C               	addwfc	(btemp+11)^0,f,c
 12410  019588  500C               	movf	(btemp+11)^0,w,c
 12411  01958A  E106               	bnz	u5790
 12412  01958C  0E1A               	movlw	26
 12413  01958E  5C0B               	subwf	(btemp+10)^0,w,c
 12414  019590  B0D8               	btfsc	status,0,c
 12415  019592  D002               	goto	u5790
 12416  019594  0E01               	movlw	1
 12417  019596  D001               	goto	u5800
 12418  019598                     u5790:
 12419  019598  0E00               	movlw	0
 12420  01959A                     u5800:
 12421  01959A  6E0B               	movwf	(btemp+10)^0,c
 12422  01959C  6A0C               	clrf	(btemp+11)^0,c
 12423                           
 12424                           ;stkvar	_toupper$6054 @ sp[(-2)+0]
 12425  01959E  0EFE               	movlw	-2
 12426  0195A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12427  0195A6  0EFF               	movlw	-1
 12428  0195A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 12429                           
 12430                           ;stkvar	_toupper$6054 @ sp[(-2)+0]
 12431  0195AE  0EFE               	movlw	-2
 12432  0195B0  006F FF8C  F001    	movff	plusw1,btemp
 12433  0195B6  0EFF               	movlw	-1
 12434  0195B8  50E3               	movf	plusw1,w,c
 12435  0195BA  1001               	iorwf	btemp^0,w,c
 12436  0195BC  B4D8               	btfsc	status,2,c
 12437  0195BE  D00D               	goto	l7520
 12438                           
 12439                           ;stkvar	_c @ sp[(-2)+-2]
 12440  0195C0  0EFC               	movlw	-4
 12441  0195C2  006F FF8C  F001    	movff	plusw1,btemp
 12442  0195C8  0EFD               	movlw	-3
 12443  0195CA  006F FF8C  F002    	movff	plusw1,btemp+1
 12444  0195D0  0E5F               	movlw	95
 12445  0195D2  1601               	andwf	btemp^0,f,c
 12446  0195D4  0E00               	movlw	0
 12447  0195D6  1602               	andwf	(btemp+1)^0,f,c
 12448  0195D8  D008               	goto	l3370
 12449  0195DA                     l7520:
 12450                           
 12451                           ;stkvar	_c @ sp[(-2)+-2]
 12452  0195DA  0EFC               	movlw	-4
 12453  0195DC  006F FF8C  F001    	movff	plusw1,btemp
 12454  0195E2  0EFD               	movlw	-3
 12455  0195E4  006F FF8C  F002    	movff	plusw1,btemp+1
 12456  0195EA                     l3370:
 12457                           
 12458                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12459  0195EA  52E5               	movf	postdec1,f,c
 12460  0195EC  52E5               	movf	postdec1,f,c
 12461  0195EE  52E5               	movf	postdec1,f,c
 12462  0195F0  52E5               	movf	postdec1,f,c
 12463  0195F2  0012               	return		;funcret
 12464  0195F4                     __end_of_toupper:
 12465                           	opt callstack 0
 12466                           
 12467 ;; *************** function _islower *****************
 12468 ;; Defined at:
 12469 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 12470 ;; Parameters:    Size  Location     Type
 12471 ;;  c               2  [STACK] int 
 12472 ;; Auto vars:     Size  Location     Type
 12473 ;;		None
 12474 ;; Return value:  Size  Location     Type
 12475 ;;                  2  [STACK] int 
 12476 ;; Registers used:
 12477 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12478 ;; Tracked objects:
 12479 ;;		On entry : 0/0
 12480 ;;		On exit  : 0/0
 12481 ;;		Unchanged: 0/0
 12482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12487 ;;Total ram usage:        0 bytes
 12488 ;; Hardware stack levels used:    1
 12489 ;; Hardware stack levels required when called:   15
 12490 ;; This function calls:
 12491 ;;		Nothing
 12492 ;; This function is called by:
 12493 ;;		_toupper
 12494 ;; This function uses a reentrant model
 12495 ;;
 12496                           
 12497                           	psect	text48
 12498  01A19A                     __ptext48:
 12499                           	opt callstack 0
 12500  01A19A                     _islower:
 12501                           	opt callstack 0
 12502                           
 12503                           ;stkvar	_c @ sp[(0)+-2]
 12504                           
 12505                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12506                           ;incstack = 0
 12507 ;; hardware stack exceeded
 12508  01A19A  0EFE               	movlw	-2
 12509  01A19C  50E3               	movf	plusw1,w,c
 12510  01A19E  0F9F               	addlw	159
 12511  01A1A0  6E0B               	movwf	(btemp+10)^0,c
 12512  01A1A2  0EFF               	movlw	-1
 12513  01A1A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 12514  01A1AA  0EFF               	movlw	255
 12515  01A1AC  220C               	addwfc	(btemp+11)^0,f,c
 12516  01A1AE  500C               	movf	(btemp+11)^0,w,c
 12517  01A1B0  E106               	bnz	u5480
 12518  01A1B2  0E1A               	movlw	26
 12519  01A1B4  5C0B               	subwf	(btemp+10)^0,w,c
 12520  01A1B6  B0D8               	btfsc	status,0,c
 12521  01A1B8  D002               	goto	u5480
 12522  01A1BA  0E01               	movlw	1
 12523  01A1BC  D001               	goto	u5490
 12524  01A1BE                     u5480:
 12525  01A1BE  0E00               	movlw	0
 12526  01A1C0                     u5490:
 12527  01A1C0  6E01               	movwf	btemp^0,c
 12528  01A1C2  6A02               	clrf	(btemp+1)^0,c
 12529                           
 12530                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12531  01A1C4  52E5               	movf	postdec1,f,c
 12532  01A1C6  52E5               	movf	postdec1,f,c
 12533  01A1C8  0012               	return		;funcret
 12534  01A1CA                     __end_of_islower:
 12535                           	opt callstack 0
 12536                           
 12537 ;; *************** function _isalpha *****************
 12538 ;; Defined at:
 12539 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 12540 ;; Parameters:    Size  Location     Type
 12541 ;;  c               2  [STACK] int 
 12542 ;; Auto vars:     Size  Location     Type
 12543 ;;		None
 12544 ;; Return value:  Size  Location     Type
 12545 ;;                  2  [STACK] int 
 12546 ;; Registers used:
 12547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 12548 ;; Tracked objects:
 12549 ;;		On entry : 0/0
 12550 ;;		On exit  : 0/0
 12551 ;;		Unchanged: 0/0
 12552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12557 ;;Total ram usage:        0 bytes
 12558 ;; Hardware stack levels used:    1
 12559 ;; Hardware stack levels required when called:   15
 12560 ;; This function calls:
 12561 ;;		Nothing
 12562 ;; This function is called by:
 12563 ;;		_xtoa
 12564 ;; This function uses a reentrant model
 12565 ;;
 12566                           
 12567                           	psect	text49
 12568  019E66                     __ptext49:
 12569                           	opt callstack 0
 12570  019E66                     _isalpha:
 12571                           	opt callstack 0
 12572                           
 12573                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12574                           ;incstack = 0
 12575 ;; hardware stack exceeded
 12576  019E66  0E9F               	movlw	159
 12577  019E68  6E0B               	movwf	(btemp+10)^0,c
 12578  019E6A  0EFF               	movlw	255
 12579  019E6C  6E0C               	movwf	(btemp+11)^0,c
 12580                           
 12581                           ;stkvar	_c @ sp[(0)+-2]
 12582  019E6E  0EFE               	movlw	-2
 12583  019E70  006F FF8C  F009    	movff	plusw1,btemp+8
 12584  019E76  0EFF               	movlw	-1
 12585  019E78  006F FF8C  F00A    	movff	plusw1,btemp+9
 12586  019E7E  0E20               	movlw	32
 12587  019E80  1209               	iorwf	(btemp+8)^0,f,c
 12588  019E82  0E00               	movlw	0
 12589  019E84  120A               	iorwf	(btemp+9)^0,f,c
 12590  019E86  500B               	movf	(btemp+10)^0,w,c
 12591  019E88  2609               	addwf	(btemp+8)^0,f,c
 12592  019E8A  500C               	movf	(btemp+11)^0,w,c
 12593  019E8C  220A               	addwfc	(btemp+9)^0,f,c
 12594  019E8E  500A               	movf	(btemp+9)^0,w,c
 12595  019E90  E106               	bnz	u5770
 12596  019E92  0E1A               	movlw	26
 12597  019E94  5C09               	subwf	(btemp+8)^0,w,c
 12598  019E96  B0D8               	btfsc	status,0,c
 12599  019E98  D002               	goto	u5770
 12600  019E9A  0E01               	movlw	1
 12601  019E9C  D001               	goto	u5780
 12602  019E9E                     u5770:
 12603  019E9E  0E00               	movlw	0
 12604  019EA0                     u5780:
 12605  019EA0  6E01               	movwf	btemp^0,c
 12606  019EA2  6A02               	clrf	(btemp+1)^0,c
 12607                           
 12608                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12609  019EA4  52E5               	movf	postdec1,f,c
 12610  019EA6  52E5               	movf	postdec1,f,c
 12611  019EA8  0012               	return		;funcret
 12612  019EAA                     __end_of_isalpha:
 12613                           	opt callstack 0
 12614                           
 12615 ;; *************** function _utoa *****************
 12616 ;; Defined at:
 12617 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12618 ;; Parameters:    Size  Location     Type
 12619 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12620 ;;		 -> f(6), NULL(0), 
 12621 ;;  d               8  [STACK] unsigned long long 
 12622 ;; Auto vars:     Size  Location     Type
 12623 ;;  n               8  [STACK] unsigned long long 
 12624 ;;  i               2  [STACK] int 
 12625 ;;  w               2  [STACK] int 
 12626 ;;  p               2  [STACK] int 
 12627 ;; Return value:  Size  Location     Type
 12628 ;;                  2  [STACK] int 
 12629 ;; Registers used:
 12630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 12631 ;; Tracked objects:
 12632 ;;		On entry : 0/0
 12633 ;;		On exit  : 0/0
 12634 ;;		Unchanged: 0/0
 12635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12640 ;;Total ram usage:        0 bytes
 12641 ;; Hardware stack levels used:    1
 12642 ;; Hardware stack levels required when called:   20
 12643 ;; This function calls:
 12644 ;;		___lodiv
 12645 ;;		___lomod
 12646 ;;		_pad
 12647 ;; This function is called by:
 12648 ;;		_vfpfcnvrt
 12649 ;; This function uses a reentrant model
 12650 ;;
 12651                           
 12652                           	psect	text50
 12653  015B34                     __ptext50:
 12654                           	opt callstack 0
 12655  015B34                     _utoa:
 12656                           	opt callstack 0
 12657                           
 12658                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12659  015B34  0E0E               	movlw	14
 12660  015B36  26E1               	addwf	fsr1l,f,c
 12661  015B38  0E00               	movlw	0
 12662  015B3A  22E2               	addwfc	fsr1h,f,c
 12663                           
 12664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 12665                           
 12666                           ;incstack = 0
 12667 ;; hardware stack exceeded
 12668  015B3C  AE24               	btfss	(_prec+1)^0,7,c
 12669                           
 12670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 12671  015B3E  9225               	bcf	_flags^0,1,c
 12672                           
 12673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 12674  015B40  BE24               	btfsc	(_prec+1)^0,7,c
 12675  015B42  D005               	goto	u10910
 12676  015B44  5024               	movf	(_prec+1)^0,w,c
 12677  015B46  E110               	bnz	l11404
 12678  015B48  0423               	decf	_prec^0,w,c
 12679  015B4A  B0D8               	btfsc	status,0,c
 12680  015B4C  D00D               	goto	l11404
 12681  015B4E                     u10910:
 12682  015B4E  0E01               	movlw	1
 12683  015B50  6E0B               	movwf	(btemp+10)^0,c
 12684  015B52  0E00               	movlw	0
 12685  015B54  6E0C               	movwf	(btemp+11)^0,c
 12686                           
 12687                           ;stkvar	_p @ sp[(-14)+12]
 12688  015B56  0EFE               	movlw	-2
 12689  015B58  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12690  015B5E  0EFF               	movlw	-1
 12691  015B60  0060  F033  FFE3   	movff	btemp+11,plusw1
 12692  015B66  D008               	goto	l2193
 12693  015B68                     l11404:
 12694                           
 12695                           ;stkvar	_p @ sp[(-14)+12]
 12696  015B68  0EFE               	movlw	-2
 12697  015B6A  0060  F08F  FFE3   	movff	_prec,plusw1
 12698  015B70  0EFF               	movlw	-1
 12699  015B72  0060  F093  FFE3   	movff	_prec+1,plusw1
 12700  015B78                     l2193:
 12701                           
 12702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 12703                           ;stkvar	_w @ sp[(-14)+10]
 12704  015B78  0EFC               	movlw	-4
 12705  015B7A  0060  F087  FFE3   	movff	_width,plusw1
 12706  015B80  0EFD               	movlw	-3
 12707  015B82  0060  F08B  FFE3   	movff	_width+1,plusw1
 12708                           
 12709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 12710                           ;stkvar	_d @ sp[(-14)+-10]
 12711  015B88  0EE8               	movlw	232
 12712  015B8A  24E1               	addwf	fsr1l,w,c
 12713  015B8C  6ED9               	movwf	fsr2l,c
 12714  015B8E  0EFF               	movlw	255
 12715  015B90  20E2               	addwfc	fsr1h,w,c
 12716  015B92  6EDA               	movwf	fsr2h,c
 12717                           
 12718                           ;stkvar	_n @ sp[(-14)+0]
 12719  015B94  0E08               	movlw	8
 12720  015B96  6E01               	movwf	btemp^0,c
 12721  015B98  0EF2               	movlw	-14
 12722  015B9A                     us1092999:
 12723  015B9A  006F FF7B FFE3     	movff	postinc2,plusw1
 12724  015BA0  28E8               	incf	wreg,w,c
 12725  015BA2  2E01               	decfsz	btemp^0,f,c
 12726  015BA4  D7FA               	bra	us1092999
 12727                           
 12728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 12729  015BA6  0E4F               	movlw	79
 12730  015BA8  6E0B               	movwf	(btemp+10)^0,c
 12731  015BAA  0E00               	movlw	0
 12732  015BAC  6E0C               	movwf	(btemp+11)^0,c
 12733                           
 12734                           ;stkvar	_i @ sp[(-14)+8]
 12735  015BAE  0EFA               	movlw	-6
 12736  015BB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12737  015BB6  0EFB               	movlw	-5
 12738  015BB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 12739                           
 12740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 12741  015BBE  0103               	movlb	3	; () banked
 12742  015BC0  6BE3               	clrf	(_dbuf+79)& (0+255),b
 12743                           
 12744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 12745  015BC2  D0FB               	goto	l11422
 12746  015BC4                     l11412:
 12747                           
 12748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 12749                           ;stkvar	_i @ sp[(-14)+8]
 12750  015BC4  50E1               	movf	fsr1l,w,c
 12751  015BC6  0FFA               	addlw	-6
 12752  015BC8  6ED9               	movwf	fsr2l,c
 12753  015BCA  50E2               	movf	fsr1h,w,c
 12754  015BCC  6EDA               	movwf	fsr2h,c
 12755  015BCE  0EFF               	movlw	255
 12756  015BD0  22DA               	addwfc	fsr2h,f,c
 12757  015BD2  06DE               	decf	postinc2,f,c
 12758  015BD4  0E00               	movlw	0
 12759  015BD6  5ADD               	subwfb	postdec2,f,c
 12760                           
 12761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 12762  015BD8  0E0A               	movlw	10
 12763  015BDA  6EE6               	movwf	postinc1,c
 12764  015BDC  0E00               	movlw	0
 12765  015BDE  6EE6               	movwf	postinc1,c
 12766  015BE0  0E00               	movlw	0
 12767  015BE2  6EE6               	movwf	postinc1,c
 12768  015BE4  0E00               	movlw	0
 12769  015BE6  6EE6               	movwf	postinc1,c
 12770  015BE8  0E00               	movlw	0
 12771  015BEA  6EE6               	movwf	postinc1,c
 12772  015BEC  0E00               	movlw	0
 12773  015BEE  6EE6               	movwf	postinc1,c
 12774  015BF0  0E00               	movlw	0
 12775  015BF2  6EE6               	movwf	postinc1,c
 12776  015BF4  0E00               	movlw	0
 12777  015BF6  6EE6               	movwf	postinc1,c
 12778                           
 12779                           ;stkvar	_n @ sp[(-22)+0]
 12780  015BF8  50E1               	movf	fsr1l,w,c
 12781  015BFA  0FEA               	addlw	-22
 12782  015BFC  6ED9               	movwf	fsr2l,c
 12783  015BFE  50E2               	movf	fsr1h,w,c
 12784  015C00  6EDA               	movwf	fsr2h,c
 12785  015C02  0EFF               	movlw	255
 12786  015C04  22DA               	addwfc	fsr2h,f,c
 12787  015C06  006F FF7B FFE6     	movff	postinc2,postinc1
 12788  015C0C  006F FF7B FFE6     	movff	postinc2,postinc1
 12789  015C12  006F FF7B FFE6     	movff	postinc2,postinc1
 12790  015C18  006F FF7B FFE6     	movff	postinc2,postinc1
 12791  015C1E  006F FF7B FFE6     	movff	postinc2,postinc1
 12792  015C24  006F FF7B FFE6     	movff	postinc2,postinc1
 12793  015C2A  006F FF7B FFE6     	movff	postinc2,postinc1
 12794  015C30  006F FF7B FFE6     	movff	postinc2,postinc1
 12795  015C36  ECA8  F0BF         	call	___lomod	;wreg free
 12796  015C3A  52E5               	movf	postdec1,f,c
 12797  015C3C  006F FF9C  F018    	movff	indf1,btemp+23
 12798  015C42  52E5               	movf	postdec1,f,c
 12799  015C44  006F FF9C  F017    	movff	indf1,btemp+22
 12800  015C4A  52E5               	movf	postdec1,f,c
 12801  015C4C  006F FF9C  F016    	movff	indf1,btemp+21
 12802  015C52  52E5               	movf	postdec1,f,c
 12803  015C54  006F FF9C  F015    	movff	indf1,btemp+20
 12804  015C5A  52E5               	movf	postdec1,f,c
 12805  015C5C  006F FF9C  F014    	movff	indf1,btemp+19
 12806  015C62  52E5               	movf	postdec1,f,c
 12807  015C64  006F FF9C  F013    	movff	indf1,btemp+18
 12808  015C6A  52E5               	movf	postdec1,f,c
 12809  015C6C  006F FF9C  F012    	movff	indf1,btemp+17
 12810  015C72  52E5               	movf	postdec1,f,c
 12811  015C74  006F FF9C  F011    	movff	indf1,btemp+16
 12812  015C7A  0EF8               	movlw	248
 12813  015C7C  26E1               	addwf	fsr1l,f,c
 12814  015C7E  0EFF               	movlw	255
 12815  015C80  22E2               	addwfc	fsr1h,f,c
 12816  015C82  0E30               	movlw	48
 12817  015C84  2611               	addwf	(btemp+16)^0,f,c
 12818                           
 12819                           ;stkvar	_i @ sp[(-14)+8]
 12820  015C86  0EFA               	movlw	-6
 12821  015C88  006F FF8C  F00B    	movff	plusw1,btemp+10
 12822  015C8E  0EFB               	movlw	-5
 12823  015C90  006F FF8C  F00C    	movff	plusw1,btemp+11
 12824  015C96  0E94               	movlw	low _dbuf
 12825  015C98  240B               	addwf	(btemp+10)^0,w,c
 12826  015C9A  6ED9               	movwf	fsr2l,c
 12827  015C9C  0E03               	movlw	high _dbuf
 12828  015C9E  200C               	addwfc	(btemp+11)^0,w,c
 12829  015CA0  6EDA               	movwf	fsr2h,c
 12830  015CA2  0060  F047  FFDF   	movff	btemp+16,indf2
 12831                           
 12832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 12833                           ;stkvar	_p @ sp[(-14)+12]
 12834  015CA8  50E1               	movf	fsr1l,w,c
 12835  015CAA  0FFE               	addlw	-2
 12836  015CAC  6ED9               	movwf	fsr2l,c
 12837  015CAE  50E2               	movf	fsr1h,w,c
 12838  015CB0  6EDA               	movwf	fsr2h,c
 12839  015CB2  0EFF               	movlw	255
 12840  015CB4  22DA               	addwfc	fsr2h,f,c
 12841  015CB6  06DE               	decf	postinc2,f,c
 12842  015CB8  0E00               	movlw	0
 12843  015CBA  5ADD               	subwfb	postdec2,f,c
 12844                           
 12845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 12846                           ;stkvar	_w @ sp[(-14)+10]
 12847  015CBC  50E1               	movf	fsr1l,w,c
 12848  015CBE  0FFC               	addlw	-4
 12849  015CC0  6ED9               	movwf	fsr2l,c
 12850  015CC2  50E2               	movf	fsr1h,w,c
 12851  015CC4  6EDA               	movwf	fsr2h,c
 12852  015CC6  0EFF               	movlw	255
 12853  015CC8  22DA               	addwfc	fsr2h,f,c
 12854  015CCA  06DE               	decf	postinc2,f,c
 12855  015CCC  0E00               	movlw	0
 12856  015CCE  5ADD               	subwfb	postdec2,f,c
 12857                           
 12858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 12859  015CD0  0E0A               	movlw	10
 12860  015CD2  6EE6               	movwf	postinc1,c
 12861  015CD4  0E00               	movlw	0
 12862  015CD6  6EE6               	movwf	postinc1,c
 12863  015CD8  0E00               	movlw	0
 12864  015CDA  6EE6               	movwf	postinc1,c
 12865  015CDC  0E00               	movlw	0
 12866  015CDE  6EE6               	movwf	postinc1,c
 12867  015CE0  0E00               	movlw	0
 12868  015CE2  6EE6               	movwf	postinc1,c
 12869  015CE4  0E00               	movlw	0
 12870  015CE6  6EE6               	movwf	postinc1,c
 12871  015CE8  0E00               	movlw	0
 12872  015CEA  6EE6               	movwf	postinc1,c
 12873  015CEC  0E00               	movlw	0
 12874  015CEE  6EE6               	movwf	postinc1,c
 12875                           
 12876                           ;stkvar	_n @ sp[(-22)+0]
 12877  015CF0  50E1               	movf	fsr1l,w,c
 12878  015CF2  0FEA               	addlw	-22
 12879  015CF4  6ED9               	movwf	fsr2l,c
 12880  015CF6  50E2               	movf	fsr1h,w,c
 12881  015CF8  6EDA               	movwf	fsr2h,c
 12882  015CFA  0EFF               	movlw	255
 12883  015CFC  22DA               	addwfc	fsr2h,f,c
 12884  015CFE  006F FF7B FFE6     	movff	postinc2,postinc1
 12885  015D04  006F FF7B FFE6     	movff	postinc2,postinc1
 12886  015D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 12887  015D10  006F FF7B FFE6     	movff	postinc2,postinc1
 12888  015D16  006F FF7B FFE6     	movff	postinc2,postinc1
 12889  015D1C  006F FF7B FFE6     	movff	postinc2,postinc1
 12890  015D22  006F FF7B FFE6     	movff	postinc2,postinc1
 12891  015D28  006F FF7B FFE6     	movff	postinc2,postinc1
 12892  015D2E  EC6D  F0BB         	call	___lodiv	;wreg free
 12893  015D32  52E5               	movf	postdec1,f,c
 12894  015D34  006F FF9C  F018    	movff	indf1,btemp+23
 12895  015D3A  52E5               	movf	postdec1,f,c
 12896  015D3C  006F FF9C  F017    	movff	indf1,btemp+22
 12897  015D42  52E5               	movf	postdec1,f,c
 12898  015D44  006F FF9C  F016    	movff	indf1,btemp+21
 12899  015D4A  52E5               	movf	postdec1,f,c
 12900  015D4C  006F FF9C  F015    	movff	indf1,btemp+20
 12901  015D52  52E5               	movf	postdec1,f,c
 12902  015D54  006F FF9C  F014    	movff	indf1,btemp+19
 12903  015D5A  52E5               	movf	postdec1,f,c
 12904  015D5C  006F FF9C  F013    	movff	indf1,btemp+18
 12905  015D62  52E5               	movf	postdec1,f,c
 12906  015D64  006F FF9C  F012    	movff	indf1,btemp+17
 12907  015D6A  52E5               	movf	postdec1,f,c
 12908  015D6C  006F FF9C  F011    	movff	indf1,btemp+16
 12909  015D72  0EF8               	movlw	248
 12910  015D74  26E1               	addwf	fsr1l,f,c
 12911  015D76  0EFF               	movlw	255
 12912  015D78  22E2               	addwfc	fsr1h,f,c
 12913                           
 12914                           ;stkvar	_n @ sp[(-14)+0]
 12915  015D7A  0EF2               	movlw	-14
 12916  015D7C  0060  F047  FFE3   	movff	btemp+16,plusw1
 12917  015D82  0EF3               	movlw	-13
 12918  015D84  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12919  015D8A  0EF4               	movlw	-12
 12920  015D8C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12921  015D92  0EF5               	movlw	-11
 12922  015D94  0060  F053  FFE3   	movff	btemp+19,plusw1
 12923  015D9A  0EF6               	movlw	-10
 12924  015D9C  0060  F057  FFE3   	movff	btemp+20,plusw1
 12925  015DA2  0EF7               	movlw	-9
 12926  015DA4  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12927  015DAA  0EF8               	movlw	-8
 12928  015DAC  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12929  015DB2  0EF9               	movlw	-7
 12930  015DB4  0060  F063  FFE3   	movff	btemp+23,plusw1
 12931  015DBA                     l11422:
 12932                           
 12933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 12934                           ;stkvar	_i @ sp[(-14)+8]
 12935  015DBA  0EFA               	movlw	-6
 12936  015DBC  006F FF8C  F001    	movff	plusw1,btemp
 12937  015DC2  0EFB               	movlw	-5
 12938  015DC4  50E3               	movf	plusw1,w,c
 12939  015DC6  1001               	iorwf	btemp^0,w,c
 12940  015DC8  B4D8               	btfsc	status,2,c
 12941  015DCA  D02F               	goto	u10970
 12942                           
 12943                           ;stkvar	_n @ sp[(-14)+0]
 12944  015DCC  0EF2               	movlw	-14
 12945  015DCE  50E3               	movf	plusw1,w,c
 12946  015DD0  E115               	bnz	u10941
 12947  015DD2  0EF3               	movlw	-13
 12948  015DD4  50E3               	movf	plusw1,w,c
 12949  015DD6  E112               	bnz	u10941
 12950  015DD8  0EF4               	movlw	-12
 12951  015DDA  50E3               	movf	plusw1,w,c
 12952  015DDC  E10F               	bnz	u10941
 12953  015DDE  0EF5               	movlw	-11
 12954  015DE0  50E3               	movf	plusw1,w,c
 12955  015DE2  E10C               	bnz	u10941
 12956  015DE4  0EF6               	movlw	-10
 12957  015DE6  50E3               	movf	plusw1,w,c
 12958  015DE8  E109               	bnz	u10941
 12959  015DEA  0EF7               	movlw	-9
 12960  015DEC  50E3               	movf	plusw1,w,c
 12961  015DEE  E106               	bnz	u10941
 12962  015DF0  0EF8               	movlw	-8
 12963  015DF2  50E3               	movf	plusw1,w,c
 12964  015DF4  E103               	bnz	u10941
 12965  015DF6  0EF9               	movlw	-7
 12966  015DF8  50E3               	movf	plusw1,w,c
 12967  015DFA  A4D8               	btfss	status,2,c
 12968  015DFC                     u10941:
 12969  015DFC  D6E3               	goto	l11412
 12970                           
 12971                           ;stkvar	_p @ sp[(-14)+12]
 12972  015DFE  0EFF               	movlw	-1
 12973  015E00  BEE3               	btfsc	plusw1,7,c
 12974  015E02  D007               	goto	u10950
 12975  015E04  0EFF               	movlw	-1
 12976  015E06  50E3               	movf	plusw1,w,c
 12977  015E08  E103               	bnz	u10951
 12978  015E0A  0EFE               	movlw	-2
 12979  015E0C  04E3               	decf	plusw1,w,c
 12980  015E0E  B0D8               	btfsc	status,0,c
 12981  015E10                     u10951:
 12982  015E10  D6D9               	goto	l11412
 12983  015E12                     u10950:
 12984                           
 12985                           ;stkvar	_w @ sp[(-14)+10]
 12986  015E12  0EFD               	movlw	-3
 12987  015E14  BEE3               	btfsc	plusw1,7,c
 12988  015E16  D009               	goto	u10970
 12989  015E18  0EFD               	movlw	-3
 12990  015E1A  50E3               	movf	plusw1,w,c
 12991  015E1C  E104               	bnz	u10960
 12992  015E1E  0EFC               	movlw	-4
 12993  015E20  04E3               	decf	plusw1,w,c
 12994  015E22  A0D8               	btfss	status,0,c
 12995  015E24  D002               	goto	u10970
 12996  015E26                     u10960:
 12997  015E26  B225               	btfsc	_flags^0,1,c
 12998  015E28  D6CD               	goto	l11412
 12999  015E2A                     u10970:
 13000                           
 13001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 13002                           ;stkvar	_w @ sp[(-14)+10]
 13003  015E2A  0EFC               	movlw	-4
 13004  015E2C  006F FF8F FFE6     	movff	plusw1,postinc1
 13005  015E32  006F FF8F FFE6     	movff	plusw1,postinc1
 13006                           
 13007                           ;stkvar	_i @ sp[(-16)+8]
 13008  015E38  0E94               	movlw	low _dbuf
 13009  015E3A  6E0B               	movwf	(btemp+10)^0,c
 13010  015E3C  0E03               	movlw	high _dbuf
 13011  015E3E  6E0C               	movwf	(btemp+11)^0,c
 13012  015E40  0EF8               	movlw	-8
 13013  015E42  50E3               	movf	plusw1,w,c
 13014  015E44  260B               	addwf	(btemp+10)^0,f,c
 13015  015E46  0EF9               	movlw	-7
 13016  015E48  50E3               	movf	plusw1,w,c
 13017  015E4A  220C               	addwfc	(btemp+11)^0,f,c
 13018  015E4C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13019  015E52  0060  F033  FFE6   	movff	btemp+11,postinc1
 13020                           
 13021                           ;stkvar	_fp @ sp[(-18)+-2]
 13022  015E58  0EEC               	movlw	-20
 13023  015E5A  006F FF8F FFE6     	movff	plusw1,postinc1
 13024  015E60  006F FF8F FFE6     	movff	plusw1,postinc1
 13025  015E66  EC33  F0C3         	call	_pad	;wreg free
 13026                           
 13027                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 13028  015E6A  0EE8               	movlw	232
 13029  015E6C  26E1               	addwf	fsr1l,f,c
 13030  015E6E  0EFF               	movlw	255
 13031  015E70  22E2               	addwfc	fsr1h,f,c
 13032  015E72  0012               	return		;funcret
 13033  015E74                     __end_of_utoa:
 13034                           	opt callstack 0
 13035                           
 13036 ;; *************** function ___lomod *****************
 13037 ;; Defined at:
 13038 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 13039 ;; Parameters:    Size  Location     Type
 13040 ;;  dividend        8  [STACK] unsigned long long 
 13041 ;;  divisor         8  [STACK] unsigned long long 
 13042 ;; Auto vars:     Size  Location     Type
 13043 ;;  counter         1  [STACK] unsigned char 
 13044 ;; Return value:  Size  Location     Type
 13045 ;;                  8  [STACK] unsigned long long 
 13046 ;; Registers used:
 13047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13048 ;; Tracked objects:
 13049 ;;		On entry : 0/3
 13050 ;;		On exit  : 0/0
 13051 ;;		Unchanged: 0/0
 13052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13057 ;;Total ram usage:        0 bytes
 13058 ;; Hardware stack levels used:    1
 13059 ;; Hardware stack levels required when called:   15
 13060 ;; This function calls:
 13061 ;;		Nothing
 13062 ;; This function is called by:
 13063 ;;		_utoa
 13064 ;; This function uses a reentrant model
 13065 ;;
 13066                           
 13067                           	psect	text51
 13068  017F50                     __ptext51:
 13069                           	opt callstack 0
 13070  017F50                     ___lomod:
 13071                           	opt callstack 0
 13072                           
 13073                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13074  017F50  52E6               	movf	postinc1,f,c
 13075                           
 13076                           ;stkvar	_divisor @ sp[(-1)+-16]
 13077                           
 13078                           ;incstack = 0
 13079 ;; hardware stack exceeded
 13080  017F52  0EEF               	movlw	-17
 13081  017F54  50E3               	movf	plusw1,w,c
 13082  017F56  E116               	bnz	u6920
 13083  017F58  0EF0               	movlw	-16
 13084  017F5A  50E3               	movf	plusw1,w,c
 13085  017F5C  E113               	bnz	u6920
 13086  017F5E  0EF1               	movlw	-15
 13087  017F60  50E3               	movf	plusw1,w,c
 13088  017F62  E110               	bnz	u6920
 13089  017F64  0EF2               	movlw	-14
 13090  017F66  50E3               	movf	plusw1,w,c
 13091  017F68  E10D               	bnz	u6920
 13092  017F6A  0EF3               	movlw	-13
 13093  017F6C  50E3               	movf	plusw1,w,c
 13094  017F6E  E10A               	bnz	u6920
 13095  017F70  0EF4               	movlw	-12
 13096  017F72  50E3               	movf	plusw1,w,c
 13097  017F74  E107               	bnz	u6920
 13098  017F76  0EF5               	movlw	-11
 13099  017F78  50E3               	movf	plusw1,w,c
 13100  017F7A  E104               	bnz	u6920
 13101  017F7C  0EF6               	movlw	-10
 13102  017F7E  50E3               	movf	plusw1,w,c
 13103  017F80  B4D8               	btfsc	status,2,c
 13104  017F82  D075               	goto	u6950
 13105  017F84                     u6920:
 13106                           
 13107                           ;stkvar	_counter @ sp[(-1)+0]
 13108  017F84  0EFF               	movlw	-1
 13109  017F86  6AE3               	clrf	plusw1,c
 13110  017F88  D012               	goto	L11
 13111  017F8A                     l8130:
 13112                           
 13113                           ;stkvar	_divisor @ sp[(-1)+-16]
 13114  017F8A  90D8               	bcf	status,0,c
 13115  017F8C  0EEF               	movlw	-17
 13116  017F8E  36E3               	rlcf	plusw1,f,c
 13117  017F90  0EF0               	movlw	-16
 13118  017F92  36E3               	rlcf	plusw1,f,c
 13119  017F94  0EF1               	movlw	-15
 13120  017F96  36E3               	rlcf	plusw1,f,c
 13121  017F98  0EF2               	movlw	-14
 13122  017F9A  36E3               	rlcf	plusw1,f,c
 13123  017F9C  0EF3               	movlw	-13
 13124  017F9E  36E3               	rlcf	plusw1,f,c
 13125  017FA0  0EF4               	movlw	-12
 13126  017FA2  36E3               	rlcf	plusw1,f,c
 13127  017FA4  0EF5               	movlw	-11
 13128  017FA6  36E3               	rlcf	plusw1,f,c
 13129  017FA8  0EF6               	movlw	-10
 13130  017FAA  36E3               	rlcf	plusw1,f,c
 13131                           
 13132                           ;stkvar	_counter @ sp[(-1)+0]
 13133  017FAC  0EFF               	movlw	-1
 13134  017FAE                     L11:
 13135  017FAE  2AE3               	incf	plusw1,f,c
 13136                           
 13137                           ;stkvar	_divisor @ sp[(-1)+-16]
 13138  017FB0  0EF6               	movlw	-10
 13139  017FB2  AEE3               	btfss	plusw1,7,c
 13140  017FB4  D7EA               	goto	l8130
 13141  017FB6                     u6930:
 13142                           
 13143                           ;stkvar	_divisor @ sp[(-1)+-16]
 13144                           ;stkvar	_dividend @ sp[(-1)+-8]
 13145  017FB6  50E1               	movf	fsr1l,w,c
 13146  017FB8  0FF7               	addlw	-9
 13147  017FBA  6ED9               	movwf	fsr2l,c
 13148  017FBC  50E2               	movf	fsr1h,w,c
 13149  017FBE  6EDA               	movwf	fsr2h,c
 13150  017FC0  0EFF               	movlw	255
 13151  017FC2  22DA               	addwfc	fsr2h,f,c
 13152  017FC4  0EEF               	movlw	-17
 13153  017FC6  50E3               	movf	plusw1,w,c
 13154  017FC8  5CDE               	subwf	postinc2,w,c
 13155  017FCA  0EF0               	movlw	-16
 13156  017FCC  50E3               	movf	plusw1,w,c
 13157  017FCE  58DE               	subwfb	postinc2,w,c
 13158  017FD0  0EF1               	movlw	-15
 13159  017FD2  50E3               	movf	plusw1,w,c
 13160  017FD4  58DE               	subwfb	postinc2,w,c
 13161  017FD6  0EF2               	movlw	-14
 13162  017FD8  50E3               	movf	plusw1,w,c
 13163  017FDA  58DE               	subwfb	postinc2,w,c
 13164  017FDC  0EF3               	movlw	-13
 13165  017FDE  50E3               	movf	plusw1,w,c
 13166  017FE0  58DE               	subwfb	postinc2,w,c
 13167  017FE2  0EF4               	movlw	-12
 13168  017FE4  50E3               	movf	plusw1,w,c
 13169  017FE6  58DE               	subwfb	postinc2,w,c
 13170  017FE8  0EF5               	movlw	-11
 13171  017FEA  50E3               	movf	plusw1,w,c
 13172  017FEC  58DE               	subwfb	postinc2,w,c
 13173  017FEE  0EF6               	movlw	-10
 13174  017FF0  50E3               	movf	plusw1,w,c
 13175  017FF2  58DE               	subwfb	postinc2,w,c
 13176  017FF4  A0D8               	btfss	status,0,c
 13177  017FF6  D01F               	goto	l8138
 13178                           
 13179                           ;stkvar	_divisor @ sp[(-1)+-16]
 13180                           ;stkvar	_dividend @ sp[(-1)+-8]
 13181  017FF8  50E1               	movf	fsr1l,w,c
 13182  017FFA  0FF7               	addlw	-9
 13183  017FFC  6ED9               	movwf	fsr2l,c
 13184  017FFE  50E2               	movf	fsr1h,w,c
 13185  018000  6EDA               	movwf	fsr2h,c
 13186  018002  0EFF               	movlw	255
 13187  018004  22DA               	addwfc	fsr2h,f,c
 13188  018006  0EEF               	movlw	-17
 13189  018008  50E3               	movf	plusw1,w,c
 13190  01800A  5EDE               	subwf	postinc2,f,c
 13191  01800C  0EF0               	movlw	-16
 13192  01800E  50E3               	movf	plusw1,w,c
 13193  018010  5ADE               	subwfb	postinc2,f,c
 13194  018012  0EF1               	movlw	-15
 13195  018014  50E3               	movf	plusw1,w,c
 13196  018016  5ADE               	subwfb	postinc2,f,c
 13197  018018  0EF2               	movlw	-14
 13198  01801A  50E3               	movf	plusw1,w,c
 13199  01801C  5ADE               	subwfb	postinc2,f,c
 13200  01801E  0EF3               	movlw	-13
 13201  018020  50E3               	movf	plusw1,w,c
 13202  018022  5ADE               	subwfb	postinc2,f,c
 13203  018024  0EF4               	movlw	-12
 13204  018026  50E3               	movf	plusw1,w,c
 13205  018028  5ADE               	subwfb	postinc2,f,c
 13206  01802A  0EF5               	movlw	-11
 13207  01802C  50E3               	movf	plusw1,w,c
 13208  01802E  5ADE               	subwfb	postinc2,f,c
 13209  018030  0EF6               	movlw	-10
 13210  018032  50E3               	movf	plusw1,w,c
 13211  018034  5ADE               	subwfb	postinc2,f,c
 13212  018036                     l8138:
 13213                           
 13214                           ;stkvar	_divisor @ sp[(-1)+-16]
 13215  018036  90D8               	bcf	status,0,c
 13216  018038  0EF6               	movlw	-10
 13217  01803A  32E3               	rrcf	plusw1,f,c
 13218  01803C  0EF5               	movlw	-11
 13219  01803E  32E3               	rrcf	plusw1,f,c
 13220  018040  0EF4               	movlw	-12
 13221  018042  32E3               	rrcf	plusw1,f,c
 13222  018044  0EF3               	movlw	-13
 13223  018046  32E3               	rrcf	plusw1,f,c
 13224  018048  0EF2               	movlw	-14
 13225  01804A  32E3               	rrcf	plusw1,f,c
 13226  01804C  0EF1               	movlw	-15
 13227  01804E  32E3               	rrcf	plusw1,f,c
 13228  018050  0EF0               	movlw	-16
 13229  018052  32E3               	rrcf	plusw1,f,c
 13230  018054  0EEF               	movlw	-17
 13231  018056  32E3               	rrcf	plusw1,f,c
 13232                           
 13233                           ;stkvar	_counter @ sp[(-1)+0]
 13234  018058  0EFF               	movlw	-1
 13235  01805A  50E3               	movf	plusw1,w,c
 13236  01805C  6E01               	movwf	btemp^0,c
 13237  01805E  0E01               	movlw	1
 13238  018060  5E01               	subwf	btemp^0,f,c
 13239  018062  0EFF               	movlw	-1
 13240  018064  0060  F007  FFE3   	movff	btemp,plusw1
 13241  01806A  A4D8               	btfss	status,2,c
 13242  01806C  D7A4               	goto	u6930
 13243  01806E                     u6950:
 13244                           
 13245                           ;stkvar	_dividend @ sp[(-1)+-8]
 13246  01806E  0EF7               	movlw	247
 13247  018070  24E1               	addwf	fsr1l,w,c
 13248  018072  6ED9               	movwf	fsr2l,c
 13249  018074  0EFF               	movlw	255
 13250  018076  20E2               	addwfc	fsr1h,w,c
 13251  018078  6EDA               	movwf	fsr2h,c
 13252                           
 13253                           ;stkvar	?___lomod @ sp[(-1)+-8]
 13254  01807A  0E08               	movlw	8
 13255  01807C  6E01               	movwf	btemp^0,c
 13256  01807E  0EF7               	movlw	-9
 13257  018080                     us696999:
 13258  018080  006F FF7B FFE3     	movff	postinc2,plusw1
 13259  018086  28E8               	incf	wreg,w,c
 13260  018088  2E01               	decfsz	btemp^0,f,c
 13261  01808A  D7FA               	bra	us696999
 13262                           
 13263                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13264  01808C  52E5               	movf	postdec1,f,c
 13265  01808E  0012               	return		;funcret
 13266  018090                     __end_of___lomod:
 13267                           	opt callstack 0
 13268                           
 13269 ;; *************** function ___lodiv *****************
 13270 ;; Defined at:
 13271 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 13272 ;; Parameters:    Size  Location     Type
 13273 ;;  dividend        8  [STACK] unsigned long long 
 13274 ;;  divisor         8  [STACK] unsigned long long 
 13275 ;; Auto vars:     Size  Location     Type
 13276 ;;  quotient        8  [STACK] unsigned long long 
 13277 ;;  counter         1  [STACK] unsigned char 
 13278 ;; Return value:  Size  Location     Type
 13279 ;;                  8  [STACK] unsigned long long 
 13280 ;; Registers used:
 13281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13282 ;; Tracked objects:
 13283 ;;		On entry : 0/3
 13284 ;;		On exit  : 0/0
 13285 ;;		Unchanged: 0/0
 13286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13291 ;;Total ram usage:        0 bytes
 13292 ;; Hardware stack levels used:    1
 13293 ;; Hardware stack levels required when called:   15
 13294 ;; This function calls:
 13295 ;;		Nothing
 13296 ;; This function is called by:
 13297 ;;		_utoa
 13298 ;; This function uses a reentrant model
 13299 ;;
 13300                           
 13301                           	psect	text52
 13302  0176DA                     __ptext52:
 13303                           	opt callstack 0
 13304  0176DA                     ___lodiv:
 13305                           	opt callstack 0
 13306                           
 13307                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13308  0176DA  0E09               	movlw	9
 13309  0176DC  26E1               	addwf	fsr1l,f,c
 13310  0176DE  0E00               	movlw	0
 13311  0176E0  22E2               	addwfc	fsr1h,f,c
 13312                           
 13313                           ;stkvar	_quotient @ sp[(-9)+0]
 13314                           
 13315                           ;incstack = 0
 13316 ;; hardware stack exceeded
 13317  0176E2  0E07               	movlw	7
 13318  0176E4  6E01               	movwf	btemp^0,c
 13319  0176E6  0EF7               	movlw	-9
 13320  0176E8                     u6861:
 13321  0176E8  6AE3               	clrf	plusw1,c
 13322  0176EA  2AE8               	incf	wreg,f,c
 13323  0176EC  0601               	decf	btemp^0,f,c
 13324  0176EE  E2FC               	bc	u6861
 13325                           
 13326                           ;stkvar	_divisor @ sp[(-9)+-16]
 13327  0176F0  0EE7               	movlw	-25
 13328  0176F2  50E3               	movf	plusw1,w,c
 13329  0176F4  E116               	bnz	u6870
 13330  0176F6  0EE8               	movlw	-24
 13331  0176F8  50E3               	movf	plusw1,w,c
 13332  0176FA  E113               	bnz	u6870
 13333  0176FC  0EE9               	movlw	-23
 13334  0176FE  50E3               	movf	plusw1,w,c
 13335  017700  E110               	bnz	u6870
 13336  017702  0EEA               	movlw	-22
 13337  017704  50E3               	movf	plusw1,w,c
 13338  017706  E10D               	bnz	u6870
 13339  017708  0EEB               	movlw	-21
 13340  01770A  50E3               	movf	plusw1,w,c
 13341  01770C  E10A               	bnz	u6870
 13342  01770E  0EEC               	movlw	-20
 13343  017710  50E3               	movf	plusw1,w,c
 13344  017712  E107               	bnz	u6870
 13345  017714  0EED               	movlw	-19
 13346  017716  50E3               	movf	plusw1,w,c
 13347  017718  E104               	bnz	u6870
 13348  01771A  0EEE               	movlw	-18
 13349  01771C  50E3               	movf	plusw1,w,c
 13350  01771E  B4D8               	btfsc	status,2,c
 13351  017720  D088               	goto	u6900
 13352  017722                     u6870:
 13353                           
 13354                           ;stkvar	_counter @ sp[(-9)+8]
 13355  017722  0EFF               	movlw	-1
 13356  017724  6AE3               	clrf	plusw1,c
 13357  017726  D012               	goto	L12
 13358  017728                     l8106:
 13359                           
 13360                           ;stkvar	_divisor @ sp[(-9)+-16]
 13361  017728  90D8               	bcf	status,0,c
 13362  01772A  0EE7               	movlw	-25
 13363  01772C  36E3               	rlcf	plusw1,f,c
 13364  01772E  0EE8               	movlw	-24
 13365  017730  36E3               	rlcf	plusw1,f,c
 13366  017732  0EE9               	movlw	-23
 13367  017734  36E3               	rlcf	plusw1,f,c
 13368  017736  0EEA               	movlw	-22
 13369  017738  36E3               	rlcf	plusw1,f,c
 13370  01773A  0EEB               	movlw	-21
 13371  01773C  36E3               	rlcf	plusw1,f,c
 13372  01773E  0EEC               	movlw	-20
 13373  017740  36E3               	rlcf	plusw1,f,c
 13374  017742  0EED               	movlw	-19
 13375  017744  36E3               	rlcf	plusw1,f,c
 13376  017746  0EEE               	movlw	-18
 13377  017748  36E3               	rlcf	plusw1,f,c
 13378                           
 13379                           ;stkvar	_counter @ sp[(-9)+8]
 13380  01774A  0EFF               	movlw	-1
 13381  01774C                     L12:
 13382  01774C  2AE3               	incf	plusw1,f,c
 13383                           
 13384                           ;stkvar	_divisor @ sp[(-9)+-16]
 13385  01774E  0EEE               	movlw	-18
 13386  017750  AEE3               	btfss	plusw1,7,c
 13387  017752  D7EA               	goto	l8106
 13388  017754                     u6880:
 13389                           
 13390                           ;stkvar	_quotient @ sp[(-9)+0]
 13391  017754  90D8               	bcf	status,0,c
 13392  017756  0EF7               	movlw	-9
 13393  017758  36E3               	rlcf	plusw1,f,c
 13394  01775A  0EF8               	movlw	-8
 13395  01775C  36E3               	rlcf	plusw1,f,c
 13396  01775E  0EF9               	movlw	-7
 13397  017760  36E3               	rlcf	plusw1,f,c
 13398  017762  0EFA               	movlw	-6
 13399  017764  36E3               	rlcf	plusw1,f,c
 13400  017766  0EFB               	movlw	-5
 13401  017768  36E3               	rlcf	plusw1,f,c
 13402  01776A  0EFC               	movlw	-4
 13403  01776C  36E3               	rlcf	plusw1,f,c
 13404  01776E  0EFD               	movlw	-3
 13405  017770  36E3               	rlcf	plusw1,f,c
 13406  017772  0EFE               	movlw	-2
 13407  017774  36E3               	rlcf	plusw1,f,c
 13408                           
 13409                           ;stkvar	_divisor @ sp[(-9)+-16]
 13410                           ;stkvar	_dividend @ sp[(-9)+-8]
 13411  017776  50E1               	movf	fsr1l,w,c
 13412  017778  0FEF               	addlw	-17
 13413  01777A  6ED9               	movwf	fsr2l,c
 13414  01777C  50E2               	movf	fsr1h,w,c
 13415  01777E  6EDA               	movwf	fsr2h,c
 13416  017780  0EFF               	movlw	255
 13417  017782  22DA               	addwfc	fsr2h,f,c
 13418  017784  0EE7               	movlw	-25
 13419  017786  50E3               	movf	plusw1,w,c
 13420  017788  5CDE               	subwf	postinc2,w,c
 13421  01778A  0EE8               	movlw	-24
 13422  01778C  50E3               	movf	plusw1,w,c
 13423  01778E  58DE               	subwfb	postinc2,w,c
 13424  017790  0EE9               	movlw	-23
 13425  017792  50E3               	movf	plusw1,w,c
 13426  017794  58DE               	subwfb	postinc2,w,c
 13427  017796  0EEA               	movlw	-22
 13428  017798  50E3               	movf	plusw1,w,c
 13429  01779A  58DE               	subwfb	postinc2,w,c
 13430  01779C  0EEB               	movlw	-21
 13431  01779E  50E3               	movf	plusw1,w,c
 13432  0177A0  58DE               	subwfb	postinc2,w,c
 13433  0177A2  0EEC               	movlw	-20
 13434  0177A4  50E3               	movf	plusw1,w,c
 13435  0177A6  58DE               	subwfb	postinc2,w,c
 13436  0177A8  0EED               	movlw	-19
 13437  0177AA  50E3               	movf	plusw1,w,c
 13438  0177AC  58DE               	subwfb	postinc2,w,c
 13439  0177AE  0EEE               	movlw	-18
 13440  0177B0  50E3               	movf	plusw1,w,c
 13441  0177B2  58DE               	subwfb	postinc2,w,c
 13442  0177B4  A0D8               	btfss	status,0,c
 13443  0177B6  D021               	goto	l8118
 13444                           
 13445                           ;stkvar	_divisor @ sp[(-9)+-16]
 13446                           ;stkvar	_dividend @ sp[(-9)+-8]
 13447  0177B8  50E1               	movf	fsr1l,w,c
 13448  0177BA  0FEF               	addlw	-17
 13449  0177BC  6ED9               	movwf	fsr2l,c
 13450  0177BE  50E2               	movf	fsr1h,w,c
 13451  0177C0  6EDA               	movwf	fsr2h,c
 13452  0177C2  0EFF               	movlw	255
 13453  0177C4  22DA               	addwfc	fsr2h,f,c
 13454  0177C6  0EE7               	movlw	-25
 13455  0177C8  50E3               	movf	plusw1,w,c
 13456  0177CA  5EDE               	subwf	postinc2,f,c
 13457  0177CC  0EE8               	movlw	-24
 13458  0177CE  50E3               	movf	plusw1,w,c
 13459  0177D0  5ADE               	subwfb	postinc2,f,c
 13460  0177D2  0EE9               	movlw	-23
 13461  0177D4  50E3               	movf	plusw1,w,c
 13462  0177D6  5ADE               	subwfb	postinc2,f,c
 13463  0177D8  0EEA               	movlw	-22
 13464  0177DA  50E3               	movf	plusw1,w,c
 13465  0177DC  5ADE               	subwfb	postinc2,f,c
 13466  0177DE  0EEB               	movlw	-21
 13467  0177E0  50E3               	movf	plusw1,w,c
 13468  0177E2  5ADE               	subwfb	postinc2,f,c
 13469  0177E4  0EEC               	movlw	-20
 13470  0177E6  50E3               	movf	plusw1,w,c
 13471  0177E8  5ADE               	subwfb	postinc2,f,c
 13472  0177EA  0EED               	movlw	-19
 13473  0177EC  50E3               	movf	plusw1,w,c
 13474  0177EE  5ADE               	subwfb	postinc2,f,c
 13475  0177F0  0EEE               	movlw	-18
 13476  0177F2  50E3               	movf	plusw1,w,c
 13477  0177F4  5ADE               	subwfb	postinc2,f,c
 13478                           
 13479                           ;stkvar	_quotient @ sp[(-9)+0]
 13480  0177F6  0EF7               	movlw	-9
 13481  0177F8  80E3               	bsf	plusw1,0,c
 13482  0177FA                     l8118:
 13483                           
 13484                           ;stkvar	_divisor @ sp[(-9)+-16]
 13485  0177FA  90D8               	bcf	status,0,c
 13486  0177FC  0EEE               	movlw	-18
 13487  0177FE  32E3               	rrcf	plusw1,f,c
 13488  017800  0EED               	movlw	-19
 13489  017802  32E3               	rrcf	plusw1,f,c
 13490  017804  0EEC               	movlw	-20
 13491  017806  32E3               	rrcf	plusw1,f,c
 13492  017808  0EEB               	movlw	-21
 13493  01780A  32E3               	rrcf	plusw1,f,c
 13494  01780C  0EEA               	movlw	-22
 13495  01780E  32E3               	rrcf	plusw1,f,c
 13496  017810  0EE9               	movlw	-23
 13497  017812  32E3               	rrcf	plusw1,f,c
 13498  017814  0EE8               	movlw	-24
 13499  017816  32E3               	rrcf	plusw1,f,c
 13500  017818  0EE7               	movlw	-25
 13501  01781A  32E3               	rrcf	plusw1,f,c
 13502                           
 13503                           ;stkvar	_counter @ sp[(-9)+8]
 13504  01781C  0EFF               	movlw	-1
 13505  01781E  50E3               	movf	plusw1,w,c
 13506  017820  6E01               	movwf	btemp^0,c
 13507  017822  0E01               	movlw	1
 13508  017824  5E01               	subwf	btemp^0,f,c
 13509  017826  0EFF               	movlw	-1
 13510  017828  0060  F007  FFE3   	movff	btemp,plusw1
 13511  01782E  A4D8               	btfss	status,2,c
 13512  017830  D791               	goto	u6880
 13513  017832                     u6900:
 13514                           
 13515                           ;stkvar	_quotient @ sp[(-9)+0]
 13516  017832  0EF7               	movlw	247
 13517  017834  24E1               	addwf	fsr1l,w,c
 13518  017836  6ED9               	movwf	fsr2l,c
 13519  017838  0EFF               	movlw	255
 13520  01783A  20E2               	addwfc	fsr1h,w,c
 13521  01783C  6EDA               	movwf	fsr2h,c
 13522                           
 13523                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 13524  01783E  0E08               	movlw	8
 13525  017840  6E01               	movwf	btemp^0,c
 13526  017842  0EEF               	movlw	-17
 13527  017844                     us691999:
 13528  017844  006F FF7B FFE3     	movff	postinc2,plusw1
 13529  01784A  28E8               	incf	wreg,w,c
 13530  01784C  2E01               	decfsz	btemp^0,f,c
 13531  01784E  D7FA               	bra	us691999
 13532                           
 13533                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13534  017850  0EF7               	movlw	247
 13535  017852  26E1               	addwf	fsr1l,f,c
 13536  017854  0EFF               	movlw	255
 13537  017856  22E2               	addwfc	fsr1h,f,c
 13538  017858  0012               	return		;funcret
 13539  01785A                     __end_of___lodiv:
 13540                           	opt callstack 0
 13541                           
 13542 ;; *************** function _strncmp *****************
 13543 ;; Defined at:
 13544 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 13545 ;; Parameters:    Size  Location     Type
 13546 ;;  _l              2  [STACK] PTR const unsigned char 
 13547 ;;		 -> ct(3), STR_47(79), STR_45(3), STR_44(3), 
 13548 ;;		 -> STR_43(19), STR_42(19), STR_41(19), STR_40(19), 
 13549 ;;		 -> STR_39(19), STR_38(19), STR_37(24), STR_36(15), 
 13550 ;;		 -> STR_35(15), STR_34(15), STR_33(10), STR_32(10), 
 13551 ;;		 -> STR_31(19), STR_30(19), STR_27(3), STR_26(3), 
 13552 ;;		 -> STR_25(3), STR_24(17), STR_23(16), STR_22(16), 
 13553 ;;		 -> STR_21(19), STR_20(20), STR_19(19), STR_18(19), 
 13554 ;;		 -> STR_17(19), STR_16(19), STR_15(19), STR_14(19), 
 13555 ;;		 -> STR_13(19), STR_12(17), STR_11(16), STR_10(16), 
 13556 ;;		 -> STR_9(23), STR_8(17), STR_6(15), STR_5(17), 
 13557 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 13558 ;;  _r              2  [STACK] PTR const unsigned char 
 13559 ;;		 -> STR_81(3), STR_77(3), STR_72(3), STR_67(3), 
 13560 ;;		 -> STR_62(3), STR_58(3), 
 13561 ;;  n               2  [STACK] unsigned int 
 13562 ;; Auto vars:     Size  Location     Type
 13563 ;;  r               2  [STACK] PTR const unsigned char 
 13564 ;;		 -> STR_81(3), STR_77(3), STR_72(3), STR_67(3), 
 13565 ;;		 -> STR_62(3), STR_58(3), 
 13566 ;;  l               2  [STACK] PTR const unsigned char 
 13567 ;;		 -> ct(3), STR_47(79), STR_45(3), STR_44(3), 
 13568 ;;		 -> STR_43(19), STR_42(19), STR_41(19), STR_40(19), 
 13569 ;;		 -> STR_39(19), STR_38(19), STR_37(24), STR_36(15), 
 13570 ;;		 -> STR_35(15), STR_34(15), STR_33(10), STR_32(10), 
 13571 ;;		 -> STR_31(19), STR_30(19), STR_27(3), STR_26(3), 
 13572 ;;		 -> STR_25(3), STR_24(17), STR_23(16), STR_22(16), 
 13573 ;;		 -> STR_21(19), STR_20(20), STR_19(19), STR_18(19), 
 13574 ;;		 -> STR_17(19), STR_16(19), STR_15(19), STR_14(19), 
 13575 ;;		 -> STR_13(19), STR_12(17), STR_11(16), STR_10(16), 
 13576 ;;		 -> STR_9(23), STR_8(17), STR_6(15), STR_5(17), 
 13577 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 13578 ;; Return value:  Size  Location     Type
 13579 ;;                  2  [STACK] int 
 13580 ;; Registers used:
 13581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 13582 ;; Tracked objects:
 13583 ;;		On entry : 0/0
 13584 ;;		On exit  : 0/0
 13585 ;;		Unchanged: 0/0
 13586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13591 ;;Total ram usage:        0 bytes
 13592 ;; Hardware stack levels used:    1
 13593 ;; Hardware stack levels required when called:   15
 13594 ;; This function calls:
 13595 ;;		Nothing
 13596 ;; This function is called by:
 13597 ;;		_vfpfcnvrt
 13598 ;; This function uses a reentrant model
 13599 ;;
 13600                           
 13601                           	psect	text53
 13602  016B52                     __ptext53:
 13603                           	opt callstack 0
 13604  016B52                     _strncmp:
 13605                           	opt callstack 0
 13606                           
 13607                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13608  016B52  52E6               	movf	postinc1,f,c
 13609  016B54  52E6               	movf	postinc1,f,c
 13610  016B56  52E6               	movf	postinc1,f,c
 13611  016B58  52E6               	movf	postinc1,f,c
 13612                           
 13613                           ;stkvar	__l @ sp[(-4)+-2]
 13614                           
 13615                           ;incstack = 0
 13616 ;; hardware stack exceeded
 13617  016B5A  0EFA               	movlw	-6
 13618  016B5C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13619  016B62  0EFB               	movlw	-5
 13620  016B64  006F FF8C  F00C    	movff	plusw1,btemp+11
 13621                           
 13622                           ;stkvar	_l @ sp[(-4)+2]
 13623  016B6A  0EFF               	movlw	-1
 13624  016B6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13625  016B72  0EFE               	movlw	-2
 13626  016B74  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13627                           
 13628                           ;stkvar	__r @ sp[(-4)+-4]
 13629  016B7A  0EF8               	movlw	-8
 13630  016B7C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13631  016B82  0EF9               	movlw	-7
 13632  016B84  006F FF8C  F00C    	movff	plusw1,btemp+11
 13633                           
 13634                           ;stkvar	_r @ sp[(-4)+0]
 13635  016B8A  0EFD               	movlw	-3
 13636  016B8C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13637  016B92  0EFC               	movlw	-4
 13638  016B94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13639                           
 13640                           ;stkvar	_n @ sp[(-4)+-6]
 13641  016B9A  0EF6               	movlw	-10
 13642  016B9C  006F FF8C  F001    	movff	plusw1,btemp
 13643  016BA2  0E01               	movlw	1
 13644  016BA4  5E01               	subwf	btemp^0,f,c
 13645  016BA6  0EF6               	movlw	-10
 13646  016BA8  0060  F007  FFE3   	movff	btemp,plusw1
 13647  016BAE  0EF7               	movlw	-9
 13648  016BB0  006F FF8C  F001    	movff	plusw1,btemp
 13649  016BB6  0E00               	movlw	0
 13650  016BB8  5A01               	subwfb	btemp^0,f,c
 13651  016BBA  0EF7               	movlw	-9
 13652  016BBC  0060  F007  FFE3   	movff	btemp,plusw1
 13653  016BC2  0EF6               	movlw	-10
 13654  016BC4  28E3               	incf	plusw1,w,c
 13655  016BC6  E13F               	bnz	l8814
 13656  016BC8  0EF7               	movlw	-9
 13657  016BCA  28E3               	incf	plusw1,w,c
 13658  016BCC  A4D8               	btfss	status,2,c
 13659  016BCE  D03B               	goto	l8814
 13660  016BD0  0E00               	movlw	0
 13661  016BD2  6E01               	movwf	btemp^0,c
 13662  016BD4  0E00               	movlw	0
 13663  016BD6  6E02               	movwf	(btemp+1)^0,c
 13664  016BD8  D0C7               	goto	l3342
 13665  016BDA                     l8812:
 13666                           
 13667                           ;stkvar	_l @ sp[(-4)+2]
 13668  016BDA  0EFE               	movlw	-2
 13669  016BDC  50E3               	movf	plusw1,w,c
 13670  016BDE  0F01               	addlw	1
 13671  016BE0  6E01               	movwf	btemp^0,c
 13672  016BE2  0EFE               	movlw	-2
 13673  016BE4  0060  F007  FFE3   	movff	btemp,plusw1
 13674  016BEA  6A01               	clrf	btemp^0,c
 13675  016BEC  0EFF               	movlw	-1
 13676  016BEE  50E3               	movf	plusw1,w,c
 13677  016BF0  2001               	addwfc	btemp^0,w,c
 13678  016BF2  6E01               	movwf	btemp^0,c
 13679  016BF4  0EFF               	movlw	-1
 13680  016BF6  0060  F007  FFE3   	movff	btemp,plusw1
 13681                           
 13682                           ;stkvar	_r @ sp[(-4)+0]
 13683  016BFC  0EFC               	movlw	-4
 13684  016BFE  50E3               	movf	plusw1,w,c
 13685  016C00  0F01               	addlw	1
 13686  016C02  6E01               	movwf	btemp^0,c
 13687  016C04  0EFC               	movlw	-4
 13688  016C06  0060  F007  FFE3   	movff	btemp,plusw1
 13689  016C0C  6A01               	clrf	btemp^0,c
 13690  016C0E  0EFD               	movlw	-3
 13691  016C10  50E3               	movf	plusw1,w,c
 13692  016C12  2001               	addwfc	btemp^0,w,c
 13693  016C14  6E01               	movwf	btemp^0,c
 13694  016C16  0EFD               	movlw	-3
 13695  016C18  0060  F007  FFE3   	movff	btemp,plusw1
 13696                           
 13697                           ;stkvar	_n @ sp[(-4)+-6]
 13698  016C1E  0EF6               	movlw	-10
 13699  016C20  006F FF8C  F001    	movff	plusw1,btemp
 13700  016C26  0E01               	movlw	1
 13701  016C28  5E01               	subwf	btemp^0,f,c
 13702  016C2A  0EF6               	movlw	-10
 13703  016C2C  0060  F007  FFE3   	movff	btemp,plusw1
 13704  016C32  0EF7               	movlw	-9
 13705  016C34  006F FF8C  F001    	movff	plusw1,btemp
 13706  016C3A  0E00               	movlw	0
 13707  016C3C  5A01               	subwfb	btemp^0,f,c
 13708  016C3E  0EF7               	movlw	-9
 13709  016C40  0060  F007  FFE3   	movff	btemp,plusw1
 13710  016C46                     l8814:
 13711                           
 13712                           ;stkvar	_l @ sp[(-4)+2]
 13713  016C46  0EFE               	movlw	-2
 13714  016C48  006F FF8F FFF6     	movff	plusw1,tblptrl
 13715  016C4E  0EFF               	movlw	-1
 13716  016C50  006F FF8F FFF7     	movff	plusw1,tblptrh
 13717  016C56  0E00               	movlw	low (__mediumconst shr (0+16))
 13718  016C58  6EF8               	movwf	tblptru,c
 13719  016C5A  0E1F               	movlw	(high __ramtop+-1)
 13720  016C5C  64F7               	cpfsgt	tblptrh,c
 13721  016C5E  D003               	bra	u8197
 13722  016C60  0008               	tblrd		*
 13723  016C62  50F5               	movf	tablat,w,c
 13724  016C64  D007               	bra	u8190
 13725  016C66                     u8197:
 13726  016C66  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13727  016C6C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13728  016C72  50EF               	movf	indf0,w,c
 13729  016C74                     u8190:
 13730  016C74  0900               	iorlw	0
 13731  016C76  B4D8               	btfsc	status,2,c
 13732  016C78  D04A               	goto	u8230
 13733                           
 13734                           ;stkvar	_r @ sp[(-4)+0]
 13735  016C7A  50E1               	movf	fsr1l,w,c
 13736  016C7C  0FFC               	addlw	-4
 13737  016C7E  6ED9               	movwf	fsr2l,c
 13738  016C80  50E2               	movf	fsr1h,w,c
 13739  016C82  6EDA               	movwf	fsr2h,c
 13740  016C84  0EFF               	movlw	255
 13741  016C86  22DA               	addwfc	fsr2h,f,c
 13742  016C88  006F FF7B FFF6     	movff	postinc2,tblptrl
 13743  016C8E  006F FF77 FFF7     	movff	postdec2,tblptrh
 13744  016C94                     	if	0	;tblptru may be non-zero
 13745  016C94                     	endif
 13746  016C94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13747  016C94  0E00               	movlw	low (__mediumconst shr (0+16))
 13748  016C96  6EF8               	movwf	tblptru,c
 13749  016C98                     	endif
 13750  016C98  0008               	tblrd		*
 13751  016C9A  50F5               	movf	tablat,w,c
 13752  016C9C  0900               	iorlw	0
 13753  016C9E  B4D8               	btfsc	status,2,c
 13754  016CA0  D036               	goto	u8230
 13755                           
 13756                           ;stkvar	_n @ sp[(-4)+-6]
 13757  016CA2  0EF6               	movlw	-10
 13758  016CA4  006F FF8C  F001    	movff	plusw1,btemp
 13759  016CAA  0EF7               	movlw	-9
 13760  016CAC  50E3               	movf	plusw1,w,c
 13761  016CAE  1001               	iorwf	btemp^0,w,c
 13762  016CB0  B4D8               	btfsc	status,2,c
 13763  016CB2  D02D               	goto	u8230
 13764                           
 13765                           ;stkvar	_r @ sp[(-4)+0]
 13766  016CB4  50E1               	movf	fsr1l,w,c
 13767  016CB6  0FFC               	addlw	-4
 13768  016CB8  6ED9               	movwf	fsr2l,c
 13769  016CBA  50E2               	movf	fsr1h,w,c
 13770  016CBC  6EDA               	movwf	fsr2h,c
 13771  016CBE  0EFF               	movlw	255
 13772  016CC0  22DA               	addwfc	fsr2h,f,c
 13773  016CC2  006F FF7B FFF6     	movff	postinc2,tblptrl
 13774  016CC8  006F FF77 FFF7     	movff	postdec2,tblptrh
 13775  016CCE                     	if	0	;tblptru may be non-zero
 13776  016CCE                     	endif
 13777  016CCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13778  016CCE  0E00               	movlw	low (__mediumconst shr (0+16))
 13779  016CD0  6EF8               	movwf	tblptru,c
 13780  016CD2                     	endif
 13781  016CD2  0008               	tblrd		*
 13782  016CD4  006F FFD4  F00C    	movff	tablat,btemp+11
 13783                           
 13784                           ;stkvar	_l @ sp[(-4)+2]
 13785  016CDA  0EFE               	movlw	-2
 13786  016CDC  006F FF8F FFF6     	movff	plusw1,tblptrl
 13787  016CE2  0EFF               	movlw	-1
 13788  016CE4  006F FF8F FFF7     	movff	plusw1,tblptrh
 13789  016CEA  0E00               	movlw	low (__mediumconst shr (0+16))
 13790  016CEC  6EF8               	movwf	tblptru,c
 13791  016CEE  0E1F               	movlw	(high __ramtop+-1)
 13792  016CF0  64F7               	cpfsgt	tblptrh,c
 13793  016CF2  D003               	bra	u8237
 13794  016CF4  0008               	tblrd		*
 13795  016CF6  50F5               	movf	tablat,w,c
 13796  016CF8  D007               	bra	u8235
 13797  016CFA                     u8237:
 13798  016CFA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13799  016D00  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13800  016D06  50EF               	movf	indf0,w,c
 13801  016D08                     u8235:
 13802  016D08  180C               	xorwf	(btemp+11)^0,w,c
 13803  016D0A  B4D8               	btfsc	status,2,c
 13804  016D0C  D766               	goto	l8812
 13805  016D0E                     u8230:
 13806                           
 13807                           ;stkvar	_l @ sp[(-4)+2]
 13808  016D0E  0EFE               	movlw	-2
 13809  016D10  006F FF8F FFF6     	movff	plusw1,tblptrl
 13810  016D16  0EFF               	movlw	-1
 13811  016D18  006F FF8F FFF7     	movff	plusw1,tblptrh
 13812  016D1E  0E00               	movlw	low (__mediumconst shr (0+16))
 13813  016D20  6EF8               	movwf	tblptru,c
 13814  016D22  0E1F               	movlw	(high __ramtop+-1)
 13815  016D24  64F7               	cpfsgt	tblptrh,c
 13816  016D26  D003               	bra	u8247
 13817  016D28  0008               	tblrd		*
 13818  016D2A  50F5               	movf	tablat,w,c
 13819  016D2C  D007               	bra	u8240
 13820  016D2E                     u8247:
 13821  016D2E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13822  016D34  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13823  016D3A  50EF               	movf	indf0,w,c
 13824  016D3C                     u8240:
 13825  016D3C  6E01               	movwf	btemp^0,c
 13826  016D3E  6A02               	clrf	(btemp+1)^0,c
 13827                           
 13828                           ;stkvar	_r @ sp[(-4)+0]
 13829  016D40  50E1               	movf	fsr1l,w,c
 13830  016D42  0FFC               	addlw	-4
 13831  016D44  6ED9               	movwf	fsr2l,c
 13832  016D46  50E2               	movf	fsr1h,w,c
 13833  016D48  6EDA               	movwf	fsr2h,c
 13834  016D4A  0EFF               	movlw	255
 13835  016D4C  22DA               	addwfc	fsr2h,f,c
 13836  016D4E  006F FF7B FFF6     	movff	postinc2,tblptrl
 13837  016D54  006F FF77 FFF7     	movff	postdec2,tblptrh
 13838  016D5A                     	if	0	;tblptru may be non-zero
 13839  016D5A                     	endif
 13840  016D5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13841  016D5A  0E00               	movlw	low (__mediumconst shr (0+16))
 13842  016D5C  6EF8               	movwf	tblptru,c
 13843  016D5E                     	endif
 13844  016D5E  0008               	tblrd		*
 13845  016D60  50F5               	movf	tablat,w,c
 13846  016D62  5E01               	subwf	btemp^0,f,c
 13847  016D64  0E00               	movlw	0
 13848  016D66  5A02               	subwfb	(btemp+1)^0,f,c
 13849  016D68                     l3342:
 13850                           
 13851                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 13852  016D68  0EF6               	movlw	246
 13853  016D6A  26E1               	addwf	fsr1l,f,c
 13854  016D6C  0EFF               	movlw	255
 13855  016D6E  22E2               	addwfc	fsr1h,f,c
 13856  016D70  0012               	return		;funcret
 13857  016D72                     __end_of_strncmp:
 13858                           	opt callstack 0
 13859                           
 13860 ;; *************** function _stoa *****************
 13861 ;; Defined at:
 13862 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13863 ;; Parameters:    Size  Location     Type
 13864 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13865 ;;		 -> f(6), NULL(0), 
 13866 ;;  s               2  [STACK] PTR unsigned char 
 13867 ;;		 -> ?_printf(2), ?_sprintf(2), STR_29(9), STR_28(12), 
 13868 ;;		 -> D.lcd(288), D(290), T(144), STR_7(4), 
 13869 ;;		 -> STR_3(4), V(188), 
 13870 ;; Auto vars:     Size  Location     Type
 13871 ;;  nuls            7  [STACK] unsigned char [7]
 13872 ;;  l               2  [STACK] int 
 13873 ;;  p               2  [STACK] int 
 13874 ;;  cp              2  [STACK] PTR unsigned char 
 13875 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_29(9), 
 13876 ;;		 -> STR_28(12), D.lcd(288), D(290), T(144), 
 13877 ;;		 -> STR_7(4), STR_3(4), V(188), 
 13878 ;;  w               2  [STACK] int 
 13879 ;;  i               2  [STACK] int 
 13880 ;; Return value:  Size  Location     Type
 13881 ;;                  2  [STACK] int 
 13882 ;; Registers used:
 13883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13884 ;; Tracked objects:
 13885 ;;		On entry : 0/0
 13886 ;;		On exit  : 0/0
 13887 ;;		Unchanged: 0/0
 13888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13893 ;;Total ram usage:        0 bytes
 13894 ;; Hardware stack levels used:    1
 13895 ;; Hardware stack levels required when called:   18
 13896 ;; This function calls:
 13897 ;;		_fputc
 13898 ;;		_strlen
 13899 ;; This function is called by:
 13900 ;;		_vfpfcnvrt
 13901 ;; This function uses a reentrant model
 13902 ;;
 13903                           
 13904                           	psect	text54
 13905  016160                     __ptext54:
 13906                           	opt callstack 0
 13907  016160                     _stoa:
 13908                           	opt callstack 0
 13909                           
 13910                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13911  016160  0E11               	movlw	17
 13912  016162  26E1               	addwf	fsr1l,f,c
 13913  016164  0E00               	movlw	0
 13914  016166  22E2               	addwfc	fsr1h,f,c
 13915                           
 13916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 13917                           
 13918                           ;incstack = 0
 13919 ;; hardware stack exceeded
 13920  016168  EE20  F3EC         	lfsr	2,stoa@F1166
 13921                           
 13922                           ;stkvar	_nuls @ sp[(-17)+0]
 13923  01616C  0E07               	movlw	7
 13924  01616E  6E01               	movwf	btemp^0,c
 13925  016170  0EEF               	movlw	-17
 13926  016172                     us1080999:
 13927  016172  006F FF7B FFE3     	movff	postinc2,plusw1
 13928  016178  28E8               	incf	wreg,w,c
 13929  01617A  2E01               	decfsz	btemp^0,f,c
 13930  01617C  D7FA               	bra	us1080999
 13931                           
 13932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 13933                           ;stkvar	_s @ sp[(-17)+-4]
 13934  01617E  0EEB               	movlw	-21
 13935  016180  006F FF8C  F00B    	movff	plusw1,btemp+10
 13936  016186  0EEC               	movlw	-20
 13937  016188  006F FF8C  F00C    	movff	plusw1,btemp+11
 13938                           
 13939                           ;stkvar	_cp @ sp[(-17)+11]
 13940  01618E  0EFB               	movlw	-5
 13941  016190  0060  F033  FFE3   	movff	btemp+11,plusw1
 13942  016196  0EFA               	movlw	-6
 13943  016198  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13944                           
 13945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 13946                           ;stkvar	_cp @ sp[(-17)+11]
 13947  01619E  0EFA               	movlw	-6
 13948  0161A0  006F FF8C  F001    	movff	plusw1,btemp
 13949  0161A6  0EFB               	movlw	-5
 13950  0161A8  50E3               	movf	plusw1,w,c
 13951  0161AA  1001               	iorwf	btemp^0,w,c
 13952  0161AC  A4D8               	btfss	status,2,c
 13953  0161AE  D00E               	goto	l11352
 13954                           
 13955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 13956                           ;stkvar	_nuls @ sp[(-17)+0]
 13957  0161B0  0EEF               	movlw	239
 13958  0161B2  24E1               	addwf	fsr1l,w,c
 13959  0161B4  6E0B               	movwf	(btemp+10)^0,c
 13960  0161B6  0EFF               	movlw	255
 13961  0161B8  20E2               	addwfc	fsr1h,w,c
 13962  0161BA  6E0C               	movwf	(btemp+11)^0,c
 13963                           
 13964                           ;stkvar	_cp @ sp[(-17)+11]
 13965  0161BC  0EFB               	movlw	-5
 13966  0161BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 13967  0161C4  0EFA               	movlw	-6
 13968  0161C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13969  0161CC                     l11352:
 13970                           
 13971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 13972                           ;stkvar	_cp @ sp[(-17)+11]
 13973  0161CC  0EFA               	movlw	-6
 13974  0161CE  006F FF8F FFE6     	movff	plusw1,postinc1
 13975  0161D4  006F FF8F FFE6     	movff	plusw1,postinc1
 13976  0161DA  ECB4  F0C8         	call	_strlen	;wreg free
 13977                           
 13978                           ;stkvar	_l @ sp[(-17)+7]
 13979  0161DE  0EF6               	movlw	-10
 13980  0161E0  0060  F007  FFE3   	movff	btemp,plusw1
 13981  0161E6  0EF7               	movlw	-9
 13982  0161E8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13983                           
 13984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 13985                           ;stkvar	_p @ sp[(-17)+9]
 13986  0161EE  0EF8               	movlw	-8
 13987  0161F0  0060  F08F  FFE3   	movff	_prec,plusw1
 13988  0161F6  0EF9               	movlw	-7
 13989  0161F8  0060  F093  FFE3   	movff	_prec+1,plusw1
 13990                           
 13991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 13992                           ;stkvar	_p @ sp[(-17)+9]
 13993  0161FE  0EF9               	movlw	-7
 13994  016200  BEE3               	btfsc	plusw1,7,c
 13995  016202  D023               	goto	l2172
 13996                           
 13997                           ;stkvar	_l @ sp[(-17)+7]
 13998                           ;stkvar	_p @ sp[(-17)+9]
 13999  016204  50E1               	movf	fsr1l,w,c
 14000  016206  0FF8               	addlw	-8
 14001  016208  6ED9               	movwf	fsr2l,c
 14002  01620A  50E2               	movf	fsr1h,w,c
 14003  01620C  6EDA               	movwf	fsr2h,c
 14004  01620E  0EFF               	movlw	255
 14005  016210  22DA               	addwfc	fsr2h,f,c
 14006  016212  0EF6               	movlw	-10
 14007  016214  50E3               	movf	plusw1,w,c
 14008  016216  5CDE               	subwf	postinc2,w,c
 14009  016218  50DE               	movf	postinc2,w,c
 14010  01621A  0A80               	xorlw	128
 14011  01621C  6E01               	movwf	btemp^0,c
 14012  01621E  0EF7               	movlw	-9
 14013  016220  50E3               	movf	plusw1,w,c
 14014  016222  0A80               	xorlw	128
 14015  016224  5801               	subwfb	btemp^0,w,c
 14016  016226  B0D8               	btfsc	status,0,c
 14017  016228  D010               	goto	l2172
 14018                           
 14019                           ;stkvar	_p @ sp[(-17)+9]
 14020                           ;stkvar	_l @ sp[(-17)+7]
 14021  01622A  0EF8               	movlw	-8
 14022  01622C  006F FF8C  F001    	movff	plusw1,btemp
 14023  016232  0EF6               	movlw	-10
 14024  016234  0060  F007  FFE3   	movff	btemp,plusw1
 14025  01623A  0EF9               	movlw	-7
 14026  01623C  006F FF8C  F001    	movff	plusw1,btemp
 14027  016242  0EF7               	movlw	-9
 14028  016244  0060  F007  FFE3   	movff	btemp,plusw1
 14029  01624A                     l2172:
 14030                           
 14031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 14032                           ;stkvar	_l @ sp[(-17)+7]
 14033                           ;stkvar	_p @ sp[(-17)+9]
 14034  01624A  0EF6               	movlw	-10
 14035  01624C  006F FF8C  F001    	movff	plusw1,btemp
 14036  016252  0EF8               	movlw	-8
 14037  016254  0060  F007  FFE3   	movff	btemp,plusw1
 14038  01625A  0EF7               	movlw	-9
 14039  01625C  006F FF8C  F001    	movff	plusw1,btemp
 14040  016262  0EF9               	movlw	-7
 14041  016264  0060  F007  FFE3   	movff	btemp,plusw1
 14042                           
 14043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 14044                           ;stkvar	_w @ sp[(-17)+13]
 14045  01626A  0EFC               	movlw	-4
 14046  01626C  0060  F087  FFE3   	movff	_width,plusw1
 14047  016272  0EFD               	movlw	-3
 14048  016274  0060  F08B  FFE3   	movff	_width+1,plusw1
 14049                           
 14050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 14051  01627A  A025               	btfss	_flags^0,0,c
 14052  01627C  D01F               	goto	l11372
 14053  01627E  D031               	goto	u10850
 14054  016280                     l11368:
 14055                           
 14056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 14057                           ;stkvar	_fp @ sp[(-17)+-2]
 14058  016280  0EED               	movlw	-19
 14059  016282  006F FF8F FFE6     	movff	plusw1,postinc1
 14060  016288  006F FF8F FFE6     	movff	plusw1,postinc1
 14061  01628E  0E20               	movlw	32
 14062  016290  6EE6               	movwf	postinc1,c
 14063  016292  0E00               	movlw	0
 14064  016294  6EE6               	movwf	postinc1,c
 14065  016296  EC15  F0C2         	call	_fputc	;wreg free
 14066                           
 14067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 14068                           ;stkvar	_l @ sp[(-17)+7]
 14069  01629A  0EF6               	movlw	-10
 14070  01629C  50E3               	movf	plusw1,w,c
 14071  01629E  0F01               	addlw	1
 14072  0162A0  6E01               	movwf	btemp^0,c
 14073  0162A2  0EF6               	movlw	-10
 14074  0162A4  0060  F007  FFE3   	movff	btemp,plusw1
 14075  0162AA  6A01               	clrf	btemp^0,c
 14076  0162AC  0EF7               	movlw	-9
 14077  0162AE  50E3               	movf	plusw1,w,c
 14078  0162B0  2001               	addwfc	btemp^0,w,c
 14079  0162B2  6E01               	movwf	btemp^0,c
 14080  0162B4  0EF7               	movlw	-9
 14081  0162B6  0060  F007  FFE3   	movff	btemp,plusw1
 14082  0162BC                     l11372:
 14083                           
 14084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 14085                           ;stkvar	_w @ sp[(-17)+13]
 14086                           ;stkvar	_l @ sp[(-17)+7]
 14087  0162BC  50E1               	movf	fsr1l,w,c
 14088  0162BE  0FF6               	addlw	-10
 14089  0162C0  6ED9               	movwf	fsr2l,c
 14090  0162C2  50E2               	movf	fsr1h,w,c
 14091  0162C4  6EDA               	movwf	fsr2h,c
 14092  0162C6  0EFF               	movlw	255
 14093  0162C8  22DA               	addwfc	fsr2h,f,c
 14094  0162CA  0EFC               	movlw	-4
 14095  0162CC  50E3               	movf	plusw1,w,c
 14096  0162CE  5CDE               	subwf	postinc2,w,c
 14097  0162D0  50DE               	movf	postinc2,w,c
 14098  0162D2  0A80               	xorlw	128
 14099  0162D4  6E01               	movwf	btemp^0,c
 14100  0162D6  0EFD               	movlw	-3
 14101  0162D8  50E3               	movf	plusw1,w,c
 14102  0162DA  0A80               	xorlw	128
 14103  0162DC  5801               	subwfb	btemp^0,w,c
 14104  0162DE  A0D8               	btfss	status,0,c
 14105  0162E0  D7CF               	goto	l11368
 14106  0162E2                     u10850:
 14107                           
 14108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 14109                           ;stkvar	_i @ sp[(-17)+15]
 14110  0162E2  0EFE               	movlw	-2
 14111  0162E4  6AE3               	clrf	plusw1,c
 14112  0162E6  0EFF               	movlw	-1
 14113  0162E8  6AE3               	clrf	plusw1,c
 14114                           
 14115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 14116  0162EA  D045               	goto	l11382
 14117  0162EC                     l11376:
 14118                           
 14119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 14120                           ;stkvar	_fp @ sp[(-17)+-2]
 14121  0162EC  0EED               	movlw	-19
 14122  0162EE  006F FF8F FFE6     	movff	plusw1,postinc1
 14123  0162F4  006F FF8F FFE6     	movff	plusw1,postinc1
 14124                           
 14125                           ;stkvar	_cp @ sp[(-19)+11]
 14126  0162FA  0EF8               	movlw	-8
 14127  0162FC  006F FF8F FFF6     	movff	plusw1,tblptrl
 14128  016302  0EF9               	movlw	-7
 14129  016304  006F FF8F FFF7     	movff	plusw1,tblptrh
 14130  01630A  0E00               	movlw	low (__mediumconst shr (0+16))
 14131  01630C  6EF8               	movwf	tblptru,c
 14132  01630E  0E1F               	movlw	(high __ramtop+-1)
 14133  016310  64F7               	cpfsgt	tblptrh,c
 14134  016312  D003               	bra	u10867
 14135  016314  0008               	tblrd		*
 14136  016316  50F5               	movf	tablat,w,c
 14137  016318  D007               	bra	u10860
 14138  01631A                     u10867:
 14139  01631A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14140  016320  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14141  016326  50EF               	movf	indf0,w,c
 14142  016328                     u10860:
 14143  016328  6EE6               	movwf	postinc1,c
 14144  01632A  0E00               	movlw	0
 14145  01632C  6EE6               	movwf	postinc1,c
 14146  01632E  EC15  F0C2         	call	_fputc	;wreg free
 14147                           
 14148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 14149                           ;stkvar	_cp @ sp[(-17)+11]
 14150  016332  0EFA               	movlw	-6
 14151  016334  50E3               	movf	plusw1,w,c
 14152  016336  0F01               	addlw	1
 14153  016338  6E01               	movwf	btemp^0,c
 14154  01633A  0EFA               	movlw	-6
 14155  01633C  0060  F007  FFE3   	movff	btemp,plusw1
 14156  016342  6A01               	clrf	btemp^0,c
 14157  016344  0EFB               	movlw	-5
 14158  016346  50E3               	movf	plusw1,w,c
 14159  016348  2001               	addwfc	btemp^0,w,c
 14160  01634A  6E01               	movwf	btemp^0,c
 14161  01634C  0EFB               	movlw	-5
 14162  01634E  0060  F007  FFE3   	movff	btemp,plusw1
 14163                           
 14164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 14165                           ;stkvar	_i @ sp[(-17)+15]
 14166  016354  0EFE               	movlw	-2
 14167  016356  50E3               	movf	plusw1,w,c
 14168  016358  0F01               	addlw	1
 14169  01635A  6E01               	movwf	btemp^0,c
 14170  01635C  0EFE               	movlw	-2
 14171  01635E  0060  F007  FFE3   	movff	btemp,plusw1
 14172  016364  6A01               	clrf	btemp^0,c
 14173  016366  0EFF               	movlw	-1
 14174  016368  50E3               	movf	plusw1,w,c
 14175  01636A  2001               	addwfc	btemp^0,w,c
 14176  01636C  6E01               	movwf	btemp^0,c
 14177  01636E  0EFF               	movlw	-1
 14178  016370  0060  F007  FFE3   	movff	btemp,plusw1
 14179  016376                     l11382:
 14180                           
 14181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 14182                           ;stkvar	_p @ sp[(-17)+9]
 14183                           ;stkvar	_i @ sp[(-17)+15]
 14184  016376  50E1               	movf	fsr1l,w,c
 14185  016378  0FFE               	addlw	-2
 14186  01637A  6ED9               	movwf	fsr2l,c
 14187  01637C  50E2               	movf	fsr1h,w,c
 14188  01637E  6EDA               	movwf	fsr2h,c
 14189  016380  0EFF               	movlw	255
 14190  016382  22DA               	addwfc	fsr2h,f,c
 14191  016384  0EF8               	movlw	-8
 14192  016386  50E3               	movf	plusw1,w,c
 14193  016388  5CDE               	subwf	postinc2,w,c
 14194  01638A  50DE               	movf	postinc2,w,c
 14195  01638C  0A80               	xorlw	128
 14196  01638E  6E01               	movwf	btemp^0,c
 14197  016390  0EF9               	movlw	-7
 14198  016392  50E3               	movf	plusw1,w,c
 14199  016394  0A80               	xorlw	128
 14200  016396  5801               	subwfb	btemp^0,w,c
 14201  016398  A0D8               	btfss	status,0,c
 14202  01639A  D7A8               	goto	l11376
 14203                           
 14204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 14205  01639C  B025               	btfsc	_flags^0,0,c
 14206  01639E  D01F               	goto	l11390
 14207  0163A0  D031               	goto	u10890
 14208  0163A2                     l11386:
 14209                           
 14210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 14211                           ;stkvar	_fp @ sp[(-17)+-2]
 14212  0163A2  0EED               	movlw	-19
 14213  0163A4  006F FF8F FFE6     	movff	plusw1,postinc1
 14214  0163AA  006F FF8F FFE6     	movff	plusw1,postinc1
 14215  0163B0  0E20               	movlw	32
 14216  0163B2  6EE6               	movwf	postinc1,c
 14217  0163B4  0E00               	movlw	0
 14218  0163B6  6EE6               	movwf	postinc1,c
 14219  0163B8  EC15  F0C2         	call	_fputc	;wreg free
 14220                           
 14221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 14222                           ;stkvar	_l @ sp[(-17)+7]
 14223  0163BC  0EF6               	movlw	-10
 14224  0163BE  50E3               	movf	plusw1,w,c
 14225  0163C0  0F01               	addlw	1
 14226  0163C2  6E01               	movwf	btemp^0,c
 14227  0163C4  0EF6               	movlw	-10
 14228  0163C6  0060  F007  FFE3   	movff	btemp,plusw1
 14229  0163CC  6A01               	clrf	btemp^0,c
 14230  0163CE  0EF7               	movlw	-9
 14231  0163D0  50E3               	movf	plusw1,w,c
 14232  0163D2  2001               	addwfc	btemp^0,w,c
 14233  0163D4  6E01               	movwf	btemp^0,c
 14234  0163D6  0EF7               	movlw	-9
 14235  0163D8  0060  F007  FFE3   	movff	btemp,plusw1
 14236  0163DE                     l11390:
 14237                           
 14238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 14239                           ;stkvar	_w @ sp[(-17)+13]
 14240                           ;stkvar	_l @ sp[(-17)+7]
 14241  0163DE  50E1               	movf	fsr1l,w,c
 14242  0163E0  0FF6               	addlw	-10
 14243  0163E2  6ED9               	movwf	fsr2l,c
 14244  0163E4  50E2               	movf	fsr1h,w,c
 14245  0163E6  6EDA               	movwf	fsr2h,c
 14246  0163E8  0EFF               	movlw	255
 14247  0163EA  22DA               	addwfc	fsr2h,f,c
 14248  0163EC  0EFC               	movlw	-4
 14249  0163EE  50E3               	movf	plusw1,w,c
 14250  0163F0  5CDE               	subwf	postinc2,w,c
 14251  0163F2  50DE               	movf	postinc2,w,c
 14252  0163F4  0A80               	xorlw	128
 14253  0163F6  6E01               	movwf	btemp^0,c
 14254  0163F8  0EFD               	movlw	-3
 14255  0163FA  50E3               	movf	plusw1,w,c
 14256  0163FC  0A80               	xorlw	128
 14257  0163FE  5801               	subwfb	btemp^0,w,c
 14258  016400  A0D8               	btfss	status,0,c
 14259  016402  D7CF               	goto	l11386
 14260  016404                     u10890:
 14261                           
 14262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 14263                           ;stkvar	_l @ sp[(-17)+7]
 14264  016404  0EF6               	movlw	-10
 14265  016406  006F FF8C  F001    	movff	plusw1,btemp
 14266  01640C  0EF7               	movlw	-9
 14267  01640E  006F FF8C  F002    	movff	plusw1,btemp+1
 14268                           
 14269                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 14270  016414  0EEB               	movlw	235
 14271  016416  26E1               	addwf	fsr1l,f,c
 14272  016418  0EFF               	movlw	255
 14273  01641A  22E2               	addwfc	fsr1h,f,c
 14274  01641C  0012               	return		;funcret
 14275  01641E                     __end_of_stoa:
 14276                           	opt callstack 0
 14277                           
 14278 ;; *************** function _efgtoa *****************
 14279 ;; Defined at:
 14280 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14281 ;; Parameters:    Size  Location     Type
 14282 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14283 ;;		 -> f(6), NULL(0), 
 14284 ;;  f               4  [STACK] PTR struct _IO_FILE
 14285 ;;  c               1  [STACK] unsigned char 
 14286 ;; Auto vars:     Size  Location     Type
 14287 ;;  u               4  [STACK] unsigned char 
 14288 ;;  g               4  [STACK] unsigned char 
 14289 ;;  l               4  [STACK] unsigned char 
 14290 ;;  h               4  [STACK] unsigned char 
 14291 ;;  ou              4  [STACK] unsigned char 
 14292 ;;  n               2  [STACK] int 
 14293 ;;  e               2  [STACK] int 
 14294 ;;  i               2  [STACK] int 
 14295 ;;  w               2  [STACK] int 
 14296 ;;  p               2  [STACK] int 
 14297 ;;  sign            2  [STACK] int 
 14298 ;;  d               2  [STACK] int 
 14299 ;;  ne              2  [STACK] int 
 14300 ;;  m               2  [STACK] int 
 14301 ;;  pp              2  [STACK] int 
 14302 ;;  t               2  [STACK] int 
 14303 ;;  mode            1  [STACK] unsigned char 
 14304 ;;  nmode           1  [STACK] unsigned char 
 14305 ;; Return value:  Size  Location     Type
 14306 ;;                  2  [STACK] int 
 14307 ;; Registers used:
 14308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 14309 ;; Tracked objects:
 14310 ;;		On entry : 0/0
 14311 ;;		On exit  : 0/0
 14312 ;;		Unchanged: 0/0
 14313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14318 ;;Total ram usage:        0 bytes
 14319 ;; Hardware stack levels used:    1
 14320 ;; Hardware stack levels required when called:   20
 14321 ;; This function calls:
 14322 ;;		___awdiv
 14323 ;;		___awmod
 14324 ;;		___fladd
 14325 ;;		___fldiv
 14326 ;;		___fleq
 14327 ;;		___flge
 14328 ;;		___flmul
 14329 ;;		___flneg
 14330 ;;		___flsub
 14331 ;;		___fltol
 14332 ;;		___fpclassifyf
 14333 ;;		_floorf
 14334 ;;		_isupper
 14335 ;;		_pad
 14336 ;;		_strcpy
 14337 ;;		_tolower
 14338 ;; This function is called by:
 14339 ;;		_vfpfcnvrt
 14340 ;; This function uses a reentrant model
 14341 ;;
 14342                           
 14343                           	psect	text55
 14344  010000                     __ptext55:
 14345                           	opt callstack 0
 14346  010000                     _efgtoa:
 14347                           	opt callstack 0
 14348                           
 14349                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14350  010000  0E38               	movlw	56
 14351  010002  26E1               	addwf	fsr1l,f,c
 14352  010004  0E00               	movlw	0
 14353  010006  22E2               	addwfc	fsr1h,f,c
 14354                           
 14355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 14356                           ;stkvar	_sign @ sp[(-56)+42]
 14357                           
 14358                           ;incstack = 0
 14359 ;; hardware stack exceeded
 14360  010008  0EF2               	movlw	-14
 14361  01000A  6AE3               	clrf	plusw1,c
 14362  01000C  0EF3               	movlw	-13
 14363  01000E  6AE3               	clrf	plusw1,c
 14364                           
 14365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 14366                           ;stkvar	_f @ sp[(-56)+-6]
 14367  010010  0EC2               	movlw	-62
 14368  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 14369  010018  0EC3               	movlw	-61
 14370  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 14371  010020  0EC4               	movlw	-60
 14372  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 14373  010028  0EC5               	movlw	-59
 14374  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14375                           
 14376                           ;stkvar	_g @ sp[(-56)+16]
 14377  010030  0ED8               	movlw	-40
 14378  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 14379  010038  0ED9               	movlw	-39
 14380  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14381  010040  0EDA               	movlw	-38
 14382  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14383  010048  0EDB               	movlw	-37
 14384  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14385                           
 14386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 14387                           ;stkvar	_g @ sp[(-56)+16]
 14388  010050  0EDB               	movlw	-37
 14389  010052  AEE3               	btfss	plusw1,7,c
 14390  010054  D02B               	goto	l11050
 14391                           
 14392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 14393  010056  0E01               	movlw	1
 14394  010058  6E0B               	movwf	(btemp+10)^0,c
 14395  01005A  0E00               	movlw	0
 14396  01005C  6E0C               	movwf	(btemp+11)^0,c
 14397                           
 14398                           ;stkvar	_sign @ sp[(-56)+42]
 14399  01005E  0EF2               	movlw	-14
 14400  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14401  010066  0EF3               	movlw	-13
 14402  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 14403                           
 14404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 14405                           ;stkvar	_g @ sp[(-56)+16]
 14406  01006E  0ED8               	movlw	-40
 14407  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 14408  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 14409  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 14410  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 14411  010088  EC60  F0CE         	call	___flneg	;wreg free
 14412                           
 14413                           ;stkvar	_g @ sp[(-56)+16]
 14414  01008C  0ED8               	movlw	-40
 14415  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 14416  010094  0ED9               	movlw	-39
 14417  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14418  01009C  0EDA               	movlw	-38
 14419  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14420  0100A4  0EDB               	movlw	-37
 14421  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 14422  0100AC                     l11050:
 14423                           
 14424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 14425                           ;stkvar	_n @ sp[(-56)+32]
 14426  0100AC  0EE8               	movlw	-24
 14427  0100AE  6AE3               	clrf	plusw1,c
 14428  0100B0  0EE9               	movlw	-23
 14429  0100B2  6AE3               	clrf	plusw1,c
 14430                           
 14431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 14432                           ;stkvar	_w @ sp[(-56)+38]
 14433  0100B4  0EEE               	movlw	-18
 14434  0100B6  0060  F087  FFE3   	movff	_width,plusw1
 14435  0100BC  0EEF               	movlw	-17
 14436  0100BE  0060  F08B  FFE3   	movff	_width+1,plusw1
 14437                           
 14438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 14439                           ;stkvar	_sign @ sp[(-56)+42]
 14440  0100C4  0EF2               	movlw	-14
 14441  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 14442  0100CC  0EF3               	movlw	-13
 14443  0100CE  50E3               	movf	plusw1,w,c
 14444  0100D0  1001               	iorwf	btemp^0,w,c
 14445  0100D2  A4D8               	btfss	status,2,c
 14446  0100D4  D002               	goto	u10300
 14447  0100D6  A425               	btfss	_flags^0,2,c
 14448  0100D8  D036               	goto	l11070
 14449  0100DA                     u10300:
 14450                           
 14451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 14452                           ;stkvar	_sign @ sp[(-56)+42]
 14453  0100DA  0EF2               	movlw	-14
 14454  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 14455  0100E2  0EF3               	movlw	-13
 14456  0100E4  50E3               	movf	plusw1,w,c
 14457  0100E6  1001               	iorwf	btemp^0,w,c
 14458  0100E8  A4D8               	btfss	status,2,c
 14459  0100EA  D002               	goto	l11062
 14460  0100EC  0E2B               	movlw	43
 14461  0100EE  D001               	goto	L13
 14462  0100F0                     l11062:
 14463  0100F0  0E2D               	movlw	45
 14464  0100F2                     L13:
 14465  0100F2  6E0B               	movwf	(btemp+10)^0,c
 14466  0100F4  0E00               	movlw	0
 14467  0100F6  6E0C               	movwf	(btemp+11)^0,c
 14468                           
 14469                           ;stkvar	_efgtoa$5216 @ sp[(-56)+10]
 14470  0100F8  0ED2               	movlw	-46
 14471  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14472  010100  0ED3               	movlw	-45
 14473  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 14474                           
 14475                           ;stkvar	_efgtoa$5216 @ sp[(-56)+10]
 14476  010108  0ED2               	movlw	-46
 14477  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 14478                           
 14479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 14480                           ;stkvar	_n @ sp[(-56)+32]
 14481  010110  0EE8               	movlw	-24
 14482  010112  50E3               	movf	plusw1,w,c
 14483  010114  0F01               	addlw	1
 14484  010116  6E01               	movwf	btemp^0,c
 14485  010118  0EE8               	movlw	-24
 14486  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 14487  010120  6A01               	clrf	btemp^0,c
 14488  010122  0EE9               	movlw	-23
 14489  010124  50E3               	movf	plusw1,w,c
 14490  010126  2001               	addwfc	btemp^0,w,c
 14491  010128  6E01               	movwf	btemp^0,c
 14492  01012A  0EE9               	movlw	-23
 14493  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 14494                           
 14495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 14496                           ;stkvar	_w @ sp[(-56)+38]
 14497  010132  50E1               	movf	fsr1l,w,c
 14498  010134  0FEE               	addlw	-18
 14499  010136  6ED9               	movwf	fsr2l,c
 14500  010138  50E2               	movf	fsr1h,w,c
 14501  01013A  6EDA               	movwf	fsr2h,c
 14502  01013C  0EFF               	movlw	255
 14503  01013E  22DA               	addwfc	fsr2h,f,c
 14504  010140  06DE               	decf	postinc2,f,c
 14505  010142  0E00               	movlw	0
 14506  010144  5ADD               	subwfb	postdec2,f,c
 14507  010146                     l11070:
 14508                           
 14509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 14510                           ;stkvar	_g @ sp[(-56)+16]
 14511  010146  0ED8               	movlw	-40
 14512  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 14513  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 14514  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 14515  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 14516  010160  ECA2  F0BA         	call	___fpclassifyf	;wreg free
 14517  010164  0401               	decf	btemp^0,w,c
 14518  010166  1002               	iorwf	(btemp+1)^0,w,c
 14519  010168  A4D8               	btfss	status,2,c
 14520  01016A  D076               	goto	l11088
 14521  01016C  0EBF               	movlw	191
 14522  01016E  6E0B               	movwf	(btemp+10)^0,c
 14523  010170  0EFF               	movlw	255
 14524  010172  6E0C               	movwf	(btemp+11)^0,c
 14525                           
 14526                           ;stkvar	_c @ sp[(-56)+-7]
 14527  010174  0EC1               	movlw	-63
 14528  010176  50E3               	movf	plusw1,w,c
 14529  010178  6E09               	movwf	(btemp+8)^0,c
 14530  01017A  6A0A               	clrf	(btemp+9)^0,c
 14531  01017C  500B               	movf	(btemp+10)^0,w,c
 14532  01017E  2609               	addwf	(btemp+8)^0,f,c
 14533  010180  500C               	movf	(btemp+11)^0,w,c
 14534  010182  220A               	addwfc	(btemp+9)^0,f,c
 14535  010184  500A               	movf	(btemp+9)^0,w,c
 14536  010186  E106               	bnz	u10330
 14537  010188  0E1A               	movlw	26
 14538  01018A  5C09               	subwf	(btemp+8)^0,w,c
 14539  01018C  B0D8               	btfsc	status,0,c
 14540  01018E  D002               	goto	u10330
 14541  010190  0E01               	movlw	1
 14542  010192  D001               	goto	u10340
 14543  010194                     u10330:
 14544  010194  0E00               	movlw	0
 14545  010196                     u10340:
 14546  010196  6E0B               	movwf	(btemp+10)^0,c
 14547  010198  6A0C               	clrf	(btemp+11)^0,c
 14548                           
 14549                           ;stkvar	_efgtoa$5217 @ sp[(-56)+8]
 14550  01019A  0ED0               	movlw	-48
 14551  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14552  0101A2  0ED1               	movlw	-47
 14553  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14554                           
 14555                           ;stkvar	_efgtoa$5217 @ sp[(-56)+8]
 14556  0101AA  0ED0               	movlw	-48
 14557  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 14558  0101B2  0ED1               	movlw	-47
 14559  0101B4  50E3               	movf	plusw1,w,c
 14560  0101B6  1001               	iorwf	btemp^0,w,c
 14561  0101B8  B4D8               	btfsc	status,2,c
 14562  0101BA  D017               	goto	l11080
 14563                           
 14564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 14565  0101BC  0ED2               	movlw	low STR_48
 14566  0101BE  6EE6               	movwf	postinc1,c
 14567  0101C0  0EFF               	movlw	high STR_48
 14568  0101C2  6EE6               	movwf	postinc1,c
 14569                           
 14570                           ;stkvar	_n @ sp[(-58)+32]
 14571  0101C4  0E94               	movlw	low _dbuf
 14572  0101C6  6E0B               	movwf	(btemp+10)^0,c
 14573  0101C8  0E03               	movlw	high _dbuf
 14574  0101CA  6E0C               	movwf	(btemp+11)^0,c
 14575  0101CC  0EE6               	movlw	-26
 14576  0101CE  50E3               	movf	plusw1,w,c
 14577  0101D0  260B               	addwf	(btemp+10)^0,f,c
 14578  0101D2  0EE7               	movlw	-25
 14579  0101D4  50E3               	movf	plusw1,w,c
 14580  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 14581  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14582  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 14583  0101E4  EC30  F0C6         	call	_strcpy	;wreg free
 14584                           
 14585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 14586  0101E8  D016               	goto	l11082
 14587  0101EA                     l11080:
 14588                           
 14589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 14590  0101EA  0EDA               	movlw	low STR_49
 14591  0101EC  6EE6               	movwf	postinc1,c
 14592  0101EE  0EFF               	movlw	high STR_49
 14593  0101F0  6EE6               	movwf	postinc1,c
 14594                           
 14595                           ;stkvar	_n @ sp[(-58)+32]
 14596  0101F2  0E94               	movlw	low _dbuf
 14597  0101F4  6E0B               	movwf	(btemp+10)^0,c
 14598  0101F6  0E03               	movlw	high _dbuf
 14599  0101F8  6E0C               	movwf	(btemp+11)^0,c
 14600  0101FA  0EE6               	movlw	-26
 14601  0101FC  50E3               	movf	plusw1,w,c
 14602  0101FE  260B               	addwf	(btemp+10)^0,f,c
 14603  010200  0EE7               	movlw	-25
 14604  010202  50E3               	movf	plusw1,w,c
 14605  010204  220C               	addwfc	(btemp+11)^0,f,c
 14606  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14607  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 14608  010212  EC30  F0C6         	call	_strcpy	;wreg free
 14609  010216                     l11082:
 14610                           
 14611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 14612                           ;stkvar	_w @ sp[(-56)+38]
 14613  010216  50E1               	movf	fsr1l,w,c
 14614  010218  0FEE               	addlw	-18
 14615  01021A  6ED9               	movwf	fsr2l,c
 14616  01021C  50E2               	movf	fsr1h,w,c
 14617  01021E  6EDA               	movwf	fsr2h,c
 14618  010220  0EFF               	movlw	255
 14619  010222  22DA               	addwfc	fsr2h,f,c
 14620  010224  0EFD               	movlw	253
 14621  010226  26DE               	addwf	postinc2,f,c
 14622  010228  0EFF               	movlw	255
 14623  01022A  22DD               	addwfc	postdec2,f,c
 14624  01022C                     l11084:
 14625                           
 14626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 14627                           ;stkvar	_w @ sp[(-56)+38]
 14628  01022C  0EEE               	movlw	-18
 14629  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 14630  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 14631  01023A  0E94               	movlw	low _dbuf
 14632  01023C  6EE6               	movwf	postinc1,c
 14633  01023E  0E03               	movlw	high _dbuf
 14634  010240  6EE6               	movwf	postinc1,c
 14635                           
 14636                           ;stkvar	_fp @ sp[(-60)+-2]
 14637  010242  0EC2               	movlw	-62
 14638  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 14639  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 14640  010250  EC33  F0C3         	call	_pad	;wreg free
 14641  010254  EF1D  F089         	goto	l2090
 14642  010258                     l11088:
 14643                           
 14644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 14645                           ;stkvar	_g @ sp[(-56)+16]
 14646  010258  0ED8               	movlw	-40
 14647  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 14648  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 14649  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 14650  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 14651  010272  ECA2  F0BA         	call	___fpclassifyf	;wreg free
 14652  010276  5001               	movf	btemp^0,w,c
 14653  010278  1002               	iorwf	(btemp+1)^0,w,c
 14654  01027A  A4D8               	btfss	status,2,c
 14655  01027C  D056               	goto	l11106
 14656  01027E  0EBF               	movlw	191
 14657  010280  6E0B               	movwf	(btemp+10)^0,c
 14658  010282  0EFF               	movlw	255
 14659  010284  6E0C               	movwf	(btemp+11)^0,c
 14660                           
 14661                           ;stkvar	_c @ sp[(-56)+-7]
 14662  010286  0EC1               	movlw	-63
 14663  010288  50E3               	movf	plusw1,w,c
 14664  01028A  6E09               	movwf	(btemp+8)^0,c
 14665  01028C  6A0A               	clrf	(btemp+9)^0,c
 14666  01028E  500B               	movf	(btemp+10)^0,w,c
 14667  010290  2609               	addwf	(btemp+8)^0,f,c
 14668  010292  500C               	movf	(btemp+11)^0,w,c
 14669  010294  220A               	addwfc	(btemp+9)^0,f,c
 14670  010296  500A               	movf	(btemp+9)^0,w,c
 14671  010298  E106               	bnz	u10370
 14672  01029A  0E1A               	movlw	26
 14673  01029C  5C09               	subwf	(btemp+8)^0,w,c
 14674  01029E  B0D8               	btfsc	status,0,c
 14675  0102A0  D002               	goto	u10370
 14676  0102A2  0E01               	movlw	1
 14677  0102A4  D001               	goto	u10380
 14678  0102A6                     u10370:
 14679  0102A6  0E00               	movlw	0
 14680  0102A8                     u10380:
 14681  0102A8  6E0B               	movwf	(btemp+10)^0,c
 14682  0102AA  6A0C               	clrf	(btemp+11)^0,c
 14683                           
 14684                           ;stkvar	_efgtoa$5221 @ sp[(-56)+6]
 14685  0102AC  0ECE               	movlw	-50
 14686  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14687  0102B4  0ECF               	movlw	-49
 14688  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 14689                           
 14690                           ;stkvar	_efgtoa$5221 @ sp[(-56)+6]
 14691  0102BC  0ECE               	movlw	-50
 14692  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 14693  0102C4  0ECF               	movlw	-49
 14694  0102C6  50E3               	movf	plusw1,w,c
 14695  0102C8  1001               	iorwf	btemp^0,w,c
 14696  0102CA  B4D8               	btfsc	status,2,c
 14697  0102CC  D017               	goto	l11098
 14698                           
 14699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 14700  0102CE  0ED6               	movlw	low STR_52
 14701  0102D0  6EE6               	movwf	postinc1,c
 14702  0102D2  0EFF               	movlw	high STR_52
 14703  0102D4  6EE6               	movwf	postinc1,c
 14704                           
 14705                           ;stkvar	_n @ sp[(-58)+32]
 14706  0102D6  0E94               	movlw	low _dbuf
 14707  0102D8  6E0B               	movwf	(btemp+10)^0,c
 14708  0102DA  0E03               	movlw	high _dbuf
 14709  0102DC  6E0C               	movwf	(btemp+11)^0,c
 14710  0102DE  0EE6               	movlw	-26
 14711  0102E0  50E3               	movf	plusw1,w,c
 14712  0102E2  260B               	addwf	(btemp+10)^0,f,c
 14713  0102E4  0EE7               	movlw	-25
 14714  0102E6  50E3               	movf	plusw1,w,c
 14715  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 14716  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14717  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 14718  0102F6  EC30  F0C6         	call	_strcpy	;wreg free
 14719                           
 14720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 14721  0102FA  D78D               	goto	l11082
 14722  0102FC                     l11098:
 14723                           
 14724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 14725  0102FC  0EDE               	movlw	low STR_53
 14726  0102FE  6EE6               	movwf	postinc1,c
 14727  010300  0EFF               	movlw	high STR_53
 14728  010302  6EE6               	movwf	postinc1,c
 14729                           
 14730                           ;stkvar	_n @ sp[(-58)+32]
 14731  010304  0E94               	movlw	low _dbuf
 14732  010306  6E0B               	movwf	(btemp+10)^0,c
 14733  010308  0E03               	movlw	high _dbuf
 14734  01030A  6E0C               	movwf	(btemp+11)^0,c
 14735  01030C  0EE6               	movlw	-26
 14736  01030E  50E3               	movf	plusw1,w,c
 14737  010310  260B               	addwf	(btemp+10)^0,f,c
 14738  010312  0EE7               	movlw	-25
 14739  010314  50E3               	movf	plusw1,w,c
 14740  010316  220C               	addwfc	(btemp+11)^0,f,c
 14741  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14742  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 14743  010324  EC30  F0C6         	call	_strcpy	;wreg free
 14744  010328  D776               	goto	l11082
 14745  01032A                     l11106:
 14746                           
 14747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 14748  01032A  0E00               	movlw	0
 14749  01032C  6E09               	movwf	(btemp+8)^0,c
 14750  01032E  0E00               	movlw	0
 14751  010330  6E0A               	movwf	(btemp+9)^0,c
 14752  010332  0E80               	movlw	128
 14753  010334  6E0B               	movwf	(btemp+10)^0,c
 14754  010336  0E3F               	movlw	63
 14755  010338  6E0C               	movwf	(btemp+11)^0,c
 14756                           
 14757                           ;stkvar	_u @ sp[(-56)+12]
 14758  01033A  0ED4               	movlw	-44
 14759  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 14760  010342  0ED5               	movlw	-43
 14761  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14762  01034A  0ED6               	movlw	-42
 14763  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14764  010352  0ED7               	movlw	-41
 14765  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 14766                           
 14767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 14768                           ;stkvar	_e @ sp[(-56)+34]
 14769  01035A  0EEA               	movlw	-22
 14770  01035C  6AE3               	clrf	plusw1,c
 14771  01035E  0EEB               	movlw	-21
 14772  010360  6AE3               	clrf	plusw1,c
 14773                           
 14774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 14775  010362  0E00               	movlw	0
 14776  010364  6EE6               	movwf	postinc1,c
 14777  010366  0E00               	movlw	0
 14778  010368  6EE6               	movwf	postinc1,c
 14779  01036A  0E00               	movlw	0
 14780  01036C  6EE6               	movwf	postinc1,c
 14781  01036E  0E00               	movlw	0
 14782  010370  6EE6               	movwf	postinc1,c
 14783                           
 14784                           ;stkvar	_g @ sp[(-60)+16]
 14785  010372  0ED4               	movlw	-44
 14786  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 14787  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 14788  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 14789  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 14790  01038C  EC9A  F0C6         	call	___fleq	;wreg free
 14791  010390  A001               	btfss	btemp& (0+255),0,c
 14792  010392  D039               	goto	l11118
 14793  010394  D0BC               	goto	u10420
 14794  010396                     l11114:
 14795                           
 14796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 14797  010396  0E00               	movlw	0
 14798  010398  6EE6               	movwf	postinc1,c
 14799  01039A  0E00               	movlw	0
 14800  01039C  6EE6               	movwf	postinc1,c
 14801  01039E  0E20               	movlw	32
 14802  0103A0  6EE6               	movwf	postinc1,c
 14803  0103A2  0E41               	movlw	65
 14804  0103A4  6EE6               	movwf	postinc1,c
 14805                           
 14806                           ;stkvar	_u @ sp[(-60)+12]
 14807  0103A6  0ED0               	movlw	-48
 14808  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 14809  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 14810  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 14811  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 14812  0103C0  ECAD  F095         	call	___flmul	;wreg free
 14813                           
 14814                           ;stkvar	_u @ sp[(-56)+12]
 14815  0103C4  0ED4               	movlw	-44
 14816  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 14817  0103CC  0ED5               	movlw	-43
 14818  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14819  0103D4  0ED6               	movlw	-42
 14820  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14821  0103DC  0ED7               	movlw	-41
 14822  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 14823                           
 14824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 14825                           ;stkvar	_e @ sp[(-56)+34]
 14826  0103E4  0EEA               	movlw	-22
 14827  0103E6  50E3               	movf	plusw1,w,c
 14828  0103E8  0F01               	addlw	1
 14829  0103EA  6E01               	movwf	btemp^0,c
 14830  0103EC  0EEA               	movlw	-22
 14831  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 14832  0103F4  6A01               	clrf	btemp^0,c
 14833  0103F6  0EEB               	movlw	-21
 14834  0103F8  50E3               	movf	plusw1,w,c
 14835  0103FA  2001               	addwfc	btemp^0,w,c
 14836  0103FC  6E01               	movwf	btemp^0,c
 14837  0103FE  0EEB               	movlw	-21
 14838  010400  0060  F007  FFE3   	movff	btemp,plusw1
 14839  010406                     l11118:
 14840                           
 14841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 14842  010406  0E00               	movlw	0
 14843  010408  6EE6               	movwf	postinc1,c
 14844  01040A  0E00               	movlw	0
 14845  01040C  6EE6               	movwf	postinc1,c
 14846  01040E  0E20               	movlw	32
 14847  010410  6EE6               	movwf	postinc1,c
 14848  010412  0E41               	movlw	65
 14849  010414  6EE6               	movwf	postinc1,c
 14850                           
 14851                           ;stkvar	_u @ sp[(-60)+12]
 14852  010416  0ED0               	movlw	-48
 14853  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 14854  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 14855  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 14856  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 14857  010430  ECAD  F095         	call	___flmul	;wreg free
 14858  010434  0060  F007  FFE6   	movff	btemp,postinc1
 14859  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14860  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 14861  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 14862                           
 14863                           ;stkvar	_g @ sp[(-60)+16]
 14864  01044C  0ED4               	movlw	-44
 14865  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 14866  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 14867  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 14868  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 14869  010466  EC9E  F0BD         	call	___flge	;wreg free
 14870  01046A  A001               	btfss	btemp& (0+255),0,c
 14871  01046C  D032               	goto	l11124
 14872  01046E  D793               	goto	l11114
 14873  010470                     l11120:
 14874                           
 14875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 14876  010470  0E00               	movlw	0
 14877  010472  6EE6               	movwf	postinc1,c
 14878  010474  0E00               	movlw	0
 14879  010476  6EE6               	movwf	postinc1,c
 14880  010478  0E20               	movlw	32
 14881  01047A  6EE6               	movwf	postinc1,c
 14882  01047C  0E41               	movlw	65
 14883  01047E  6EE6               	movwf	postinc1,c
 14884                           
 14885                           ;stkvar	_u @ sp[(-60)+12]
 14886  010480  0ED0               	movlw	-48
 14887  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 14888  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 14889  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 14890  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 14891  01049A  ECE3  F0A0         	call	___fldiv	;wreg free
 14892                           
 14893                           ;stkvar	_u @ sp[(-56)+12]
 14894  01049E  0ED4               	movlw	-44
 14895  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 14896  0104A6  0ED5               	movlw	-43
 14897  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14898  0104AE  0ED6               	movlw	-42
 14899  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14900  0104B6  0ED7               	movlw	-41
 14901  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 14902                           
 14903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 14904                           ;stkvar	_e @ sp[(-56)+34]
 14905  0104BE  50E1               	movf	fsr1l,w,c
 14906  0104C0  0FEA               	addlw	-22
 14907  0104C2  6ED9               	movwf	fsr2l,c
 14908  0104C4  50E2               	movf	fsr1h,w,c
 14909  0104C6  6EDA               	movwf	fsr2h,c
 14910  0104C8  0EFF               	movlw	255
 14911  0104CA  22DA               	addwfc	fsr2h,f,c
 14912  0104CC  06DE               	decf	postinc2,f,c
 14913  0104CE  0E00               	movlw	0
 14914  0104D0  5ADD               	subwfb	postdec2,f,c
 14915  0104D2                     l11124:
 14916                           
 14917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 14918                           ;stkvar	_u @ sp[(-56)+12]
 14919  0104D2  0ED4               	movlw	-44
 14920  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 14921  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 14922  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 14923  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 14924                           
 14925                           ;stkvar	_g @ sp[(-60)+16]
 14926  0104EC  0ED4               	movlw	-44
 14927  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 14928  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 14929  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 14930  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 14931  010506  EC9E  F0BD         	call	___flge	;wreg free
 14932  01050A  A001               	btfss	btemp& (0+255),0,c
 14933  01050C  D7B1               	goto	l11120
 14934  01050E                     u10420:
 14935                           
 14936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 14937                           ;stkvar	_c @ sp[(-56)+-7]
 14938  01050E  0EC1               	movlw	-63
 14939  010510  50E3               	movf	plusw1,w,c
 14940  010512  6EE6               	movwf	postinc1,c
 14941  010514  0E00               	movlw	0
 14942  010516  6EE6               	movwf	postinc1,c
 14943  010518  ECFA  F0CA         	call	_tolower	;wreg free
 14944                           
 14945                           ;stkvar	_mode @ sp[(-56)+54]
 14946  01051C  0EFE               	movlw	-2
 14947  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 14948                           
 14949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 14950                           ;stkvar	_mode @ sp[(-56)+54]
 14951                           ;stkvar	_nmode @ sp[(-56)+55]
 14952  010524  0EFE               	movlw	-2
 14953  010526  006F FF8C  F001    	movff	plusw1,btemp
 14954  01052C  0EFF               	movlw	-1
 14955  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 14956                           
 14957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 14958                           ;stkvar	_mode @ sp[(-56)+54]
 14959  010534  0EFE               	movlw	-2
 14960  010536  006F FF8C  F001    	movff	plusw1,btemp
 14961  01053C  0E67               	movlw	103
 14962  01053E  1801               	xorwf	btemp^0,w,c
 14963  010540  A4D8               	btfss	status,2,c
 14964  010542  D025               	goto	l11142
 14965                           
 14966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 14967  010544  5023               	movf	_prec^0,w,c
 14968  010546  1024               	iorwf	(_prec+1)^0,w,c
 14969  010548  A4D8               	btfss	status,2,c
 14970  01054A  D004               	goto	l11136
 14971                           
 14972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 14973  01054C  0E00               	movlw	0
 14974  01054E  6E24               	movwf	(_prec+1)^0,c
 14975  010550  0E01               	movlw	1
 14976  010552  6E23               	movwf	_prec^0,c
 14977  010554                     l11136:
 14978                           
 14979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 14980  010554  BE24               	btfsc	(_prec+1)^0,7,c
 14981  010556  D005               	goto	u10450
 14982  010558  5024               	movf	(_prec+1)^0,w,c
 14983  01055A  E110               	bnz	l11140
 14984  01055C  0423               	decf	_prec^0,w,c
 14985  01055E  B0D8               	btfsc	status,0,c
 14986  010560  D00D               	goto	l11140
 14987  010562                     u10450:
 14988  010562  0E06               	movlw	6
 14989  010564  6E0B               	movwf	(btemp+10)^0,c
 14990  010566  0E00               	movlw	0
 14991  010568  6E0C               	movwf	(btemp+11)^0,c
 14992                           
 14993                           ;stkvar	_p @ sp[(-56)+40]
 14994  01056A  0EF0               	movlw	-16
 14995  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14996  010572  0EF1               	movlw	-15
 14997  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 14998  01057A  D00C               	goto	l11148
 14999  01057C                     l11140:
 15000                           
 15001                           ;stkvar	_p @ sp[(-56)+40]
 15002  01057C  0EF0               	movlw	-16
 15003  01057E  0060  F08F  FFE3   	movff	_prec,plusw1
 15004  010584  0EF1               	movlw	-15
 15005  010586  0060  F093  FFE3   	movff	_prec+1,plusw1
 15006  01058C  D003               	goto	l11148
 15007  01058E                     l11142:
 15008                           
 15009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 15010  01058E  AE24               	btfss	(_prec+1)^0,7,c
 15011  010590  D7F5               	goto	l11140
 15012  010592  D7E7               	goto	u10450
 15013  010594                     l11148:
 15014                           
 15015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 15016                           ;stkvar	_mode @ sp[(-56)+54]
 15017  010594  0EFE               	movlw	-2
 15018  010596  006F FF8C  F001    	movff	plusw1,btemp
 15019  01059C  0E67               	movlw	103
 15020  01059E  1801               	xorwf	btemp^0,w,c
 15021  0105A0  A4D8               	btfss	status,2,c
 15022  0105A2  D02F               	goto	l11158
 15023                           
 15024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 15025                           ;stkvar	_e @ sp[(-56)+34]
 15026  0105A4  0EEB               	movlw	-21
 15027  0105A6  AEE3               	btfss	plusw1,7,c
 15028  0105A8  D00E               	goto	u10480
 15029  0105AA  0EEA               	movlw	-22
 15030  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 15031  0105B2  0EFC               	movlw	252
 15032  0105B4  5E01               	subwf	btemp^0,f,c
 15033  0105B6  0EEB               	movlw	-21
 15034  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 15035  0105BE  0EFF               	movlw	255
 15036  0105C0  5A01               	subwfb	btemp^0,f,c
 15037  0105C2  A0D8               	btfss	status,0,c
 15038  0105C4  D018               	goto	l11156
 15039  0105C6                     u10480:
 15040                           
 15041                           ;stkvar	_e @ sp[(-56)+34]
 15042                           ;stkvar	_p @ sp[(-56)+40]
 15043  0105C6  0EF0               	movlw	-16
 15044  0105C8  50E3               	movf	plusw1,w,c
 15045  0105CA  0FFF               	addlw	255
 15046  0105CC  6E0B               	movwf	(btemp+10)^0,c
 15047  0105CE  0EF1               	movlw	-15
 15048  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15049  0105D6  0EFF               	movlw	255
 15050  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 15051  0105DA  0EEA               	movlw	-22
 15052  0105DC  50E3               	movf	plusw1,w,c
 15053  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 15054  0105E0  500C               	movf	(btemp+11)^0,w,c
 15055  0105E2  0A80               	xorlw	128
 15056  0105E4  6E01               	movwf	btemp^0,c
 15057  0105E6  0EEB               	movlw	-21
 15058  0105E8  50E3               	movf	plusw1,w,c
 15059  0105EA  0A80               	xorlw	128
 15060  0105EC  5801               	subwfb	btemp^0,w,c
 15061  0105EE  A0D8               	btfss	status,0,c
 15062  0105F0  D002               	goto	l11156
 15063                           
 15064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 15065  0105F2  0E66               	movlw	102
 15066  0105F4  D001               	goto	L14
 15067  0105F6                     l11156:
 15068                           
 15069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 15070  0105F6  0E65               	movlw	101
 15071  0105F8                     L14:
 15072  0105F8  6E0C               	movwf	(btemp+11)^0,c
 15073                           
 15074                           ;stkvar	_nmode @ sp[(-56)+55]
 15075  0105FA  0EFF               	movlw	-1
 15076  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15077  010602                     l11158:
 15078                           
 15079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 15080                           ;stkvar	_p @ sp[(-56)+40]
 15081                           ;stkvar	_m @ sp[(-56)+48]
 15082  010602  0EF0               	movlw	-16
 15083  010604  006F FF8C  F001    	movff	plusw1,btemp
 15084  01060A  0EF8               	movlw	-8
 15085  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 15086  010612  0EF1               	movlw	-15
 15087  010614  006F FF8C  F001    	movff	plusw1,btemp
 15088  01061A  0EF9               	movlw	-7
 15089  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 15090                           
 15091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 15092                           ;stkvar	_mode @ sp[(-56)+54]
 15093  010622  0EFE               	movlw	-2
 15094  010624  006F FF8C  F001    	movff	plusw1,btemp
 15095  01062A  0E67               	movlw	103
 15096  01062C  1801               	xorwf	btemp^0,w,c
 15097  01062E  A4D8               	btfss	status,2,c
 15098  010630  D00B               	goto	u10520
 15099                           
 15100                           ;stkvar	_nmode @ sp[(-56)+55]
 15101  010632  0EFF               	movlw	-1
 15102  010634  006F FF8C  F001    	movff	plusw1,btemp
 15103  01063A  0E66               	movlw	102
 15104  01063C  1801               	xorwf	btemp^0,w,c
 15105  01063E  A4D8               	btfss	status,2,c
 15106  010640  D014               	goto	l2119
 15107                           
 15108                           ;stkvar	_e @ sp[(-56)+34]
 15109  010642  0EEB               	movlw	-21
 15110  010644  AEE3               	btfss	plusw1,7,c
 15111  010646  D011               	goto	l2119
 15112  010648                     u10520:
 15113                           
 15114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 15115                           ;stkvar	_m @ sp[(-56)+48]
 15116  010648  0EF8               	movlw	-8
 15117  01064A  50E3               	movf	plusw1,w,c
 15118  01064C  0F01               	addlw	1
 15119  01064E  6E01               	movwf	btemp^0,c
 15120  010650  0EF8               	movlw	-8
 15121  010652  0060  F007  FFE3   	movff	btemp,plusw1
 15122  010658  6A01               	clrf	btemp^0,c
 15123  01065A  0EF9               	movlw	-7
 15124  01065C  50E3               	movf	plusw1,w,c
 15125  01065E  2001               	addwfc	btemp^0,w,c
 15126  010660  6E01               	movwf	btemp^0,c
 15127  010662  0EF9               	movlw	-7
 15128  010664  0060  F007  FFE3   	movff	btemp,plusw1
 15129  01066A                     l2119:
 15130                           
 15131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 15132                           ;stkvar	_nmode @ sp[(-56)+55]
 15133  01066A  0EFF               	movlw	-1
 15134  01066C  006F FF8C  F001    	movff	plusw1,btemp
 15135  010672  0E66               	movlw	102
 15136  010674  1801               	xorwf	btemp^0,w,c
 15137  010676  A4D8               	btfss	status,2,c
 15138  010678  D03B               	goto	l11178
 15139                           
 15140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 15141                           ;stkvar	_e @ sp[(-56)+34]
 15142  01067A  0EEB               	movlw	-21
 15143  01067C  AEE3               	btfss	plusw1,7,c
 15144  01067E  D01C               	goto	l11174
 15145                           
 15146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 15147  010680  0E00               	movlw	0
 15148  010682  6E09               	movwf	(btemp+8)^0,c
 15149  010684  0E00               	movlw	0
 15150  010686  6E0A               	movwf	(btemp+9)^0,c
 15151  010688  0E80               	movlw	128
 15152  01068A  6E0B               	movwf	(btemp+10)^0,c
 15153  01068C  0E3F               	movlw	63
 15154  01068E  6E0C               	movwf	(btemp+11)^0,c
 15155                           
 15156                           ;stkvar	_u @ sp[(-56)+12]
 15157  010690  0ED4               	movlw	-44
 15158  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 15159  010698  0ED5               	movlw	-43
 15160  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15161  0106A0  0ED6               	movlw	-42
 15162  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15163  0106A8  0ED7               	movlw	-41
 15164  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 15165                           
 15166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 15167                           ;stkvar	_e @ sp[(-56)+34]
 15168  0106B0  0EEA               	movlw	-22
 15169  0106B2  6AE3               	clrf	plusw1,c
 15170  0106B4  0EEB               	movlw	-21
 15171  0106B6  6AE3               	clrf	plusw1,c
 15172  0106B8                     l11174:
 15173                           
 15174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 15175                           ;stkvar	_mode @ sp[(-56)+54]
 15176  0106B8  0EFE               	movlw	-2
 15177  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 15178  0106C0  0E67               	movlw	103
 15179  0106C2  1801               	xorwf	btemp^0,w,c
 15180  0106C4  B4D8               	btfsc	status,2,c
 15181  0106C6  D014               	goto	l11178
 15182                           
 15183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 15184                           ;stkvar	_e @ sp[(-56)+34]
 15185                           ;stkvar	_m @ sp[(-56)+48]
 15186  0106C8  0EF8               	movlw	-8
 15187  0106CA  50E3               	movf	plusw1,w,c
 15188  0106CC  6E01               	movwf	btemp^0,c
 15189  0106CE  0EEA               	movlw	-22
 15190  0106D0  50E3               	movf	plusw1,w,c
 15191  0106D2  2601               	addwf	btemp^0,f,c
 15192  0106D4  0EF8               	movlw	-8
 15193  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 15194  0106DC  0EF9               	movlw	-7
 15195  0106DE  50E3               	movf	plusw1,w,c
 15196  0106E0  6E01               	movwf	btemp^0,c
 15197  0106E2  0EEB               	movlw	-21
 15198  0106E4  50E3               	movf	plusw1,w,c
 15199  0106E6  2201               	addwfc	btemp^0,f,c
 15200  0106E8  0EF9               	movlw	-7
 15201  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 15202  0106F0                     l11178:
 15203                           
 15204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 15205                           ;stkvar	_i @ sp[(-56)+36]
 15206  0106F0  0EEC               	movlw	-20
 15207  0106F2  6AE3               	clrf	plusw1,c
 15208  0106F4  0EED               	movlw	-19
 15209  0106F6  6AE3               	clrf	plusw1,c
 15210                           
 15211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 15212                           ;stkvar	_g @ sp[(-56)+16]
 15213  0106F8  0ED8               	movlw	-40
 15214  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 15215  010700  0ED9               	movlw	-39
 15216  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 15217  010708  0EDA               	movlw	-38
 15218  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15219  010710  0EDB               	movlw	-37
 15220  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 15221                           
 15222                           ;stkvar	_h @ sp[(-56)+24]
 15223  010718  0EE0               	movlw	-32
 15224  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15225  010720  0EE1               	movlw	-31
 15226  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15227  010728  0EE2               	movlw	-30
 15228  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15229  010730  0EE3               	movlw	-29
 15230  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 15231                           
 15232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 15233                           ;stkvar	_u @ sp[(-56)+12]
 15234  010738  0ED4               	movlw	-44
 15235  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 15236  010740  0ED5               	movlw	-43
 15237  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 15238  010748  0ED6               	movlw	-42
 15239  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15240  010750  0ED7               	movlw	-41
 15241  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 15242                           
 15243                           ;stkvar	_ou @ sp[(-56)+28]
 15244  010758  0EE4               	movlw	-28
 15245  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15246  010760  0EE5               	movlw	-27
 15247  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15248  010768  0EE6               	movlw	-26
 15249  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15250  010770  0EE7               	movlw	-25
 15251  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 15252                           
 15253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 15254  010778  D0D6               	goto	l11194
 15255  01077A                     l11184:
 15256                           
 15257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 15258                           ;stkvar	_u @ sp[(-56)+12]
 15259  01077A  0ED4               	movlw	-44
 15260  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 15261  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 15262  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 15263  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 15264                           
 15265                           ;stkvar	_h @ sp[(-60)+24]
 15266  010794  0EDC               	movlw	-36
 15267  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 15268  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 15269  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15270  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15271  0107AE  ECE3  F0A0         	call	___fldiv	;wreg free
 15272  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 15273  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15274  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15275  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 15276  0107CA  ECE4  F0AB         	call	_floorf	;wreg free
 15277                           
 15278                           ;stkvar	_l @ sp[(-56)+20]
 15279  0107CE  0EDC               	movlw	-36
 15280  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 15281  0107D6  0EDD               	movlw	-35
 15282  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15283  0107DE  0EDE               	movlw	-34
 15284  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15285  0107E6  0EDF               	movlw	-33
 15286  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 15287                           
 15288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 15289                           ;stkvar	_l @ sp[(-56)+20]
 15290  0107EE  0EDC               	movlw	-36
 15291  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 15292  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 15293  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 15294  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 15295  010808  EC2D  F0BC         	call	___fltol	;wreg free
 15296  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 15297  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 15298                           
 15299                           ;stkvar	_d @ sp[(-56)+44]
 15300  010818  0EF4               	movlw	-12
 15301  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15302  010820  0EF5               	movlw	-11
 15303  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 15304                           
 15305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 15306                           ;stkvar	_u @ sp[(-56)+12]
 15307  010828  0ED4               	movlw	-44
 15308  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 15309  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 15310  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 15311  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 15312                           
 15313                           ;stkvar	_l @ sp[(-60)+20]
 15314  010842  0ED8               	movlw	-40
 15315  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 15316  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 15317  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 15318  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 15319  01085C  ECAD  F095         	call	___flmul	;wreg free
 15320  010860  0060  F007  FFE6   	movff	btemp,postinc1
 15321  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15322  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15323  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 15324                           
 15325                           ;stkvar	_h @ sp[(-60)+24]
 15326  010878  0EDC               	movlw	-36
 15327  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 15328  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 15329  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 15330  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 15331  010892  ECA7  F0CE         	call	___flsub	;wreg free
 15332                           
 15333                           ;stkvar	_h @ sp[(-56)+24]
 15334  010896  0EE0               	movlw	-32
 15335  010898  0060  F007  FFE3   	movff	btemp,plusw1
 15336  01089E  0EE1               	movlw	-31
 15337  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15338  0108A6  0EE2               	movlw	-30
 15339  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15340  0108AE  0EE3               	movlw	-29
 15341  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 15342                           
 15343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 15344  0108B6  0E00               	movlw	0
 15345  0108B8  6EE6               	movwf	postinc1,c
 15346  0108BA  0E00               	movlw	0
 15347  0108BC  6EE6               	movwf	postinc1,c
 15348  0108BE  0E20               	movlw	32
 15349  0108C0  6EE6               	movwf	postinc1,c
 15350  0108C2  0E41               	movlw	65
 15351  0108C4  6EE6               	movwf	postinc1,c
 15352                           
 15353                           ;stkvar	_u @ sp[(-60)+12]
 15354  0108C6  0ED0               	movlw	-48
 15355  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15356  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 15357  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15358  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15359  0108E0  ECE3  F0A0         	call	___fldiv	;wreg free
 15360                           
 15361                           ;stkvar	_u @ sp[(-56)+12]
 15362  0108E4  0ED4               	movlw	-44
 15363  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 15364  0108EC  0ED5               	movlw	-43
 15365  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15366  0108F4  0ED6               	movlw	-42
 15367  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15368  0108FC  0ED7               	movlw	-41
 15369  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 15370                           
 15371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 15372                           ;stkvar	_i @ sp[(-56)+36]
 15373  010904  0EEC               	movlw	-20
 15374  010906  50E3               	movf	plusw1,w,c
 15375  010908  0F01               	addlw	1
 15376  01090A  6E01               	movwf	btemp^0,c
 15377  01090C  0EEC               	movlw	-20
 15378  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 15379  010914  6A01               	clrf	btemp^0,c
 15380  010916  0EED               	movlw	-19
 15381  010918  50E3               	movf	plusw1,w,c
 15382  01091A  2001               	addwfc	btemp^0,w,c
 15383  01091C  6E01               	movwf	btemp^0,c
 15384  01091E  0EED               	movlw	-19
 15385  010920  0060  F007  FFE3   	movff	btemp,plusw1
 15386  010926                     l11194:
 15387                           
 15388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 15389                           ;stkvar	_m @ sp[(-56)+48]
 15390                           ;stkvar	_i @ sp[(-56)+36]
 15391  010926  50E1               	movf	fsr1l,w,c
 15392  010928  0FEC               	addlw	-20
 15393  01092A  6ED9               	movwf	fsr2l,c
 15394  01092C  50E2               	movf	fsr1h,w,c
 15395  01092E  6EDA               	movwf	fsr2h,c
 15396  010930  0EFF               	movlw	255
 15397  010932  22DA               	addwfc	fsr2h,f,c
 15398  010934  0EF8               	movlw	-8
 15399  010936  50E3               	movf	plusw1,w,c
 15400  010938  5CDE               	subwf	postinc2,w,c
 15401  01093A  50DE               	movf	postinc2,w,c
 15402  01093C  0A80               	xorlw	128
 15403  01093E  6E01               	movwf	btemp^0,c
 15404  010940  0EF9               	movlw	-7
 15405  010942  50E3               	movf	plusw1,w,c
 15406  010944  0A80               	xorlw	128
 15407  010946  5801               	subwfb	btemp^0,w,c
 15408  010948  A0D8               	btfss	status,0,c
 15409  01094A  D717               	goto	l11184
 15410                           
 15411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 15412  01094C  0E00               	movlw	0
 15413  01094E  6EE6               	movwf	postinc1,c
 15414  010950  0E00               	movlw	0
 15415  010952  6EE6               	movwf	postinc1,c
 15416  010954  0EA0               	movlw	160
 15417  010956  6EE6               	movwf	postinc1,c
 15418  010958  0E40               	movlw	64
 15419  01095A  6EE6               	movwf	postinc1,c
 15420                           
 15421                           ;stkvar	_u @ sp[(-60)+12]
 15422  01095C  0ED0               	movlw	-48
 15423  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 15424  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 15425  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 15426  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 15427  010976  ECAD  F095         	call	___flmul	;wreg free
 15428                           
 15429                           ;stkvar	_l @ sp[(-56)+20]
 15430  01097A  0EDC               	movlw	-36
 15431  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 15432  010982  0EDD               	movlw	-35
 15433  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15434  01098A  0EDE               	movlw	-34
 15435  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15436  010992  0EDF               	movlw	-33
 15437  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 15438                           
 15439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 15440                           ;stkvar	_l @ sp[(-56)+20]
 15441  01099A  0EDC               	movlw	-36
 15442  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 15443  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15444  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15445  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15446                           
 15447                           ;stkvar	_h @ sp[(-60)+24]
 15448  0109B4  0EDC               	movlw	-36
 15449  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 15450  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 15451  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 15452  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15453  0109CE  EC9E  F0BD         	call	___flge	;wreg free
 15454  0109D2  A001               	btfss	btemp& (0+255),0,c
 15455  0109D4  D021               	goto	u10590
 15456                           
 15457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 15458                           ;stkvar	_l @ sp[(-56)+20]
 15459                           
 15460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 15461                           
 15462                           ;stkvar	_l @ sp[(-56)+20]
 15463                           
 15464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 15465  0109D6  0EDC               	movlw	-36
 15466  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 15467  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 15468  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 15469  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 15470                           
 15471                           ;stkvar	_h @ sp[(-60)+24]
 15472  0109F0  0EDC               	movlw	-36
 15473  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 15474  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 15475  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 15476  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 15477  010A0A  EC9A  F0C6         	call	___fleq	;wreg free
 15478  010A0E  A001               	btfss	btemp& (0+255),0,c
 15479  010A10  D01B               	goto	l11208
 15480                           
 15481                           ;stkvar	_d @ sp[(-56)+44]
 15482  010A12  0EF4               	movlw	-12
 15483  010A14  B0E3               	btfsc	plusw1,0,c
 15484  010A16  D018               	goto	l11208
 15485  010A18                     u10590:
 15486                           
 15487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 15488  010A18  0E00               	movlw	0
 15489  010A1A  6E09               	movwf	(btemp+8)^0,c
 15490  010A1C  0E00               	movlw	0
 15491  010A1E  6E0A               	movwf	(btemp+9)^0,c
 15492  010A20  0E00               	movlw	0
 15493  010A22  6E0B               	movwf	(btemp+10)^0,c
 15494  010A24  0E00               	movlw	0
 15495  010A26  6E0C               	movwf	(btemp+11)^0,c
 15496                           
 15497                           ;stkvar	_l @ sp[(-56)+20]
 15498  010A28  0EDC               	movlw	-36
 15499  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15500  010A30  0EDD               	movlw	-35
 15501  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15502  010A38  0EDE               	movlw	-34
 15503  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15504  010A40  0EDF               	movlw	-33
 15505  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 15506  010A48                     l11208:
 15507                           
 15508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 15509                           ;stkvar	_l @ sp[(-56)+20]
 15510  010A48  0EDC               	movlw	-36
 15511  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 15512  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 15513  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 15514  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15515                           
 15516                           ;stkvar	_g @ sp[(-60)+16]
 15517  010A62  0ED4               	movlw	-44
 15518  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 15519  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 15520  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 15521  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 15522  010A7C  ECC2  F099         	call	___fladd	;wreg free
 15523                           
 15524                           ;stkvar	_h @ sp[(-56)+24]
 15525  010A80  0EE0               	movlw	-32
 15526  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 15527  010A88  0EE1               	movlw	-31
 15528  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15529  010A90  0EE2               	movlw	-30
 15530  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15531  010A98  0EE3               	movlw	-29
 15532  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 15533                           
 15534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 15535                           ;stkvar	_ou @ sp[(-56)+28]
 15536  010AA0  0EE4               	movlw	-28
 15537  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 15538  010AA8  0EE5               	movlw	-27
 15539  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 15540  010AB0  0EE6               	movlw	-26
 15541  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15542  010AB8  0EE7               	movlw	-25
 15543  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15544                           
 15545                           ;stkvar	_u @ sp[(-56)+12]
 15546  010AC0  0ED4               	movlw	-44
 15547  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 15548  010AC8  0ED5               	movlw	-43
 15549  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15550  010AD0  0ED6               	movlw	-42
 15551  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15552  010AD8  0ED7               	movlw	-41
 15553  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 15554                           
 15555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 15556                           ;stkvar	_nmode @ sp[(-56)+55]
 15557  010AE0  0EFF               	movlw	-1
 15558  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 15559  010AE8  0E65               	movlw	101
 15560  010AEA  1801               	xorwf	btemp^0,w,c
 15561  010AEC  B4D8               	btfsc	status,2,c
 15562  010AEE  D011               	goto	l11216
 15563                           
 15564                           ;stkvar	_e @ sp[(-56)+34]
 15565                           ;stkvar	_ne @ sp[(-56)+46]
 15566  010AF0  0EEA               	movlw	-22
 15567  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 15568  010AF8  0EF6               	movlw	-10
 15569  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 15570  010B00  0EEB               	movlw	-21
 15571  010B02  006F FF8C  F001    	movff	plusw1,btemp
 15572  010B08  0EF7               	movlw	-9
 15573  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 15574  010B10  D004               	goto	l2134
 15575  010B12                     l11216:
 15576                           
 15577                           ;stkvar	_ne @ sp[(-56)+46]
 15578  010B12  0EF6               	movlw	-10
 15579  010B14  6AE3               	clrf	plusw1,c
 15580  010B16  0EF7               	movlw	-9
 15581  010B18  6AE3               	clrf	plusw1,c
 15582  010B1A                     l2134:
 15583                           
 15584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 15585                           ;stkvar	_pp @ sp[(-56)+50]
 15586  010B1A  0EFA               	movlw	-6
 15587  010B1C  6AE3               	clrf	plusw1,c
 15588  010B1E  0EFB               	movlw	-5
 15589  010B20  6AE3               	clrf	plusw1,c
 15590                           
 15591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 15592                           ;stkvar	_t @ sp[(-56)+52]
 15593  010B22  0EFC               	movlw	-4
 15594  010B24  6AE3               	clrf	plusw1,c
 15595  010B26  0EFD               	movlw	-3
 15596  010B28  6AE3               	clrf	plusw1,c
 15597                           
 15598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 15599                           ;stkvar	_i @ sp[(-56)+36]
 15600  010B2A  0EEC               	movlw	-20
 15601  010B2C  6AE3               	clrf	plusw1,c
 15602  010B2E  0EED               	movlw	-19
 15603  010B30  6AE3               	clrf	plusw1,c
 15604                           
 15605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 15606  010B32  D1B7               	goto	l11268
 15607  010B34                     l11218:
 15608                           
 15609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 15610                           ;stkvar	_u @ sp[(-56)+12]
 15611  010B34  0ED4               	movlw	-44
 15612  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 15613  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 15614  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 15615  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 15616                           
 15617                           ;stkvar	_h @ sp[(-60)+24]
 15618  010B4E  0EDC               	movlw	-36
 15619  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 15620  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 15621  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15622  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 15623  010B68  ECE3  F0A0         	call	___fldiv	;wreg free
 15624  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 15625  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15626  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15627  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 15628  010B84  ECE4  F0AB         	call	_floorf	;wreg free
 15629                           
 15630                           ;stkvar	_l @ sp[(-56)+20]
 15631  010B88  0EDC               	movlw	-36
 15632  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 15633  010B90  0EDD               	movlw	-35
 15634  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15635  010B98  0EDE               	movlw	-34
 15636  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15637  010BA0  0EDF               	movlw	-33
 15638  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 15639                           
 15640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 15641                           ;stkvar	_l @ sp[(-56)+20]
 15642  010BA8  0EDC               	movlw	-36
 15643  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 15644  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 15645  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 15646  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 15647  010BC2  EC2D  F0BC         	call	___fltol	;wreg free
 15648  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 15649  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 15650                           
 15651                           ;stkvar	_d @ sp[(-56)+44]
 15652  010BD2  0EF4               	movlw	-12
 15653  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15654  010BDA  0EF5               	movlw	-11
 15655  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15656                           
 15657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 15658  010BE2  B825               	btfsc	_flags^0,4,c
 15659  010BE4  D026               	goto	l11232
 15660                           
 15661                           ;stkvar	_d @ sp[(-56)+44]
 15662  010BE6  0EF4               	movlw	-12
 15663  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 15664  010BEE  0EF5               	movlw	-11
 15665  010BF0  50E3               	movf	plusw1,w,c
 15666  010BF2  1001               	iorwf	btemp^0,w,c
 15667  010BF4  A4D8               	btfss	status,2,c
 15668  010BF6  D01D               	goto	l11232
 15669                           
 15670                           ;stkvar	_mode @ sp[(-56)+54]
 15671  010BF8  0EFE               	movlw	-2
 15672  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 15673  010C00  0E67               	movlw	103
 15674  010C02  1801               	xorwf	btemp^0,w,c
 15675  010C04  A4D8               	btfss	status,2,c
 15676  010C06  D015               	goto	l11232
 15677                           
 15678                           ;stkvar	_ne @ sp[(-56)+46]
 15679  010C08  0EF7               	movlw	-9
 15680  010C0A  AEE3               	btfss	plusw1,7,c
 15681  010C0C  D012               	goto	l11232
 15682                           
 15683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 15684                           ;stkvar	_t @ sp[(-56)+52]
 15685  010C0E  0EFC               	movlw	-4
 15686  010C10  50E3               	movf	plusw1,w,c
 15687  010C12  0F01               	addlw	1
 15688  010C14  6E01               	movwf	btemp^0,c
 15689  010C16  0EFC               	movlw	-4
 15690  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 15691  010C1E  6A01               	clrf	btemp^0,c
 15692  010C20  0EFD               	movlw	-3
 15693  010C22  50E3               	movf	plusw1,w,c
 15694  010C24  2001               	addwfc	btemp^0,w,c
 15695  010C26  6E01               	movwf	btemp^0,c
 15696  010C28  0EFD               	movlw	-3
 15697  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 15698                           
 15699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 15700  010C30  D0AF               	goto	l11260
 15701  010C32                     l11232:
 15702                           
 15703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 15704                           ;stkvar	_pp @ sp[(-56)+50]
 15705  010C32  0EFA               	movlw	-6
 15706  010C34  006F FF8C  F001    	movff	plusw1,btemp
 15707  010C3A  0EFB               	movlw	-5
 15708  010C3C  50E3               	movf	plusw1,w,c
 15709  010C3E  1001               	iorwf	btemp^0,w,c
 15710  010C40  A4D8               	btfss	status,2,c
 15711  010C42  D070               	goto	l11252
 15712                           
 15713                           ;stkvar	_ne @ sp[(-56)+46]
 15714  010C44  0EF7               	movlw	-9
 15715  010C46  AEE3               	btfss	plusw1,7,c
 15716  010C48  D06D               	goto	l11252
 15717                           
 15718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 15719                           ;stkvar	_n @ sp[(-56)+32]
 15720  010C4A  0EE8               	movlw	-24
 15721  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15722  010C52  0EE9               	movlw	-23
 15723  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 15724  010C5A  0E94               	movlw	low _dbuf
 15725  010C5C  240B               	addwf	(btemp+10)^0,w,c
 15726  010C5E  6ED9               	movwf	fsr2l,c
 15727  010C60  0E03               	movlw	high _dbuf
 15728  010C62  200C               	addwfc	(btemp+11)^0,w,c
 15729  010C64  6EDA               	movwf	fsr2h,c
 15730  010C66  0E2E               	movlw	46
 15731  010C68  6EDF               	movwf	indf2,c
 15732                           
 15733                           ;stkvar	_n @ sp[(-56)+32]
 15734  010C6A  0EE8               	movlw	-24
 15735  010C6C  50E3               	movf	plusw1,w,c
 15736  010C6E  0F01               	addlw	1
 15737  010C70  6E01               	movwf	btemp^0,c
 15738  010C72  0EE8               	movlw	-24
 15739  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 15740  010C7A  6A01               	clrf	btemp^0,c
 15741  010C7C  0EE9               	movlw	-23
 15742  010C7E  50E3               	movf	plusw1,w,c
 15743  010C80  2001               	addwfc	btemp^0,w,c
 15744  010C82  6E01               	movwf	btemp^0,c
 15745  010C84  0EE9               	movlw	-23
 15746  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 15747                           
 15748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 15749                           ;stkvar	_w @ sp[(-56)+38]
 15750  010C8C  50E1               	movf	fsr1l,w,c
 15751  010C8E  0FEE               	addlw	-18
 15752  010C90  6ED9               	movwf	fsr2l,c
 15753  010C92  50E2               	movf	fsr1h,w,c
 15754  010C94  6EDA               	movwf	fsr2h,c
 15755  010C96  0EFF               	movlw	255
 15756  010C98  22DA               	addwfc	fsr2h,f,c
 15757  010C9A  06DE               	decf	postinc2,f,c
 15758  010C9C  0E00               	movlw	0
 15759  010C9E  5ADD               	subwfb	postdec2,f,c
 15760                           
 15761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 15762  010CA0  0E01               	movlw	1
 15763  010CA2  6E0B               	movwf	(btemp+10)^0,c
 15764  010CA4  0E00               	movlw	0
 15765  010CA6  6E0C               	movwf	(btemp+11)^0,c
 15766                           
 15767                           ;stkvar	_pp @ sp[(-56)+50]
 15768  010CA8  0EFA               	movlw	-6
 15769  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15770  010CB0  0EFB               	movlw	-5
 15771  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15772  010CB8  D035               	goto	l11252
 15773  010CBA                     l11244:
 15774                           
 15775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 15776                           ;stkvar	_n @ sp[(-56)+32]
 15777  010CBA  0EE8               	movlw	-24
 15778  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 15779  010CC2  0EE9               	movlw	-23
 15780  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 15781  010CCA  0E94               	movlw	low _dbuf
 15782  010CCC  240B               	addwf	(btemp+10)^0,w,c
 15783  010CCE  6ED9               	movwf	fsr2l,c
 15784  010CD0  0E03               	movlw	high _dbuf
 15785  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 15786  010CD4  6EDA               	movwf	fsr2h,c
 15787  010CD6  0E30               	movlw	48
 15788  010CD8  6EDF               	movwf	indf2,c
 15789                           
 15790                           ;stkvar	_n @ sp[(-56)+32]
 15791  010CDA  0EE8               	movlw	-24
 15792  010CDC  50E3               	movf	plusw1,w,c
 15793  010CDE  0F01               	addlw	1
 15794  010CE0  6E01               	movwf	btemp^0,c
 15795  010CE2  0EE8               	movlw	-24
 15796  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 15797  010CEA  6A01               	clrf	btemp^0,c
 15798  010CEC  0EE9               	movlw	-23
 15799  010CEE  50E3               	movf	plusw1,w,c
 15800  010CF0  2001               	addwfc	btemp^0,w,c
 15801  010CF2  6E01               	movwf	btemp^0,c
 15802  010CF4  0EE9               	movlw	-23
 15803  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 15804                           
 15805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 15806                           ;stkvar	_w @ sp[(-56)+38]
 15807  010CFC  50E1               	movf	fsr1l,w,c
 15808  010CFE  0FEE               	addlw	-18
 15809  010D00  6ED9               	movwf	fsr2l,c
 15810  010D02  50E2               	movf	fsr1h,w,c
 15811  010D04  6EDA               	movwf	fsr2h,c
 15812  010D06  0EFF               	movlw	255
 15813  010D08  22DA               	addwfc	fsr2h,f,c
 15814  010D0A  06DE               	decf	postinc2,f,c
 15815  010D0C  0E00               	movlw	0
 15816  010D0E  5ADD               	subwfb	postdec2,f,c
 15817                           
 15818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 15819                           ;stkvar	_t @ sp[(-56)+52]
 15820  010D10  50E1               	movf	fsr1l,w,c
 15821  010D12  0FFC               	addlw	-4
 15822  010D14  6ED9               	movwf	fsr2l,c
 15823  010D16  50E2               	movf	fsr1h,w,c
 15824  010D18  6EDA               	movwf	fsr2h,c
 15825  010D1A  0EFF               	movlw	255
 15826  010D1C  22DA               	addwfc	fsr2h,f,c
 15827  010D1E  06DE               	decf	postinc2,f,c
 15828  010D20  0E00               	movlw	0
 15829  010D22  5ADD               	subwfb	postdec2,f,c
 15830  010D24                     l11252:
 15831                           
 15832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 15833                           ;stkvar	_t @ sp[(-56)+52]
 15834  010D24  0EFC               	movlw	-4
 15835  010D26  006F FF8C  F001    	movff	plusw1,btemp
 15836  010D2C  0EFD               	movlw	-3
 15837  010D2E  50E3               	movf	plusw1,w,c
 15838  010D30  1001               	iorwf	btemp^0,w,c
 15839  010D32  A4D8               	btfss	status,2,c
 15840  010D34  D7C2               	goto	l11244
 15841                           
 15842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 15843                           ;stkvar	_n @ sp[(-56)+32]
 15844  010D36  0EE8               	movlw	-24
 15845  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 15846  010D3E  0EE9               	movlw	-23
 15847  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 15848  010D46  0E94               	movlw	low _dbuf
 15849  010D48  240B               	addwf	(btemp+10)^0,w,c
 15850  010D4A  6ED9               	movwf	fsr2l,c
 15851  010D4C  0E03               	movlw	high _dbuf
 15852  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 15853  010D50  6EDA               	movwf	fsr2h,c
 15854                           
 15855                           ;stkvar	_d @ sp[(-56)+44]
 15856  010D52  0EF4               	movlw	-12
 15857  010D54  50E3               	movf	plusw1,w,c
 15858  010D56  0F30               	addlw	48
 15859  010D58  6EDF               	movwf	indf2,c
 15860                           
 15861                           ;stkvar	_n @ sp[(-56)+32]
 15862  010D5A  0EE8               	movlw	-24
 15863  010D5C  50E3               	movf	plusw1,w,c
 15864  010D5E  0F01               	addlw	1
 15865  010D60  6E01               	movwf	btemp^0,c
 15866  010D62  0EE8               	movlw	-24
 15867  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 15868  010D6A  6A01               	clrf	btemp^0,c
 15869  010D6C  0EE9               	movlw	-23
 15870  010D6E  50E3               	movf	plusw1,w,c
 15871  010D70  2001               	addwfc	btemp^0,w,c
 15872  010D72  6E01               	movwf	btemp^0,c
 15873  010D74  0EE9               	movlw	-23
 15874  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 15875                           
 15876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 15877                           ;stkvar	_w @ sp[(-56)+38]
 15878  010D7C  50E1               	movf	fsr1l,w,c
 15879  010D7E  0FEE               	addlw	-18
 15880  010D80  6ED9               	movwf	fsr2l,c
 15881  010D82  50E2               	movf	fsr1h,w,c
 15882  010D84  6EDA               	movwf	fsr2h,c
 15883  010D86  0EFF               	movlw	255
 15884  010D88  22DA               	addwfc	fsr2h,f,c
 15885  010D8A  06DE               	decf	postinc2,f,c
 15886  010D8C  0E00               	movlw	0
 15887  010D8E  5ADD               	subwfb	postdec2,f,c
 15888  010D90                     l11260:
 15889                           
 15890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 15891                           ;stkvar	_u @ sp[(-56)+12]
 15892  010D90  0ED4               	movlw	-44
 15893  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 15894  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 15895  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 15896  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 15897                           
 15898                           ;stkvar	_l @ sp[(-60)+20]
 15899  010DAA  0ED8               	movlw	-40
 15900  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 15901  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 15902  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 15903  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 15904  010DC4  ECAD  F095         	call	___flmul	;wreg free
 15905  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 15906  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15907  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15908  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 15909                           
 15910                           ;stkvar	_h @ sp[(-60)+24]
 15911  010DE0  0EDC               	movlw	-36
 15912  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 15913  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 15914  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 15915  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 15916  010DFA  ECA7  F0CE         	call	___flsub	;wreg free
 15917                           
 15918                           ;stkvar	_h @ sp[(-56)+24]
 15919  010DFE  0EE0               	movlw	-32
 15920  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 15921  010E06  0EE1               	movlw	-31
 15922  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15923  010E0E  0EE2               	movlw	-30
 15924  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15925  010E16  0EE3               	movlw	-29
 15926  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 15927                           
 15928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 15929  010E1E  0E00               	movlw	0
 15930  010E20  6EE6               	movwf	postinc1,c
 15931  010E22  0E00               	movlw	0
 15932  010E24  6EE6               	movwf	postinc1,c
 15933  010E26  0E20               	movlw	32
 15934  010E28  6EE6               	movwf	postinc1,c
 15935  010E2A  0E41               	movlw	65
 15936  010E2C  6EE6               	movwf	postinc1,c
 15937                           
 15938                           ;stkvar	_u @ sp[(-60)+12]
 15939  010E2E  0ED0               	movlw	-48
 15940  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 15941  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 15942  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 15943  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 15944  010E48  ECE3  F0A0         	call	___fldiv	;wreg free
 15945                           
 15946                           ;stkvar	_u @ sp[(-56)+12]
 15947  010E4C  0ED4               	movlw	-44
 15948  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 15949  010E54  0ED5               	movlw	-43
 15950  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15951  010E5C  0ED6               	movlw	-42
 15952  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15953  010E64  0ED7               	movlw	-41
 15954  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 15955                           
 15956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 15957                           ;stkvar	_ne @ sp[(-56)+46]
 15958  010E6C  50E1               	movf	fsr1l,w,c
 15959  010E6E  0FF6               	addlw	-10
 15960  010E70  6ED9               	movwf	fsr2l,c
 15961  010E72  50E2               	movf	fsr1h,w,c
 15962  010E74  6EDA               	movwf	fsr2h,c
 15963  010E76  0EFF               	movlw	255
 15964  010E78  22DA               	addwfc	fsr2h,f,c
 15965  010E7A  06DE               	decf	postinc2,f,c
 15966  010E7C  0E00               	movlw	0
 15967  010E7E  5ADD               	subwfb	postdec2,f,c
 15968                           
 15969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 15970                           ;stkvar	_i @ sp[(-56)+36]
 15971  010E80  0EEC               	movlw	-20
 15972  010E82  50E3               	movf	plusw1,w,c
 15973  010E84  0F01               	addlw	1
 15974  010E86  6E01               	movwf	btemp^0,c
 15975  010E88  0EEC               	movlw	-20
 15976  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 15977  010E90  6A01               	clrf	btemp^0,c
 15978  010E92  0EED               	movlw	-19
 15979  010E94  50E3               	movf	plusw1,w,c
 15980  010E96  2001               	addwfc	btemp^0,w,c
 15981  010E98  6E01               	movwf	btemp^0,c
 15982  010E9A  0EED               	movlw	-19
 15983  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 15984  010EA2                     l11268:
 15985                           
 15986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 15987                           ;stkvar	_m @ sp[(-56)+48]
 15988                           ;stkvar	_i @ sp[(-56)+36]
 15989  010EA2  50E1               	movf	fsr1l,w,c
 15990  010EA4  0FEC               	addlw	-20
 15991  010EA6  6ED9               	movwf	fsr2l,c
 15992  010EA8  50E2               	movf	fsr1h,w,c
 15993  010EAA  6EDA               	movwf	fsr2h,c
 15994  010EAC  0EFF               	movlw	255
 15995  010EAE  22DA               	addwfc	fsr2h,f,c
 15996  010EB0  0EF8               	movlw	-8
 15997  010EB2  50E3               	movf	plusw1,w,c
 15998  010EB4  5CDE               	subwf	postinc2,w,c
 15999  010EB6  50DE               	movf	postinc2,w,c
 16000  010EB8  0A80               	xorlw	128
 16001  010EBA  6E01               	movwf	btemp^0,c
 16002  010EBC  0EF9               	movlw	-7
 16003  010EBE  50E3               	movf	plusw1,w,c
 16004  010EC0  0A80               	xorlw	128
 16005  010EC2  5801               	subwfb	btemp^0,w,c
 16006  010EC4  B0D8               	btfsc	status,0,c
 16007  010EC6  D00E               	goto	u10690
 16008                           
 16009                           ;stkvar	_n @ sp[(-56)+32]
 16010  010EC8  0EE9               	movlw	-23
 16011  010ECA  BEE3               	btfsc	plusw1,7,c
 16012  010ECC  D633               	goto	l11218
 16013  010ECE  0EE9               	movlw	-23
 16014  010ED0  50E3               	movf	plusw1,w,c
 16015  010ED2  E108               	bnz	u10690
 16016  010ED4  0EE8               	movlw	-24
 16017  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 16018  010EDC  0E4B               	movlw	75
 16019  010EDE  5E01               	subwf	btemp^0,f,c
 16020  010EE0  A0D8               	btfss	status,0,c
 16021  010EE2  D628               	goto	l11218
 16022  010EE4                     u10690:
 16023                           
 16024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 16025                           ;stkvar	_pp @ sp[(-56)+50]
 16026  010EE4  0EFA               	movlw	-6
 16027  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 16028  010EEC  0EFB               	movlw	-5
 16029  010EEE  50E3               	movf	plusw1,w,c
 16030  010EF0  1001               	iorwf	btemp^0,w,c
 16031  010EF2  B4D8               	btfsc	status,2,c
 16032  010EF4  A825               	btfss	_flags^0,4,c
 16033  010EF6  D021               	goto	l11280
 16034                           
 16035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 16036                           ;stkvar	_n @ sp[(-56)+32]
 16037  010EF8  0EE8               	movlw	-24
 16038  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 16039  010F00  0EE9               	movlw	-23
 16040  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 16041  010F08  0E94               	movlw	low _dbuf
 16042  010F0A  240B               	addwf	(btemp+10)^0,w,c
 16043  010F0C  6ED9               	movwf	fsr2l,c
 16044  010F0E  0E03               	movlw	high _dbuf
 16045  010F10  200C               	addwfc	(btemp+11)^0,w,c
 16046  010F12  6EDA               	movwf	fsr2h,c
 16047  010F14  0E2E               	movlw	46
 16048  010F16  6EDF               	movwf	indf2,c
 16049                           
 16050                           ;stkvar	_n @ sp[(-56)+32]
 16051  010F18  0EE8               	movlw	-24
 16052  010F1A  50E3               	movf	plusw1,w,c
 16053  010F1C  0F01               	addlw	1
 16054  010F1E  6E01               	movwf	btemp^0,c
 16055  010F20  0EE8               	movlw	-24
 16056  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 16057  010F28  6A01               	clrf	btemp^0,c
 16058  010F2A  0EE9               	movlw	-23
 16059  010F2C  50E3               	movf	plusw1,w,c
 16060  010F2E  2001               	addwfc	btemp^0,w,c
 16061  010F30  6E01               	movwf	btemp^0,c
 16062  010F32  0EE9               	movlw	-23
 16063  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 16064  010F3A                     l11280:
 16065                           
 16066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 16067                           ;stkvar	_n @ sp[(-56)+32]
 16068  010F3A  0EE8               	movlw	-24
 16069  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16070  010F42  0EE9               	movlw	-23
 16071  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 16072  010F4A  0E94               	movlw	low _dbuf
 16073  010F4C  240B               	addwf	(btemp+10)^0,w,c
 16074  010F4E  6ED9               	movwf	fsr2l,c
 16075  010F50  0E03               	movlw	high _dbuf
 16076  010F52  200C               	addwfc	(btemp+11)^0,w,c
 16077  010F54  6EDA               	movwf	fsr2h,c
 16078  010F56  0E00               	movlw	0
 16079  010F58  6EDF               	movwf	indf2,c
 16080                           
 16081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 16082                           ;stkvar	_nmode @ sp[(-56)+55]
 16083  010F5A  0EFF               	movlw	-1
 16084  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 16085  010F62  0E65               	movlw	101
 16086  010F64  1801               	xorwf	btemp^0,w,c
 16087  010F66  A4D8               	btfss	status,2,c
 16088  010F68  EF16  F081         	goto	l11084
 16089                           
 16090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 16091  010F6C  0E4F               	movlw	79
 16092  010F6E  6E0B               	movwf	(btemp+10)^0,c
 16093  010F70  0E00               	movlw	0
 16094  010F72  6E0C               	movwf	(btemp+11)^0,c
 16095                           
 16096                           ;stkvar	_i @ sp[(-56)+36]
 16097  010F74  0EEC               	movlw	-20
 16098  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16099  010F7C  0EED               	movlw	-19
 16100  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16101                           
 16102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 16103                           ;stkvar	_i @ sp[(-56)+36]
 16104  010F84  0EEC               	movlw	-20
 16105  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 16106  010F8C  0EED               	movlw	-19
 16107  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16108  010F94  0E94               	movlw	low _dbuf
 16109  010F96  240B               	addwf	(btemp+10)^0,w,c
 16110  010F98  6ED9               	movwf	fsr2l,c
 16111  010F9A  0E03               	movlw	high _dbuf
 16112  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 16113  010F9E  6EDA               	movwf	fsr2h,c
 16114  010FA0  0E00               	movlw	0
 16115  010FA2  6EDF               	movwf	indf2,c
 16116                           
 16117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 16118                           ;stkvar	_sign @ sp[(-56)+42]
 16119  010FA4  0EF2               	movlw	-14
 16120  010FA6  6AE3               	clrf	plusw1,c
 16121  010FA8  0EF3               	movlw	-13
 16122  010FAA  6AE3               	clrf	plusw1,c
 16123                           
 16124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 16125                           ;stkvar	_e @ sp[(-56)+34]
 16126  010FAC  0EEB               	movlw	-21
 16127  010FAE  AEE3               	btfss	plusw1,7,c
 16128  010FB0  D012               	goto	l11294
 16129                           
 16130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 16131  010FB2  0E01               	movlw	1
 16132  010FB4  6E0B               	movwf	(btemp+10)^0,c
 16133  010FB6  0E00               	movlw	0
 16134  010FB8  6E0C               	movwf	(btemp+11)^0,c
 16135                           
 16136                           ;stkvar	_sign @ sp[(-56)+42]
 16137  010FBA  0EF2               	movlw	-14
 16138  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16139  010FC2  0EF3               	movlw	-13
 16140  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16141                           
 16142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 16143                           ;stkvar	_e @ sp[(-56)+34]
 16144                           ;stkvar	_e @ sp[(-56)+34]
 16145  010FCA  0EEA               	movlw	-22
 16146  010FCC  6CE3               	negf	plusw1,c
 16147  010FCE  0EEB               	movlw	-21
 16148  010FD0  1EE3               	comf	plusw1,f,c
 16149  010FD2  B0D8               	btfsc	status,0,c
 16150  010FD4  2AE3               	incf	plusw1,f,c
 16151  010FD6                     l11294:
 16152                           
 16153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 16154  010FD6  0E02               	movlw	2
 16155  010FD8  6E0B               	movwf	(btemp+10)^0,c
 16156  010FDA  0E00               	movlw	0
 16157  010FDC  6E0C               	movwf	(btemp+11)^0,c
 16158                           
 16159                           ;stkvar	_p @ sp[(-56)+40]
 16160  010FDE  0EF0               	movlw	-16
 16161  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16162  010FE6  0EF1               	movlw	-15
 16163  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 16164                           
 16165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 16166  010FEE  D051               	goto	l11306
 16167  010FF0                     l11296:
 16168                           
 16169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 16170                           ;stkvar	_i @ sp[(-56)+36]
 16171  010FF0  50E1               	movf	fsr1l,w,c
 16172  010FF2  0FEC               	addlw	-20
 16173  010FF4  6ED9               	movwf	fsr2l,c
 16174  010FF6  50E2               	movf	fsr1h,w,c
 16175  010FF8  6EDA               	movwf	fsr2h,c
 16176  010FFA  0EFF               	movlw	255
 16177  010FFC  22DA               	addwfc	fsr2h,f,c
 16178  010FFE  06DE               	decf	postinc2,f,c
 16179  011000  0E00               	movlw	0
 16180  011002  5ADD               	subwfb	postdec2,f,c
 16181                           
 16182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 16183                           ;stkvar	_i @ sp[(-56)+36]
 16184  011004  0EEC               	movlw	-20
 16185  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 16186  01100C  0EED               	movlw	-19
 16187  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16188  011014  0E94               	movlw	low _dbuf
 16189  011016  240B               	addwf	(btemp+10)^0,w,c
 16190  011018  6ED9               	movwf	fsr2l,c
 16191  01101A  0E03               	movlw	high _dbuf
 16192  01101C  200C               	addwfc	(btemp+11)^0,w,c
 16193  01101E  6EDA               	movwf	fsr2h,c
 16194  011020  0E0A               	movlw	10
 16195  011022  6EE6               	movwf	postinc1,c
 16196  011024  0E00               	movlw	0
 16197  011026  6EE6               	movwf	postinc1,c
 16198                           
 16199                           ;stkvar	_e @ sp[(-58)+34]
 16200  011028  0EE8               	movlw	-24
 16201  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 16202  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 16203  011036  ECA7  F0C2         	call	___awmod	;wreg free
 16204  01103A  5001               	movf	btemp^0,w,c
 16205  01103C  0F30               	addlw	48
 16206  01103E  6EDF               	movwf	indf2,c
 16207                           
 16208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 16209  011040  0E0A               	movlw	10
 16210  011042  6EE6               	movwf	postinc1,c
 16211  011044  0E00               	movlw	0
 16212  011046  6EE6               	movwf	postinc1,c
 16213                           
 16214                           ;stkvar	_e @ sp[(-58)+34]
 16215  011048  0EE8               	movlw	-24
 16216  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 16217  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 16218  011056  EC01  F0BF         	call	___awdiv	;wreg free
 16219                           
 16220                           ;stkvar	_e @ sp[(-56)+34]
 16221  01105A  0EEA               	movlw	-22
 16222  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 16223  011062  0EEB               	movlw	-21
 16224  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16225                           
 16226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 16227                           ;stkvar	_p @ sp[(-56)+40]
 16228  01106A  50E1               	movf	fsr1l,w,c
 16229  01106C  0FF0               	addlw	-16
 16230  01106E  6ED9               	movwf	fsr2l,c
 16231  011070  50E2               	movf	fsr1h,w,c
 16232  011072  6EDA               	movwf	fsr2h,c
 16233  011074  0EFF               	movlw	255
 16234  011076  22DA               	addwfc	fsr2h,f,c
 16235  011078  06DE               	decf	postinc2,f,c
 16236  01107A  0E00               	movlw	0
 16237  01107C  5ADD               	subwfb	postdec2,f,c
 16238                           
 16239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 16240                           ;stkvar	_w @ sp[(-56)+38]
 16241  01107E  50E1               	movf	fsr1l,w,c
 16242  011080  0FEE               	addlw	-18
 16243  011082  6ED9               	movwf	fsr2l,c
 16244  011084  50E2               	movf	fsr1h,w,c
 16245  011086  6EDA               	movwf	fsr2h,c
 16246  011088  0EFF               	movlw	255
 16247  01108A  22DA               	addwfc	fsr2h,f,c
 16248  01108C  06DE               	decf	postinc2,f,c
 16249  01108E  0E00               	movlw	0
 16250  011090  5ADD               	subwfb	postdec2,f,c
 16251  011092                     l11306:
 16252                           
 16253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 16254                           ;stkvar	_e @ sp[(-56)+34]
 16255  011092  0EEA               	movlw	-22
 16256  011094  006F FF8C  F001    	movff	plusw1,btemp
 16257  01109A  0EEB               	movlw	-21
 16258  01109C  50E3               	movf	plusw1,w,c
 16259  01109E  1001               	iorwf	btemp^0,w,c
 16260  0110A0  A4D8               	btfss	status,2,c
 16261  0110A2  D7A6               	goto	l11296
 16262                           
 16263                           ;stkvar	_p @ sp[(-56)+40]
 16264  0110A4  0EF1               	movlw	-15
 16265  0110A6  BEE3               	btfsc	plusw1,7,c
 16266  0110A8  D007               	goto	u10750
 16267  0110AA  0EF1               	movlw	-15
 16268  0110AC  50E3               	movf	plusw1,w,c
 16269  0110AE  E1A0               	bnz	l11296
 16270  0110B0  0EF0               	movlw	-16
 16271  0110B2  04E3               	decf	plusw1,w,c
 16272  0110B4  B0D8               	btfsc	status,0,c
 16273  0110B6  D79C               	goto	l11296
 16274  0110B8                     u10750:
 16275                           
 16276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 16277                           ;stkvar	_i @ sp[(-56)+36]
 16278  0110B8  50E1               	movf	fsr1l,w,c
 16279  0110BA  0FEC               	addlw	-20
 16280  0110BC  6ED9               	movwf	fsr2l,c
 16281  0110BE  50E2               	movf	fsr1h,w,c
 16282  0110C0  6EDA               	movwf	fsr2h,c
 16283  0110C2  0EFF               	movlw	255
 16284  0110C4  22DA               	addwfc	fsr2h,f,c
 16285  0110C6  06DE               	decf	postinc2,f,c
 16286  0110C8  0E00               	movlw	0
 16287  0110CA  5ADD               	subwfb	postdec2,f,c
 16288                           
 16289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 16290                           ;stkvar	_sign @ sp[(-56)+42]
 16291  0110CC  0EF2               	movlw	-14
 16292  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 16293  0110D4  0EF3               	movlw	-13
 16294  0110D6  50E3               	movf	plusw1,w,c
 16295  0110D8  1001               	iorwf	btemp^0,w,c
 16296  0110DA  A4D8               	btfss	status,2,c
 16297  0110DC  D002               	goto	l11316
 16298  0110DE  0E2B               	movlw	43
 16299  0110E0  D001               	goto	L15
 16300  0110E2                     l11316:
 16301  0110E2  0E2D               	movlw	45
 16302  0110E4                     L15:
 16303  0110E4  6E0B               	movwf	(btemp+10)^0,c
 16304  0110E6  0E00               	movlw	0
 16305  0110E8  6E0C               	movwf	(btemp+11)^0,c
 16306                           
 16307                           ;stkvar	_efgtoa$5225 @ sp[(-56)+4]
 16308  0110EA  0ECC               	movlw	-52
 16309  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16310  0110F2  0ECD               	movlw	-51
 16311  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16312                           
 16313                           ;stkvar	_efgtoa$5225 @ sp[(-56)+4]
 16314                           ;stkvar	_i @ sp[(-56)+36]
 16315  0110FA  0EEC               	movlw	-20
 16316  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16317  011102  0EED               	movlw	-19
 16318  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 16319  01110A  0E94               	movlw	low _dbuf
 16320  01110C  240B               	addwf	(btemp+10)^0,w,c
 16321  01110E  6ED9               	movwf	fsr2l,c
 16322  011110  0E03               	movlw	high _dbuf
 16323  011112  200C               	addwfc	(btemp+11)^0,w,c
 16324  011114  6EDA               	movwf	fsr2h,c
 16325  011116  0ECC               	movlw	-52
 16326  011118  006F FF8F FFDF     	movff	plusw1,indf2
 16327                           
 16328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 16329                           ;stkvar	_w @ sp[(-56)+38]
 16330  01111E  50E1               	movf	fsr1l,w,c
 16331  011120  0FEE               	addlw	-18
 16332  011122  6ED9               	movwf	fsr2l,c
 16333  011124  50E2               	movf	fsr1h,w,c
 16334  011126  6EDA               	movwf	fsr2h,c
 16335  011128  0EFF               	movlw	255
 16336  01112A  22DA               	addwfc	fsr2h,f,c
 16337  01112C  06DE               	decf	postinc2,f,c
 16338  01112E  0E00               	movlw	0
 16339  011130  5ADD               	subwfb	postdec2,f,c
 16340                           
 16341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 16342                           ;stkvar	_i @ sp[(-56)+36]
 16343  011132  50E1               	movf	fsr1l,w,c
 16344  011134  0FEC               	addlw	-20
 16345  011136  6ED9               	movwf	fsr2l,c
 16346  011138  50E2               	movf	fsr1h,w,c
 16347  01113A  6EDA               	movwf	fsr2h,c
 16348  01113C  0EFF               	movlw	255
 16349  01113E  22DA               	addwfc	fsr2h,f,c
 16350  011140  06DE               	decf	postinc2,f,c
 16351  011142  0E00               	movlw	0
 16352  011144  5ADD               	subwfb	postdec2,f,c
 16353  011146  0EBF               	movlw	191
 16354  011148  6E0B               	movwf	(btemp+10)^0,c
 16355  01114A  0EFF               	movlw	255
 16356  01114C  6E0C               	movwf	(btemp+11)^0,c
 16357                           
 16358                           ;stkvar	_c @ sp[(-56)+-7]
 16359  01114E  0EC1               	movlw	-63
 16360  011150  50E3               	movf	plusw1,w,c
 16361  011152  6E09               	movwf	(btemp+8)^0,c
 16362  011154  6A0A               	clrf	(btemp+9)^0,c
 16363  011156  500B               	movf	(btemp+10)^0,w,c
 16364  011158  2609               	addwf	(btemp+8)^0,f,c
 16365  01115A  500C               	movf	(btemp+11)^0,w,c
 16366  01115C  220A               	addwfc	(btemp+9)^0,f,c
 16367  01115E  500A               	movf	(btemp+9)^0,w,c
 16368  011160  E106               	bnz	u10770
 16369  011162  0E1A               	movlw	26
 16370  011164  5C09               	subwf	(btemp+8)^0,w,c
 16371  011166  B0D8               	btfsc	status,0,c
 16372  011168  D002               	goto	u10770
 16373  01116A  0E01               	movlw	1
 16374  01116C  D001               	goto	u10780
 16375  01116E                     u10770:
 16376  01116E  0E00               	movlw	0
 16377  011170                     u10780:
 16378  011170  6E0B               	movwf	(btemp+10)^0,c
 16379  011172  6A0C               	clrf	(btemp+11)^0,c
 16380                           
 16381                           ;stkvar	_efgtoa$5227 @ sp[(-56)+0]
 16382  011174  0EC8               	movlw	-56
 16383  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16384  01117C  0EC9               	movlw	-55
 16385  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16386                           
 16387                           ;stkvar	_efgtoa$5227 @ sp[(-56)+0]
 16388  011184  0EC8               	movlw	-56
 16389  011186  006F FF8C  F001    	movff	plusw1,btemp
 16390  01118C  0EC9               	movlw	-55
 16391  01118E  50E3               	movf	plusw1,w,c
 16392  011190  1001               	iorwf	btemp^0,w,c
 16393  011192  A4D8               	btfss	status,2,c
 16394  011194  D002               	goto	l11332
 16395  011196  0E65               	movlw	101
 16396  011198  D001               	goto	L16
 16397  01119A                     l11332:
 16398  01119A  0E45               	movlw	69
 16399  01119C                     L16:
 16400  01119C  6E0B               	movwf	(btemp+10)^0,c
 16401  01119E  0E00               	movlw	0
 16402  0111A0  6E0C               	movwf	(btemp+11)^0,c
 16403                           
 16404                           ;stkvar	_efgtoa$5226 @ sp[(-56)+2]
 16405  0111A2  0ECA               	movlw	-54
 16406  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16407  0111AA  0ECB               	movlw	-53
 16408  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16409                           
 16410                           ;stkvar	_efgtoa$5226 @ sp[(-56)+2]
 16411                           ;stkvar	_i @ sp[(-56)+36]
 16412  0111B2  0EEC               	movlw	-20
 16413  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 16414  0111BA  0EED               	movlw	-19
 16415  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 16416  0111C2  0E94               	movlw	low _dbuf
 16417  0111C4  240B               	addwf	(btemp+10)^0,w,c
 16418  0111C6  6ED9               	movwf	fsr2l,c
 16419  0111C8  0E03               	movlw	high _dbuf
 16420  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 16421  0111CC  6EDA               	movwf	fsr2h,c
 16422  0111CE  0ECA               	movlw	-54
 16423  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 16424                           
 16425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 16426                           ;stkvar	_w @ sp[(-56)+38]
 16427  0111D6  50E1               	movf	fsr1l,w,c
 16428  0111D8  0FEE               	addlw	-18
 16429  0111DA  6ED9               	movwf	fsr2l,c
 16430  0111DC  50E2               	movf	fsr1h,w,c
 16431  0111DE  6EDA               	movwf	fsr2h,c
 16432  0111E0  0EFF               	movlw	255
 16433  0111E2  22DA               	addwfc	fsr2h,f,c
 16434  0111E4  06DE               	decf	postinc2,f,c
 16435  0111E6  0E00               	movlw	0
 16436  0111E8  5ADD               	subwfb	postdec2,f,c
 16437                           
 16438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 16439                           ;stkvar	_i @ sp[(-56)+36]
 16440  0111EA  0EEC               	movlw	-20
 16441  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16442  0111F2  0EED               	movlw	-19
 16443  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16444  0111FA  0E94               	movlw	low _dbuf
 16445  0111FC  240B               	addwf	(btemp+10)^0,w,c
 16446  0111FE  6E09               	movwf	(btemp+8)^0,c
 16447  011200  0E03               	movlw	high _dbuf
 16448  011202  200C               	addwfc	(btemp+11)^0,w,c
 16449  011204  6E0A               	movwf	(btemp+9)^0,c
 16450  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 16451  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 16452                           
 16453                           ;stkvar	_n @ sp[(-58)+32]
 16454  011212  0E94               	movlw	low _dbuf
 16455  011214  6E0B               	movwf	(btemp+10)^0,c
 16456  011216  0E03               	movlw	high _dbuf
 16457  011218  6E0C               	movwf	(btemp+11)^0,c
 16458  01121A  0EE6               	movlw	-26
 16459  01121C  50E3               	movf	plusw1,w,c
 16460  01121E  260B               	addwf	(btemp+10)^0,f,c
 16461  011220  0EE7               	movlw	-25
 16462  011222  50E3               	movf	plusw1,w,c
 16463  011224  220C               	addwfc	(btemp+11)^0,f,c
 16464  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16465  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16466  011232  EC30  F0C6         	call	_strcpy	;wreg free
 16467  011236  EF16  F081         	goto	l11084
 16468  01123A                     l2090:
 16469                           
 16470                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 16471  01123A  0EC1               	movlw	193
 16472  01123C  26E1               	addwf	fsr1l,f,c
 16473  01123E  0EFF               	movlw	255
 16474  011240  22E2               	addwfc	fsr1h,f,c
 16475  011242  0012               	return		;funcret
 16476  011244                     __end_of_efgtoa:
 16477                           	opt callstack 0
 16478                           
 16479 ;; *************** function _tolower *****************
 16480 ;; Defined at:
 16481 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 16482 ;; Parameters:    Size  Location     Type
 16483 ;;  c               2  [STACK] int 
 16484 ;; Auto vars:     Size  Location     Type
 16485 ;;		None
 16486 ;; Return value:  Size  Location     Type
 16487 ;;                  2  [STACK] int 
 16488 ;; Registers used:
 16489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 16490 ;; Tracked objects:
 16491 ;;		On entry : 0/0
 16492 ;;		On exit  : 0/0
 16493 ;;		Unchanged: 0/0
 16494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16499 ;;Total ram usage:        0 bytes
 16500 ;; Hardware stack levels used:    1
 16501 ;; Hardware stack levels required when called:   16
 16502 ;; This function calls:
 16503 ;;		_isupper
 16504 ;; This function is called by:
 16505 ;;		_efgtoa
 16506 ;;		_vfpfcnvrt
 16507 ;; This function uses a reentrant model
 16508 ;;
 16509                           
 16510                           	psect	text56
 16511  0195F4                     __ptext56:
 16512                           	opt callstack 0
 16513  0195F4                     _tolower:
 16514                           	opt callstack 0
 16515                           
 16516                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16517  0195F4  52E6               	movf	postinc1,f,c
 16518  0195F6  52E6               	movf	postinc1,f,c
 16519                           
 16520                           ;stkvar	_c @ sp[(-2)+-2]
 16521                           
 16522                           ;incstack = 0
 16523 ;; hardware stack exceeded
 16524  0195F8  0EFC               	movlw	-4
 16525  0195FA  50E3               	movf	plusw1,w,c
 16526  0195FC  0FBF               	addlw	191
 16527  0195FE  6E0B               	movwf	(btemp+10)^0,c
 16528  019600  0EFD               	movlw	-3
 16529  019602  006F FF8C  F00C    	movff	plusw1,btemp+11
 16530  019608  0EFF               	movlw	255
 16531  01960A  220C               	addwfc	(btemp+11)^0,f,c
 16532  01960C  500C               	movf	(btemp+11)^0,w,c
 16533  01960E  E106               	bnz	u5640
 16534  019610  0E1A               	movlw	26
 16535  019612  5C0B               	subwf	(btemp+10)^0,w,c
 16536  019614  B0D8               	btfsc	status,0,c
 16537  019616  D002               	goto	u5640
 16538  019618  0E01               	movlw	1
 16539  01961A  D001               	goto	u5650
 16540  01961C                     u5640:
 16541  01961C  0E00               	movlw	0
 16542  01961E                     u5650:
 16543  01961E  6E0B               	movwf	(btemp+10)^0,c
 16544  019620  6A0C               	clrf	(btemp+11)^0,c
 16545                           
 16546                           ;stkvar	_tolower$6039 @ sp[(-2)+0]
 16547  019622  0EFE               	movlw	-2
 16548  019624  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16549  01962A  0EFF               	movlw	-1
 16550  01962C  0060  F033  FFE3   	movff	btemp+11,plusw1
 16551                           
 16552                           ;stkvar	_tolower$6039 @ sp[(-2)+0]
 16553  019632  0EFE               	movlw	-2
 16554  019634  006F FF8C  F001    	movff	plusw1,btemp
 16555  01963A  0EFF               	movlw	-1
 16556  01963C  50E3               	movf	plusw1,w,c
 16557  01963E  1001               	iorwf	btemp^0,w,c
 16558  019640  B4D8               	btfsc	status,2,c
 16559  019642  D00D               	goto	l7464
 16560                           
 16561                           ;stkvar	_c @ sp[(-2)+-2]
 16562  019644  0EFC               	movlw	-4
 16563  019646  006F FF8C  F001    	movff	plusw1,btemp
 16564  01964C  0EFD               	movlw	-3
 16565  01964E  006F FF8C  F002    	movff	plusw1,btemp+1
 16566  019654  0E20               	movlw	32
 16567  019656  1201               	iorwf	btemp^0,f,c
 16568  019658  0E00               	movlw	0
 16569  01965A  1202               	iorwf	(btemp+1)^0,f,c
 16570  01965C  D008               	goto	l3357
 16571  01965E                     l7464:
 16572                           
 16573                           ;stkvar	_c @ sp[(-2)+-2]
 16574  01965E  0EFC               	movlw	-4
 16575  019660  006F FF8C  F001    	movff	plusw1,btemp
 16576  019666  0EFD               	movlw	-3
 16577  019668  006F FF8C  F002    	movff	plusw1,btemp+1
 16578  01966E                     l3357:
 16579                           
 16580                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16581  01966E  52E5               	movf	postdec1,f,c
 16582  019670  52E5               	movf	postdec1,f,c
 16583  019672  52E5               	movf	postdec1,f,c
 16584  019674  52E5               	movf	postdec1,f,c
 16585  019676  0012               	return		;funcret
 16586  019678                     __end_of_tolower:
 16587                           	opt callstack 0
 16588                           
 16589 ;; *************** function _isupper *****************
 16590 ;; Defined at:
 16591 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 16592 ;; Parameters:    Size  Location     Type
 16593 ;;  c               2  [STACK] int 
 16594 ;; Auto vars:     Size  Location     Type
 16595 ;;		None
 16596 ;; Return value:  Size  Location     Type
 16597 ;;                  2  [STACK] int 
 16598 ;; Registers used:
 16599 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 16600 ;; Tracked objects:
 16601 ;;		On entry : 0/0
 16602 ;;		On exit  : 0/0
 16603 ;;		Unchanged: 0/0
 16604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16609 ;;Total ram usage:        0 bytes
 16610 ;; Hardware stack levels used:    1
 16611 ;; Hardware stack levels required when called:   15
 16612 ;; This function calls:
 16613 ;;		Nothing
 16614 ;; This function is called by:
 16615 ;;		_efgtoa
 16616 ;;		_xtoa
 16617 ;;		_vfpfcnvrt
 16618 ;;		_tolower
 16619 ;; This function uses a reentrant model
 16620 ;;
 16621                           
 16622                           	psect	text57
 16623  01A1CA                     __ptext57:
 16624                           	opt callstack 0
 16625  01A1CA                     _isupper:
 16626                           	opt callstack 0
 16627                           
 16628                           ;stkvar	_c @ sp[(0)+-2]
 16629                           
 16630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16631                           ;incstack = 0
 16632 ;; hardware stack exceeded
 16633  01A1CA  0EFE               	movlw	-2
 16634  01A1CC  50E3               	movf	plusw1,w,c
 16635  01A1CE  0FBF               	addlw	191
 16636  01A1D0  6E0B               	movwf	(btemp+10)^0,c
 16637  01A1D2  0EFF               	movlw	-1
 16638  01A1D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16639  01A1DA  0EFF               	movlw	255
 16640  01A1DC  220C               	addwfc	(btemp+11)^0,f,c
 16641  01A1DE  500C               	movf	(btemp+11)^0,w,c
 16642  01A1E0  E106               	bnz	u5040
 16643  01A1E2  0E1A               	movlw	26
 16644  01A1E4  5C0B               	subwf	(btemp+10)^0,w,c
 16645  01A1E6  B0D8               	btfsc	status,0,c
 16646  01A1E8  D002               	goto	u5040
 16647  01A1EA  0E01               	movlw	1
 16648  01A1EC  D001               	goto	u5050
 16649  01A1EE                     u5040:
 16650  01A1EE  0E00               	movlw	0
 16651  01A1F0                     u5050:
 16652  01A1F0  6E01               	movwf	btemp^0,c
 16653  01A1F2  6A02               	clrf	(btemp+1)^0,c
 16654                           
 16655                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16656  01A1F4  52E5               	movf	postdec1,f,c
 16657  01A1F6  52E5               	movf	postdec1,f,c
 16658  01A1F8  0012               	return		;funcret
 16659  01A1FA                     __end_of_isupper:
 16660                           	opt callstack 0
 16661                           
 16662 ;; *************** function _strcpy *****************
 16663 ;; Defined at:
 16664 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 16665 ;; Parameters:    Size  Location     Type
 16666 ;;  dest            2  [STACK] PTR unsigned char 
 16667 ;;		 -> dbuf(80), 
 16668 ;;  src             2  [STACK] PTR const unsigned char 
 16669 ;;		 -> STR_53(4), STR_52(4), STR_49(4), STR_48(4), 
 16670 ;;		 -> dbuf(80), 
 16671 ;; Auto vars:     Size  Location     Type
 16672 ;;  d               2  [STACK] PTR unsigned char 
 16673 ;;		 -> dbuf(80), 
 16674 ;;  s               2  [STACK] PTR const unsigned char 
 16675 ;;		 -> STR_53(4), STR_52(4), STR_49(4), STR_48(4), 
 16676 ;;		 -> dbuf(80), 
 16677 ;; Return value:  Size  Location     Type
 16678 ;;                  2  [STACK] PTR unsigned char 
 16679 ;; Registers used:
 16680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 16681 ;; Tracked objects:
 16682 ;;		On entry : 0/0
 16683 ;;		On exit  : 0/0
 16684 ;;		Unchanged: 0/0
 16685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16690 ;;Total ram usage:        0 bytes
 16691 ;; Hardware stack levels used:    1
 16692 ;; Hardware stack levels required when called:   15
 16693 ;; This function calls:
 16694 ;;		Nothing
 16695 ;; This function is called by:
 16696 ;;		_efgtoa
 16697 ;; This function uses a reentrant model
 16698 ;;
 16699                           
 16700                           	psect	text58
 16701  018C60                     __ptext58:
 16702                           	opt callstack 0
 16703  018C60                     _strcpy:
 16704                           	opt callstack 0
 16705                           
 16706                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16707  018C60  52E6               	movf	postinc1,f,c
 16708  018C62  52E6               	movf	postinc1,f,c
 16709  018C64  52E6               	movf	postinc1,f,c
 16710  018C66  52E6               	movf	postinc1,f,c
 16711                           
 16712                           ;stkvar	_src @ sp[(-4)+-4]
 16713                           
 16714                           ;incstack = 0
 16715 ;; hardware stack exceeded
 16716  018C68  0EF8               	movlw	-8
 16717  018C6A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16718  018C70  0EF9               	movlw	-7
 16719  018C72  006F FF8C  F00C    	movff	plusw1,btemp+11
 16720                           
 16721                           ;stkvar	_s @ sp[(-4)+2]
 16722  018C78  0EFF               	movlw	-1
 16723  018C7A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16724  018C80  0EFE               	movlw	-2
 16725  018C82  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16726                           
 16727                           ;stkvar	_dest @ sp[(-4)+-2]
 16728  018C88  0EFA               	movlw	-6
 16729  018C8A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16730  018C90  0EFB               	movlw	-5
 16731  018C92  006F FF8C  F00C    	movff	plusw1,btemp+11
 16732                           
 16733                           ;stkvar	_d @ sp[(-4)+0]
 16734  018C98  0EFD               	movlw	-3
 16735  018C9A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16736  018CA0  0EFC               	movlw	-4
 16737  018CA2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16738  018CA8                     l10916:
 16739                           
 16740                           ;stkvar	_s @ sp[(-4)+2]
 16741  018CA8  50E1               	movf	fsr1l,w,c
 16742  018CAA  0FFE               	addlw	-2
 16743  018CAC  6ED9               	movwf	fsr2l,c
 16744  018CAE  50E2               	movf	fsr1h,w,c
 16745  018CB0  6EDA               	movwf	fsr2h,c
 16746  018CB2  0EFF               	movlw	255
 16747  018CB4  22DA               	addwfc	fsr2h,f,c
 16748  018CB6  006F FF7C  F00B    	movff	indf2,btemp+10
 16749  018CBC  0E01               	movlw	1
 16750  018CBE  26DE               	addwf	postinc2,f,c
 16751  018CC0  006F FF7C  F00C    	movff	indf2,btemp+11
 16752  018CC6  0E00               	movlw	0
 16753  018CC8  22DD               	addwfc	postdec2,f,c
 16754  018CCA  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16755  018CD0  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16756  018CD6  0E00               	movlw	low (__mediumconst shr (0+16))
 16757  018CD8  6EF8               	movwf	tblptru,c
 16758                           
 16759                           ;stkvar	_d @ sp[(-4)+0]
 16760  018CDA  50E1               	movf	fsr1l,w,c
 16761  018CDC  0FFC               	addlw	-4
 16762  018CDE  6ED9               	movwf	fsr2l,c
 16763  018CE0  50E2               	movf	fsr1h,w,c
 16764  018CE2  6EDA               	movwf	fsr2h,c
 16765  018CE4  0EFF               	movlw	255
 16766  018CE6  22DA               	addwfc	fsr2h,f,c
 16767  018CE8  006F FF7C  F00B    	movff	indf2,btemp+10
 16768  018CEE  0E01               	movlw	1
 16769  018CF0  26DE               	addwf	postinc2,f,c
 16770  018CF2  006F FF7C  F00C    	movff	indf2,btemp+11
 16771  018CF8  0E00               	movlw	0
 16772  018CFA  22DD               	addwfc	postdec2,f,c
 16773  018CFC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16774  018D02  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16775  018D08  0E1F               	movlw	(high __ramtop+-1)
 16776  018D0A  64F7               	cpfsgt	tblptrh,c
 16777  018D0C  D003               	bra	u10037
 16778  018D0E  0008               	tblrd		*
 16779  018D10  50F5               	movf	tablat,w,c
 16780  018D12  D007               	bra	u10030
 16781  018D14                     u10037:
 16782  018D14  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16783  018D1A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16784  018D20  50EF               	movf	indf0,w,c
 16785  018D22                     u10030:
 16786  018D22  6EDF               	movwf	indf2,c
 16787  018D24  50DF               	movf	indf2,w,c
 16788  018D26  A4D8               	btfss	status,2,c
 16789  018D28  D7BF               	goto	l10916
 16790                           
 16791                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 16792  018D2A  0EF8               	movlw	248
 16793  018D2C  26E1               	addwf	fsr1l,f,c
 16794  018D2E  0EFF               	movlw	255
 16795  018D30  22E2               	addwfc	fsr1h,f,c
 16796  018D32  0012               	return		;funcret
 16797  018D34                     __end_of_strcpy:
 16798                           	opt callstack 0
 16799                           
 16800 ;; *************** function _floorf *****************
 16801 ;; Defined at:
 16802 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 16803 ;; Parameters:    Size  Location     Type
 16804 ;;  x               4  [STACK] float 
 16805 ;; Auto vars:     Size  Location     Type
 16806 ;;  u               4  [STACK] struct .
 16807 ;;  m               4  [STACK] unsigned long 
 16808 ;;  e               2  [STACK] int 
 16809 ;; Return value:  Size  Location     Type
 16810 ;;                  4  [STACK] float 
 16811 ;; Registers used:
 16812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 16813 ;; Tracked objects:
 16814 ;;		On entry : 0/0
 16815 ;;		On exit  : 0/0
 16816 ;;		Unchanged: 0/0
 16817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16822 ;;Total ram usage:        0 bytes
 16823 ;; Hardware stack levels used:    1
 16824 ;; Hardware stack levels required when called:   15
 16825 ;; This function calls:
 16826 ;;		Nothing
 16827 ;; This function is called by:
 16828 ;;		_efgtoa
 16829 ;; This function uses a reentrant model
 16830 ;;
 16831                           
 16832                           	psect	text59
 16833  0157C8                     __ptext59:
 16834                           	opt callstack 0
 16835  0157C8                     _floorf:
 16836                           	opt callstack 0
 16837                           
 16838                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16839  0157C8  0E0A               	movlw	10
 16840  0157CA  26E1               	addwf	fsr1l,f,c
 16841  0157CC  0E00               	movlw	0
 16842  0157CE  22E2               	addwfc	fsr1h,f,c
 16843                           
 16844                           ;incstack = 0
 16845 ;; hardware stack exceeded
 16846  0157D0  0060  F1B0  F009   	movff	floorf@F524,btemp+8
 16847  0157D6  0060  F1B4  F00A   	movff	floorf@F524+1,btemp+9
 16848  0157DC  0060  F1B8  F00B   	movff	floorf@F524+2,btemp+10
 16849  0157E2  0060  F1BC  F00C   	movff	floorf@F524+3,btemp+11
 16850                           
 16851                           ;stkvar	_u @ sp[(-10)+0]
 16852  0157E8  0EF6               	movlw	-10
 16853  0157EA  0060  F027  FFE3   	movff	btemp+8,plusw1
 16854  0157F0  0EF7               	movlw	-9
 16855  0157F2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16856  0157F8  0EF8               	movlw	-8
 16857  0157FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16858  015800  0EF9               	movlw	-7
 16859  015802  0060  F033  FFE3   	movff	btemp+11,plusw1
 16860                           
 16861                           ;stkvar	_x @ sp[(-10)+-4]
 16862  015808  0EF2               	movlw	-14
 16863  01580A  006F FF8C  F009    	movff	plusw1,btemp+8
 16864  015810  0EF3               	movlw	-13
 16865  015812  006F FF8C  F00A    	movff	plusw1,btemp+9
 16866  015818  0EF4               	movlw	-12
 16867  01581A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16868  015820  0EF5               	movlw	-11
 16869  015822  006F FF8C  F00C    	movff	plusw1,btemp+11
 16870                           
 16871                           ;stkvar	_u @ sp[(-10)+0]
 16872  015828  0EF6               	movlw	-10
 16873  01582A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16874  015830  0EF7               	movlw	-9
 16875  015832  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16876  015838  0EF8               	movlw	-8
 16877  01583A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16878  015840  0EF9               	movlw	-7
 16879  015842  0060  F033  FFE3   	movff	btemp+11,plusw1
 16880  015848  0E81               	movlw	129
 16881  01584A  6E0B               	movwf	(btemp+10)^0,c
 16882  01584C  0EFF               	movlw	255
 16883  01584E  6E0C               	movwf	(btemp+11)^0,c
 16884                           
 16885                           ;stkvar	_u @ sp[(-10)+0]
 16886  015850  0EF6               	movlw	-10
 16887  015852  006F FF8C  F005    	movff	plusw1,btemp+4
 16888  015858  0EF7               	movlw	-9
 16889  01585A  006F FF8C  F006    	movff	plusw1,btemp+5
 16890  015860  0EF8               	movlw	-8
 16891  015862  006F FF8C  F007    	movff	plusw1,btemp+6
 16892  015868  0EF9               	movlw	-7
 16893  01586A  006F FF8C  F008    	movff	plusw1,btemp+7
 16894  015870  0E18               	movlw	24
 16895  015872  D005               	goto	u5670
 16896  015874                     u5675:
 16897  015874  90D8               	bcf	status,0,c
 16898  015876  3208               	rrcf	(btemp+7)^0,f,c
 16899  015878  3207               	rrcf	(btemp+6)^0,f,c
 16900  01587A  3206               	rrcf	(btemp+5)^0,f,c
 16901  01587C  3205               	rrcf	(btemp+4)^0,f,c
 16902  01587E                     u5670:
 16903  01587E  2EE8               	decfsz	wreg,f,c
 16904  015880  D7F9               	goto	u5675
 16905  015882  0060  F014  F009   	movff	btemp+4,btemp+8
 16906  015888  0060  F018  F00A   	movff	btemp+5,btemp+9
 16907  01588E  0EFF               	movlw	255
 16908  015890  1609               	andwf	(btemp+8)^0,f,c
 16909  015892  0E00               	movlw	0
 16910  015894  160A               	andwf	(btemp+9)^0,f,c
 16911  015896  500B               	movf	(btemp+10)^0,w,c
 16912  015898  2609               	addwf	(btemp+8)^0,f,c
 16913  01589A  500C               	movf	(btemp+11)^0,w,c
 16914  01589C  220A               	addwfc	(btemp+9)^0,f,c
 16915                           
 16916                           ;stkvar	_e @ sp[(-10)+8]
 16917  01589E  0EFE               	movlw	-2
 16918  0158A0  0060  F027  FFE3   	movff	btemp+8,plusw1
 16919  0158A6  0EFF               	movlw	-1
 16920  0158A8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16921                           
 16922                           ;stkvar	_e @ sp[(-10)+8]
 16923  0158AE  0EFF               	movlw	-1
 16924  0158B0  BEE3               	btfsc	plusw1,7,c
 16925  0158B2  D019               	goto	l7478
 16926  0158B4  0EFF               	movlw	-1
 16927  0158B6  50E3               	movf	plusw1,w,c
 16928  0158B8  E108               	bnz	u5680
 16929  0158BA  0EFE               	movlw	-2
 16930  0158BC  006F FF8C  F001    	movff	plusw1,btemp
 16931  0158C2  0E17               	movlw	23
 16932  0158C4  5E01               	subwf	btemp^0,f,c
 16933  0158C6  A0D8               	btfss	status,0,c
 16934  0158C8  D00E               	goto	l7478
 16935  0158CA                     u5680:
 16936                           
 16937                           ;stkvar	_x @ sp[(-10)+-4]
 16938  0158CA  0EF2               	movlw	-14
 16939  0158CC  006F FF8C  F001    	movff	plusw1,btemp
 16940  0158D2  0EF3               	movlw	-13
 16941  0158D4  006F FF8C  F002    	movff	plusw1,btemp+1
 16942  0158DA  0EF4               	movlw	-12
 16943  0158DC  006F FF8C  F003    	movff	plusw1,btemp+2
 16944  0158E2  0EF5               	movlw	-11
 16945  0158E4  D11F               	goto	L17
 16946  0158E6                     l7478:
 16947                           
 16948                           ;stkvar	_e @ sp[(-10)+8]
 16949  0158E6  0EFF               	movlw	-1
 16950  0158E8  BEE3               	btfsc	plusw1,7,c
 16951  0158EA  D0B4               	goto	l7494
 16952                           
 16953                           ;stkvar	_e @ sp[(-10)+8]
 16954  0158EC  0EFE               	movlw	-2
 16955  0158EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 16956  0158F4  0EFF               	movlw	255
 16957  0158F6  6E05               	movwf	(btemp+4)^0,c
 16958  0158F8  0EFF               	movlw	255
 16959  0158FA  6E06               	movwf	(btemp+5)^0,c
 16960  0158FC  0E7F               	movlw	127
 16961  0158FE  6E07               	movwf	(btemp+6)^0,c
 16962  015900  0E00               	movlw	0
 16963  015902  6E08               	movwf	(btemp+7)^0,c
 16964  015904                     u5705:
 16965  015904  660C               	tstfsz	(btemp+11)^0,c
 16966  015906  D001               	goto	u5706
 16967  015908  D007               	goto	u5707
 16968  01590A                     u5706:
 16969  01590A  3408               	rlcf	(btemp+7)^0,w,c
 16970  01590C  3208               	rrcf	(btemp+7)^0,f,c
 16971  01590E  3207               	rrcf	(btemp+6)^0,f,c
 16972  015910  3206               	rrcf	(btemp+5)^0,f,c
 16973  015912  3205               	rrcf	(btemp+4)^0,f,c
 16974  015914  2E0C               	decfsz	(btemp+11)^0,f,c
 16975  015916  D7F6               	goto	u5705
 16976  015918                     u5707:
 16977                           
 16978                           ;stkvar	_m @ sp[(-10)+4]
 16979  015918  0EFA               	movlw	-6
 16980  01591A  0060  F017  FFE3   	movff	btemp+4,plusw1
 16981  015920  0EFB               	movlw	-5
 16982  015922  0060  F01B  FFE3   	movff	btemp+5,plusw1
 16983  015928  0EFC               	movlw	-4
 16984  01592A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 16985  015930  0EFD               	movlw	-3
 16986  015932  0060  F023  FFE3   	movff	btemp+7,plusw1
 16987                           
 16988                           ;stkvar	_m @ sp[(-10)+4]
 16989                           ;stkvar	_u @ sp[(-10)+0]
 16990  015938  0EF6               	movlw	-10
 16991  01593A  006F FF8C  F009    	movff	plusw1,btemp+8
 16992  015940  0EF7               	movlw	-9
 16993  015942  006F FF8C  F00A    	movff	plusw1,btemp+9
 16994  015948  0EF8               	movlw	-8
 16995  01594A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16996  015950  0EF9               	movlw	-7
 16997  015952  006F FF8C  F00C    	movff	plusw1,btemp+11
 16998  015958  0EFA               	movlw	-6
 16999  01595A  50E3               	movf	plusw1,w,c
 17000  01595C  1609               	andwf	(btemp+8)^0,f,c
 17001  01595E  0EFB               	movlw	-5
 17002  015960  50E3               	movf	plusw1,w,c
 17003  015962  160A               	andwf	(btemp+9)^0,f,c
 17004  015964  0EFC               	movlw	-4
 17005  015966  50E3               	movf	plusw1,w,c
 17006  015968  160B               	andwf	(btemp+10)^0,f,c
 17007  01596A  0EFD               	movlw	-3
 17008  01596C  50E3               	movf	plusw1,w,c
 17009  01596E  160C               	andwf	(btemp+11)^0,f,c
 17010  015970  5009               	movf	(btemp+8)^0,w,c
 17011  015972  100A               	iorwf	(btemp+9)^0,w,c
 17012  015974  100B               	iorwf	(btemp+10)^0,w,c
 17013  015976  100C               	iorwf	(btemp+11)^0,w,c
 17014  015978  B4D8               	btfsc	status,2,c
 17015  01597A  D7A7               	goto	u5680
 17016                           
 17017                           ;stkvar	_u @ sp[(-10)+0]
 17018  01597C  0EF6               	movlw	-10
 17019  01597E  006F FF8C  F009    	movff	plusw1,btemp+8
 17020  015984  0EF7               	movlw	-9
 17021  015986  006F FF8C  F00A    	movff	plusw1,btemp+9
 17022  01598C  0EF8               	movlw	-8
 17023  01598E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17024  015994  0EF9               	movlw	-7
 17025  015996  006F FF8C  F00C    	movff	plusw1,btemp+11
 17026  01599C  0E20               	movlw	32
 17027  01599E  D005               	goto	u5720
 17028  0159A0                     u5725:
 17029  0159A0  90D8               	bcf	status,0,c
 17030  0159A2  320C               	rrcf	(btemp+11)^0,f,c
 17031  0159A4  320B               	rrcf	(btemp+10)^0,f,c
 17032  0159A6  320A               	rrcf	(btemp+9)^0,f,c
 17033  0159A8  3209               	rrcf	(btemp+8)^0,f,c
 17034  0159AA                     u5720:
 17035  0159AA  2EE8               	decfsz	wreg,f,c
 17036  0159AC  D7F9               	goto	u5725
 17037  0159AE  5009               	movf	(btemp+8)^0,w,c
 17038  0159B0  B4D8               	btfsc	status,2,c
 17039  0159B2  D028               	goto	l7492
 17040                           
 17041                           ;stkvar	_m @ sp[(-10)+4]
 17042                           ;stkvar	_u @ sp[(-10)+0]
 17043  0159B4  0EF6               	movlw	-10
 17044  0159B6  50E3               	movf	plusw1,w,c
 17045  0159B8  6E01               	movwf	btemp^0,c
 17046  0159BA  0EFA               	movlw	-6
 17047  0159BC  50E3               	movf	plusw1,w,c
 17048  0159BE  2601               	addwf	btemp^0,f,c
 17049  0159C0  0EF6               	movlw	-10
 17050  0159C2  0060  F007  FFE3   	movff	btemp,plusw1
 17051  0159C8  0EF7               	movlw	-9
 17052  0159CA  50E3               	movf	plusw1,w,c
 17053  0159CC  6E01               	movwf	btemp^0,c
 17054  0159CE  0EFB               	movlw	-5
 17055  0159D0  50E3               	movf	plusw1,w,c
 17056  0159D2  2201               	addwfc	btemp^0,f,c
 17057  0159D4  0EF7               	movlw	-9
 17058  0159D6  0060  F007  FFE3   	movff	btemp,plusw1
 17059  0159DC  0EF8               	movlw	-8
 17060  0159DE  50E3               	movf	plusw1,w,c
 17061  0159E0  6E01               	movwf	btemp^0,c
 17062  0159E2  0EFC               	movlw	-4
 17063  0159E4  50E3               	movf	plusw1,w,c
 17064  0159E6  2201               	addwfc	btemp^0,f,c
 17065  0159E8  0EF8               	movlw	-8
 17066  0159EA  0060  F007  FFE3   	movff	btemp,plusw1
 17067  0159F0  0EF9               	movlw	-7
 17068  0159F2  50E3               	movf	plusw1,w,c
 17069  0159F4  6E01               	movwf	btemp^0,c
 17070  0159F6  0EFD               	movlw	-3
 17071  0159F8  50E3               	movf	plusw1,w,c
 17072  0159FA  2201               	addwfc	btemp^0,f,c
 17073  0159FC  0EF9               	movlw	-7
 17074  0159FE  0060  F007  FFE3   	movff	btemp,plusw1
 17075  015A04                     l7492:
 17076                           
 17077                           ;stkvar	_m @ sp[(-10)+4]
 17078  015A04  0EFA               	movlw	-6
 17079  015A06  006F FF8C  F009    	movff	plusw1,btemp+8
 17080  015A0C  0EFB               	movlw	-5
 17081  015A0E  006F FF8C  F00A    	movff	plusw1,btemp+9
 17082  015A14  0EFC               	movlw	-4
 17083  015A16  006F FF8C  F00B    	movff	plusw1,btemp+10
 17084  015A1C  0EFD               	movlw	-3
 17085  015A1E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17086  015A24  1C09               	comf	(btemp+8)^0,w,c
 17087  015A26  6E05               	movwf	(btemp+4)^0,c
 17088  015A28  1C0A               	comf	(btemp+9)^0,w,c
 17089  015A2A  6E06               	movwf	(btemp+5)^0,c
 17090  015A2C  1C0B               	comf	(btemp+10)^0,w,c
 17091  015A2E  6E07               	movwf	(btemp+6)^0,c
 17092  015A30  1C0C               	comf	(btemp+11)^0,w,c
 17093  015A32  6E08               	movwf	(btemp+7)^0,c
 17094                           
 17095                           ;stkvar	_u @ sp[(-10)+0]
 17096  015A34  50E1               	movf	fsr1l,w,c
 17097  015A36  0FF6               	addlw	-10
 17098  015A38  6ED9               	movwf	fsr2l,c
 17099  015A3A  50E2               	movf	fsr1h,w,c
 17100  015A3C  6EDA               	movwf	fsr2h,c
 17101  015A3E  0EFF               	movlw	255
 17102  015A40  22DA               	addwfc	fsr2h,f,c
 17103  015A42  5005               	movf	(btemp+4)^0,w,c
 17104  015A44  16DE               	andwf	postinc2,f,c
 17105  015A46  5006               	movf	(btemp+5)^0,w,c
 17106  015A48  16DE               	andwf	postinc2,f,c
 17107  015A4A  5007               	movf	(btemp+6)^0,w,c
 17108  015A4C  16DE               	andwf	postinc2,f,c
 17109  015A4E  5008               	movf	(btemp+7)^0,w,c
 17110  015A50  16DE               	andwf	postinc2,f,c
 17111  015A52  D05B               	goto	l7502
 17112  015A54                     l7494:
 17113                           
 17114                           ;stkvar	_u @ sp[(-10)+0]
 17115  015A54  0EF6               	movlw	-10
 17116  015A56  006F FF8C  F009    	movff	plusw1,btemp+8
 17117  015A5C  0EF7               	movlw	-9
 17118  015A5E  006F FF8C  F00A    	movff	plusw1,btemp+9
 17119  015A64  0EF8               	movlw	-8
 17120  015A66  006F FF8C  F00B    	movff	plusw1,btemp+10
 17121  015A6C  0EF9               	movlw	-7
 17122  015A6E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17123  015A74  0E20               	movlw	32
 17124  015A76  D005               	goto	u5740
 17125  015A78                     u5745:
 17126  015A78  90D8               	bcf	status,0,c
 17127  015A7A  320C               	rrcf	(btemp+11)^0,f,c
 17128  015A7C  320B               	rrcf	(btemp+10)^0,f,c
 17129  015A7E  320A               	rrcf	(btemp+9)^0,f,c
 17130  015A80  3209               	rrcf	(btemp+8)^0,f,c
 17131  015A82                     u5740:
 17132  015A82  2EE8               	decfsz	wreg,f,c
 17133  015A84  D7F9               	goto	u5745
 17134  015A86  6609               	tstfsz	(btemp+8)^0,c
 17135  015A88  D009               	goto	l7498
 17136                           
 17137                           ;stkvar	_u @ sp[(-10)+0]
 17138  015A8A  0EF6               	movlw	-10
 17139  015A8C  6AE3               	clrf	plusw1,c
 17140  015A8E  0EF7               	movlw	-9
 17141  015A90  6AE3               	clrf	plusw1,c
 17142  015A92  0EF8               	movlw	-8
 17143  015A94  6AE3               	clrf	plusw1,c
 17144  015A96  0EF9               	movlw	-7
 17145  015A98  6AE3               	clrf	plusw1,c
 17146  015A9A  D037               	goto	l7502
 17147  015A9C                     l7498:
 17148                           
 17149                           ;stkvar	_u @ sp[(-10)+0]
 17150  015A9C  0EF6               	movlw	-10
 17151  015A9E  006F FF8C  F009    	movff	plusw1,btemp+8
 17152  015AA4  0EF7               	movlw	-9
 17153  015AA6  006F FF8C  F00A    	movff	plusw1,btemp+9
 17154  015AAC  0EF8               	movlw	-8
 17155  015AAE  006F FF8C  F00B    	movff	plusw1,btemp+10
 17156  015AB4  0EF9               	movlw	-7
 17157  015AB6  006F FF8C  F00C    	movff	plusw1,btemp+11
 17158  015ABC  90D8               	bcf	status,0,c
 17159  015ABE  3409               	rlcf	(btemp+8)^0,w,c
 17160  015AC0  6E05               	movwf	(btemp+4)^0,c
 17161  015AC2  340A               	rlcf	(btemp+9)^0,w,c
 17162  015AC4  6E06               	movwf	(btemp+5)^0,c
 17163  015AC6  340B               	rlcf	(btemp+10)^0,w,c
 17164  015AC8  6E07               	movwf	(btemp+6)^0,c
 17165  015ACA  340C               	rlcf	(btemp+11)^0,w,c
 17166  015ACC  6E08               	movwf	(btemp+7)^0,c
 17167  015ACE  5005               	movf	(btemp+4)^0,w,c
 17168  015AD0  1006               	iorwf	(btemp+5)^0,w,c
 17169  015AD2  1007               	iorwf	(btemp+6)^0,w,c
 17170  015AD4  1008               	iorwf	(btemp+7)^0,w,c
 17171  015AD6  B4D8               	btfsc	status,2,c
 17172  015AD8  D018               	goto	l7502
 17173  015ADA  0E00               	movlw	0
 17174  015ADC  6E09               	movwf	(btemp+8)^0,c
 17175  015ADE  0E00               	movlw	0
 17176  015AE0  6E0A               	movwf	(btemp+9)^0,c
 17177  015AE2  0E80               	movlw	128
 17178  015AE4  6E0B               	movwf	(btemp+10)^0,c
 17179  015AE6  0EBF               	movlw	191
 17180  015AE8  6E0C               	movwf	(btemp+11)^0,c
 17181                           
 17182                           ;stkvar	_u @ sp[(-10)+0]
 17183  015AEA  0EF6               	movlw	-10
 17184  015AEC  0060  F027  FFE3   	movff	btemp+8,plusw1
 17185  015AF2  0EF7               	movlw	-9
 17186  015AF4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17187  015AFA  0EF8               	movlw	-8
 17188  015AFC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17189  015B02  0EF9               	movlw	-7
 17190  015B04  0060  F033  FFE3   	movff	btemp+11,plusw1
 17191  015B0A                     l7502:
 17192                           
 17193                           ;stkvar	_u @ sp[(-10)+0]
 17194  015B0A  0EF6               	movlw	-10
 17195  015B0C  006F FF8C  F001    	movff	plusw1,btemp
 17196  015B12  0EF7               	movlw	-9
 17197  015B14  006F FF8C  F002    	movff	plusw1,btemp+1
 17198  015B1A  0EF8               	movlw	-8
 17199  015B1C  006F FF8C  F003    	movff	plusw1,btemp+2
 17200  015B22  0EF9               	movlw	-7
 17201  015B24                     L17:
 17202  015B24  006F FF8C  F004    	movff	plusw1,btemp+3
 17203                           
 17204                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17205  015B2A  0EF2               	movlw	242
 17206  015B2C  26E1               	addwf	fsr1l,f,c
 17207  015B2E  0EFF               	movlw	255
 17208  015B30  22E2               	addwfc	fsr1h,f,c
 17209  015B32  0012               	return		;funcret
 17210  015B34                     __end_of_floorf:
 17211                           	opt callstack 0
 17212                           
 17213 ;; *************** function ___fpclassifyf *****************
 17214 ;; Defined at:
 17215 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 17216 ;; Parameters:    Size  Location     Type
 17217 ;;  x               4  [STACK] float 
 17218 ;; Auto vars:     Size  Location     Type
 17219 ;;  u               4  [STACK] struct .
 17220 ;;  e               2  [STACK] int 
 17221 ;; Return value:  Size  Location     Type
 17222 ;;                  2  [STACK] int 
 17223 ;; Registers used:
 17224 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 17225 ;; Tracked objects:
 17226 ;;		On entry : 0/0
 17227 ;;		On exit  : 0/0
 17228 ;;		Unchanged: 0/0
 17229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17234 ;;Total ram usage:        0 bytes
 17235 ;; Hardware stack levels used:    1
 17236 ;; Hardware stack levels required when called:   15
 17237 ;; This function calls:
 17238 ;;		Nothing
 17239 ;; This function is called by:
 17240 ;;		_efgtoa
 17241 ;; This function uses a reentrant model
 17242 ;;
 17243                           
 17244                           	psect	text60
 17245  017544                     __ptext60:
 17246                           	opt callstack 0
 17247  017544                     ___fpclassifyf:
 17248                           	opt callstack 0
 17249                           
 17250                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17251  017544  0E06               	movlw	6
 17252  017546  26E1               	addwf	fsr1l,f,c
 17253  017548  0E00               	movlw	0
 17254  01754A  22E2               	addwfc	fsr1h,f,c
 17255                           
 17256                           ;incstack = 0
 17257 ;; hardware stack exceeded
 17258  01754C  0060  F1C0  F009   	movff	___fpclassifyf@F463,btemp+8
 17259  017552  0060  F1C4  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 17260  017558  0060  F1C8  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 17261  01755E  0060  F1CC  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 17262                           
 17263                           ;stkvar	_u @ sp[(-6)+0]
 17264  017564  0EFA               	movlw	-6
 17265  017566  0060  F027  FFE3   	movff	btemp+8,plusw1
 17266  01756C  0EFB               	movlw	-5
 17267  01756E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17268  017574  0EFC               	movlw	-4
 17269  017576  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17270  01757C  0EFD               	movlw	-3
 17271  01757E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17272                           
 17273                           ;stkvar	_x @ sp[(-6)+-4]
 17274  017584  0EF6               	movlw	-10
 17275  017586  006F FF8C  F009    	movff	plusw1,btemp+8
 17276  01758C  0EF7               	movlw	-9
 17277  01758E  006F FF8C  F00A    	movff	plusw1,btemp+9
 17278  017594  0EF8               	movlw	-8
 17279  017596  006F FF8C  F00B    	movff	plusw1,btemp+10
 17280  01759C  0EF9               	movlw	-7
 17281  01759E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17282                           
 17283                           ;stkvar	_u @ sp[(-6)+0]
 17284  0175A4  0EFA               	movlw	-6
 17285  0175A6  0060  F027  FFE3   	movff	btemp+8,plusw1
 17286  0175AC  0EFB               	movlw	-5
 17287  0175AE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17288  0175B4  0EFC               	movlw	-4
 17289  0175B6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17290  0175BC  0EFD               	movlw	-3
 17291  0175BE  0060  F033  FFE3   	movff	btemp+11,plusw1
 17292                           
 17293                           ;stkvar	_u @ sp[(-6)+0]
 17294  0175C4  0EFA               	movlw	-6
 17295  0175C6  006F FF8C  F009    	movff	plusw1,btemp+8
 17296  0175CC  0EFB               	movlw	-5
 17297  0175CE  006F FF8C  F00A    	movff	plusw1,btemp+9
 17298  0175D4  0EFC               	movlw	-4
 17299  0175D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 17300  0175DC  0EFD               	movlw	-3
 17301  0175DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 17302  0175E4  0E18               	movlw	24
 17303  0175E6  D005               	goto	u5550
 17304  0175E8                     u5555:
 17305  0175E8  90D8               	bcf	status,0,c
 17306  0175EA  320C               	rrcf	(btemp+11)^0,f,c
 17307  0175EC  320B               	rrcf	(btemp+10)^0,f,c
 17308  0175EE  320A               	rrcf	(btemp+9)^0,f,c
 17309  0175F0  3209               	rrcf	(btemp+8)^0,f,c
 17310  0175F2                     u5550:
 17311  0175F2  2EE8               	decfsz	wreg,f,c
 17312  0175F4  D7F9               	goto	u5555
 17313  0175F6  0060  F024  F007   	movff	btemp+8,btemp+6
 17314  0175FC  0060  F028  F008   	movff	btemp+9,btemp+7
 17315  017602  0EFF               	movlw	255
 17316  017604  1607               	andwf	(btemp+6)^0,f,c
 17317  017606  0E00               	movlw	0
 17318  017608  1608               	andwf	(btemp+7)^0,f,c
 17319                           
 17320                           ;stkvar	_e @ sp[(-6)+4]
 17321  01760A  0EFE               	movlw	-2
 17322  01760C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 17323  017612  0EFF               	movlw	-1
 17324  017614  0060  F023  FFE3   	movff	btemp+7,plusw1
 17325                           
 17326                           ;stkvar	_e @ sp[(-6)+4]
 17327  01761A  0EFE               	movlw	-2
 17328  01761C  006F FF8C  F001    	movff	plusw1,btemp
 17329  017622  0EFF               	movlw	-1
 17330  017624  50E3               	movf	plusw1,w,c
 17331  017626  1001               	iorwf	btemp^0,w,c
 17332  017628  A4D8               	btfss	status,2,c
 17333  01762A  D023               	goto	l7440
 17334                           
 17335                           ;stkvar	_u @ sp[(-6)+0]
 17336  01762C  0EFA               	movlw	-6
 17337  01762E  006F FF8C  F009    	movff	plusw1,btemp+8
 17338  017634  0EFB               	movlw	-5
 17339  017636  006F FF8C  F00A    	movff	plusw1,btemp+9
 17340  01763C  0EFC               	movlw	-4
 17341  01763E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17342  017644  0EFD               	movlw	-3
 17343  017646  006F FF8C  F00C    	movff	plusw1,btemp+11
 17344  01764C  90D8               	bcf	status,0,c
 17345  01764E  3409               	rlcf	(btemp+8)^0,w,c
 17346  017650  6E05               	movwf	(btemp+4)^0,c
 17347  017652  340A               	rlcf	(btemp+9)^0,w,c
 17348  017654  6E06               	movwf	(btemp+5)^0,c
 17349  017656  340B               	rlcf	(btemp+10)^0,w,c
 17350  017658  6E07               	movwf	(btemp+6)^0,c
 17351  01765A  340C               	rlcf	(btemp+11)^0,w,c
 17352  01765C  6E08               	movwf	(btemp+7)^0,c
 17353  01765E  5005               	movf	(btemp+4)^0,w,c
 17354  017660  1006               	iorwf	(btemp+5)^0,w,c
 17355  017662  1007               	iorwf	(btemp+6)^0,w,c
 17356  017664  1008               	iorwf	(btemp+7)^0,w,c
 17357  017666  A4D8               	btfss	status,2,c
 17358  017668  D002               	goto	l7436
 17359  01766A  0E02               	movlw	2
 17360  01766C  D02E               	goto	L18
 17361  01766E                     l7436:
 17362  01766E  0E03               	movlw	3
 17363  017670  D02C               	goto	L18
 17364  017672                     l7440:
 17365                           
 17366                           ;stkvar	_e @ sp[(-6)+4]
 17367  017672  0EFE               	movlw	-2
 17368  017674  28E3               	incf	plusw1,w,c
 17369  017676  E128               	bnz	l7446
 17370  017678  0EFF               	movlw	-1
 17371  01767A  50E3               	movf	plusw1,w,c
 17372  01767C  A4D8               	btfss	status,2,c
 17373  01767E  D024               	goto	l7446
 17374                           
 17375                           ;stkvar	_u @ sp[(-6)+0]
 17376  017680  0EFA               	movlw	-6
 17377  017682  006F FF8C  F009    	movff	plusw1,btemp+8
 17378  017688  0EFB               	movlw	-5
 17379  01768A  006F FF8C  F00A    	movff	plusw1,btemp+9
 17380  017690  0EFC               	movlw	-4
 17381  017692  006F FF8C  F00B    	movff	plusw1,btemp+10
 17382  017698  0EFD               	movlw	-3
 17383  01769A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17384  0176A0  0E09               	movlw	9
 17385  0176A2                     u5595:
 17386  0176A2  90D8               	bcf	status,0,c
 17387  0176A4  3609               	rlcf	(btemp+8)^0,f,c
 17388  0176A6  360A               	rlcf	(btemp+9)^0,f,c
 17389  0176A8  360B               	rlcf	(btemp+10)^0,f,c
 17390  0176AA  360C               	rlcf	(btemp+11)^0,f,c
 17391  0176AC  2EE8               	decfsz	wreg,f,c
 17392  0176AE  D7F9               	goto	u5595
 17393  0176B0  5009               	movf	(btemp+8)^0,w,c
 17394  0176B2  100A               	iorwf	(btemp+9)^0,w,c
 17395  0176B4  100B               	iorwf	(btemp+10)^0,w,c
 17396  0176B6  100C               	iorwf	(btemp+11)^0,w,c
 17397  0176B8  A4D8               	btfss	status,2,c
 17398  0176BA  D002               	goto	u5600
 17399  0176BC  0E01               	movlw	1
 17400  0176BE  D001               	goto	u5610
 17401  0176C0                     u5600:
 17402  0176C0  0E00               	movlw	0
 17403  0176C2                     u5610:
 17404  0176C2  6E01               	movwf	btemp^0,c
 17405  0176C4  6A02               	clrf	(btemp+1)^0,c
 17406  0176C6  D004               	goto	l2972
 17407  0176C8                     l7446:
 17408  0176C8  0E04               	movlw	4
 17409  0176CA                     L18:
 17410  0176CA  6E01               	movwf	btemp^0,c
 17411  0176CC  0E00               	movlw	0
 17412  0176CE  6E02               	movwf	(btemp+1)^0,c
 17413  0176D0                     l2972:
 17414                           
 17415                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 17416  0176D0  0EF6               	movlw	246
 17417  0176D2  26E1               	addwf	fsr1l,f,c
 17418  0176D4  0EFF               	movlw	255
 17419  0176D6  22E2               	addwfc	fsr1h,f,c
 17420  0176D8  0012               	return		;funcret
 17421  0176DA                     __end_of___fpclassifyf:
 17422                           	opt callstack 0
 17423                           
 17424 ;; *************** function ___fltol *****************
 17425 ;; Defined at:
 17426 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 17427 ;; Parameters:    Size  Location     Type
 17428 ;;  f1              4  [STACK] int 
 17429 ;; Auto vars:     Size  Location     Type
 17430 ;;  exp1            1  [STACK] unsigned char 
 17431 ;;  sign1           1  [STACK] unsigned char 
 17432 ;; Return value:  Size  Location     Type
 17433 ;;                  4  [STACK] long 
 17434 ;; Registers used:
 17435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17436 ;; Tracked objects:
 17437 ;;		On entry : 0/1
 17438 ;;		On exit  : 0/0
 17439 ;;		Unchanged: 0/0
 17440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17445 ;;Total ram usage:        0 bytes
 17446 ;; Hardware stack levels used:    1
 17447 ;; Hardware stack levels required when called:   15
 17448 ;; This function calls:
 17449 ;;		Nothing
 17450 ;; This function is called by:
 17451 ;;		_calc_bsoc
 17452 ;;		_init_bsoc
 17453 ;;		_efgtoa
 17454 ;; This function uses a reentrant model
 17455 ;;
 17456                           
 17457                           	psect	text61
 17458  01785A                     __ptext61:
 17459                           	opt callstack 0
 17460  01785A                     ___fltol:
 17461                           	opt callstack 0
 17462                           
 17463                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17464  01785A  52E6               	movf	postinc1,f,c
 17465  01785C  52E6               	movf	postinc1,f,c
 17466                           
 17467                           ;stkvar	_f1 @ sp[(-2)+-4]
 17468                           
 17469                           ;incstack = 0
 17470 ;; hardware stack exceeded
 17471  01785E  0EFA               	movlw	-6
 17472  017860  006F FF8C  F009    	movff	plusw1,btemp+8
 17473  017866  0EFB               	movlw	-5
 17474  017868  006F FF8C  F00A    	movff	plusw1,btemp+9
 17475  01786E  0EFC               	movlw	-4
 17476  017870  006F FF8C  F00B    	movff	plusw1,btemp+10
 17477  017876  0EFD               	movlw	-3
 17478  017878  006F FF8C  F00C    	movff	plusw1,btemp+11
 17479  01787E  0E18               	movlw	24
 17480  017880  D005               	goto	u6760
 17481  017882                     u6765:
 17482  017882  90D8               	bcf	status,0,c
 17483  017884  320C               	rrcf	(btemp+11)^0,f,c
 17484  017886  320B               	rrcf	(btemp+10)^0,f,c
 17485  017888  320A               	rrcf	(btemp+9)^0,f,c
 17486  01788A  3209               	rrcf	(btemp+8)^0,f,c
 17487  01788C                     u6760:
 17488  01788C  2EE8               	decfsz	wreg,f,c
 17489  01788E  D7F9               	goto	u6765
 17490                           
 17491                           ;stkvar	_exp1 @ sp[(-2)+0]
 17492  017890  0EFE               	movlw	-2
 17493  017892  0060  F027  FFE3   	movff	btemp+8,plusw1
 17494  017898  0EFE               	movlw	-2
 17495  01789A  50E3               	movf	plusw1,w,c
 17496  01789C  A4D8               	btfss	status,2,c
 17497  01789E  D006               	goto	l8066
 17498  0178A0                     u6770:
 17499  0178A0  0E00               	movlw	0
 17500  0178A2  6E01               	movwf	btemp^0,c
 17501  0178A4  6A02               	clrf	(btemp+1)^0,c
 17502  0178A6  6A03               	clrf	(btemp+2)^0,c
 17503  0178A8  6A04               	clrf	(btemp+3)^0,c
 17504  0178AA  D08B               	goto	l2588
 17505  0178AC                     l8066:
 17506                           
 17507                           ;stkvar	_f1 @ sp[(-2)+-4]
 17508  0178AC  0EFA               	movlw	-6
 17509  0178AE  006F FF8C  F009    	movff	plusw1,btemp+8
 17510  0178B4  0EFB               	movlw	-5
 17511  0178B6  006F FF8C  F00A    	movff	plusw1,btemp+9
 17512  0178BC  0EFC               	movlw	-4
 17513  0178BE  006F FF8C  F00B    	movff	plusw1,btemp+10
 17514  0178C4  0EFD               	movlw	-3
 17515  0178C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 17516  0178CC  0E20               	movlw	32
 17517  0178CE  D005               	goto	u6780
 17518  0178D0                     u6785:
 17519  0178D0  90D8               	bcf	status,0,c
 17520  0178D2  320C               	rrcf	(btemp+11)^0,f,c
 17521  0178D4  320B               	rrcf	(btemp+10)^0,f,c
 17522  0178D6  320A               	rrcf	(btemp+9)^0,f,c
 17523  0178D8  3209               	rrcf	(btemp+8)^0,f,c
 17524  0178DA                     u6780:
 17525  0178DA  2EE8               	decfsz	wreg,f,c
 17526  0178DC  D7F9               	goto	u6785
 17527                           
 17528                           ;stkvar	_sign1 @ sp[(-2)+1]
 17529  0178DE  0EFF               	movlw	-1
 17530  0178E0  0060  F027  FFE3   	movff	btemp+8,plusw1
 17531                           
 17532                           ;stkvar	_f1 @ sp[(-2)+-4]
 17533  0178E6  0EFC               	movlw	-4
 17534  0178E8  8EE3               	bsf	plusw1,7,c
 17535                           
 17536                           ;stkvar	_f1 @ sp[(-2)+-4]
 17537  0178EA  50E1               	movf	fsr1l,w,c
 17538  0178EC  0FFA               	addlw	-6
 17539  0178EE  6ED9               	movwf	fsr2l,c
 17540  0178F0  50E2               	movf	fsr1h,w,c
 17541  0178F2  6EDA               	movwf	fsr2h,c
 17542  0178F4  0EFF               	movlw	255
 17543  0178F6  22DA               	addwfc	fsr2h,f,c
 17544  0178F8  0EFF               	movlw	255
 17545  0178FA  16DE               	andwf	postinc2,f,c
 17546  0178FC  0EFF               	movlw	255
 17547  0178FE  16DE               	andwf	postinc2,f,c
 17548  017900  0EFF               	movlw	255
 17549  017902  16DE               	andwf	postinc2,f,c
 17550  017904  0E00               	movlw	0
 17551  017906  16DE               	andwf	postinc2,f,c
 17552                           
 17553                           ;stkvar	_exp1 @ sp[(-2)+0]
 17554  017908  0EFE               	movlw	-2
 17555  01790A  006F FF8C  F001    	movff	plusw1,btemp
 17556  017910  0E96               	movlw	150
 17557  017912  5E01               	subwf	btemp^0,f,c
 17558  017914  0EFE               	movlw	-2
 17559  017916  0060  F007  FFE3   	movff	btemp,plusw1
 17560                           
 17561                           ;stkvar	_exp1 @ sp[(-2)+0]
 17562  01791C  0EFE               	movlw	-2
 17563  01791E  AEE3               	btfss	plusw1,7,c
 17564  017920  D014               	goto	l8084
 17565                           
 17566                           ;stkvar	_exp1 @ sp[(-2)+0]
 17567  017922  0EFE               	movlw	-2
 17568  017924  50E3               	movf	plusw1,w,c
 17569  017926  0A80               	xorlw	128
 17570  017928  0F97               	addlw	151
 17571  01792A  A0D8               	btfss	status,0,c
 17572  01792C  D7B9               	goto	u6770
 17573  01792E                     l8082:
 17574                           
 17575                           ;stkvar	_f1 @ sp[(-2)+-4]
 17576  01792E  90D8               	bcf	status,0,c
 17577  017930  0EFD               	movlw	-3
 17578  017932  32E3               	rrcf	plusw1,f,c
 17579  017934  0EFC               	movlw	-4
 17580  017936  32E3               	rrcf	plusw1,f,c
 17581  017938  0EFB               	movlw	-5
 17582  01793A  32E3               	rrcf	plusw1,f,c
 17583  01793C  0EFA               	movlw	-6
 17584  01793E  32E3               	rrcf	plusw1,f,c
 17585                           
 17586                           ;stkvar	_exp1 @ sp[(-2)+0]
 17587  017940  0EFE               	movlw	-2
 17588  017942  2AE3               	incf	plusw1,f,c
 17589  017944  B4D8               	btfsc	status,2,c
 17590  017946  D018               	goto	u6830
 17591  017948  D7F2               	goto	l8082
 17592  01794A                     l8084:
 17593                           
 17594                           ;stkvar	_exp1 @ sp[(-2)+0]
 17595  01794A  0EFE               	movlw	-2
 17596  01794C  006F FF8C  F001    	movff	plusw1,btemp
 17597  017952  0E1F               	movlw	31
 17598  017954  6401               	cpfsgt	btemp^0,c
 17599  017956  D00C               	goto	l8092
 17600  017958  D7A3               	goto	u6770
 17601  01795A                     l8090:
 17602                           
 17603                           ;stkvar	_f1 @ sp[(-2)+-4]
 17604  01795A  90D8               	bcf	status,0,c
 17605  01795C  0EFA               	movlw	-6
 17606  01795E  36E3               	rlcf	plusw1,f,c
 17607  017960  0EFB               	movlw	-5
 17608  017962  36E3               	rlcf	plusw1,f,c
 17609  017964  0EFC               	movlw	-4
 17610  017966  36E3               	rlcf	plusw1,f,c
 17611  017968  0EFD               	movlw	-3
 17612  01796A  36E3               	rlcf	plusw1,f,c
 17613                           
 17614                           ;stkvar	_exp1 @ sp[(-2)+0]
 17615  01796C  0EFE               	movlw	-2
 17616  01796E  06E3               	decf	plusw1,f,c
 17617  017970                     l8092:
 17618                           
 17619                           ;stkvar	_exp1 @ sp[(-2)+0]
 17620  017970  0EFE               	movlw	-2
 17621  017972  50E3               	movf	plusw1,w,c
 17622  017974  A4D8               	btfss	status,2,c
 17623  017976  D7F1               	goto	l8090
 17624  017978                     u6830:
 17625                           
 17626                           ;stkvar	_sign1 @ sp[(-2)+1]
 17627  017978  0EFF               	movlw	-1
 17628  01797A  50E3               	movf	plusw1,w,c
 17629  01797C  B4D8               	btfsc	status,2,c
 17630  01797E  D011               	goto	u6850
 17631                           
 17632                           ;stkvar	_f1 @ sp[(-2)+-4]
 17633                           ;stkvar	_f1 @ sp[(-2)+-4]
 17634  017980  0EFA               	movlw	-6
 17635  017982  6CE3               	negf	plusw1,c
 17636  017984  0EFB               	movlw	-5
 17637  017986  1EE3               	comf	plusw1,f,c
 17638  017988  0EFC               	movlw	-4
 17639  01798A  1EE3               	comf	plusw1,f,c
 17640  01798C  0EFD               	movlw	-3
 17641  01798E  1EE3               	comf	plusw1,f,c
 17642  017990  E308               	bnc	u6850
 17643  017992  0EFB               	movlw	-5
 17644  017994  2AE3               	incf	plusw1,f,c
 17645  017996  E305               	bnc	u6850
 17646  017998  0EFC               	movlw	-4
 17647  01799A  2AE3               	incf	plusw1,f,c
 17648  01799C  E302               	bnc	u6850
 17649  01799E  0EFD               	movlw	-3
 17650  0179A0  2AE3               	incf	plusw1,f,c
 17651  0179A2                     u6850:
 17652                           
 17653                           ;stkvar	_f1 @ sp[(-2)+-4]
 17654  0179A2  0EFA               	movlw	-6
 17655  0179A4  006F FF8C  F001    	movff	plusw1,btemp
 17656  0179AA  0EFB               	movlw	-5
 17657  0179AC  006F FF8C  F002    	movff	plusw1,btemp+1
 17658  0179B2  0EFC               	movlw	-4
 17659  0179B4  006F FF8C  F003    	movff	plusw1,btemp+2
 17660  0179BA  0EFD               	movlw	-3
 17661  0179BC  006F FF8C  F004    	movff	plusw1,btemp+3
 17662  0179C2                     l2588:
 17663                           
 17664                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17665  0179C2  0EFA               	movlw	250
 17666  0179C4  26E1               	addwf	fsr1l,f,c
 17667  0179C6  0EFF               	movlw	255
 17668  0179C8  22E2               	addwfc	fsr1h,f,c
 17669  0179CA  0012               	return		;funcret
 17670  0179CC                     __end_of___fltol:
 17671                           	opt callstack 0
 17672                           
 17673 ;; *************** function ___flneg *****************
 17674 ;; Defined at:
 17675 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 17676 ;; Parameters:    Size  Location     Type
 17677 ;;  f1              4  [STACK] long 
 17678 ;; Auto vars:     Size  Location     Type
 17679 ;;		None
 17680 ;; Return value:  Size  Location     Type
 17681 ;;                  4  [STACK] long 
 17682 ;; Registers used:
 17683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 17684 ;; Tracked objects:
 17685 ;;		On entry : 0/0
 17686 ;;		On exit  : 0/0
 17687 ;;		Unchanged: 0/0
 17688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17693 ;;Total ram usage:        0 bytes
 17694 ;; Hardware stack levels used:    1
 17695 ;; Hardware stack levels required when called:   15
 17696 ;; This function calls:
 17697 ;;		Nothing
 17698 ;; This function is called by:
 17699 ;;		_calc_bsoc
 17700 ;;		_efgtoa
 17701 ;; This function uses a reentrant model
 17702 ;;
 17703                           
 17704                           	psect	text62
 17705  019CC0                     __ptext62:
 17706                           	opt callstack 0
 17707  019CC0                     ___flneg:
 17708                           	opt callstack 0
 17709                           
 17710                           ;stkvar	_f1 @ sp[(0)+-4]
 17711                           
 17712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17713                           ;incstack = 0
 17714 ;; hardware stack exceeded
 17715  019CC0  0EFC               	movlw	-4
 17716  019CC2  50E3               	movf	plusw1,w,c
 17717  019CC4  E10A               	bnz	u6750
 17718  019CC6  0EFD               	movlw	-3
 17719  019CC8  50E3               	movf	plusw1,w,c
 17720  019CCA  E107               	bnz	u6750
 17721  019CCC  0EFE               	movlw	-2
 17722  019CCE  50E3               	movf	plusw1,w,c
 17723  019CD0  E104               	bnz	u6750
 17724  019CD2  0EFF               	movlw	-1
 17725  019CD4  50E3               	movf	plusw1,w,c
 17726  019CD6  B4D8               	btfsc	status,2,c
 17727  019CD8  D002               	goto	l8056
 17728  019CDA                     u6750:
 17729                           
 17730                           ;stkvar	_f1 @ sp[(0)+-4]
 17731  019CDA  0EFF               	movlw	-1
 17732  019CDC  7EE3               	btg	plusw1,7,c
 17733  019CDE                     l8056:
 17734                           
 17735                           ;stkvar	_f1 @ sp[(0)+-4]
 17736  019CDE  0EFC               	movlw	-4
 17737  019CE0  006F FF8C  F001    	movff	plusw1,btemp
 17738  019CE6  0EFD               	movlw	-3
 17739  019CE8  006F FF8C  F002    	movff	plusw1,btemp+1
 17740  019CEE  0EFE               	movlw	-2
 17741  019CF0  006F FF8C  F003    	movff	plusw1,btemp+2
 17742  019CF6  0EFF               	movlw	-1
 17743  019CF8  006F FF8C  F004    	movff	plusw1,btemp+3
 17744                           
 17745                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17746  019CFE  52E5               	movf	postdec1,f,c
 17747  019D00  52E5               	movf	postdec1,f,c
 17748  019D02  52E5               	movf	postdec1,f,c
 17749  019D04  52E5               	movf	postdec1,f,c
 17750  019D06  0012               	return		;funcret
 17751  019D08                     __end_of___flneg:
 17752                           	opt callstack 0
 17753                           
 17754 ;; *************** function ___flge *****************
 17755 ;; Defined at:
 17756 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 17757 ;; Parameters:    Size  Location     Type
 17758 ;;  ff1             4  [STACK] long 
 17759 ;;  ff2             4  [STACK] long 
 17760 ;; Auto vars:     Size  Location     Type
 17761 ;;		None
 17762 ;; Return value:  Size  Location     Type
 17763 ;;		None               void
 17764 ;; Registers used:
 17765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17766 ;; Tracked objects:
 17767 ;;		On entry : 0/0
 17768 ;;		On exit  : 0/0
 17769 ;;		Unchanged: 0/0
 17770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17775 ;;Total ram usage:        0 bytes
 17776 ;; Hardware stack levels used:    1
 17777 ;; Hardware stack levels required when called:   15
 17778 ;; This function calls:
 17779 ;;		Nothing
 17780 ;; This function is called by:
 17781 ;;		_calc_bsoc
 17782 ;;		_efgtoa
 17783 ;; This function uses a reentrant model
 17784 ;;
 17785                           
 17786                           	psect	text63
 17787  017B3C                     __ptext63:
 17788                           	opt callstack 0
 17789  017B3C                     ___flge:
 17790                           	opt callstack 0
 17791                           
 17792                           ;stkvar	_ff1 @ sp[(0)+-4]
 17793                           
 17794                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17795                           ;incstack = 0
 17796 ;; hardware stack exceeded
 17797  017B3C  50E1               	movf	fsr1l,w,c
 17798  017B3E  0FFC               	addlw	-4
 17799  017B40  6ED9               	movwf	fsr2l,c
 17800  017B42  50E2               	movf	fsr1h,w,c
 17801  017B44  6EDA               	movwf	fsr2h,c
 17802  017B46  0EFF               	movlw	255
 17803  017B48  22DA               	addwfc	fsr2h,f,c
 17804  017B4A  0E00               	movlw	0
 17805  017B4C  14DE               	andwf	postinc2,w,c
 17806  017B4E  6E09               	movwf	(btemp+8)^0,c
 17807  017B50  0E00               	movlw	0
 17808  017B52  14DE               	andwf	postinc2,w,c
 17809  017B54  6E0A               	movwf	(btemp+9)^0,c
 17810  017B56  0E80               	movlw	128
 17811  017B58  14DE               	andwf	postinc2,w,c
 17812  017B5A  6E0B               	movwf	(btemp+10)^0,c
 17813  017B5C  0E7F               	movlw	127
 17814  017B5E  14DE               	andwf	postinc2,w,c
 17815  017B60  6E0C               	movwf	(btemp+11)^0,c
 17816  017B62  5009               	movf	(btemp+8)^0,w,c
 17817  017B64  100A               	iorwf	(btemp+9)^0,w,c
 17818  017B66  100B               	iorwf	(btemp+10)^0,w,c
 17819  017B68  100C               	iorwf	(btemp+11)^0,w,c
 17820  017B6A  A4D8               	btfss	status,2,c
 17821  017B6C  D008               	goto	l8030
 17822                           
 17823                           ;stkvar	_ff1 @ sp[(0)+-4]
 17824  017B6E  0EFC               	movlw	-4
 17825  017B70  6AE3               	clrf	plusw1,c
 17826  017B72  0EFD               	movlw	-3
 17827  017B74  6AE3               	clrf	plusw1,c
 17828  017B76  0EFE               	movlw	-2
 17829  017B78  6AE3               	clrf	plusw1,c
 17830  017B7A  0EFF               	movlw	-1
 17831  017B7C  6AE3               	clrf	plusw1,c
 17832  017B7E                     l8030:
 17833                           
 17834                           ;stkvar	_ff2 @ sp[(0)+-8]
 17835  017B7E  50E1               	movf	fsr1l,w,c
 17836  017B80  0FF8               	addlw	-8
 17837  017B82  6ED9               	movwf	fsr2l,c
 17838  017B84  50E2               	movf	fsr1h,w,c
 17839  017B86  6EDA               	movwf	fsr2h,c
 17840  017B88  0EFF               	movlw	255
 17841  017B8A  22DA               	addwfc	fsr2h,f,c
 17842  017B8C  0E00               	movlw	0
 17843  017B8E  14DE               	andwf	postinc2,w,c
 17844  017B90  6E09               	movwf	(btemp+8)^0,c
 17845  017B92  0E00               	movlw	0
 17846  017B94  14DE               	andwf	postinc2,w,c
 17847  017B96  6E0A               	movwf	(btemp+9)^0,c
 17848  017B98  0E80               	movlw	128
 17849  017B9A  14DE               	andwf	postinc2,w,c
 17850  017B9C  6E0B               	movwf	(btemp+10)^0,c
 17851  017B9E  0E7F               	movlw	127
 17852  017BA0  14DE               	andwf	postinc2,w,c
 17853  017BA2  6E0C               	movwf	(btemp+11)^0,c
 17854  017BA4  5009               	movf	(btemp+8)^0,w,c
 17855  017BA6  100A               	iorwf	(btemp+9)^0,w,c
 17856  017BA8  100B               	iorwf	(btemp+10)^0,w,c
 17857  017BAA  100C               	iorwf	(btemp+11)^0,w,c
 17858  017BAC  A4D8               	btfss	status,2,c
 17859  017BAE  D008               	goto	l2554
 17860                           
 17861                           ;stkvar	_ff2 @ sp[(0)+-8]
 17862  017BB0  0EF8               	movlw	-8
 17863  017BB2  6AE3               	clrf	plusw1,c
 17864  017BB4  0EF9               	movlw	-7
 17865  017BB6  6AE3               	clrf	plusw1,c
 17866  017BB8  0EFA               	movlw	-6
 17867  017BBA  6AE3               	clrf	plusw1,c
 17868  017BBC  0EFB               	movlw	-5
 17869  017BBE  6AE3               	clrf	plusw1,c
 17870  017BC0                     l2554:
 17871                           
 17872                           ;stkvar	_ff1 @ sp[(0)+-4]
 17873  017BC0  0EFF               	movlw	-1
 17874  017BC2  AEE3               	btfss	plusw1,7,c
 17875  017BC4  D024               	goto	l8036
 17876                           
 17877                           ;stkvar	_ff1 @ sp[(0)+-4]
 17878  017BC6  0E00               	movlw	0
 17879  017BC8  6E09               	movwf	(btemp+8)^0,c
 17880  017BCA  0E00               	movlw	0
 17881  017BCC  6E0A               	movwf	(btemp+9)^0,c
 17882  017BCE  0E00               	movlw	0
 17883  017BD0  6E0B               	movwf	(btemp+10)^0,c
 17884  017BD2  0E80               	movlw	128
 17885  017BD4  6E0C               	movwf	(btemp+11)^0,c
 17886  017BD6  0EFC               	movlw	-4
 17887  017BD8  50E3               	movf	plusw1,w,c
 17888  017BDA  5E09               	subwf	(btemp+8)^0,f,c
 17889  017BDC  0EFD               	movlw	-3
 17890  017BDE  50E3               	movf	plusw1,w,c
 17891  017BE0  5A0A               	subwfb	(btemp+9)^0,f,c
 17892  017BE2  0EFE               	movlw	-2
 17893  017BE4  50E3               	movf	plusw1,w,c
 17894  017BE6  5A0B               	subwfb	(btemp+10)^0,f,c
 17895  017BE8  0EFF               	movlw	-1
 17896  017BEA  50E3               	movf	plusw1,w,c
 17897  017BEC  5A0C               	subwfb	(btemp+11)^0,f,c
 17898                           
 17899                           ;stkvar	_ff1 @ sp[(0)+-4]
 17900  017BEE  0EFC               	movlw	-4
 17901  017BF0  0060  F027  FFE3   	movff	btemp+8,plusw1
 17902  017BF6  0EFD               	movlw	-3
 17903  017BF8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17904  017BFE  0EFE               	movlw	-2
 17905  017C00  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17906  017C06  0EFF               	movlw	-1
 17907  017C08  0060  F033  FFE3   	movff	btemp+11,plusw1
 17908  017C0E                     l8036:
 17909                           
 17910                           ;stkvar	_ff2 @ sp[(0)+-8]
 17911  017C0E  0EFB               	movlw	-5
 17912  017C10  AEE3               	btfss	plusw1,7,c
 17913  017C12  D024               	goto	l8040
 17914                           
 17915                           ;stkvar	_ff2 @ sp[(0)+-8]
 17916  017C14  0E00               	movlw	0
 17917  017C16  6E09               	movwf	(btemp+8)^0,c
 17918  017C18  0E00               	movlw	0
 17919  017C1A  6E0A               	movwf	(btemp+9)^0,c
 17920  017C1C  0E00               	movlw	0
 17921  017C1E  6E0B               	movwf	(btemp+10)^0,c
 17922  017C20  0E80               	movlw	128
 17923  017C22  6E0C               	movwf	(btemp+11)^0,c
 17924  017C24  0EF8               	movlw	-8
 17925  017C26  50E3               	movf	plusw1,w,c
 17926  017C28  5E09               	subwf	(btemp+8)^0,f,c
 17927  017C2A  0EF9               	movlw	-7
 17928  017C2C  50E3               	movf	plusw1,w,c
 17929  017C2E  5A0A               	subwfb	(btemp+9)^0,f,c
 17930  017C30  0EFA               	movlw	-6
 17931  017C32  50E3               	movf	plusw1,w,c
 17932  017C34  5A0B               	subwfb	(btemp+10)^0,f,c
 17933  017C36  0EFB               	movlw	-5
 17934  017C38  50E3               	movf	plusw1,w,c
 17935  017C3A  5A0C               	subwfb	(btemp+11)^0,f,c
 17936                           
 17937                           ;stkvar	_ff2 @ sp[(0)+-8]
 17938  017C3C  0EF8               	movlw	-8
 17939  017C3E  0060  F027  FFE3   	movff	btemp+8,plusw1
 17940  017C44  0EF9               	movlw	-7
 17941  017C46  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17942  017C4C  0EFA               	movlw	-6
 17943  017C4E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17944  017C54  0EFB               	movlw	-5
 17945  017C56  0060  F033  FFE3   	movff	btemp+11,plusw1
 17946  017C5C                     l8040:
 17947                           
 17948                           ;stkvar	_ff1 @ sp[(0)+-4]
 17949  017C5C  0EFF               	movlw	-1
 17950  017C5E  7EE3               	btg	plusw1,7,c
 17951                           
 17952                           ;stkvar	_ff2 @ sp[(0)+-8]
 17953  017C60  0EFB               	movlw	-5
 17954  017C62  7EE3               	btg	plusw1,7,c
 17955                           
 17956                           ;stkvar	_ff2 @ sp[(0)+-8]
 17957                           ;stkvar	_ff1 @ sp[(0)+-4]
 17958  017C64  50E1               	movf	fsr1l,w,c
 17959  017C66  0FFC               	addlw	-4
 17960  017C68  6ED9               	movwf	fsr2l,c
 17961  017C6A  50E2               	movf	fsr1h,w,c
 17962  017C6C  6EDA               	movwf	fsr2h,c
 17963  017C6E  0EFF               	movlw	255
 17964  017C70  22DA               	addwfc	fsr2h,f,c
 17965  017C72  0EF8               	movlw	-8
 17966  017C74  50E3               	movf	plusw1,w,c
 17967  017C76  5CDE               	subwf	postinc2,w,c
 17968  017C78  0EF9               	movlw	-7
 17969  017C7A  50E3               	movf	plusw1,w,c
 17970  017C7C  58DE               	subwfb	postinc2,w,c
 17971  017C7E  0EFA               	movlw	-6
 17972  017C80  50E3               	movf	plusw1,w,c
 17973  017C82  58DE               	subwfb	postinc2,w,c
 17974  017C84  0EFB               	movlw	-5
 17975  017C86  50E3               	movf	plusw1,w,c
 17976  017C88  58DE               	subwfb	postinc2,w,c
 17977  017C8A  B0D8               	btfsc	status,0,c
 17978  017C8C  D002               	goto	l8048
 17979  017C8E  9001               	bcf	btemp& (0+255),0,c
 17980  017C90  D001               	goto	l2561
 17981  017C92                     l8048:
 17982  017C92  8001               	bsf	btemp& (0+255),0,c
 17983  017C94                     l2561:
 17984                           
 17985                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17986  017C94  0EF8               	movlw	248
 17987  017C96  26E1               	addwf	fsr1l,f,c
 17988  017C98  0EFF               	movlw	255
 17989  017C9A  22E2               	addwfc	fsr1h,f,c
 17990  017C9C  0012               	return		;funcret
 17991  017C9E                     __end_of___flge:
 17992                           	opt callstack 0
 17993                           
 17994 ;; *************** function ___fleq *****************
 17995 ;; Defined at:
 17996 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 17997 ;; Parameters:    Size  Location     Type
 17998 ;;  ff1             4  [STACK] long 
 17999 ;;  ff2             4  [STACK] long 
 18000 ;; Auto vars:     Size  Location     Type
 18001 ;;		None
 18002 ;; Return value:  Size  Location     Type
 18003 ;;		None               void
 18004 ;; Registers used:
 18005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18006 ;; Tracked objects:
 18007 ;;		On entry : 0/0
 18008 ;;		On exit  : 0/0
 18009 ;;		Unchanged: 0/0
 18010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18015 ;;Total ram usage:        0 bytes
 18016 ;; Hardware stack levels used:    1
 18017 ;; Hardware stack levels required when called:   15
 18018 ;; This function calls:
 18019 ;;		Nothing
 18020 ;; This function is called by:
 18021 ;;		_efgtoa
 18022 ;; This function uses a reentrant model
 18023 ;;
 18024                           
 18025                           	psect	text64
 18026  018D34                     __ptext64:
 18027                           	opt callstack 0
 18028  018D34                     ___fleq:
 18029                           	opt callstack 0
 18030                           
 18031                           ;stkvar	_ff1 @ sp[(0)+-4]
 18032                           
 18033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18034                           ;incstack = 0
 18035 ;; hardware stack exceeded
 18036  018D34  50E1               	movf	fsr1l,w,c
 18037  018D36  0FFC               	addlw	-4
 18038  018D38  6ED9               	movwf	fsr2l,c
 18039  018D3A  50E2               	movf	fsr1h,w,c
 18040  018D3C  6EDA               	movwf	fsr2h,c
 18041  018D3E  0EFF               	movlw	255
 18042  018D40  22DA               	addwfc	fsr2h,f,c
 18043  018D42  0E00               	movlw	0
 18044  018D44  14DE               	andwf	postinc2,w,c
 18045  018D46  6E09               	movwf	(btemp+8)^0,c
 18046  018D48  0E00               	movlw	0
 18047  018D4A  14DE               	andwf	postinc2,w,c
 18048  018D4C  6E0A               	movwf	(btemp+9)^0,c
 18049  018D4E  0E80               	movlw	128
 18050  018D50  14DE               	andwf	postinc2,w,c
 18051  018D52  6E0B               	movwf	(btemp+10)^0,c
 18052  018D54  0E7F               	movlw	127
 18053  018D56  14DE               	andwf	postinc2,w,c
 18054  018D58  6E0C               	movwf	(btemp+11)^0,c
 18055  018D5A  5009               	movf	(btemp+8)^0,w,c
 18056  018D5C  100A               	iorwf	(btemp+9)^0,w,c
 18057  018D5E  100B               	iorwf	(btemp+10)^0,w,c
 18058  018D60  100C               	iorwf	(btemp+11)^0,w,c
 18059  018D62  A4D8               	btfss	status,2,c
 18060  018D64  D008               	goto	l8014
 18061                           
 18062                           ;stkvar	_ff1 @ sp[(0)+-4]
 18063  018D66  0EFC               	movlw	-4
 18064  018D68  6AE3               	clrf	plusw1,c
 18065  018D6A  0EFD               	movlw	-3
 18066  018D6C  6AE3               	clrf	plusw1,c
 18067  018D6E  0EFE               	movlw	-2
 18068  018D70  6AE3               	clrf	plusw1,c
 18069  018D72  0EFF               	movlw	-1
 18070  018D74  6AE3               	clrf	plusw1,c
 18071  018D76                     l8014:
 18072                           
 18073                           ;stkvar	_ff2 @ sp[(0)+-8]
 18074  018D76  50E1               	movf	fsr1l,w,c
 18075  018D78  0FF8               	addlw	-8
 18076  018D7A  6ED9               	movwf	fsr2l,c
 18077  018D7C  50E2               	movf	fsr1h,w,c
 18078  018D7E  6EDA               	movwf	fsr2h,c
 18079  018D80  0EFF               	movlw	255
 18080  018D82  22DA               	addwfc	fsr2h,f,c
 18081  018D84  0E00               	movlw	0
 18082  018D86  14DE               	andwf	postinc2,w,c
 18083  018D88  6E09               	movwf	(btemp+8)^0,c
 18084  018D8A  0E00               	movlw	0
 18085  018D8C  14DE               	andwf	postinc2,w,c
 18086  018D8E  6E0A               	movwf	(btemp+9)^0,c
 18087  018D90  0E80               	movlw	128
 18088  018D92  14DE               	andwf	postinc2,w,c
 18089  018D94  6E0B               	movwf	(btemp+10)^0,c
 18090  018D96  0E7F               	movlw	127
 18091  018D98  14DE               	andwf	postinc2,w,c
 18092  018D9A  6E0C               	movwf	(btemp+11)^0,c
 18093  018D9C  5009               	movf	(btemp+8)^0,w,c
 18094  018D9E  100A               	iorwf	(btemp+9)^0,w,c
 18095  018DA0  100B               	iorwf	(btemp+10)^0,w,c
 18096  018DA2  100C               	iorwf	(btemp+11)^0,w,c
 18097  018DA4  A4D8               	btfss	status,2,c
 18098  018DA6  D008               	goto	l8018
 18099                           
 18100                           ;stkvar	_ff2 @ sp[(0)+-8]
 18101  018DA8  0EF8               	movlw	-8
 18102  018DAA  6AE3               	clrf	plusw1,c
 18103  018DAC  0EF9               	movlw	-7
 18104  018DAE  6AE3               	clrf	plusw1,c
 18105  018DB0  0EFA               	movlw	-6
 18106  018DB2  6AE3               	clrf	plusw1,c
 18107  018DB4  0EFB               	movlw	-5
 18108  018DB6  6AE3               	clrf	plusw1,c
 18109  018DB8                     l8018:
 18110                           
 18111                           ;stkvar	_ff2 @ sp[(0)+-8]
 18112                           ;stkvar	_ff1 @ sp[(0)+-4]
 18113  018DB8  50E1               	movf	fsr1l,w,c
 18114  018DBA  0FFC               	addlw	-4
 18115  018DBC  6ED9               	movwf	fsr2l,c
 18116  018DBE  50E2               	movf	fsr1h,w,c
 18117  018DC0  6EDA               	movwf	fsr2h,c
 18118  018DC2  0EFF               	movlw	255
 18119  018DC4  22DA               	addwfc	fsr2h,f,c
 18120  018DC6  0EF8               	movlw	-8
 18121  018DC8  50E3               	movf	plusw1,w,c
 18122  018DCA  18DE               	xorwf	postinc2,w,c
 18123  018DCC  E10D               	bnz	u6690
 18124  018DCE  0EF9               	movlw	-7
 18125  018DD0  50E3               	movf	plusw1,w,c
 18126  018DD2  18DE               	xorwf	postinc2,w,c
 18127  018DD4  E109               	bnz	u6690
 18128  018DD6  0EFA               	movlw	-6
 18129  018DD8  50E3               	movf	plusw1,w,c
 18130  018DDA  18DE               	xorwf	postinc2,w,c
 18131  018DDC  E105               	bnz	u6690
 18132  018DDE  0EFB               	movlw	-5
 18133  018DE0  50E3               	movf	plusw1,w,c
 18134  018DE2  18DE               	xorwf	postinc2,w,c
 18135  018DE4  B4D8               	btfsc	status,2,c
 18136  018DE6  D002               	goto	l8022
 18137  018DE8                     u6690:
 18138  018DE8  9001               	bcf	btemp& (0+255),0,c
 18139  018DEA  D001               	goto	l2550
 18140  018DEC                     l8022:
 18141  018DEC  8001               	bsf	btemp& (0+255),0,c
 18142  018DEE                     l2550:
 18143                           
 18144                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18145  018DEE  0EF8               	movlw	248
 18146  018DF0  26E1               	addwf	fsr1l,f,c
 18147  018DF2  0EFF               	movlw	255
 18148  018DF4  22E2               	addwfc	fsr1h,f,c
 18149  018DF6  0012               	return		;funcret
 18150  018DF8                     __end_of___fleq:
 18151                           	opt callstack 0
 18152                           
 18153 ;; *************** function ___fldiv *****************
 18154 ;; Defined at:
 18155 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 18156 ;; Parameters:    Size  Location     Type
 18157 ;;  b               4  [STACK] long 
 18158 ;;  a               4  [STACK] long 
 18159 ;; Auto vars:     Size  Location     Type
 18160 ;;  grs             4  [STACK] unsigned long 
 18161 ;;  rem             4  [STACK] unsigned long 
 18162 ;;  new_exp         2  [STACK] short 
 18163 ;;  aexp            1  [STACK] unsigned char 
 18164 ;;  bexp            1  [STACK] unsigned char 
 18165 ;;  sign            1  [STACK] unsigned char 
 18166 ;; Return value:  Size  Location     Type
 18167 ;;                  4  [STACK] unsigned char 
 18168 ;; Registers used:
 18169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18170 ;; Tracked objects:
 18171 ;;		On entry : 0/1
 18172 ;;		On exit  : 0/0
 18173 ;;		Unchanged: 0/0
 18174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18179 ;;Total ram usage:        0 bytes
 18180 ;; Hardware stack levels used:    1
 18181 ;; Hardware stack levels required when called:   15
 18182 ;; This function calls:
 18183 ;;		Nothing
 18184 ;; This function is called by:
 18185 ;;		_conv_raw_result
 18186 ;;		_calc_bsoc
 18187 ;;		_init_bsoc
 18188 ;;		_efgtoa
 18189 ;; This function uses a reentrant model
 18190 ;;
 18191                           
 18192                           	psect	text65
 18193  0141C6                     __ptext65:
 18194                           	opt callstack 0
 18195  0141C6                     ___fldiv:
 18196                           	opt callstack 0
 18197                           
 18198                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 18199  0141C6  0E0D               	movlw	13
 18200  0141C8  26E1               	addwf	fsr1l,f,c
 18201  0141CA  0E00               	movlw	0
 18202  0141CC  22E2               	addwfc	fsr1h,f,c
 18203                           
 18204                           ;stkvar	_b @ sp[(-13)+-4]
 18205                           
 18206                           ;incstack = 0
 18207 ;; hardware stack exceeded
 18208  0141CE  0EF2               	movlw	242
 18209  0141D0  24E1               	addwf	fsr1l,w,c
 18210  0141D2  6ED9               	movwf	fsr2l,c
 18211  0141D4  0EFF               	movlw	255
 18212  0141D6  20E2               	addwfc	fsr1h,w,c
 18213  0141D8  6EDA               	movwf	fsr2h,c
 18214  0141DA  50DF               	movf	indf2,w,c
 18215  0141DC  6E0C               	movwf	(btemp+11)^0,c
 18216  0141DE  0E80               	movlw	128
 18217  0141E0  160C               	andwf	(btemp+11)^0,f,c
 18218                           
 18219                           ;stkvar	_sign @ sp[(-13)+12]
 18220  0141E2  0EFF               	movlw	-1
 18221  0141E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18222                           
 18223                           ;stkvar	_b @ sp[(-13)+-4]
 18224  0141EA  0EF2               	movlw	242
 18225  0141EC  24E1               	addwf	fsr1l,w,c
 18226  0141EE  6ED9               	movwf	fsr2l,c
 18227  0141F0  0EFF               	movlw	255
 18228  0141F2  20E2               	addwfc	fsr1h,w,c
 18229  0141F4  6EDA               	movwf	fsr2h,c
 18230  0141F6  50DF               	movf	indf2,w,c
 18231  0141F8  6E0C               	movwf	(btemp+11)^0,c
 18232  0141FA  90D8               	bcf	status,0,c
 18233  0141FC  340C               	rlcf	(btemp+11)^0,w,c
 18234  0141FE  6E0B               	movwf	(btemp+10)^0,c
 18235                           
 18236                           ;stkvar	_bexp @ sp[(-13)+11]
 18237  014200  0EFE               	movlw	-2
 18238  014202  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18239                           
 18240                           ;stkvar	_b @ sp[(-13)+-4]
 18241  014208  0EF1               	movlw	241
 18242  01420A  24E1               	addwf	fsr1l,w,c
 18243  01420C  6ED9               	movwf	fsr2l,c
 18244  01420E  0EFF               	movlw	255
 18245  014210  20E2               	addwfc	fsr1h,w,c
 18246  014212  6EDA               	movwf	fsr2h,c
 18247  014214  AEDF               	btfss	indf2,7,c
 18248  014216  D002               	goto	l7616
 18249                           
 18250                           ;stkvar	_bexp @ sp[(-13)+11]
 18251  014218  0EFE               	movlw	-2
 18252  01421A  80E3               	bsf	plusw1,0,c
 18253  01421C                     l7616:
 18254                           
 18255                           ;stkvar	_bexp @ sp[(-13)+11]
 18256  01421C  0EFE               	movlw	-2
 18257  01421E  50E3               	movf	plusw1,w,c
 18258  014220  B4D8               	btfsc	status,2,c
 18259  014222  D027               	goto	l7626
 18260                           
 18261                           ;stkvar	_bexp @ sp[(-13)+11]
 18262  014224  0EFE               	movlw	-2
 18263  014226  28E3               	incf	plusw1,w,c
 18264  014228  A4D8               	btfss	status,2,c
 18265  01422A  D018               	goto	l7622
 18266  01422C  0E00               	movlw	0
 18267  01422E  6E09               	movwf	(btemp+8)^0,c
 18268  014230  0E00               	movlw	0
 18269  014232  6E0A               	movwf	(btemp+9)^0,c
 18270  014234  0E00               	movlw	0
 18271  014236  6E0B               	movwf	(btemp+10)^0,c
 18272  014238  0E00               	movlw	0
 18273  01423A  6E0C               	movwf	(btemp+11)^0,c
 18274                           
 18275                           ;stkvar	_b @ sp[(-13)+-4]
 18276  01423C  0EEF               	movlw	-17
 18277  01423E  0060  F027  FFE3   	movff	btemp+8,plusw1
 18278  014244  0EF0               	movlw	-16
 18279  014246  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18280  01424C  0EF1               	movlw	-15
 18281  01424E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18282  014254  0EF2               	movlw	-14
 18283  014256  0060  F033  FFE3   	movff	btemp+11,plusw1
 18284  01425C                     l7622:
 18285                           
 18286                           ;stkvar	_b @ sp[(-13)+-4]
 18287  01425C  0EF1               	movlw	-15
 18288  01425E  8EE3               	bsf	plusw1,7,c
 18289                           
 18290                           ;stkvar	_b @ sp[(-13)+-4]
 18291  014260  0EF2               	movlw	242
 18292  014262  24E1               	addwf	fsr1l,w,c
 18293  014264  6ED9               	movwf	fsr2l,c
 18294  014266  0EFF               	movlw	255
 18295  014268  20E2               	addwfc	fsr1h,w,c
 18296  01426A  6EDA               	movwf	fsr2h,c
 18297  01426C  0E00               	movlw	0
 18298  01426E  6EDF               	movwf	indf2,c
 18299  014270  D018               	goto	l7628
 18300  014272                     l7626:
 18301  014272  0E00               	movlw	0
 18302  014274  6E09               	movwf	(btemp+8)^0,c
 18303  014276  0E00               	movlw	0
 18304  014278  6E0A               	movwf	(btemp+9)^0,c
 18305  01427A  0E00               	movlw	0
 18306  01427C  6E0B               	movwf	(btemp+10)^0,c
 18307  01427E  0E00               	movlw	0
 18308  014280  6E0C               	movwf	(btemp+11)^0,c
 18309                           
 18310                           ;stkvar	_b @ sp[(-13)+-4]
 18311  014282  0EEF               	movlw	-17
 18312  014284  0060  F027  FFE3   	movff	btemp+8,plusw1
 18313  01428A  0EF0               	movlw	-16
 18314  01428C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18315  014292  0EF1               	movlw	-15
 18316  014294  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18317  01429A  0EF2               	movlw	-14
 18318  01429C  0060  F033  FFE3   	movff	btemp+11,plusw1
 18319  0142A2                     l7628:
 18320                           
 18321                           ;stkvar	_a @ sp[(-13)+-8]
 18322  0142A2  0EEE               	movlw	238
 18323  0142A4  24E1               	addwf	fsr1l,w,c
 18324  0142A6  6ED9               	movwf	fsr2l,c
 18325  0142A8  0EFF               	movlw	255
 18326  0142AA  20E2               	addwfc	fsr1h,w,c
 18327  0142AC  6EDA               	movwf	fsr2h,c
 18328  0142AE  50DF               	movf	indf2,w,c
 18329  0142B0  6E0C               	movwf	(btemp+11)^0,c
 18330  0142B2  0E80               	movlw	128
 18331  0142B4  160C               	andwf	(btemp+11)^0,f,c
 18332                           
 18333                           ;stkvar	_sign @ sp[(-13)+12]
 18334  0142B6  50E1               	movf	fsr1l,w,c
 18335  0142B8  0FFF               	addlw	-1
 18336  0142BA  6ED9               	movwf	fsr2l,c
 18337  0142BC  50E2               	movf	fsr1h,w,c
 18338  0142BE  6EDA               	movwf	fsr2h,c
 18339  0142C0  0EFF               	movlw	255
 18340  0142C2  22DA               	addwfc	fsr2h,f,c
 18341  0142C4  500C               	movf	(btemp+11)^0,w,c
 18342  0142C6  1ADF               	xorwf	indf2,f,c
 18343                           
 18344                           ;stkvar	_a @ sp[(-13)+-8]
 18345  0142C8  0EEE               	movlw	238
 18346  0142CA  24E1               	addwf	fsr1l,w,c
 18347  0142CC  6ED9               	movwf	fsr2l,c
 18348  0142CE  0EFF               	movlw	255
 18349  0142D0  20E2               	addwfc	fsr1h,w,c
 18350  0142D2  6EDA               	movwf	fsr2h,c
 18351  0142D4  50DF               	movf	indf2,w,c
 18352  0142D6  6E0C               	movwf	(btemp+11)^0,c
 18353  0142D8  90D8               	bcf	status,0,c
 18354  0142DA  340C               	rlcf	(btemp+11)^0,w,c
 18355  0142DC  6E0B               	movwf	(btemp+10)^0,c
 18356                           
 18357                           ;stkvar	_aexp @ sp[(-13)+10]
 18358  0142DE  0EFD               	movlw	-3
 18359  0142E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18360                           
 18361                           ;stkvar	_a @ sp[(-13)+-8]
 18362  0142E6  0EED               	movlw	237
 18363  0142E8  24E1               	addwf	fsr1l,w,c
 18364  0142EA  6ED9               	movwf	fsr2l,c
 18365  0142EC  0EFF               	movlw	255
 18366  0142EE  20E2               	addwfc	fsr1h,w,c
 18367  0142F0  6EDA               	movwf	fsr2h,c
 18368  0142F2  AEDF               	btfss	indf2,7,c
 18369  0142F4  D002               	goto	l7636
 18370                           
 18371                           ;stkvar	_aexp @ sp[(-13)+10]
 18372  0142F6  0EFD               	movlw	-3
 18373  0142F8  80E3               	bsf	plusw1,0,c
 18374  0142FA                     l7636:
 18375                           
 18376                           ;stkvar	_aexp @ sp[(-13)+10]
 18377  0142FA  0EFD               	movlw	-3
 18378  0142FC  50E3               	movf	plusw1,w,c
 18379  0142FE  B4D8               	btfsc	status,2,c
 18380  014300  D027               	goto	l7646
 18381                           
 18382                           ;stkvar	_aexp @ sp[(-13)+10]
 18383  014302  0EFD               	movlw	-3
 18384  014304  28E3               	incf	plusw1,w,c
 18385  014306  A4D8               	btfss	status,2,c
 18386  014308  D018               	goto	l7642
 18387  01430A  0E00               	movlw	0
 18388  01430C  6E09               	movwf	(btemp+8)^0,c
 18389  01430E  0E00               	movlw	0
 18390  014310  6E0A               	movwf	(btemp+9)^0,c
 18391  014312  0E00               	movlw	0
 18392  014314  6E0B               	movwf	(btemp+10)^0,c
 18393  014316  0E00               	movlw	0
 18394  014318  6E0C               	movwf	(btemp+11)^0,c
 18395                           
 18396                           ;stkvar	_a @ sp[(-13)+-8]
 18397  01431A  0EEB               	movlw	-21
 18398  01431C  0060  F027  FFE3   	movff	btemp+8,plusw1
 18399  014322  0EEC               	movlw	-20
 18400  014324  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18401  01432A  0EED               	movlw	-19
 18402  01432C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18403  014332  0EEE               	movlw	-18
 18404  014334  0060  F033  FFE3   	movff	btemp+11,plusw1
 18405  01433A                     l7642:
 18406                           
 18407                           ;stkvar	_a @ sp[(-13)+-8]
 18408  01433A  0EED               	movlw	-19
 18409  01433C  8EE3               	bsf	plusw1,7,c
 18410                           
 18411                           ;stkvar	_a @ sp[(-13)+-8]
 18412  01433E  0EEE               	movlw	238
 18413  014340  24E1               	addwf	fsr1l,w,c
 18414  014342  6ED9               	movwf	fsr2l,c
 18415  014344  0EFF               	movlw	255
 18416  014346  20E2               	addwfc	fsr1h,w,c
 18417  014348  6EDA               	movwf	fsr2h,c
 18418  01434A  0E00               	movlw	0
 18419  01434C  6EDF               	movwf	indf2,c
 18420  01434E  D018               	goto	l7648
 18421  014350                     l7646:
 18422  014350  0E00               	movlw	0
 18423  014352  6E09               	movwf	(btemp+8)^0,c
 18424  014354  0E00               	movlw	0
 18425  014356  6E0A               	movwf	(btemp+9)^0,c
 18426  014358  0E00               	movlw	0
 18427  01435A  6E0B               	movwf	(btemp+10)^0,c
 18428  01435C  0E00               	movlw	0
 18429  01435E  6E0C               	movwf	(btemp+11)^0,c
 18430                           
 18431                           ;stkvar	_a @ sp[(-13)+-8]
 18432  014360  0EEB               	movlw	-21
 18433  014362  0060  F027  FFE3   	movff	btemp+8,plusw1
 18434  014368  0EEC               	movlw	-20
 18435  01436A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18436  014370  0EED               	movlw	-19
 18437  014372  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18438  014378  0EEE               	movlw	-18
 18439  01437A  0060  F033  FFE3   	movff	btemp+11,plusw1
 18440  014380                     l7648:
 18441                           
 18442                           ;stkvar	_a @ sp[(-13)+-8]
 18443  014380  0EEB               	movlw	-21
 18444  014382  50E3               	movf	plusw1,w,c
 18445  014384  E139               	bnz	l7660
 18446  014386  0EEC               	movlw	-20
 18447  014388  50E3               	movf	plusw1,w,c
 18448  01438A  E136               	bnz	l7660
 18449  01438C  0EED               	movlw	-19
 18450  01438E  50E3               	movf	plusw1,w,c
 18451  014390  E133               	bnz	l7660
 18452  014392  0EEE               	movlw	-18
 18453  014394  50E3               	movf	plusw1,w,c
 18454  014396  A4D8               	btfss	status,2,c
 18455  014398  D02F               	goto	l7660
 18456                           
 18457                           ;stkvar	_b @ sp[(-13)+-4]
 18458  01439A  0EEF               	movlw	-17
 18459  01439C  6AE3               	clrf	plusw1,c
 18460  01439E  0EF0               	movlw	-16
 18461  0143A0  6AE3               	clrf	plusw1,c
 18462  0143A2  0EF1               	movlw	-15
 18463  0143A4  6AE3               	clrf	plusw1,c
 18464  0143A6  0EF2               	movlw	-14
 18465  0143A8  6AE3               	clrf	plusw1,c
 18466                           
 18467                           ;stkvar	_b @ sp[(-13)+-4]
 18468  0143AA  0EF1               	movlw	241
 18469  0143AC  24E1               	addwf	fsr1l,w,c
 18470  0143AE  6ED9               	movwf	fsr2l,c
 18471  0143B0  0EFF               	movlw	255
 18472  0143B2  20E2               	addwfc	fsr1h,w,c
 18473  0143B4  6EDA               	movwf	fsr2h,c
 18474  0143B6  0E80               	movlw	128
 18475  0143B8  12DE               	iorwf	postinc2,f,c
 18476  0143BA  0E7F               	movlw	127
 18477  0143BC  12DD               	iorwf	postdec2,f,c
 18478  0143BE                     l7654:
 18479                           
 18480                           ;stkvar	_sign @ sp[(-13)+12]
 18481  0143BE  0EFF               	movlw	-1
 18482  0143C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18483                           
 18484                           ;stkvar	_b @ sp[(-13)+-4]
 18485  0143C6  0EF2               	movlw	242
 18486  0143C8  24E1               	addwf	fsr1l,w,c
 18487  0143CA  6ED9               	movwf	fsr2l,c
 18488  0143CC  0EFF               	movlw	255
 18489  0143CE  20E2               	addwfc	fsr1h,w,c
 18490  0143D0  6EDA               	movwf	fsr2h,c
 18491  0143D2  500C               	movf	(btemp+11)^0,w,c
 18492  0143D4  12DF               	iorwf	indf2,f,c
 18493                           
 18494                           ;stkvar	_b @ sp[(-13)+-4]
 18495  0143D6  0EEF               	movlw	-17
 18496  0143D8  006F FF8C  F001    	movff	plusw1,btemp
 18497  0143DE  0EF0               	movlw	-16
 18498  0143E0  006F FF8C  F002    	movff	plusw1,btemp+1
 18499  0143E6  0EF1               	movlw	-15
 18500  0143E8  006F FF8C  F003    	movff	plusw1,btemp+2
 18501  0143EE  0EF2               	movlw	-14
 18502  0143F0  006F FF8C  F004    	movff	plusw1,btemp+3
 18503  0143F6  D19F               	goto	l2873
 18504  0143F8                     l7660:
 18505                           
 18506                           ;stkvar	_bexp @ sp[(-13)+11]
 18507  0143F8  0EFE               	movlw	-2
 18508  0143FA  50E3               	movf	plusw1,w,c
 18509  0143FC  A4D8               	btfss	status,2,c
 18510  0143FE  D009               	goto	l7668
 18511  014400  0E00               	movlw	0
 18512  014402  6E01               	movwf	btemp^0,c
 18513  014404  0E00               	movlw	0
 18514  014406  6E02               	movwf	(btemp+1)^0,c
 18515  014408  0E00               	movlw	0
 18516  01440A  6E03               	movwf	(btemp+2)^0,c
 18517  01440C  0E00               	movlw	0
 18518  01440E  6E04               	movwf	(btemp+3)^0,c
 18519  014410  D192               	goto	l2873
 18520  014412                     l7668:
 18521                           
 18522                           ;stkvar	_bexp @ sp[(-13)+11]
 18523  014412  0EFE               	movlw	-2
 18524  014414  50E3               	movf	plusw1,w,c
 18525  014416  6E0B               	movwf	(btemp+10)^0,c
 18526  014418  6A0C               	clrf	(btemp+11)^0,c
 18527                           
 18528                           ;stkvar	_aexp @ sp[(-13)+10]
 18529  01441A  0EFD               	movlw	-3
 18530  01441C  50E3               	movf	plusw1,w,c
 18531  01441E  5E0B               	subwf	(btemp+10)^0,f,c
 18532  014420  0E00               	movlw	0
 18533  014422  5A0C               	subwfb	(btemp+11)^0,f,c
 18534  014424  0E7F               	movlw	127
 18535  014426  260B               	addwf	(btemp+10)^0,f,c
 18536  014428  0E00               	movlw	0
 18537  01442A  220C               	addwfc	(btemp+11)^0,f,c
 18538                           
 18539                           ;stkvar	_new_exp @ sp[(-13)+8]
 18540  01442C  0EFB               	movlw	-5
 18541  01442E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18542  014434  0EFC               	movlw	-4
 18543  014436  0060  F033  FFE3   	movff	btemp+11,plusw1
 18544                           
 18545                           ;stkvar	_b @ sp[(-13)+-4]
 18546  01443C  0EEF               	movlw	-17
 18547  01443E  006F FF8C  F009    	movff	plusw1,btemp+8
 18548  014444  0EF0               	movlw	-16
 18549  014446  006F FF8C  F00A    	movff	plusw1,btemp+9
 18550  01444C  0EF1               	movlw	-15
 18551  01444E  006F FF8C  F00B    	movff	plusw1,btemp+10
 18552  014454  0EF2               	movlw	-14
 18553  014456  006F FF8C  F00C    	movff	plusw1,btemp+11
 18554                           
 18555                           ;stkvar	_rem @ sp[(-13)+4]
 18556  01445C  0EF7               	movlw	-9
 18557  01445E  0060  F027  FFE3   	movff	btemp+8,plusw1
 18558  014464  0EF8               	movlw	-8
 18559  014466  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18560  01446C  0EF9               	movlw	-7
 18561  01446E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18562  014474  0EFA               	movlw	-6
 18563  014476  0060  F033  FFE3   	movff	btemp+11,plusw1
 18564                           
 18565                           ;stkvar	_b @ sp[(-13)+-4]
 18566  01447C  0EEF               	movlw	-17
 18567  01447E  6AE3               	clrf	plusw1,c
 18568  014480  0EF0               	movlw	-16
 18569  014482  6AE3               	clrf	plusw1,c
 18570  014484  0EF1               	movlw	-15
 18571  014486  6AE3               	clrf	plusw1,c
 18572  014488  0EF2               	movlw	-14
 18573  01448A  6AE3               	clrf	plusw1,c
 18574                           
 18575                           ;stkvar	_grs @ sp[(-13)+0]
 18576  01448C  0EF3               	movlw	-13
 18577  01448E  6AE3               	clrf	plusw1,c
 18578  014490  0EF4               	movlw	-12
 18579  014492  6AE3               	clrf	plusw1,c
 18580  014494  0EF5               	movlw	-11
 18581  014496  6AE3               	clrf	plusw1,c
 18582  014498  0EF6               	movlw	-10
 18583  01449A  6AE3               	clrf	plusw1,c
 18584                           
 18585                           ;stkvar	_aexp @ sp[(-13)+10]
 18586  01449C  0EFD               	movlw	-3
 18587  01449E  6AE3               	clrf	plusw1,c
 18588  0144A0  D050               	goto	l7696
 18589  0144A2                     l7678:
 18590                           
 18591                           ;stkvar	_aexp @ sp[(-13)+10]
 18592  0144A2  0EFD               	movlw	-3
 18593  0144A4  50E3               	movf	plusw1,w,c
 18594  0144A6  B4D8               	btfsc	status,2,c
 18595  0144A8  D020               	goto	l7688
 18596                           
 18597                           ;stkvar	_rem @ sp[(-13)+4]
 18598  0144AA  90D8               	bcf	status,0,c
 18599  0144AC  0EF7               	movlw	-9
 18600  0144AE  36E3               	rlcf	plusw1,f,c
 18601  0144B0  0EF8               	movlw	-8
 18602  0144B2  36E3               	rlcf	plusw1,f,c
 18603  0144B4  0EF9               	movlw	-7
 18604  0144B6  36E3               	rlcf	plusw1,f,c
 18605  0144B8  0EFA               	movlw	-6
 18606  0144BA  36E3               	rlcf	plusw1,f,c
 18607                           
 18608                           ;stkvar	_b @ sp[(-13)+-4]
 18609  0144BC  90D8               	bcf	status,0,c
 18610  0144BE  0EEF               	movlw	-17
 18611  0144C0  36E3               	rlcf	plusw1,f,c
 18612  0144C2  0EF0               	movlw	-16
 18613  0144C4  36E3               	rlcf	plusw1,f,c
 18614  0144C6  0EF1               	movlw	-15
 18615  0144C8  36E3               	rlcf	plusw1,f,c
 18616  0144CA  0EF2               	movlw	-14
 18617  0144CC  36E3               	rlcf	plusw1,f,c
 18618                           
 18619                           ;stkvar	_grs @ sp[(-13)+0]
 18620  0144CE  0EF6               	movlw	-10
 18621  0144D0  AEE3               	btfss	plusw1,7,c
 18622  0144D2  D002               	goto	l7686
 18623                           
 18624                           ;stkvar	_b @ sp[(-13)+-4]
 18625  0144D4  0EEF               	movlw	-17
 18626  0144D6  80E3               	bsf	plusw1,0,c
 18627  0144D8                     l7686:
 18628                           
 18629                           ;stkvar	_grs @ sp[(-13)+0]
 18630  0144D8  90D8               	bcf	status,0,c
 18631  0144DA  0EF3               	movlw	-13
 18632  0144DC  36E3               	rlcf	plusw1,f,c
 18633  0144DE  0EF4               	movlw	-12
 18634  0144E0  36E3               	rlcf	plusw1,f,c
 18635  0144E2  0EF5               	movlw	-11
 18636  0144E4  36E3               	rlcf	plusw1,f,c
 18637  0144E6  0EF6               	movlw	-10
 18638  0144E8  36E3               	rlcf	plusw1,f,c
 18639  0144EA                     l7688:
 18640                           
 18641                           ;stkvar	_a @ sp[(-13)+-8]
 18642                           ;stkvar	_rem @ sp[(-13)+4]
 18643  0144EA  50E1               	movf	fsr1l,w,c
 18644  0144EC  0FF7               	addlw	-9
 18645  0144EE  6ED9               	movwf	fsr2l,c
 18646  0144F0  50E2               	movf	fsr1h,w,c
 18647  0144F2  6EDA               	movwf	fsr2h,c
 18648  0144F4  0EFF               	movlw	255
 18649  0144F6  22DA               	addwfc	fsr2h,f,c
 18650  0144F8  0EEB               	movlw	-21
 18651  0144FA  50E3               	movf	plusw1,w,c
 18652  0144FC  5CDE               	subwf	postinc2,w,c
 18653  0144FE  0EEC               	movlw	-20
 18654  014500  50E3               	movf	plusw1,w,c
 18655  014502  58DE               	subwfb	postinc2,w,c
 18656  014504  0EED               	movlw	-19
 18657  014506  50E3               	movf	plusw1,w,c
 18658  014508  58DE               	subwfb	postinc2,w,c
 18659  01450A  0EEE               	movlw	-18
 18660  01450C  50E3               	movf	plusw1,w,c
 18661  01450E  58DE               	subwfb	postinc2,w,c
 18662  014510  A0D8               	btfss	status,0,c
 18663  014512  D015               	goto	l7694
 18664                           
 18665                           ;stkvar	_grs @ sp[(-13)+0]
 18666  014514  0EF6               	movlw	-10
 18667  014516  8CE3               	bsf	plusw1,6,c
 18668                           
 18669                           ;stkvar	_a @ sp[(-13)+-8]
 18670                           ;stkvar	_rem @ sp[(-13)+4]
 18671  014518  50E1               	movf	fsr1l,w,c
 18672  01451A  0FF7               	addlw	-9
 18673  01451C  6ED9               	movwf	fsr2l,c
 18674  01451E  50E2               	movf	fsr1h,w,c
 18675  014520  6EDA               	movwf	fsr2h,c
 18676  014522  0EFF               	movlw	255
 18677  014524  22DA               	addwfc	fsr2h,f,c
 18678  014526  0EEB               	movlw	-21
 18679  014528  50E3               	movf	plusw1,w,c
 18680  01452A  5EDE               	subwf	postinc2,f,c
 18681  01452C  0EEC               	movlw	-20
 18682  01452E  50E3               	movf	plusw1,w,c
 18683  014530  5ADE               	subwfb	postinc2,f,c
 18684  014532  0EED               	movlw	-19
 18685  014534  50E3               	movf	plusw1,w,c
 18686  014536  5ADE               	subwfb	postinc2,f,c
 18687  014538  0EEE               	movlw	-18
 18688  01453A  50E3               	movf	plusw1,w,c
 18689  01453C  5ADE               	subwfb	postinc2,f,c
 18690  01453E                     l7694:
 18691                           
 18692                           ;stkvar	_aexp @ sp[(-13)+10]
 18693  01453E  0EFD               	movlw	-3
 18694  014540  2AE3               	incf	plusw1,f,c
 18695  014542                     l7696:
 18696                           
 18697                           ;stkvar	_aexp @ sp[(-13)+10]
 18698  014542  0EFD               	movlw	-3
 18699  014544  006F FF8C  F001    	movff	plusw1,btemp
 18700  01454A  0E19               	movlw	25
 18701  01454C  6401               	cpfsgt	btemp^0,c
 18702  01454E  D7A9               	goto	l7678
 18703                           
 18704                           ;stkvar	_rem @ sp[(-13)+4]
 18705  014550  0EF7               	movlw	-9
 18706  014552  50E3               	movf	plusw1,w,c
 18707  014554  E10A               	bnz	u6190
 18708  014556  0EF8               	movlw	-8
 18709  014558  50E3               	movf	plusw1,w,c
 18710  01455A  E107               	bnz	u6190
 18711  01455C  0EF9               	movlw	-7
 18712  01455E  50E3               	movf	plusw1,w,c
 18713  014560  E104               	bnz	u6190
 18714  014562  0EFA               	movlw	-6
 18715  014564  50E3               	movf	plusw1,w,c
 18716  014566  B4D8               	btfsc	status,2,c
 18717  014568  D024               	goto	l7712
 18718  01456A                     u6190:
 18719                           
 18720                           ;stkvar	_grs @ sp[(-13)+0]
 18721  01456A  0EF3               	movlw	-13
 18722  01456C  80E3               	bsf	plusw1,0,c
 18723  01456E  D021               	goto	l7712
 18724  014570                     l7702:
 18725                           
 18726                           ;stkvar	_b @ sp[(-13)+-4]
 18727  014570  90D8               	bcf	status,0,c
 18728  014572  0EEF               	movlw	-17
 18729  014574  36E3               	rlcf	plusw1,f,c
 18730  014576  0EF0               	movlw	-16
 18731  014578  36E3               	rlcf	plusw1,f,c
 18732  01457A  0EF1               	movlw	-15
 18733  01457C  36E3               	rlcf	plusw1,f,c
 18734  01457E  0EF2               	movlw	-14
 18735  014580  36E3               	rlcf	plusw1,f,c
 18736                           
 18737                           ;stkvar	_grs @ sp[(-13)+0]
 18738  014582  0EF6               	movlw	-10
 18739  014584  AEE3               	btfss	plusw1,7,c
 18740  014586  D002               	goto	l7708
 18741                           
 18742                           ;stkvar	_b @ sp[(-13)+-4]
 18743  014588  0EEF               	movlw	-17
 18744  01458A  80E3               	bsf	plusw1,0,c
 18745  01458C                     l7708:
 18746                           
 18747                           ;stkvar	_grs @ sp[(-13)+0]
 18748  01458C  90D8               	bcf	status,0,c
 18749  01458E  0EF3               	movlw	-13
 18750  014590  36E3               	rlcf	plusw1,f,c
 18751  014592  0EF4               	movlw	-12
 18752  014594  36E3               	rlcf	plusw1,f,c
 18753  014596  0EF5               	movlw	-11
 18754  014598  36E3               	rlcf	plusw1,f,c
 18755  01459A  0EF6               	movlw	-10
 18756  01459C  36E3               	rlcf	plusw1,f,c
 18757                           
 18758                           ;stkvar	_new_exp @ sp[(-13)+8]
 18759  01459E  50E1               	movf	fsr1l,w,c
 18760  0145A0  0FFB               	addlw	-5
 18761  0145A2  6ED9               	movwf	fsr2l,c
 18762  0145A4  50E2               	movf	fsr1h,w,c
 18763  0145A6  6EDA               	movwf	fsr2h,c
 18764  0145A8  0EFF               	movlw	255
 18765  0145AA  22DA               	addwfc	fsr2h,f,c
 18766  0145AC  06DE               	decf	postinc2,f,c
 18767  0145AE  0E00               	movlw	0
 18768  0145B0  5ADD               	subwfb	postdec2,f,c
 18769  0145B2                     l7712:
 18770                           
 18771                           ;stkvar	_b @ sp[(-13)+-4]
 18772  0145B2  0EF1               	movlw	-15
 18773  0145B4  AEE3               	btfss	plusw1,7,c
 18774  0145B6  D7DC               	goto	l7702
 18775                           
 18776                           ;stkvar	_aexp @ sp[(-13)+10]
 18777  0145B8  0EFD               	movlw	-3
 18778  0145BA  6AE3               	clrf	plusw1,c
 18779                           
 18780                           ;stkvar	_grs @ sp[(-13)+0]
 18781  0145BC  0EF6               	movlw	-10
 18782  0145BE  AEE3               	btfss	plusw1,7,c
 18783  0145C0  D020               	goto	l7726
 18784                           
 18785                           ;stkvar	_grs @ sp[(-13)+0]
 18786  0145C2  50E1               	movf	fsr1l,w,c
 18787  0145C4  0FF3               	addlw	-13
 18788  0145C6  6ED9               	movwf	fsr2l,c
 18789  0145C8  50E2               	movf	fsr1h,w,c
 18790  0145CA  6EDA               	movwf	fsr2h,c
 18791  0145CC  0EFF               	movlw	255
 18792  0145CE  22DA               	addwfc	fsr2h,f,c
 18793  0145D0  0EFF               	movlw	255
 18794  0145D2  14DE               	andwf	postinc2,w,c
 18795  0145D4  6E09               	movwf	(btemp+8)^0,c
 18796  0145D6  0EFF               	movlw	255
 18797  0145D8  14DE               	andwf	postinc2,w,c
 18798  0145DA  6E0A               	movwf	(btemp+9)^0,c
 18799  0145DC  0EFF               	movlw	255
 18800  0145DE  14DE               	andwf	postinc2,w,c
 18801  0145E0  6E0B               	movwf	(btemp+10)^0,c
 18802  0145E2  0E7F               	movlw	127
 18803  0145E4  14DE               	andwf	postinc2,w,c
 18804  0145E6  6E0C               	movwf	(btemp+11)^0,c
 18805  0145E8  5009               	movf	(btemp+8)^0,w,c
 18806  0145EA  100A               	iorwf	(btemp+9)^0,w,c
 18807  0145EC  100B               	iorwf	(btemp+10)^0,w,c
 18808  0145EE  100C               	iorwf	(btemp+11)^0,w,c
 18809  0145F0  B4D8               	btfsc	status,2,c
 18810  0145F2  D004               	goto	l7722
 18811  0145F4                     u6230:
 18812                           
 18813                           ;stkvar	_aexp @ sp[(-13)+10]
 18814  0145F4  0EFD               	movlw	-3
 18815  0145F6  6AE3               	clrf	plusw1,c
 18816  0145F8  2AE3               	incf	plusw1,f,c
 18817  0145FA  D003               	goto	l7726
 18818  0145FC                     l7722:
 18819                           
 18820                           ;stkvar	_b @ sp[(-13)+-4]
 18821  0145FC  0EEF               	movlw	-17
 18822  0145FE  B0E3               	btfsc	plusw1,0,c
 18823  014600  D7F9               	goto	u6230
 18824  014602                     l7726:
 18825                           
 18826                           ;stkvar	_aexp @ sp[(-13)+10]
 18827  014602  0EFD               	movlw	-3
 18828  014604  50E3               	movf	plusw1,w,c
 18829  014606  B4D8               	btfsc	status,2,c
 18830  014608  D036               	goto	l7736
 18831                           
 18832                           ;stkvar	_b @ sp[(-13)+-4]
 18833  01460A  50E1               	movf	fsr1l,w,c
 18834  01460C  0FEF               	addlw	-17
 18835  01460E  6ED9               	movwf	fsr2l,c
 18836  014610  50E2               	movf	fsr1h,w,c
 18837  014612  6EDA               	movwf	fsr2h,c
 18838  014614  0EFF               	movlw	255
 18839  014616  22DA               	addwfc	fsr2h,f,c
 18840  014618  2ADE               	incf	postinc2,f,c
 18841  01461A  0E00               	movlw	0
 18842  01461C  22DE               	addwfc	postinc2,f,c
 18843  01461E  22DE               	addwfc	postinc2,f,c
 18844  014620  22DE               	addwfc	postinc2,f,c
 18845                           
 18846                           ;stkvar	_b @ sp[(-13)+-4]
 18847  014622  0EF2               	movlw	-14
 18848  014624  A0E3               	btfss	plusw1,0,c
 18849  014626  D027               	goto	l7736
 18850  014628  0E01               	movlw	1
 18851  01462A  6E0C               	movwf	(btemp+11)^0,c
 18852                           
 18853                           ;stkvar	_b @ sp[(-13)+-4]
 18854  01462C  50E1               	movf	fsr1l,w,c
 18855  01462E  0FEF               	addlw	-17
 18856  014630  6ED9               	movwf	fsr2l,c
 18857  014632  50E2               	movf	fsr1h,w,c
 18858  014634  6EDA               	movwf	fsr2h,c
 18859  014636  0EFF               	movlw	255
 18860  014638  22DA               	addwfc	fsr2h,f,c
 18861  01463A  280C               	incf	(btemp+11)^0,w,c
 18862  01463C  52DE               	movf	postinc2,f,c
 18863  01463E  D008               	goto	u6270
 18864  014640                     u6275:
 18865  014640  52DE               	movf	postinc2,f,c
 18866  014642  90D8               	bcf	status,0,c
 18867  014644  BEDC               	btfsc	preinc2,7,c
 18868  014646  80D8               	bsf	status,0,c
 18869  014648  32DD               	rrcf	postdec2,f,c
 18870  01464A  32DD               	rrcf	postdec2,f,c
 18871  01464C  32DD               	rrcf	postdec2,f,c
 18872  01464E  32DE               	rrcf	postinc2,f,c
 18873  014650                     u6270:
 18874  014650  2EE8               	decfsz	wreg,f,c
 18875  014652  D7F6               	goto	u6275
 18876                           
 18877                           ;stkvar	_new_exp @ sp[(-13)+8]
 18878  014654  0EFB               	movlw	-5
 18879  014656  50E3               	movf	plusw1,w,c
 18880  014658  0F01               	addlw	1
 18881  01465A  6E01               	movwf	btemp^0,c
 18882  01465C  0EFB               	movlw	-5
 18883  01465E  0060  F007  FFE3   	movff	btemp,plusw1
 18884  014664  6A01               	clrf	btemp^0,c
 18885  014666  0EFC               	movlw	-4
 18886  014668  50E3               	movf	plusw1,w,c
 18887  01466A  2001               	addwfc	btemp^0,w,c
 18888  01466C  6E01               	movwf	btemp^0,c
 18889  01466E  0EFC               	movlw	-4
 18890  014670  0060  F007  FFE3   	movff	btemp,plusw1
 18891  014676                     l7736:
 18892                           
 18893                           ;stkvar	_new_exp @ sp[(-13)+8]
 18894  014676  0EFC               	movlw	-4
 18895  014678  BEE3               	btfsc	plusw1,7,c
 18896  01467A  D01B               	goto	l7742
 18897  01467C  0EFC               	movlw	-4
 18898  01467E  50E3               	movf	plusw1,w,c
 18899  014680  E104               	bnz	u6280
 18900  014682  0EFB               	movlw	-5
 18901  014684  28E3               	incf	plusw1,w,c
 18902  014686  A0D8               	btfss	status,0,c
 18903  014688  D014               	goto	l7742
 18904  01468A                     u6280:
 18905  01468A  0EFF               	movlw	255
 18906  01468C  6E0B               	movwf	(btemp+10)^0,c
 18907  01468E  0E00               	movlw	0
 18908  014690  6E0C               	movwf	(btemp+11)^0,c
 18909                           
 18910                           ;stkvar	_new_exp @ sp[(-13)+8]
 18911  014692  0EFB               	movlw	-5
 18912  014694  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18913  01469A  0EFC               	movlw	-4
 18914  01469C  0060  F033  FFE3   	movff	btemp+11,plusw1
 18915                           
 18916                           ;stkvar	_b @ sp[(-13)+-4]
 18917  0146A2  0EEF               	movlw	-17
 18918  0146A4  6AE3               	clrf	plusw1,c
 18919  0146A6  0EF0               	movlw	-16
 18920  0146A8  6AE3               	clrf	plusw1,c
 18921  0146AA  0EF1               	movlw	-15
 18922  0146AC  6AE3               	clrf	plusw1,c
 18923  0146AE  0EF2               	movlw	-14
 18924  0146B0  6AE3               	clrf	plusw1,c
 18925  0146B2                     l7742:
 18926                           
 18927                           ;stkvar	_new_exp @ sp[(-13)+8]
 18928  0146B2  0EFC               	movlw	-4
 18929  0146B4  BEE3               	btfsc	plusw1,7,c
 18930  0146B6  D007               	goto	u6290
 18931  0146B8  0EFC               	movlw	-4
 18932  0146BA  50E3               	movf	plusw1,w,c
 18933  0146BC  E112               	bnz	l7748
 18934  0146BE  0EFB               	movlw	-5
 18935  0146C0  04E3               	decf	plusw1,w,c
 18936  0146C2  B0D8               	btfsc	status,0,c
 18937  0146C4  D00E               	goto	l7748
 18938  0146C6                     u6290:
 18939                           
 18940                           ;stkvar	_new_exp @ sp[(-13)+8]
 18941  0146C6  0EFB               	movlw	-5
 18942  0146C8  6AE3               	clrf	plusw1,c
 18943  0146CA  0EFC               	movlw	-4
 18944  0146CC  6AE3               	clrf	plusw1,c
 18945                           
 18946                           ;stkvar	_b @ sp[(-13)+-4]
 18947  0146CE  0EEF               	movlw	-17
 18948  0146D0  6AE3               	clrf	plusw1,c
 18949  0146D2  0EF0               	movlw	-16
 18950  0146D4  6AE3               	clrf	plusw1,c
 18951  0146D6  0EF1               	movlw	-15
 18952  0146D8  6AE3               	clrf	plusw1,c
 18953  0146DA  0EF2               	movlw	-14
 18954  0146DC  6AE3               	clrf	plusw1,c
 18955                           
 18956                           ;stkvar	_sign @ sp[(-13)+12]
 18957  0146DE  0EFF               	movlw	-1
 18958  0146E0  6AE3               	clrf	plusw1,c
 18959  0146E2                     l7748:
 18960                           
 18961                           ;stkvar	_new_exp @ sp[(-13)+8]
 18962                           ;stkvar	_bexp @ sp[(-13)+11]
 18963  0146E2  0EFB               	movlw	-5
 18964  0146E4  006F FF8C  F001    	movff	plusw1,btemp
 18965  0146EA  0EFE               	movlw	-2
 18966  0146EC  0060  F007  FFE3   	movff	btemp,plusw1
 18967                           
 18968                           ;stkvar	_bexp @ sp[(-13)+11]
 18969  0146F2  0EFE               	movlw	-2
 18970  0146F4  A0E3               	btfss	plusw1,0,c
 18971  0146F6  D009               	goto	l7754
 18972                           
 18973                           ;stkvar	_b @ sp[(-13)+-4]
 18974  0146F8  0EF1               	movlw	241
 18975  0146FA  24E1               	addwf	fsr1l,w,c
 18976  0146FC  6ED9               	movwf	fsr2l,c
 18977  0146FE  0EFF               	movlw	255
 18978  014700  20E2               	addwfc	fsr1h,w,c
 18979  014702  6EDA               	movwf	fsr2h,c
 18980  014704  0E00               	movlw	0
 18981  014706  8EDB               	bsf	plusw2,7,c
 18982  014708  D008               	goto	l7756
 18983  01470A                     l7754:
 18984                           
 18985                           ;stkvar	_b @ sp[(-13)+-4]
 18986  01470A  0EF1               	movlw	241
 18987  01470C  24E1               	addwf	fsr1l,w,c
 18988  01470E  6ED9               	movwf	fsr2l,c
 18989  014710  0EFF               	movlw	255
 18990  014712  20E2               	addwfc	fsr1h,w,c
 18991  014714  6EDA               	movwf	fsr2h,c
 18992  014716  0E7F               	movlw	127
 18993  014718  16DF               	andwf	indf2,f,c
 18994  01471A                     l7756:
 18995                           
 18996                           ;stkvar	_b @ sp[(-13)+-4]
 18997  01471A  0EF2               	movlw	242
 18998  01471C  24E1               	addwf	fsr1l,w,c
 18999  01471E  6ED9               	movwf	fsr2l,c
 19000  014720  0EFF               	movlw	255
 19001  014722  20E2               	addwfc	fsr1h,w,c
 19002  014724  6EDA               	movwf	fsr2h,c
 19003                           
 19004                           ;stkvar	_bexp @ sp[(-13)+11]
 19005  014726  0EFE               	movlw	-2
 19006  014728  006F FF8C  F00C    	movff	plusw1,btemp+11
 19007  01472E  90D8               	bcf	status,0,c
 19008  014730  300C               	rrcf	(btemp+11)^0,w,c
 19009  014732  6EDF               	movwf	indf2,c
 19010  014734  D644               	goto	l7654
 19011  014736                     l2873:
 19012                           
 19013                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 19014  014736  0EEB               	movlw	235
 19015  014738  26E1               	addwf	fsr1l,f,c
 19016  01473A  0EFF               	movlw	255
 19017  01473C  22E2               	addwfc	fsr1h,f,c
 19018  01473E  0012               	return		;funcret
 19019  014740                     __end_of___fldiv:
 19020                           	opt callstack 0
 19021                           
 19022 ;; *************** function ___awmod *****************
 19023 ;; Defined at:
 19024 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 19025 ;; Parameters:    Size  Location     Type
 19026 ;;  dividend        2  [STACK] int 
 19027 ;;  divisor         2  [STACK] int 
 19028 ;; Auto vars:     Size  Location     Type
 19029 ;;  sign            1  [STACK] unsigned char 
 19030 ;;  counter         1  [STACK] unsigned char 
 19031 ;; Return value:  Size  Location     Type
 19032 ;;                  2  [STACK] int 
 19033 ;; Registers used:
 19034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19035 ;; Tracked objects:
 19036 ;;		On entry : 0/0
 19037 ;;		On exit  : 0/0
 19038 ;;		Unchanged: 0/0
 19039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19044 ;;Total ram usage:        0 bytes
 19045 ;; Hardware stack levels used:    1
 19046 ;; Hardware stack levels required when called:   15
 19047 ;; This function calls:
 19048 ;;		Nothing
 19049 ;; This function is called by:
 19050 ;;		_efgtoa
 19051 ;; This function uses a reentrant model
 19052 ;;
 19053                           
 19054                           	psect	text66
 19055  01854E                     __ptext66:
 19056                           	opt callstack 0
 19057  01854E                     ___awmod:
 19058                           	opt callstack 0
 19059                           
 19060                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19061  01854E  52E6               	movf	postinc1,f,c
 19062  018550  52E6               	movf	postinc1,f,c
 19063                           
 19064                           ;stkvar	_sign @ sp[(-2)+0]
 19065                           
 19066                           ;incstack = 0
 19067 ;; hardware stack exceeded
 19068  018552  0EFE               	movlw	-2
 19069  018554  6AE3               	clrf	plusw1,c
 19070                           
 19071                           ;stkvar	_dividend @ sp[(-2)+-2]
 19072  018556  0EFD               	movlw	-3
 19073  018558  AEE3               	btfss	plusw1,7,c
 19074  01855A  D009               	goto	l7980
 19075                           
 19076                           ;stkvar	_dividend @ sp[(-2)+-2]
 19077                           ;stkvar	_dividend @ sp[(-2)+-2]
 19078  01855C  0EFC               	movlw	-4
 19079  01855E  6CE3               	negf	plusw1,c
 19080  018560  0EFD               	movlw	-3
 19081  018562  1EE3               	comf	plusw1,f,c
 19082  018564  B0D8               	btfsc	status,0,c
 19083  018566  2AE3               	incf	plusw1,f,c
 19084                           
 19085                           ;stkvar	_sign @ sp[(-2)+0]
 19086  018568  0EFE               	movlw	-2
 19087  01856A  6AE3               	clrf	plusw1,c
 19088  01856C  2AE3               	incf	plusw1,f,c
 19089  01856E                     l7980:
 19090                           
 19091                           ;stkvar	_divisor @ sp[(-2)+-4]
 19092  01856E  0EFB               	movlw	-5
 19093  018570  AEE3               	btfss	plusw1,7,c
 19094  018572  D006               	goto	l7984
 19095                           
 19096                           ;stkvar	_divisor @ sp[(-2)+-4]
 19097                           ;stkvar	_divisor @ sp[(-2)+-4]
 19098  018574  0EFA               	movlw	-6
 19099  018576  6CE3               	negf	plusw1,c
 19100  018578  0EFB               	movlw	-5
 19101  01857A  1EE3               	comf	plusw1,f,c
 19102  01857C  B0D8               	btfsc	status,0,c
 19103  01857E  2AE3               	incf	plusw1,f,c
 19104  018580                     l7984:
 19105                           
 19106                           ;stkvar	_divisor @ sp[(-2)+-4]
 19107  018580  0EFA               	movlw	-6
 19108  018582  006F FF8C  F001    	movff	plusw1,btemp
 19109  018588  0EFB               	movlw	-5
 19110  01858A  50E3               	movf	plusw1,w,c
 19111  01858C  1001               	iorwf	btemp^0,w,c
 19112  01858E  B4D8               	btfsc	status,2,c
 19113  018590  D053               	goto	u6650
 19114                           
 19115                           ;stkvar	_counter @ sp[(-2)+1]
 19116  018592  0EFF               	movlw	-1
 19117  018594  6AE3               	clrf	plusw1,c
 19118  018596  D012               	goto	L19
 19119  018598                     l7988:
 19120                           
 19121                           ;stkvar	_divisor @ sp[(-2)+-4]
 19122  018598  0EFA               	movlw	-6
 19123  01859A  50E3               	movf	plusw1,w,c
 19124  01859C  90D8               	bcf	status,0,c
 19125  01859E  34E8               	rlcf	wreg,w,c
 19126  0185A0  6E01               	movwf	btemp^0,c
 19127  0185A2  0EFA               	movlw	-6
 19128  0185A4  0060  F007  FFE3   	movff	btemp,plusw1
 19129  0185AA  0EFB               	movlw	-5
 19130  0185AC  50E3               	movf	plusw1,w,c
 19131  0185AE  34E8               	rlcf	wreg,w,c
 19132  0185B0  6E01               	movwf	btemp^0,c
 19133  0185B2  0EFB               	movlw	-5
 19134  0185B4  0060  F007  FFE3   	movff	btemp,plusw1
 19135                           
 19136                           ;stkvar	_counter @ sp[(-2)+1]
 19137  0185BA  0EFF               	movlw	-1
 19138  0185BC                     L19:
 19139  0185BC  2AE3               	incf	plusw1,f,c
 19140                           
 19141                           ;stkvar	_divisor @ sp[(-2)+-4]
 19142  0185BE  0EFB               	movlw	-5
 19143  0185C0  AEE3               	btfss	plusw1,7,c
 19144  0185C2  D7EA               	goto	l7988
 19145  0185C4                     u6630:
 19146                           
 19147                           ;stkvar	_divisor @ sp[(-2)+-4]
 19148  0185C4  0EFA               	movlw	-6
 19149  0185C6  006F FF8C  F00B    	movff	plusw1,btemp+10
 19150  0185CC  0EFB               	movlw	-5
 19151  0185CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 19152                           
 19153                           ;stkvar	_dividend @ sp[(-2)+-2]
 19154  0185D4  0EFC               	movlw	-4
 19155  0185D6  006F FF8C  F009    	movff	plusw1,btemp+8
 19156  0185DC  0EFD               	movlw	-3
 19157  0185DE  006F FF8C  F00A    	movff	plusw1,btemp+9
 19158  0185E4  500B               	movf	(btemp+10)^0,w,c
 19159  0185E6  5C09               	subwf	(btemp+8)^0,w,c
 19160  0185E8  500C               	movf	(btemp+11)^0,w,c
 19161  0185EA  580A               	subwfb	(btemp+9)^0,w,c
 19162  0185EC  A0D8               	btfss	status,0,c
 19163  0185EE  D014               	goto	l7998
 19164                           
 19165                           ;stkvar	_divisor @ sp[(-2)+-4]
 19166                           ;stkvar	_dividend @ sp[(-2)+-2]
 19167  0185F0  0EFC               	movlw	-4
 19168  0185F2  50E3               	movf	plusw1,w,c
 19169  0185F4  6E01               	movwf	btemp^0,c
 19170  0185F6  0EFA               	movlw	-6
 19171  0185F8  50E3               	movf	plusw1,w,c
 19172  0185FA  5E01               	subwf	btemp^0,f,c
 19173  0185FC  0EFC               	movlw	-4
 19174  0185FE  0060  F007  FFE3   	movff	btemp,plusw1
 19175  018604  0EFD               	movlw	-3
 19176  018606  50E3               	movf	plusw1,w,c
 19177  018608  6E01               	movwf	btemp^0,c
 19178  01860A  0EFB               	movlw	-5
 19179  01860C  50E3               	movf	plusw1,w,c
 19180  01860E  5A01               	subwfb	btemp^0,f,c
 19181  018610  0EFD               	movlw	-3
 19182  018612  0060  F007  FFE3   	movff	btemp,plusw1
 19183  018618                     l7998:
 19184                           
 19185                           ;stkvar	_divisor @ sp[(-2)+-4]
 19186  018618  90D8               	bcf	status,0,c
 19187  01861A  0EFB               	movlw	-5
 19188  01861C  32E3               	rrcf	plusw1,f,c
 19189  01861E  0EFA               	movlw	-6
 19190  018620  32E3               	rrcf	plusw1,f,c
 19191                           
 19192                           ;stkvar	_counter @ sp[(-2)+1]
 19193  018622  0EFF               	movlw	-1
 19194  018624  50E3               	movf	plusw1,w,c
 19195  018626  6E01               	movwf	btemp^0,c
 19196  018628  0E01               	movlw	1
 19197  01862A  5E01               	subwf	btemp^0,f,c
 19198  01862C  0EFF               	movlw	-1
 19199  01862E  0060  F007  FFE3   	movff	btemp,plusw1
 19200  018634  A4D8               	btfss	status,2,c
 19201  018636  D7C6               	goto	u6630
 19202  018638                     u6650:
 19203                           
 19204                           ;stkvar	_sign @ sp[(-2)+0]
 19205  018638  0EFE               	movlw	-2
 19206  01863A  50E3               	movf	plusw1,w,c
 19207  01863C  B4D8               	btfsc	status,2,c
 19208  01863E  D006               	goto	l8006
 19209                           
 19210                           ;stkvar	_dividend @ sp[(-2)+-2]
 19211                           ;stkvar	_dividend @ sp[(-2)+-2]
 19212  018640  0EFC               	movlw	-4
 19213  018642  6CE3               	negf	plusw1,c
 19214  018644  0EFD               	movlw	-3
 19215  018646  1EE3               	comf	plusw1,f,c
 19216  018648  B0D8               	btfsc	status,0,c
 19217  01864A  2AE3               	incf	plusw1,f,c
 19218  01864C                     l8006:
 19219                           
 19220                           ;stkvar	_dividend @ sp[(-2)+-2]
 19221  01864C  0EFC               	movlw	-4
 19222  01864E  006F FF8C  F001    	movff	plusw1,btemp
 19223  018654  0EFD               	movlw	-3
 19224  018656  006F FF8C  F002    	movff	plusw1,btemp+1
 19225                           
 19226                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19227  01865C  0EFA               	movlw	250
 19228  01865E  26E1               	addwf	fsr1l,f,c
 19229  018660  0EFF               	movlw	255
 19230  018662  22E2               	addwfc	fsr1h,f,c
 19231  018664  0012               	return		;funcret
 19232  018666                     __end_of___awmod:
 19233                           	opt callstack 0
 19234                           
 19235 ;; *************** function ___awdiv *****************
 19236 ;; Defined at:
 19237 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19238 ;; Parameters:    Size  Location     Type
 19239 ;;  dividend        2  [STACK] int 
 19240 ;;  divisor         2  [STACK] int 
 19241 ;; Auto vars:     Size  Location     Type
 19242 ;;  quotient        2  [STACK] int 
 19243 ;;  sign            1  [STACK] unsigned char 
 19244 ;;  counter         1  [STACK] unsigned char 
 19245 ;; Return value:  Size  Location     Type
 19246 ;;                  2  [STACK] int 
 19247 ;; Registers used:
 19248 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19249 ;; Tracked objects:
 19250 ;;		On entry : 0/0
 19251 ;;		On exit  : 0/0
 19252 ;;		Unchanged: 0/0
 19253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19258 ;;Total ram usage:        0 bytes
 19259 ;; Hardware stack levels used:    1
 19260 ;; Hardware stack levels required when called:   15
 19261 ;; This function calls:
 19262 ;;		Nothing
 19263 ;; This function is called by:
 19264 ;;		_efgtoa
 19265 ;; This function uses a reentrant model
 19266 ;;
 19267                           
 19268                           	psect	text67
 19269  017E02                     __ptext67:
 19270                           	opt callstack 0
 19271  017E02                     ___awdiv:
 19272                           	opt callstack 0
 19273                           
 19274                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19275  017E02  52E6               	movf	postinc1,f,c
 19276  017E04  52E6               	movf	postinc1,f,c
 19277  017E06  52E6               	movf	postinc1,f,c
 19278  017E08  52E6               	movf	postinc1,f,c
 19279                           
 19280                           ;stkvar	_sign @ sp[(-4)+2]
 19281                           
 19282                           ;incstack = 0
 19283 ;; hardware stack exceeded
 19284  017E0A  0EFE               	movlw	-2
 19285  017E0C  6AE3               	clrf	plusw1,c
 19286                           
 19287                           ;stkvar	_divisor @ sp[(-4)+-4]
 19288  017E0E  0EF9               	movlw	-7
 19289  017E10  AEE3               	btfss	plusw1,7,c
 19290  017E12  D009               	goto	l7934
 19291                           
 19292                           ;stkvar	_divisor @ sp[(-4)+-4]
 19293                           ;stkvar	_divisor @ sp[(-4)+-4]
 19294  017E14  0EF8               	movlw	-8
 19295  017E16  6CE3               	negf	plusw1,c
 19296  017E18  0EF9               	movlw	-7
 19297  017E1A  1EE3               	comf	plusw1,f,c
 19298  017E1C  B0D8               	btfsc	status,0,c
 19299  017E1E  2AE3               	incf	plusw1,f,c
 19300                           
 19301                           ;stkvar	_sign @ sp[(-4)+2]
 19302  017E20  0EFE               	movlw	-2
 19303  017E22  6AE3               	clrf	plusw1,c
 19304  017E24  2AE3               	incf	plusw1,f,c
 19305  017E26                     l7934:
 19306                           
 19307                           ;stkvar	_dividend @ sp[(-4)+-2]
 19308  017E26  0EFB               	movlw	-5
 19309  017E28  AEE3               	btfss	plusw1,7,c
 19310  017E2A  D008               	goto	l7940
 19311                           
 19312                           ;stkvar	_dividend @ sp[(-4)+-2]
 19313                           ;stkvar	_dividend @ sp[(-4)+-2]
 19314  017E2C  0EFA               	movlw	-6
 19315  017E2E  6CE3               	negf	plusw1,c
 19316  017E30  0EFB               	movlw	-5
 19317  017E32  1EE3               	comf	plusw1,f,c
 19318  017E34  B0D8               	btfsc	status,0,c
 19319  017E36  2AE3               	incf	plusw1,f,c
 19320                           
 19321                           ;stkvar	_sign @ sp[(-4)+2]
 19322  017E38  0EFE               	movlw	-2
 19323  017E3A  70E3               	btg	plusw1,0,c
 19324  017E3C                     l7940:
 19325                           
 19326                           ;stkvar	_quotient @ sp[(-4)+0]
 19327  017E3C  0EFC               	movlw	-4
 19328  017E3E  6AE3               	clrf	plusw1,c
 19329  017E40  0EFD               	movlw	-3
 19330  017E42  6AE3               	clrf	plusw1,c
 19331                           
 19332                           ;stkvar	_divisor @ sp[(-4)+-4]
 19333  017E44  0EF8               	movlw	-8
 19334  017E46  006F FF8C  F001    	movff	plusw1,btemp
 19335  017E4C  0EF9               	movlw	-7
 19336  017E4E  50E3               	movf	plusw1,w,c
 19337  017E50  1001               	iorwf	btemp^0,w,c
 19338  017E52  B4D8               	btfsc	status,2,c
 19339  017E54  D066               	goto	u6580
 19340                           
 19341                           ;stkvar	_counter @ sp[(-4)+3]
 19342  017E56  0EFF               	movlw	-1
 19343  017E58  6AE3               	clrf	plusw1,c
 19344  017E5A  D012               	goto	L20
 19345  017E5C                     l7946:
 19346                           
 19347                           ;stkvar	_divisor @ sp[(-4)+-4]
 19348  017E5C  0EF8               	movlw	-8
 19349  017E5E  50E3               	movf	plusw1,w,c
 19350  017E60  90D8               	bcf	status,0,c
 19351  017E62  34E8               	rlcf	wreg,w,c
 19352  017E64  6E01               	movwf	btemp^0,c
 19353  017E66  0EF8               	movlw	-8
 19354  017E68  0060  F007  FFE3   	movff	btemp,plusw1
 19355  017E6E  0EF9               	movlw	-7
 19356  017E70  50E3               	movf	plusw1,w,c
 19357  017E72  34E8               	rlcf	wreg,w,c
 19358  017E74  6E01               	movwf	btemp^0,c
 19359  017E76  0EF9               	movlw	-7
 19360  017E78  0060  F007  FFE3   	movff	btemp,plusw1
 19361                           
 19362                           ;stkvar	_counter @ sp[(-4)+3]
 19363  017E7E  0EFF               	movlw	-1
 19364  017E80                     L20:
 19365  017E80  2AE3               	incf	plusw1,f,c
 19366                           
 19367                           ;stkvar	_divisor @ sp[(-4)+-4]
 19368  017E82  0EF9               	movlw	-7
 19369  017E84  AEE3               	btfss	plusw1,7,c
 19370  017E86  D7EA               	goto	l7946
 19371  017E88                     u6560:
 19372                           
 19373                           ;stkvar	_quotient @ sp[(-4)+0]
 19374  017E88  0EFC               	movlw	-4
 19375  017E8A  50E3               	movf	plusw1,w,c
 19376  017E8C  90D8               	bcf	status,0,c
 19377  017E8E  34E8               	rlcf	wreg,w,c
 19378  017E90  6E01               	movwf	btemp^0,c
 19379  017E92  0EFC               	movlw	-4
 19380  017E94  0060  F007  FFE3   	movff	btemp,plusw1
 19381  017E9A  0EFD               	movlw	-3
 19382  017E9C  50E3               	movf	plusw1,w,c
 19383  017E9E  34E8               	rlcf	wreg,w,c
 19384  017EA0  6E01               	movwf	btemp^0,c
 19385  017EA2  0EFD               	movlw	-3
 19386  017EA4  0060  F007  FFE3   	movff	btemp,plusw1
 19387                           
 19388                           ;stkvar	_divisor @ sp[(-4)+-4]
 19389  017EAA  0EF8               	movlw	-8
 19390  017EAC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19391  017EB2  0EF9               	movlw	-7
 19392  017EB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19393                           
 19394                           ;stkvar	_dividend @ sp[(-4)+-2]
 19395  017EBA  0EFA               	movlw	-6
 19396  017EBC  006F FF8C  F009    	movff	plusw1,btemp+8
 19397  017EC2  0EFB               	movlw	-5
 19398  017EC4  006F FF8C  F00A    	movff	plusw1,btemp+9
 19399  017ECA  500B               	movf	(btemp+10)^0,w,c
 19400  017ECC  5C09               	subwf	(btemp+8)^0,w,c
 19401  017ECE  500C               	movf	(btemp+11)^0,w,c
 19402  017ED0  580A               	subwfb	(btemp+9)^0,w,c
 19403  017ED2  A0D8               	btfss	status,0,c
 19404  017ED4  D016               	goto	l7960
 19405                           
 19406                           ;stkvar	_divisor @ sp[(-4)+-4]
 19407                           ;stkvar	_dividend @ sp[(-4)+-2]
 19408  017ED6  0EFA               	movlw	-6
 19409  017ED8  50E3               	movf	plusw1,w,c
 19410  017EDA  6E01               	movwf	btemp^0,c
 19411  017EDC  0EF8               	movlw	-8
 19412  017EDE  50E3               	movf	plusw1,w,c
 19413  017EE0  5E01               	subwf	btemp^0,f,c
 19414  017EE2  0EFA               	movlw	-6
 19415  017EE4  0060  F007  FFE3   	movff	btemp,plusw1
 19416  017EEA  0EFB               	movlw	-5
 19417  017EEC  50E3               	movf	plusw1,w,c
 19418  017EEE  6E01               	movwf	btemp^0,c
 19419  017EF0  0EF9               	movlw	-7
 19420  017EF2  50E3               	movf	plusw1,w,c
 19421  017EF4  5A01               	subwfb	btemp^0,f,c
 19422  017EF6  0EFB               	movlw	-5
 19423  017EF8  0060  F007  FFE3   	movff	btemp,plusw1
 19424                           
 19425                           ;stkvar	_quotient @ sp[(-4)+0]
 19426  017EFE  0EFC               	movlw	-4
 19427  017F00  80E3               	bsf	plusw1,0,c
 19428  017F02                     l7960:
 19429                           
 19430                           ;stkvar	_divisor @ sp[(-4)+-4]
 19431  017F02  90D8               	bcf	status,0,c
 19432  017F04  0EF9               	movlw	-7
 19433  017F06  32E3               	rrcf	plusw1,f,c
 19434  017F08  0EF8               	movlw	-8
 19435  017F0A  32E3               	rrcf	plusw1,f,c
 19436                           
 19437                           ;stkvar	_counter @ sp[(-4)+3]
 19438  017F0C  0EFF               	movlw	-1
 19439  017F0E  50E3               	movf	plusw1,w,c
 19440  017F10  6E01               	movwf	btemp^0,c
 19441  017F12  0E01               	movlw	1
 19442  017F14  5E01               	subwf	btemp^0,f,c
 19443  017F16  0EFF               	movlw	-1
 19444  017F18  0060  F007  FFE3   	movff	btemp,plusw1
 19445  017F1E  A4D8               	btfss	status,2,c
 19446  017F20  D7B3               	goto	u6560
 19447  017F22                     u6580:
 19448                           
 19449                           ;stkvar	_sign @ sp[(-4)+2]
 19450  017F22  0EFE               	movlw	-2
 19451  017F24  50E3               	movf	plusw1,w,c
 19452  017F26  B4D8               	btfsc	status,2,c
 19453  017F28  D006               	goto	l7968
 19454                           
 19455                           ;stkvar	_quotient @ sp[(-4)+0]
 19456                           ;stkvar	_quotient @ sp[(-4)+0]
 19457  017F2A  0EFC               	movlw	-4
 19458  017F2C  6CE3               	negf	plusw1,c
 19459  017F2E  0EFD               	movlw	-3
 19460  017F30  1EE3               	comf	plusw1,f,c
 19461  017F32  B0D8               	btfsc	status,0,c
 19462  017F34  2AE3               	incf	plusw1,f,c
 19463  017F36                     l7968:
 19464                           
 19465                           ;stkvar	_quotient @ sp[(-4)+0]
 19466  017F36  0EFC               	movlw	-4
 19467  017F38  006F FF8C  F001    	movff	plusw1,btemp
 19468  017F3E  0EFD               	movlw	-3
 19469  017F40  006F FF8C  F002    	movff	plusw1,btemp+1
 19470                           
 19471                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19472  017F46  0EF8               	movlw	248
 19473  017F48  26E1               	addwf	fsr1l,f,c
 19474  017F4A  0EFF               	movlw	255
 19475  017F4C  22E2               	addwfc	fsr1h,f,c
 19476  017F4E  0012               	return		;funcret
 19477  017F50                     __end_of___awdiv:
 19478                           	opt callstack 0
 19479                           
 19480 ;; *************** function _dtoa *****************
 19481 ;; Defined at:
 19482 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19483 ;; Parameters:    Size  Location     Type
 19484 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19485 ;;		 -> f(6), NULL(0), 
 19486 ;;  d               8  [STACK] long long 
 19487 ;; Auto vars:     Size  Location     Type
 19488 ;;  n               8  [STACK] long long 
 19489 ;;  i               2  [STACK] int 
 19490 ;;  s               2  [STACK] int 
 19491 ;;  w               2  [STACK] int 
 19492 ;;  p               2  [STACK] int 
 19493 ;; Return value:  Size  Location     Type
 19494 ;;                  2  [STACK] int 
 19495 ;; Registers used:
 19496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19497 ;; Tracked objects:
 19498 ;;		On entry : 0/0
 19499 ;;		On exit  : 0/0
 19500 ;;		Unchanged: 0/0
 19501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19506 ;;Total ram usage:        0 bytes
 19507 ;; Hardware stack levels used:    1
 19508 ;; Hardware stack levels required when called:   20
 19509 ;; This function calls:
 19510 ;;		___aodiv
 19511 ;;		___aomod
 19512 ;;		_abs
 19513 ;;		_pad
 19514 ;; This function is called by:
 19515 ;;		_vfpfcnvrt
 19516 ;; This function uses a reentrant model
 19517 ;;
 19518                           
 19519                           	psect	text68
 19520  014BEC                     __ptext68:
 19521                           	opt callstack 0
 19522  014BEC                     _dtoa:
 19523                           	opt callstack 0
 19524                           
 19525                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19526  014BEC  0E12               	movlw	18
 19527  014BEE  26E1               	addwf	fsr1l,f,c
 19528  014BF0  0E00               	movlw	0
 19529  014BF2  22E2               	addwfc	fsr1h,f,c
 19530                           
 19531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19532                           ;stkvar	_d @ sp[(-18)+-10]
 19533                           
 19534                           ;incstack = 0
 19535 ;; hardware stack exceeded
 19536  014BF4  0EE4               	movlw	228
 19537  014BF6  24E1               	addwf	fsr1l,w,c
 19538  014BF8  6ED9               	movwf	fsr2l,c
 19539  014BFA  0EFF               	movlw	255
 19540  014BFC  20E2               	addwfc	fsr1h,w,c
 19541  014BFE  6EDA               	movwf	fsr2h,c
 19542                           
 19543                           ;stkvar	_n @ sp[(-18)+2]
 19544  014C00  0E08               	movlw	8
 19545  014C02  6E01               	movwf	btemp^0,c
 19546  014C04  0EF0               	movlw	-16
 19547  014C06                     us1011999:
 19548  014C06  006F FF7B FFE3     	movff	postinc2,plusw1
 19549  014C0C  28E8               	incf	wreg,w,c
 19550  014C0E  2E01               	decfsz	btemp^0,f,c
 19551  014C10  D7FA               	bra	us1011999
 19552                           
 19553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19554                           ;stkvar	_n @ sp[(-18)+2]
 19555  014C12  0EF7               	movlw	-9
 19556  014C14  AEE3               	btfss	plusw1,7,c
 19557  014C16  D002               	goto	u10120
 19558  014C18  0E01               	movlw	1
 19559  014C1A  D001               	goto	u10130
 19560  014C1C                     u10120:
 19561  014C1C  0E00               	movlw	0
 19562  014C1E                     u10130:
 19563  014C1E  6E0B               	movwf	(btemp+10)^0,c
 19564  014C20  6A0C               	clrf	(btemp+11)^0,c
 19565                           
 19566                           ;stkvar	_s @ sp[(-18)+12]
 19567  014C22  0EFA               	movlw	-6
 19568  014C24  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19569  014C2A  0EFB               	movlw	-5
 19570  014C2C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19571                           
 19572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19573                           ;stkvar	_s @ sp[(-18)+12]
 19574  014C32  0EFA               	movlw	-6
 19575  014C34  006F FF8C  F001    	movff	plusw1,btemp
 19576  014C3A  0EFB               	movlw	-5
 19577  014C3C  50E3               	movf	plusw1,w,c
 19578  014C3E  1001               	iorwf	btemp^0,w,c
 19579  014C40  B4D8               	btfsc	status,2,c
 19580  014C42  D025               	goto	u10150
 19581                           
 19582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19583                           ;stkvar	_n @ sp[(-18)+2]
 19584                           ;stkvar	_n @ sp[(-18)+2]
 19585  014C44  0EF0               	movlw	-16
 19586  014C46  6CE3               	negf	plusw1,c
 19587  014C48  0EF1               	movlw	-15
 19588  014C4A  1EE3               	comf	plusw1,f,c
 19589  014C4C  0EF2               	movlw	-14
 19590  014C4E  1EE3               	comf	plusw1,f,c
 19591  014C50  0EF3               	movlw	-13
 19592  014C52  1EE3               	comf	plusw1,f,c
 19593  014C54  0EF4               	movlw	-12
 19594  014C56  1EE3               	comf	plusw1,f,c
 19595  014C58  0EF5               	movlw	-11
 19596  014C5A  1EE3               	comf	plusw1,f,c
 19597  014C5C  0EF6               	movlw	-10
 19598  014C5E  1EE3               	comf	plusw1,f,c
 19599  014C60  0EF7               	movlw	-9
 19600  014C62  1EE3               	comf	plusw1,f,c
 19601  014C64  E314               	bnc	u10150
 19602  014C66  0EF1               	movlw	-15
 19603  014C68  2AE3               	incf	plusw1,f,c
 19604  014C6A  E311               	bnc	u10150
 19605  014C6C  0EF2               	movlw	-14
 19606  014C6E  2AE3               	incf	plusw1,f,c
 19607  014C70  E30E               	bnc	u10150
 19608  014C72  0EF3               	movlw	-13
 19609  014C74  2AE3               	incf	plusw1,f,c
 19610  014C76  E30B               	bnc	u10150
 19611  014C78  0EF4               	movlw	-12
 19612  014C7A  2AE3               	incf	plusw1,f,c
 19613  014C7C  E308               	bnc	u10150
 19614  014C7E  0EF5               	movlw	-11
 19615  014C80  2AE3               	incf	plusw1,f,c
 19616  014C82  E305               	bnc	u10150
 19617  014C84  0EF6               	movlw	-10
 19618  014C86  2AE3               	incf	plusw1,f,c
 19619  014C88  E302               	bnc	u10150
 19620  014C8A  0EF7               	movlw	-9
 19621  014C8C  2AE3               	incf	plusw1,f,c
 19622  014C8E                     u10150:
 19623                           
 19624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19625  014C8E  AE24               	btfss	(_prec+1)^0,7,c
 19626                           
 19627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19628  014C90  9225               	bcf	_flags^0,1,c
 19629                           
 19630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19631  014C92  BE24               	btfsc	(_prec+1)^0,7,c
 19632  014C94  D005               	goto	u10170
 19633  014C96  5024               	movf	(_prec+1)^0,w,c
 19634  014C98  E110               	bnz	l10990
 19635  014C9A  0423               	decf	_prec^0,w,c
 19636  014C9C  B0D8               	btfsc	status,0,c
 19637  014C9E  D00D               	goto	l10990
 19638  014CA0                     u10170:
 19639  014CA0  0E01               	movlw	1
 19640  014CA2  6E0B               	movwf	(btemp+10)^0,c
 19641  014CA4  0E00               	movlw	0
 19642  014CA6  6E0C               	movwf	(btemp+11)^0,c
 19643                           
 19644                           ;stkvar	_p @ sp[(-18)+16]
 19645  014CA8  0EFE               	movlw	-2
 19646  014CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19647  014CB0  0EFF               	movlw	-1
 19648  014CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 19649  014CB8  D008               	goto	l2054
 19650  014CBA                     l10990:
 19651                           
 19652                           ;stkvar	_p @ sp[(-18)+16]
 19653  014CBA  0EFE               	movlw	-2
 19654  014CBC  0060  F08F  FFE3   	movff	_prec,plusw1
 19655  014CC2  0EFF               	movlw	-1
 19656  014CC4  0060  F093  FFE3   	movff	_prec+1,plusw1
 19657  014CCA                     l2054:
 19658                           
 19659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19660                           ;stkvar	_w @ sp[(-18)+14]
 19661  014CCA  0EFC               	movlw	-4
 19662  014CCC  0060  F087  FFE3   	movff	_width,plusw1
 19663  014CD2  0EFD               	movlw	-3
 19664  014CD4  0060  F08B  FFE3   	movff	_width+1,plusw1
 19665                           
 19666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19667                           ;stkvar	_s @ sp[(-18)+12]
 19668  014CDA  0EFA               	movlw	-6
 19669  014CDC  006F FF8C  F001    	movff	plusw1,btemp
 19670  014CE2  0EFB               	movlw	-5
 19671  014CE4  50E3               	movf	plusw1,w,c
 19672  014CE6  1001               	iorwf	btemp^0,w,c
 19673  014CE8  A4D8               	btfss	status,2,c
 19674  014CEA  D002               	goto	u10190
 19675  014CEC  A425               	btfss	_flags^0,2,c
 19676  014CEE  D00A               	goto	l10998
 19677  014CF0                     u10190:
 19678                           
 19679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19680                           ;stkvar	_w @ sp[(-18)+14]
 19681  014CF0  50E1               	movf	fsr1l,w,c
 19682  014CF2  0FFC               	addlw	-4
 19683  014CF4  6ED9               	movwf	fsr2l,c
 19684  014CF6  50E2               	movf	fsr1h,w,c
 19685  014CF8  6EDA               	movwf	fsr2h,c
 19686  014CFA  0EFF               	movlw	255
 19687  014CFC  22DA               	addwfc	fsr2h,f,c
 19688  014CFE  06DE               	decf	postinc2,f,c
 19689  014D00  0E00               	movlw	0
 19690  014D02  5ADD               	subwfb	postdec2,f,c
 19691  014D04                     l10998:
 19692                           
 19693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19694  014D04  0E4F               	movlw	79
 19695  014D06  6E0B               	movwf	(btemp+10)^0,c
 19696  014D08  0E00               	movlw	0
 19697  014D0A  6E0C               	movwf	(btemp+11)^0,c
 19698                           
 19699                           ;stkvar	_i @ sp[(-18)+10]
 19700  014D0C  0EF8               	movlw	-8
 19701  014D0E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19702  014D14  0EF9               	movlw	-7
 19703  014D16  0060  F033  FFE3   	movff	btemp+11,plusw1
 19704                           
 19705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19706  014D1C  0103               	movlb	3	; () banked
 19707  014D1E  6BE3               	clrf	(_dbuf+79)& (0+255),b
 19708                           
 19709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19710  014D20  D109               	goto	l11012
 19711  014D22                     l11002:
 19712                           
 19713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19714                           ;stkvar	_i @ sp[(-18)+10]
 19715  014D22  50E1               	movf	fsr1l,w,c
 19716  014D24  0FF8               	addlw	-8
 19717  014D26  6ED9               	movwf	fsr2l,c
 19718  014D28  50E2               	movf	fsr1h,w,c
 19719  014D2A  6EDA               	movwf	fsr2h,c
 19720  014D2C  0EFF               	movlw	255
 19721  014D2E  22DA               	addwfc	fsr2h,f,c
 19722  014D30  06DE               	decf	postinc2,f,c
 19723  014D32  0E00               	movlw	0
 19724  014D34  5ADD               	subwfb	postdec2,f,c
 19725                           
 19726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19727  014D36  0E0A               	movlw	10
 19728  014D38  6EE6               	movwf	postinc1,c
 19729  014D3A  0E00               	movlw	0
 19730  014D3C  6EE6               	movwf	postinc1,c
 19731  014D3E  0E00               	movlw	0
 19732  014D40  6EE6               	movwf	postinc1,c
 19733  014D42  0E00               	movlw	0
 19734  014D44  6EE6               	movwf	postinc1,c
 19735  014D46  0E00               	movlw	0
 19736  014D48  6EE6               	movwf	postinc1,c
 19737  014D4A  0E00               	movlw	0
 19738  014D4C  6EE6               	movwf	postinc1,c
 19739  014D4E  0E00               	movlw	0
 19740  014D50  6EE6               	movwf	postinc1,c
 19741  014D52  0E00               	movlw	0
 19742  014D54  6EE6               	movwf	postinc1,c
 19743                           
 19744                           ;stkvar	_n @ sp[(-26)+2]
 19745  014D56  50E1               	movf	fsr1l,w,c
 19746  014D58  0FE8               	addlw	-24
 19747  014D5A  6ED9               	movwf	fsr2l,c
 19748  014D5C  50E2               	movf	fsr1h,w,c
 19749  014D5E  6EDA               	movwf	fsr2h,c
 19750  014D60  0EFF               	movlw	255
 19751  014D62  22DA               	addwfc	fsr2h,f,c
 19752  014D64  006F FF7B FFE6     	movff	postinc2,postinc1
 19753  014D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 19754  014D70  006F FF7B FFE6     	movff	postinc2,postinc1
 19755  014D76  006F FF7B FFE6     	movff	postinc2,postinc1
 19756  014D7C  006F FF7B FFE6     	movff	postinc2,postinc1
 19757  014D82  006F FF7B FFE6     	movff	postinc2,postinc1
 19758  014D88  006F FF7B FFE6     	movff	postinc2,postinc1
 19759  014D8E  006F FF7B FFE6     	movff	postinc2,postinc1
 19760  014D94  EC89  F0B4         	call	___aomod	;wreg free
 19761  014D98  52E5               	movf	postdec1,f,c
 19762  014D9A  006F FF9C  F018    	movff	indf1,btemp+23
 19763  014DA0  52E5               	movf	postdec1,f,c
 19764  014DA2  006F FF9C  F017    	movff	indf1,btemp+22
 19765  014DA8  52E5               	movf	postdec1,f,c
 19766  014DAA  006F FF9C  F016    	movff	indf1,btemp+21
 19767  014DB0  52E5               	movf	postdec1,f,c
 19768  014DB2  006F FF9C  F015    	movff	indf1,btemp+20
 19769  014DB8  52E5               	movf	postdec1,f,c
 19770  014DBA  006F FF9C  F014    	movff	indf1,btemp+19
 19771  014DC0  52E5               	movf	postdec1,f,c
 19772  014DC2  006F FF9C  F013    	movff	indf1,btemp+18
 19773  014DC8  52E5               	movf	postdec1,f,c
 19774  014DCA  006F FF9C  F012    	movff	indf1,btemp+17
 19775  014DD0  52E5               	movf	postdec1,f,c
 19776  014DD2  006F FF9C  F011    	movff	indf1,btemp+16
 19777  014DD8  0EF8               	movlw	248
 19778  014DDA  26E1               	addwf	fsr1l,f,c
 19779  014DDC  0EFF               	movlw	255
 19780  014DDE  22E2               	addwfc	fsr1h,f,c
 19781  014DE0  0060  F044  F00B   	movff	btemp+16,btemp+10
 19782  014DE6  0060  F048  F00C   	movff	btemp+17,btemp+11
 19783  014DEC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19784  014DF2  0060  F033  FFE6   	movff	btemp+11,postinc1
 19785  014DF8  EC84  F0CE         	call	_abs	;wreg free
 19786  014DFC  0E30               	movlw	48
 19787  014DFE  2601               	addwf	btemp^0,f,c
 19788                           
 19789                           ;stkvar	_i @ sp[(-18)+10]
 19790  014E00  0EF8               	movlw	-8
 19791  014E02  006F FF8C  F00B    	movff	plusw1,btemp+10
 19792  014E08  0EF9               	movlw	-7
 19793  014E0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19794  014E10  0E94               	movlw	low _dbuf
 19795  014E12  240B               	addwf	(btemp+10)^0,w,c
 19796  014E14  6ED9               	movwf	fsr2l,c
 19797  014E16  0E03               	movlw	high _dbuf
 19798  014E18  200C               	addwfc	(btemp+11)^0,w,c
 19799  014E1A  6EDA               	movwf	fsr2h,c
 19800  014E1C  0060  F007  FFDF   	movff	btemp,indf2
 19801                           
 19802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19803                           ;stkvar	_p @ sp[(-18)+16]
 19804  014E22  50E1               	movf	fsr1l,w,c
 19805  014E24  0FFE               	addlw	-2
 19806  014E26  6ED9               	movwf	fsr2l,c
 19807  014E28  50E2               	movf	fsr1h,w,c
 19808  014E2A  6EDA               	movwf	fsr2h,c
 19809  014E2C  0EFF               	movlw	255
 19810  014E2E  22DA               	addwfc	fsr2h,f,c
 19811  014E30  06DE               	decf	postinc2,f,c
 19812  014E32  0E00               	movlw	0
 19813  014E34  5ADD               	subwfb	postdec2,f,c
 19814                           
 19815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19816                           ;stkvar	_w @ sp[(-18)+14]
 19817  014E36  50E1               	movf	fsr1l,w,c
 19818  014E38  0FFC               	addlw	-4
 19819  014E3A  6ED9               	movwf	fsr2l,c
 19820  014E3C  50E2               	movf	fsr1h,w,c
 19821  014E3E  6EDA               	movwf	fsr2h,c
 19822  014E40  0EFF               	movlw	255
 19823  014E42  22DA               	addwfc	fsr2h,f,c
 19824  014E44  06DE               	decf	postinc2,f,c
 19825  014E46  0E00               	movlw	0
 19826  014E48  5ADD               	subwfb	postdec2,f,c
 19827                           
 19828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19829  014E4A  0E0A               	movlw	10
 19830  014E4C  6EE6               	movwf	postinc1,c
 19831  014E4E  0E00               	movlw	0
 19832  014E50  6EE6               	movwf	postinc1,c
 19833  014E52  0E00               	movlw	0
 19834  014E54  6EE6               	movwf	postinc1,c
 19835  014E56  0E00               	movlw	0
 19836  014E58  6EE6               	movwf	postinc1,c
 19837  014E5A  0E00               	movlw	0
 19838  014E5C  6EE6               	movwf	postinc1,c
 19839  014E5E  0E00               	movlw	0
 19840  014E60  6EE6               	movwf	postinc1,c
 19841  014E62  0E00               	movlw	0
 19842  014E64  6EE6               	movwf	postinc1,c
 19843  014E66  0E00               	movlw	0
 19844  014E68  6EE6               	movwf	postinc1,c
 19845                           
 19846                           ;stkvar	_n @ sp[(-26)+2]
 19847  014E6A  50E1               	movf	fsr1l,w,c
 19848  014E6C  0FE8               	addlw	-24
 19849  014E6E  6ED9               	movwf	fsr2l,c
 19850  014E70  50E2               	movf	fsr1h,w,c
 19851  014E72  6EDA               	movwf	fsr2h,c
 19852  014E74  0EFF               	movlw	255
 19853  014E76  22DA               	addwfc	fsr2h,f,c
 19854  014E78  006F FF7B FFE6     	movff	postinc2,postinc1
 19855  014E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 19856  014E84  006F FF7B FFE6     	movff	postinc2,postinc1
 19857  014E8A  006F FF7B FFE6     	movff	postinc2,postinc1
 19858  014E90  006F FF7B FFE6     	movff	postinc2,postinc1
 19859  014E96  006F FF7B FFE6     	movff	postinc2,postinc1
 19860  014E9C  006F FF7B FFE6     	movff	postinc2,postinc1
 19861  014EA2  006F FF7B FFE6     	movff	postinc2,postinc1
 19862  014EA8  EC0F  F0B2         	call	___aodiv	;wreg free
 19863  014EAC  52E5               	movf	postdec1,f,c
 19864  014EAE  006F FF9C  F018    	movff	indf1,btemp+23
 19865  014EB4  52E5               	movf	postdec1,f,c
 19866  014EB6  006F FF9C  F017    	movff	indf1,btemp+22
 19867  014EBC  52E5               	movf	postdec1,f,c
 19868  014EBE  006F FF9C  F016    	movff	indf1,btemp+21
 19869  014EC4  52E5               	movf	postdec1,f,c
 19870  014EC6  006F FF9C  F015    	movff	indf1,btemp+20
 19871  014ECC  52E5               	movf	postdec1,f,c
 19872  014ECE  006F FF9C  F014    	movff	indf1,btemp+19
 19873  014ED4  52E5               	movf	postdec1,f,c
 19874  014ED6  006F FF9C  F013    	movff	indf1,btemp+18
 19875  014EDC  52E5               	movf	postdec1,f,c
 19876  014EDE  006F FF9C  F012    	movff	indf1,btemp+17
 19877  014EE4  52E5               	movf	postdec1,f,c
 19878  014EE6  006F FF9C  F011    	movff	indf1,btemp+16
 19879  014EEC  0EF8               	movlw	248
 19880  014EEE  26E1               	addwf	fsr1l,f,c
 19881  014EF0  0EFF               	movlw	255
 19882  014EF2  22E2               	addwfc	fsr1h,f,c
 19883                           
 19884                           ;stkvar	_n @ sp[(-18)+2]
 19885  014EF4  0EF0               	movlw	-16
 19886  014EF6  0060  F047  FFE3   	movff	btemp+16,plusw1
 19887  014EFC  0EF1               	movlw	-15
 19888  014EFE  0060  F04B  FFE3   	movff	btemp+17,plusw1
 19889  014F04  0EF2               	movlw	-14
 19890  014F06  0060  F04F  FFE3   	movff	btemp+18,plusw1
 19891  014F0C  0EF3               	movlw	-13
 19892  014F0E  0060  F053  FFE3   	movff	btemp+19,plusw1
 19893  014F14  0EF4               	movlw	-12
 19894  014F16  0060  F057  FFE3   	movff	btemp+20,plusw1
 19895  014F1C  0EF5               	movlw	-11
 19896  014F1E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 19897  014F24  0EF6               	movlw	-10
 19898  014F26  0060  F05F  FFE3   	movff	btemp+22,plusw1
 19899  014F2C  0EF7               	movlw	-9
 19900  014F2E  0060  F063  FFE3   	movff	btemp+23,plusw1
 19901  014F34                     l11012:
 19902                           
 19903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19904                           ;stkvar	_i @ sp[(-18)+10]
 19905  014F34  0EF9               	movlw	-7
 19906  014F36  BEE3               	btfsc	plusw1,7,c
 19907  014F38  D036               	goto	u10240
 19908  014F3A  0EF9               	movlw	-7
 19909  014F3C  50E3               	movf	plusw1,w,c
 19910  014F3E  E104               	bnz	u10200
 19911  014F40  0EF8               	movlw	-8
 19912  014F42  04E3               	decf	plusw1,w,c
 19913  014F44  A0D8               	btfss	status,0,c
 19914  014F46  D02F               	goto	u10240
 19915  014F48                     u10200:
 19916                           
 19917                           ;stkvar	_n @ sp[(-18)+2]
 19918  014F48  0EF0               	movlw	-16
 19919  014F4A  50E3               	movf	plusw1,w,c
 19920  014F4C  E115               	bnz	u10211
 19921  014F4E  0EF1               	movlw	-15
 19922  014F50  50E3               	movf	plusw1,w,c
 19923  014F52  E112               	bnz	u10211
 19924  014F54  0EF2               	movlw	-14
 19925  014F56  50E3               	movf	plusw1,w,c
 19926  014F58  E10F               	bnz	u10211
 19927  014F5A  0EF3               	movlw	-13
 19928  014F5C  50E3               	movf	plusw1,w,c
 19929  014F5E  E10C               	bnz	u10211
 19930  014F60  0EF4               	movlw	-12
 19931  014F62  50E3               	movf	plusw1,w,c
 19932  014F64  E109               	bnz	u10211
 19933  014F66  0EF5               	movlw	-11
 19934  014F68  50E3               	movf	plusw1,w,c
 19935  014F6A  E106               	bnz	u10211
 19936  014F6C  0EF6               	movlw	-10
 19937  014F6E  50E3               	movf	plusw1,w,c
 19938  014F70  E103               	bnz	u10211
 19939  014F72  0EF7               	movlw	-9
 19940  014F74  50E3               	movf	plusw1,w,c
 19941  014F76  A4D8               	btfss	status,2,c
 19942  014F78                     u10211:
 19943  014F78  D6D4               	goto	l11002
 19944                           
 19945                           ;stkvar	_p @ sp[(-18)+16]
 19946  014F7A  0EFF               	movlw	-1
 19947  014F7C  BEE3               	btfsc	plusw1,7,c
 19948  014F7E  D007               	goto	u10220
 19949  014F80  0EFF               	movlw	-1
 19950  014F82  50E3               	movf	plusw1,w,c
 19951  014F84  E103               	bnz	u10221
 19952  014F86  0EFE               	movlw	-2
 19953  014F88  04E3               	decf	plusw1,w,c
 19954  014F8A  B0D8               	btfsc	status,0,c
 19955  014F8C                     u10221:
 19956  014F8C  D6CA               	goto	l11002
 19957  014F8E                     u10220:
 19958                           
 19959                           ;stkvar	_w @ sp[(-18)+14]
 19960  014F8E  0EFD               	movlw	-3
 19961  014F90  BEE3               	btfsc	plusw1,7,c
 19962  014F92  D009               	goto	u10240
 19963  014F94  0EFD               	movlw	-3
 19964  014F96  50E3               	movf	plusw1,w,c
 19965  014F98  E104               	bnz	u10230
 19966  014F9A  0EFC               	movlw	-4
 19967  014F9C  04E3               	decf	plusw1,w,c
 19968  014F9E  A0D8               	btfss	status,0,c
 19969  014FA0  D002               	goto	u10240
 19970  014FA2                     u10230:
 19971  014FA2  B225               	btfsc	_flags^0,1,c
 19972  014FA4  D6BE               	goto	l11002
 19973  014FA6                     u10240:
 19974                           
 19975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19976                           ;stkvar	_s @ sp[(-18)+12]
 19977  014FA6  0EFA               	movlw	-6
 19978  014FA8  006F FF8C  F001    	movff	plusw1,btemp
 19979  014FAE  0EFB               	movlw	-5
 19980  014FB0  50E3               	movf	plusw1,w,c
 19981  014FB2  1001               	iorwf	btemp^0,w,c
 19982  014FB4  A4D8               	btfss	status,2,c
 19983  014FB6  D002               	goto	u10260
 19984  014FB8  A425               	btfss	_flags^0,2,c
 19985  014FBA  D033               	goto	l11036
 19986  014FBC                     u10260:
 19987                           
 19988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19989                           ;stkvar	_i @ sp[(-18)+10]
 19990  014FBC  50E1               	movf	fsr1l,w,c
 19991  014FBE  0FF8               	addlw	-8
 19992  014FC0  6ED9               	movwf	fsr2l,c
 19993  014FC2  50E2               	movf	fsr1h,w,c
 19994  014FC4  6EDA               	movwf	fsr2h,c
 19995  014FC6  0EFF               	movlw	255
 19996  014FC8  22DA               	addwfc	fsr2h,f,c
 19997  014FCA  06DE               	decf	postinc2,f,c
 19998  014FCC  0E00               	movlw	0
 19999  014FCE  5ADD               	subwfb	postdec2,f,c
 20000                           
 20001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 20002                           ;stkvar	_s @ sp[(-18)+12]
 20003  014FD0  0EFA               	movlw	-6
 20004  014FD2  006F FF8C  F001    	movff	plusw1,btemp
 20005  014FD8  0EFB               	movlw	-5
 20006  014FDA  50E3               	movf	plusw1,w,c
 20007  014FDC  1001               	iorwf	btemp^0,w,c
 20008  014FDE  A4D8               	btfss	status,2,c
 20009  014FE0  D002               	goto	l11032
 20010  014FE2  0E2B               	movlw	43
 20011  014FE4  D001               	goto	L21
 20012  014FE6                     l11032:
 20013  014FE6  0E2D               	movlw	45
 20014  014FE8                     L21:
 20015  014FE8  6E0B               	movwf	(btemp+10)^0,c
 20016  014FEA  0E00               	movlw	0
 20017  014FEC  6E0C               	movwf	(btemp+11)^0,c
 20018                           
 20019                           ;stkvar	_dtoa$5193 @ sp[(-18)+0]
 20020  014FEE  0EEE               	movlw	-18
 20021  014FF0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20022  014FF6  0EEF               	movlw	-17
 20023  014FF8  0060  F033  FFE3   	movff	btemp+11,plusw1
 20024                           
 20025                           ;stkvar	_dtoa$5193 @ sp[(-18)+0]
 20026                           ;stkvar	_i @ sp[(-18)+10]
 20027  014FFE  0EF8               	movlw	-8
 20028  015000  006F FF8C  F00B    	movff	plusw1,btemp+10
 20029  015006  0EF9               	movlw	-7
 20030  015008  006F FF8C  F00C    	movff	plusw1,btemp+11
 20031  01500E  0E94               	movlw	low _dbuf
 20032  015010  240B               	addwf	(btemp+10)^0,w,c
 20033  015012  6ED9               	movwf	fsr2l,c
 20034  015014  0E03               	movlw	high _dbuf
 20035  015016  200C               	addwfc	(btemp+11)^0,w,c
 20036  015018  6EDA               	movwf	fsr2h,c
 20037  01501A  0EEE               	movlw	-18
 20038  01501C  006F FF8F FFDF     	movff	plusw1,indf2
 20039  015022                     l11036:
 20040                           
 20041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 20042                           ;stkvar	_w @ sp[(-18)+14]
 20043  015022  0EFC               	movlw	-4
 20044  015024  006F FF8F FFE6     	movff	plusw1,postinc1
 20045  01502A  006F FF8F FFE6     	movff	plusw1,postinc1
 20046                           
 20047                           ;stkvar	_i @ sp[(-20)+10]
 20048  015030  0E94               	movlw	low _dbuf
 20049  015032  6E0B               	movwf	(btemp+10)^0,c
 20050  015034  0E03               	movlw	high _dbuf
 20051  015036  6E0C               	movwf	(btemp+11)^0,c
 20052  015038  0EF6               	movlw	-10
 20053  01503A  50E3               	movf	plusw1,w,c
 20054  01503C  260B               	addwf	(btemp+10)^0,f,c
 20055  01503E  0EF7               	movlw	-9
 20056  015040  50E3               	movf	plusw1,w,c
 20057  015042  220C               	addwfc	(btemp+11)^0,f,c
 20058  015044  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20059  01504A  0060  F033  FFE6   	movff	btemp+11,postinc1
 20060                           
 20061                           ;stkvar	_fp @ sp[(-22)+-2]
 20062  015050  0EE8               	movlw	-24
 20063  015052  006F FF8F FFE6     	movff	plusw1,postinc1
 20064  015058  006F FF8F FFE6     	movff	plusw1,postinc1
 20065  01505E  EC33  F0C3         	call	_pad	;wreg free
 20066                           
 20067                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 20068  015062  0EE4               	movlw	228
 20069  015064  26E1               	addwf	fsr1l,f,c
 20070  015066  0EFF               	movlw	255
 20071  015068  22E2               	addwfc	fsr1h,f,c
 20072  01506A  0012               	return		;funcret
 20073  01506C                     __end_of_dtoa:
 20074                           	opt callstack 0
 20075                           
 20076 ;; *************** function _abs *****************
 20077 ;; Defined at:
 20078 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 20079 ;; Parameters:    Size  Location     Type
 20080 ;;  a               2  [STACK] int 
 20081 ;; Auto vars:     Size  Location     Type
 20082 ;;		None
 20083 ;; Return value:  Size  Location     Type
 20084 ;;                  2  [STACK] int 
 20085 ;; Registers used:
 20086 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 20087 ;; Tracked objects:
 20088 ;;		On entry : 0/3
 20089 ;;		On exit  : 0/0
 20090 ;;		Unchanged: 0/0
 20091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20096 ;;Total ram usage:        0 bytes
 20097 ;; Hardware stack levels used:    1
 20098 ;; Hardware stack levels required when called:   15
 20099 ;; This function calls:
 20100 ;;		Nothing
 20101 ;; This function is called by:
 20102 ;;		_dtoa
 20103 ;; This function uses a reentrant model
 20104 ;;
 20105                           
 20106                           	psect	text69
 20107  019D08                     __ptext69:
 20108                           	opt callstack 0
 20109  019D08                     _abs:
 20110                           	opt callstack 0
 20111                           
 20112                           ;stkvar	_a @ sp[(0)+-2]
 20113                           
 20114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20115                           ;incstack = 0
 20116 ;; hardware stack exceeded
 20117  019D08  0EFF               	movlw	-1
 20118  019D0A  BEE3               	btfsc	plusw1,7,c
 20119  019D0C  D007               	goto	u5540
 20120  019D0E  0EFF               	movlw	-1
 20121  019D10  50E3               	movf	plusw1,w,c
 20122  019D12  E112               	bnz	l7422
 20123  019D14  0EFE               	movlw	-2
 20124  019D16  04E3               	decf	plusw1,w,c
 20125  019D18  B0D8               	btfsc	status,0,c
 20126  019D1A  D00E               	goto	l7422
 20127  019D1C                     u5540:
 20128                           
 20129                           ;stkvar	_a @ sp[(0)+-2]
 20130  019D1C  0EFE               	movlw	-2
 20131  019D1E  006F FF8C  F001    	movff	plusw1,btemp
 20132  019D24  1E01               	comf	btemp^0,f,c
 20133  019D26  0EFF               	movlw	-1
 20134  019D28  006F FF8C  F002    	movff	plusw1,btemp+1
 20135  019D2E  1E02               	comf	(btemp+1)^0,f,c
 20136  019D30  2A01               	incf	btemp^0,f,c
 20137  019D32  B4D8               	btfsc	status,2,c
 20138  019D34  2A02               	incf	(btemp+1)^0,f,c
 20139  019D36  D008               	goto	l2980
 20140  019D38                     l7422:
 20141                           
 20142                           ;stkvar	_a @ sp[(0)+-2]
 20143  019D38  0EFE               	movlw	-2
 20144  019D3A  006F FF8C  F001    	movff	plusw1,btemp
 20145  019D40  0EFF               	movlw	-1
 20146  019D42  006F FF8C  F002    	movff	plusw1,btemp+1
 20147  019D48                     l2980:
 20148                           
 20149                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 20150  019D48  52E5               	movf	postdec1,f,c
 20151  019D4A  52E5               	movf	postdec1,f,c
 20152  019D4C  0012               	return		;funcret
 20153  019D4E                     __end_of_abs:
 20154                           	opt callstack 0
 20155                           
 20156 ;; *************** function ___aomod *****************
 20157 ;; Defined at:
 20158 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 20159 ;; Parameters:    Size  Location     Type
 20160 ;;  dividend        8  [STACK] long long 
 20161 ;;  divisor         8  [STACK] long long 
 20162 ;; Auto vars:     Size  Location     Type
 20163 ;;  sign            1  [STACK] unsigned char 
 20164 ;;  counter         1  [STACK] unsigned char 
 20165 ;; Return value:  Size  Location     Type
 20166 ;;                  8  [STACK] long long 
 20167 ;; Registers used:
 20168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20169 ;; Tracked objects:
 20170 ;;		On entry : 0/3
 20171 ;;		On exit  : 0/0
 20172 ;;		Unchanged: 0/0
 20173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20178 ;;Total ram usage:        0 bytes
 20179 ;; Hardware stack levels used:    1
 20180 ;; Hardware stack levels required when called:   15
 20181 ;; This function calls:
 20182 ;;		Nothing
 20183 ;; This function is called by:
 20184 ;;		_dtoa
 20185 ;; This function uses a reentrant model
 20186 ;;
 20187                           
 20188                           	psect	text70
 20189  016912                     __ptext70:
 20190                           	opt callstack 0
 20191  016912                     ___aomod:
 20192                           	opt callstack 0
 20193                           
 20194                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20195  016912  52E6               	movf	postinc1,f,c
 20196  016914  52E6               	movf	postinc1,f,c
 20197                           
 20198                           ;stkvar	_sign @ sp[(-2)+0]
 20199                           
 20200                           ;incstack = 0
 20201 ;; hardware stack exceeded
 20202  016916  0EFE               	movlw	-2
 20203  016918  6AE3               	clrf	plusw1,c
 20204                           
 20205                           ;stkvar	_dividend @ sp[(-2)+-8]
 20206  01691A  0EFD               	movlw	-3
 20207  01691C  AEE3               	btfss	plusw1,7,c
 20208  01691E  D028               	goto	l7580
 20209                           
 20210                           ;stkvar	_dividend @ sp[(-2)+-8]
 20211                           ;stkvar	_dividend @ sp[(-2)+-8]
 20212  016920  0EF6               	movlw	-10
 20213  016922  6CE3               	negf	plusw1,c
 20214  016924  0EF7               	movlw	-9
 20215  016926  1EE3               	comf	plusw1,f,c
 20216  016928  0EF8               	movlw	-8
 20217  01692A  1EE3               	comf	plusw1,f,c
 20218  01692C  0EF9               	movlw	-7
 20219  01692E  1EE3               	comf	plusw1,f,c
 20220  016930  0EFA               	movlw	-6
 20221  016932  1EE3               	comf	plusw1,f,c
 20222  016934  0EFB               	movlw	-5
 20223  016936  1EE3               	comf	plusw1,f,c
 20224  016938  0EFC               	movlw	-4
 20225  01693A  1EE3               	comf	plusw1,f,c
 20226  01693C  0EFD               	movlw	-3
 20227  01693E  1EE3               	comf	plusw1,f,c
 20228  016940  E314               	bnc	u5970
 20229  016942  0EF7               	movlw	-9
 20230  016944  2AE3               	incf	plusw1,f,c
 20231  016946  E311               	bnc	u5970
 20232  016948  0EF8               	movlw	-8
 20233  01694A  2AE3               	incf	plusw1,f,c
 20234  01694C  E30E               	bnc	u5970
 20235  01694E  0EF9               	movlw	-7
 20236  016950  2AE3               	incf	plusw1,f,c
 20237  016952  E30B               	bnc	u5970
 20238  016954  0EFA               	movlw	-6
 20239  016956  2AE3               	incf	plusw1,f,c
 20240  016958  E308               	bnc	u5970
 20241  01695A  0EFB               	movlw	-5
 20242  01695C  2AE3               	incf	plusw1,f,c
 20243  01695E  E305               	bnc	u5970
 20244  016960  0EFC               	movlw	-4
 20245  016962  2AE3               	incf	plusw1,f,c
 20246  016964  E302               	bnc	u5970
 20247  016966  0EFD               	movlw	-3
 20248  016968  2AE3               	incf	plusw1,f,c
 20249  01696A                     u5970:
 20250                           
 20251                           ;stkvar	_sign @ sp[(-2)+0]
 20252  01696A  0EFE               	movlw	-2
 20253  01696C  6AE3               	clrf	plusw1,c
 20254  01696E  2AE3               	incf	plusw1,f,c
 20255  016970                     l7580:
 20256                           
 20257                           ;stkvar	_divisor @ sp[(-2)+-16]
 20258  016970  0EF5               	movlw	-11
 20259  016972  AEE3               	btfss	plusw1,7,c
 20260  016974  D025               	goto	u5990
 20261                           
 20262                           ;stkvar	_divisor @ sp[(-2)+-16]
 20263                           ;stkvar	_divisor @ sp[(-2)+-16]
 20264  016976  0EEE               	movlw	-18
 20265  016978  6CE3               	negf	plusw1,c
 20266  01697A  0EEF               	movlw	-17
 20267  01697C  1EE3               	comf	plusw1,f,c
 20268  01697E  0EF0               	movlw	-16
 20269  016980  1EE3               	comf	plusw1,f,c
 20270  016982  0EF1               	movlw	-15
 20271  016984  1EE3               	comf	plusw1,f,c
 20272  016986  0EF2               	movlw	-14
 20273  016988  1EE3               	comf	plusw1,f,c
 20274  01698A  0EF3               	movlw	-13
 20275  01698C  1EE3               	comf	plusw1,f,c
 20276  01698E  0EF4               	movlw	-12
 20277  016990  1EE3               	comf	plusw1,f,c
 20278  016992  0EF5               	movlw	-11
 20279  016994  1EE3               	comf	plusw1,f,c
 20280  016996  E314               	bnc	u5990
 20281  016998  0EEF               	movlw	-17
 20282  01699A  2AE3               	incf	plusw1,f,c
 20283  01699C  E311               	bnc	u5990
 20284  01699E  0EF0               	movlw	-16
 20285  0169A0  2AE3               	incf	plusw1,f,c
 20286  0169A2  E30E               	bnc	u5990
 20287  0169A4  0EF1               	movlw	-15
 20288  0169A6  2AE3               	incf	plusw1,f,c
 20289  0169A8  E30B               	bnc	u5990
 20290  0169AA  0EF2               	movlw	-14
 20291  0169AC  2AE3               	incf	plusw1,f,c
 20292  0169AE  E308               	bnc	u5990
 20293  0169B0  0EF3               	movlw	-13
 20294  0169B2  2AE3               	incf	plusw1,f,c
 20295  0169B4  E305               	bnc	u5990
 20296  0169B6  0EF4               	movlw	-12
 20297  0169B8  2AE3               	incf	plusw1,f,c
 20298  0169BA  E302               	bnc	u5990
 20299  0169BC  0EF5               	movlw	-11
 20300  0169BE  2AE3               	incf	plusw1,f,c
 20301  0169C0                     u5990:
 20302                           
 20303                           ;stkvar	_divisor @ sp[(-2)+-16]
 20304  0169C0  0EEE               	movlw	-18
 20305  0169C2  50E3               	movf	plusw1,w,c
 20306  0169C4  E116               	bnz	u6000
 20307  0169C6  0EEF               	movlw	-17
 20308  0169C8  50E3               	movf	plusw1,w,c
 20309  0169CA  E113               	bnz	u6000
 20310  0169CC  0EF0               	movlw	-16
 20311  0169CE  50E3               	movf	plusw1,w,c
 20312  0169D0  E110               	bnz	u6000
 20313  0169D2  0EF1               	movlw	-15
 20314  0169D4  50E3               	movf	plusw1,w,c
 20315  0169D6  E10D               	bnz	u6000
 20316  0169D8  0EF2               	movlw	-14
 20317  0169DA  50E3               	movf	plusw1,w,c
 20318  0169DC  E10A               	bnz	u6000
 20319  0169DE  0EF3               	movlw	-13
 20320  0169E0  50E3               	movf	plusw1,w,c
 20321  0169E2  E107               	bnz	u6000
 20322  0169E4  0EF4               	movlw	-12
 20323  0169E6  50E3               	movf	plusw1,w,c
 20324  0169E8  E104               	bnz	u6000
 20325  0169EA  0EF5               	movlw	-11
 20326  0169EC  50E3               	movf	plusw1,w,c
 20327  0169EE  B4D8               	btfsc	status,2,c
 20328  0169F0  D075               	goto	u6030
 20329  0169F2                     u6000:
 20330                           
 20331                           ;stkvar	_counter @ sp[(-2)+1]
 20332  0169F2  0EFF               	movlw	-1
 20333  0169F4  6AE3               	clrf	plusw1,c
 20334  0169F6  D012               	goto	L22
 20335  0169F8                     l7588:
 20336                           
 20337                           ;stkvar	_divisor @ sp[(-2)+-16]
 20338  0169F8  90D8               	bcf	status,0,c
 20339  0169FA  0EEE               	movlw	-18
 20340  0169FC  36E3               	rlcf	plusw1,f,c
 20341  0169FE  0EEF               	movlw	-17
 20342  016A00  36E3               	rlcf	plusw1,f,c
 20343  016A02  0EF0               	movlw	-16
 20344  016A04  36E3               	rlcf	plusw1,f,c
 20345  016A06  0EF1               	movlw	-15
 20346  016A08  36E3               	rlcf	plusw1,f,c
 20347  016A0A  0EF2               	movlw	-14
 20348  016A0C  36E3               	rlcf	plusw1,f,c
 20349  016A0E  0EF3               	movlw	-13
 20350  016A10  36E3               	rlcf	plusw1,f,c
 20351  016A12  0EF4               	movlw	-12
 20352  016A14  36E3               	rlcf	plusw1,f,c
 20353  016A16  0EF5               	movlw	-11
 20354  016A18  36E3               	rlcf	plusw1,f,c
 20355                           
 20356                           ;stkvar	_counter @ sp[(-2)+1]
 20357  016A1A  0EFF               	movlw	-1
 20358  016A1C                     L22:
 20359  016A1C  2AE3               	incf	plusw1,f,c
 20360                           
 20361                           ;stkvar	_divisor @ sp[(-2)+-16]
 20362  016A1E  0EF5               	movlw	-11
 20363  016A20  AEE3               	btfss	plusw1,7,c
 20364  016A22  D7EA               	goto	l7588
 20365  016A24                     u6010:
 20366                           
 20367                           ;stkvar	_divisor @ sp[(-2)+-16]
 20368                           ;stkvar	_dividend @ sp[(-2)+-8]
 20369  016A24  50E1               	movf	fsr1l,w,c
 20370  016A26  0FF6               	addlw	-10
 20371  016A28  6ED9               	movwf	fsr2l,c
 20372  016A2A  50E2               	movf	fsr1h,w,c
 20373  016A2C  6EDA               	movwf	fsr2h,c
 20374  016A2E  0EFF               	movlw	255
 20375  016A30  22DA               	addwfc	fsr2h,f,c
 20376  016A32  0EEE               	movlw	-18
 20377  016A34  50E3               	movf	plusw1,w,c
 20378  016A36  5CDE               	subwf	postinc2,w,c
 20379  016A38  0EEF               	movlw	-17
 20380  016A3A  50E3               	movf	plusw1,w,c
 20381  016A3C  58DE               	subwfb	postinc2,w,c
 20382  016A3E  0EF0               	movlw	-16
 20383  016A40  50E3               	movf	plusw1,w,c
 20384  016A42  58DE               	subwfb	postinc2,w,c
 20385  016A44  0EF1               	movlw	-15
 20386  016A46  50E3               	movf	plusw1,w,c
 20387  016A48  58DE               	subwfb	postinc2,w,c
 20388  016A4A  0EF2               	movlw	-14
 20389  016A4C  50E3               	movf	plusw1,w,c
 20390  016A4E  58DE               	subwfb	postinc2,w,c
 20391  016A50  0EF3               	movlw	-13
 20392  016A52  50E3               	movf	plusw1,w,c
 20393  016A54  58DE               	subwfb	postinc2,w,c
 20394  016A56  0EF4               	movlw	-12
 20395  016A58  50E3               	movf	plusw1,w,c
 20396  016A5A  58DE               	subwfb	postinc2,w,c
 20397  016A5C  0EF5               	movlw	-11
 20398  016A5E  50E3               	movf	plusw1,w,c
 20399  016A60  58DE               	subwfb	postinc2,w,c
 20400  016A62  A0D8               	btfss	status,0,c
 20401  016A64  D01F               	goto	l7596
 20402                           
 20403                           ;stkvar	_divisor @ sp[(-2)+-16]
 20404                           ;stkvar	_dividend @ sp[(-2)+-8]
 20405  016A66  50E1               	movf	fsr1l,w,c
 20406  016A68  0FF6               	addlw	-10
 20407  016A6A  6ED9               	movwf	fsr2l,c
 20408  016A6C  50E2               	movf	fsr1h,w,c
 20409  016A6E  6EDA               	movwf	fsr2h,c
 20410  016A70  0EFF               	movlw	255
 20411  016A72  22DA               	addwfc	fsr2h,f,c
 20412  016A74  0EEE               	movlw	-18
 20413  016A76  50E3               	movf	plusw1,w,c
 20414  016A78  5EDE               	subwf	postinc2,f,c
 20415  016A7A  0EEF               	movlw	-17
 20416  016A7C  50E3               	movf	plusw1,w,c
 20417  016A7E  5ADE               	subwfb	postinc2,f,c
 20418  016A80  0EF0               	movlw	-16
 20419  016A82  50E3               	movf	plusw1,w,c
 20420  016A84  5ADE               	subwfb	postinc2,f,c
 20421  016A86  0EF1               	movlw	-15
 20422  016A88  50E3               	movf	plusw1,w,c
 20423  016A8A  5ADE               	subwfb	postinc2,f,c
 20424  016A8C  0EF2               	movlw	-14
 20425  016A8E  50E3               	movf	plusw1,w,c
 20426  016A90  5ADE               	subwfb	postinc2,f,c
 20427  016A92  0EF3               	movlw	-13
 20428  016A94  50E3               	movf	plusw1,w,c
 20429  016A96  5ADE               	subwfb	postinc2,f,c
 20430  016A98  0EF4               	movlw	-12
 20431  016A9A  50E3               	movf	plusw1,w,c
 20432  016A9C  5ADE               	subwfb	postinc2,f,c
 20433  016A9E  0EF5               	movlw	-11
 20434  016AA0  50E3               	movf	plusw1,w,c
 20435  016AA2  5ADE               	subwfb	postinc2,f,c
 20436  016AA4                     l7596:
 20437                           
 20438                           ;stkvar	_divisor @ sp[(-2)+-16]
 20439  016AA4  90D8               	bcf	status,0,c
 20440  016AA6  0EF5               	movlw	-11
 20441  016AA8  32E3               	rrcf	plusw1,f,c
 20442  016AAA  0EF4               	movlw	-12
 20443  016AAC  32E3               	rrcf	plusw1,f,c
 20444  016AAE  0EF3               	movlw	-13
 20445  016AB0  32E3               	rrcf	plusw1,f,c
 20446  016AB2  0EF2               	movlw	-14
 20447  016AB4  32E3               	rrcf	plusw1,f,c
 20448  016AB6  0EF1               	movlw	-15
 20449  016AB8  32E3               	rrcf	plusw1,f,c
 20450  016ABA  0EF0               	movlw	-16
 20451  016ABC  32E3               	rrcf	plusw1,f,c
 20452  016ABE  0EEF               	movlw	-17
 20453  016AC0  32E3               	rrcf	plusw1,f,c
 20454  016AC2  0EEE               	movlw	-18
 20455  016AC4  32E3               	rrcf	plusw1,f,c
 20456                           
 20457                           ;stkvar	_counter @ sp[(-2)+1]
 20458  016AC6  0EFF               	movlw	-1
 20459  016AC8  50E3               	movf	plusw1,w,c
 20460  016ACA  6E01               	movwf	btemp^0,c
 20461  016ACC  0E01               	movlw	1
 20462  016ACE  5E01               	subwf	btemp^0,f,c
 20463  016AD0  0EFF               	movlw	-1
 20464  016AD2  0060  F007  FFE3   	movff	btemp,plusw1
 20465  016AD8  A4D8               	btfss	status,2,c
 20466  016ADA  D7A4               	goto	u6010
 20467  016ADC                     u6030:
 20468                           
 20469                           ;stkvar	_sign @ sp[(-2)+0]
 20470  016ADC  0EFE               	movlw	-2
 20471  016ADE  50E3               	movf	plusw1,w,c
 20472  016AE0  B4D8               	btfsc	status,2,c
 20473  016AE2  D025               	goto	u6050
 20474                           
 20475                           ;stkvar	_dividend @ sp[(-2)+-8]
 20476                           ;stkvar	_dividend @ sp[(-2)+-8]
 20477  016AE4  0EF6               	movlw	-10
 20478  016AE6  6CE3               	negf	plusw1,c
 20479  016AE8  0EF7               	movlw	-9
 20480  016AEA  1EE3               	comf	plusw1,f,c
 20481  016AEC  0EF8               	movlw	-8
 20482  016AEE  1EE3               	comf	plusw1,f,c
 20483  016AF0  0EF9               	movlw	-7
 20484  016AF2  1EE3               	comf	plusw1,f,c
 20485  016AF4  0EFA               	movlw	-6
 20486  016AF6  1EE3               	comf	plusw1,f,c
 20487  016AF8  0EFB               	movlw	-5
 20488  016AFA  1EE3               	comf	plusw1,f,c
 20489  016AFC  0EFC               	movlw	-4
 20490  016AFE  1EE3               	comf	plusw1,f,c
 20491  016B00  0EFD               	movlw	-3
 20492  016B02  1EE3               	comf	plusw1,f,c
 20493  016B04  E314               	bnc	u6050
 20494  016B06  0EF7               	movlw	-9
 20495  016B08  2AE3               	incf	plusw1,f,c
 20496  016B0A  E311               	bnc	u6050
 20497  016B0C  0EF8               	movlw	-8
 20498  016B0E  2AE3               	incf	plusw1,f,c
 20499  016B10  E30E               	bnc	u6050
 20500  016B12  0EF9               	movlw	-7
 20501  016B14  2AE3               	incf	plusw1,f,c
 20502  016B16  E30B               	bnc	u6050
 20503  016B18  0EFA               	movlw	-6
 20504  016B1A  2AE3               	incf	plusw1,f,c
 20505  016B1C  E308               	bnc	u6050
 20506  016B1E  0EFB               	movlw	-5
 20507  016B20  2AE3               	incf	plusw1,f,c
 20508  016B22  E305               	bnc	u6050
 20509  016B24  0EFC               	movlw	-4
 20510  016B26  2AE3               	incf	plusw1,f,c
 20511  016B28  E302               	bnc	u6050
 20512  016B2A  0EFD               	movlw	-3
 20513  016B2C  2AE3               	incf	plusw1,f,c
 20514  016B2E                     u6050:
 20515                           
 20516                           ;stkvar	_dividend @ sp[(-2)+-8]
 20517  016B2E  0EF6               	movlw	246
 20518  016B30  24E1               	addwf	fsr1l,w,c
 20519  016B32  6ED9               	movwf	fsr2l,c
 20520  016B34  0EFF               	movlw	255
 20521  016B36  20E2               	addwfc	fsr1h,w,c
 20522  016B38  6EDA               	movwf	fsr2h,c
 20523                           
 20524                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20525  016B3A  0E08               	movlw	8
 20526  016B3C  6E01               	movwf	btemp^0,c
 20527  016B3E  0EF6               	movlw	-10
 20528  016B40                     us606999:
 20529  016B40  006F FF7B FFE3     	movff	postinc2,plusw1
 20530  016B46  28E8               	incf	wreg,w,c
 20531  016B48  2E01               	decfsz	btemp^0,f,c
 20532  016B4A  D7FA               	bra	us606999
 20533                           
 20534                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20535  016B4C  52E5               	movf	postdec1,f,c
 20536  016B4E  52E5               	movf	postdec1,f,c
 20537  016B50  0012               	return		;funcret
 20538  016B52                     __end_of___aomod:
 20539                           	opt callstack 0
 20540                           
 20541 ;; *************** function ___aodiv *****************
 20542 ;; Defined at:
 20543 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20544 ;; Parameters:    Size  Location     Type
 20545 ;;  dividend        8  [STACK] long long 
 20546 ;;  divisor         8  [STACK] long long 
 20547 ;; Auto vars:     Size  Location     Type
 20548 ;;  quotient        8  [STACK] long long 
 20549 ;;  sign            1  [STACK] unsigned char 
 20550 ;;  counter         1  [STACK] unsigned char 
 20551 ;; Return value:  Size  Location     Type
 20552 ;;                  8  [STACK] long long 
 20553 ;; Registers used:
 20554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20555 ;; Tracked objects:
 20556 ;;		On entry : 0/3
 20557 ;;		On exit  : 0/0
 20558 ;;		Unchanged: 0/0
 20559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20564 ;;Total ram usage:        0 bytes
 20565 ;; Hardware stack levels used:    1
 20566 ;; Hardware stack levels required when called:   15
 20567 ;; This function calls:
 20568 ;;		Nothing
 20569 ;; This function is called by:
 20570 ;;		_dtoa
 20571 ;; This function uses a reentrant model
 20572 ;;
 20573                           
 20574                           	psect	text71
 20575  01641E                     __ptext71:
 20576                           	opt callstack 0
 20577  01641E                     ___aodiv:
 20578                           	opt callstack 0
 20579                           
 20580                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20581  01641E  0E0A               	movlw	10
 20582  016420  26E1               	addwf	fsr1l,f,c
 20583  016422  0E00               	movlw	0
 20584  016424  22E2               	addwfc	fsr1h,f,c
 20585                           
 20586                           ;stkvar	_sign @ sp[(-10)+8]
 20587                           
 20588                           ;incstack = 0
 20589 ;; hardware stack exceeded
 20590  016426  0EFE               	movlw	-2
 20591  016428  6AE3               	clrf	plusw1,c
 20592                           
 20593                           ;stkvar	_divisor @ sp[(-10)+-16]
 20594  01642A  0EED               	movlw	-19
 20595  01642C  AEE3               	btfss	plusw1,7,c
 20596  01642E  D028               	goto	l7536
 20597                           
 20598                           ;stkvar	_divisor @ sp[(-10)+-16]
 20599                           ;stkvar	_divisor @ sp[(-10)+-16]
 20600  016430  0EE6               	movlw	-26
 20601  016432  6CE3               	negf	plusw1,c
 20602  016434  0EE7               	movlw	-25
 20603  016436  1EE3               	comf	plusw1,f,c
 20604  016438  0EE8               	movlw	-24
 20605  01643A  1EE3               	comf	plusw1,f,c
 20606  01643C  0EE9               	movlw	-23
 20607  01643E  1EE3               	comf	plusw1,f,c
 20608  016440  0EEA               	movlw	-22
 20609  016442  1EE3               	comf	plusw1,f,c
 20610  016444  0EEB               	movlw	-21
 20611  016446  1EE3               	comf	plusw1,f,c
 20612  016448  0EEC               	movlw	-20
 20613  01644A  1EE3               	comf	plusw1,f,c
 20614  01644C  0EED               	movlw	-19
 20615  01644E  1EE3               	comf	plusw1,f,c
 20616  016450  E314               	bnc	u5850
 20617  016452  0EE7               	movlw	-25
 20618  016454  2AE3               	incf	plusw1,f,c
 20619  016456  E311               	bnc	u5850
 20620  016458  0EE8               	movlw	-24
 20621  01645A  2AE3               	incf	plusw1,f,c
 20622  01645C  E30E               	bnc	u5850
 20623  01645E  0EE9               	movlw	-23
 20624  016460  2AE3               	incf	plusw1,f,c
 20625  016462  E30B               	bnc	u5850
 20626  016464  0EEA               	movlw	-22
 20627  016466  2AE3               	incf	plusw1,f,c
 20628  016468  E308               	bnc	u5850
 20629  01646A  0EEB               	movlw	-21
 20630  01646C  2AE3               	incf	plusw1,f,c
 20631  01646E  E305               	bnc	u5850
 20632  016470  0EEC               	movlw	-20
 20633  016472  2AE3               	incf	plusw1,f,c
 20634  016474  E302               	bnc	u5850
 20635  016476  0EED               	movlw	-19
 20636  016478  2AE3               	incf	plusw1,f,c
 20637  01647A                     u5850:
 20638                           
 20639                           ;stkvar	_sign @ sp[(-10)+8]
 20640  01647A  0EFE               	movlw	-2
 20641  01647C  6AE3               	clrf	plusw1,c
 20642  01647E  2AE3               	incf	plusw1,f,c
 20643  016480                     l7536:
 20644                           
 20645                           ;stkvar	_dividend @ sp[(-10)+-8]
 20646  016480  0EF5               	movlw	-11
 20647  016482  AEE3               	btfss	plusw1,7,c
 20648  016484  D027               	goto	l7542
 20649                           
 20650                           ;stkvar	_dividend @ sp[(-10)+-8]
 20651                           ;stkvar	_dividend @ sp[(-10)+-8]
 20652  016486  0EEE               	movlw	-18
 20653  016488  6CE3               	negf	plusw1,c
 20654  01648A  0EEF               	movlw	-17
 20655  01648C  1EE3               	comf	plusw1,f,c
 20656  01648E  0EF0               	movlw	-16
 20657  016490  1EE3               	comf	plusw1,f,c
 20658  016492  0EF1               	movlw	-15
 20659  016494  1EE3               	comf	plusw1,f,c
 20660  016496  0EF2               	movlw	-14
 20661  016498  1EE3               	comf	plusw1,f,c
 20662  01649A  0EF3               	movlw	-13
 20663  01649C  1EE3               	comf	plusw1,f,c
 20664  01649E  0EF4               	movlw	-12
 20665  0164A0  1EE3               	comf	plusw1,f,c
 20666  0164A2  0EF5               	movlw	-11
 20667  0164A4  1EE3               	comf	plusw1,f,c
 20668  0164A6  E314               	bnc	u5870
 20669  0164A8  0EEF               	movlw	-17
 20670  0164AA  2AE3               	incf	plusw1,f,c
 20671  0164AC  E311               	bnc	u5870
 20672  0164AE  0EF0               	movlw	-16
 20673  0164B0  2AE3               	incf	plusw1,f,c
 20674  0164B2  E30E               	bnc	u5870
 20675  0164B4  0EF1               	movlw	-15
 20676  0164B6  2AE3               	incf	plusw1,f,c
 20677  0164B8  E30B               	bnc	u5870
 20678  0164BA  0EF2               	movlw	-14
 20679  0164BC  2AE3               	incf	plusw1,f,c
 20680  0164BE  E308               	bnc	u5870
 20681  0164C0  0EF3               	movlw	-13
 20682  0164C2  2AE3               	incf	plusw1,f,c
 20683  0164C4  E305               	bnc	u5870
 20684  0164C6  0EF4               	movlw	-12
 20685  0164C8  2AE3               	incf	plusw1,f,c
 20686  0164CA  E302               	bnc	u5870
 20687  0164CC  0EF5               	movlw	-11
 20688  0164CE  2AE3               	incf	plusw1,f,c
 20689  0164D0                     u5870:
 20690                           
 20691                           ;stkvar	_sign @ sp[(-10)+8]
 20692  0164D0  0EFE               	movlw	-2
 20693  0164D2  70E3               	btg	plusw1,0,c
 20694  0164D4                     l7542:
 20695                           
 20696                           ;stkvar	_quotient @ sp[(-10)+0]
 20697  0164D4  0E07               	movlw	7
 20698  0164D6  6E01               	movwf	btemp^0,c
 20699  0164D8  0EF6               	movlw	-10
 20700  0164DA                     u5881:
 20701  0164DA  6AE3               	clrf	plusw1,c
 20702  0164DC  2AE8               	incf	wreg,f,c
 20703  0164DE  0601               	decf	btemp^0,f,c
 20704  0164E0  E2FC               	bc	u5881
 20705                           
 20706                           ;stkvar	_divisor @ sp[(-10)+-16]
 20707  0164E2  0EE6               	movlw	-26
 20708  0164E4  50E3               	movf	plusw1,w,c
 20709  0164E6  E116               	bnz	u5890
 20710  0164E8  0EE7               	movlw	-25
 20711  0164EA  50E3               	movf	plusw1,w,c
 20712  0164EC  E113               	bnz	u5890
 20713  0164EE  0EE8               	movlw	-24
 20714  0164F0  50E3               	movf	plusw1,w,c
 20715  0164F2  E110               	bnz	u5890
 20716  0164F4  0EE9               	movlw	-23
 20717  0164F6  50E3               	movf	plusw1,w,c
 20718  0164F8  E10D               	bnz	u5890
 20719  0164FA  0EEA               	movlw	-22
 20720  0164FC  50E3               	movf	plusw1,w,c
 20721  0164FE  E10A               	bnz	u5890
 20722  016500  0EEB               	movlw	-21
 20723  016502  50E3               	movf	plusw1,w,c
 20724  016504  E107               	bnz	u5890
 20725  016506  0EEC               	movlw	-20
 20726  016508  50E3               	movf	plusw1,w,c
 20727  01650A  E104               	bnz	u5890
 20728  01650C  0EED               	movlw	-19
 20729  01650E  50E3               	movf	plusw1,w,c
 20730  016510  B4D8               	btfsc	status,2,c
 20731  016512  D088               	goto	u5920
 20732  016514                     u5890:
 20733                           
 20734                           ;stkvar	_counter @ sp[(-10)+9]
 20735  016514  0EFF               	movlw	-1
 20736  016516  6AE3               	clrf	plusw1,c
 20737  016518  D012               	goto	L23
 20738  01651A                     l7548:
 20739                           
 20740                           ;stkvar	_divisor @ sp[(-10)+-16]
 20741  01651A  90D8               	bcf	status,0,c
 20742  01651C  0EE6               	movlw	-26
 20743  01651E  36E3               	rlcf	plusw1,f,c
 20744  016520  0EE7               	movlw	-25
 20745  016522  36E3               	rlcf	plusw1,f,c
 20746  016524  0EE8               	movlw	-24
 20747  016526  36E3               	rlcf	plusw1,f,c
 20748  016528  0EE9               	movlw	-23
 20749  01652A  36E3               	rlcf	plusw1,f,c
 20750  01652C  0EEA               	movlw	-22
 20751  01652E  36E3               	rlcf	plusw1,f,c
 20752  016530  0EEB               	movlw	-21
 20753  016532  36E3               	rlcf	plusw1,f,c
 20754  016534  0EEC               	movlw	-20
 20755  016536  36E3               	rlcf	plusw1,f,c
 20756  016538  0EED               	movlw	-19
 20757  01653A  36E3               	rlcf	plusw1,f,c
 20758                           
 20759                           ;stkvar	_counter @ sp[(-10)+9]
 20760  01653C  0EFF               	movlw	-1
 20761  01653E                     L23:
 20762  01653E  2AE3               	incf	plusw1,f,c
 20763                           
 20764                           ;stkvar	_divisor @ sp[(-10)+-16]
 20765  016540  0EED               	movlw	-19
 20766  016542  AEE3               	btfss	plusw1,7,c
 20767  016544  D7EA               	goto	l7548
 20768  016546                     u5900:
 20769                           
 20770                           ;stkvar	_quotient @ sp[(-10)+0]
 20771  016546  90D8               	bcf	status,0,c
 20772  016548  0EF6               	movlw	-10
 20773  01654A  36E3               	rlcf	plusw1,f,c
 20774  01654C  0EF7               	movlw	-9
 20775  01654E  36E3               	rlcf	plusw1,f,c
 20776  016550  0EF8               	movlw	-8
 20777  016552  36E3               	rlcf	plusw1,f,c
 20778  016554  0EF9               	movlw	-7
 20779  016556  36E3               	rlcf	plusw1,f,c
 20780  016558  0EFA               	movlw	-6
 20781  01655A  36E3               	rlcf	plusw1,f,c
 20782  01655C  0EFB               	movlw	-5
 20783  01655E  36E3               	rlcf	plusw1,f,c
 20784  016560  0EFC               	movlw	-4
 20785  016562  36E3               	rlcf	plusw1,f,c
 20786  016564  0EFD               	movlw	-3
 20787  016566  36E3               	rlcf	plusw1,f,c
 20788                           
 20789                           ;stkvar	_divisor @ sp[(-10)+-16]
 20790                           ;stkvar	_dividend @ sp[(-10)+-8]
 20791  016568  50E1               	movf	fsr1l,w,c
 20792  01656A  0FEE               	addlw	-18
 20793  01656C  6ED9               	movwf	fsr2l,c
 20794  01656E  50E2               	movf	fsr1h,w,c
 20795  016570  6EDA               	movwf	fsr2h,c
 20796  016572  0EFF               	movlw	255
 20797  016574  22DA               	addwfc	fsr2h,f,c
 20798  016576  0EE6               	movlw	-26
 20799  016578  50E3               	movf	plusw1,w,c
 20800  01657A  5CDE               	subwf	postinc2,w,c
 20801  01657C  0EE7               	movlw	-25
 20802  01657E  50E3               	movf	plusw1,w,c
 20803  016580  58DE               	subwfb	postinc2,w,c
 20804  016582  0EE8               	movlw	-24
 20805  016584  50E3               	movf	plusw1,w,c
 20806  016586  58DE               	subwfb	postinc2,w,c
 20807  016588  0EE9               	movlw	-23
 20808  01658A  50E3               	movf	plusw1,w,c
 20809  01658C  58DE               	subwfb	postinc2,w,c
 20810  01658E  0EEA               	movlw	-22
 20811  016590  50E3               	movf	plusw1,w,c
 20812  016592  58DE               	subwfb	postinc2,w,c
 20813  016594  0EEB               	movlw	-21
 20814  016596  50E3               	movf	plusw1,w,c
 20815  016598  58DE               	subwfb	postinc2,w,c
 20816  01659A  0EEC               	movlw	-20
 20817  01659C  50E3               	movf	plusw1,w,c
 20818  01659E  58DE               	subwfb	postinc2,w,c
 20819  0165A0  0EED               	movlw	-19
 20820  0165A2  50E3               	movf	plusw1,w,c
 20821  0165A4  58DE               	subwfb	postinc2,w,c
 20822  0165A6  A0D8               	btfss	status,0,c
 20823  0165A8  D021               	goto	l7560
 20824                           
 20825                           ;stkvar	_divisor @ sp[(-10)+-16]
 20826                           ;stkvar	_dividend @ sp[(-10)+-8]
 20827  0165AA  50E1               	movf	fsr1l,w,c
 20828  0165AC  0FEE               	addlw	-18
 20829  0165AE  6ED9               	movwf	fsr2l,c
 20830  0165B0  50E2               	movf	fsr1h,w,c
 20831  0165B2  6EDA               	movwf	fsr2h,c
 20832  0165B4  0EFF               	movlw	255
 20833  0165B6  22DA               	addwfc	fsr2h,f,c
 20834  0165B8  0EE6               	movlw	-26
 20835  0165BA  50E3               	movf	plusw1,w,c
 20836  0165BC  5EDE               	subwf	postinc2,f,c
 20837  0165BE  0EE7               	movlw	-25
 20838  0165C0  50E3               	movf	plusw1,w,c
 20839  0165C2  5ADE               	subwfb	postinc2,f,c
 20840  0165C4  0EE8               	movlw	-24
 20841  0165C6  50E3               	movf	plusw1,w,c
 20842  0165C8  5ADE               	subwfb	postinc2,f,c
 20843  0165CA  0EE9               	movlw	-23
 20844  0165CC  50E3               	movf	plusw1,w,c
 20845  0165CE  5ADE               	subwfb	postinc2,f,c
 20846  0165D0  0EEA               	movlw	-22
 20847  0165D2  50E3               	movf	plusw1,w,c
 20848  0165D4  5ADE               	subwfb	postinc2,f,c
 20849  0165D6  0EEB               	movlw	-21
 20850  0165D8  50E3               	movf	plusw1,w,c
 20851  0165DA  5ADE               	subwfb	postinc2,f,c
 20852  0165DC  0EEC               	movlw	-20
 20853  0165DE  50E3               	movf	plusw1,w,c
 20854  0165E0  5ADE               	subwfb	postinc2,f,c
 20855  0165E2  0EED               	movlw	-19
 20856  0165E4  50E3               	movf	plusw1,w,c
 20857  0165E6  5ADE               	subwfb	postinc2,f,c
 20858                           
 20859                           ;stkvar	_quotient @ sp[(-10)+0]
 20860  0165E8  0EF6               	movlw	-10
 20861  0165EA  80E3               	bsf	plusw1,0,c
 20862  0165EC                     l7560:
 20863                           
 20864                           ;stkvar	_divisor @ sp[(-10)+-16]
 20865  0165EC  90D8               	bcf	status,0,c
 20866  0165EE  0EED               	movlw	-19
 20867  0165F0  32E3               	rrcf	plusw1,f,c
 20868  0165F2  0EEC               	movlw	-20
 20869  0165F4  32E3               	rrcf	plusw1,f,c
 20870  0165F6  0EEB               	movlw	-21
 20871  0165F8  32E3               	rrcf	plusw1,f,c
 20872  0165FA  0EEA               	movlw	-22
 20873  0165FC  32E3               	rrcf	plusw1,f,c
 20874  0165FE  0EE9               	movlw	-23
 20875  016600  32E3               	rrcf	plusw1,f,c
 20876  016602  0EE8               	movlw	-24
 20877  016604  32E3               	rrcf	plusw1,f,c
 20878  016606  0EE7               	movlw	-25
 20879  016608  32E3               	rrcf	plusw1,f,c
 20880  01660A  0EE6               	movlw	-26
 20881  01660C  32E3               	rrcf	plusw1,f,c
 20882                           
 20883                           ;stkvar	_counter @ sp[(-10)+9]
 20884  01660E  0EFF               	movlw	-1
 20885  016610  50E3               	movf	plusw1,w,c
 20886  016612  6E01               	movwf	btemp^0,c
 20887  016614  0E01               	movlw	1
 20888  016616  5E01               	subwf	btemp^0,f,c
 20889  016618  0EFF               	movlw	-1
 20890  01661A  0060  F007  FFE3   	movff	btemp,plusw1
 20891  016620  A4D8               	btfss	status,2,c
 20892  016622  D791               	goto	u5900
 20893  016624                     u5920:
 20894                           
 20895                           ;stkvar	_sign @ sp[(-10)+8]
 20896  016624  0EFE               	movlw	-2
 20897  016626  50E3               	movf	plusw1,w,c
 20898  016628  B4D8               	btfsc	status,2,c
 20899  01662A  D025               	goto	u5940
 20900                           
 20901                           ;stkvar	_quotient @ sp[(-10)+0]
 20902                           ;stkvar	_quotient @ sp[(-10)+0]
 20903  01662C  0EF6               	movlw	-10
 20904  01662E  6CE3               	negf	plusw1,c
 20905  016630  0EF7               	movlw	-9
 20906  016632  1EE3               	comf	plusw1,f,c
 20907  016634  0EF8               	movlw	-8
 20908  016636  1EE3               	comf	plusw1,f,c
 20909  016638  0EF9               	movlw	-7
 20910  01663A  1EE3               	comf	plusw1,f,c
 20911  01663C  0EFA               	movlw	-6
 20912  01663E  1EE3               	comf	plusw1,f,c
 20913  016640  0EFB               	movlw	-5
 20914  016642  1EE3               	comf	plusw1,f,c
 20915  016644  0EFC               	movlw	-4
 20916  016646  1EE3               	comf	plusw1,f,c
 20917  016648  0EFD               	movlw	-3
 20918  01664A  1EE3               	comf	plusw1,f,c
 20919  01664C  E314               	bnc	u5940
 20920  01664E  0EF7               	movlw	-9
 20921  016650  2AE3               	incf	plusw1,f,c
 20922  016652  E311               	bnc	u5940
 20923  016654  0EF8               	movlw	-8
 20924  016656  2AE3               	incf	plusw1,f,c
 20925  016658  E30E               	bnc	u5940
 20926  01665A  0EF9               	movlw	-7
 20927  01665C  2AE3               	incf	plusw1,f,c
 20928  01665E  E30B               	bnc	u5940
 20929  016660  0EFA               	movlw	-6
 20930  016662  2AE3               	incf	plusw1,f,c
 20931  016664  E308               	bnc	u5940
 20932  016666  0EFB               	movlw	-5
 20933  016668  2AE3               	incf	plusw1,f,c
 20934  01666A  E305               	bnc	u5940
 20935  01666C  0EFC               	movlw	-4
 20936  01666E  2AE3               	incf	plusw1,f,c
 20937  016670  E302               	bnc	u5940
 20938  016672  0EFD               	movlw	-3
 20939  016674  2AE3               	incf	plusw1,f,c
 20940  016676                     u5940:
 20941                           
 20942                           ;stkvar	_quotient @ sp[(-10)+0]
 20943  016676  0EF6               	movlw	246
 20944  016678  24E1               	addwf	fsr1l,w,c
 20945  01667A  6ED9               	movwf	fsr2l,c
 20946  01667C  0EFF               	movlw	255
 20947  01667E  20E2               	addwfc	fsr1h,w,c
 20948  016680  6EDA               	movwf	fsr2h,c
 20949                           
 20950                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20951  016682  0E08               	movlw	8
 20952  016684  6E01               	movwf	btemp^0,c
 20953  016686  0EEE               	movlw	-18
 20954  016688                     us595999:
 20955  016688  006F FF7B FFE3     	movff	postinc2,plusw1
 20956  01668E  28E8               	incf	wreg,w,c
 20957  016690  2E01               	decfsz	btemp^0,f,c
 20958  016692  D7FA               	bra	us595999
 20959                           
 20960                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20961  016694  0EF6               	movlw	246
 20962  016696  26E1               	addwf	fsr1l,f,c
 20963  016698  0EFF               	movlw	255
 20964  01669A  22E2               	addwfc	fsr1h,f,c
 20965  01669C  0012               	return		;funcret
 20966  01669E                     __end_of___aodiv:
 20967                           	opt callstack 0
 20968                           
 20969 ;; *************** function _ctoa *****************
 20970 ;; Defined at:
 20971 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20972 ;; Parameters:    Size  Location     Type
 20973 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20974 ;;		 -> f(6), NULL(0), 
 20975 ;;  c               1  [STACK] unsigned char 
 20976 ;; Auto vars:     Size  Location     Type
 20977 ;;  w               2  [STACK] int 
 20978 ;;  l               2    0        int 
 20979 ;; Return value:  Size  Location     Type
 20980 ;;                  2  [STACK] int 
 20981 ;; Registers used:
 20982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20983 ;; Tracked objects:
 20984 ;;		On entry : 0/0
 20985 ;;		On exit  : 0/0
 20986 ;;		Unchanged: 0/0
 20987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20992 ;;Total ram usage:        0 bytes
 20993 ;; Hardware stack levels used:    1
 20994 ;; Hardware stack levels required when called:   20
 20995 ;; This function calls:
 20996 ;;		_pad
 20997 ;; This function is called by:
 20998 ;;		_vfpfcnvrt
 20999 ;; This function uses a reentrant model
 21000 ;;
 21001                           
 21002                           	psect	text72
 21003  0194E8                     __ptext72:
 21004                           	opt callstack 0
 21005  0194E8                     _ctoa:
 21006                           	opt callstack 0
 21007                           
 21008                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21009  0194E8  52E6               	movf	postinc1,f,c
 21010  0194EA  52E6               	movf	postinc1,f,c
 21011                           
 21012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 21013                           
 21014                           ;incstack = 0
 21015 ;; hardware stack exceeded
 21016  0194EC  5021               	movf	_width^0,w,c
 21017  0194EE  1022               	iorwf	(_width+1)^0,w,c
 21018  0194F0  A4D8               	btfss	status,2,c
 21019  0194F2  D009               	goto	l10964
 21020                           
 21021                           ;stkvar	_w @ sp[(-2)+0]
 21022  0194F4  0EFE               	movlw	-2
 21023  0194F6  0060  F087  FFE3   	movff	_width,plusw1
 21024  0194FC  0EFF               	movlw	-1
 21025  0194FE  0060  F08B  FFE3   	movff	_width+1,plusw1
 21026  019504  D016               	goto	l10966
 21027  019506                     l10964:
 21028  019506  0EFF               	movlw	255
 21029  019508  6E0B               	movwf	(btemp+10)^0,c
 21030  01950A  0EFF               	movlw	255
 21031  01950C  6E0C               	movwf	(btemp+11)^0,c
 21032  01950E  0060  F084  F009   	movff	_width,btemp+8
 21033  019514  0060  F088  F00A   	movff	_width+1,btemp+9
 21034  01951A  500B               	movf	(btemp+10)^0,w,c
 21035  01951C  2609               	addwf	(btemp+8)^0,f,c
 21036  01951E  500C               	movf	(btemp+11)^0,w,c
 21037  019520  220A               	addwfc	(btemp+9)^0,f,c
 21038                           
 21039                           ;stkvar	_w @ sp[(-2)+0]
 21040  019522  0EFE               	movlw	-2
 21041  019524  0060  F027  FFE3   	movff	btemp+8,plusw1
 21042  01952A  0EFF               	movlw	-1
 21043  01952C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21044  019532                     l10966:
 21045                           
 21046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 21047                           ;stkvar	_c @ sp[(-2)+-3]
 21048  019532  0EFB               	movlw	-5
 21049  019534  006F FF8C  F394    	movff	plusw1,_dbuf
 21050                           
 21051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 21052  01953A  0103               	movlb	3	; () banked
 21053  01953C  6B95               	clrf	(_dbuf+1)& (0+255),b
 21054                           
 21055                           ; BSR set to: 3
 21056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 21057                           ;stkvar	_w @ sp[(-2)+0]
 21058  01953E  0EFE               	movlw	-2
 21059  019540  006F FF8F FFE6     	movff	plusw1,postinc1
 21060  019546  006F FF8F FFE6     	movff	plusw1,postinc1
 21061  01954C  0E94               	movlw	low _dbuf
 21062  01954E  6EE6               	movwf	postinc1,c
 21063  019550  0E03               	movlw	high _dbuf
 21064  019552  6EE6               	movwf	postinc1,c
 21065                           
 21066                           ;stkvar	_fp @ sp[(-6)+-2]
 21067  019554  0EF8               	movlw	-8
 21068  019556  006F FF8F FFE6     	movff	plusw1,postinc1
 21069  01955C  006F FF8F FFE6     	movff	plusw1,postinc1
 21070  019562  EC33  F0C3         	call	_pad	;wreg free
 21071                           
 21072                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 21073  019566  0EFB               	movlw	251
 21074  019568  26E1               	addwf	fsr1l,f,c
 21075  01956A  0EFF               	movlw	255
 21076  01956C  22E2               	addwfc	fsr1h,f,c
 21077  01956E  0012               	return		;funcret
 21078  019570                     __end_of_ctoa:
 21079                           	opt callstack 0
 21080                           
 21081 ;; *************** function _pad *****************
 21082 ;; Defined at:
 21083 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21084 ;; Parameters:    Size  Location     Type
 21085 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21086 ;;		 -> f(6), NULL(0), 
 21087 ;;  buf             2  [STACK] PTR unsigned char 
 21088 ;;		 -> dbuf(80), 
 21089 ;;  p               2  [STACK] int 
 21090 ;; Auto vars:     Size  Location     Type
 21091 ;;  w               2  [STACK] int 
 21092 ;;  i               2  [STACK] int 
 21093 ;; Return value:  Size  Location     Type
 21094 ;;                  2  [STACK] int 
 21095 ;; Registers used:
 21096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21097 ;; Tracked objects:
 21098 ;;		On entry : 0/3
 21099 ;;		On exit  : 0/0
 21100 ;;		Unchanged: 0/0
 21101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21106 ;;Total ram usage:        0 bytes
 21107 ;; Hardware stack levels used:    1
 21108 ;; Hardware stack levels required when called:   19
 21109 ;; This function calls:
 21110 ;;		_fputc
 21111 ;;		_fputs
 21112 ;;		_strlen
 21113 ;; This function is called by:
 21114 ;;		_ctoa
 21115 ;;		_dtoa
 21116 ;;		_efgtoa
 21117 ;;		_utoa
 21118 ;;		_xtoa
 21119 ;; This function uses a reentrant model
 21120 ;;
 21121                           
 21122                           	psect	text73
 21123  018666                     __ptext73:
 21124                           	opt callstack 0
 21125  018666                     _pad:
 21126                           	opt callstack 0
 21127                           
 21128                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21129  018666  52E6               	movf	postinc1,f,c
 21130  018668  52E6               	movf	postinc1,f,c
 21131  01866A  52E6               	movf	postinc1,f,c
 21132  01866C  52E6               	movf	postinc1,f,c
 21133                           
 21134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 21135                           
 21136                           ;incstack = 0
 21137 ;; hardware stack exceeded
 21138  01866E  A025               	btfss	_flags^0,0,c
 21139  018670  D010               	goto	l10896
 21140                           
 21141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 21142                           ;stkvar	_fp @ sp[(-4)+-2]
 21143  018672  0EFA               	movlw	-6
 21144  018674  006F FF8F FFE6     	movff	plusw1,postinc1
 21145  01867A  006F FF8F FFE6     	movff	plusw1,postinc1
 21146                           
 21147                           ;stkvar	_buf @ sp[(-6)+-4]
 21148  018680  0EF6               	movlw	-10
 21149  018682  006F FF8F FFE6     	movff	plusw1,postinc1
 21150  018688  006F FF8F FFE6     	movff	plusw1,postinc1
 21151  01868E  EC05  F0C9         	call	_fputs	;wreg free
 21152  018692                     l10896:
 21153                           
 21154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 21155                           ;stkvar	_p @ sp[(-4)+-6]
 21156  018692  0EF7               	movlw	-9
 21157  018694  BEE3               	btfsc	plusw1,7,c
 21158  018696  D011               	goto	l10900
 21159                           
 21160                           ;stkvar	_p @ sp[(-4)+-6]
 21161                           ;stkvar	_w @ sp[(-4)+0]
 21162  018698  0EF6               	movlw	-10
 21163  01869A  006F FF8C  F001    	movff	plusw1,btemp
 21164  0186A0  0EFC               	movlw	-4
 21165  0186A2  0060  F007  FFE3   	movff	btemp,plusw1
 21166  0186A8  0EF7               	movlw	-9
 21167  0186AA  006F FF8C  F001    	movff	plusw1,btemp
 21168  0186B0  0EFD               	movlw	-3
 21169  0186B2  0060  F007  FFE3   	movff	btemp,plusw1
 21170  0186B8  D004               	goto	l2034
 21171  0186BA                     l10900:
 21172                           
 21173                           ;stkvar	_w @ sp[(-4)+0]
 21174  0186BA  0EFC               	movlw	-4
 21175  0186BC  6AE3               	clrf	plusw1,c
 21176  0186BE  0EFD               	movlw	-3
 21177  0186C0  6AE3               	clrf	plusw1,c
 21178  0186C2                     l2034:
 21179                           
 21180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 21181                           ;stkvar	_i @ sp[(-4)+2]
 21182  0186C2  0EFE               	movlw	-2
 21183  0186C4  6AE3               	clrf	plusw1,c
 21184  0186C6  0EFF               	movlw	-1
 21185  0186C8  6AE3               	clrf	plusw1,c
 21186                           
 21187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21188  0186CA  D01E               	goto	l10906
 21189  0186CC                     l10902:
 21190                           
 21191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 21192                           ;stkvar	_fp @ sp[(-4)+-2]
 21193  0186CC  0EFA               	movlw	-6
 21194  0186CE  006F FF8F FFE6     	movff	plusw1,postinc1
 21195  0186D4  006F FF8F FFE6     	movff	plusw1,postinc1
 21196  0186DA  0E20               	movlw	32
 21197  0186DC  6EE6               	movwf	postinc1,c
 21198  0186DE  0E00               	movlw	0
 21199  0186E0  6EE6               	movwf	postinc1,c
 21200  0186E2  EC15  F0C2         	call	_fputc	;wreg free
 21201                           
 21202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21203                           ;stkvar	_i @ sp[(-4)+2]
 21204  0186E6  0EFE               	movlw	-2
 21205  0186E8  50E3               	movf	plusw1,w,c
 21206  0186EA  0F01               	addlw	1
 21207  0186EC  6E01               	movwf	btemp^0,c
 21208  0186EE  0EFE               	movlw	-2
 21209  0186F0  0060  F007  FFE3   	movff	btemp,plusw1
 21210  0186F6  6A01               	clrf	btemp^0,c
 21211  0186F8  0EFF               	movlw	-1
 21212  0186FA  50E3               	movf	plusw1,w,c
 21213  0186FC  2001               	addwfc	btemp^0,w,c
 21214  0186FE  6E01               	movwf	btemp^0,c
 21215  018700  0EFF               	movlw	-1
 21216  018702  0060  F007  FFE3   	movff	btemp,plusw1
 21217  018708                     l10906:
 21218                           
 21219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21220                           ;stkvar	_w @ sp[(-4)+0]
 21221                           ;stkvar	_i @ sp[(-4)+2]
 21222  018708  50E1               	movf	fsr1l,w,c
 21223  01870A  0FFE               	addlw	-2
 21224  01870C  6ED9               	movwf	fsr2l,c
 21225  01870E  50E2               	movf	fsr1h,w,c
 21226  018710  6EDA               	movwf	fsr2h,c
 21227  018712  0EFF               	movlw	255
 21228  018714  22DA               	addwfc	fsr2h,f,c
 21229  018716  0EFC               	movlw	-4
 21230  018718  50E3               	movf	plusw1,w,c
 21231  01871A  5CDE               	subwf	postinc2,w,c
 21232  01871C  50DE               	movf	postinc2,w,c
 21233  01871E  0A80               	xorlw	128
 21234  018720  6E01               	movwf	btemp^0,c
 21235  018722  0EFD               	movlw	-3
 21236  018724  50E3               	movf	plusw1,w,c
 21237  018726  0A80               	xorlw	128
 21238  018728  5801               	subwfb	btemp^0,w,c
 21239  01872A  A0D8               	btfss	status,0,c
 21240  01872C  D7CF               	goto	l10902
 21241                           
 21242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21243  01872E  B025               	btfsc	_flags^0,0,c
 21244  018730  D010               	goto	l10910
 21245                           
 21246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21247                           ;stkvar	_fp @ sp[(-4)+-2]
 21248  018732  0EFA               	movlw	-6
 21249  018734  006F FF8F FFE6     	movff	plusw1,postinc1
 21250  01873A  006F FF8F FFE6     	movff	plusw1,postinc1
 21251                           
 21252                           ;stkvar	_buf @ sp[(-6)+-4]
 21253  018740  0EF6               	movlw	-10
 21254  018742  006F FF8F FFE6     	movff	plusw1,postinc1
 21255  018748  006F FF8F FFE6     	movff	plusw1,postinc1
 21256  01874E  EC05  F0C9         	call	_fputs	;wreg free
 21257  018752                     l10910:
 21258                           
 21259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21260                           ;stkvar	_w @ sp[(-4)+0]
 21261                           ;stkvar	_buf @ sp[(-4)+-4]
 21262  018752  0EF8               	movlw	-8
 21263  018754  006F FF8F FFE6     	movff	plusw1,postinc1
 21264  01875A  006F FF8F FFE6     	movff	plusw1,postinc1
 21265  018760  ECB4  F0C8         	call	_strlen	;wreg free
 21266  018764  0EFC               	movlw	-4
 21267  018766  50E3               	movf	plusw1,w,c
 21268  018768  2601               	addwf	btemp^0,f,c
 21269  01876A  0EFD               	movlw	-3
 21270  01876C  50E3               	movf	plusw1,w,c
 21271  01876E  2202               	addwfc	(btemp+1)^0,f,c
 21272                           
 21273                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21274  018770  0EF6               	movlw	246
 21275  018772  26E1               	addwf	fsr1l,f,c
 21276  018774  0EFF               	movlw	255
 21277  018776  22E2               	addwfc	fsr1h,f,c
 21278  018778  0012               	return		;funcret
 21279  01877A                     __end_of_pad:
 21280                           	opt callstack 0
 21281                           
 21282 ;; *************** function _strlen *****************
 21283 ;; Defined at:
 21284 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21285 ;; Parameters:    Size  Location     Type
 21286 ;;  s               2  [STACK] PTR const unsigned char 
 21287 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21288 ;;		 -> STR_29(9), STR_28(12), D.lcd(288), D(290), 
 21289 ;;		 -> T(144), port_data(512), STR_7(4), STR_3(4), 
 21290 ;;		 -> V(188), 
 21291 ;; Auto vars:     Size  Location     Type
 21292 ;;  a               2  [STACK] PTR const unsigned char 
 21293 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21294 ;;		 -> STR_29(9), STR_28(12), D.lcd(288), D(290), 
 21295 ;;		 -> T(144), port_data(512), STR_7(4), STR_3(4), 
 21296 ;;		 -> V(188), 
 21297 ;; Return value:  Size  Location     Type
 21298 ;;                  2  [STACK] unsigned int 
 21299 ;; Registers used:
 21300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21301 ;; Tracked objects:
 21302 ;;		On entry : 0/0
 21303 ;;		On exit  : 0/0
 21304 ;;		Unchanged: 0/0
 21305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21310 ;;Total ram usage:        0 bytes
 21311 ;; Hardware stack levels used:    1
 21312 ;; Hardware stack levels required when called:   15
 21313 ;; This function calls:
 21314 ;;		Nothing
 21315 ;; This function is called by:
 21316 ;;		_eaDogM_WriteString
 21317 ;;		_calc_bsoc
 21318 ;;		_pad
 21319 ;;		_stoa
 21320 ;; This function uses a reentrant model
 21321 ;;
 21322                           
 21323                           	psect	text74
 21324  019168                     __ptext74:
 21325                           	opt callstack 0
 21326  019168                     _strlen:
 21327                           	opt callstack 0
 21328                           
 21329                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21330  019168  52E6               	movf	postinc1,f,c
 21331  01916A  52E6               	movf	postinc1,f,c
 21332                           
 21333                           ;stkvar	_s @ sp[(-2)+-2]
 21334                           
 21335                           ;incstack = 0
 21336 ;; hardware stack exceeded
 21337  01916C  0EFC               	movlw	-4
 21338  01916E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21339  019174  0EFD               	movlw	-3
 21340  019176  006F FF8C  F00C    	movff	plusw1,btemp+11
 21341                           
 21342                           ;stkvar	_a @ sp[(-2)+0]
 21343  01917C  0EFF               	movlw	-1
 21344  01917E  0060  F033  FFE3   	movff	btemp+11,plusw1
 21345  019184  0EFE               	movlw	-2
 21346  019186  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21347  01918C  D011               	goto	l10878
 21348  01918E                     l10876:
 21349                           
 21350                           ;stkvar	_s @ sp[(-2)+-2]
 21351  01918E  0EFC               	movlw	-4
 21352  019190  50E3               	movf	plusw1,w,c
 21353  019192  0F01               	addlw	1
 21354  019194  6E01               	movwf	btemp^0,c
 21355  019196  0EFC               	movlw	-4
 21356  019198  0060  F007  FFE3   	movff	btemp,plusw1
 21357  01919E  6A01               	clrf	btemp^0,c
 21358  0191A0  0EFD               	movlw	-3
 21359  0191A2  50E3               	movf	plusw1,w,c
 21360  0191A4  2001               	addwfc	btemp^0,w,c
 21361  0191A6  6E01               	movwf	btemp^0,c
 21362  0191A8  0EFD               	movlw	-3
 21363  0191AA  0060  F007  FFE3   	movff	btemp,plusw1
 21364  0191B0                     l10878:
 21365                           
 21366                           ;stkvar	_s @ sp[(-2)+-2]
 21367  0191B0  0EFC               	movlw	-4
 21368  0191B2  006F FF8F FFF6     	movff	plusw1,tblptrl
 21369  0191B8  0EFD               	movlw	-3
 21370  0191BA  006F FF8F FFF7     	movff	plusw1,tblptrh
 21371  0191C0  0E00               	movlw	low (__mediumconst shr (0+16))
 21372  0191C2  6EF8               	movwf	tblptru,c
 21373  0191C4  0E1F               	movlw	(high __ramtop+-1)
 21374  0191C6  64F7               	cpfsgt	tblptrh,c
 21375  0191C8  D003               	bra	u9967
 21376  0191CA  0008               	tblrd		*
 21377  0191CC  50F5               	movf	tablat,w,c
 21378  0191CE  D007               	bra	u9960
 21379  0191D0                     u9967:
 21380  0191D0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21381  0191D6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21382  0191DC  50EF               	movf	indf0,w,c
 21383  0191DE                     u9960:
 21384  0191DE  0900               	iorlw	0
 21385  0191E0  A4D8               	btfss	status,2,c
 21386  0191E2  D7D5               	goto	l10876
 21387                           
 21388                           ;stkvar	_a @ sp[(-2)+0]
 21389                           ;stkvar	_s @ sp[(-2)+-2]
 21390  0191E4  0EFC               	movlw	-4
 21391  0191E6  006F FF8C  F001    	movff	plusw1,btemp
 21392  0191EC  0EFD               	movlw	-3
 21393  0191EE  006F FF8C  F002    	movff	plusw1,btemp+1
 21394  0191F4  0EFE               	movlw	-2
 21395  0191F6  50E3               	movf	plusw1,w,c
 21396  0191F8  5E01               	subwf	btemp^0,f,c
 21397  0191FA  0EFF               	movlw	-1
 21398  0191FC  50E3               	movf	plusw1,w,c
 21399  0191FE  5A02               	subwfb	(btemp+1)^0,f,c
 21400                           
 21401                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21402  019200  52E5               	movf	postdec1,f,c
 21403  019202  52E5               	movf	postdec1,f,c
 21404  019204  52E5               	movf	postdec1,f,c
 21405  019206  52E5               	movf	postdec1,f,c
 21406  019208  0012               	return		;funcret
 21407  01920A                     __end_of_strlen:
 21408                           	opt callstack 0
 21409                           
 21410 ;; *************** function _fputs *****************
 21411 ;; Defined at:
 21412 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21413 ;; Parameters:    Size  Location     Type
 21414 ;;  s               2  [STACK] PTR const unsigned char 
 21415 ;;		 -> dbuf(80), 
 21416 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21417 ;;		 -> f(6), NULL(0), 
 21418 ;; Auto vars:     Size  Location     Type
 21419 ;;  i               2  [STACK] int 
 21420 ;;  c               1  [STACK] unsigned char 
 21421 ;; Return value:  Size  Location     Type
 21422 ;;                  2  [STACK] int 
 21423 ;; Registers used:
 21424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21425 ;; Tracked objects:
 21426 ;;		On entry : 0/3
 21427 ;;		On exit  : 0/0
 21428 ;;		Unchanged: 0/0
 21429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21434 ;;Total ram usage:        0 bytes
 21435 ;; Hardware stack levels used:    1
 21436 ;; Hardware stack levels required when called:   18
 21437 ;; This function calls:
 21438 ;;		_fputc
 21439 ;; This function is called by:
 21440 ;;		_pad
 21441 ;; This function uses a reentrant model
 21442 ;;
 21443                           
 21444                           	psect	text75
 21445  01920A                     __ptext75:
 21446                           	opt callstack 0
 21447  01920A                     _fputs:
 21448                           	opt callstack 0
 21449                           
 21450                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21451  01920A  52E6               	movf	postinc1,f,c
 21452  01920C  52E6               	movf	postinc1,f,c
 21453  01920E  52E6               	movf	postinc1,f,c
 21454                           
 21455                           ;stkvar	_i @ sp[(-3)+0]
 21456                           
 21457                           ;incstack = 0
 21458 ;; hardware stack exceeded
 21459  019210  0EFD               	movlw	-3
 21460  019212  6AE3               	clrf	plusw1,c
 21461  019214  0EFE               	movlw	-2
 21462  019216  6AE3               	clrf	plusw1,c
 21463  019218  D01F               	goto	l10890
 21464  01921A                     l10886:
 21465                           
 21466                           ;stkvar	_fp @ sp[(-3)+-4]
 21467  01921A  0EF9               	movlw	-7
 21468  01921C  006F FF8F FFE6     	movff	plusw1,postinc1
 21469  019222  006F FF8F FFE6     	movff	plusw1,postinc1
 21470                           
 21471                           ;stkvar	_c @ sp[(-5)+2]
 21472  019228  0EFD               	movlw	-3
 21473  01922A  50E3               	movf	plusw1,w,c
 21474  01922C  6EE6               	movwf	postinc1,c
 21475  01922E  0E00               	movlw	0
 21476  019230  6EE6               	movwf	postinc1,c
 21477  019232  EC15  F0C2         	call	_fputc	;wreg free
 21478                           
 21479                           ;stkvar	_i @ sp[(-3)+0]
 21480  019236  0EFD               	movlw	-3
 21481  019238  50E3               	movf	plusw1,w,c
 21482  01923A  0F01               	addlw	1
 21483  01923C  6E01               	movwf	btemp^0,c
 21484  01923E  0EFD               	movlw	-3
 21485  019240  0060  F007  FFE3   	movff	btemp,plusw1
 21486  019246  6A01               	clrf	btemp^0,c
 21487  019248  0EFE               	movlw	-2
 21488  01924A  50E3               	movf	plusw1,w,c
 21489  01924C  2001               	addwfc	btemp^0,w,c
 21490  01924E  6E01               	movwf	btemp^0,c
 21491  019250  0EFE               	movlw	-2
 21492  019252  0060  F007  FFE3   	movff	btemp,plusw1
 21493  019258                     l10890:
 21494                           
 21495                           ;stkvar	_i @ sp[(-3)+0]
 21496  019258  0EFD               	movlw	-3
 21497  01925A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21498  019260  0EFE               	movlw	-2
 21499  019262  006F FF8C  F00C    	movff	plusw1,btemp+11
 21500                           
 21501                           ;stkvar	_s @ sp[(-3)+-2]
 21502  019268  0EFB               	movlw	-5
 21503  01926A  006F FF8C  F009    	movff	plusw1,btemp+8
 21504  019270  0EFC               	movlw	-4
 21505  019272  006F FF8C  F00A    	movff	plusw1,btemp+9
 21506  019278  500B               	movf	(btemp+10)^0,w,c
 21507  01927A  2409               	addwf	(btemp+8)^0,w,c
 21508  01927C  6ED9               	movwf	fsr2l,c
 21509  01927E  500C               	movf	(btemp+11)^0,w,c
 21510  019280  200A               	addwfc	(btemp+9)^0,w,c
 21511  019282  6EDA               	movwf	fsr2h,c
 21512  019284  50DF               	movf	indf2,w,c
 21513  019286  6E0C               	movwf	(btemp+11)^0,c
 21514                           
 21515                           ;stkvar	_c @ sp[(-3)+2]
 21516  019288  0EFF               	movlw	-1
 21517  01928A  0060  F033  FFE3   	movff	btemp+11,plusw1
 21518  019290  0EFF               	movlw	-1
 21519  019292  50E3               	movf	plusw1,w,c
 21520  019294  A4D8               	btfss	status,2,c
 21521  019296  D7C1               	goto	l10886
 21522                           
 21523                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21524  019298  0EF9               	movlw	249
 21525  01929A  26E1               	addwf	fsr1l,f,c
 21526  01929C  0EFF               	movlw	255
 21527  01929E  22E2               	addwfc	fsr1h,f,c
 21528  0192A0  0012               	return		;funcret
 21529  0192A2                     __end_of_fputs:
 21530                           	opt callstack 0
 21531                           
 21532 ;; *************** function _fputc *****************
 21533 ;; Defined at:
 21534 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21535 ;; Parameters:    Size  Location     Type
 21536 ;;  c               2  [STACK] int 
 21537 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21538 ;;		 -> f(6), NULL(0), 
 21539 ;; Auto vars:     Size  Location     Type
 21540 ;;		None
 21541 ;; Return value:  Size  Location     Type
 21542 ;;                  2  [STACK] int 
 21543 ;; Registers used:
 21544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21545 ;; Tracked objects:
 21546 ;;		On entry : 0/0
 21547 ;;		On exit  : 0/0
 21548 ;;		Unchanged: 0/0
 21549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21554 ;;Total ram usage:        0 bytes
 21555 ;; Hardware stack levels used:    1
 21556 ;; Hardware stack levels required when called:   17
 21557 ;; This function calls:
 21558 ;;		_putch
 21559 ;; This function is called by:
 21560 ;;		_pad
 21561 ;;		_stoa
 21562 ;;		_vfpfcnvrt
 21563 ;;		_fputs
 21564 ;; This function uses a reentrant model
 21565 ;;
 21566                           
 21567                           	psect	text76
 21568  01842A                     __ptext76:
 21569                           	opt callstack 0
 21570  01842A                     _fputc:
 21571                           	opt callstack 0
 21572                           
 21573                           ;stkvar	_fp @ sp[(0)+-4]
 21574                           
 21575                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21576                           ;incstack = 0
 21577 ;; hardware stack exceeded
 21578  01842A  0EFC               	movlw	-4
 21579  01842C  006F FF8C  F001    	movff	plusw1,btemp
 21580  018432  0EFD               	movlw	-3
 21581  018434  50E3               	movf	plusw1,w,c
 21582  018436  1001               	iorwf	btemp^0,w,c
 21583  018438  B4D8               	btfsc	status,2,c
 21584  01843A  D009               	goto	u9930
 21585                           
 21586                           ;stkvar	_fp @ sp[(0)+-4]
 21587  01843C  0EFC               	movlw	-4
 21588  01843E  006F FF8C  F001    	movff	plusw1,btemp
 21589  018444  0EFD               	movlw	-3
 21590  018446  50E3               	movf	plusw1,w,c
 21591  018448  1001               	iorwf	btemp^0,w,c
 21592  01844A  A4D8               	btfss	status,2,c
 21593  01844C  D006               	goto	l10864
 21594  01844E                     u9930:
 21595                           
 21596                           ;stkvar	_c @ sp[(0)+-2]
 21597  01844E  0EFE               	movlw	-2
 21598  018450  50E3               	movf	plusw1,w,c
 21599  018452  6EE6               	movwf	postinc1,c
 21600  018454  ECF8  F0D3         	call	_putch	;wreg free
 21601  018458  D075               	goto	l3075
 21602  01845A                     l10864:
 21603                           
 21604                           ;stkvar	_fp @ sp[(0)+-4]
 21605  01845A  0EFC               	movlw	-4
 21606  01845C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21607  018462  0EFD               	movlw	-3
 21608  018464  006F FF8C  F00C    	movff	plusw1,btemp+11
 21609  01846A  0E04               	movlw	4
 21610  01846C  240B               	addwf	(btemp+10)^0,w,c
 21611  01846E  6ED9               	movwf	fsr2l,c
 21612  018470  0E00               	movlw	0
 21613  018472  200C               	addwfc	(btemp+11)^0,w,c
 21614  018474  6EDA               	movwf	fsr2h,c
 21615  018476  50DE               	movf	postinc2,w,c
 21616  018478  10DE               	iorwf	postinc2,w,c
 21617  01847A  B4D8               	btfsc	status,2,c
 21618  01847C  D026               	goto	u9950
 21619                           
 21620                           ;stkvar	_fp @ sp[(0)+-4]
 21621  01847E  0EFC               	movlw	-4
 21622  018480  006F FF8C  F00B    	movff	plusw1,btemp+10
 21623  018486  0EFD               	movlw	-3
 21624  018488  006F FF8C  F00C    	movff	plusw1,btemp+11
 21625  01848E  0E04               	movlw	4
 21626  018490  240B               	addwf	(btemp+10)^0,w,c
 21627  018492  6ED9               	movwf	fsr2l,c
 21628  018494  0E00               	movlw	0
 21629  018496  200C               	addwfc	(btemp+11)^0,w,c
 21630  018498  6EDA               	movwf	fsr2h,c
 21631                           
 21632                           ;stkvar	_fp @ sp[(0)+-4]
 21633  01849A  0EFC               	movlw	-4
 21634  01849C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21635  0184A2  0EFD               	movlw	-3
 21636  0184A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 21637  0184AA  0E02               	movlw	2
 21638  0184AC  240B               	addwf	(btemp+10)^0,w,c
 21639  0184AE  6EE9               	movwf	fsr0l,c
 21640  0184B0  0E00               	movlw	0
 21641  0184B2  200C               	addwfc	(btemp+11)^0,w,c
 21642  0184B4  6EEA               	movwf	fsr0h,c
 21643  0184B6  50DE               	movf	postinc2,w,c
 21644  0184B8  5CEE               	subwf	postinc0,w,c
 21645  0184BA  50EE               	movf	postinc0,w,c
 21646  0184BC  0A80               	xorlw	128
 21647  0184BE  6E01               	movwf	btemp^0,c
 21648  0184C0  50DE               	movf	postinc2,w,c
 21649  0184C2  0A80               	xorlw	128
 21650  0184C4  5801               	subwfb	btemp^0,w,c
 21651  0184C6  B0D8               	btfsc	status,0,c
 21652  0184C8  D03D               	goto	l3075
 21653  0184CA                     u9950:
 21654                           
 21655                           ;stkvar	_c @ sp[(0)+-2]
 21656                           ;stkvar	_fp @ sp[(0)+-4]
 21657  0184CA  0EFC               	movlw	-4
 21658  0184CC  006F FF8C  F00B    	movff	plusw1,btemp+10
 21659  0184D2  0EFD               	movlw	-3
 21660  0184D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 21661  0184DA  0E02               	movlw	2
 21662  0184DC  240B               	addwf	(btemp+10)^0,w,c
 21663  0184DE  6ED9               	movwf	fsr2l,c
 21664  0184E0  0E00               	movlw	0
 21665  0184E2  200C               	addwfc	(btemp+11)^0,w,c
 21666  0184E4  6EDA               	movwf	fsr2h,c
 21667  0184E6  006F FF78  F00B    	movff	postinc2,btemp+10
 21668  0184EC  006F FF74  F00C    	movff	postdec2,btemp+11
 21669                           
 21670                           ;stkvar	_fp @ sp[(0)+-4]
 21671  0184F2  0EFC               	movlw	-4
 21672  0184F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 21673  0184FA  0EFD               	movlw	-3
 21674  0184FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 21675  018502  006F FF78  F009    	movff	postinc2,btemp+8
 21676  018508  006F FF74  F00A    	movff	postdec2,btemp+9
 21677  01850E  500B               	movf	(btemp+10)^0,w,c
 21678  018510  2409               	addwf	(btemp+8)^0,w,c
 21679  018512  6ED9               	movwf	fsr2l,c
 21680  018514  500C               	movf	(btemp+11)^0,w,c
 21681  018516  200A               	addwfc	(btemp+9)^0,w,c
 21682  018518  6EDA               	movwf	fsr2h,c
 21683  01851A  0EFE               	movlw	-2
 21684  01851C  006F FF8F FFDF     	movff	plusw1,indf2
 21685                           
 21686                           ;stkvar	_fp @ sp[(0)+-4]
 21687  018522  0EFC               	movlw	-4
 21688  018524  006F FF8C  F00B    	movff	plusw1,btemp+10
 21689  01852A  0EFD               	movlw	-3
 21690  01852C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21691  018532  0E02               	movlw	2
 21692  018534  240B               	addwf	(btemp+10)^0,w,c
 21693  018536  6ED9               	movwf	fsr2l,c
 21694  018538  0E00               	movlw	0
 21695  01853A  200C               	addwfc	(btemp+11)^0,w,c
 21696  01853C  6EDA               	movwf	fsr2h,c
 21697  01853E  2ADE               	incf	postinc2,f,c
 21698  018540  0E00               	movlw	0
 21699  018542  22DD               	addwfc	postdec2,f,c
 21700  018544                     l3075:
 21701                           
 21702                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21703  018544  52E5               	movf	postdec1,f,c
 21704  018546  52E5               	movf	postdec1,f,c
 21705  018548  52E5               	movf	postdec1,f,c
 21706  01854A  52E5               	movf	postdec1,f,c
 21707  01854C  0012               	return		;funcret
 21708  01854E                     __end_of_fputc:
 21709                           	opt callstack 0
 21710                           
 21711 ;; *************** function _putch *****************
 21712 ;; Defined at:
 21713 ;;		line 170 in file "eadog.c"
 21714 ;; Parameters:    Size  Location     Type
 21715 ;;  c               1  [STACK] unsigned char 
 21716 ;; Auto vars:     Size  Location     Type
 21717 ;;		None
 21718 ;; Return value:  Size  Location     Type
 21719 ;;                  1  [STACK] void 
 21720 ;; Registers used:
 21721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21722 ;; Tracked objects:
 21723 ;;		On entry : 0/0
 21724 ;;		On exit  : 0/0
 21725 ;;		Unchanged: 0/0
 21726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21731 ;;Total ram usage:        0 bytes
 21732 ;; Hardware stack levels used:    1
 21733 ;; Hardware stack levels required when called:   16
 21734 ;; This function calls:
 21735 ;;		_ringBufS_put_dma
 21736 ;; This function is called by:
 21737 ;;		_fputc
 21738 ;; This function uses a reentrant model
 21739 ;;
 21740                           
 21741                           	psect	text77
 21742  01A7F0                     __ptext77:
 21743                           	opt callstack 0
 21744  01A7F0                     _putch:
 21745                           	opt callstack 0
 21746                           
 21747                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21748                           ;stkvar	_c @ sp[(0)+-1]
 21749                           
 21750                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21751                           ;incstack = 0
 21752 ;; hardware stack exceeded
 21753  01A7F0  0EFF               	movlw	-1
 21754  01A7F2  50E3               	movf	plusw1,w,c
 21755  01A7F4  6EE6               	movwf	postinc1,c
 21756  01A7F6  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21757  01A7FC  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21758  01A802  EC0C  F0C8         	call	_ringBufS_put_dma	;wreg free
 21759                           
 21760                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21761  01A806  52E5               	movf	postdec1,f,c
 21762  01A808  0012               	return		;funcret
 21763  01A80A                     __end_of_putch:
 21764                           	opt callstack 0
 21765                           
 21766 ;; *************** function _ringBufS_put_dma *****************
 21767 ;; Defined at:
 21768 ;;		line 67 in file "ringbufs.c"
 21769 ;; Parameters:    Size  Location     Type
 21770 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21771 ;;		 -> ring_buf1(67), 
 21772 ;;  c               1  [STACK] const unsigned char 
 21773 ;; Auto vars:     Size  Location     Type
 21774 ;;		None
 21775 ;; Return value:  Size  Location     Type
 21776 ;;                  1  [STACK] void 
 21777 ;; Registers used:
 21778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21779 ;; Tracked objects:
 21780 ;;		On entry : 0/0
 21781 ;;		On exit  : 0/0
 21782 ;;		Unchanged: 0/0
 21783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21788 ;;Total ram usage:        0 bytes
 21789 ;; Hardware stack levels used:    1
 21790 ;; Hardware stack levels required when called:   15
 21791 ;; This function calls:
 21792 ;;		Nothing
 21793 ;; This function is called by:
 21794 ;;		_putch
 21795 ;; This function uses a reentrant model
 21796 ;;
 21797                           
 21798                           	psect	text78
 21799  019018                     __ptext78:
 21800                           	opt callstack 0
 21801  019018                     _ringBufS_put_dma:
 21802                           	opt callstack 0
 21803                           
 21804                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21805                           ;stkvar	__this @ sp[(0)+-2]
 21806                           
 21807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21808                           ;incstack = 0
 21809 ;; hardware stack exceeded
 21810  019018  0EFE               	movlw	-2
 21811  01901A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21812  019020  0EFF               	movlw	-1
 21813  019022  006F FF8C  F00C    	movff	plusw1,btemp+11
 21814  019028  0E42               	movlw	66
 21815  01902A  240B               	addwf	(btemp+10)^0,w,c
 21816  01902C  6ED9               	movwf	fsr2l,c
 21817  01902E  0E00               	movlw	0
 21818  019030  200C               	addwfc	(btemp+11)^0,w,c
 21819  019032  6EDA               	movwf	fsr2h,c
 21820  019034  0E40               	movlw	64
 21821  019036  60DF               	cpfslt	indf2,c
 21822  019038  D040               	goto	l1560
 21823                           
 21824                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21825                           ;stkvar	_c @ sp[(0)+-3]
 21826                           ;stkvar	__this @ sp[(0)+-2]
 21827  01903A  0EFE               	movlw	-2
 21828  01903C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21829  019042  0EFF               	movlw	-1
 21830  019044  006F FF8C  F00C    	movff	plusw1,btemp+11
 21831  01904A  0E40               	movlw	64
 21832  01904C  240B               	addwf	(btemp+10)^0,w,c
 21833  01904E  6ED9               	movwf	fsr2l,c
 21834  019050  0E00               	movlw	0
 21835  019052  200C               	addwfc	(btemp+11)^0,w,c
 21836  019054  6EDA               	movwf	fsr2h,c
 21837  019056  50DF               	movf	indf2,w,c
 21838  019058  6E0C               	movwf	(btemp+11)^0,c
 21839                           
 21840                           ;stkvar	__this @ sp[(0)+-2]
 21841  01905A  0EFE               	movlw	-2
 21842  01905C  006F FF8C  F009    	movff	plusw1,btemp+8
 21843  019062  0EFF               	movlw	-1
 21844  019064  006F FF8C  F00A    	movff	plusw1,btemp+9
 21845  01906A  500C               	movf	(btemp+11)^0,w,c
 21846  01906C  2409               	addwf	(btemp+8)^0,w,c
 21847  01906E  6ED9               	movwf	fsr2l,c
 21848  019070  0E00               	movlw	0
 21849  019072  200A               	addwfc	(btemp+9)^0,w,c
 21850  019074  6EDA               	movwf	fsr2h,c
 21851  019076  0EFD               	movlw	-3
 21852  019078  006F FF8F FFDF     	movff	plusw1,indf2
 21853                           
 21854                           ;ringbufs.c: 71:   ++_this->head;
 21855                           ;stkvar	__this @ sp[(0)+-2]
 21856  01907E  0EFE               	movlw	-2
 21857  019080  006F FF8C  F00B    	movff	plusw1,btemp+10
 21858  019086  0EFF               	movlw	-1
 21859  019088  006F FF8C  F00C    	movff	plusw1,btemp+11
 21860  01908E  0E40               	movlw	64
 21861  019090  240B               	addwf	(btemp+10)^0,w,c
 21862  019092  6ED9               	movwf	fsr2l,c
 21863  019094  0E00               	movlw	0
 21864  019096  200C               	addwfc	(btemp+11)^0,w,c
 21865  019098  6EDA               	movwf	fsr2h,c
 21866  01909A  2ADF               	incf	indf2,f,c
 21867                           
 21868                           ;ringbufs.c: 72:   ++_this->count;
 21869                           ;stkvar	__this @ sp[(0)+-2]
 21870  01909C  0EFE               	movlw	-2
 21871  01909E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21872  0190A4  0EFF               	movlw	-1
 21873  0190A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 21874  0190AC  0E42               	movlw	66
 21875  0190AE  240B               	addwf	(btemp+10)^0,w,c
 21876  0190B0  6ED9               	movwf	fsr2l,c
 21877  0190B2  0E00               	movlw	0
 21878  0190B4  200C               	addwfc	(btemp+11)^0,w,c
 21879  0190B6  6EDA               	movwf	fsr2h,c
 21880  0190B8  2ADF               	incf	indf2,f,c
 21881  0190BA                     l1560:
 21882                           
 21883                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21884  0190BA  52E5               	movf	postdec1,f,c
 21885  0190BC  52E5               	movf	postdec1,f,c
 21886  0190BE  52E5               	movf	postdec1,f,c
 21887  0190C0  0012               	return		;funcret
 21888  0190C2                     __end_of_ringBufS_put_dma:
 21889                           	opt callstack 0
 21890                           
 21891 ;; *************** function _atoi *****************
 21892 ;; Defined at:
 21893 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21894 ;; Parameters:    Size  Location     Type
 21895 ;;  s               2  [STACK] PTR const unsigned char 
 21896 ;;		 -> STR_47(79), STR_45(3), STR_44(3), STR_43(19), 
 21897 ;;		 -> STR_42(19), STR_41(19), STR_40(19), STR_39(19), 
 21898 ;;		 -> STR_38(19), STR_37(24), STR_36(15), STR_35(15), 
 21899 ;;		 -> STR_34(15), STR_33(10), STR_32(10), STR_31(19), 
 21900 ;;		 -> STR_30(19), STR_27(3), STR_26(3), STR_25(3), 
 21901 ;;		 -> STR_24(17), STR_23(16), STR_22(16), STR_21(19), 
 21902 ;;		 -> STR_20(20), STR_19(19), STR_18(19), STR_17(19), 
 21903 ;;		 -> STR_16(19), STR_15(19), STR_14(19), STR_13(19), 
 21904 ;;		 -> STR_12(17), STR_11(16), STR_10(16), STR_9(23), 
 21905 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
 21906 ;;		 -> STR_2(15), STR_1(17), 
 21907 ;; Auto vars:     Size  Location     Type
 21908 ;;  n               2  [STACK] int 
 21909 ;;  neg             2  [STACK] int 
 21910 ;; Return value:  Size  Location     Type
 21911 ;;                  2  [STACK] int 
 21912 ;; Registers used:
 21913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21914 ;; Tracked objects:
 21915 ;;		On entry : 0/0
 21916 ;;		On exit  : 0/0
 21917 ;;		Unchanged: 0/0
 21918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21923 ;;Total ram usage:        0 bytes
 21924 ;; Hardware stack levels used:    1
 21925 ;; Hardware stack levels required when called:   16
 21926 ;; This function calls:
 21927 ;;		_isdigit
 21928 ;;		_isspace
 21929 ;; This function is called by:
 21930 ;;		_vfpfcnvrt
 21931 ;; This function uses a reentrant model
 21932 ;;
 21933                           
 21934                           	psect	text79
 21935  01669E                     __ptext79:
 21936                           	opt callstack 0
 21937  01669E                     _atoi:
 21938                           	opt callstack 0
 21939                           
 21940                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21941  01669E  0E09               	movlw	9
 21942  0166A0  26E1               	addwf	fsr1l,f,c
 21943  0166A2  0E00               	movlw	0
 21944  0166A4  22E2               	addwfc	fsr1h,f,c
 21945                           
 21946                           ;stkvar	_n @ sp[(-9)+5]
 21947                           
 21948                           ;incstack = 0
 21949 ;; hardware stack exceeded
 21950  0166A6  0EFC               	movlw	-4
 21951  0166A8  6AE3               	clrf	plusw1,c
 21952  0166AA  0EFD               	movlw	-3
 21953  0166AC  6AE3               	clrf	plusw1,c
 21954                           
 21955                           ;stkvar	_neg @ sp[(-9)+7]
 21956  0166AE  0EFE               	movlw	-2
 21957  0166B0  6AE3               	clrf	plusw1,c
 21958  0166B2  0EFF               	movlw	-1
 21959  0166B4  6AE3               	clrf	plusw1,c
 21960  0166B6  D011               	goto	l8762
 21961  0166B8                     l8760:
 21962                           
 21963                           ;stkvar	_s @ sp[(-9)+-2]
 21964  0166B8  0EF5               	movlw	-11
 21965  0166BA  50E3               	movf	plusw1,w,c
 21966  0166BC  0F01               	addlw	1
 21967  0166BE  6E01               	movwf	btemp^0,c
 21968  0166C0  0EF5               	movlw	-11
 21969  0166C2  0060  F007  FFE3   	movff	btemp,plusw1
 21970  0166C8  6A01               	clrf	btemp^0,c
 21971  0166CA  0EF6               	movlw	-10
 21972  0166CC  50E3               	movf	plusw1,w,c
 21973  0166CE  2001               	addwfc	btemp^0,w,c
 21974  0166D0  6E01               	movwf	btemp^0,c
 21975  0166D2  0EF6               	movlw	-10
 21976  0166D4  0060  F007  FFE3   	movff	btemp,plusw1
 21977  0166DA                     l8762:
 21978                           
 21979                           ;stkvar	_atoi$5776 @ sp[(-9)+4]
 21980  0166DA  0EFB               	movlw	-5
 21981  0166DC  6AE3               	clrf	plusw1,c
 21982  0166DE  2AE3               	incf	plusw1,f,c
 21983                           
 21984                           ;stkvar	_s @ sp[(-9)+-2]
 21985  0166E0  50E1               	movf	fsr1l,w,c
 21986  0166E2  0FF5               	addlw	-11
 21987  0166E4  6ED9               	movwf	fsr2l,c
 21988  0166E6  50E2               	movf	fsr1h,w,c
 21989  0166E8  6EDA               	movwf	fsr2h,c
 21990  0166EA  0EFF               	movlw	255
 21991  0166EC  22DA               	addwfc	fsr2h,f,c
 21992  0166EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 21993  0166F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 21994  0166FA                     	if	0	;tblptru may be non-zero
 21995  0166FA                     	endif
 21996  0166FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21997  0166FA  0E00               	movlw	low (__mediumconst shr (0+16))
 21998  0166FC  6EF8               	movwf	tblptru,c
 21999  0166FE                     	endif
 22000  0166FE  0008               	tblrd		*
 22001  016700  50F5               	movf	tablat,w,c
 22002  016702  0A20               	xorlw	32
 22003  016704  B4D8               	btfsc	status,2,c
 22004  016706  D023               	goto	l8770
 22005  016708  0EF7               	movlw	247
 22006  01670A  6E0B               	movwf	(btemp+10)^0,c
 22007  01670C  0EFF               	movlw	255
 22008  01670E  6E0C               	movwf	(btemp+11)^0,c
 22009                           
 22010                           ;stkvar	_s @ sp[(-9)+-2]
 22011  016710  50E1               	movf	fsr1l,w,c
 22012  016712  0FF5               	addlw	-11
 22013  016714  6ED9               	movwf	fsr2l,c
 22014  016716  50E2               	movf	fsr1h,w,c
 22015  016718  6EDA               	movwf	fsr2h,c
 22016  01671A  0EFF               	movlw	255
 22017  01671C  22DA               	addwfc	fsr2h,f,c
 22018  01671E  006F FF7B FFF6     	movff	postinc2,tblptrl
 22019  016724  006F FF77 FFF7     	movff	postdec2,tblptrh
 22020  01672A                     	if	0	;tblptru may be non-zero
 22021  01672A                     	endif
 22022  01672A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22023  01672A  0E00               	movlw	low (__mediumconst shr (0+16))
 22024  01672C  6EF8               	movwf	tblptru,c
 22025  01672E                     	endif
 22026  01672E  0008               	tblrd		*
 22027  016730  50F5               	movf	tablat,w,c
 22028  016732  6E09               	movwf	(btemp+8)^0,c
 22029  016734  6A0A               	clrf	(btemp+9)^0,c
 22030  016736  500B               	movf	(btemp+10)^0,w,c
 22031  016738  2609               	addwf	(btemp+8)^0,f,c
 22032  01673A  500C               	movf	(btemp+11)^0,w,c
 22033  01673C  220A               	addwfc	(btemp+9)^0,f,c
 22034  01673E  500A               	movf	(btemp+9)^0,w,c
 22035  016740  E104               	bnz	u8120
 22036  016742  0E05               	movlw	5
 22037  016744  5C09               	subwf	(btemp+8)^0,w,c
 22038  016746  A0D8               	btfss	status,0,c
 22039  016748  D002               	goto	l8770
 22040  01674A                     u8120:
 22041                           
 22042                           ;stkvar	_atoi$5776 @ sp[(-9)+4]
 22043  01674A  0EFB               	movlw	-5
 22044  01674C  6AE3               	clrf	plusw1,c
 22045  01674E                     l8770:
 22046                           
 22047                           ;stkvar	_atoi$5776 @ sp[(-9)+4]
 22048  01674E  0EFB               	movlw	-5
 22049  016750  50E3               	movf	plusw1,w,c
 22050  016752  6E0B               	movwf	(btemp+10)^0,c
 22051  016754  6A0C               	clrf	(btemp+11)^0,c
 22052                           
 22053                           ;stkvar	_atoi$5775 @ sp[(-9)+2]
 22054  016756  0EF9               	movlw	-7
 22055  016758  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22056  01675E  0EFA               	movlw	-6
 22057  016760  0060  F033  FFE3   	movff	btemp+11,plusw1
 22058                           
 22059                           ;stkvar	_atoi$5775 @ sp[(-9)+2]
 22060  016766  0EF9               	movlw	-7
 22061  016768  006F FF8C  F001    	movff	plusw1,btemp
 22062  01676E  0EFA               	movlw	-6
 22063  016770  50E3               	movf	plusw1,w,c
 22064  016772  1001               	iorwf	btemp^0,w,c
 22065  016774  B4D8               	btfsc	status,2,c
 22066  016776  D01F               	goto	l8780
 22067  016778  D79F               	goto	l8760
 22068  01677A                     l8776:
 22069  01677A  0E01               	movlw	1
 22070  01677C  6E0B               	movwf	(btemp+10)^0,c
 22071  01677E  0E00               	movlw	0
 22072  016780  6E0C               	movwf	(btemp+11)^0,c
 22073                           
 22074                           ;stkvar	_neg @ sp[(-9)+7]
 22075  016782  0EFE               	movlw	-2
 22076  016784  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22077  01678A  0EFF               	movlw	-1
 22078  01678C  0060  F033  FFE3   	movff	btemp+11,plusw1
 22079  016792                     l8778:
 22080                           
 22081                           ;stkvar	_s @ sp[(-9)+-2]
 22082  016792  0EF5               	movlw	-11
 22083  016794  50E3               	movf	plusw1,w,c
 22084  016796  0F01               	addlw	1
 22085  016798  6E01               	movwf	btemp^0,c
 22086  01679A  0EF5               	movlw	-11
 22087  01679C  0060  F007  FFE3   	movff	btemp,plusw1
 22088  0167A2  6A01               	clrf	btemp^0,c
 22089  0167A4  0EF6               	movlw	-10
 22090  0167A6  50E3               	movf	plusw1,w,c
 22091  0167A8  2001               	addwfc	btemp^0,w,c
 22092  0167AA  6E01               	movwf	btemp^0,c
 22093  0167AC  0EF6               	movlw	-10
 22094  0167AE  0060  F007  FFE3   	movff	btemp,plusw1
 22095  0167B4  D053               	goto	l8786
 22096  0167B6                     l8780:
 22097                           
 22098                           ;stkvar	_s @ sp[(-9)+-2]
 22099  0167B6  50E1               	movf	fsr1l,w,c
 22100  0167B8  0FF5               	addlw	-11
 22101  0167BA  6ED9               	movwf	fsr2l,c
 22102  0167BC  50E2               	movf	fsr1h,w,c
 22103  0167BE  6EDA               	movwf	fsr2h,c
 22104  0167C0  0EFF               	movlw	255
 22105  0167C2  22DA               	addwfc	fsr2h,f,c
 22106  0167C4  006F FF7B FFF6     	movff	postinc2,tblptrl
 22107  0167CA  006F FF77 FFF7     	movff	postdec2,tblptrh
 22108  0167D0                     	if	0	;tblptru may be non-zero
 22109  0167D0                     	endif
 22110  0167D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22111  0167D0  0E00               	movlw	low (__mediumconst shr (0+16))
 22112  0167D2  6EF8               	movwf	tblptru,c
 22113  0167D4                     	endif
 22114  0167D4  0008               	tblrd		*
 22115  0167D6  50F5               	movf	tablat,w,c
 22116  0167D8  6E0B               	movwf	(btemp+10)^0,c
 22117  0167DA  6A0C               	clrf	(btemp+11)^0,c
 22118                           
 22119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22120                           ; Switch size 1, requested type "simple"
 22121                           ; Number of cases is 1, Range of values is 0 to 0
 22122                           ; switch strategies available:
 22123                           ; Name         Instructions Cycles
 22124                           ; simple_byte            4     3 (average)
 22125                           ;	Chosen strategy is simple_byte
 22126  0167DC  500C               	movf	(btemp+11)^0,w,c
 22127  0167DE  0A00               	xorlw	0	; case 0
 22128  0167E0  A4D8               	btfss	status,2,c
 22129  0167E2  D03C               	goto	l8786
 22130                           
 22131                           ; Switch size 1, requested type "simple"
 22132                           ; Number of cases is 2, Range of values is 43 to 45
 22133                           ; switch strategies available:
 22134                           ; Name         Instructions Cycles
 22135                           ; simple_byte            7     4 (average)
 22136                           ;	Chosen strategy is simple_byte
 22137  0167E4  500B               	movf	(btemp+10)^0,w,c
 22138  0167E6  0A2B               	xorlw	43	; case 43
 22139  0167E8  B4D8               	btfsc	status,2,c
 22140  0167EA  D7D3               	goto	l8778
 22141  0167EC  0A06               	xorlw	6	; case 45
 22142  0167EE  B4D8               	btfsc	status,2,c
 22143  0167F0  D7C4               	goto	l8776
 22144  0167F2  D034               	goto	l8786
 22145  0167F4                     l8782:
 22146                           
 22147                           ;stkvar	_n @ sp[(-9)+5]
 22148  0167F4  0EFC               	movlw	-4
 22149  0167F6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22150  0167FC  0EFD               	movlw	-3
 22151  0167FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22152  016804  0E0A               	movlw	10
 22153  016806  020B               	mulwf	(btemp+10)^0,c
 22154  016808  006F FFCC  F009    	movff	prodl,btemp+8
 22155  01680E  006F FFD0  F00A    	movff	prodh,btemp+9
 22156  016814  020C               	mulwf	(btemp+11)^0,c
 22157  016816  50F3               	movf	prodl,w,c
 22158  016818  260A               	addwf	(btemp+9)^0,f,c
 22159                           
 22160                           ;stkvar	_s @ sp[(-9)+-2]
 22161  01681A  50E1               	movf	fsr1l,w,c
 22162  01681C  0FF5               	addlw	-11
 22163  01681E  6ED9               	movwf	fsr2l,c
 22164  016820  50E2               	movf	fsr1h,w,c
 22165  016822  6EDA               	movwf	fsr2h,c
 22166  016824  0EFF               	movlw	255
 22167  016826  22DA               	addwfc	fsr2h,f,c
 22168  016828  006F FF7B FFF6     	movff	postinc2,tblptrl
 22169  01682E  006F FF77 FFF7     	movff	postdec2,tblptrh
 22170  016834                     	if	0	;tblptru may be non-zero
 22171  016834                     	endif
 22172  016834                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22173  016834  0E00               	movlw	low (__mediumconst shr (0+16))
 22174  016836  6EF8               	movwf	tblptru,c
 22175  016838                     	endif
 22176  016838  0008               	tblrd		*
 22177  01683A  50F5               	movf	tablat,w,c
 22178  01683C  5E09               	subwf	(btemp+8)^0,f,c
 22179  01683E  0E00               	movlw	0
 22180  016840  5A0A               	subwfb	(btemp+9)^0,f,c
 22181  016842  0E30               	movlw	48
 22182  016844  2609               	addwf	(btemp+8)^0,f,c
 22183  016846  0E00               	movlw	0
 22184  016848  220A               	addwfc	(btemp+9)^0,f,c
 22185                           
 22186                           ;stkvar	_n @ sp[(-9)+5]
 22187  01684A  0EFC               	movlw	-4
 22188  01684C  0060  F027  FFE3   	movff	btemp+8,plusw1
 22189  016852  0EFD               	movlw	-3
 22190  016854  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22191  01685A  D79B               	goto	l8778
 22192  01685C                     l8786:
 22193  01685C  0ED0               	movlw	208
 22194  01685E  6E0B               	movwf	(btemp+10)^0,c
 22195  016860  0EFF               	movlw	255
 22196  016862  6E0C               	movwf	(btemp+11)^0,c
 22197                           
 22198                           ;stkvar	_s @ sp[(-9)+-2]
 22199  016864  50E1               	movf	fsr1l,w,c
 22200  016866  0FF5               	addlw	-11
 22201  016868  6ED9               	movwf	fsr2l,c
 22202  01686A  50E2               	movf	fsr1h,w,c
 22203  01686C  6EDA               	movwf	fsr2h,c
 22204  01686E  0EFF               	movlw	255
 22205  016870  22DA               	addwfc	fsr2h,f,c
 22206  016872  006F FF7B FFF6     	movff	postinc2,tblptrl
 22207  016878  006F FF77 FFF7     	movff	postdec2,tblptrh
 22208  01687E                     	if	0	;tblptru may be non-zero
 22209  01687E                     	endif
 22210  01687E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22211  01687E  0E00               	movlw	low (__mediumconst shr (0+16))
 22212  016880  6EF8               	movwf	tblptru,c
 22213  016882                     	endif
 22214  016882  0008               	tblrd		*
 22215  016884  50F5               	movf	tablat,w,c
 22216  016886  6E09               	movwf	(btemp+8)^0,c
 22217  016888  6A0A               	clrf	(btemp+9)^0,c
 22218  01688A  500B               	movf	(btemp+10)^0,w,c
 22219  01688C  2609               	addwf	(btemp+8)^0,f,c
 22220  01688E  500C               	movf	(btemp+11)^0,w,c
 22221  016890  220A               	addwfc	(btemp+9)^0,f,c
 22222  016892  500A               	movf	(btemp+9)^0,w,c
 22223  016894  E106               	bnz	u8140
 22224  016896  0E0A               	movlw	10
 22225  016898  5C09               	subwf	(btemp+8)^0,w,c
 22226  01689A  B0D8               	btfsc	status,0,c
 22227  01689C  D002               	goto	u8140
 22228  01689E  0E01               	movlw	1
 22229  0168A0  D001               	goto	u8150
 22230  0168A2                     u8140:
 22231  0168A2  0E00               	movlw	0
 22232  0168A4                     u8150:
 22233  0168A4  6E0B               	movwf	(btemp+10)^0,c
 22234  0168A6  6A0C               	clrf	(btemp+11)^0,c
 22235                           
 22236                           ;stkvar	_atoi$5777 @ sp[(-9)+0]
 22237  0168A8  0EF7               	movlw	-9
 22238  0168AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22239  0168B0  0EF8               	movlw	-8
 22240  0168B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 22241                           
 22242                           ;stkvar	_atoi$5777 @ sp[(-9)+0]
 22243  0168B8  0EF7               	movlw	-9
 22244  0168BA  006F FF8C  F001    	movff	plusw1,btemp
 22245  0168C0  0EF8               	movlw	-8
 22246  0168C2  50E3               	movf	plusw1,w,c
 22247  0168C4  1001               	iorwf	btemp^0,w,c
 22248  0168C6  A4D8               	btfss	status,2,c
 22249  0168C8  D795               	goto	l8782
 22250                           
 22251                           ;stkvar	_neg @ sp[(-9)+7]
 22252  0168CA  0EFE               	movlw	-2
 22253  0168CC  006F FF8C  F001    	movff	plusw1,btemp
 22254  0168D2  0EFF               	movlw	-1
 22255  0168D4  50E3               	movf	plusw1,w,c
 22256  0168D6  1001               	iorwf	btemp^0,w,c
 22257  0168D8  A4D8               	btfss	status,2,c
 22258  0168DA  D00E               	goto	l8796
 22259                           
 22260                           ;stkvar	_n @ sp[(-9)+5]
 22261  0168DC  0EFC               	movlw	-4
 22262  0168DE  006F FF8C  F001    	movff	plusw1,btemp
 22263  0168E4  1E01               	comf	btemp^0,f,c
 22264  0168E6  0EFD               	movlw	-3
 22265  0168E8  006F FF8C  F002    	movff	plusw1,btemp+1
 22266  0168EE  1E02               	comf	(btemp+1)^0,f,c
 22267  0168F0  2A01               	incf	btemp^0,f,c
 22268  0168F2  B4D8               	btfsc	status,2,c
 22269  0168F4  2A02               	incf	(btemp+1)^0,f,c
 22270  0168F6  D008               	goto	l3011
 22271  0168F8                     l8796:
 22272                           
 22273                           ;stkvar	_n @ sp[(-9)+5]
 22274  0168F8  0EFC               	movlw	-4
 22275  0168FA  006F FF8C  F001    	movff	plusw1,btemp
 22276  016900  0EFD               	movlw	-3
 22277  016902  006F FF8C  F002    	movff	plusw1,btemp+1
 22278  016908                     l3011:
 22279                           
 22280                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22281  016908  0EF5               	movlw	245
 22282  01690A  26E1               	addwf	fsr1l,f,c
 22283  01690C  0EFF               	movlw	255
 22284  01690E  22E2               	addwfc	fsr1h,f,c
 22285  016910  0012               	return		;funcret
 22286  016912                     __end_of_atoi:
 22287                           	opt callstack 0
 22288                           
 22289 ;; *************** function _isspace *****************
 22290 ;; Defined at:
 22291 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22292 ;; Parameters:    Size  Location     Type
 22293 ;;  c               2  [STACK] int 
 22294 ;; Auto vars:     Size  Location     Type
 22295 ;;		None
 22296 ;; Return value:  Size  Location     Type
 22297 ;;                  2  [STACK] int 
 22298 ;; Registers used:
 22299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22300 ;; Tracked objects:
 22301 ;;		On entry : 0/0
 22302 ;;		On exit  : 0/0
 22303 ;;		Unchanged: 0/0
 22304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22309 ;;Total ram usage:        0 bytes
 22310 ;; Hardware stack levels used:    1
 22311 ;; Hardware stack levels required when called:   15
 22312 ;; This function calls:
 22313 ;;		Nothing
 22314 ;; This function is called by:
 22315 ;;		_atoi
 22316 ;; This function uses a reentrant model
 22317 ;;
 22318                           
 22319                           	psect	text80
 22320  019B84                     __ptext80:
 22321                           	opt callstack 0
 22322  019B84                     _isspace:
 22323                           	opt callstack 0
 22324                           
 22325                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22326  019B84  52E6               	movf	postinc1,f,c
 22327                           
 22328                           ;stkvar	_isspace$5815 @ sp[(-1)+0]
 22329                           
 22330                           ;incstack = 0
 22331 ;; hardware stack exceeded
 22332  019B86  0EFF               	movlw	-1
 22333  019B88  6AE3               	clrf	plusw1,c
 22334  019B8A  2AE3               	incf	plusw1,f,c
 22335                           
 22336                           ;stkvar	_c @ sp[(-1)+-2]
 22337  019B8C  0EFD               	movlw	-3
 22338  019B8E  006F FF8C  F001    	movff	plusw1,btemp
 22339  019B94  0E20               	movlw	32
 22340  019B96  1801               	xorwf	btemp^0,w,c
 22341  019B98  E104               	bnz	u6970
 22342  019B9A  0EFE               	movlw	-2
 22343  019B9C  50E3               	movf	plusw1,w,c
 22344  019B9E  B4D8               	btfsc	status,2,c
 22345  019BA0  D012               	goto	l8154
 22346  019BA2                     u6970:
 22347                           
 22348                           ;stkvar	_c @ sp[(-1)+-2]
 22349  019BA2  0EFD               	movlw	-3
 22350  019BA4  50E3               	movf	plusw1,w,c
 22351  019BA6  0FF7               	addlw	247
 22352  019BA8  6E0B               	movwf	(btemp+10)^0,c
 22353  019BAA  0EFE               	movlw	-2
 22354  019BAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22355  019BB2  0EFF               	movlw	255
 22356  019BB4  220C               	addwfc	(btemp+11)^0,f,c
 22357  019BB6  500C               	movf	(btemp+11)^0,w,c
 22358  019BB8  E104               	bnz	u6980
 22359  019BBA  0E05               	movlw	5
 22360  019BBC  5C0B               	subwf	(btemp+10)^0,w,c
 22361  019BBE  A0D8               	btfss	status,0,c
 22362  019BC0  D002               	goto	l8154
 22363  019BC2                     u6980:
 22364                           
 22365                           ;stkvar	_isspace$5815 @ sp[(-1)+0]
 22366  019BC2  0EFF               	movlw	-1
 22367  019BC4  6AE3               	clrf	plusw1,c
 22368  019BC6                     l8154:
 22369                           
 22370                           ;stkvar	_isspace$5815 @ sp[(-1)+0]
 22371  019BC6  0EFF               	movlw	-1
 22372  019BC8  50E3               	movf	plusw1,w,c
 22373  019BCA  6E01               	movwf	btemp^0,c
 22374  019BCC  6A02               	clrf	(btemp+1)^0,c
 22375                           
 22376                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22377  019BCE  52E5               	movf	postdec1,f,c
 22378  019BD0  52E5               	movf	postdec1,f,c
 22379  019BD2  52E5               	movf	postdec1,f,c
 22380  019BD4  0012               	return		;funcret
 22381  019BD6                     __end_of_isspace:
 22382                           	opt callstack 0
 22383                           
 22384 ;; *************** function _isdigit *****************
 22385 ;; Defined at:
 22386 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22387 ;; Parameters:    Size  Location     Type
 22388 ;;  c               2  [STACK] int 
 22389 ;; Auto vars:     Size  Location     Type
 22390 ;;		None
 22391 ;; Return value:  Size  Location     Type
 22392 ;;                  2  [STACK] int 
 22393 ;; Registers used:
 22394 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22395 ;; Tracked objects:
 22396 ;;		On entry : 0/0
 22397 ;;		On exit  : 0/0
 22398 ;;		Unchanged: 0/0
 22399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22404 ;;Total ram usage:        0 bytes
 22405 ;; Hardware stack levels used:    1
 22406 ;; Hardware stack levels required when called:   15
 22407 ;; This function calls:
 22408 ;;		Nothing
 22409 ;; This function is called by:
 22410 ;;		_vfpfcnvrt
 22411 ;;		_atoi
 22412 ;; This function uses a reentrant model
 22413 ;;
 22414                           
 22415                           	psect	text81
 22416  01A1FA                     __ptext81:
 22417                           	opt callstack 0
 22418  01A1FA                     _isdigit:
 22419                           	opt callstack 0
 22420                           
 22421                           ;stkvar	_c @ sp[(0)+-2]
 22422                           
 22423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22424                           ;incstack = 0
 22425 ;; hardware stack exceeded
 22426  01A1FA  0EFE               	movlw	-2
 22427  01A1FC  50E3               	movf	plusw1,w,c
 22428  01A1FE  0FD0               	addlw	208
 22429  01A200  6E0B               	movwf	(btemp+10)^0,c
 22430  01A202  0EFF               	movlw	-1
 22431  01A204  006F FF8C  F00C    	movff	plusw1,btemp+11
 22432  01A20A  0EFF               	movlw	255
 22433  01A20C  220C               	addwfc	(btemp+11)^0,f,c
 22434  01A20E  500C               	movf	(btemp+11)^0,w,c
 22435  01A210  E106               	bnz	u5820
 22436  01A212  0E0A               	movlw	10
 22437  01A214  5C0B               	subwf	(btemp+10)^0,w,c
 22438  01A216  B0D8               	btfsc	status,0,c
 22439  01A218  D002               	goto	u5820
 22440  01A21A  0E01               	movlw	1
 22441  01A21C  D001               	goto	u5830
 22442  01A21E                     u5820:
 22443  01A21E  0E00               	movlw	0
 22444  01A220                     u5830:
 22445  01A220  6E01               	movwf	btemp^0,c
 22446  01A222  6A02               	clrf	(btemp+1)^0,c
 22447                           
 22448                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22449  01A224  52E5               	movf	postdec1,f,c
 22450  01A226  52E5               	movf	postdec1,f,c
 22451  01A228  0012               	return		;funcret
 22452  01A22A                     __end_of_isdigit:
 22453                           	opt callstack 0
 22454                           
 22455 ;; *************** function _set_vterm *****************
 22456 ;; Defined at:
 22457 ;;		line 107 in file "mconfig.c"
 22458 ;; Parameters:    Size  Location     Type
 22459 ;;  vterm           1  [STACK] const unsigned char 
 22460 ;; Auto vars:     Size  Location     Type
 22461 ;;		None
 22462 ;; Return value:  Size  Location     Type
 22463 ;;                  1  [STACK] unsigned char 
 22464 ;; Registers used:
 22465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22466 ;; Tracked objects:
 22467 ;;		On entry : 0/3
 22468 ;;		On exit  : 0/0
 22469 ;;		Unchanged: 0/0
 22470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22475 ;;Total ram usage:        0 bytes
 22476 ;; Hardware stack levels used:    1
 22477 ;; Hardware stack levels required when called:   15
 22478 ;; This function calls:
 22479 ;;		Nothing
 22480 ;; This function is called by:
 22481 ;;		_main
 22482 ;;		_check_help
 22483 ;; This function uses a reentrant model
 22484 ;;
 22485                           
 22486                           	psect	text82
 22487  01A77A                     __ptext82:
 22488                           	opt callstack 0
 22489  01A77A                     _set_vterm:
 22490                           	opt callstack 15
 22491                           
 22492                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22493                           ;stkvar	_vterm @ sp[(0)+-1]
 22494                           
 22495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22496                           ;incstack = 0
 22497  01A77A  0EFF               	movlw	-1
 22498  01A77C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22499  01A782  0E03               	movlw	3
 22500  01A784  160C               	andwf	(btemp+11)^0,f,c
 22501  01A786  EE22  F11F         	lfsr	2,_D+288
 22502  01A78A  50DF               	movf	223,w,c
 22503  01A78C  180C               	xorwf	(btemp+11)^0,w,c
 22504  01A78E  0BFE               	andlw	-2
 22505  01A790  180C               	xorwf	(btemp+11)^0,w,c
 22506  01A792  6EDF               	movwf	223,c
 22507                           
 22508                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22509  01A794  52E5               	movf	postdec1,f,c
 22510  01A796  0012               	return		;funcret
 22511  01A798                     __end_of_set_vterm:
 22512                           	opt callstack 0
 22513                           
 22514 ;; *************** function _set_temp_display_help *****************
 22515 ;; Defined at:
 22516 ;;		line 211 in file "mconfig.c"
 22517 ;; Parameters:    Size  Location     Type
 22518 ;;  new_response    1  [STACK] const enum E16509
 22519 ;; Auto vars:     Size  Location     Type
 22520 ;;		None
 22521 ;; Return value:  Size  Location     Type
 22522 ;;                  1  [STACK] enum E16509
 22523 ;; Registers used:
 22524 ;;		wreg, fsr1l, fsr1h
 22525 ;; Tracked objects:
 22526 ;;		On entry : 0/2
 22527 ;;		On exit  : 3F/2
 22528 ;;		Unchanged: 0/0
 22529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22534 ;;Total ram usage:        0 bytes
 22535 ;; Hardware stack levels used:    1
 22536 ;; Hardware stack levels required when called:   15
 22537 ;; This function calls:
 22538 ;;		Nothing
 22539 ;; This function is called by:
 22540 ;;		_check_help
 22541 ;; This function uses a reentrant model
 22542 ;;
 22543                           
 22544                           	psect	text83
 22545  01A8DE                     __ptext83:
 22546                           	opt callstack 0
 22547  01A8DE                     _set_temp_display_help:
 22548                           	opt callstack 14
 22549                           
 22550                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22551                           
 22552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22553                           ;incstack = 0
 22554  01A8DE  0102               	movlb	2	; () banked
 22555  01A8E0  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 22556                           
 22557                           ; BSR set to: 2
 22558                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22559                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22560  01A8E2  0EFF               	movlw	-1
 22561  01A8E4  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 22562                           
 22563                           ; BSR set to: 2
 22564                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22565  01A8EA  52E5               	movf	postdec1,f,c
 22566  01A8EC  0012               	return		;funcret
 22567  01A8EE                     __end_of_set_temp_display_help:
 22568                           	opt callstack 0
 22569                           
 22570 ;; *************** function _set_display_info *****************
 22571 ;; Defined at:
 22572 ;;		line 200 in file "mconfig.c"
 22573 ;; Parameters:    Size  Location     Type
 22574 ;;  new_response    1  [STACK] const enum E16509
 22575 ;; Auto vars:     Size  Location     Type
 22576 ;;		None
 22577 ;; Return value:  Size  Location     Type
 22578 ;;                  1  [STACK] enum E16994
 22579 ;; Registers used:
 22580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22581 ;; Tracked objects:
 22582 ;;		On entry : 0/1
 22583 ;;		On exit  : 0/0
 22584 ;;		Unchanged: 0/0
 22585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22590 ;;Total ram usage:        0 bytes
 22591 ;; Hardware stack levels used:    1
 22592 ;; Hardware stack levels required when called:   16
 22593 ;; This function calls:
 22594 ;;		_TimerDone
 22595 ;; This function is called by:
 22596 ;;		_main
 22597 ;;		_check_help
 22598 ;; This function uses a reentrant model
 22599 ;;
 22600                           
 22601                           	psect	text84
 22602  01A798                     __ptext84:
 22603                           	opt callstack 0
 22604  01A798                     _set_display_info:
 22605                           	opt callstack 14
 22606                           
 22607                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22608                           
 22609                           ; BSR set to: 2
 22610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22611                           ;incstack = 0
 22612  01A798  0E07               	movlw	7
 22613  01A79A  6EE6               	movwf	postinc1,c
 22614  01A79C  ECD7  F0D1         	call	_TimerDone	;wreg free
 22615  01A7A0  5001               	movf	btemp^0,w,c
 22616  01A7A2  B4D8               	btfsc	status,2,c
 22617  01A7A4  D006               	goto	l1695
 22618                           
 22619                           ;mconfig.c: 205:   old_info = V.response.info;
 22620  01A7A6  0102               	movlb	2	; () banked
 22621  01A7A8  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 22622                           
 22623                           ; BSR set to: 2
 22624                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22625                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22626  01A7AA  0EFF               	movlw	-1
 22627  01A7AC  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 22628  01A7B2                     l1695:
 22629                           
 22630                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22631  01A7B2  52E5               	movf	postdec1,f,c
 22632  01A7B4  0012               	return		;funcret
 22633  01A7B6                     __end_of_set_display_info:
 22634                           	opt callstack 0
 22635                           
 22636 ;; *************** function _mode_lamp_dim *****************
 22637 ;; Defined at:
 22638 ;;		line 13 in file "mconfig.c"
 22639 ;; Parameters:    Size  Location     Type
 22640 ;;  level           2  [STACK] const unsigned short 
 22641 ;; Auto vars:     Size  Location     Type
 22642 ;;		None
 22643 ;; Return value:  Size  Location     Type
 22644 ;;                  1  [STACK] void 
 22645 ;; Registers used:
 22646 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22647 ;; Tracked objects:
 22648 ;;		On entry : 0/2
 22649 ;;		On exit  : 0/0
 22650 ;;		Unchanged: 0/0
 22651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22656 ;;Total ram usage:        0 bytes
 22657 ;; Hardware stack levels used:    1
 22658 ;; Hardware stack levels required when called:   16
 22659 ;; This function calls:
 22660 ;;		_PWM8_LoadDutyValue
 22661 ;; This function is called by:
 22662 ;;		_main
 22663 ;;		_check_help
 22664 ;; This function uses a reentrant model
 22665 ;;
 22666                           
 22667                           	psect	text85
 22668  01A826                     __ptext85:
 22669                           	opt callstack 0
 22670  01A826                     _mode_lamp_dim:
 22671                           	opt callstack 14
 22672                           
 22673                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22674                           ;stkvar	_level @ sp[(0)+-2]
 22675                           
 22676                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22677                           ;incstack = 0
 22678  01A826  0EFE               	movlw	-2
 22679  01A828  006F FF8F FFE6     	movff	plusw1,postinc1
 22680  01A82E  006F FF8F FFE6     	movff	plusw1,postinc1
 22681  01A834  EC55  F0CF         	call	_PWM8_LoadDutyValue	;wreg free
 22682                           
 22683                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22684  01A838  52E5               	movf	postdec1,f,c
 22685  01A83A  52E5               	movf	postdec1,f,c
 22686  01A83C  0012               	return		;funcret
 22687  01A83E                     __end_of_mode_lamp_dim:
 22688                           	opt callstack 0
 22689                           
 22690 ;; *************** function _mode_lamp_bright *****************
 22691 ;; Defined at:
 22692 ;;		line 18 in file "mconfig.c"
 22693 ;; Parameters:    Size  Location     Type
 22694 ;;		None
 22695 ;; Auto vars:     Size  Location     Type
 22696 ;;		None
 22697 ;; Return value:  Size  Location     Type
 22698 ;;                  1  [STACK] void 
 22699 ;; Registers used:
 22700 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22701 ;; Tracked objects:
 22702 ;;		On entry : 0/0
 22703 ;;		On exit  : 0/0
 22704 ;;		Unchanged: 0/0
 22705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22710 ;;Total ram usage:        0 bytes
 22711 ;; Hardware stack levels used:    1
 22712 ;; Hardware stack levels required when called:   16
 22713 ;; This function calls:
 22714 ;;		_PWM8_LoadDutyValue
 22715 ;; This function is called by:
 22716 ;;		_check_help
 22717 ;; This function uses a reentrant model
 22718 ;;
 22719                           
 22720                           	psect	text86
 22721  01A8FC                     __ptext86:
 22722                           	opt callstack 0
 22723  01A8FC                     _mode_lamp_bright:
 22724                           	opt callstack 13
 22725                           
 22726                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22727                           
 22728                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22729                           ;incstack = 0
 22730  01A8FC  0E2C               	movlw	44
 22731  01A8FE  6EE6               	movwf	postinc1,c
 22732  01A900  0E01               	movlw	1
 22733  01A902  6EE6               	movwf	postinc1,c
 22734  01A904  EC55  F0CF         	call	_PWM8_LoadDutyValue	;wreg free
 22735                           
 22736                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22737  01A908  0012               	return		;funcret
 22738  01A90A                     __end_of_mode_lamp_bright:
 22739                           	opt callstack 0
 22740                           
 22741 ;; *************** function _PWM8_LoadDutyValue *****************
 22742 ;; Defined at:
 22743 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22744 ;; Parameters:    Size  Location     Type
 22745 ;;  dutyValue       2  [STACK] unsigned short 
 22746 ;; Auto vars:     Size  Location     Type
 22747 ;;		None
 22748 ;; Return value:  Size  Location     Type
 22749 ;;                  1  [STACK] void 
 22750 ;; Registers used:
 22751 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22752 ;; Tracked objects:
 22753 ;;		On entry : 0/2
 22754 ;;		On exit  : 0/0
 22755 ;;		Unchanged: 0/0
 22756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22761 ;;Total ram usage:        0 bytes
 22762 ;; Hardware stack levels used:    1
 22763 ;; Hardware stack levels required when called:   15
 22764 ;; This function calls:
 22765 ;;		Nothing
 22766 ;; This function is called by:
 22767 ;;		_mode_lamp_dim
 22768 ;;		_mode_lamp_bright
 22769 ;; This function uses a reentrant model
 22770 ;;
 22771                           
 22772                           	psect	text87
 22773  019EAA                     __ptext87:
 22774                           	opt callstack 0
 22775  019EAA                     _PWM8_LoadDutyValue:
 22776                           	opt callstack 14
 22777                           
 22778                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22779                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22780                           
 22781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22782                           ;incstack = 0
 22783  019EAA  0EFE               	movlw	-2
 22784  019EAC  006F FF8C  F00B    	movff	plusw1,btemp+10
 22785  019EB2  0EFF               	movlw	-1
 22786  019EB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22787  019EBA  90D8               	bcf	status,0,c
 22788  019EBC  320C               	rrcf	(btemp+11)^0,f,c
 22789  019EBE  320B               	rrcf	(btemp+10)^0,f,c
 22790  019EC0  90D8               	bcf	status,0,c
 22791  019EC2  320C               	rrcf	(btemp+11)^0,f,c
 22792  019EC4  320B               	rrcf	(btemp+10)^0,f,c
 22793  019EC6  500B               	movf	(btemp+10)^0,w,c
 22794  019EC8  6E61               	movwf	97,c	;volatile
 22795                           
 22796                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22797                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22798  019ECA  0EFE               	movlw	-2
 22799  019ECC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22800  019ED2  0E03               	movlw	3
 22801  019ED4  160C               	andwf	(btemp+11)^0,f,c
 22802  019ED6  0E06               	movlw	6
 22803  019ED8  6E01               	movwf	btemp^0,c
 22804  019EDA                     u8625:
 22805  019EDA  90D8               	bcf	status,0,c
 22806  019EDC  360C               	rlcf	(btemp+11)^0,f,c
 22807  019EDE  2E01               	decfsz	btemp^0,f,c
 22808  019EE0  D7FC               	goto	u8625
 22809  019EE2  500C               	movf	(btemp+11)^0,w,c
 22810  019EE4  6E60               	movwf	96,c	;volatile
 22811                           
 22812                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22813  019EE6  52E5               	movf	postdec1,f,c
 22814  019EE8  52E5               	movf	postdec1,f,c
 22815  019EEA  0012               	return		;funcret
 22816  019EEC                     __end_of_PWM8_LoadDutyValue:
 22817                           	opt callstack 0
 22818                           
 22819 ;; *************** function _help_button *****************
 22820 ;; Defined at:
 22821 ;;		line 26 in file "mconfig.c"
 22822 ;; Parameters:    Size  Location     Type
 22823 ;;		None
 22824 ;; Auto vars:     Size  Location     Type
 22825 ;;		None
 22826 ;; Return value:  Size  Location     Type
 22827 ;;                  1  [STACK] _Bool 
 22828 ;; Registers used:
 22829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22830 ;; Tracked objects:
 22831 ;;		On entry : 0/2
 22832 ;;		On exit  : 0/0
 22833 ;;		Unchanged: 0/0
 22834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22839 ;;Total ram usage:        0 bytes
 22840 ;; Hardware stack levels used:    1
 22841 ;; Hardware stack levels required when called:   16
 22842 ;; This function calls:
 22843 ;;		_StartTimer
 22844 ;;		_TimerDone
 22845 ;; This function is called by:
 22846 ;;		_check_help
 22847 ;; This function uses a reentrant model
 22848 ;;
 22849                           
 22850                           	psect	text88
 22851  01A02A                     __ptext88:
 22852                           	opt callstack 0
 22853  01A02A                     _help_button:
 22854                           	opt callstack 13
 22855                           
 22856                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22857                           
 22858                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22859                           ;incstack = 0
 22860  01A02A  B0CB               	btfsc	203,0,c	;volatile
 22861  01A02C  D00C               	goto	l1638
 22862                           
 22863                           ;mconfig.c: 29:   V.help = 1;
 22864  01A02E  0102               	movlb	2	; () banked
 22865  01A030  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22866                           
 22867                           ; BSR set to: 2
 22868                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22869  01A032  0E08               	movlw	8
 22870  01A034  6EE6               	movwf	postinc1,c
 22871  01A036  ECD7  F0D1         	call	_TimerDone	;wreg free
 22872  01A03A  5001               	movf	btemp^0,w,c
 22873  01A03C  B4D8               	btfsc	status,2,c
 22874  01A03E  D003               	goto	l1638
 22875                           
 22876                           ;mconfig.c: 31:    return 1;
 22877  01A040  0E01               	movlw	1
 22878  01A042  6E01               	movwf	btemp^0,c
 22879  01A044  0012               	return	
 22880  01A046                     l1638:
 22881                           
 22882                           ;mconfig.c: 34:  if (!V.help)
 22883  01A046  0102               	movlb	2	; () banked
 22884  01A048  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22885  01A04A  D008               	goto	l9740
 22886                           
 22887                           ; BSR set to: 2
 22888                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22889  01A04C  0E2C               	movlw	44
 22890  01A04E  6EE6               	movwf	postinc1,c
 22891  01A050  0E01               	movlw	1
 22892  01A052  6EE6               	movwf	postinc1,c
 22893  01A054  0E08               	movlw	8
 22894  01A056  6EE6               	movwf	postinc1,c
 22895  01A058  EC76  F0CF         	call	_StartTimer	;wreg free
 22896  01A05C                     l9740:
 22897                           
 22898                           ;mconfig.c: 37:  return 0;
 22899  01A05C  0E00               	movlw	0
 22900  01A05E  6E01               	movwf	btemp^0,c
 22901                           
 22902                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22903  01A060  0012               	return		;funcret
 22904  01A062                     __end_of_help_button:
 22905                           	opt callstack 0
 22906                           
 22907 ;; *************** function _TimerDone *****************
 22908 ;; Defined at:
 22909 ;;		line 20 in file "timers.c"
 22910 ;; Parameters:    Size  Location     Type
 22911 ;;  timer           1  [STACK] const unsigned char 
 22912 ;; Auto vars:     Size  Location     Type
 22913 ;;		None
 22914 ;; Return value:  Size  Location     Type
 22915 ;;                  1  [STACK] _Bool 
 22916 ;; Registers used:
 22917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22918 ;; Tracked objects:
 22919 ;;		On entry : 0/1
 22920 ;;		On exit  : 0/0
 22921 ;;		Unchanged: 0/0
 22922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22927 ;;Total ram usage:        0 bytes
 22928 ;; Hardware stack levels used:    1
 22929 ;; Hardware stack levels required when called:   15
 22930 ;; This function calls:
 22931 ;;		Nothing
 22932 ;; This function is called by:
 22933 ;;		_main
 22934 ;;		_WaitMs
 22935 ;;		_help_button
 22936 ;;		_check_help
 22937 ;;		_set_display_info
 22938 ;; This function uses a reentrant model
 22939 ;;
 22940                           
 22941                           	psect	text89
 22942  01A3AE                     __ptext89:
 22943                           	opt callstack 0
 22944  01A3AE                     _TimerDone:
 22945                           	opt callstack 14
 22946                           
 22947                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22948                           ;incstack = 0
 22949  01A3AE  0004               	clrwdt		;# 
 22950                           
 22951                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22952                           ;stkvar	_timer @ sp[(0)+-1]
 22953  01A3B0  0EFF               	movlw	-1
 22954  01A3B2  50E3               	movf	plusw1,w,c
 22955  01A3B4  0D02               	mullw	2
 22956  01A3B6  0EDF               	movlw	low _tickCount
 22957  01A3B8  24F3               	addwf	243,w,c
 22958  01A3BA  6ED9               	movwf	fsr2l,c
 22959  01A3BC  0E01               	movlw	high _tickCount
 22960  01A3BE  20F4               	addwfc	prodh,w,c
 22961  01A3C0  6EDA               	movwf	fsr2h,c
 22962  01A3C2  50DE               	movf	postinc2,w,c
 22963  01A3C4  10DE               	iorwf	postinc2,w,c
 22964  01A3C6  A4D8               	btfss	status,2,c
 22965  01A3C8  D002               	goto	l9062
 22966                           
 22967                           ;timers.c: 24:   return 1;
 22968  01A3CA  0E01               	movlw	1
 22969  01A3CC  D001               	goto	L24
 22970  01A3CE                     l9062:
 22971                           
 22972                           ;timers.c: 26:  return 0;
 22973  01A3CE  0E00               	movlw	0
 22974  01A3D0                     L24:
 22975  01A3D0  6E01               	movwf	btemp^0,c
 22976                           
 22977                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22978  01A3D2  52E5               	movf	postdec1,f,c
 22979  01A3D4  0012               	return		;funcret
 22980  01A3D6                     __end_of_TimerDone:
 22981                           	opt callstack 0
 22982                           
 22983 ;; *************** function _StartTimer *****************
 22984 ;; Defined at:
 22985 ;;		line 12 in file "timers.c"
 22986 ;; Parameters:    Size  Location     Type
 22987 ;;  timer           1  [STACK] const unsigned char 
 22988 ;;  count           2  [STACK] const unsigned short 
 22989 ;; Auto vars:     Size  Location     Type
 22990 ;;		None
 22991 ;; Return value:  Size  Location     Type
 22992 ;;                  1  [STACK] void 
 22993 ;; Registers used:
 22994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22995 ;; Tracked objects:
 22996 ;;		On entry : 0/0
 22997 ;;		On exit  : 0/0
 22998 ;;		Unchanged: 0/0
 22999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23004 ;;Total ram usage:        0 bytes
 23005 ;; Hardware stack levels used:    1
 23006 ;; Hardware stack levels required when called:   15
 23007 ;; This function calls:
 23008 ;;		Nothing
 23009 ;; This function is called by:
 23010 ;;		_main
 23011 ;;		_WaitMs
 23012 ;;		_help_button
 23013 ;;		_check_help
 23014 ;;		_calc_bsoc
 23015 ;; This function uses a reentrant model
 23016 ;;
 23017                           
 23018                           	psect	text90
 23019  019EEC                     __ptext90:
 23020                           	opt callstack 0
 23021  019EEC                     _StartTimer:
 23022                           	opt callstack 0
 23023                           
 23024                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 23025                           ;stkvar	_count @ sp[(0)+-3]
 23026                           
 23027                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23028                           ;incstack = 0
 23029 ;; hardware stack exceeded
 23030  019EEC  0EFD               	movlw	-3
 23031  019EEE  006F FF8C  F00B    	movff	plusw1,btemp+10
 23032  019EF4  0EFE               	movlw	-2
 23033  019EF6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23034  019EFC  90D8               	bcf	status,0,c
 23035  019EFE  340B               	rlcf	(btemp+10)^0,w,c
 23036  019F00  6E09               	movwf	(btemp+8)^0,c
 23037  019F02  340C               	rlcf	(btemp+11)^0,w,c
 23038  019F04  6E0A               	movwf	(btemp+9)^0,c
 23039                           
 23040                           ;stkvar	_timer @ sp[(0)+-1]
 23041  019F06  0EFF               	movlw	-1
 23042  019F08  50E3               	movf	plusw1,w,c
 23043  019F0A  0D02               	mullw	2
 23044  019F0C  0EDF               	movlw	low _tickCount
 23045  019F0E  24F3               	addwf	243,w,c
 23046  019F10  6ED9               	movwf	fsr2l,c
 23047  019F12  0E01               	movlw	high _tickCount
 23048  019F14  20F4               	addwfc	prodh,w,c
 23049  019F16  6EDA               	movwf	fsr2h,c
 23050  019F18  0060  F027  FFDE   	movff	btemp+8,postinc2
 23051  019F1E  0060  F02B  FFDD   	movff	btemp+9,postdec2
 23052                           
 23053                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 23054  019F24  52E5               	movf	postdec1,f,c
 23055  019F26  52E5               	movf	postdec1,f,c
 23056  019F28  52E5               	movf	postdec1,f,c
 23057  019F2A  0012               	return		;funcret
 23058  019F2C                     __end_of_StartTimer:
 23059                           	opt callstack 0
 23060                           
 23061 ;; *************** function _display_info *****************
 23062 ;; Defined at:
 23063 ;;		line 190 in file "mconfig.c"
 23064 ;; Parameters:    Size  Location     Type
 23065 ;;		None
 23066 ;; Auto vars:     Size  Location     Type
 23067 ;;		None
 23068 ;; Return value:  Size  Location     Type
 23069 ;;                  1  [STACK] enum E16509
 23070 ;; Registers used:
 23071 ;;		btemp
 23072 ;; Tracked objects:
 23073 ;;		On entry : 0/2
 23074 ;;		On exit  : 0/0
 23075 ;;		Unchanged: 0/0
 23076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23081 ;;Total ram usage:        0 bytes
 23082 ;; Hardware stack levels used:    1
 23083 ;; Hardware stack levels required when called:   15
 23084 ;; This function calls:
 23085 ;;		Nothing
 23086 ;; This function is called by:
 23087 ;;		_check_help
 23088 ;; This function uses a reentrant model
 23089 ;;
 23090                           
 23091                           	psect	text91
 23092  01A96A                     __ptext91:
 23093                           	opt callstack 0
 23094  01A96A                     _display_info:
 23095                           	opt callstack 14
 23096                           
 23097                           ;mconfig.c: 192:  return V.response.info;
 23098                           
 23099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23100                           ;incstack = 0
 23101  01A96A  0060  FA8C  F001   	movff	_V+163,btemp	;volatile
 23102                           
 23103                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23104  01A970  0012               	return		;funcret
 23105  01A972                     __end_of_display_info:
 23106                           	opt callstack 0
 23107                           
 23108 ;; *************** function _display_help *****************
 23109 ;; Defined at:
 23110 ;;		line 195 in file "mconfig.c"
 23111 ;; Parameters:    Size  Location     Type
 23112 ;;		None
 23113 ;; Auto vars:     Size  Location     Type
 23114 ;;		None
 23115 ;; Return value:  Size  Location     Type
 23116 ;;                  1  [STACK] enum E16509
 23117 ;; Registers used:
 23118 ;;		btemp
 23119 ;; Tracked objects:
 23120 ;;		On entry : 3F/2
 23121 ;;		On exit  : 0/0
 23122 ;;		Unchanged: 0/0
 23123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23128 ;;Total ram usage:        0 bytes
 23129 ;; Hardware stack levels used:    1
 23130 ;; Hardware stack levels required when called:   15
 23131 ;; This function calls:
 23132 ;;		Nothing
 23133 ;; This function is called by:
 23134 ;;		_check_help
 23135 ;; This function uses a reentrant model
 23136 ;;
 23137                           
 23138                           	psect	text92
 23139  01A972                     __ptext92:
 23140                           	opt callstack 0
 23141  01A972                     _display_help:
 23142                           	opt callstack 14
 23143                           
 23144                           ;mconfig.c: 197:  return V.response.help_temp;
 23145                           
 23146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23147                           ;incstack = 0
 23148  01A972  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 23149                           
 23150                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23151  01A978  0012               	return		;funcret
 23152  01A97A                     __end_of_display_help:
 23153                           	opt callstack 0
 23154                           
 23155 ;; *************** function _check_enter_button *****************
 23156 ;; Defined at:
 23157 ;;		line 42 in file "hid.c"
 23158 ;; Parameters:    Size  Location     Type
 23159 ;;  h               1  [STACK] PTR struct H_data
 23160 ;;		 -> H(7), 
 23161 ;; Auto vars:     Size  Location     Type
 23162 ;;		None
 23163 ;; Return value:  Size  Location     Type
 23164 ;;                  1  [STACK] _Bool 
 23165 ;; Registers used:
 23166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23167 ;; Tracked objects:
 23168 ;;		On entry : 0/1
 23169 ;;		On exit  : 0/0
 23170 ;;		Unchanged: 0/0
 23171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23176 ;;Total ram usage:        0 bytes
 23177 ;; Hardware stack levels used:    1
 23178 ;; Hardware stack levels required when called:   15
 23179 ;; This function calls:
 23180 ;;		Nothing
 23181 ;; This function is called by:
 23182 ;;		_main
 23183 ;; This function uses a reentrant model
 23184 ;;
 23185                           
 23186                           	psect	text93
 23187  019F2C                     __ptext93:
 23188                           	opt callstack 0
 23189  019F2C                     _check_enter_button:
 23190                           	opt callstack 15
 23191                           
 23192                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23193                           ;stkvar	_h @ sp[(0)+-1]
 23194                           
 23195                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23196                           ;incstack = 0
 23197  019F2C  0EFF               	movlw	-1
 23198  019F2E  50E3               	movf	plusw1,w,c
 23199  019F30  6ED9               	movwf	fsr2l,c
 23200  019F32  6ADA               	clrf	fsr2h,c
 23201  019F34  0E04               	movlw	4
 23202  019F36  26D9               	addwf	fsr2l,f,c
 23203  019F38  50DF               	movf	indf2,w,c
 23204  019F3A  A4D8               	btfss	status,2,c
 23205  019F3C  D013               	goto	l10356
 23206                           
 23207                           ;stkvar	_h @ sp[(0)+-1]
 23208  019F3E  0EFF               	movlw	-1
 23209  019F40  50E3               	movf	plusw1,w,c
 23210  019F42  6ED9               	movwf	fsr2l,c
 23211  019F44  6ADA               	clrf	fsr2h,c
 23212  019F46  0E05               	movlw	5
 23213  019F48  26D9               	addwf	fsr2l,f,c
 23214  019F4A  50DF               	movf	indf2,w,c
 23215  019F4C  A4D8               	btfss	status,2,c
 23216  019F4E  D00A               	goto	l10356
 23217                           
 23218                           ;hid.c: 45:   h->wait_enter = 1;
 23219                           ;stkvar	_h @ sp[(0)+-1]
 23220  019F50  0EFF               	movlw	-1
 23221  019F52  50E3               	movf	plusw1,w,c
 23222  019F54  6ED9               	movwf	fsr2l,c
 23223  019F56  6ADA               	clrf	fsr2h,c
 23224  019F58  0E04               	movlw	4
 23225  019F5A  26D9               	addwf	fsr2l,f,c
 23226  019F5C  0E01               	movlw	1
 23227  019F5E  6EDF               	movwf	indf2,c
 23228                           
 23229                           ;hid.c: 46:   return 1;
 23230  019F60  0E01               	movlw	1
 23231  019F62  D001               	goto	L25
 23232  019F64                     l10356:
 23233                           
 23234                           ;hid.c: 48:  return 0;
 23235  019F64  0E00               	movlw	0
 23236  019F66                     L25:
 23237  019F66  6E01               	movwf	btemp^0,c
 23238                           
 23239                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23240  019F68  52E5               	movf	postdec1,f,c
 23241  019F6A  0012               	return		;funcret
 23242  019F6C                     __end_of_check_enter_button:
 23243                           	opt callstack 0
 23244                           
 23245 ;; *************** function _check_adc_scan *****************
 23246 ;; Defined at:
 23247 ;;		line 56 in file "daq.c"
 23248 ;; Parameters:    Size  Location     Type
 23249 ;;		None
 23250 ;; Auto vars:     Size  Location     Type
 23251 ;;		None
 23252 ;; Return value:  Size  Location     Type
 23253 ;;                  1  [STACK] _Bool 
 23254 ;; Registers used:
 23255 ;;		btemp
 23256 ;; Tracked objects:
 23257 ;;		On entry : 0/1
 23258 ;;		On exit  : 0/0
 23259 ;;		Unchanged: 0/0
 23260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23265 ;;Total ram usage:        0 bytes
 23266 ;; Hardware stack levels used:    1
 23267 ;; Hardware stack levels required when called:   15
 23268 ;; This function calls:
 23269 ;;		Nothing
 23270 ;; This function is called by:
 23271 ;;		_main
 23272 ;; This function uses a reentrant model
 23273 ;;
 23274                           
 23275                           	psect	text94
 23276  01A97A                     __ptext94:
 23277                           	opt callstack 0
 23278  01A97A                     _check_adc_scan:
 23279                           	opt callstack 15
 23280                           
 23281                           ;daq.c: 58:  return R.done;
 23282                           
 23283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23284                           ;incstack = 0
 23285  01A97A  0060  F344  F001   	movff	_R+39,btemp	;volatile
 23286                           
 23287                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23288  01A980  0012               	return		;funcret
 23289  01A982                     __end_of_check_adc_scan:
 23290                           	opt callstack 0
 23291                           
 23292 ;; *************** function _calc_model_data *****************
 23293 ;; Defined at:
 23294 ;;		line 56 in file "mbmc.c"
 23295 ;; Parameters:    Size  Location     Type
 23296 ;;		None
 23297 ;; Auto vars:     Size  Location     Type
 23298 ;;		None
 23299 ;; Return value:  Size  Location     Type
 23300 ;;                  1  [STACK] void 
 23301 ;; Registers used:
 23302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23303 ;; Tracked objects:
 23304 ;;		On entry : 0/1
 23305 ;;		On exit  : 3F/1
 23306 ;;		Unchanged: 0/0
 23307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23312 ;;Total ram usage:        0 bytes
 23313 ;; Hardware stack levels used:    1
 23314 ;; Hardware stack levels required when called:   18
 23315 ;; This function calls:
 23316 ;;		___fladd
 23317 ;;		___flmul
 23318 ;;		___flsub
 23319 ;;		_lp_filter
 23320 ;;		_start_bsoc
 23321 ;;		_stop_bsoc
 23322 ;; This function is called by:
 23323 ;;		_main
 23324 ;; This function uses a reentrant model
 23325 ;;
 23326                           
 23327                           	psect	text95
 23328  015426                     __ptext95:
 23329                           	opt callstack 0
 23330  015426                     _calc_model_data:
 23331                           	opt callstack 12
 23332                           
 23333                           ;mbmc.c: 58:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 59:  stop_bsoc();
 23334                           
 23335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23336                           ;incstack = 0
 23337  015426  ECD2  F0D4         	call	_stop_bsoc	;wreg free
 23338                           
 23339                           ; BSR set to: 57
 23340                           ;mbmc.c: 61:  if (!V.calib) {
 23341  01542A  0102               	movlb	2	; () banked
 23342  01542C  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 23343  01542E  A4D8               	btfss	status,2,c
 23344  015430  D1C5               	goto	l10256
 23345                           
 23346                           ; BSR set to: 2
 23347                           ;mbmc.c: 62:   C.c_bat = C.calc[C_BATT];
 23348  015432  C100  F144         	movff	_C,_C+68	;volatile
 23349  015436  C101  F145         	movff	_C+1,_C+69	;volatile
 23350  01543A  C102  F146         	movff	_C+2,_C+70	;volatile
 23351  01543E  C103  F147         	movff	_C+3,_C+71	;volatile
 23352                           
 23353                           ; BSR set to: 2
 23354                           ;mbmc.c: 63:   C.bc_ror = C.c_bat - bcror;
 23355  015442  0060  F1D3  FFE6   	movff	calc_model_data@bcror,postinc1
 23356  015448  0060  F1D7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 23357  01544E  0060  F1DB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 23358  015454  0060  F1DF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 23359  01545A  0060  F513  FFE6   	movff	_C+68,postinc1
 23360  015460  0060  F517  FFE6   	movff	_C+69,postinc1
 23361  015466  0060  F51B  FFE6   	movff	_C+70,postinc1
 23362  01546C  0060  F51F  FFE6   	movff	_C+71,postinc1
 23363  015472  ECA7  F0CE         	call	___flsub	;wreg free
 23364  015476  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 23365  01547C  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 23366  015482  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 23367  015488  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 23368                           
 23369                           ;mbmc.c: 64:   bcror = C.c_bat;
 23370  01548E  C144  F074         	movff	_C+68,calc_model_data@bcror	;volatile
 23371  015492  C145  F075         	movff	_C+69,calc_model_data@bcror+1	;volatile
 23372  015496  C146  F076         	movff	_C+70,calc_model_data@bcror+2	;volatile
 23373  01549A  C147  F077         	movff	_C+71,calc_model_data@bcror+3	;volatile
 23374                           
 23375                           ;mbmc.c: 65:   C.c_pv = C.calc[C_PV];
 23376  01549E  C104  F148         	movff	_C+4,_C+72	;volatile
 23377  0154A2  C105  F149         	movff	_C+5,_C+73	;volatile
 23378  0154A6  C106  F14A         	movff	_C+6,_C+74	;volatile
 23379  0154AA  C107  F14B         	movff	_C+7,_C+75	;volatile
 23380                           
 23381                           ;mbmc.c: 66:   C.v_bat = C.calc[V_BAT];
 23382  0154AE  C110  F154         	movff	_C+16,_C+84	;volatile
 23383  0154B2  C111  F155         	movff	_C+17,_C+85	;volatile
 23384  0154B6  C112  F156         	movff	_C+18,_C+86	;volatile
 23385  0154BA  C113  F157         	movff	_C+19,_C+87	;volatile
 23386                           
 23387                           ;mbmc.c: 67:   C.bv_ror = C.v_bat - bvror;
 23388  0154BE  0060  F1E3  FFE6   	movff	calc_model_data@bvror,postinc1
 23389  0154C4  0060  F1E7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 23390  0154CA  0060  F1EB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 23391  0154D0  0060  F1EF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 23392  0154D6  0060  F553  FFE6   	movff	_C+84,postinc1
 23393  0154DC  0060  F557  FFE6   	movff	_C+85,postinc1
 23394  0154E2  0060  F55B  FFE6   	movff	_C+86,postinc1
 23395  0154E8  0060  F55F  FFE6   	movff	_C+87,postinc1
 23396  0154EE  ECA7  F0CE         	call	___flsub	;wreg free
 23397  0154F2  0060  F004  F168   	movff	btemp,_C+104	;volatile
 23398  0154F8  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 23399  0154FE  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 23400  015504  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 23401                           
 23402                           ;mbmc.c: 68:   bvror = C.v_bat;
 23403  01550A  C154  F078         	movff	_C+84,calc_model_data@bvror	;volatile
 23404  01550E  C155  F079         	movff	_C+85,calc_model_data@bvror+1	;volatile
 23405  015512  C156  F07A         	movff	_C+86,calc_model_data@bvror+2	;volatile
 23406  015516  C157  F07B         	movff	_C+87,calc_model_data@bvror+3	;volatile
 23407                           
 23408                           ;mbmc.c: 69:   C.v_pv = C.calc[V_PV];
 23409  01551A  C114  F150         	movff	_C+20,_C+80	;volatile
 23410  01551E  C115  F151         	movff	_C+21,_C+81	;volatile
 23411  015522  C116  F152         	movff	_C+22,_C+82	;volatile
 23412  015526  C117  F153         	movff	_C+23,_C+83	;volatile
 23413                           
 23414                           ;mbmc.c: 70:   C.v_cc = C.calc[V_CC];
 23415  01552A  C108  F14C         	movff	_C+8,_C+76	;volatile
 23416  01552E  C109  F14D         	movff	_C+9,_C+77	;volatile
 23417  015532  C10A  F14E         	movff	_C+10,_C+78	;volatile
 23418  015536  C10B  F14F         	movff	_C+11,_C+79	;volatile
 23419                           
 23420                           ;mbmc.c: 71:   C.v_inverter = C.calc[V_INVERTER];
 23421  01553A  C130  F164         	movff	_C+48,_C+100	;volatile
 23422  01553E  C131  F165         	movff	_C+49,_C+101	;volatile
 23423  015542  C132  F166         	movff	_C+50,_C+102	;volatile
 23424  015546  C133  F167         	movff	_C+51,_C+103	;volatile
 23425                           
 23426                           ;mbmc.c: 72:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 23427  01554A  0E01               	movlw	1
 23428  01554C  6EE6               	movwf	postinc1,c
 23429  01554E  0E10               	movlw	16
 23430  015550  6EE6               	movwf	postinc1,c
 23431  015552  0060  F403  FFE6   	movff	_C,postinc1
 23432  015558  0060  F407  FFE6   	movff	_C+1,postinc1
 23433  01555E  0060  F40B  FFE6   	movff	_C+2,postinc1
 23434  015564  0060  F40F  FFE6   	movff	_C+3,postinc1
 23435  01556A  0060  F413  FFE6   	movff	_C+4,postinc1
 23436  015570  0060  F417  FFE6   	movff	_C+5,postinc1
 23437  015576  0060  F41B  FFE6   	movff	_C+6,postinc1
 23438  01557C  0060  F41F  FFE6   	movff	_C+7,postinc1
 23439  015582  ECA7  F0CE         	call	___flsub	;wreg free
 23440  015586  0060  F007  FFE6   	movff	btemp,postinc1
 23441  01558C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23442  015592  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23443  015598  0060  F013  FFE6   	movff	btemp+3,postinc1
 23444  01559E  ECC4  F0B9         	call	_lp_filter	;wreg free
 23445  0155A2  0060  F004  F140   	movff	btemp,_C+64	;volatile
 23446  0155A8  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 23447  0155AE  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 23448  0155B4  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 23449                           
 23450                           ;mbmc.c: 73:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 23451  0155BA  0E01               	movlw	1
 23452  0155BC  6EE6               	movwf	postinc1,c
 23453  0155BE  0E11               	movlw	17
 23454  0155C0  6EE6               	movwf	postinc1,c
 23455  0155C2  0060  F553  FFE6   	movff	_C+84,postinc1
 23456  0155C8  0060  F557  FFE6   	movff	_C+85,postinc1
 23457  0155CE  0060  F55B  FFE6   	movff	_C+86,postinc1
 23458  0155D4  0060  F55F  FFE6   	movff	_C+87,postinc1
 23459  0155DA  0060  F503  FFE6   	movff	_C+64,postinc1
 23460  0155E0  0060  F507  FFE6   	movff	_C+65,postinc1
 23461  0155E6  0060  F50B  FFE6   	movff	_C+66,postinc1
 23462  0155EC  0060  F50F  FFE6   	movff	_C+67,postinc1
 23463  0155F2  ECAD  F095         	call	___flmul	;wreg free
 23464  0155F6  0060  F007  FFE6   	movff	btemp,postinc1
 23465  0155FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23466  015602  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23467  015608  0060  F013  FFE6   	movff	btemp+3,postinc1
 23468  01560E  ECC4  F0B9         	call	_lp_filter	;wreg free
 23469  015612  0060  F004  F170   	movff	btemp,_C+112	;volatile
 23470  015618  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 23471  01561E  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 23472  015624  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 23473                           
 23474                           ;mbmc.c: 74:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 23475  01562A  0E01               	movlw	1
 23476  01562C  6EE6               	movwf	postinc1,c
 23477  01562E  0E12               	movlw	18
 23478  015630  6EE6               	movwf	postinc1,c
 23479  015632  0060  F543  FFE6   	movff	_C+80,postinc1
 23480  015638  0060  F547  FFE6   	movff	_C+81,postinc1
 23481  01563E  0060  F54B  FFE6   	movff	_C+82,postinc1
 23482  015644  0060  F54F  FFE6   	movff	_C+83,postinc1
 23483  01564A  0060  F523  FFE6   	movff	_C+72,postinc1
 23484  015650  0060  F527  FFE6   	movff	_C+73,postinc1
 23485  015656  0060  F52B  FFE6   	movff	_C+74,postinc1
 23486  01565C  0060  F52F  FFE6   	movff	_C+75,postinc1
 23487  015662  ECAD  F095         	call	___flmul	;wreg free
 23488  015666  0060  F007  FFE6   	movff	btemp,postinc1
 23489  01566C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23490  015672  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23491  015678  0060  F013  FFE6   	movff	btemp+3,postinc1
 23492  01567E  ECC4  F0B9         	call	_lp_filter	;wreg free
 23493  015682  0060  F004  F178   	movff	btemp,_C+120	;volatile
 23494  015688  0060  F008  F179   	movff	btemp+1,_C+121	;volatile
 23495  01568E  0060  F00C  F17A   	movff	btemp+2,_C+122	;volatile
 23496  015694  0060  F010  F17B   	movff	btemp+3,_C+123	;volatile
 23497                           
 23498                           ;mbmc.c: 75:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 23499  01569A  0E01               	movlw	1
 23500  01569C  6EE6               	movwf	postinc1,c
 23501  01569E  0E13               	movlw	19
 23502  0156A0  6EE6               	movwf	postinc1,c
 23503  0156A2  0E00               	movlw	0
 23504  0156A4  6EE6               	movwf	postinc1,c
 23505  0156A6  0E00               	movlw	0
 23506  0156A8  6EE6               	movwf	postinc1,c
 23507  0156AA  0E60               	movlw	96
 23508  0156AC  6EE6               	movwf	postinc1,c
 23509  0156AE  0EC1               	movlw	193
 23510  0156B0  6EE6               	movwf	postinc1,c
 23511  0156B2  0060  F593  FFE6   	movff	_C+100,postinc1
 23512  0156B8  0060  F597  FFE6   	movff	_C+101,postinc1
 23513  0156BE  0060  F59B  FFE6   	movff	_C+102,postinc1
 23514  0156C4  0060  F59F  FFE6   	movff	_C+103,postinc1
 23515  0156CA  0060  F503  FFE6   	movff	_C+64,postinc1
 23516  0156D0  0060  F507  FFE6   	movff	_C+65,postinc1
 23517  0156D6  0060  F50B  FFE6   	movff	_C+66,postinc1
 23518  0156DC  0060  F50F  FFE6   	movff	_C+67,postinc1
 23519  0156E2  ECAD  F095         	call	___flmul	;wreg free
 23520  0156E6  0060  F007  FFE6   	movff	btemp,postinc1
 23521  0156EC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23522  0156F2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23523  0156F8  0060  F013  FFE6   	movff	btemp+3,postinc1
 23524  0156FE  ECC2  F099         	call	___fladd	;wreg free
 23525  015702  0060  F007  FFE6   	movff	btemp,postinc1
 23526  015708  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23527  01570E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23528  015714  0060  F013  FFE6   	movff	btemp+3,postinc1
 23529  01571A  ECC4  F0B9         	call	_lp_filter	;wreg free
 23530  01571E  0060  F004  F174   	movff	btemp,_C+116	;volatile
 23531  015724  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 23532  01572A  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 23533  015730  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 23534                           
 23535                           ;mbmc.c: 76:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 23536  015736  0E01               	movlw	1
 23537  015738  6EE6               	movwf	postinc1,c
 23538  01573A  0E14               	movlw	20
 23539  01573C  6EE6               	movwf	postinc1,c
 23540  01573E  0060  F553  FFE6   	movff	_C+84,postinc1
 23541  015744  0060  F557  FFE6   	movff	_C+85,postinc1
 23542  01574A  0060  F55B  FFE6   	movff	_C+86,postinc1
 23543  015750  0060  F55F  FFE6   	movff	_C+87,postinc1
 23544  015756  0060  F513  FFE6   	movff	_C+68,postinc1
 23545  01575C  0060  F517  FFE6   	movff	_C+69,postinc1
 23546  015762  0060  F51B  FFE6   	movff	_C+70,postinc1
 23547  015768  0060  F51F  FFE6   	movff	_C+71,postinc1
 23548  01576E  ECAD  F095         	call	___flmul	;wreg free
 23549  015772  0060  F007  FFE6   	movff	btemp,postinc1
 23550  015778  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23551  01577E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23552  015784  0060  F013  FFE6   	movff	btemp+3,postinc1
 23553  01578A  ECC4  F0B9         	call	_lp_filter	;wreg free
 23554  01578E  0060  F004  F17C   	movff	btemp,_C+124	;volatile
 23555  015794  0060  F008  F17D   	movff	btemp+1,_C+125	;volatile
 23556  01579A  0060  F00C  F17E   	movff	btemp+2,_C+126	;volatile
 23557  0157A0  0060  F010  F17F   	movff	btemp+3,_C+127	;volatile
 23558                           
 23559                           ;mbmc.c: 80:   if (C.p_inverter < 0.0)
 23560  0157A6  0101               	movlb	1	; () banked
 23561  0157A8  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 23562  0157AA  D008               	goto	l10256
 23563                           
 23564                           ; BSR set to: 1
 23565                           ;mbmc.c: 81:    C.p_inverter = 0.0001;
 23566  0157AC  0E17               	movlw	23
 23567  0157AE  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 23568  0157B0  0EB7               	movlw	183
 23569  0157B2  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 23570  0157B4  0ED1               	movlw	209
 23571  0157B6  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 23572  0157B8  0E38               	movlw	56
 23573  0157BA  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 23574  0157BC                     l10256:
 23575                           
 23576                           ;mbmc.c: 83:  start_bsoc();
 23577  0157BC  EC6E  F0D3         	call	_start_bsoc	;wreg free
 23578                           
 23579                           ; BSR set to: 57
 23580                           ;mbmc.c: 84:  C.update = 1;
 23581  0157C0  0E01               	movlw	1
 23582  0157C2  0101               	movlb	1	; () banked
 23583  0157C4  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 23584                           
 23585                           ; BSR set to: 1
 23586                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23587  0157C6  0012               	return		;funcret
 23588  0157C8                     __end_of_calc_model_data:
 23589                           	opt callstack 0
 23590                           
 23591 ;; *************** function _stop_bsoc *****************
 23592 ;; Defined at:
 23593 ;;		line 106 in file "bsoc.c"
 23594 ;; Parameters:    Size  Location     Type
 23595 ;;		None
 23596 ;; Auto vars:     Size  Location     Type
 23597 ;;		None
 23598 ;; Return value:  Size  Location     Type
 23599 ;;                  1  [STACK] void 
 23600 ;; Registers used:
 23601 ;;		None
 23602 ;; Tracked objects:
 23603 ;;		On entry : 0/1
 23604 ;;		On exit  : 3F/39
 23605 ;;		Unchanged: 0/0
 23606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23611 ;;Total ram usage:        0 bytes
 23612 ;; Hardware stack levels used:    1
 23613 ;; Hardware stack levels required when called:   15
 23614 ;; This function calls:
 23615 ;;		Nothing
 23616 ;; This function is called by:
 23617 ;;		_calc_model_data
 23618 ;; This function uses a reentrant model
 23619 ;;
 23620                           
 23621                           	psect	text96
 23622  01A9A4                     __ptext96:
 23623                           	opt callstack 0
 23624  01A9A4                     _stop_bsoc:
 23625                           	opt callstack 14
 23626                           
 23627                           ;bsoc.c: 109:  PIE6bits.TMR3IE = 0;
 23628                           
 23629                           ; BSR set to: 1
 23630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23631                           ;incstack = 0
 23632  01A9A4  0139               	movlb	57	; () banked
 23633  01A9A6  9D96               	bcf	150,6,b	;volatile
 23634                           
 23635                           ; BSR set to: 57
 23636                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 23637  01A9A8  0012               	return		;funcret
 23638  01A9AA                     __end_of_stop_bsoc:
 23639                           	opt callstack 0
 23640                           
 23641 ;; *************** function _start_bsoc *****************
 23642 ;; Defined at:
 23643 ;;		line 97 in file "bsoc.c"
 23644 ;; Parameters:    Size  Location     Type
 23645 ;;		None
 23646 ;; Auto vars:     Size  Location     Type
 23647 ;;		None
 23648 ;; Return value:  Size  Location     Type
 23649 ;;                  1  [STACK] void 
 23650 ;; Registers used:
 23651 ;;		wreg, status,2, status,0, btemp+11
 23652 ;; Tracked objects:
 23653 ;;		On entry : 3C/2
 23654 ;;		On exit  : 3F/39
 23655 ;;		Unchanged: 0/0
 23656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23661 ;;Total ram usage:        0 bytes
 23662 ;; Hardware stack levels used:    1
 23663 ;; Hardware stack levels required when called:   15
 23664 ;; This function calls:
 23665 ;;		Nothing
 23666 ;; This function is called by:
 23667 ;;		_calc_model_data
 23668 ;; This function uses a reentrant model
 23669 ;;
 23670                           
 23671                           	psect	text97
 23672  01A6DC                     __ptext97:
 23673                           	opt callstack 0
 23674  01A6DC                     _start_bsoc:
 23675                           	opt callstack 14
 23676                           
 23677                           ;bsoc.c: 100:  PIE6bits.TMR3IE = 1;
 23678                           
 23679                           ; BSR set to: 57
 23680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23681                           ;incstack = 0
 23682  01A6DC  0139               	movlb	57	; () banked
 23683  01A6DE  8D96               	bsf	150,6,b	;volatile
 23684                           
 23685                           ; BSR set to: 57
 23686  01A6E0  A4BE               	btfss	190,2,c	;volatile
 23687  01A6E2  D002               	goto	u9040
 23688  01A6E4  0E01               	movlw	1
 23689  01A6E6  D001               	goto	u9046
 23690  01A6E8                     u9040:
 23691  01A6E8  0E00               	movlw	0
 23692  01A6EA                     u9046:
 23693  01A6EA  0AFF               	xorlw	255
 23694  01A6EC  6E0C               	movwf	(btemp+11)^0,c
 23695  01A6EE  460C               	rlncf	(btemp+11)^0,f,c
 23696  01A6F0  460C               	rlncf	(btemp+11)^0,f,c
 23697  01A6F2  50BE               	movf	190,w,c	;volatile
 23698  01A6F4  180C               	xorwf	(btemp+11)^0,w,c
 23699  01A6F6  0BFB               	andlw	-5
 23700  01A6F8  180C               	xorwf	(btemp+11)^0,w,c
 23701  01A6FA  6EBE               	movwf	190,c	;volatile
 23702                           
 23703                           ; BSR set to: 57
 23704                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 23705  01A6FC  0012               	return		;funcret
 23706  01A6FE                     __end_of_start_bsoc:
 23707                           	opt callstack 0
 23708                           
 23709 ;; *************** function _lp_filter *****************
 23710 ;; Defined at:
 23711 ;;		line 18 in file "mbmc.c"
 23712 ;; Parameters:    Size  Location     Type
 23713 ;;  new             4  [STACK] const float 
 23714 ;;  bn              1  [STACK] const unsigned char 
 23715 ;;  slow            1  [STACK] const char 
 23716 ;; Auto vars:     Size  Location     Type
 23717 ;;  lp_speed        4  [STACK] float 
 23718 ;; Return value:  Size  Location     Type
 23719 ;;                  4  [STACK] float 
 23720 ;; Registers used:
 23721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23722 ;; Tracked objects:
 23723 ;;		On entry : 0/2
 23724 ;;		On exit  : 0/0
 23725 ;;		Unchanged: 0/0
 23726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23731 ;;Total ram usage:        0 bytes
 23732 ;; Hardware stack levels used:    1
 23733 ;; Hardware stack levels required when called:   17
 23734 ;; This function calls:
 23735 ;;		___fladd
 23736 ;;		___flmul
 23737 ;;		___flsub
 23738 ;; This function is called by:
 23739 ;;		_main
 23740 ;;		_convert_adc_data
 23741 ;;		_calc_model_data
 23742 ;; This function uses a reentrant model
 23743 ;;
 23744                           
 23745                           	psect	text98
 23746  017388                     __ptext98:
 23747                           	opt callstack 0
 23748  017388                     _lp_filter:
 23749                           	opt callstack 0
 23750                           
 23751                           ; BSR set to: 57
 23752                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23753  017388  52E6               	movf	postinc1,f,c
 23754  01738A  52E6               	movf	postinc1,f,c
 23755  01738C  52E6               	movf	postinc1,f,c
 23756  01738E  52E6               	movf	postinc1,f,c
 23757                           
 23758                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 23759                           ;stkvar	_bn @ sp[(-4)+-5]
 23760                           
 23761                           ;incstack = 0
 23762  017390  0EF7               	movlw	-9
 23763  017392  006F FF8C  F001    	movff	plusw1,btemp
 23764  017398  0E14               	movlw	20
 23765  01739A  6401               	cpfsgt	btemp^0,c
 23766  01739C  D011               	goto	l9694
 23767  01739E                     u8860:
 23768                           
 23769                           ;mbmc.c: 24:   return new;
 23770                           ;stkvar	_new @ sp[(-4)+-4]
 23771  01739E  0EF8               	movlw	-8
 23772  0173A0  006F FF8C  F001    	movff	plusw1,btemp
 23773  0173A6  0EF9               	movlw	-7
 23774  0173A8  006F FF8C  F002    	movff	plusw1,btemp+1
 23775  0173AE  0EFA               	movlw	-6
 23776  0173B0  006F FF8C  F003    	movff	plusw1,btemp+2
 23777  0173B6  0EFB               	movlw	-5
 23778  0173B8  006F FF8C  F004    	movff	plusw1,btemp+3
 23779  0173BE  D0BD               	goto	l1788
 23780  0173C0                     l9694:
 23781                           
 23782                           ;mbmc.c: 26:  if (slow == (-1)) {
 23783                           ;stkvar	_slow @ sp[(-4)+-6]
 23784  0173C0  0EF6               	movlw	-10
 23785  0173C2  28E3               	incf	plusw1,w,c
 23786  0173C4  A4D8               	btfss	status,2,c
 23787  0173C6  D012               	goto	l9702
 23788                           
 23789                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 23790                           ;stkvar	_bn @ sp[(-4)+-5]
 23791  0173C8  0EF7               	movlw	-9
 23792  0173CA  50E3               	movf	plusw1,w,c
 23793  0173CC  0D04               	mullw	4
 23794  0173CE  0E00               	movlw	low lp_filter@smooth
 23795  0173D0  24F3               	addwf	243,w,c
 23796  0173D2  6ED9               	movwf	fsr2l,c
 23797  0173D4  0E03               	movlw	high lp_filter@smooth
 23798  0173D6  20F4               	addwfc	prodh,w,c
 23799  0173D8  6EDA               	movwf	fsr2h,c
 23800  0173DA  0E00               	movlw	0
 23801  0173DC  6EDE               	movwf	postinc2,c
 23802  0173DE  0E00               	movlw	0
 23803  0173E0  6EDE               	movwf	postinc2,c
 23804  0173E2  0E00               	movlw	0
 23805  0173E4  6EDE               	movwf	postinc2,c
 23806  0173E6  0E00               	movlw	0
 23807  0173E8  6EDD               	movwf	postdec2,c
 23808  0173EA  D7D9               	goto	u8860
 23809  0173EC                     l9702:
 23810                           
 23811                           ;mbmc.c: 31:  if (slow) {
 23812                           ;stkvar	_slow @ sp[(-4)+-6]
 23813  0173EC  0EF6               	movlw	-10
 23814  0173EE  50E3               	movf	plusw1,w,c
 23815  0173F0  B4D8               	btfsc	status,2,c
 23816  0173F2  D006               	goto	l9706
 23817                           
 23818                           ;mbmc.c: 32:   lp_speed = 0.033;
 23819  0173F4  0E02               	movlw	2
 23820  0173F6  6E09               	movwf	(btemp+8)^0,c
 23821  0173F8  0E2B               	movlw	43
 23822  0173FA  6E0A               	movwf	(btemp+9)^0,c
 23823  0173FC  0E07               	movlw	7
 23824  0173FE  D005               	goto	L26
 23825  017400                     l9706:
 23826                           
 23827                           ;mbmc.c: 34:   lp_speed = 0.066;
 23828  017400  0E02               	movlw	2
 23829  017402  6E09               	movwf	(btemp+8)^0,c
 23830  017404  0E2B               	movlw	43
 23831  017406  6E0A               	movwf	(btemp+9)^0,c
 23832  017408  0E87               	movlw	135
 23833  01740A                     L26:
 23834  01740A  6E0B               	movwf	(btemp+10)^0,c
 23835  01740C  0E3D               	movlw	61
 23836  01740E  6E0C               	movwf	(btemp+11)^0,c
 23837                           
 23838                           ;stkvar	_lp_speed @ sp[(-4)+0]
 23839  017410  0EFC               	movlw	-4
 23840  017412  0060  F027  FFE3   	movff	btemp+8,plusw1
 23841  017418  0EFD               	movlw	-3
 23842  01741A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23843  017420  0EFE               	movlw	-2
 23844  017422  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23845  017428  0EFF               	movlw	-1
 23846  01742A  0060  F033  FFE3   	movff	btemp+11,plusw1
 23847                           
 23848                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 23849                           ;stkvar	_bn @ sp[(-4)+-5]
 23850  017430  0EF7               	movlw	-9
 23851  017432  50E3               	movf	plusw1,w,c
 23852  017434  0D04               	mullw	4
 23853  017436  0E00               	movlw	low lp_filter@smooth
 23854  017438  24F3               	addwf	243,w,c
 23855  01743A  6ED9               	movwf	fsr2l,c
 23856  01743C  0E03               	movlw	high lp_filter@smooth
 23857  01743E  20F4               	addwfc	prodh,w,c
 23858  017440  6EDA               	movwf	fsr2h,c
 23859  017442  006F FF7B FFE6     	movff	postinc2,postinc1
 23860  017448  006F FF7B FFE6     	movff	postinc2,postinc1
 23861  01744E  006F FF7B FFE6     	movff	postinc2,postinc1
 23862  017454  006F FF7B FFE6     	movff	postinc2,postinc1
 23863                           
 23864                           ;stkvar	_lp_speed @ sp[(-8)+0]
 23865  01745A  0EF8               	movlw	-8
 23866  01745C  006F FF8F FFE6     	movff	plusw1,postinc1
 23867  017462  006F FF8F FFE6     	movff	plusw1,postinc1
 23868  017468  006F FF8F FFE6     	movff	plusw1,postinc1
 23869  01746E  006F FF8F FFE6     	movff	plusw1,postinc1
 23870                           
 23871                           ;stkvar	_bn @ sp[(-12)+-5]
 23872  017474  0EEF               	movlw	-17
 23873  017476  50E3               	movf	plusw1,w,c
 23874  017478  0D04               	mullw	4
 23875  01747A  0E00               	movlw	low lp_filter@smooth
 23876  01747C  24F3               	addwf	243,w,c
 23877  01747E  6ED9               	movwf	fsr2l,c
 23878  017480  0E03               	movlw	high lp_filter@smooth
 23879  017482  20F4               	addwfc	prodh,w,c
 23880  017484  6EDA               	movwf	fsr2h,c
 23881  017486  006F FF7B FFE6     	movff	postinc2,postinc1
 23882  01748C  006F FF7B FFE6     	movff	postinc2,postinc1
 23883  017492  006F FF7B FFE6     	movff	postinc2,postinc1
 23884  017498  006F FF7B FFE6     	movff	postinc2,postinc1
 23885                           
 23886                           ;stkvar	_new @ sp[(-16)+-4]
 23887  01749E  0EEC               	movlw	-20
 23888  0174A0  006F FF8F FFE6     	movff	plusw1,postinc1
 23889  0174A6  006F FF8F FFE6     	movff	plusw1,postinc1
 23890  0174AC  006F FF8F FFE6     	movff	plusw1,postinc1
 23891  0174B2  006F FF8F FFE6     	movff	plusw1,postinc1
 23892  0174B8  ECA7  F0CE         	call	___flsub	;wreg free
 23893  0174BC  0060  F007  FFE6   	movff	btemp,postinc1
 23894  0174C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23895  0174C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23896  0174CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 23897  0174D4  ECAD  F095         	call	___flmul	;wreg free
 23898  0174D8  0060  F007  FFE6   	movff	btemp,postinc1
 23899  0174DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23900  0174E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23901  0174EA  0060  F013  FFE6   	movff	btemp+3,postinc1
 23902  0174F0  ECC2  F099         	call	___fladd	;wreg free
 23903                           
 23904                           ;stkvar	_bn @ sp[(-4)+-5]
 23905  0174F4  0EF7               	movlw	-9
 23906  0174F6  50E3               	movf	plusw1,w,c
 23907  0174F8  0D04               	mullw	4
 23908  0174FA  0E00               	movlw	low lp_filter@smooth
 23909  0174FC  24F3               	addwf	243,w,c
 23910  0174FE  6ED9               	movwf	fsr2l,c
 23911  017500  0E03               	movlw	high lp_filter@smooth
 23912  017502  20F4               	addwfc	prodh,w,c
 23913  017504  6EDA               	movwf	fsr2h,c
 23914  017506  0060  F007  FFDE   	movff	btemp,postinc2
 23915  01750C  0060  F00B  FFDE   	movff	btemp+1,postinc2
 23916  017512  0060  F00F  FFDE   	movff	btemp+2,postinc2
 23917  017518  0060  F013  FFDD   	movff	btemp+3,postdec2
 23918  01751E  52DD               	movf	postdec2,f,c
 23919  017520  52DD               	movf	postdec2,f,c
 23920  017522  006F FF78  F001    	movff	postinc2,btemp
 23921  017528  006F FF78  F002    	movff	postinc2,btemp+1
 23922  01752E  006F FF78  F003    	movff	postinc2,btemp+2
 23923  017534  006F FF78  F004    	movff	postinc2,btemp+3
 23924  01753A                     l1788:
 23925                           
 23926                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 23927  01753A  0EF6               	movlw	246
 23928  01753C  26E1               	addwf	fsr1l,f,c
 23929  01753E  0EFF               	movlw	255
 23930  017540  22E2               	addwfc	fsr1h,f,c
 23931  017542  0012               	return		;funcret
 23932  017544                     __end_of_lp_filter:
 23933                           	opt callstack 0
 23934                           
 23935 ;; *************** function ___flsub *****************
 23936 ;; Defined at:
 23937 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 23938 ;; Parameters:    Size  Location     Type
 23939 ;;  b               4  [STACK] float 
 23940 ;;  a               4  [STACK] float 
 23941 ;; Auto vars:     Size  Location     Type
 23942 ;;		None
 23943 ;; Return value:  Size  Location     Type
 23944 ;;                  4  [STACK] float 
 23945 ;; Registers used:
 23946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23947 ;; Tracked objects:
 23948 ;;		On entry : 0/1
 23949 ;;		On exit  : 0/0
 23950 ;;		Unchanged: 0/0
 23951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23956 ;;Total ram usage:        0 bytes
 23957 ;; Hardware stack levels used:    1
 23958 ;; Hardware stack levels required when called:   16
 23959 ;; This function calls:
 23960 ;;		___fladd
 23961 ;; This function is called by:
 23962 ;;		_conv_raw_result
 23963 ;;		_lp_filter
 23964 ;;		_calc_model_data
 23965 ;;		_efgtoa
 23966 ;; This function uses a reentrant model
 23967 ;;
 23968                           
 23969                           	psect	text99
 23970  019D4E                     __ptext99:
 23971                           	opt callstack 0
 23972  019D4E                     ___flsub:
 23973                           	opt callstack 0
 23974                           
 23975                           ;stkvar	_a @ sp[(0)+-8]
 23976                           
 23977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23978                           ;incstack = 0
 23979 ;; hardware stack exceeded
 23980  019D4E  0EFB               	movlw	-5
 23981  019D50  7EE3               	btg	plusw1,7,c
 23982                           
 23983                           ;stkvar	_a @ sp[(0)+-8]
 23984  019D52  0EF8               	movlw	-8
 23985  019D54  006F FF8F FFE6     	movff	plusw1,postinc1
 23986  019D5A  006F FF8F FFE6     	movff	plusw1,postinc1
 23987  019D60  006F FF8F FFE6     	movff	plusw1,postinc1
 23988  019D66  006F FF8F FFE6     	movff	plusw1,postinc1
 23989                           
 23990                           ;stkvar	_b @ sp[(-4)+-4]
 23991  019D6C  0EF8               	movlw	-8
 23992  019D6E  006F FF8F FFE6     	movff	plusw1,postinc1
 23993  019D74  006F FF8F FFE6     	movff	plusw1,postinc1
 23994  019D7A  006F FF8F FFE6     	movff	plusw1,postinc1
 23995  019D80  006F FF8F FFE6     	movff	plusw1,postinc1
 23996  019D86  ECC2  F099         	call	___fladd	;wreg free
 23997                           
 23998                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 23999  019D8A  0EF8               	movlw	248
 24000  019D8C  26E1               	addwf	fsr1l,f,c
 24001  019D8E  0EFF               	movlw	255
 24002  019D90  22E2               	addwfc	fsr1h,f,c
 24003  019D92  0012               	return		;funcret
 24004  019D94                     __end_of___flsub:
 24005                           	opt callstack 0
 24006                           
 24007 ;; *************** function ___fladd *****************
 24008 ;; Defined at:
 24009 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 24010 ;; Parameters:    Size  Location     Type
 24011 ;;  b               4  [STACK] float 
 24012 ;;  a               4  [STACK] float 
 24013 ;; Auto vars:     Size  Location     Type
 24014 ;;  grs             1  [STACK] unsigned char 
 24015 ;;  bexp            1  [STACK] unsigned char 
 24016 ;;  aexp            1  [STACK] unsigned char 
 24017 ;;  signs           1  [STACK] unsigned char 
 24018 ;; Return value:  Size  Location     Type
 24019 ;;                  4  [STACK] unsigned char 
 24020 ;; Registers used:
 24021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24022 ;; Tracked objects:
 24023 ;;		On entry : 0/0
 24024 ;;		On exit  : 0/0
 24025 ;;		Unchanged: 0/0
 24026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24031 ;;Total ram usage:        0 bytes
 24032 ;; Hardware stack levels used:    1
 24033 ;; Hardware stack levels required when called:   15
 24034 ;; This function calls:
 24035 ;;		Nothing
 24036 ;; This function is called by:
 24037 ;;		_lp_filter
 24038 ;;		_calc_model_data
 24039 ;;		_calc_bsoc
 24040 ;;		_efgtoa
 24041 ;;		___flsub
 24042 ;; This function uses a reentrant model
 24043 ;;
 24044                           
 24045                           	psect	text100
 24046  013384                     __ptext100:
 24047                           	opt callstack 0
 24048  013384                     ___fladd:
 24049                           	opt callstack 0
 24050                           
 24051                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24052  013384  52E6               	movf	postinc1,f,c
 24053  013386  52E6               	movf	postinc1,f,c
 24054  013388  52E6               	movf	postinc1,f,c
 24055  01338A  52E6               	movf	postinc1,f,c
 24056                           
 24057                           ;stkvar	_b @ sp[(-4)+-4]
 24058                           
 24059                           ;incstack = 0
 24060 ;; hardware stack exceeded
 24061  01338C  0EFB               	movlw	251
 24062  01338E  24E1               	addwf	fsr1l,w,c
 24063  013390  6ED9               	movwf	fsr2l,c
 24064  013392  0EFF               	movlw	255
 24065  013394  20E2               	addwfc	fsr1h,w,c
 24066  013396  6EDA               	movwf	fsr2h,c
 24067  013398  50DF               	movf	indf2,w,c
 24068  01339A  6E0C               	movwf	(btemp+11)^0,c
 24069  01339C  0E80               	movlw	128
 24070  01339E  160C               	andwf	(btemp+11)^0,f,c
 24071                           
 24072                           ;stkvar	_signs @ sp[(-4)+3]
 24073  0133A0  0EFF               	movlw	-1
 24074  0133A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 24075                           
 24076                           ;stkvar	_b @ sp[(-4)+-4]
 24077  0133A8  0EFB               	movlw	251
 24078  0133AA  24E1               	addwf	fsr1l,w,c
 24079  0133AC  6ED9               	movwf	fsr2l,c
 24080  0133AE  0EFF               	movlw	255
 24081  0133B0  20E2               	addwfc	fsr1h,w,c
 24082  0133B2  6EDA               	movwf	fsr2h,c
 24083  0133B4  50DF               	movf	indf2,w,c
 24084  0133B6  6E0C               	movwf	(btemp+11)^0,c
 24085  0133B8  90D8               	bcf	status,0,c
 24086  0133BA  340C               	rlcf	(btemp+11)^0,w,c
 24087  0133BC  6E0B               	movwf	(btemp+10)^0,c
 24088                           
 24089                           ;stkvar	_bexp @ sp[(-4)+1]
 24090  0133BE  0EFD               	movlw	-3
 24091  0133C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24092                           
 24093                           ;stkvar	_b @ sp[(-4)+-4]
 24094  0133C6  0EFA               	movlw	250
 24095  0133C8  24E1               	addwf	fsr1l,w,c
 24096  0133CA  6ED9               	movwf	fsr2l,c
 24097  0133CC  0EFF               	movlw	255
 24098  0133CE  20E2               	addwfc	fsr1h,w,c
 24099  0133D0  6EDA               	movwf	fsr2h,c
 24100  0133D2  AEDF               	btfss	indf2,7,c
 24101  0133D4  D002               	goto	l7180
 24102                           
 24103                           ;stkvar	_bexp @ sp[(-4)+1]
 24104  0133D6  0EFD               	movlw	-3
 24105  0133D8  80E3               	bsf	plusw1,0,c
 24106  0133DA                     l7180:
 24107                           
 24108                           ;stkvar	_bexp @ sp[(-4)+1]
 24109  0133DA  0EFD               	movlw	-3
 24110  0133DC  50E3               	movf	plusw1,w,c
 24111  0133DE  B4D8               	btfsc	status,2,c
 24112  0133E0  D027               	goto	l7190
 24113                           
 24114                           ;stkvar	_bexp @ sp[(-4)+1]
 24115  0133E2  0EFD               	movlw	-3
 24116  0133E4  28E3               	incf	plusw1,w,c
 24117  0133E6  A4D8               	btfss	status,2,c
 24118  0133E8  D018               	goto	l7186
 24119  0133EA  0E00               	movlw	0
 24120  0133EC  6E09               	movwf	(btemp+8)^0,c
 24121  0133EE  0E00               	movlw	0
 24122  0133F0  6E0A               	movwf	(btemp+9)^0,c
 24123  0133F2  0E00               	movlw	0
 24124  0133F4  6E0B               	movwf	(btemp+10)^0,c
 24125  0133F6  0E00               	movlw	0
 24126  0133F8  6E0C               	movwf	(btemp+11)^0,c
 24127                           
 24128                           ;stkvar	_b @ sp[(-4)+-4]
 24129  0133FA  0EF8               	movlw	-8
 24130  0133FC  0060  F027  FFE3   	movff	btemp+8,plusw1
 24131  013402  0EF9               	movlw	-7
 24132  013404  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24133  01340A  0EFA               	movlw	-6
 24134  01340C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24135  013412  0EFB               	movlw	-5
 24136  013414  0060  F033  FFE3   	movff	btemp+11,plusw1
 24137  01341A                     l7186:
 24138                           
 24139                           ;stkvar	_b @ sp[(-4)+-4]
 24140  01341A  0EFA               	movlw	-6
 24141  01341C  8EE3               	bsf	plusw1,7,c
 24142                           
 24143                           ;stkvar	_b @ sp[(-4)+-4]
 24144  01341E  0EFB               	movlw	251
 24145  013420  24E1               	addwf	fsr1l,w,c
 24146  013422  6ED9               	movwf	fsr2l,c
 24147  013424  0EFF               	movlw	255
 24148  013426  20E2               	addwfc	fsr1h,w,c
 24149  013428  6EDA               	movwf	fsr2h,c
 24150  01342A  0E00               	movlw	0
 24151  01342C  6EDF               	movwf	indf2,c
 24152  01342E  D018               	goto	l7192
 24153  013430                     l7190:
 24154  013430  0E00               	movlw	0
 24155  013432  6E09               	movwf	(btemp+8)^0,c
 24156  013434  0E00               	movlw	0
 24157  013436  6E0A               	movwf	(btemp+9)^0,c
 24158  013438  0E00               	movlw	0
 24159  01343A  6E0B               	movwf	(btemp+10)^0,c
 24160  01343C  0E00               	movlw	0
 24161  01343E  6E0C               	movwf	(btemp+11)^0,c
 24162                           
 24163                           ;stkvar	_b @ sp[(-4)+-4]
 24164  013440  0EF8               	movlw	-8
 24165  013442  0060  F027  FFE3   	movff	btemp+8,plusw1
 24166  013448  0EF9               	movlw	-7
 24167  01344A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24168  013450  0EFA               	movlw	-6
 24169  013452  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24170  013458  0EFB               	movlw	-5
 24171  01345A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24172  013460                     l7192:
 24173                           
 24174                           ;stkvar	_a @ sp[(-4)+-8]
 24175  013460  0EF7               	movlw	247
 24176  013462  24E1               	addwf	fsr1l,w,c
 24177  013464  6ED9               	movwf	fsr2l,c
 24178  013466  0EFF               	movlw	255
 24179  013468  20E2               	addwfc	fsr1h,w,c
 24180  01346A  6EDA               	movwf	fsr2h,c
 24181  01346C  50DF               	movf	indf2,w,c
 24182  01346E  6E0C               	movwf	(btemp+11)^0,c
 24183  013470  0E80               	movlw	128
 24184  013472  160C               	andwf	(btemp+11)^0,f,c
 24185                           
 24186                           ;stkvar	_aexp @ sp[(-4)+2]
 24187  013474  0EFE               	movlw	-2
 24188  013476  0060  F033  FFE3   	movff	btemp+11,plusw1
 24189                           
 24190                           ;stkvar	_signs @ sp[(-4)+3]
 24191                           ;stkvar	_aexp @ sp[(-4)+2]
 24192  01347C  50E1               	movf	fsr1l,w,c
 24193  01347E  0FFE               	addlw	-2
 24194  013480  6ED9               	movwf	fsr2l,c
 24195  013482  50E2               	movf	fsr1h,w,c
 24196  013484  6EDA               	movwf	fsr2h,c
 24197  013486  0EFF               	movlw	255
 24198  013488  22DA               	addwfc	fsr2h,f,c
 24199  01348A  0EFF               	movlw	-1
 24200  01348C  50E3               	movf	plusw1,w,c
 24201  01348E  18DE               	xorwf	postinc2,w,c
 24202  013490  B4D8               	btfsc	status,2,c
 24203  013492  D002               	goto	l7198
 24204                           
 24205                           ;stkvar	_signs @ sp[(-4)+3]
 24206  013494  0EFF               	movlw	-1
 24207  013496  8CE3               	bsf	plusw1,6,c
 24208  013498                     l7198:
 24209                           
 24210                           ;stkvar	_a @ sp[(-4)+-8]
 24211  013498  0EF7               	movlw	247
 24212  01349A  24E1               	addwf	fsr1l,w,c
 24213  01349C  6ED9               	movwf	fsr2l,c
 24214  01349E  0EFF               	movlw	255
 24215  0134A0  20E2               	addwfc	fsr1h,w,c
 24216  0134A2  6EDA               	movwf	fsr2h,c
 24217  0134A4  50DF               	movf	indf2,w,c
 24218  0134A6  6E0C               	movwf	(btemp+11)^0,c
 24219  0134A8  90D8               	bcf	status,0,c
 24220  0134AA  340C               	rlcf	(btemp+11)^0,w,c
 24221  0134AC  6E0B               	movwf	(btemp+10)^0,c
 24222                           
 24223                           ;stkvar	_aexp @ sp[(-4)+2]
 24224  0134AE  0EFE               	movlw	-2
 24225  0134B0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24226                           
 24227                           ;stkvar	_a @ sp[(-4)+-8]
 24228  0134B6  0EF6               	movlw	246
 24229  0134B8  24E1               	addwf	fsr1l,w,c
 24230  0134BA  6ED9               	movwf	fsr2l,c
 24231  0134BC  0EFF               	movlw	255
 24232  0134BE  20E2               	addwfc	fsr1h,w,c
 24233  0134C0  6EDA               	movwf	fsr2h,c
 24234  0134C2  AEDF               	btfss	indf2,7,c
 24235  0134C4  D002               	goto	l7204
 24236                           
 24237                           ;stkvar	_aexp @ sp[(-4)+2]
 24238  0134C6  0EFE               	movlw	-2
 24239  0134C8  80E3               	bsf	plusw1,0,c
 24240  0134CA                     l7204:
 24241                           
 24242                           ;stkvar	_aexp @ sp[(-4)+2]
 24243  0134CA  0EFE               	movlw	-2
 24244  0134CC  50E3               	movf	plusw1,w,c
 24245  0134CE  B4D8               	btfsc	status,2,c
 24246  0134D0  D027               	goto	l7214
 24247                           
 24248                           ;stkvar	_aexp @ sp[(-4)+2]
 24249  0134D2  0EFE               	movlw	-2
 24250  0134D4  28E3               	incf	plusw1,w,c
 24251  0134D6  A4D8               	btfss	status,2,c
 24252  0134D8  D018               	goto	l7210
 24253  0134DA  0E00               	movlw	0
 24254  0134DC  6E09               	movwf	(btemp+8)^0,c
 24255  0134DE  0E00               	movlw	0
 24256  0134E0  6E0A               	movwf	(btemp+9)^0,c
 24257  0134E2  0E00               	movlw	0
 24258  0134E4  6E0B               	movwf	(btemp+10)^0,c
 24259  0134E6  0E00               	movlw	0
 24260  0134E8  6E0C               	movwf	(btemp+11)^0,c
 24261                           
 24262                           ;stkvar	_a @ sp[(-4)+-8]
 24263  0134EA  0EF4               	movlw	-12
 24264  0134EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 24265  0134F2  0EF5               	movlw	-11
 24266  0134F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24267  0134FA  0EF6               	movlw	-10
 24268  0134FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24269  013502  0EF7               	movlw	-9
 24270  013504  0060  F033  FFE3   	movff	btemp+11,plusw1
 24271  01350A                     l7210:
 24272                           
 24273                           ;stkvar	_a @ sp[(-4)+-8]
 24274  01350A  0EF6               	movlw	-10
 24275  01350C  8EE3               	bsf	plusw1,7,c
 24276                           
 24277                           ;stkvar	_a @ sp[(-4)+-8]
 24278  01350E  0EF7               	movlw	247
 24279  013510  24E1               	addwf	fsr1l,w,c
 24280  013512  6ED9               	movwf	fsr2l,c
 24281  013514  0EFF               	movlw	255
 24282  013516  20E2               	addwfc	fsr1h,w,c
 24283  013518  6EDA               	movwf	fsr2h,c
 24284  01351A  0E00               	movlw	0
 24285  01351C  6EDF               	movwf	indf2,c
 24286  01351E  D018               	goto	l7216
 24287  013520                     l7214:
 24288  013520  0E00               	movlw	0
 24289  013522  6E09               	movwf	(btemp+8)^0,c
 24290  013524  0E00               	movlw	0
 24291  013526  6E0A               	movwf	(btemp+9)^0,c
 24292  013528  0E00               	movlw	0
 24293  01352A  6E0B               	movwf	(btemp+10)^0,c
 24294  01352C  0E00               	movlw	0
 24295  01352E  6E0C               	movwf	(btemp+11)^0,c
 24296                           
 24297                           ;stkvar	_a @ sp[(-4)+-8]
 24298  013530  0EF4               	movlw	-12
 24299  013532  0060  F027  FFE3   	movff	btemp+8,plusw1
 24300  013538  0EF5               	movlw	-11
 24301  01353A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24302  013540  0EF6               	movlw	-10
 24303  013542  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24304  013548  0EF7               	movlw	-9
 24305  01354A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24306  013550                     l7216:
 24307                           
 24308                           ;stkvar	_bexp @ sp[(-4)+1]
 24309                           ;stkvar	_aexp @ sp[(-4)+2]
 24310  013550  50E1               	movf	fsr1l,w,c
 24311  013552  0FFE               	addlw	-2
 24312  013554  6ED9               	movwf	fsr2l,c
 24313  013556  50E2               	movf	fsr1h,w,c
 24314  013558  6EDA               	movwf	fsr2h,c
 24315  01355A  0EFF               	movlw	255
 24316  01355C  22DA               	addwfc	fsr2h,f,c
 24317  01355E  0EFD               	movlw	-3
 24318  013560  50E3               	movf	plusw1,w,c
 24319  013562  5CDE               	subwf	postinc2,w,c
 24320  013564  B0D8               	btfsc	status,0,c
 24321  013566  D0A4               	goto	l7252
 24322                           
 24323                           ;stkvar	_signs @ sp[(-4)+3]
 24324  013568  0EFF               	movlw	-1
 24325  01356A  ACE3               	btfss	plusw1,6,c
 24326  01356C  D002               	goto	l7222
 24327                           
 24328                           ;stkvar	_signs @ sp[(-4)+3]
 24329  01356E  0EFF               	movlw	-1
 24330  013570  7EE3               	btg	plusw1,7,c
 24331  013572                     l7222:
 24332                           
 24333                           ;stkvar	_bexp @ sp[(-4)+1]
 24334                           ;stkvar	_grs @ sp[(-4)+0]
 24335  013572  0EFD               	movlw	-3
 24336  013574  006F FF8C  F001    	movff	plusw1,btemp
 24337  01357A  0EFC               	movlw	-4
 24338  01357C  0060  F007  FFE3   	movff	btemp,plusw1
 24339                           
 24340                           ;stkvar	_aexp @ sp[(-4)+2]
 24341                           ;stkvar	_bexp @ sp[(-4)+1]
 24342  013582  0EFE               	movlw	-2
 24343  013584  006F FF8C  F001    	movff	plusw1,btemp
 24344  01358A  0EFD               	movlw	-3
 24345  01358C  0060  F007  FFE3   	movff	btemp,plusw1
 24346                           
 24347                           ;stkvar	_grs @ sp[(-4)+0]
 24348                           ;stkvar	_aexp @ sp[(-4)+2]
 24349  013592  0EFC               	movlw	-4
 24350  013594  006F FF8C  F001    	movff	plusw1,btemp
 24351  01359A  0EFE               	movlw	-2
 24352  01359C  0060  F007  FFE3   	movff	btemp,plusw1
 24353                           
 24354                           ;stkvar	_b @ sp[(-4)+-4]
 24355                           ;stkvar	_grs @ sp[(-4)+0]
 24356  0135A2  0EF8               	movlw	-8
 24357  0135A4  006F FF8C  F001    	movff	plusw1,btemp
 24358  0135AA  0EFC               	movlw	-4
 24359  0135AC  0060  F007  FFE3   	movff	btemp,plusw1
 24360                           
 24361                           ;stkvar	_a @ sp[(-4)+-8]
 24362                           ;stkvar	_b @ sp[(-4)+-4]
 24363  0135B2  0EF4               	movlw	-12
 24364  0135B4  006F FF8C  F001    	movff	plusw1,btemp
 24365  0135BA  0EF8               	movlw	-8
 24366  0135BC  0060  F007  FFE3   	movff	btemp,plusw1
 24367                           
 24368                           ;stkvar	_grs @ sp[(-4)+0]
 24369                           ;stkvar	_a @ sp[(-4)+-8]
 24370  0135C2  0EFC               	movlw	-4
 24371  0135C4  006F FF8C  F001    	movff	plusw1,btemp
 24372  0135CA  0EF4               	movlw	-12
 24373  0135CC  0060  F007  FFE3   	movff	btemp,plusw1
 24374                           
 24375                           ;stkvar	_b @ sp[(-4)+-4]
 24376  0135D2  0EF9               	movlw	249
 24377  0135D4  24E1               	addwf	fsr1l,w,c
 24378  0135D6  6ED9               	movwf	fsr2l,c
 24379  0135D8  0EFF               	movlw	255
 24380  0135DA  20E2               	addwfc	fsr1h,w,c
 24381  0135DC  6EDA               	movwf	fsr2h,c
 24382  0135DE  50DF               	movf	indf2,w,c
 24383  0135E0  6E0C               	movwf	(btemp+11)^0,c
 24384                           
 24385                           ;stkvar	_grs @ sp[(-4)+0]
 24386  0135E2  0EFC               	movlw	-4
 24387  0135E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24388                           
 24389                           ;stkvar	_a @ sp[(-4)+-8]
 24390  0135EA  0EF5               	movlw	245
 24391  0135EC  24E1               	addwf	fsr1l,w,c
 24392  0135EE  6ED9               	movwf	fsr2l,c
 24393  0135F0  0EFF               	movlw	255
 24394  0135F2  20E2               	addwfc	fsr1h,w,c
 24395  0135F4  6EDA               	movwf	fsr2h,c
 24396                           
 24397                           ;stkvar	_b @ sp[(-4)+-4]
 24398  0135F6  0EF9               	movlw	249
 24399  0135F8  24E1               	addwf	fsr1l,w,c
 24400  0135FA  6EE9               	movwf	fsr0l,c
 24401  0135FC  0EFF               	movlw	255
 24402  0135FE  20E2               	addwfc	fsr1h,w,c
 24403  013600  6EEA               	movwf	fsr0h,c
 24404  013602  006F FF7F FFEF     	movff	indf2,indf0
 24405                           
 24406                           ;stkvar	_grs @ sp[(-4)+0]
 24407                           ;stkvar	_a @ sp[(-4)+-8]
 24408  013608  0EF5               	movlw	245
 24409  01360A  24E1               	addwf	fsr1l,w,c
 24410  01360C  6ED9               	movwf	fsr2l,c
 24411  01360E  0EFF               	movlw	255
 24412  013610  20E2               	addwfc	fsr1h,w,c
 24413  013612  6EDA               	movwf	fsr2h,c
 24414  013614  0EFC               	movlw	-4
 24415  013616  006F FF8F FFDF     	movff	plusw1,indf2
 24416                           
 24417                           ;stkvar	_b @ sp[(-4)+-4]
 24418  01361C  0EFA               	movlw	250
 24419  01361E  24E1               	addwf	fsr1l,w,c
 24420  013620  6ED9               	movwf	fsr2l,c
 24421  013622  0EFF               	movlw	255
 24422  013624  20E2               	addwfc	fsr1h,w,c
 24423  013626  6EDA               	movwf	fsr2h,c
 24424  013628  50DF               	movf	indf2,w,c
 24425  01362A  6E0C               	movwf	(btemp+11)^0,c
 24426                           
 24427                           ;stkvar	_grs @ sp[(-4)+0]
 24428  01362C  0EFC               	movlw	-4
 24429  01362E  0060  F033  FFE3   	movff	btemp+11,plusw1
 24430                           
 24431                           ;stkvar	_a @ sp[(-4)+-8]
 24432  013634  0EF6               	movlw	246
 24433  013636  24E1               	addwf	fsr1l,w,c
 24434  013638  6ED9               	movwf	fsr2l,c
 24435  01363A  0EFF               	movlw	255
 24436  01363C  20E2               	addwfc	fsr1h,w,c
 24437  01363E  6EDA               	movwf	fsr2h,c
 24438                           
 24439                           ;stkvar	_b @ sp[(-4)+-4]
 24440  013640  0EFA               	movlw	250
 24441  013642  24E1               	addwf	fsr1l,w,c
 24442  013644  6EE9               	movwf	fsr0l,c
 24443  013646  0EFF               	movlw	255
 24444  013648  20E2               	addwfc	fsr1h,w,c
 24445  01364A  6EEA               	movwf	fsr0h,c
 24446  01364C  006F FF7F FFEF     	movff	indf2,indf0
 24447                           
 24448                           ;stkvar	_grs @ sp[(-4)+0]
 24449                           ;stkvar	_a @ sp[(-4)+-8]
 24450  013652  0EF6               	movlw	246
 24451  013654  24E1               	addwf	fsr1l,w,c
 24452  013656  6ED9               	movwf	fsr2l,c
 24453  013658  0EFF               	movlw	255
 24454  01365A  20E2               	addwfc	fsr1h,w,c
 24455  01365C  6EDA               	movwf	fsr2h,c
 24456  01365E  0EFC               	movlw	-4
 24457  013660  006F FF8F FFDF     	movff	plusw1,indf2
 24458                           
 24459                           ;stkvar	_b @ sp[(-4)+-4]
 24460  013666  0EFB               	movlw	251
 24461  013668  24E1               	addwf	fsr1l,w,c
 24462  01366A  6ED9               	movwf	fsr2l,c
 24463  01366C  0EFF               	movlw	255
 24464  01366E  20E2               	addwfc	fsr1h,w,c
 24465  013670  6EDA               	movwf	fsr2h,c
 24466  013672  50DF               	movf	indf2,w,c
 24467  013674  6E0C               	movwf	(btemp+11)^0,c
 24468                           
 24469                           ;stkvar	_grs @ sp[(-4)+0]
 24470  013676  0EFC               	movlw	-4
 24471  013678  0060  F033  FFE3   	movff	btemp+11,plusw1
 24472                           
 24473                           ;stkvar	_a @ sp[(-4)+-8]
 24474  01367E  0EF7               	movlw	247
 24475  013680  24E1               	addwf	fsr1l,w,c
 24476  013682  6ED9               	movwf	fsr2l,c
 24477  013684  0EFF               	movlw	255
 24478  013686  20E2               	addwfc	fsr1h,w,c
 24479  013688  6EDA               	movwf	fsr2h,c
 24480                           
 24481                           ;stkvar	_b @ sp[(-4)+-4]
 24482  01368A  0EFB               	movlw	251
 24483  01368C  24E1               	addwf	fsr1l,w,c
 24484  01368E  6EE9               	movwf	fsr0l,c
 24485  013690  0EFF               	movlw	255
 24486  013692  20E2               	addwfc	fsr1h,w,c
 24487  013694  6EEA               	movwf	fsr0h,c
 24488  013696  006F FF7F FFEF     	movff	indf2,indf0
 24489                           
 24490                           ;stkvar	_grs @ sp[(-4)+0]
 24491                           ;stkvar	_a @ sp[(-4)+-8]
 24492  01369C  0EF7               	movlw	247
 24493  01369E  24E1               	addwf	fsr1l,w,c
 24494  0136A0  6ED9               	movwf	fsr2l,c
 24495  0136A2  0EFF               	movlw	255
 24496  0136A4  20E2               	addwfc	fsr1h,w,c
 24497  0136A6  6EDA               	movwf	fsr2h,c
 24498  0136A8  0EFC               	movlw	-4
 24499  0136AA  006F FF8F FFDF     	movff	plusw1,indf2
 24500  0136B0                     l7252:
 24501                           
 24502                           ;stkvar	_grs @ sp[(-4)+0]
 24503  0136B0  0EFC               	movlw	-4
 24504  0136B2  6AE3               	clrf	plusw1,c
 24505                           
 24506                           ;stkvar	_aexp @ sp[(-4)+2]
 24507  0136B4  0EFE               	movlw	-2
 24508  0136B6  50E3               	movf	plusw1,w,c
 24509  0136B8  6E0B               	movwf	(btemp+10)^0,c
 24510  0136BA  6A0C               	clrf	(btemp+11)^0,c
 24511                           
 24512                           ;stkvar	_bexp @ sp[(-4)+1]
 24513  0136BC  0EFD               	movlw	-3
 24514  0136BE  50E3               	movf	plusw1,w,c
 24515  0136C0  5E0B               	subwf	(btemp+10)^0,f,c
 24516  0136C2  0E00               	movlw	0
 24517  0136C4  5A0C               	subwfb	(btemp+11)^0,f,c
 24518  0136C6  BE0C               	btfsc	(btemp+11)^0,7,c
 24519  0136C8  D062               	goto	l7276
 24520  0136CA  500C               	movf	(btemp+11)^0,w,c
 24521  0136CC  E104               	bnz	u5150
 24522  0136CE  0E1A               	movlw	26
 24523  0136D0  5C0B               	subwf	(btemp+10)^0,w,c
 24524  0136D2  A0D8               	btfss	status,0,c
 24525  0136D4  D05C               	goto	l7276
 24526  0136D6                     u5150:
 24527                           
 24528                           ;stkvar	_b @ sp[(-4)+-4]
 24529  0136D6  0EF8               	movlw	-8
 24530  0136D8  50E3               	movf	plusw1,w,c
 24531  0136DA  E10A               	bnz	u5161
 24532  0136DC  0EF9               	movlw	-7
 24533  0136DE  50E3               	movf	plusw1,w,c
 24534  0136E0  E107               	bnz	u5161
 24535  0136E2  0EFA               	movlw	-6
 24536  0136E4  50E3               	movf	plusw1,w,c
 24537  0136E6  E104               	bnz	u5161
 24538  0136E8  0EFB               	movlw	-5
 24539  0136EA  50E3               	movf	plusw1,w,c
 24540  0136EC  B4D8               	btfsc	status,2,c
 24541  0136EE  D003               	goto	u5160
 24542  0136F0                     u5161:
 24543  0136F0  6A0C               	clrf	(btemp+11)^0,c
 24544  0136F2  2A0C               	incf	(btemp+11)^0,f,c
 24545  0136F4  D001               	goto	u5178
 24546  0136F6                     u5160:
 24547  0136F6  6A0C               	clrf	(btemp+11)^0,c
 24548  0136F8                     u5178:
 24549                           
 24550                           ;stkvar	_grs @ sp[(-4)+0]
 24551  0136F8  0EFC               	movlw	-4
 24552  0136FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 24553                           
 24554                           ;stkvar	_b @ sp[(-4)+-4]
 24555  013700  0EF8               	movlw	-8
 24556  013702  6AE3               	clrf	plusw1,c
 24557  013704  0EF9               	movlw	-7
 24558  013706  6AE3               	clrf	plusw1,c
 24559  013708  0EFA               	movlw	-6
 24560  01370A  6AE3               	clrf	plusw1,c
 24561  01370C  0EFB               	movlw	-5
 24562  01370E  6AE3               	clrf	plusw1,c
 24563                           
 24564                           ;stkvar	_aexp @ sp[(-4)+2]
 24565                           ;stkvar	_bexp @ sp[(-4)+1]
 24566  013710  0EFE               	movlw	-2
 24567  013712  006F FF8C  F001    	movff	plusw1,btemp
 24568  013718  0EFD               	movlw	-3
 24569  01371A  0060  F007  FFE3   	movff	btemp,plusw1
 24570  013720  D042               	goto	u5210
 24571  013722                     l7262:
 24572                           
 24573                           ;stkvar	_grs @ sp[(-4)+0]
 24574  013722  0EFC               	movlw	-4
 24575  013724  A0E3               	btfss	plusw1,0,c
 24576  013726  D00D               	goto	l7266
 24577                           
 24578                           ;stkvar	_grs @ sp[(-4)+0]
 24579  013728  0EFC               	movlw	-4
 24580  01372A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24581  013730  90D8               	bcf	status,0,c
 24582  013732  320C               	rrcf	(btemp+11)^0,f,c
 24583  013734  0E01               	movlw	1
 24584  013736  120C               	iorwf	(btemp+11)^0,f,c
 24585                           
 24586                           ;stkvar	_grs @ sp[(-4)+0]
 24587  013738  0EFC               	movlw	-4
 24588  01373A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24589  013740  D009               	goto	l7268
 24590  013742                     l7266:
 24591                           
 24592                           ;stkvar	_grs @ sp[(-4)+0]
 24593  013742  50E1               	movf	fsr1l,w,c
 24594  013744  0FFC               	addlw	-4
 24595  013746  6ED9               	movwf	fsr2l,c
 24596  013748  50E2               	movf	fsr1h,w,c
 24597  01374A  6EDA               	movwf	fsr2h,c
 24598  01374C  0EFF               	movlw	255
 24599  01374E  22DA               	addwfc	fsr2h,f,c
 24600  013750  90D8               	bcf	status,0,c
 24601  013752  32DF               	rrcf	indf2,f,c
 24602  013754                     l7268:
 24603                           
 24604                           ;stkvar	_b @ sp[(-4)+-4]
 24605  013754  0EF8               	movlw	-8
 24606  013756  A0E3               	btfss	plusw1,0,c
 24607  013758  D002               	goto	l7272
 24608                           
 24609                           ;stkvar	_grs @ sp[(-4)+0]
 24610  01375A  0EFC               	movlw	-4
 24611  01375C  8EE3               	bsf	plusw1,7,c
 24612  01375E                     l7272:
 24613  01375E  0E01               	movlw	1
 24614  013760  6E0C               	movwf	(btemp+11)^0,c
 24615                           
 24616                           ;stkvar	_b @ sp[(-4)+-4]
 24617  013762  50E1               	movf	fsr1l,w,c
 24618  013764  0FF8               	addlw	-8
 24619  013766  6ED9               	movwf	fsr2l,c
 24620  013768  50E2               	movf	fsr1h,w,c
 24621  01376A  6EDA               	movwf	fsr2h,c
 24622  01376C  0EFF               	movlw	255
 24623  01376E  22DA               	addwfc	fsr2h,f,c
 24624  013770  280C               	incf	(btemp+11)^0,w,c
 24625  013772  52DE               	movf	postinc2,f,c
 24626  013774  D008               	goto	u5200
 24627  013776                     u5205:
 24628  013776  52DE               	movf	postinc2,f,c
 24629  013778  90D8               	bcf	status,0,c
 24630  01377A  BEDC               	btfsc	preinc2,7,c
 24631  01377C  80D8               	bsf	status,0,c
 24632  01377E  32DD               	rrcf	postdec2,f,c
 24633  013780  32DD               	rrcf	postdec2,f,c
 24634  013782  32DD               	rrcf	postdec2,f,c
 24635  013784  32DE               	rrcf	postinc2,f,c
 24636  013786                     u5200:
 24637  013786  2EE8               	decfsz	wreg,f,c
 24638  013788  D7F6               	goto	u5205
 24639                           
 24640                           ;stkvar	_bexp @ sp[(-4)+1]
 24641  01378A  0EFD               	movlw	-3
 24642  01378C  2AE3               	incf	plusw1,f,c
 24643  01378E                     l7276:
 24644                           
 24645                           ;stkvar	_aexp @ sp[(-4)+2]
 24646                           ;stkvar	_bexp @ sp[(-4)+1]
 24647  01378E  50E1               	movf	fsr1l,w,c
 24648  013790  0FFD               	addlw	-3
 24649  013792  6ED9               	movwf	fsr2l,c
 24650  013794  50E2               	movf	fsr1h,w,c
 24651  013796  6EDA               	movwf	fsr2h,c
 24652  013798  0EFF               	movlw	255
 24653  01379A  22DA               	addwfc	fsr2h,f,c
 24654  01379C  0EFE               	movlw	-2
 24655  01379E  50E3               	movf	plusw1,w,c
 24656  0137A0  5CDE               	subwf	postinc2,w,c
 24657  0137A2  A0D8               	btfss	status,0,c
 24658  0137A4  D7BE               	goto	l7262
 24659  0137A6                     u5210:
 24660                           
 24661                           ;stkvar	_signs @ sp[(-4)+3]
 24662  0137A6  0EFF               	movlw	-1
 24663  0137A8  BCE3               	btfsc	plusw1,6,c
 24664  0137AA  D066               	goto	l7304
 24665                           
 24666                           ;stkvar	_bexp @ sp[(-4)+1]
 24667  0137AC  0EFD               	movlw	-3
 24668  0137AE  50E3               	movf	plusw1,w,c
 24669  0137B0  B4D8               	btfsc	status,2,c
 24670  0137B2  D0F2               	goto	u5310
 24671                           
 24672                           ;stkvar	_a @ sp[(-4)+-8]
 24673                           ;stkvar	_b @ sp[(-4)+-4]
 24674  0137B4  0EF8               	movlw	-8
 24675  0137B6  50E3               	movf	plusw1,w,c
 24676  0137B8  6E01               	movwf	btemp^0,c
 24677  0137BA  0EF4               	movlw	-12
 24678  0137BC  50E3               	movf	plusw1,w,c
 24679  0137BE  2601               	addwf	btemp^0,f,c
 24680  0137C0  0EF8               	movlw	-8
 24681  0137C2  0060  F007  FFE3   	movff	btemp,plusw1
 24682  0137C8  0EF9               	movlw	-7
 24683  0137CA  50E3               	movf	plusw1,w,c
 24684  0137CC  6E01               	movwf	btemp^0,c
 24685  0137CE  0EF5               	movlw	-11
 24686  0137D0  50E3               	movf	plusw1,w,c
 24687  0137D2  2201               	addwfc	btemp^0,f,c
 24688  0137D4  0EF9               	movlw	-7
 24689  0137D6  0060  F007  FFE3   	movff	btemp,plusw1
 24690  0137DC  0EFA               	movlw	-6
 24691  0137DE  50E3               	movf	plusw1,w,c
 24692  0137E0  6E01               	movwf	btemp^0,c
 24693  0137E2  0EF6               	movlw	-10
 24694  0137E4  50E3               	movf	plusw1,w,c
 24695  0137E6  2201               	addwfc	btemp^0,f,c
 24696  0137E8  0EFA               	movlw	-6
 24697  0137EA  0060  F007  FFE3   	movff	btemp,plusw1
 24698  0137F0  0EFB               	movlw	-5
 24699  0137F2  50E3               	movf	plusw1,w,c
 24700  0137F4  6E01               	movwf	btemp^0,c
 24701  0137F6  0EF7               	movlw	-9
 24702  0137F8  50E3               	movf	plusw1,w,c
 24703  0137FA  2201               	addwfc	btemp^0,f,c
 24704  0137FC  0EFB               	movlw	-5
 24705  0137FE  0060  F007  FFE3   	movff	btemp,plusw1
 24706                           
 24707                           ;stkvar	_b @ sp[(-4)+-4]
 24708  013804  0EFB               	movlw	-5
 24709  013806  A0E3               	btfss	plusw1,0,c
 24710  013808  D101               	goto	u5350
 24711                           
 24712                           ;stkvar	_grs @ sp[(-4)+0]
 24713  01380A  0EFC               	movlw	-4
 24714  01380C  A0E3               	btfss	plusw1,0,c
 24715  01380E  D00D               	goto	l7294
 24716                           
 24717                           ;stkvar	_grs @ sp[(-4)+0]
 24718  013810  0EFC               	movlw	-4
 24719  013812  006F FF8C  F00C    	movff	plusw1,btemp+11
 24720  013818  90D8               	bcf	status,0,c
 24721  01381A  320C               	rrcf	(btemp+11)^0,f,c
 24722  01381C  0E01               	movlw	1
 24723  01381E  120C               	iorwf	(btemp+11)^0,f,c
 24724                           
 24725                           ;stkvar	_grs @ sp[(-4)+0]
 24726  013820  0EFC               	movlw	-4
 24727  013822  0060  F033  FFE3   	movff	btemp+11,plusw1
 24728  013828  D009               	goto	l7296
 24729  01382A                     l7294:
 24730                           
 24731                           ;stkvar	_grs @ sp[(-4)+0]
 24732  01382A  50E1               	movf	fsr1l,w,c
 24733  01382C  0FFC               	addlw	-4
 24734  01382E  6ED9               	movwf	fsr2l,c
 24735  013830  50E2               	movf	fsr1h,w,c
 24736  013832  6EDA               	movwf	fsr2h,c
 24737  013834  0EFF               	movlw	255
 24738  013836  22DA               	addwfc	fsr2h,f,c
 24739  013838  90D8               	bcf	status,0,c
 24740  01383A  32DF               	rrcf	indf2,f,c
 24741  01383C                     l7296:
 24742                           
 24743                           ;stkvar	_b @ sp[(-4)+-4]
 24744  01383C  0EF8               	movlw	-8
 24745  01383E  A0E3               	btfss	plusw1,0,c
 24746  013840  D002               	goto	l7300
 24747                           
 24748                           ;stkvar	_grs @ sp[(-4)+0]
 24749  013842  0EFC               	movlw	-4
 24750  013844  8EE3               	bsf	plusw1,7,c
 24751  013846                     l7300:
 24752  013846  0E01               	movlw	1
 24753  013848  6E0C               	movwf	(btemp+11)^0,c
 24754                           
 24755                           ;stkvar	_b @ sp[(-4)+-4]
 24756  01384A  50E1               	movf	fsr1l,w,c
 24757  01384C  0FF8               	addlw	-8
 24758  01384E  6ED9               	movwf	fsr2l,c
 24759  013850  50E2               	movf	fsr1h,w,c
 24760  013852  6EDA               	movwf	fsr2h,c
 24761  013854  0EFF               	movlw	255
 24762  013856  22DA               	addwfc	fsr2h,f,c
 24763  013858  280C               	incf	(btemp+11)^0,w,c
 24764  01385A  52DE               	movf	postinc2,f,c
 24765  01385C  D008               	goto	u5270
 24766  01385E                     u5275:
 24767  01385E  52DE               	movf	postinc2,f,c
 24768  013860  90D8               	bcf	status,0,c
 24769  013862  BEDC               	btfsc	preinc2,7,c
 24770  013864  80D8               	bsf	status,0,c
 24771  013866  32DD               	rrcf	postdec2,f,c
 24772  013868  32DD               	rrcf	postdec2,f,c
 24773  01386A  32DD               	rrcf	postdec2,f,c
 24774  01386C  32DE               	rrcf	postinc2,f,c
 24775  01386E                     u5270:
 24776  01386E  2EE8               	decfsz	wreg,f,c
 24777  013870  D7F6               	goto	u5275
 24778                           
 24779                           ;stkvar	_bexp @ sp[(-4)+1]
 24780  013872  0EFD               	movlw	-3
 24781  013874  2AE3               	incf	plusw1,f,c
 24782  013876  D0CA               	goto	u5350
 24783  013878                     l7304:
 24784                           
 24785                           ;stkvar	_a @ sp[(-4)+-8]
 24786                           ;stkvar	_b @ sp[(-4)+-4]
 24787  013878  50E1               	movf	fsr1l,w,c
 24788  01387A  0FF8               	addlw	-8
 24789  01387C  6ED9               	movwf	fsr2l,c
 24790  01387E  50E2               	movf	fsr1h,w,c
 24791  013880  6EDA               	movwf	fsr2h,c
 24792  013882  0EFF               	movlw	255
 24793  013884  22DA               	addwfc	fsr2h,f,c
 24794  013886  0EF4               	movlw	-12
 24795  013888  50E3               	movf	plusw1,w,c
 24796  01388A  5CDE               	subwf	postinc2,w,c
 24797  01388C  0EF5               	movlw	-11
 24798  01388E  50E3               	movf	plusw1,w,c
 24799  013890  58DE               	subwfb	postinc2,w,c
 24800  013892  0EF6               	movlw	-10
 24801  013894  50E3               	movf	plusw1,w,c
 24802  013896  58DE               	subwfb	postinc2,w,c
 24803  013898  50DE               	movf	postinc2,w,c
 24804  01389A  0A80               	xorlw	128
 24805  01389C  6E01               	movwf	btemp^0,c
 24806  01389E  0EF7               	movlw	-9
 24807  0138A0  50E3               	movf	plusw1,w,c
 24808  0138A2  0A80               	xorlw	128
 24809  0138A4  5801               	subwfb	btemp^0,w,c
 24810  0138A6  B0D8               	btfsc	status,0,c
 24811  0138A8  D053               	goto	l7316
 24812                           
 24813                           ;stkvar	_b @ sp[(-4)+-4]
 24814                           ;stkvar	_a @ sp[(-4)+-8]
 24815  0138AA  0EF4               	movlw	-12
 24816  0138AC  006F FF8C  F009    	movff	plusw1,btemp+8
 24817  0138B2  0EF5               	movlw	-11
 24818  0138B4  006F FF8C  F00A    	movff	plusw1,btemp+9
 24819  0138BA  0EF6               	movlw	-10
 24820  0138BC  006F FF8C  F00B    	movff	plusw1,btemp+10
 24821  0138C2  0EF7               	movlw	-9
 24822  0138C4  006F FF8C  F00C    	movff	plusw1,btemp+11
 24823  0138CA  0EF8               	movlw	-8
 24824  0138CC  50E3               	movf	plusw1,w,c
 24825  0138CE  5E09               	subwf	(btemp+8)^0,f,c
 24826  0138D0  0EF9               	movlw	-7
 24827  0138D2  50E3               	movf	plusw1,w,c
 24828  0138D4  5A0A               	subwfb	(btemp+9)^0,f,c
 24829  0138D6  0EFA               	movlw	-6
 24830  0138D8  50E3               	movf	plusw1,w,c
 24831  0138DA  5A0B               	subwfb	(btemp+10)^0,f,c
 24832  0138DC  0EFB               	movlw	-5
 24833  0138DE  50E3               	movf	plusw1,w,c
 24834  0138E0  5A0C               	subwfb	(btemp+11)^0,f,c
 24835  0138E2  0EFF               	movlw	255
 24836  0138E4  2409               	addwf	(btemp+8)^0,w,c
 24837  0138E6  6E05               	movwf	(btemp+4)^0,c
 24838  0138E8  0EFF               	movlw	255
 24839  0138EA  200A               	addwfc	(btemp+9)^0,w,c
 24840  0138EC  6E06               	movwf	(btemp+5)^0,c
 24841  0138EE  0EFF               	movlw	255
 24842  0138F0  200B               	addwfc	(btemp+10)^0,w,c
 24843  0138F2  6E07               	movwf	(btemp+6)^0,c
 24844  0138F4  0EFF               	movlw	255
 24845  0138F6  200C               	addwfc	(btemp+11)^0,w,c
 24846  0138F8  6E08               	movwf	(btemp+7)^0,c
 24847                           
 24848                           ;stkvar	_b @ sp[(-4)+-4]
 24849  0138FA  0EF8               	movlw	-8
 24850  0138FC  0060  F017  FFE3   	movff	btemp+4,plusw1
 24851  013902  0EF9               	movlw	-7
 24852  013904  0060  F01B  FFE3   	movff	btemp+5,plusw1
 24853  01390A  0EFA               	movlw	-6
 24854  01390C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 24855  013912  0EFB               	movlw	-5
 24856  013914  0060  F023  FFE3   	movff	btemp+7,plusw1
 24857                           
 24858                           ;stkvar	_signs @ sp[(-4)+3]
 24859  01391A  0EFF               	movlw	-1
 24860  01391C  7EE3               	btg	plusw1,7,c
 24861                           
 24862                           ;stkvar	_grs @ sp[(-4)+0]
 24863  01391E  0EFC               	movlw	-4
 24864  013920  50E3               	movf	plusw1,w,c
 24865  013922  0800               	sublw	0
 24866  013924  6E0C               	movwf	(btemp+11)^0,c
 24867                           
 24868                           ;stkvar	_grs @ sp[(-4)+0]
 24869  013926  0EFC               	movlw	-4
 24870  013928  0060  F033  FFE3   	movff	btemp+11,plusw1
 24871                           
 24872                           ;stkvar	_grs @ sp[(-4)+0]
 24873  01392E  0EFC               	movlw	-4
 24874  013930  50E3               	movf	plusw1,w,c
 24875  013932  A4D8               	btfss	status,2,c
 24876  013934  D020               	goto	l7318
 24877                           
 24878                           ;stkvar	_b @ sp[(-4)+-4]
 24879  013936  50E1               	movf	fsr1l,w,c
 24880  013938  0FF8               	addlw	-8
 24881  01393A  6ED9               	movwf	fsr2l,c
 24882  01393C  50E2               	movf	fsr1h,w,c
 24883  01393E  6EDA               	movwf	fsr2h,c
 24884  013940  0EFF               	movlw	255
 24885  013942  22DA               	addwfc	fsr2h,f,c
 24886  013944  2ADE               	incf	postinc2,f,c
 24887  013946  0E00               	movlw	0
 24888  013948  22DE               	addwfc	postinc2,f,c
 24889  01394A  22DE               	addwfc	postinc2,f,c
 24890  01394C  22DE               	addwfc	postinc2,f,c
 24891  01394E  D013               	goto	l7318
 24892  013950                     l7316:
 24893                           
 24894                           ;stkvar	_a @ sp[(-4)+-8]
 24895                           ;stkvar	_b @ sp[(-4)+-4]
 24896  013950  50E1               	movf	fsr1l,w,c
 24897  013952  0FF8               	addlw	-8
 24898  013954  6ED9               	movwf	fsr2l,c
 24899  013956  50E2               	movf	fsr1h,w,c
 24900  013958  6EDA               	movwf	fsr2h,c
 24901  01395A  0EFF               	movlw	255
 24902  01395C  22DA               	addwfc	fsr2h,f,c
 24903  01395E  0EF4               	movlw	-12
 24904  013960  50E3               	movf	plusw1,w,c
 24905  013962  5EDE               	subwf	postinc2,f,c
 24906  013964  0EF5               	movlw	-11
 24907  013966  50E3               	movf	plusw1,w,c
 24908  013968  5ADE               	subwfb	postinc2,f,c
 24909  01396A  0EF6               	movlw	-10
 24910  01396C  50E3               	movf	plusw1,w,c
 24911  01396E  5ADE               	subwfb	postinc2,f,c
 24912  013970  0EF7               	movlw	-9
 24913  013972  50E3               	movf	plusw1,w,c
 24914  013974  5ADE               	subwfb	postinc2,f,c
 24915  013976                     l7318:
 24916                           
 24917                           ;stkvar	_b @ sp[(-4)+-4]
 24918  013976  0EF8               	movlw	-8
 24919  013978  50E3               	movf	plusw1,w,c
 24920  01397A  E145               	bnz	l7340
 24921  01397C  0EF9               	movlw	-7
 24922  01397E  50E3               	movf	plusw1,w,c
 24923  013980  E142               	bnz	l7340
 24924  013982  0EFA               	movlw	-6
 24925  013984  50E3               	movf	plusw1,w,c
 24926  013986  E13F               	bnz	l7340
 24927  013988  0EFB               	movlw	-5
 24928  01398A  50E3               	movf	plusw1,w,c
 24929  01398C  A4D8               	btfss	status,2,c
 24930  01398E  D03B               	goto	l7340
 24931                           
 24932                           ;stkvar	_grs @ sp[(-4)+0]
 24933  013990  0EFC               	movlw	-4
 24934  013992  50E3               	movf	plusw1,w,c
 24935  013994  A4D8               	btfss	status,2,c
 24936  013996  D037               	goto	l7340
 24937  013998                     u5310:
 24938  013998  0E00               	movlw	0
 24939  01399A  6E01               	movwf	btemp^0,c
 24940  01399C  0E00               	movlw	0
 24941  01399E  6E02               	movwf	(btemp+1)^0,c
 24942  0139A0  0E00               	movlw	0
 24943  0139A2  6E03               	movwf	(btemp+2)^0,c
 24944  0139A4  0E00               	movlw	0
 24945  0139A6  6E04               	movwf	(btemp+3)^0,c
 24946  0139A8  D0C6               	goto	l2828
 24947  0139AA                     l7326:
 24948                           
 24949                           ;stkvar	_b @ sp[(-4)+-4]
 24950  0139AA  90D8               	bcf	status,0,c
 24951  0139AC  0EF8               	movlw	-8
 24952  0139AE  36E3               	rlcf	plusw1,f,c
 24953  0139B0  0EF9               	movlw	-7
 24954  0139B2  36E3               	rlcf	plusw1,f,c
 24955  0139B4  0EFA               	movlw	-6
 24956  0139B6  36E3               	rlcf	plusw1,f,c
 24957  0139B8  0EFB               	movlw	-5
 24958  0139BA  36E3               	rlcf	plusw1,f,c
 24959                           
 24960                           ;stkvar	_grs @ sp[(-4)+0]
 24961  0139BC  0EFC               	movlw	-4
 24962  0139BE  AEE3               	btfss	plusw1,7,c
 24963  0139C0  D002               	goto	l2840
 24964                           
 24965                           ;stkvar	_b @ sp[(-4)+-4]
 24966  0139C2  0EF8               	movlw	-8
 24967  0139C4  80E3               	bsf	plusw1,0,c
 24968  0139C6                     l2840:
 24969                           
 24970                           ;stkvar	_grs @ sp[(-4)+0]
 24971  0139C6  0EFC               	movlw	-4
 24972  0139C8  A0E3               	btfss	plusw1,0,c
 24973  0139CA  D00E               	goto	l7334
 24974                           
 24975                           ;stkvar	_grs @ sp[(-4)+0]
 24976  0139CC  0EFC               	movlw	-4
 24977  0139CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 24978  0139D4  90D8               	bcf	status,0,c
 24979  0139D6  340C               	rlcf	(btemp+11)^0,w,c
 24980  0139D8  6E0B               	movwf	(btemp+10)^0,c
 24981  0139DA  0E01               	movlw	1
 24982  0139DC  120B               	iorwf	(btemp+10)^0,f,c
 24983                           
 24984                           ;stkvar	_grs @ sp[(-4)+0]
 24985  0139DE  0EFC               	movlw	-4
 24986  0139E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24987  0139E6  D009               	goto	l7336
 24988  0139E8                     l7334:
 24989                           
 24990                           ;stkvar	_grs @ sp[(-4)+0]
 24991  0139E8  50E1               	movf	fsr1l,w,c
 24992  0139EA  0FFC               	addlw	-4
 24993  0139EC  6ED9               	movwf	fsr2l,c
 24994  0139EE  50E2               	movf	fsr1h,w,c
 24995  0139F0  6EDA               	movwf	fsr2h,c
 24996  0139F2  0EFF               	movlw	255
 24997  0139F4  22DA               	addwfc	fsr2h,f,c
 24998  0139F6  90D8               	bcf	status,0,c
 24999  0139F8  36DF               	rlcf	indf2,f,c
 25000  0139FA                     l7336:
 25001                           
 25002                           ;stkvar	_bexp @ sp[(-4)+1]
 25003  0139FA  0EFD               	movlw	-3
 25004  0139FC  50E3               	movf	plusw1,w,c
 25005  0139FE  B4D8               	btfsc	status,2,c
 25006  013A00  D002               	goto	l7340
 25007                           
 25008                           ;stkvar	_bexp @ sp[(-4)+1]
 25009  013A02  0EFD               	movlw	-3
 25010  013A04  06E3               	decf	plusw1,f,c
 25011  013A06                     l7340:
 25012                           
 25013                           ;stkvar	_b @ sp[(-4)+-4]
 25014  013A06  0EFA               	movlw	-6
 25015  013A08  AEE3               	btfss	plusw1,7,c
 25016  013A0A  D7CF               	goto	l7326
 25017  013A0C                     u5350:
 25018                           
 25019                           ;stkvar	_aexp @ sp[(-4)+2]
 25020  013A0C  0EFE               	movlw	-2
 25021  013A0E  6AE3               	clrf	plusw1,c
 25022                           
 25023                           ;stkvar	_grs @ sp[(-4)+0]
 25024  013A10  0EFC               	movlw	-4
 25025  013A12  AEE3               	btfss	plusw1,7,c
 25026  013A14  D00F               	goto	l7354
 25027                           
 25028                           ;stkvar	_grs @ sp[(-4)+0]
 25029  013A16  0EFC               	movlw	-4
 25030  013A18  006F FF8C  F00C    	movff	plusw1,btemp+11
 25031  013A1E  0E7F               	movlw	127
 25032  013A20  160C               	andwf	(btemp+11)^0,f,c
 25033  013A22  B4D8               	btfsc	status,2,c
 25034  013A24  D004               	goto	l7350
 25035  013A26                     u5370:
 25036                           
 25037                           ;stkvar	_aexp @ sp[(-4)+2]
 25038  013A26  0EFE               	movlw	-2
 25039  013A28  6AE3               	clrf	plusw1,c
 25040  013A2A  2AE3               	incf	plusw1,f,c
 25041  013A2C  D003               	goto	l7354
 25042  013A2E                     l7350:
 25043                           
 25044                           ;stkvar	_b @ sp[(-4)+-4]
 25045  013A2E  0EF8               	movlw	-8
 25046  013A30  B0E3               	btfsc	plusw1,0,c
 25047  013A32  D7F9               	goto	u5370
 25048  013A34                     l7354:
 25049                           
 25050                           ;stkvar	_aexp @ sp[(-4)+2]
 25051  013A34  0EFE               	movlw	-2
 25052  013A36  50E3               	movf	plusw1,w,c
 25053  013A38  B4D8               	btfsc	status,2,c
 25054  013A3A  D02B               	goto	l7366
 25055                           
 25056                           ;stkvar	_b @ sp[(-4)+-4]
 25057  013A3C  50E1               	movf	fsr1l,w,c
 25058  013A3E  0FF8               	addlw	-8
 25059  013A40  6ED9               	movwf	fsr2l,c
 25060  013A42  50E2               	movf	fsr1h,w,c
 25061  013A44  6EDA               	movwf	fsr2h,c
 25062  013A46  0EFF               	movlw	255
 25063  013A48  22DA               	addwfc	fsr2h,f,c
 25064  013A4A  2ADE               	incf	postinc2,f,c
 25065  013A4C  0E00               	movlw	0
 25066  013A4E  22DE               	addwfc	postinc2,f,c
 25067  013A50  22DE               	addwfc	postinc2,f,c
 25068  013A52  22DE               	addwfc	postinc2,f,c
 25069                           
 25070                           ;stkvar	_b @ sp[(-4)+-4]
 25071  013A54  0EFB               	movlw	-5
 25072  013A56  A0E3               	btfss	plusw1,0,c
 25073  013A58  D01C               	goto	l7366
 25074  013A5A  0E01               	movlw	1
 25075  013A5C  6E0C               	movwf	(btemp+11)^0,c
 25076                           
 25077                           ;stkvar	_b @ sp[(-4)+-4]
 25078  013A5E  50E1               	movf	fsr1l,w,c
 25079  013A60  0FF8               	addlw	-8
 25080  013A62  6ED9               	movwf	fsr2l,c
 25081  013A64  50E2               	movf	fsr1h,w,c
 25082  013A66  6EDA               	movwf	fsr2h,c
 25083  013A68  0EFF               	movlw	255
 25084  013A6A  22DA               	addwfc	fsr2h,f,c
 25085  013A6C  280C               	incf	(btemp+11)^0,w,c
 25086  013A6E  52DE               	movf	postinc2,f,c
 25087  013A70  D008               	goto	u5410
 25088  013A72                     u5415:
 25089  013A72  52DE               	movf	postinc2,f,c
 25090  013A74  90D8               	bcf	status,0,c
 25091  013A76  BEDC               	btfsc	preinc2,7,c
 25092  013A78  80D8               	bsf	status,0,c
 25093  013A7A  32DD               	rrcf	postdec2,f,c
 25094  013A7C  32DD               	rrcf	postdec2,f,c
 25095  013A7E  32DD               	rrcf	postdec2,f,c
 25096  013A80  32DE               	rrcf	postinc2,f,c
 25097  013A82                     u5410:
 25098  013A82  2EE8               	decfsz	wreg,f,c
 25099  013A84  D7F6               	goto	u5415
 25100                           
 25101                           ;stkvar	_bexp @ sp[(-4)+1]
 25102  013A86  0EFD               	movlw	-3
 25103  013A88  28E3               	incf	plusw1,w,c
 25104  013A8A  B4D8               	btfsc	status,2,c
 25105  013A8C  D002               	goto	l7366
 25106                           
 25107                           ;stkvar	_bexp @ sp[(-4)+1]
 25108  013A8E  0EFD               	movlw	-3
 25109  013A90  2AE3               	incf	plusw1,f,c
 25110  013A92                     l7366:
 25111                           
 25112                           ;stkvar	_bexp @ sp[(-4)+1]
 25113  013A92  0EFD               	movlw	-3
 25114  013A94  28E3               	incf	plusw1,w,c
 25115  013A96  B4D8               	btfsc	status,2,c
 25116  013A98  D004               	goto	u5440
 25117                           
 25118                           ;stkvar	_bexp @ sp[(-4)+1]
 25119  013A9A  0EFD               	movlw	-3
 25120  013A9C  50E3               	movf	plusw1,w,c
 25121  013A9E  A4D8               	btfss	status,2,c
 25122  013AA0  D00E               	goto	l7376
 25123  013AA2                     u5440:
 25124                           
 25125                           ;stkvar	_b @ sp[(-4)+-4]
 25126  013AA2  0EF8               	movlw	-8
 25127  013AA4  6AE3               	clrf	plusw1,c
 25128  013AA6  0EF9               	movlw	-7
 25129  013AA8  6AE3               	clrf	plusw1,c
 25130  013AAA  0EFA               	movlw	-6
 25131  013AAC  6AE3               	clrf	plusw1,c
 25132  013AAE  0EFB               	movlw	-5
 25133  013AB0  6AE3               	clrf	plusw1,c
 25134                           
 25135                           ;stkvar	_bexp @ sp[(-4)+1]
 25136  013AB2  0EFD               	movlw	-3
 25137  013AB4  50E3               	movf	plusw1,w,c
 25138  013AB6  A4D8               	btfss	status,2,c
 25139  013AB8  D002               	goto	l7376
 25140                           
 25141                           ;stkvar	_signs @ sp[(-4)+3]
 25142  013ABA  0EFF               	movlw	-1
 25143  013ABC  6AE3               	clrf	plusw1,c
 25144  013ABE                     l7376:
 25145                           
 25146                           ;stkvar	_bexp @ sp[(-4)+1]
 25147  013ABE  0EFD               	movlw	-3
 25148  013AC0  A0E3               	btfss	plusw1,0,c
 25149  013AC2  D009               	goto	l7380
 25150                           
 25151                           ;stkvar	_b @ sp[(-4)+-4]
 25152  013AC4  0EFA               	movlw	250
 25153  013AC6  24E1               	addwf	fsr1l,w,c
 25154  013AC8  6ED9               	movwf	fsr2l,c
 25155  013ACA  0EFF               	movlw	255
 25156  013ACC  20E2               	addwfc	fsr1h,w,c
 25157  013ACE  6EDA               	movwf	fsr2h,c
 25158  013AD0  0E00               	movlw	0
 25159  013AD2  8EDB               	bsf	plusw2,7,c
 25160  013AD4  D008               	goto	l7382
 25161  013AD6                     l7380:
 25162                           
 25163                           ;stkvar	_b @ sp[(-4)+-4]
 25164  013AD6  0EFA               	movlw	250
 25165  013AD8  24E1               	addwf	fsr1l,w,c
 25166  013ADA  6ED9               	movwf	fsr2l,c
 25167  013ADC  0EFF               	movlw	255
 25168  013ADE  20E2               	addwfc	fsr1h,w,c
 25169  013AE0  6EDA               	movwf	fsr2h,c
 25170  013AE2  0E7F               	movlw	127
 25171  013AE4  16DF               	andwf	indf2,f,c
 25172  013AE6                     l7382:
 25173                           
 25174                           ;stkvar	_b @ sp[(-4)+-4]
 25175  013AE6  0EFB               	movlw	251
 25176  013AE8  24E1               	addwf	fsr1l,w,c
 25177  013AEA  6ED9               	movwf	fsr2l,c
 25178  013AEC  0EFF               	movlw	255
 25179  013AEE  20E2               	addwfc	fsr1h,w,c
 25180  013AF0  6EDA               	movwf	fsr2h,c
 25181                           
 25182                           ;stkvar	_bexp @ sp[(-4)+1]
 25183  013AF2  0EFD               	movlw	-3
 25184  013AF4  006F FF8C  F00C    	movff	plusw1,btemp+11
 25185  013AFA  90D8               	bcf	status,0,c
 25186  013AFC  300C               	rrcf	(btemp+11)^0,w,c
 25187  013AFE  6EDF               	movwf	indf2,c
 25188                           
 25189                           ;stkvar	_signs @ sp[(-4)+3]
 25190  013B00  0EFF               	movlw	-1
 25191  013B02  AEE3               	btfss	plusw1,7,c
 25192  013B04  D008               	goto	l7388
 25193                           
 25194                           ;stkvar	_b @ sp[(-4)+-4]
 25195  013B06  0EFB               	movlw	251
 25196  013B08  24E1               	addwf	fsr1l,w,c
 25197  013B0A  6ED9               	movwf	fsr2l,c
 25198  013B0C  0EFF               	movlw	255
 25199  013B0E  20E2               	addwfc	fsr1h,w,c
 25200  013B10  6EDA               	movwf	fsr2h,c
 25201  013B12  0E00               	movlw	0
 25202  013B14  8EDB               	bsf	plusw2,7,c
 25203  013B16                     l7388:
 25204                           
 25205                           ;stkvar	_b @ sp[(-4)+-4]
 25206  013B16  0EF8               	movlw	-8
 25207  013B18  006F FF8C  F001    	movff	plusw1,btemp
 25208  013B1E  0EF9               	movlw	-7
 25209  013B20  006F FF8C  F002    	movff	plusw1,btemp+1
 25210  013B26  0EFA               	movlw	-6
 25211  013B28  006F FF8C  F003    	movff	plusw1,btemp+2
 25212  013B2E  0EFB               	movlw	-5
 25213  013B30  006F FF8C  F004    	movff	plusw1,btemp+3
 25214  013B36                     l2828:
 25215                           
 25216                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 25217  013B36  0EF4               	movlw	244
 25218  013B38  26E1               	addwf	fsr1l,f,c
 25219  013B3A  0EFF               	movlw	255
 25220  013B3C  22E2               	addwfc	fsr1h,f,c
 25221  013B3E  0012               	return		;funcret
 25222  013B40                     __end_of___fladd:
 25223                           	opt callstack 0
 25224                           
 25225 ;; *************** function ___flmul *****************
 25226 ;; Defined at:
 25227 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 25228 ;; Parameters:    Size  Location     Type
 25229 ;;  b               4  [STACK] unsigned char 
 25230 ;;  a               4  [STACK] unsigned char 
 25231 ;; Auto vars:     Size  Location     Type
 25232 ;;  prod            4  [STACK] struct .
 25233 ;;  grs             4  [STACK] unsigned long 
 25234 ;;  temp            2  [STACK] struct .
 25235 ;;  bexp            1  [STACK] unsigned char 
 25236 ;;  aexp            1  [STACK] unsigned char 
 25237 ;;  sign            1  [STACK] unsigned char 
 25238 ;; Return value:  Size  Location     Type
 25239 ;;                  4  [STACK] unsigned char 
 25240 ;; Registers used:
 25241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25242 ;; Tracked objects:
 25243 ;;		On entry : 0/1
 25244 ;;		On exit  : 0/0
 25245 ;;		Unchanged: 0/0
 25246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25251 ;;Total ram usage:        0 bytes
 25252 ;; Hardware stack levels used:    1
 25253 ;; Hardware stack levels required when called:   15
 25254 ;; This function calls:
 25255 ;;		Nothing
 25256 ;; This function is called by:
 25257 ;;		_conv_raw_result
 25258 ;;		_lp_filter
 25259 ;;		_calc_model_data
 25260 ;;		_calc_bsoc
 25261 ;;		_init_bsoc
 25262 ;;		_efgtoa
 25263 ;; This function uses a reentrant model
 25264 ;;
 25265                           
 25266                           	psect	text101
 25267  012B5A                     __ptext101:
 25268                           	opt callstack 0
 25269  012B5A                     ___flmul:
 25270                           	opt callstack 0
 25271                           
 25272                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25273  012B5A  0E0D               	movlw	13
 25274  012B5C  26E1               	addwf	fsr1l,f,c
 25275  012B5E  0E00               	movlw	0
 25276  012B60  22E2               	addwfc	fsr1h,f,c
 25277                           
 25278                           ;stkvar	_b @ sp[(-13)+-4]
 25279                           
 25280                           ;incstack = 0
 25281 ;; hardware stack exceeded
 25282  012B62  0EF2               	movlw	242
 25283  012B64  24E1               	addwf	fsr1l,w,c
 25284  012B66  6ED9               	movwf	fsr2l,c
 25285  012B68  0EFF               	movlw	255
 25286  012B6A  20E2               	addwfc	fsr1h,w,c
 25287  012B6C  6EDA               	movwf	fsr2h,c
 25288  012B6E  50DF               	movf	indf2,w,c
 25289  012B70  6E0C               	movwf	(btemp+11)^0,c
 25290  012B72  0E80               	movlw	128
 25291  012B74  160C               	andwf	(btemp+11)^0,f,c
 25292                           
 25293                           ;stkvar	_sign @ sp[(-13)+12]
 25294  012B76  0EFF               	movlw	-1
 25295  012B78  0060  F033  FFE3   	movff	btemp+11,plusw1
 25296                           
 25297                           ;stkvar	_b @ sp[(-13)+-4]
 25298  012B7E  0EF2               	movlw	242
 25299  012B80  24E1               	addwf	fsr1l,w,c
 25300  012B82  6ED9               	movwf	fsr2l,c
 25301  012B84  0EFF               	movlw	255
 25302  012B86  20E2               	addwfc	fsr1h,w,c
 25303  012B88  6EDA               	movwf	fsr2h,c
 25304  012B8A  50DF               	movf	indf2,w,c
 25305  012B8C  6E0C               	movwf	(btemp+11)^0,c
 25306  012B8E  90D8               	bcf	status,0,c
 25307  012B90  340C               	rlcf	(btemp+11)^0,w,c
 25308  012B92  6E0B               	movwf	(btemp+10)^0,c
 25309                           
 25310                           ;stkvar	_bexp @ sp[(-13)+10]
 25311  012B94  0EFD               	movlw	-3
 25312  012B96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25313                           
 25314                           ;stkvar	_b @ sp[(-13)+-4]
 25315  012B9C  0EF1               	movlw	241
 25316  012B9E  24E1               	addwf	fsr1l,w,c
 25317  012BA0  6ED9               	movwf	fsr2l,c
 25318  012BA2  0EFF               	movlw	255
 25319  012BA4  20E2               	addwfc	fsr1h,w,c
 25320  012BA6  6EDA               	movwf	fsr2h,c
 25321  012BA8  AEDF               	btfss	indf2,7,c
 25322  012BAA  D002               	goto	l7772
 25323                           
 25324                           ;stkvar	_bexp @ sp[(-13)+10]
 25325  012BAC  0EFD               	movlw	-3
 25326  012BAE  80E3               	bsf	plusw1,0,c
 25327  012BB0                     l7772:
 25328                           
 25329                           ;stkvar	_bexp @ sp[(-13)+10]
 25330  012BB0  0EFD               	movlw	-3
 25331  012BB2  50E3               	movf	plusw1,w,c
 25332  012BB4  B4D8               	btfsc	status,2,c
 25333  012BB6  D01F               	goto	l7780
 25334                           
 25335                           ;stkvar	_bexp @ sp[(-13)+10]
 25336  012BB8  0EFD               	movlw	-3
 25337  012BBA  28E3               	incf	plusw1,w,c
 25338  012BBC  A4D8               	btfss	status,2,c
 25339  012BBE  D018               	goto	l7778
 25340  012BC0  0E00               	movlw	0
 25341  012BC2  6E09               	movwf	(btemp+8)^0,c
 25342  012BC4  0E00               	movlw	0
 25343  012BC6  6E0A               	movwf	(btemp+9)^0,c
 25344  012BC8  0E00               	movlw	0
 25345  012BCA  6E0B               	movwf	(btemp+10)^0,c
 25346  012BCC  0E00               	movlw	0
 25347  012BCE  6E0C               	movwf	(btemp+11)^0,c
 25348                           
 25349                           ;stkvar	_b @ sp[(-13)+-4]
 25350  012BD0  0EEF               	movlw	-17
 25351  012BD2  0060  F027  FFE3   	movff	btemp+8,plusw1
 25352  012BD8  0EF0               	movlw	-16
 25353  012BDA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25354  012BE0  0EF1               	movlw	-15
 25355  012BE2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25356  012BE8  0EF2               	movlw	-14
 25357  012BEA  0060  F033  FFE3   	movff	btemp+11,plusw1
 25358  012BF0                     l7778:
 25359                           
 25360                           ;stkvar	_b @ sp[(-13)+-4]
 25361  012BF0  0EF1               	movlw	-15
 25362  012BF2  8EE3               	bsf	plusw1,7,c
 25363  012BF4  D018               	goto	l7782
 25364  012BF6                     l7780:
 25365  012BF6  0E00               	movlw	0
 25366  012BF8  6E09               	movwf	(btemp+8)^0,c
 25367  012BFA  0E00               	movlw	0
 25368  012BFC  6E0A               	movwf	(btemp+9)^0,c
 25369  012BFE  0E00               	movlw	0
 25370  012C00  6E0B               	movwf	(btemp+10)^0,c
 25371  012C02  0E00               	movlw	0
 25372  012C04  6E0C               	movwf	(btemp+11)^0,c
 25373                           
 25374                           ;stkvar	_b @ sp[(-13)+-4]
 25375  012C06  0EEF               	movlw	-17
 25376  012C08  0060  F027  FFE3   	movff	btemp+8,plusw1
 25377  012C0E  0EF0               	movlw	-16
 25378  012C10  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25379  012C16  0EF1               	movlw	-15
 25380  012C18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25381  012C1E  0EF2               	movlw	-14
 25382  012C20  0060  F033  FFE3   	movff	btemp+11,plusw1
 25383  012C26                     l7782:
 25384                           
 25385                           ;stkvar	_a @ sp[(-13)+-8]
 25386  012C26  0EEE               	movlw	238
 25387  012C28  24E1               	addwf	fsr1l,w,c
 25388  012C2A  6ED9               	movwf	fsr2l,c
 25389  012C2C  0EFF               	movlw	255
 25390  012C2E  20E2               	addwfc	fsr1h,w,c
 25391  012C30  6EDA               	movwf	fsr2h,c
 25392  012C32  50DF               	movf	indf2,w,c
 25393  012C34  6E0C               	movwf	(btemp+11)^0,c
 25394  012C36  0E80               	movlw	128
 25395  012C38  160C               	andwf	(btemp+11)^0,f,c
 25396                           
 25397                           ;stkvar	_sign @ sp[(-13)+12]
 25398  012C3A  50E1               	movf	fsr1l,w,c
 25399  012C3C  0FFF               	addlw	-1
 25400  012C3E  6ED9               	movwf	fsr2l,c
 25401  012C40  50E2               	movf	fsr1h,w,c
 25402  012C42  6EDA               	movwf	fsr2h,c
 25403  012C44  0EFF               	movlw	255
 25404  012C46  22DA               	addwfc	fsr2h,f,c
 25405  012C48  500C               	movf	(btemp+11)^0,w,c
 25406  012C4A  1ADF               	xorwf	indf2,f,c
 25407                           
 25408                           ;stkvar	_a @ sp[(-13)+-8]
 25409  012C4C  0EEE               	movlw	238
 25410  012C4E  24E1               	addwf	fsr1l,w,c
 25411  012C50  6ED9               	movwf	fsr2l,c
 25412  012C52  0EFF               	movlw	255
 25413  012C54  20E2               	addwfc	fsr1h,w,c
 25414  012C56  6EDA               	movwf	fsr2h,c
 25415  012C58  50DF               	movf	indf2,w,c
 25416  012C5A  6E0C               	movwf	(btemp+11)^0,c
 25417  012C5C  90D8               	bcf	status,0,c
 25418  012C5E  340C               	rlcf	(btemp+11)^0,w,c
 25419  012C60  6E0B               	movwf	(btemp+10)^0,c
 25420                           
 25421                           ;stkvar	_aexp @ sp[(-13)+11]
 25422  012C62  0EFE               	movlw	-2
 25423  012C64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25424                           
 25425                           ;stkvar	_a @ sp[(-13)+-8]
 25426  012C6A  0EED               	movlw	237
 25427  012C6C  24E1               	addwf	fsr1l,w,c
 25428  012C6E  6ED9               	movwf	fsr2l,c
 25429  012C70  0EFF               	movlw	255
 25430  012C72  20E2               	addwfc	fsr1h,w,c
 25431  012C74  6EDA               	movwf	fsr2h,c
 25432  012C76  AEDF               	btfss	indf2,7,c
 25433  012C78  D002               	goto	l7790
 25434                           
 25435                           ;stkvar	_aexp @ sp[(-13)+11]
 25436  012C7A  0EFE               	movlw	-2
 25437  012C7C  80E3               	bsf	plusw1,0,c
 25438  012C7E                     l7790:
 25439                           
 25440                           ;stkvar	_aexp @ sp[(-13)+11]
 25441  012C7E  0EFE               	movlw	-2
 25442  012C80  50E3               	movf	plusw1,w,c
 25443  012C82  B4D8               	btfsc	status,2,c
 25444  012C84  D01F               	goto	l7798
 25445                           
 25446                           ;stkvar	_aexp @ sp[(-13)+11]
 25447  012C86  0EFE               	movlw	-2
 25448  012C88  28E3               	incf	plusw1,w,c
 25449  012C8A  A4D8               	btfss	status,2,c
 25450  012C8C  D018               	goto	l7796
 25451  012C8E  0E00               	movlw	0
 25452  012C90  6E09               	movwf	(btemp+8)^0,c
 25453  012C92  0E00               	movlw	0
 25454  012C94  6E0A               	movwf	(btemp+9)^0,c
 25455  012C96  0E00               	movlw	0
 25456  012C98  6E0B               	movwf	(btemp+10)^0,c
 25457  012C9A  0E00               	movlw	0
 25458  012C9C  6E0C               	movwf	(btemp+11)^0,c
 25459                           
 25460                           ;stkvar	_a @ sp[(-13)+-8]
 25461  012C9E  0EEB               	movlw	-21
 25462  012CA0  0060  F027  FFE3   	movff	btemp+8,plusw1
 25463  012CA6  0EEC               	movlw	-20
 25464  012CA8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25465  012CAE  0EED               	movlw	-19
 25466  012CB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25467  012CB6  0EEE               	movlw	-18
 25468  012CB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 25469  012CBE                     l7796:
 25470                           
 25471                           ;stkvar	_a @ sp[(-13)+-8]
 25472  012CBE  0EED               	movlw	-19
 25473  012CC0  8EE3               	bsf	plusw1,7,c
 25474  012CC2  D018               	goto	l7800
 25475  012CC4                     l7798:
 25476  012CC4  0E00               	movlw	0
 25477  012CC6  6E09               	movwf	(btemp+8)^0,c
 25478  012CC8  0E00               	movlw	0
 25479  012CCA  6E0A               	movwf	(btemp+9)^0,c
 25480  012CCC  0E00               	movlw	0
 25481  012CCE  6E0B               	movwf	(btemp+10)^0,c
 25482  012CD0  0E00               	movlw	0
 25483  012CD2  6E0C               	movwf	(btemp+11)^0,c
 25484                           
 25485                           ;stkvar	_a @ sp[(-13)+-8]
 25486  012CD4  0EEB               	movlw	-21
 25487  012CD6  0060  F027  FFE3   	movff	btemp+8,plusw1
 25488  012CDC  0EEC               	movlw	-20
 25489  012CDE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25490  012CE4  0EED               	movlw	-19
 25491  012CE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25492  012CEC  0EEE               	movlw	-18
 25493  012CEE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25494  012CF4                     l7800:
 25495                           
 25496                           ;stkvar	_aexp @ sp[(-13)+11]
 25497  012CF4  0EFE               	movlw	-2
 25498  012CF6  50E3               	movf	plusw1,w,c
 25499  012CF8  B4D8               	btfsc	status,2,c
 25500  012CFA  D004               	goto	u6380
 25501                           
 25502                           ;stkvar	_bexp @ sp[(-13)+10]
 25503  012CFC  0EFD               	movlw	-3
 25504  012CFE  50E3               	movf	plusw1,w,c
 25505  012D00  A4D8               	btfss	status,2,c
 25506  012D02  D009               	goto	l7808
 25507  012D04                     u6380:
 25508  012D04  0E00               	movlw	0
 25509  012D06  6E01               	movwf	btemp^0,c
 25510  012D08  0E00               	movlw	0
 25511  012D0A  6E02               	movwf	(btemp+1)^0,c
 25512  012D0C  0E00               	movlw	0
 25513  012D0E  6E03               	movwf	(btemp+2)^0,c
 25514  012D10  0E00               	movlw	0
 25515  012D12  6E04               	movwf	(btemp+3)^0,c
 25516  012D14  D332               	goto	l2909
 25517  012D16                     l7808:
 25518                           
 25519                           ;stkvar	_b @ sp[(-13)+-4]
 25520  012D16  0EEF               	movlw	-17
 25521  012D18  006F FF8C  F00C    	movff	plusw1,btemp+11
 25522                           
 25523                           ;stkvar	_a @ sp[(-13)+-8]
 25524  012D1E  0EED               	movlw	237
 25525  012D20  24E1               	addwf	fsr1l,w,c
 25526  012D22  6ED9               	movwf	fsr2l,c
 25527  012D24  0EFF               	movlw	255
 25528  012D26  20E2               	addwfc	fsr1h,w,c
 25529  012D28  6EDA               	movwf	fsr2h,c
 25530  012D2A  50DF               	movf	indf2,w,c
 25531  012D2C  020C               	mulwf	(btemp+11)^0,c
 25532                           
 25533                           ;stkvar	_temp @ sp[(-13)+8]
 25534  012D2E  0EFB               	movlw	-5
 25535  012D30  006F FFCF FFE3     	movff	prodl,plusw1
 25536  012D36  0EFC               	movlw	-4
 25537  012D38  006F FFD3 FFE3     	movff	prodh,plusw1
 25538                           
 25539                           ;stkvar	_temp @ sp[(-13)+8]
 25540  012D3E  0EFB               	movlw	-5
 25541  012D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 25542  012D46  0060  F030  F005   	movff	btemp+11,btemp+4
 25543  012D4C  6A06               	clrf	(btemp+5)^0,c
 25544  012D4E  6A07               	clrf	(btemp+6)^0,c
 25545  012D50  6A08               	clrf	(btemp+7)^0,c
 25546                           
 25547                           ;stkvar	_grs @ sp[(-13)+4]
 25548  012D52  0EF7               	movlw	-9
 25549  012D54  0060  F017  FFE3   	movff	btemp+4,plusw1
 25550  012D5A  0EF8               	movlw	-8
 25551  012D5C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 25552  012D62  0EF9               	movlw	-7
 25553  012D64  0060  F01F  FFE3   	movff	btemp+6,plusw1
 25554  012D6A  0EFA               	movlw	-6
 25555  012D6C  0060  F023  FFE3   	movff	btemp+7,plusw1
 25556                           
 25557                           ;stkvar	_temp @ sp[(-13)+8]
 25558  012D72  0EFC               	movlw	252
 25559  012D74  24E1               	addwf	fsr1l,w,c
 25560  012D76  6ED9               	movwf	fsr2l,c
 25561  012D78  0EFF               	movlw	255
 25562  012D7A  20E2               	addwfc	fsr1h,w,c
 25563  012D7C  6EDA               	movwf	fsr2h,c
 25564  012D7E  50DF               	movf	indf2,w,c
 25565  012D80  6E0C               	movwf	(btemp+11)^0,c
 25566  012D82  0060  F030  F005   	movff	btemp+11,btemp+4
 25567  012D88  6A06               	clrf	(btemp+5)^0,c
 25568  012D8A  6A07               	clrf	(btemp+6)^0,c
 25569  012D8C  6A08               	clrf	(btemp+7)^0,c
 25570                           
 25571                           ;stkvar	_prod @ sp[(-13)+0]
 25572  012D8E  0EF3               	movlw	-13
 25573  012D90  0060  F017  FFE3   	movff	btemp+4,plusw1
 25574  012D96  0EF4               	movlw	-12
 25575  012D98  0060  F01B  FFE3   	movff	btemp+5,plusw1
 25576  012D9E  0EF5               	movlw	-11
 25577  012DA0  0060  F01F  FFE3   	movff	btemp+6,plusw1
 25578  012DA6  0EF6               	movlw	-10
 25579  012DA8  0060  F023  FFE3   	movff	btemp+7,plusw1
 25580                           
 25581                           ;stkvar	_b @ sp[(-13)+-4]
 25582  012DAE  0EF0               	movlw	240
 25583  012DB0  24E1               	addwf	fsr1l,w,c
 25584  012DB2  6ED9               	movwf	fsr2l,c
 25585  012DB4  0EFF               	movlw	255
 25586  012DB6  20E2               	addwfc	fsr1h,w,c
 25587  012DB8  6EDA               	movwf	fsr2h,c
 25588  012DBA  50DF               	movf	indf2,w,c
 25589  012DBC  6E0C               	movwf	(btemp+11)^0,c
 25590                           
 25591                           ;stkvar	_a @ sp[(-13)+-8]
 25592  012DBE  0EEC               	movlw	236
 25593  012DC0  24E1               	addwf	fsr1l,w,c
 25594  012DC2  6ED9               	movwf	fsr2l,c
 25595  012DC4  0EFF               	movlw	255
 25596  012DC6  20E2               	addwfc	fsr1h,w,c
 25597  012DC8  6EDA               	movwf	fsr2h,c
 25598  012DCA  50DF               	movf	indf2,w,c
 25599  012DCC  020C               	mulwf	(btemp+11)^0,c
 25600                           
 25601                           ;stkvar	_temp @ sp[(-13)+8]
 25602  012DCE  0EFB               	movlw	-5
 25603  012DD0  006F FFCF FFE3     	movff	prodl,plusw1
 25604  012DD6  0EFC               	movlw	-4
 25605  012DD8  006F FFD3 FFE3     	movff	prodh,plusw1
 25606                           
 25607                           ;stkvar	_grs @ sp[(-13)+4]
 25608  012DDE  50E1               	movf	fsr1l,w,c
 25609  012DE0  0FF7               	addlw	-9
 25610  012DE2  6ED9               	movwf	fsr2l,c
 25611  012DE4  50E2               	movf	fsr1h,w,c
 25612  012DE6  6EDA               	movwf	fsr2h,c
 25613  012DE8  0EFF               	movlw	255
 25614  012DEA  22DA               	addwfc	fsr2h,f,c
 25615                           
 25616                           ;stkvar	_temp @ sp[(-13)+8]
 25617  012DEC  0EFB               	movlw	-5
 25618  012DEE  50E3               	movf	plusw1,w,c
 25619  012DF0  26DE               	addwf	postinc2,f,c
 25620  012DF2  0E00               	movlw	0
 25621  012DF4  22DE               	addwfc	postinc2,f,c
 25622  012DF6  22DE               	addwfc	postinc2,f,c
 25623  012DF8  22DE               	addwfc	postinc2,f,c
 25624                           
 25625                           ;stkvar	_prod @ sp[(-13)+0]
 25626  012DFA  50E1               	movf	fsr1l,w,c
 25627  012DFC  0FF3               	addlw	-13
 25628  012DFE  6ED9               	movwf	fsr2l,c
 25629  012E00  50E2               	movf	fsr1h,w,c
 25630  012E02  6EDA               	movwf	fsr2h,c
 25631  012E04  0EFF               	movlw	255
 25632  012E06  22DA               	addwfc	fsr2h,f,c
 25633                           
 25634                           ;stkvar	_temp @ sp[(-13)+8]
 25635  012E08  0EFC               	movlw	252
 25636  012E0A  24E1               	addwf	fsr1l,w,c
 25637  012E0C  6EE9               	movwf	fsr0l,c
 25638  012E0E  0EFF               	movlw	255
 25639  012E10  20E2               	addwfc	fsr1h,w,c
 25640  012E12  6EEA               	movwf	fsr0h,c
 25641  012E14  50EF               	movf	indf0,w,c
 25642  012E16  26DE               	addwf	postinc2,f,c
 25643  012E18  0E00               	movlw	0
 25644  012E1A  22DE               	addwfc	postinc2,f,c
 25645  012E1C  22DE               	addwfc	postinc2,f,c
 25646  012E1E  22DE               	addwfc	postinc2,f,c
 25647                           
 25648                           ;stkvar	_b @ sp[(-13)+-4]
 25649  012E20  0EF1               	movlw	241
 25650  012E22  24E1               	addwf	fsr1l,w,c
 25651  012E24  6ED9               	movwf	fsr2l,c
 25652  012E26  0EFF               	movlw	255
 25653  012E28  20E2               	addwfc	fsr1h,w,c
 25654  012E2A  6EDA               	movwf	fsr2h,c
 25655  012E2C  50DF               	movf	indf2,w,c
 25656  012E2E  6E0C               	movwf	(btemp+11)^0,c
 25657                           
 25658                           ;stkvar	_a @ sp[(-13)+-8]
 25659  012E30  0EEB               	movlw	-21
 25660  012E32  50E3               	movf	plusw1,w,c
 25661  012E34  020C               	mulwf	(btemp+11)^0,c
 25662                           
 25663                           ;stkvar	_temp @ sp[(-13)+8]
 25664  012E36  0EFB               	movlw	-5
 25665  012E38  006F FFCF FFE3     	movff	prodl,plusw1
 25666  012E3E  0EFC               	movlw	-4
 25667  012E40  006F FFD3 FFE3     	movff	prodh,plusw1
 25668                           
 25669                           ;stkvar	_grs @ sp[(-13)+4]
 25670  012E46  50E1               	movf	fsr1l,w,c
 25671  012E48  0FF7               	addlw	-9
 25672  012E4A  6ED9               	movwf	fsr2l,c
 25673  012E4C  50E2               	movf	fsr1h,w,c
 25674  012E4E  6EDA               	movwf	fsr2h,c
 25675  012E50  0EFF               	movlw	255
 25676  012E52  22DA               	addwfc	fsr2h,f,c
 25677                           
 25678                           ;stkvar	_temp @ sp[(-13)+8]
 25679  012E54  0EFB               	movlw	-5
 25680  012E56  50E3               	movf	plusw1,w,c
 25681  012E58  26DE               	addwf	postinc2,f,c
 25682  012E5A  0E00               	movlw	0
 25683  012E5C  22DE               	addwfc	postinc2,f,c
 25684  012E5E  22DE               	addwfc	postinc2,f,c
 25685  012E60  22DE               	addwfc	postinc2,f,c
 25686                           
 25687                           ;stkvar	_prod @ sp[(-13)+0]
 25688  012E62  50E1               	movf	fsr1l,w,c
 25689  012E64  0FF3               	addlw	-13
 25690  012E66  6ED9               	movwf	fsr2l,c
 25691  012E68  50E2               	movf	fsr1h,w,c
 25692  012E6A  6EDA               	movwf	fsr2h,c
 25693  012E6C  0EFF               	movlw	255
 25694  012E6E  22DA               	addwfc	fsr2h,f,c
 25695                           
 25696                           ;stkvar	_temp @ sp[(-13)+8]
 25697  012E70  0EFC               	movlw	252
 25698  012E72  24E1               	addwf	fsr1l,w,c
 25699  012E74  6EE9               	movwf	fsr0l,c
 25700  012E76  0EFF               	movlw	255
 25701  012E78  20E2               	addwfc	fsr1h,w,c
 25702  012E7A  6EEA               	movwf	fsr0h,c
 25703  012E7C  50EF               	movf	indf0,w,c
 25704  012E7E  26DE               	addwf	postinc2,f,c
 25705  012E80  0E00               	movlw	0
 25706  012E82  22DE               	addwfc	postinc2,f,c
 25707  012E84  22DE               	addwfc	postinc2,f,c
 25708  012E86  22DE               	addwfc	postinc2,f,c
 25709                           
 25710                           ;stkvar	_grs @ sp[(-13)+4]
 25711  012E88  50E1               	movf	fsr1l,w,c
 25712  012E8A  0FF7               	addlw	-9
 25713  012E8C  6ED9               	movwf	fsr2l,c
 25714  012E8E  50E2               	movf	fsr1h,w,c
 25715  012E90  6EDA               	movwf	fsr2h,c
 25716  012E92  0EFF               	movlw	255
 25717  012E94  22DA               	addwfc	fsr2h,f,c
 25718  012E96  0E08               	movlw	8
 25719  012E98                     u6395:
 25720  012E98  90D8               	bcf	status,0,c
 25721  012E9A  36DE               	rlcf	postinc2,f,c
 25722  012E9C  36DE               	rlcf	postinc2,f,c
 25723  012E9E  36DE               	rlcf	postinc2,f,c
 25724  012EA0  36DD               	rlcf	postdec2,f,c
 25725  012EA2  52DD               	movf	postdec2,f,c
 25726  012EA4  52DD               	movf	postdec2,f,c
 25727  012EA6  2EE8               	decfsz	wreg,f,c
 25728  012EA8  D7F7               	goto	u6395
 25729                           
 25730                           ;stkvar	_b @ sp[(-13)+-4]
 25731  012EAA  0EF0               	movlw	240
 25732  012EAC  24E1               	addwf	fsr1l,w,c
 25733  012EAE  6ED9               	movwf	fsr2l,c
 25734  012EB0  0EFF               	movlw	255
 25735  012EB2  20E2               	addwfc	fsr1h,w,c
 25736  012EB4  6EDA               	movwf	fsr2h,c
 25737  012EB6  50DF               	movf	indf2,w,c
 25738  012EB8  6E0C               	movwf	(btemp+11)^0,c
 25739                           
 25740                           ;stkvar	_a @ sp[(-13)+-8]
 25741  012EBA  0EEB               	movlw	-21
 25742  012EBC  50E3               	movf	plusw1,w,c
 25743  012EBE  020C               	mulwf	(btemp+11)^0,c
 25744                           
 25745                           ;stkvar	_temp @ sp[(-13)+8]
 25746  012EC0  0EFB               	movlw	-5
 25747  012EC2  006F FFCF FFE3     	movff	prodl,plusw1
 25748  012EC8  0EFC               	movlw	-4
 25749  012ECA  006F FFD3 FFE3     	movff	prodh,plusw1
 25750                           
 25751                           ;stkvar	_temp @ sp[(-13)+8]
 25752  012ED0  0EFB               	movlw	-5
 25753  012ED2  006F FF8C  F00B    	movff	plusw1,btemp+10
 25754  012ED8  0EFC               	movlw	-4
 25755  012EDA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25756                           
 25757                           ;stkvar	_grs @ sp[(-13)+4]
 25758  012EE0  50E1               	movf	fsr1l,w,c
 25759  012EE2  0FF7               	addlw	-9
 25760  012EE4  6ED9               	movwf	fsr2l,c
 25761  012EE6  50E2               	movf	fsr1h,w,c
 25762  012EE8  6EDA               	movwf	fsr2h,c
 25763  012EEA  0EFF               	movlw	255
 25764  012EEC  22DA               	addwfc	fsr2h,f,c
 25765  012EEE  500B               	movf	(btemp+10)^0,w,c
 25766  012EF0  26DE               	addwf	postinc2,f,c
 25767  012EF2  500C               	movf	(btemp+11)^0,w,c
 25768  012EF4  22DE               	addwfc	postinc2,f,c
 25769  012EF6  0E00               	movlw	0
 25770  012EF8  22DE               	addwfc	postinc2,f,c
 25771  012EFA  22DE               	addwfc	postinc2,f,c
 25772                           
 25773                           ;stkvar	_b @ sp[(-13)+-4]
 25774  012EFC  0EEF               	movlw	-17
 25775  012EFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25776                           
 25777                           ;stkvar	_a @ sp[(-13)+-8]
 25778  012F04  0EEC               	movlw	236
 25779  012F06  24E1               	addwf	fsr1l,w,c
 25780  012F08  6ED9               	movwf	fsr2l,c
 25781  012F0A  0EFF               	movlw	255
 25782  012F0C  20E2               	addwfc	fsr1h,w,c
 25783  012F0E  6EDA               	movwf	fsr2h,c
 25784  012F10  50DF               	movf	indf2,w,c
 25785  012F12  020C               	mulwf	(btemp+11)^0,c
 25786                           
 25787                           ;stkvar	_temp @ sp[(-13)+8]
 25788  012F14  0EFB               	movlw	-5
 25789  012F16  006F FFCF FFE3     	movff	prodl,plusw1
 25790  012F1C  0EFC               	movlw	-4
 25791  012F1E  006F FFD3 FFE3     	movff	prodh,plusw1
 25792                           
 25793                           ;stkvar	_temp @ sp[(-13)+8]
 25794  012F24  0EFB               	movlw	-5
 25795  012F26  006F FF8C  F00B    	movff	plusw1,btemp+10
 25796  012F2C  0EFC               	movlw	-4
 25797  012F2E  006F FF8C  F00C    	movff	plusw1,btemp+11
 25798                           
 25799                           ;stkvar	_grs @ sp[(-13)+4]
 25800  012F34  50E1               	movf	fsr1l,w,c
 25801  012F36  0FF7               	addlw	-9
 25802  012F38  6ED9               	movwf	fsr2l,c
 25803  012F3A  50E2               	movf	fsr1h,w,c
 25804  012F3C  6EDA               	movwf	fsr2h,c
 25805  012F3E  0EFF               	movlw	255
 25806  012F40  22DA               	addwfc	fsr2h,f,c
 25807  012F42  500B               	movf	(btemp+10)^0,w,c
 25808  012F44  26DE               	addwf	postinc2,f,c
 25809  012F46  500C               	movf	(btemp+11)^0,w,c
 25810  012F48  22DE               	addwfc	postinc2,f,c
 25811  012F4A  0E00               	movlw	0
 25812  012F4C  22DE               	addwfc	postinc2,f,c
 25813  012F4E  22DE               	addwfc	postinc2,f,c
 25814                           
 25815                           ;stkvar	_grs @ sp[(-13)+4]
 25816  012F50  50E1               	movf	fsr1l,w,c
 25817  012F52  0FF7               	addlw	-9
 25818  012F54  6ED9               	movwf	fsr2l,c
 25819  012F56  50E2               	movf	fsr1h,w,c
 25820  012F58  6EDA               	movwf	fsr2h,c
 25821  012F5A  0EFF               	movlw	255
 25822  012F5C  22DA               	addwfc	fsr2h,f,c
 25823  012F5E  0E08               	movlw	8
 25824  012F60                     u6405:
 25825  012F60  90D8               	bcf	status,0,c
 25826  012F62  36DE               	rlcf	postinc2,f,c
 25827  012F64  36DE               	rlcf	postinc2,f,c
 25828  012F66  36DE               	rlcf	postinc2,f,c
 25829  012F68  36DD               	rlcf	postdec2,f,c
 25830  012F6A  52DD               	movf	postdec2,f,c
 25831  012F6C  52DD               	movf	postdec2,f,c
 25832  012F6E  2EE8               	decfsz	wreg,f,c
 25833  012F70  D7F7               	goto	u6405
 25834                           
 25835                           ;stkvar	_b @ sp[(-13)+-4]
 25836  012F72  0EEF               	movlw	-17
 25837  012F74  006F FF8C  F00C    	movff	plusw1,btemp+11
 25838                           
 25839                           ;stkvar	_a @ sp[(-13)+-8]
 25840  012F7A  0EEB               	movlw	-21
 25841  012F7C  50E3               	movf	plusw1,w,c
 25842  012F7E  020C               	mulwf	(btemp+11)^0,c
 25843                           
 25844                           ;stkvar	_temp @ sp[(-13)+8]
 25845  012F80  0EFB               	movlw	-5
 25846  012F82  006F FFCF FFE3     	movff	prodl,plusw1
 25847  012F88  0EFC               	movlw	-4
 25848  012F8A  006F FFD3 FFE3     	movff	prodh,plusw1
 25849                           
 25850                           ;stkvar	_temp @ sp[(-13)+8]
 25851  012F90  0EFB               	movlw	-5
 25852  012F92  006F FF8C  F00B    	movff	plusw1,btemp+10
 25853  012F98  0EFC               	movlw	-4
 25854  012F9A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25855                           
 25856                           ;stkvar	_grs @ sp[(-13)+4]
 25857  012FA0  50E1               	movf	fsr1l,w,c
 25858  012FA2  0FF7               	addlw	-9
 25859  012FA4  6ED9               	movwf	fsr2l,c
 25860  012FA6  50E2               	movf	fsr1h,w,c
 25861  012FA8  6EDA               	movwf	fsr2h,c
 25862  012FAA  0EFF               	movlw	255
 25863  012FAC  22DA               	addwfc	fsr2h,f,c
 25864  012FAE  500B               	movf	(btemp+10)^0,w,c
 25865  012FB0  26DE               	addwf	postinc2,f,c
 25866  012FB2  500C               	movf	(btemp+11)^0,w,c
 25867  012FB4  22DE               	addwfc	postinc2,f,c
 25868  012FB6  0E00               	movlw	0
 25869  012FB8  22DE               	addwfc	postinc2,f,c
 25870  012FBA  22DE               	addwfc	postinc2,f,c
 25871                           
 25872                           ;stkvar	_b @ sp[(-13)+-4]
 25873  012FBC  0EF0               	movlw	240
 25874  012FBE  24E1               	addwf	fsr1l,w,c
 25875  012FC0  6ED9               	movwf	fsr2l,c
 25876  012FC2  0EFF               	movlw	255
 25877  012FC4  20E2               	addwfc	fsr1h,w,c
 25878  012FC6  6EDA               	movwf	fsr2h,c
 25879  012FC8  50DF               	movf	indf2,w,c
 25880  012FCA  6E0C               	movwf	(btemp+11)^0,c
 25881                           
 25882                           ;stkvar	_a @ sp[(-13)+-8]
 25883  012FCC  0EED               	movlw	237
 25884  012FCE  24E1               	addwf	fsr1l,w,c
 25885  012FD0  6ED9               	movwf	fsr2l,c
 25886  012FD2  0EFF               	movlw	255
 25887  012FD4  20E2               	addwfc	fsr1h,w,c
 25888  012FD6  6EDA               	movwf	fsr2h,c
 25889  012FD8  50DF               	movf	indf2,w,c
 25890  012FDA  020C               	mulwf	(btemp+11)^0,c
 25891                           
 25892                           ;stkvar	_temp @ sp[(-13)+8]
 25893  012FDC  0EFB               	movlw	-5
 25894  012FDE  006F FFCF FFE3     	movff	prodl,plusw1
 25895  012FE4  0EFC               	movlw	-4
 25896  012FE6  006F FFD3 FFE3     	movff	prodh,plusw1
 25897                           
 25898                           ;stkvar	_temp @ sp[(-13)+8]
 25899  012FEC  0EFB               	movlw	-5
 25900  012FEE  006F FF8C  F00B    	movff	plusw1,btemp+10
 25901  012FF4  0EFC               	movlw	-4
 25902  012FF6  006F FF8C  F00C    	movff	plusw1,btemp+11
 25903                           
 25904                           ;stkvar	_prod @ sp[(-13)+0]
 25905  012FFC  50E1               	movf	fsr1l,w,c
 25906  012FFE  0FF3               	addlw	-13
 25907  013000  6ED9               	movwf	fsr2l,c
 25908  013002  50E2               	movf	fsr1h,w,c
 25909  013004  6EDA               	movwf	fsr2h,c
 25910  013006  0EFF               	movlw	255
 25911  013008  22DA               	addwfc	fsr2h,f,c
 25912  01300A  500B               	movf	(btemp+10)^0,w,c
 25913  01300C  26DE               	addwf	postinc2,f,c
 25914  01300E  500C               	movf	(btemp+11)^0,w,c
 25915  013010  22DE               	addwfc	postinc2,f,c
 25916  013012  0E00               	movlw	0
 25917  013014  22DE               	addwfc	postinc2,f,c
 25918  013016  22DE               	addwfc	postinc2,f,c
 25919                           
 25920                           ;stkvar	_b @ sp[(-13)+-4]
 25921  013018  0EF1               	movlw	241
 25922  01301A  24E1               	addwf	fsr1l,w,c
 25923  01301C  6ED9               	movwf	fsr2l,c
 25924  01301E  0EFF               	movlw	255
 25925  013020  20E2               	addwfc	fsr1h,w,c
 25926  013022  6EDA               	movwf	fsr2h,c
 25927  013024  50DF               	movf	indf2,w,c
 25928  013026  6E0C               	movwf	(btemp+11)^0,c
 25929                           
 25930                           ;stkvar	_a @ sp[(-13)+-8]
 25931  013028  0EEC               	movlw	236
 25932  01302A  24E1               	addwf	fsr1l,w,c
 25933  01302C  6ED9               	movwf	fsr2l,c
 25934  01302E  0EFF               	movlw	255
 25935  013030  20E2               	addwfc	fsr1h,w,c
 25936  013032  6EDA               	movwf	fsr2h,c
 25937  013034  50DF               	movf	indf2,w,c
 25938  013036  020C               	mulwf	(btemp+11)^0,c
 25939                           
 25940                           ;stkvar	_temp @ sp[(-13)+8]
 25941  013038  0EFB               	movlw	-5
 25942  01303A  006F FFCF FFE3     	movff	prodl,plusw1
 25943  013040  0EFC               	movlw	-4
 25944  013042  006F FFD3 FFE3     	movff	prodh,plusw1
 25945                           
 25946                           ;stkvar	_temp @ sp[(-13)+8]
 25947  013048  0EFB               	movlw	-5
 25948  01304A  006F FF8C  F00B    	movff	plusw1,btemp+10
 25949  013050  0EFC               	movlw	-4
 25950  013052  006F FF8C  F00C    	movff	plusw1,btemp+11
 25951                           
 25952                           ;stkvar	_prod @ sp[(-13)+0]
 25953  013058  50E1               	movf	fsr1l,w,c
 25954  01305A  0FF3               	addlw	-13
 25955  01305C  6ED9               	movwf	fsr2l,c
 25956  01305E  50E2               	movf	fsr1h,w,c
 25957  013060  6EDA               	movwf	fsr2h,c
 25958  013062  0EFF               	movlw	255
 25959  013064  22DA               	addwfc	fsr2h,f,c
 25960  013066  500B               	movf	(btemp+10)^0,w,c
 25961  013068  26DE               	addwf	postinc2,f,c
 25962  01306A  500C               	movf	(btemp+11)^0,w,c
 25963  01306C  22DE               	addwfc	postinc2,f,c
 25964  01306E  0E00               	movlw	0
 25965  013070  22DE               	addwfc	postinc2,f,c
 25966  013072  22DE               	addwfc	postinc2,f,c
 25967                           
 25968                           ;stkvar	_b @ sp[(-13)+-4]
 25969  013074  0EF1               	movlw	241
 25970  013076  24E1               	addwf	fsr1l,w,c
 25971  013078  6ED9               	movwf	fsr2l,c
 25972  01307A  0EFF               	movlw	255
 25973  01307C  20E2               	addwfc	fsr1h,w,c
 25974  01307E  6EDA               	movwf	fsr2h,c
 25975  013080  50DF               	movf	indf2,w,c
 25976  013082  6E0C               	movwf	(btemp+11)^0,c
 25977                           
 25978                           ;stkvar	_a @ sp[(-13)+-8]
 25979  013084  0EED               	movlw	237
 25980  013086  24E1               	addwf	fsr1l,w,c
 25981  013088  6ED9               	movwf	fsr2l,c
 25982  01308A  0EFF               	movlw	255
 25983  01308C  20E2               	addwfc	fsr1h,w,c
 25984  01308E  6EDA               	movwf	fsr2h,c
 25985  013090  50DF               	movf	indf2,w,c
 25986  013092  020C               	mulwf	(btemp+11)^0,c
 25987                           
 25988                           ;stkvar	_temp @ sp[(-13)+8]
 25989  013094  0EFB               	movlw	-5
 25990  013096  006F FFCF FFE3     	movff	prodl,plusw1
 25991  01309C  0EFC               	movlw	-4
 25992  01309E  006F FFD3 FFE3     	movff	prodh,plusw1
 25993                           
 25994                           ;stkvar	_temp @ sp[(-13)+8]
 25995  0130A4  0EFB               	movlw	-5
 25996  0130A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 25997  0130AC  0EFC               	movlw	-4
 25998  0130AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 25999  0130B4  500B               	movf	(btemp+10)^0,w,c
 26000  0130B6  6E05               	movwf	(btemp+4)^0,c
 26001  0130B8  500C               	movf	(btemp+11)^0,w,c
 26002  0130BA  6E06               	movwf	(btemp+5)^0,c
 26003  0130BC  6A07               	clrf	(btemp+6)^0,c
 26004  0130BE  6A08               	clrf	(btemp+7)^0,c
 26005  0130C0  0060  F01C  F008   	movff	btemp+6,btemp+7
 26006  0130C6  0060  F018  F007   	movff	btemp+5,btemp+6
 26007  0130CC  0060  F014  F006   	movff	btemp+4,btemp+5
 26008  0130D2  6A05               	clrf	(btemp+4)^0,c
 26009                           
 26010                           ;stkvar	_prod @ sp[(-13)+0]
 26011  0130D4  50E1               	movf	fsr1l,w,c
 26012  0130D6  0FF3               	addlw	-13
 26013  0130D8  6ED9               	movwf	fsr2l,c
 26014  0130DA  50E2               	movf	fsr1h,w,c
 26015  0130DC  6EDA               	movwf	fsr2h,c
 26016  0130DE  0EFF               	movlw	255
 26017  0130E0  22DA               	addwfc	fsr2h,f,c
 26018  0130E2  5005               	movf	(btemp+4)^0,w,c
 26019  0130E4  26DE               	addwf	postinc2,f,c
 26020  0130E6  5006               	movf	(btemp+5)^0,w,c
 26021  0130E8  22DE               	addwfc	postinc2,f,c
 26022  0130EA  5007               	movf	(btemp+6)^0,w,c
 26023  0130EC  22DE               	addwfc	postinc2,f,c
 26024  0130EE  5008               	movf	(btemp+7)^0,w,c
 26025  0130F0  22DE               	addwfc	postinc2,f,c
 26026                           
 26027                           ;stkvar	_prod @ sp[(-13)+0]
 26028  0130F2  50E1               	movf	fsr1l,w,c
 26029  0130F4  0FF3               	addlw	-13
 26030  0130F6  6ED9               	movwf	fsr2l,c
 26031  0130F8  50E2               	movf	fsr1h,w,c
 26032  0130FA  6EDA               	movwf	fsr2h,c
 26033  0130FC  0EFF               	movlw	255
 26034  0130FE  22DA               	addwfc	fsr2h,f,c
 26035                           
 26036                           ;stkvar	_grs @ sp[(-13)+4]
 26037  013100  0EFA               	movlw	250
 26038  013102  24E1               	addwf	fsr1l,w,c
 26039  013104  6EE9               	movwf	fsr0l,c
 26040  013106  0EFF               	movlw	255
 26041  013108  20E2               	addwfc	fsr1h,w,c
 26042  01310A  6EEA               	movwf	fsr0h,c
 26043  01310C  50EF               	movf	indf0,w,c
 26044  01310E  26DE               	addwf	postinc2,f,c
 26045  013110  0E00               	movlw	0
 26046  013112  22DE               	addwfc	postinc2,f,c
 26047  013114  22DE               	addwfc	postinc2,f,c
 26048  013116  22DE               	addwfc	postinc2,f,c
 26049                           
 26050                           ;stkvar	_grs @ sp[(-13)+4]
 26051  013118  50E1               	movf	fsr1l,w,c
 26052  01311A  0FF7               	addlw	-9
 26053  01311C  6ED9               	movwf	fsr2l,c
 26054  01311E  50E2               	movf	fsr1h,w,c
 26055  013120  6EDA               	movwf	fsr2h,c
 26056  013122  0EFF               	movlw	255
 26057  013124  22DA               	addwfc	fsr2h,f,c
 26058  013126  0E08               	movlw	8
 26059  013128                     u6415:
 26060  013128  90D8               	bcf	status,0,c
 26061  01312A  36DE               	rlcf	postinc2,f,c
 26062  01312C  36DE               	rlcf	postinc2,f,c
 26063  01312E  36DE               	rlcf	postinc2,f,c
 26064  013130  36DD               	rlcf	postdec2,f,c
 26065  013132  52DD               	movf	postdec2,f,c
 26066  013134  52DD               	movf	postdec2,f,c
 26067  013136  2EE8               	decfsz	wreg,f,c
 26068  013138  D7F7               	goto	u6415
 26069  01313A  0E82               	movlw	130
 26070  01313C  6E0B               	movwf	(btemp+10)^0,c
 26071  01313E  0EFF               	movlw	255
 26072  013140  6E0C               	movwf	(btemp+11)^0,c
 26073                           
 26074                           ;stkvar	_bexp @ sp[(-13)+10]
 26075  013142  0EFD               	movlw	-3
 26076  013144  50E3               	movf	plusw1,w,c
 26077  013146  6E09               	movwf	(btemp+8)^0,c
 26078  013148  6A0A               	clrf	(btemp+9)^0,c
 26079                           
 26080                           ;stkvar	_aexp @ sp[(-13)+11]
 26081  01314A  0EFE               	movlw	-2
 26082  01314C  50E3               	movf	plusw1,w,c
 26083  01314E  2609               	addwf	(btemp+8)^0,f,c
 26084  013150  0E00               	movlw	0
 26085  013152  220A               	addwfc	(btemp+9)^0,f,c
 26086  013154  500B               	movf	(btemp+10)^0,w,c
 26087  013156  2609               	addwf	(btemp+8)^0,f,c
 26088  013158  500C               	movf	(btemp+11)^0,w,c
 26089  01315A  220A               	addwfc	(btemp+9)^0,f,c
 26090                           
 26091                           ;stkvar	_temp @ sp[(-13)+8]
 26092  01315C  0EFB               	movlw	-5
 26093  01315E  0060  F027  FFE3   	movff	btemp+8,plusw1
 26094  013164  0EFC               	movlw	-4
 26095  013166  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26096  01316C  D021               	goto	l7870
 26097  01316E                     l7860:
 26098                           
 26099                           ;stkvar	_prod @ sp[(-13)+0]
 26100  01316E  90D8               	bcf	status,0,c
 26101  013170  0EF3               	movlw	-13
 26102  013172  36E3               	rlcf	plusw1,f,c
 26103  013174  0EF4               	movlw	-12
 26104  013176  36E3               	rlcf	plusw1,f,c
 26105  013178  0EF5               	movlw	-11
 26106  01317A  36E3               	rlcf	plusw1,f,c
 26107  01317C  0EF6               	movlw	-10
 26108  01317E  36E3               	rlcf	plusw1,f,c
 26109                           
 26110                           ;stkvar	_grs @ sp[(-13)+4]
 26111  013180  0EFA               	movlw	-6
 26112  013182  AEE3               	btfss	plusw1,7,c
 26113  013184  D002               	goto	l7866
 26114                           
 26115                           ;stkvar	_prod @ sp[(-13)+0]
 26116  013186  0EF3               	movlw	-13
 26117  013188  80E3               	bsf	plusw1,0,c
 26118  01318A                     l7866:
 26119                           
 26120                           ;stkvar	_grs @ sp[(-13)+4]
 26121  01318A  90D8               	bcf	status,0,c
 26122  01318C  0EF7               	movlw	-9
 26123  01318E  36E3               	rlcf	plusw1,f,c
 26124  013190  0EF8               	movlw	-8
 26125  013192  36E3               	rlcf	plusw1,f,c
 26126  013194  0EF9               	movlw	-7
 26127  013196  36E3               	rlcf	plusw1,f,c
 26128  013198  0EFA               	movlw	-6
 26129  01319A  36E3               	rlcf	plusw1,f,c
 26130                           
 26131                           ;stkvar	_temp @ sp[(-13)+8]
 26132  01319C  50E1               	movf	fsr1l,w,c
 26133  01319E  0FFB               	addlw	-5
 26134  0131A0  6ED9               	movwf	fsr2l,c
 26135  0131A2  50E2               	movf	fsr1h,w,c
 26136  0131A4  6EDA               	movwf	fsr2h,c
 26137  0131A6  0EFF               	movlw	255
 26138  0131A8  22DA               	addwfc	fsr2h,f,c
 26139  0131AA  06DE               	decf	postinc2,f,c
 26140  0131AC  0E00               	movlw	0
 26141  0131AE  5ADD               	subwfb	postdec2,f,c
 26142  0131B0                     l7870:
 26143                           
 26144                           ;stkvar	_prod @ sp[(-13)+0]
 26145  0131B0  0EF5               	movlw	-11
 26146  0131B2  AEE3               	btfss	plusw1,7,c
 26147  0131B4  D7DC               	goto	l7860
 26148                           
 26149                           ;stkvar	_aexp @ sp[(-13)+11]
 26150  0131B6  0EFE               	movlw	-2
 26151  0131B8  6AE3               	clrf	plusw1,c
 26152                           
 26153                           ;stkvar	_grs @ sp[(-13)+4]
 26154  0131BA  0EFA               	movlw	-6
 26155  0131BC  AEE3               	btfss	plusw1,7,c
 26156  0131BE  D020               	goto	l7884
 26157                           
 26158                           ;stkvar	_grs @ sp[(-13)+4]
 26159  0131C0  50E1               	movf	fsr1l,w,c
 26160  0131C2  0FF7               	addlw	-9
 26161  0131C4  6ED9               	movwf	fsr2l,c
 26162  0131C6  50E2               	movf	fsr1h,w,c
 26163  0131C8  6EDA               	movwf	fsr2h,c
 26164  0131CA  0EFF               	movlw	255
 26165  0131CC  22DA               	addwfc	fsr2h,f,c
 26166  0131CE  0EFF               	movlw	255
 26167  0131D0  14DE               	andwf	postinc2,w,c
 26168  0131D2  6E09               	movwf	(btemp+8)^0,c
 26169  0131D4  0EFF               	movlw	255
 26170  0131D6  14DE               	andwf	postinc2,w,c
 26171  0131D8  6E0A               	movwf	(btemp+9)^0,c
 26172  0131DA  0EFF               	movlw	255
 26173  0131DC  14DE               	andwf	postinc2,w,c
 26174  0131DE  6E0B               	movwf	(btemp+10)^0,c
 26175  0131E0  0E7F               	movlw	127
 26176  0131E2  14DE               	andwf	postinc2,w,c
 26177  0131E4  6E0C               	movwf	(btemp+11)^0,c
 26178  0131E6  5009               	movf	(btemp+8)^0,w,c
 26179  0131E8  100A               	iorwf	(btemp+9)^0,w,c
 26180  0131EA  100B               	iorwf	(btemp+10)^0,w,c
 26181  0131EC  100C               	iorwf	(btemp+11)^0,w,c
 26182  0131EE  B4D8               	btfsc	status,2,c
 26183  0131F0  D004               	goto	l7880
 26184  0131F2                     u6450:
 26185                           
 26186                           ;stkvar	_aexp @ sp[(-13)+11]
 26187  0131F2  0EFE               	movlw	-2
 26188  0131F4  6AE3               	clrf	plusw1,c
 26189  0131F6  2AE3               	incf	plusw1,f,c
 26190  0131F8  D003               	goto	l7884
 26191  0131FA                     l7880:
 26192                           
 26193                           ;stkvar	_prod @ sp[(-13)+0]
 26194  0131FA  0EF3               	movlw	-13
 26195  0131FC  B0E3               	btfsc	plusw1,0,c
 26196  0131FE  D7F9               	goto	u6450
 26197  013200                     l7884:
 26198                           
 26199                           ;stkvar	_aexp @ sp[(-13)+11]
 26200  013200  0EFE               	movlw	-2
 26201  013202  50E3               	movf	plusw1,w,c
 26202  013204  B4D8               	btfsc	status,2,c
 26203  013206  D036               	goto	l7894
 26204                           
 26205                           ;stkvar	_prod @ sp[(-13)+0]
 26206  013208  50E1               	movf	fsr1l,w,c
 26207  01320A  0FF3               	addlw	-13
 26208  01320C  6ED9               	movwf	fsr2l,c
 26209  01320E  50E2               	movf	fsr1h,w,c
 26210  013210  6EDA               	movwf	fsr2h,c
 26211  013212  0EFF               	movlw	255
 26212  013214  22DA               	addwfc	fsr2h,f,c
 26213  013216  2ADE               	incf	postinc2,f,c
 26214  013218  0E00               	movlw	0
 26215  01321A  22DE               	addwfc	postinc2,f,c
 26216  01321C  22DE               	addwfc	postinc2,f,c
 26217  01321E  22DE               	addwfc	postinc2,f,c
 26218                           
 26219                           ;stkvar	_prod @ sp[(-13)+0]
 26220  013220  0EF6               	movlw	-10
 26221  013222  A0E3               	btfss	plusw1,0,c
 26222  013224  D027               	goto	l7894
 26223  013226  0E01               	movlw	1
 26224  013228  6E0C               	movwf	(btemp+11)^0,c
 26225                           
 26226                           ;stkvar	_prod @ sp[(-13)+0]
 26227  01322A  50E1               	movf	fsr1l,w,c
 26228  01322C  0FF3               	addlw	-13
 26229  01322E  6ED9               	movwf	fsr2l,c
 26230  013230  50E2               	movf	fsr1h,w,c
 26231  013232  6EDA               	movwf	fsr2h,c
 26232  013234  0EFF               	movlw	255
 26233  013236  22DA               	addwfc	fsr2h,f,c
 26234  013238  280C               	incf	(btemp+11)^0,w,c
 26235  01323A  52DE               	movf	postinc2,f,c
 26236  01323C  D008               	goto	u6490
 26237  01323E                     u6495:
 26238  01323E  52DE               	movf	postinc2,f,c
 26239  013240  90D8               	bcf	status,0,c
 26240  013242  BEDC               	btfsc	preinc2,7,c
 26241  013244  80D8               	bsf	status,0,c
 26242  013246  32DD               	rrcf	postdec2,f,c
 26243  013248  32DD               	rrcf	postdec2,f,c
 26244  01324A  32DD               	rrcf	postdec2,f,c
 26245  01324C  32DE               	rrcf	postinc2,f,c
 26246  01324E                     u6490:
 26247  01324E  2EE8               	decfsz	wreg,f,c
 26248  013250  D7F6               	goto	u6495
 26249                           
 26250                           ;stkvar	_temp @ sp[(-13)+8]
 26251  013252  0EFB               	movlw	-5
 26252  013254  50E3               	movf	plusw1,w,c
 26253  013256  0F01               	addlw	1
 26254  013258  6E01               	movwf	btemp^0,c
 26255  01325A  0EFB               	movlw	-5
 26256  01325C  0060  F007  FFE3   	movff	btemp,plusw1
 26257  013262  6A01               	clrf	btemp^0,c
 26258  013264  0EFC               	movlw	-4
 26259  013266  50E3               	movf	plusw1,w,c
 26260  013268  2001               	addwfc	btemp^0,w,c
 26261  01326A  6E01               	movwf	btemp^0,c
 26262  01326C  0EFC               	movlw	-4
 26263  01326E  0060  F007  FFE3   	movff	btemp,plusw1
 26264  013274                     l7894:
 26265                           
 26266                           ;stkvar	_temp @ sp[(-13)+8]
 26267  013274  0EFC               	movlw	-4
 26268  013276  BEE3               	btfsc	plusw1,7,c
 26269  013278  D020               	goto	l7898
 26270  01327A  0EFC               	movlw	-4
 26271  01327C  50E3               	movf	plusw1,w,c
 26272  01327E  E104               	bnz	u6500
 26273  013280  0EFB               	movlw	-5
 26274  013282  28E3               	incf	plusw1,w,c
 26275  013284  A0D8               	btfss	status,0,c
 26276  013286  D019               	goto	l7898
 26277  013288                     u6500:
 26278  013288  0E00               	movlw	0
 26279  01328A  6E09               	movwf	(btemp+8)^0,c
 26280  01328C  0E00               	movlw	0
 26281  01328E  6E0A               	movwf	(btemp+9)^0,c
 26282  013290  0E80               	movlw	128
 26283  013292  6E0B               	movwf	(btemp+10)^0,c
 26284  013294  0E7F               	movlw	127
 26285  013296  6E0C               	movwf	(btemp+11)^0,c
 26286                           
 26287                           ;stkvar	_prod @ sp[(-13)+0]
 26288  013298  0EF3               	movlw	-13
 26289  01329A  0060  F027  FFE3   	movff	btemp+8,plusw1
 26290  0132A0  0EF4               	movlw	-12
 26291  0132A2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26292  0132A8  0EF5               	movlw	-11
 26293  0132AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26294  0132B0  0EF6               	movlw	-10
 26295  0132B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 26296  0132B8  D044               	goto	l7914
 26297  0132BA                     l7898:
 26298                           
 26299                           ;stkvar	_temp @ sp[(-13)+8]
 26300  0132BA  0EFC               	movlw	-4
 26301  0132BC  BEE3               	btfsc	plusw1,7,c
 26302  0132BE  D007               	goto	u6510
 26303  0132C0  0EFC               	movlw	-4
 26304  0132C2  50E3               	movf	plusw1,w,c
 26305  0132C4  E10F               	bnz	l7904
 26306  0132C6  0EFB               	movlw	-5
 26307  0132C8  04E3               	decf	plusw1,w,c
 26308  0132CA  B0D8               	btfsc	status,0,c
 26309  0132CC  D00B               	goto	l7904
 26310  0132CE                     u6510:
 26311                           
 26312                           ;stkvar	_prod @ sp[(-13)+0]
 26313  0132CE  0EF3               	movlw	-13
 26314  0132D0  6AE3               	clrf	plusw1,c
 26315  0132D2  0EF4               	movlw	-12
 26316  0132D4  6AE3               	clrf	plusw1,c
 26317  0132D6  0EF5               	movlw	-11
 26318  0132D8  6AE3               	clrf	plusw1,c
 26319  0132DA  0EF6               	movlw	-10
 26320  0132DC  6AE3               	clrf	plusw1,c
 26321                           
 26322                           ;stkvar	_sign @ sp[(-13)+12]
 26323  0132DE  0EFF               	movlw	-1
 26324  0132E0  6AE3               	clrf	plusw1,c
 26325  0132E2  D02F               	goto	l7914
 26326  0132E4                     l7904:
 26327                           
 26328                           ;stkvar	_temp @ sp[(-13)+8]
 26329                           ;stkvar	_bexp @ sp[(-13)+10]
 26330  0132E4  0EFB               	movlw	-5
 26331  0132E6  006F FF8C  F001    	movff	plusw1,btemp
 26332  0132EC  0EFD               	movlw	-3
 26333  0132EE  0060  F007  FFE3   	movff	btemp,plusw1
 26334                           
 26335                           ;stkvar	_prod @ sp[(-13)+0]
 26336  0132F4  50E1               	movf	fsr1l,w,c
 26337  0132F6  0FF3               	addlw	-13
 26338  0132F8  6ED9               	movwf	fsr2l,c
 26339  0132FA  50E2               	movf	fsr1h,w,c
 26340  0132FC  6EDA               	movwf	fsr2h,c
 26341  0132FE  0EFF               	movlw	255
 26342  013300  22DA               	addwfc	fsr2h,f,c
 26343  013302  0EFF               	movlw	255
 26344  013304  16DE               	andwf	postinc2,f,c
 26345  013306  0EFF               	movlw	255
 26346  013308  16DE               	andwf	postinc2,f,c
 26347  01330A  0E7F               	movlw	127
 26348  01330C  16DE               	andwf	postinc2,f,c
 26349  01330E  0E00               	movlw	0
 26350  013310  16DE               	andwf	postinc2,f,c
 26351                           
 26352                           ;stkvar	_bexp @ sp[(-13)+10]
 26353  013312  0EFD               	movlw	-3
 26354  013314  A0E3               	btfss	plusw1,0,c
 26355  013316  D008               	goto	l7912
 26356                           
 26357                           ;stkvar	_prod @ sp[(-13)+0]
 26358  013318  0EF5               	movlw	245
 26359  01331A  24E1               	addwf	fsr1l,w,c
 26360  01331C  6ED9               	movwf	fsr2l,c
 26361  01331E  0EFF               	movlw	255
 26362  013320  20E2               	addwfc	fsr1h,w,c
 26363  013322  6EDA               	movwf	fsr2h,c
 26364  013324  0E00               	movlw	0
 26365  013326  8EDB               	bsf	plusw2,7,c
 26366  013328                     l7912:
 26367                           
 26368                           ;stkvar	_prod @ sp[(-13)+0]
 26369  013328  0EF6               	movlw	246
 26370  01332A  24E1               	addwf	fsr1l,w,c
 26371  01332C  6ED9               	movwf	fsr2l,c
 26372  01332E  0EFF               	movlw	255
 26373  013330  20E2               	addwfc	fsr1h,w,c
 26374  013332  6EDA               	movwf	fsr2h,c
 26375                           
 26376                           ;stkvar	_bexp @ sp[(-13)+10]
 26377  013334  0EFD               	movlw	-3
 26378  013336  006F FF8C  F00C    	movff	plusw1,btemp+11
 26379  01333C  90D8               	bcf	status,0,c
 26380  01333E  300C               	rrcf	(btemp+11)^0,w,c
 26381  013340  6EDF               	movwf	indf2,c
 26382  013342                     l7914:
 26383                           
 26384                           ;stkvar	_sign @ sp[(-13)+12]
 26385  013342  0EFF               	movlw	-1
 26386  013344  006F FF8C  F00C    	movff	plusw1,btemp+11
 26387                           
 26388                           ;stkvar	_prod @ sp[(-13)+0]
 26389  01334A  0EF6               	movlw	246
 26390  01334C  24E1               	addwf	fsr1l,w,c
 26391  01334E  6ED9               	movwf	fsr2l,c
 26392  013350  0EFF               	movlw	255
 26393  013352  20E2               	addwfc	fsr1h,w,c
 26394  013354  6EDA               	movwf	fsr2h,c
 26395  013356  500C               	movf	(btemp+11)^0,w,c
 26396  013358  12DF               	iorwf	indf2,f,c
 26397                           
 26398                           ;stkvar	_prod @ sp[(-13)+0]
 26399  01335A  0EF3               	movlw	-13
 26400  01335C  006F FF8C  F001    	movff	plusw1,btemp
 26401  013362  0EF4               	movlw	-12
 26402  013364  006F FF8C  F002    	movff	plusw1,btemp+1
 26403  01336A  0EF5               	movlw	-11
 26404  01336C  006F FF8C  F003    	movff	plusw1,btemp+2
 26405  013372  0EF6               	movlw	-10
 26406  013374  006F FF8C  F004    	movff	plusw1,btemp+3
 26407  01337A                     l2909:
 26408                           
 26409                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 26410  01337A  0EEB               	movlw	235
 26411  01337C  26E1               	addwf	fsr1l,f,c
 26412  01337E  0EFF               	movlw	255
 26413  013380  22E2               	addwfc	fsr1h,f,c
 26414  013382  0012               	return		;funcret
 26415  013384                     __end_of___flmul:
 26416                           	opt callstack 0
 26417                           
 26418 ;; *************** function _SYSTEM_Initialize *****************
 26419 ;; Defined at:
 26420 ;;		line 50 in file "mcc_generated_files/mcc.c"
 26421 ;; Parameters:    Size  Location     Type
 26422 ;;		None
 26423 ;; Auto vars:     Size  Location     Type
 26424 ;;		None
 26425 ;; Return value:  Size  Location     Type
 26426 ;;                  1  [STACK] void 
 26427 ;; Registers used:
 26428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 26429 ;; Tracked objects:
 26430 ;;		On entry : 0/0
 26431 ;;		On exit  : 3F/3C
 26432 ;;		Unchanged: 0/0
 26433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26438 ;;Total ram usage:        0 bytes
 26439 ;; Hardware stack levels used:    1
 26440 ;; Hardware stack levels required when called:   17
 26441 ;; This function calls:
 26442 ;;		_ADCC_Initialize
 26443 ;;		_CLKREF_Initialize
 26444 ;;		_DMA1_Initialize
 26445 ;;		_DMA2_Initialize
 26446 ;;		_EXT_INT_Initialize
 26447 ;;		_FVR_Initialize
 26448 ;;		_INTERRUPT_Initialize
 26449 ;;		_OSCILLATOR_Initialize
 26450 ;;		_PIN_MANAGER_Initialize
 26451 ;;		_PMD_Initialize
 26452 ;;		_PWM8_Initialize
 26453 ;;		_SPI1_Initialize
 26454 ;;		_TMR2_Initialize
 26455 ;;		_TMR3_Initialize
 26456 ;;		_TMR5_Initialize
 26457 ;;		_TMR6_Initialize
 26458 ;;		_UART1_Initialize
 26459 ;;		_UART2_Initialize
 26460 ;; This function is called by:
 26461 ;;		_main
 26462 ;; This function uses a reentrant model
 26463 ;;
 26464                           
 26465                           	psect	text102
 26466  019C76                     __ptext102:
 26467                           	opt callstack 0
 26468  019C76                     _SYSTEM_Initialize:
 26469                           	opt callstack 13
 26470                           
 26471                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 26472                           
 26473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26474                           ;incstack = 0
 26475  019C76  EC1B  F0CC         	call	_INTERRUPT_Initialize	;wreg free
 26476                           
 26477                           ; BSR set to: 57
 26478                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 26479  019C7A  EC4C  F0D4         	call	_PMD_Initialize	;wreg free
 26480                           
 26481                           ; BSR set to: 57
 26482                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 26483  019C7E  ECE3  F0C9         	call	_PIN_MANAGER_Initialize	;wreg free
 26484                           
 26485                           ; BSR set to: 58
 26486                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 26487  019C82  EC41  F0D4         	call	_OSCILLATOR_Initialize	;wreg free
 26488                           
 26489                           ; BSR set to: 57
 26490                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 26491  019C86  ECC1  F0D4         	call	_FVR_Initialize	;wreg free
 26492                           
 26493                           ; BSR set to: 62
 26494                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 26495  019C8A  ECB0  F0CB         	call	_ADCC_Initialize	;wreg free
 26496                           
 26497                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 26498  019C8E  EC36  F0D4         	call	_PWM8_Initialize	;wreg free
 26499                           
 26500                           ; BSR set to: 63
 26501                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 26502  019C92  EC1F  F0D4         	call	_TMR2_Initialize	;wreg free
 26503                           
 26504                           ; BSR set to: 57
 26505                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 26506  019C96  EC81  F0D0         	call	_EXT_INT_Initialize	;wreg free
 26507                           
 26508                           ; BSR set to: 57
 26509                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 26510  019C9A  EC86  F0D1         	call	_TMR6_Initialize	;wreg free
 26511                           
 26512                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 26513  019C9E  EC10  F0CF         	call	_TMR3_Initialize	;wreg free
 26514                           
 26515                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 26516  019CA2  ECED  F0CE         	call	_TMR5_Initialize	;wreg free
 26517                           
 26518                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 26519  019CA6  ECCA  F0CE         	call	_UART1_Initialize	;wreg free
 26520                           
 26521                           ; BSR set to: 57
 26522                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 26523  019CAA  ECE2  F0CC         	call	_UART2_Initialize	;wreg free
 26524                           
 26525                           ; BSR set to: 57
 26526                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 26527  019CAE  EC2B  F0D4         	call	_SPI1_Initialize	;wreg free
 26528                           
 26529                           ; BSR set to: 61
 26530                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 26531  019CB2  EC3E  F0CD         	call	_DMA2_Initialize	;wreg free
 26532                           
 26533                           ; BSR set to: 59
 26534                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 26535  019CB6  EC7B  F0CB         	call	_DMA1_Initialize	;wreg free
 26536                           
 26537                           ; BSR set to: 59
 26538                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 26539  019CBA  EC95  F0D4         	call	_CLKREF_Initialize	;wreg free
 26540                           
 26541                           ; BSR set to: 60
 26542                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26543  019CBE  0012               	return		;funcret
 26544  019CC0                     __end_of_SYSTEM_Initialize:
 26545                           	opt callstack 0
 26546                           
 26547 ;; *************** function _UART2_Initialize *****************
 26548 ;; Defined at:
 26549 ;;		line 78 in file "mcc_generated_files/uart2.c"
 26550 ;; Parameters:    Size  Location     Type
 26551 ;;		None
 26552 ;; Auto vars:     Size  Location     Type
 26553 ;;		None
 26554 ;; Return value:  Size  Location     Type
 26555 ;;                  1  [STACK] void 
 26556 ;; Registers used:
 26557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 26558 ;; Tracked objects:
 26559 ;;		On entry : 3F/39
 26560 ;;		On exit  : 3F/39
 26561 ;;		Unchanged: 0/0
 26562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26567 ;;Total ram usage:        0 bytes
 26568 ;; Hardware stack levels used:    1
 26569 ;; Hardware stack levels required when called:   16
 26570 ;; This function calls:
 26571 ;;		_UART2_SetRxInterruptHandler
 26572 ;;		_UART2_SetTxInterruptHandler
 26573 ;; This function is called by:
 26574 ;;		_SYSTEM_Initialize
 26575 ;; This function uses a reentrant model
 26576 ;;
 26577                           
 26578                           	psect	text103
 26579  0199C4                     __ptext103:
 26580                           	opt callstack 0
 26581  0199C4                     _UART2_Initialize:
 26582                           	opt callstack 13
 26583                           
 26584                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 26585                           
 26586                           ; BSR set to: 60
 26587                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26588                           ;incstack = 0
 26589  0199C4  0139               	movlb	57	; () banked
 26590  0199C6  9596               	bcf	150,2,b	;volatile
 26591                           
 26592                           ; BSR set to: 57
 26593                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 26594  0199C8  0EB6               	movlw	low _UART2_Receive_ISR
 26595  0199CA  6EE6               	movwf	postinc1,c
 26596  0199CC  0EA7               	movlw	high _UART2_Receive_ISR
 26597  0199CE  6EE6               	movwf	postinc1,c
 26598  0199D0  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 26599  0199D2  6EE6               	movwf	postinc1,c
 26600  0199D4  ECFF  F0D1         	call	_UART2_SetRxInterruptHandler	;wreg free
 26601                           
 26602                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 26603  0199D8  0139               	movlb	57	; () banked
 26604  0199DA  9796               	bcf	150,3,b	;volatile
 26605                           
 26606                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 26607  0199DC  0EE0               	movlw	low _UART2_Transmit_ISR
 26608  0199DE  6EE6               	movwf	postinc1,c
 26609  0199E0  0EA2               	movlw	high _UART2_Transmit_ISR
 26610  0199E2  6EE6               	movwf	postinc1,c
 26611  0199E4  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 26612  0199E6  6EE6               	movwf	postinc1,c
 26613  0199E8  ECEB  F0D1         	call	_UART2_SetTxInterruptHandler	;wreg free
 26614                           
 26615                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 26616  0199EC  013D               	movlb	61	; () banked
 26617  0199EE  6BD4               	clrf	212,b	;volatile
 26618                           
 26619                           ; BSR set to: 61
 26620                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 26621  0199F0  6BD6               	clrf	214,b	;volatile
 26622                           
 26623                           ; BSR set to: 61
 26624                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 26625  0199F2  6BD8               	clrf	216,b	;volatile
 26626                           
 26627                           ; BSR set to: 61
 26628                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 26629  0199F4  0EB0               	movlw	176
 26630  0199F6  6FDA               	movwf	218,b	;volatile
 26631                           
 26632                           ; BSR set to: 61
 26633                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 26634  0199F8  0E80               	movlw	128
 26635  0199FA  6FDB               	movwf	219,b	;volatile
 26636                           
 26637                           ; BSR set to: 61
 26638                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 26639  0199FC  6BDC               	clrf	220,b	;volatile
 26640                           
 26641                           ; BSR set to: 61
 26642                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 26643  0199FE  0E82               	movlw	130
 26644  019A00  6FDD               	movwf	221,b	;volatile
 26645                           
 26646                           ; BSR set to: 61
 26647                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 26648  019A02  0E06               	movlw	6
 26649  019A04  6FDE               	movwf	222,b	;volatile
 26650                           
 26651                           ; BSR set to: 61
 26652                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 26653  019A06  6BDF               	clrf	223,b	;volatile
 26654                           
 26655                           ; BSR set to: 61
 26656                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 26657  019A08  6BE0               	clrf	224,b	;volatile
 26658                           
 26659                           ; BSR set to: 61
 26660                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 26661  019A0A  6BE1               	clrf	225,b	;volatile
 26662                           
 26663                           ; BSR set to: 61
 26664                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 26665  019A0C  6BE2               	clrf	226,b	;volatile
 26666                           
 26667                           ; BSR set to: 61
 26668                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 26669  019A0E  6A34               	clrf	_uart2TxHead^0,c	;volatile
 26670                           
 26671                           ; BSR set to: 61
 26672                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 26673  019A10  6A33               	clrf	_uart2TxTail^0,c	;volatile
 26674                           
 26675                           ; BSR set to: 61
 26676                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 26677  019A12  0E40               	movlw	64
 26678  019A14  6E32               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 26679                           
 26680                           ; BSR set to: 61
 26681                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 26682  019A16  6A31               	clrf	_uart2RxHead^0,c	;volatile
 26683                           
 26684                           ; BSR set to: 61
 26685                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 26686  019A18  6A30               	clrf	_uart2RxTail^0,c	;volatile
 26687                           
 26688                           ; BSR set to: 61
 26689                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 26690  019A1A  6A2F               	clrf	_uart2RxCount^0,c	;volatile
 26691                           
 26692                           ; BSR set to: 61
 26693                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 26694  019A1C  0139               	movlb	57	; () banked
 26695  019A1E  8596               	bsf	150,2,b	;volatile
 26696                           
 26697                           ; BSR set to: 57
 26698                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 26699  019A20  0012               	return		;funcret
 26700  019A22                     __end_of_UART2_Initialize:
 26701                           	opt callstack 0
 26702                           
 26703 ;; *************** function _UART2_SetTxInterruptHandler *****************
 26704 ;; Defined at:
 26705 ;;		line 252 in file "mcc_generated_files/uart2.c"
 26706 ;; Parameters:    Size  Location     Type
 26707 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26708 ;;		 -> UART2_Transmit_ISR(1), 
 26709 ;; Auto vars:     Size  Location     Type
 26710 ;;		None
 26711 ;; Return value:  Size  Location     Type
 26712 ;;                  1  [STACK] void 
 26713 ;; Registers used:
 26714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26715 ;; Tracked objects:
 26716 ;;		On entry : 3F/39
 26717 ;;		On exit  : 0/0
 26718 ;;		Unchanged: 0/0
 26719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26724 ;;Total ram usage:        0 bytes
 26725 ;; Hardware stack levels used:    1
 26726 ;; Hardware stack levels required when called:   15
 26727 ;; This function calls:
 26728 ;;		Nothing
 26729 ;; This function is called by:
 26730 ;;		_UART2_Initialize
 26731 ;; This function uses a reentrant model
 26732 ;;
 26733                           
 26734                           	psect	text104
 26735  01A3D6                     __ptext104:
 26736                           	opt callstack 0
 26737  01A3D6                     _UART2_SetTxInterruptHandler:
 26738                           	opt callstack 13
 26739                           
 26740                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 26741                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26742                           
 26743                           ; BSR set to: 57
 26744                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26745                           ;incstack = 0
 26746  01A3D6  50E1               	movf	fsr1l,w,c
 26747  01A3D8  0FFD               	addlw	-3
 26748  01A3DA  6ED9               	movwf	fsr2l,c
 26749  01A3DC  50E2               	movf	fsr1h,w,c
 26750  01A3DE  6EDA               	movwf	fsr2h,c
 26751  01A3E0  0EFF               	movlw	255
 26752  01A3E2  22DA               	addwfc	fsr2h,f,c
 26753  01A3E4  006F FF78  F09A    	movff	postinc2,_UART2_TxInterruptHandler
 26754  01A3EA  006F FF78  F09B    	movff	postinc2,_UART2_TxInterruptHandler+1
 26755  01A3F0  006F FF74  F09C    	movff	postdec2,_UART2_TxInterruptHandler+2
 26756                           
 26757                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26758  01A3F6  52E5               	movf	postdec1,f,c
 26759  01A3F8  52E5               	movf	postdec1,f,c
 26760  01A3FA  52E5               	movf	postdec1,f,c
 26761  01A3FC  0012               	return		;funcret
 26762  01A3FE                     __end_of_UART2_SetTxInterruptHandler:
 26763                           	opt callstack 0
 26764                           
 26765 ;; *************** function _UART2_SetRxInterruptHandler *****************
 26766 ;; Defined at:
 26767 ;;		line 248 in file "mcc_generated_files/uart2.c"
 26768 ;; Parameters:    Size  Location     Type
 26769 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26770 ;;		 -> UART2_Receive_ISR(1), 
 26771 ;; Auto vars:     Size  Location     Type
 26772 ;;		None
 26773 ;; Return value:  Size  Location     Type
 26774 ;;                  1  [STACK] void 
 26775 ;; Registers used:
 26776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26777 ;; Tracked objects:
 26778 ;;		On entry : 3F/39
 26779 ;;		On exit  : 0/0
 26780 ;;		Unchanged: 0/0
 26781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26786 ;;Total ram usage:        0 bytes
 26787 ;; Hardware stack levels used:    1
 26788 ;; Hardware stack levels required when called:   15
 26789 ;; This function calls:
 26790 ;;		Nothing
 26791 ;; This function is called by:
 26792 ;;		_UART2_Initialize
 26793 ;; This function uses a reentrant model
 26794 ;;
 26795                           
 26796                           	psect	text105
 26797  01A3FE                     __ptext105:
 26798                           	opt callstack 0
 26799  01A3FE                     _UART2_SetRxInterruptHandler:
 26800                           	opt callstack 13
 26801                           
 26802                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 26803                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26804                           
 26805                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26806                           ;incstack = 0
 26807  01A3FE  50E1               	movf	fsr1l,w,c
 26808  01A400  0FFD               	addlw	-3
 26809  01A402  6ED9               	movwf	fsr2l,c
 26810  01A404  50E2               	movf	fsr1h,w,c
 26811  01A406  6EDA               	movwf	fsr2h,c
 26812  01A408  0EFF               	movlw	255
 26813  01A40A  22DA               	addwfc	fsr2h,f,c
 26814  01A40C  006F FF78  F09D    	movff	postinc2,_UART2_RxInterruptHandler
 26815  01A412  006F FF78  F09E    	movff	postinc2,_UART2_RxInterruptHandler+1
 26816  01A418  006F FF74  F09F    	movff	postdec2,_UART2_RxInterruptHandler+2
 26817                           
 26818                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26819  01A41E  52E5               	movf	postdec1,f,c
 26820  01A420  52E5               	movf	postdec1,f,c
 26821  01A422  52E5               	movf	postdec1,f,c
 26822  01A424  0012               	return		;funcret
 26823  01A426                     __end_of_UART2_SetRxInterruptHandler:
 26824                           	opt callstack 0
 26825                           
 26826 ;; *************** function _UART1_Initialize *****************
 26827 ;; Defined at:
 26828 ;;		line 75 in file "mcc_generated_files/uart1.c"
 26829 ;; Parameters:    Size  Location     Type
 26830 ;;		None
 26831 ;; Auto vars:     Size  Location     Type
 26832 ;;		None
 26833 ;; Return value:  Size  Location     Type
 26834 ;;                  1  [STACK] void 
 26835 ;; Registers used:
 26836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 26837 ;; Tracked objects:
 26838 ;;		On entry : 0/39
 26839 ;;		On exit  : 3F/39
 26840 ;;		Unchanged: 0/0
 26841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26846 ;;Total ram usage:        0 bytes
 26847 ;; Hardware stack levels used:    1
 26848 ;; Hardware stack levels required when called:   16
 26849 ;; This function calls:
 26850 ;;		_UART1_SetRxInterruptHandler
 26851 ;; This function is called by:
 26852 ;;		_SYSTEM_Initialize
 26853 ;; This function uses a reentrant model
 26854 ;;
 26855                           
 26856                           	psect	text106
 26857  019D94                     __ptext106:
 26858                           	opt callstack 0
 26859  019D94                     _UART1_Initialize:
 26860                           	opt callstack 13
 26861                           
 26862                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 26863                           
 26864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26865                           ;incstack = 0
 26866  019D94  0139               	movlb	57	; () banked
 26867  019D96  9793               	bcf	147,3,b	;volatile
 26868                           
 26869                           ; BSR set to: 57
 26870                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 26871  019D98  0E1E               	movlw	low _UART1_Receive_ISR
 26872  019D9A  6EE6               	movwf	postinc1,c
 26873  019D9C  0EA7               	movlw	high _UART1_Receive_ISR
 26874  019D9E  6EE6               	movwf	postinc1,c
 26875  019DA0  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 26876  019DA2  6EE6               	movwf	postinc1,c
 26877  019DA4  EC13  F0D2         	call	_UART1_SetRxInterruptHandler	;wreg free
 26878                           
 26879                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 26880  019DA8  013D               	movlb	61	; () banked
 26881  019DAA  6BEC               	clrf	236,b	;volatile
 26882                           
 26883                           ; BSR set to: 61
 26884                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 26885  019DAC  6BED               	clrf	237,b	;volatile
 26886                           
 26887                           ; BSR set to: 61
 26888                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 26889  019DAE  6BEE               	clrf	238,b	;volatile
 26890                           
 26891                           ; BSR set to: 61
 26892                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 26893  019DB0  6BEF               	clrf	239,b	;volatile
 26894                           
 26895                           ; BSR set to: 61
 26896                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 26897  019DB2  6BF0               	clrf	240,b	;volatile
 26898                           
 26899                           ; BSR set to: 61
 26900                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 26901  019DB4  6BF1               	clrf	241,b	;volatile
 26902                           
 26903                           ; BSR set to: 61
 26904                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 26905  019DB6  0EB0               	movlw	176
 26906  019DB8  6FF2               	movwf	242,b	;volatile
 26907                           
 26908                           ; BSR set to: 61
 26909                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 26910  019DBA  0E80               	movlw	128
 26911  019DBC  6FF3               	movwf	243,b	;volatile
 26912                           
 26913                           ; BSR set to: 61
 26914                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 26915  019DBE  6BF4               	clrf	244,b	;volatile
 26916                           
 26917                           ; BSR set to: 61
 26918                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 26919  019DC0  0E8A               	movlw	138
 26920  019DC2  6FF5               	movwf	245,b	;volatile
 26921                           
 26922                           ; BSR set to: 61
 26923                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 26924  019DC4  6BF6               	clrf	246,b	;volatile
 26925                           
 26926                           ; BSR set to: 61
 26927                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 26928  019DC6  6BF7               	clrf	247,b	;volatile
 26929                           
 26930                           ; BSR set to: 61
 26931                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 26932  019DC8  6BF8               	clrf	248,b	;volatile
 26933                           
 26934                           ; BSR set to: 61
 26935                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 26936  019DCA  6BF9               	clrf	249,b	;volatile
 26937                           
 26938                           ; BSR set to: 61
 26939                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 26940  019DCC  6BFA               	clrf	250,b	;volatile
 26941                           
 26942                           ; BSR set to: 61
 26943                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 26944  019DCE  6A37               	clrf	_uart1RxHead^0,c	;volatile
 26945                           
 26946                           ; BSR set to: 61
 26947                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 26948  019DD0  6A36               	clrf	_uart1RxTail^0,c	;volatile
 26949                           
 26950                           ; BSR set to: 61
 26951                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 26952  019DD2  6A35               	clrf	_uart1RxCount^0,c	;volatile
 26953                           
 26954                           ; BSR set to: 61
 26955                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 26956  019DD4  0139               	movlb	57	; () banked
 26957  019DD6  8793               	bsf	147,3,b	;volatile
 26958                           
 26959                           ; BSR set to: 57
 26960                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 26961  019DD8  0012               	return		;funcret
 26962  019DDA                     __end_of_UART1_Initialize:
 26963                           	opt callstack 0
 26964                           
 26965 ;; *************** function _UART1_SetRxInterruptHandler *****************
 26966 ;; Defined at:
 26967 ;;		line 207 in file "mcc_generated_files/uart1.c"
 26968 ;; Parameters:    Size  Location     Type
 26969 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26970 ;;		 -> UART1_Receive_ISR(1), 
 26971 ;; Auto vars:     Size  Location     Type
 26972 ;;		None
 26973 ;; Return value:  Size  Location     Type
 26974 ;;                  1  [STACK] void 
 26975 ;; Registers used:
 26976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26977 ;; Tracked objects:
 26978 ;;		On entry : 3F/39
 26979 ;;		On exit  : 0/0
 26980 ;;		Unchanged: 0/0
 26981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26986 ;;Total ram usage:        0 bytes
 26987 ;; Hardware stack levels used:    1
 26988 ;; Hardware stack levels required when called:   15
 26989 ;; This function calls:
 26990 ;;		Nothing
 26991 ;; This function is called by:
 26992 ;;		_UART1_Initialize
 26993 ;; This function uses a reentrant model
 26994 ;;
 26995                           
 26996                           	psect	text107
 26997  01A426                     __ptext107:
 26998                           	opt callstack 0
 26999  01A426                     _UART1_SetRxInterruptHandler:
 27000                           	opt callstack 13
 27001                           
 27002                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 27003                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27004                           
 27005                           ; BSR set to: 57
 27006                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27007                           ;incstack = 0
 27008  01A426  50E1               	movf	fsr1l,w,c
 27009  01A428  0FFD               	addlw	-3
 27010  01A42A  6ED9               	movwf	fsr2l,c
 27011  01A42C  50E2               	movf	fsr1h,w,c
 27012  01A42E  6EDA               	movwf	fsr2h,c
 27013  01A430  0EFF               	movlw	255
 27014  01A432  22DA               	addwfc	fsr2h,f,c
 27015  01A434  006F FF78  F097    	movff	postinc2,_UART1_RxInterruptHandler
 27016  01A43A  006F FF78  F098    	movff	postinc2,_UART1_RxInterruptHandler+1
 27017  01A440  006F FF74  F099    	movff	postdec2,_UART1_RxInterruptHandler+2
 27018                           
 27019                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 27020  01A446  52E5               	movf	postdec1,f,c
 27021  01A448  52E5               	movf	postdec1,f,c
 27022  01A44A  52E5               	movf	postdec1,f,c
 27023  01A44C  0012               	return		;funcret
 27024  01A44E                     __end_of_UART1_SetRxInterruptHandler:
 27025                           	opt callstack 0
 27026                           
 27027 ;; *************** function _TMR6_Initialize *****************
 27028 ;; Defined at:
 27029 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 27030 ;; Parameters:    Size  Location     Type
 27031 ;;		None
 27032 ;; Auto vars:     Size  Location     Type
 27033 ;;		None
 27034 ;; Return value:  Size  Location     Type
 27035 ;;                  1  [STACK] void 
 27036 ;; Registers used:
 27037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 27038 ;; Tracked objects:
 27039 ;;		On entry : 3F/39
 27040 ;;		On exit  : 0/0
 27041 ;;		Unchanged: 0/0
 27042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27047 ;;Total ram usage:        0 bytes
 27048 ;; Hardware stack levels used:    1
 27049 ;; Hardware stack levels required when called:   16
 27050 ;; This function calls:
 27051 ;;		_TMR6_SetInterruptHandler
 27052 ;; This function is called by:
 27053 ;;		_SYSTEM_Initialize
 27054 ;; This function uses a reentrant model
 27055 ;;
 27056                           
 27057                           	psect	text108
 27058  01A30C                     __ptext108:
 27059                           	opt callstack 0
 27060  01A30C                     _TMR6_Initialize:
 27061                           	opt callstack 13
 27062                           
 27063                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 27064                           
 27065                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27066                           ;incstack = 0
 27067  01A30C  0E01               	movlw	1
 27068  01A30E  6E96               	movwf	150,c	;volatile
 27069                           
 27070                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 27071  01A310  6A95               	clrf	149,c	;volatile
 27072                           
 27073                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 27074  01A312  6A97               	clrf	151,c	;volatile
 27075                           
 27076                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 27077  01A314  0E7C               	movlw	124
 27078  01A316  6E93               	movwf	147,c	;volatile
 27079                           
 27080                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 27081  01A318  6A92               	clrf	146,c	;volatile
 27082                           
 27083                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 27084  01A31A  0139               	movlb	57	; () banked
 27085  01A31C  91A9               	bcf	169,0,b	;volatile
 27086                           
 27087                           ; BSR set to: 57
 27088                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 27089  01A31E  8199               	bsf	153,0,b	;volatile
 27090                           
 27091                           ; BSR set to: 57
 27092                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 27093  01A320  0E28               	movlw	low _TMR6_DefaultInterruptHandler
 27094  01A322  6EE6               	movwf	postinc1,c
 27095  01A324  0E9C               	movlw	high _TMR6_DefaultInterruptHandler
 27096  01A326  6EE6               	movwf	postinc1,c
 27097  01A328  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 27098  01A32A  6EE6               	movwf	postinc1,c
 27099  01A32C  EC27  F0D2         	call	_TMR6_SetInterruptHandler	;wreg free
 27100                           
 27101                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 27102  01A330  0EE0               	movlw	224
 27103  01A332  6E94               	movwf	148,c	;volatile
 27104                           
 27105                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27106  01A334  0012               	return		;funcret
 27107  01A336                     __end_of_TMR6_Initialize:
 27108                           	opt callstack 0
 27109                           
 27110 ;; *************** function _TMR6_SetInterruptHandler *****************
 27111 ;; Defined at:
 27112 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 27113 ;; Parameters:    Size  Location     Type
 27114 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27115 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 27116 ;; Auto vars:     Size  Location     Type
 27117 ;;		None
 27118 ;; Return value:  Size  Location     Type
 27119 ;;                  1  [STACK] void 
 27120 ;; Registers used:
 27121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27122 ;; Tracked objects:
 27123 ;;		On entry : 3F/39
 27124 ;;		On exit  : 0/0
 27125 ;;		Unchanged: 0/0
 27126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27131 ;;Total ram usage:        0 bytes
 27132 ;; Hardware stack levels used:    1
 27133 ;; Hardware stack levels required when called:   15
 27134 ;; This function calls:
 27135 ;;		Nothing
 27136 ;; This function is called by:
 27137 ;;		_TMR6_Initialize
 27138 ;; This function uses a reentrant model
 27139 ;;
 27140                           
 27141                           	psect	text109
 27142  01A44E                     __ptext109:
 27143                           	opt callstack 0
 27144  01A44E                     _TMR6_SetInterruptHandler:
 27145                           	opt callstack 13
 27146                           
 27147                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 27148                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27149                           
 27150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27151                           ;incstack = 0
 27152  01A44E  50E1               	movf	fsr1l,w,c
 27153  01A450  0FFD               	addlw	-3
 27154  01A452  6ED9               	movwf	fsr2l,c
 27155  01A454  50E2               	movf	fsr1h,w,c
 27156  01A456  6EDA               	movwf	fsr2h,c
 27157  01A458  0EFF               	movlw	255
 27158  01A45A  22DA               	addwfc	fsr2h,f,c
 27159  01A45C  006F FF78  F08E    	movff	postinc2,_TMR6_InterruptHandler
 27160  01A462  006F FF78  F08F    	movff	postinc2,_TMR6_InterruptHandler+1
 27161  01A468  006F FF74  F090    	movff	postdec2,_TMR6_InterruptHandler+2
 27162                           
 27163                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 27164  01A46E  52E5               	movf	postdec1,f,c
 27165  01A470  52E5               	movf	postdec1,f,c
 27166  01A472  52E5               	movf	postdec1,f,c
 27167  01A474  0012               	return		;funcret
 27168  01A476                     __end_of_TMR6_SetInterruptHandler:
 27169                           	opt callstack 0
 27170                           
 27171 ;; *************** function _TMR5_Initialize *****************
 27172 ;; Defined at:
 27173 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 27174 ;; Parameters:    Size  Location     Type
 27175 ;;		None
 27176 ;; Auto vars:     Size  Location     Type
 27177 ;;		None
 27178 ;; Return value:  Size  Location     Type
 27179 ;;                  1  [STACK] void 
 27180 ;; Registers used:
 27181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 27182 ;; Tracked objects:
 27183 ;;		On entry : 0/39
 27184 ;;		On exit  : 0/0
 27185 ;;		Unchanged: 0/0
 27186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27191 ;;Total ram usage:        0 bytes
 27192 ;; Hardware stack levels used:    1
 27193 ;; Hardware stack levels required when called:   16
 27194 ;; This function calls:
 27195 ;;		_TMR5_SetInterruptHandler
 27196 ;; This function is called by:
 27197 ;;		_SYSTEM_Initialize
 27198 ;; This function uses a reentrant model
 27199 ;;
 27200                           
 27201                           	psect	text110
 27202  019DDA                     __ptext110:
 27203                           	opt callstack 0
 27204  019DDA                     _TMR5_Initialize:
 27205                           	opt callstack 13
 27206                           
 27207                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 27208                           
 27209                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27210                           ;incstack = 0
 27211  019DDA  6A9B               	clrf	155,c	;volatile
 27212                           
 27213                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 27214  019DDC  6A9C               	clrf	156,c	;volatile
 27215                           
 27216                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 27217  019DDE  0E01               	movlw	1
 27218  019DE0  6E9D               	movwf	157,c	;volatile
 27219                           
 27220                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 27221  019DE2  0E63               	movlw	99
 27222  019DE4  6E99               	movwf	153,c	;volatile
 27223                           
 27224                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 27225  019DE6  0EC0               	movlw	192
 27226  019DE8  6E98               	movwf	152,c	;volatile
 27227                           
 27228                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 27229  019DEA  5098               	movf	152,w,c	;volatile
 27230  019DEC  006F FE64  F001    	movff	16281,btemp	;volatile
 27231  019DF2  6A02               	clrf	(btemp+1)^0,c
 27232  019DF4  0060  F004  F002   	movff	btemp,btemp+1
 27233  019DFA  6A01               	clrf	btemp^0,c
 27234  019DFC  1001               	iorwf	btemp^0,w,c
 27235  019DFE  6E2B               	movwf	_timer5ReloadVal^0,c	;volatile
 27236  019E00  5002               	movf	(btemp+1)^0,w,c
 27237  019E02  6E2C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 27238                           
 27239                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 27240  019E04  0139               	movlb	57	; () banked
 27241  019E06  9DA8               	bcf	168,6,b	;volatile
 27242                           
 27243                           ; BSR set to: 57
 27244                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 27245  019E08  8D98               	bsf	152,6,b	;volatile
 27246                           
 27247                           ; BSR set to: 57
 27248                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 27249  019E0A  0E36               	movlw	low _TMR5_DefaultInterruptHandler
 27250  019E0C  6EE6               	movwf	postinc1,c
 27251  019E0E  0EA1               	movlw	high _TMR5_DefaultInterruptHandler
 27252  019E10  6EE6               	movwf	postinc1,c
 27253  019E12  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 27254  019E14  6EE6               	movwf	postinc1,c
 27255  019E16  EC3B  F0D2         	call	_TMR5_SetInterruptHandler	;wreg free
 27256                           
 27257                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 27258  019E1A  0E31               	movlw	49
 27259  019E1C  6E9A               	movwf	154,c	;volatile
 27260                           
 27261                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27262  019E1E  0012               	return		;funcret
 27263  019E20                     __end_of_TMR5_Initialize:
 27264                           	opt callstack 0
 27265                           
 27266 ;; *************** function _TMR5_SetInterruptHandler *****************
 27267 ;; Defined at:
 27268 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 27269 ;; Parameters:    Size  Location     Type
 27270 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27271 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 27272 ;; Auto vars:     Size  Location     Type
 27273 ;;		None
 27274 ;; Return value:  Size  Location     Type
 27275 ;;                  1  [STACK] void 
 27276 ;; Registers used:
 27277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27278 ;; Tracked objects:
 27279 ;;		On entry : 3F/39
 27280 ;;		On exit  : 0/0
 27281 ;;		Unchanged: 0/0
 27282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27287 ;;Total ram usage:        0 bytes
 27288 ;; Hardware stack levels used:    1
 27289 ;; Hardware stack levels required when called:   15
 27290 ;; This function calls:
 27291 ;;		Nothing
 27292 ;; This function is called by:
 27293 ;;		_TMR5_Initialize
 27294 ;; This function uses a reentrant model
 27295 ;;
 27296                           
 27297                           	psect	text111
 27298  01A476                     __ptext111:
 27299                           	opt callstack 0
 27300  01A476                     _TMR5_SetInterruptHandler:
 27301                           	opt callstack 13
 27302                           
 27303                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 27304                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27305                           
 27306                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27307                           ;incstack = 0
 27308  01A476  50E1               	movf	fsr1l,w,c
 27309  01A478  0FFD               	addlw	-3
 27310  01A47A  6ED9               	movwf	fsr2l,c
 27311  01A47C  50E2               	movf	fsr1h,w,c
 27312  01A47E  6EDA               	movwf	fsr2h,c
 27313  01A480  0EFF               	movlw	255
 27314  01A482  22DA               	addwfc	fsr2h,f,c
 27315  01A484  006F FF78  F08B    	movff	postinc2,_TMR5_InterruptHandler
 27316  01A48A  006F FF78  F08C    	movff	postinc2,_TMR5_InterruptHandler+1
 27317  01A490  006F FF74  F08D    	movff	postdec2,_TMR5_InterruptHandler+2
 27318                           
 27319                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 27320  01A496  52E5               	movf	postdec1,f,c
 27321  01A498  52E5               	movf	postdec1,f,c
 27322  01A49A  52E5               	movf	postdec1,f,c
 27323  01A49C  0012               	return		;funcret
 27324  01A49E                     __end_of_TMR5_SetInterruptHandler:
 27325                           	opt callstack 0
 27326                           
 27327 ;; *************** function _TMR3_Initialize *****************
 27328 ;; Defined at:
 27329 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 27330 ;; Parameters:    Size  Location     Type
 27331 ;;		None
 27332 ;; Auto vars:     Size  Location     Type
 27333 ;;		None
 27334 ;; Return value:  Size  Location     Type
 27335 ;;                  1  [STACK] void 
 27336 ;; Registers used:
 27337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 27338 ;; Tracked objects:
 27339 ;;		On entry : 0/39
 27340 ;;		On exit  : 0/0
 27341 ;;		Unchanged: 0/0
 27342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27347 ;;Total ram usage:        0 bytes
 27348 ;; Hardware stack levels used:    1
 27349 ;; Hardware stack levels required when called:   16
 27350 ;; This function calls:
 27351 ;;		_TMR3_SetInterruptHandler
 27352 ;; This function is called by:
 27353 ;;		_SYSTEM_Initialize
 27354 ;; This function uses a reentrant model
 27355 ;;
 27356                           
 27357                           	psect	text112
 27358  019E20                     __ptext112:
 27359                           	opt callstack 0
 27360  019E20                     _TMR3_Initialize:
 27361                           	opt callstack 13
 27362                           
 27363                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 27364                           
 27365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27366                           ;incstack = 0
 27367  019E20  6AA7               	clrf	167,c	;volatile
 27368                           
 27369                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 27370  019E22  6AA8               	clrf	168,c	;volatile
 27371                           
 27372                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 27373  019E24  0E01               	movlw	1
 27374  019E26  6EA9               	movwf	169,c	;volatile
 27375                           
 27376                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 27377  019E28  0E3C               	movlw	60
 27378  019E2A  6EA5               	movwf	165,c	;volatile
 27379                           
 27380                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 27381  019E2C  0EB0               	movlw	176
 27382  019E2E  6EA4               	movwf	164,c	;volatile
 27383                           
 27384                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 27385  019E30  50A4               	movf	164,w,c	;volatile
 27386  019E32  006F FE94  F001    	movff	16293,btemp	;volatile
 27387  019E38  6A02               	clrf	(btemp+1)^0,c
 27388  019E3A  0060  F004  F002   	movff	btemp,btemp+1
 27389  019E40  6A01               	clrf	btemp^0,c
 27390  019E42  1001               	iorwf	btemp^0,w,c
 27391  019E44  6E27               	movwf	_timer3ReloadVal^0,c	;volatile
 27392  019E46  5002               	movf	(btemp+1)^0,w,c
 27393  019E48  6E28               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 27394                           
 27395                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 27396  019E4A  0139               	movlb	57	; () banked
 27397  019E4C  9DA6               	bcf	166,6,b	;volatile
 27398                           
 27399                           ; BSR set to: 57
 27400                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 27401  019E4E  8D96               	bsf	150,6,b	;volatile
 27402                           
 27403                           ; BSR set to: 57
 27404                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 27405  019E50  0EB4               	movlw	low _TMR3_DefaultInterruptHandler
 27406  019E52  6EE6               	movwf	postinc1,c
 27407  019E54  0EA9               	movlw	high _TMR3_DefaultInterruptHandler
 27408  019E56  6EE6               	movwf	postinc1,c
 27409  019E58  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 27410  019E5A  6EE6               	movwf	postinc1,c
 27411  019E5C  EC4F  F0D2         	call	_TMR3_SetInterruptHandler	;wreg free
 27412                           
 27413                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 27414  019E60  0E31               	movlw	49
 27415  019E62  6EA6               	movwf	166,c	;volatile
 27416                           
 27417                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27418  019E64  0012               	return		;funcret
 27419  019E66                     __end_of_TMR3_Initialize:
 27420                           	opt callstack 0
 27421                           
 27422 ;; *************** function _TMR3_SetInterruptHandler *****************
 27423 ;; Defined at:
 27424 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 27425 ;; Parameters:    Size  Location     Type
 27426 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 27427 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 27428 ;; Auto vars:     Size  Location     Type
 27429 ;;		None
 27430 ;; Return value:  Size  Location     Type
 27431 ;;                  1  [STACK] void 
 27432 ;; Registers used:
 27433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 27434 ;; Tracked objects:
 27435 ;;		On entry : 0/1
 27436 ;;		On exit  : 0/0
 27437 ;;		Unchanged: 0/0
 27438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27443 ;;Total ram usage:        0 bytes
 27444 ;; Hardware stack levels used:    1
 27445 ;; Hardware stack levels required when called:   15
 27446 ;; This function calls:
 27447 ;;		Nothing
 27448 ;; This function is called by:
 27449 ;;		_TMR3_Initialize
 27450 ;;		_init_bsoc
 27451 ;; This function uses a reentrant model
 27452 ;;
 27453                           
 27454                           	psect	text113
 27455  01A49E                     __ptext113:
 27456                           	opt callstack 0
 27457  01A49E                     _TMR3_SetInterruptHandler:
 27458                           	opt callstack 14
 27459                           
 27460                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 27461                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 27462                           
 27463                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27464                           ;incstack = 0
 27465  01A49E  50E1               	movf	fsr1l,w,c
 27466  01A4A0  0FFD               	addlw	-3
 27467  01A4A2  6ED9               	movwf	fsr2l,c
 27468  01A4A4  50E2               	movf	fsr1h,w,c
 27469  01A4A6  6EDA               	movwf	fsr2h,c
 27470  01A4A8  0EFF               	movlw	255
 27471  01A4AA  22DA               	addwfc	fsr2h,f,c
 27472  01A4AC  006F FF78  F088    	movff	postinc2,_TMR3_InterruptHandler
 27473  01A4B2  006F FF78  F089    	movff	postinc2,_TMR3_InterruptHandler+1
 27474  01A4B8  006F FF74  F08A    	movff	postdec2,_TMR3_InterruptHandler+2
 27475                           
 27476                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 27477  01A4BE  52E5               	movf	postdec1,f,c
 27478  01A4C0  52E5               	movf	postdec1,f,c
 27479  01A4C2  52E5               	movf	postdec1,f,c
 27480  01A4C4  0012               	return		;funcret
 27481  01A4C6                     __end_of_TMR3_SetInterruptHandler:
 27482                           	opt callstack 0
 27483                           
 27484 ;; *************** function _TMR2_Initialize *****************
 27485 ;; Defined at:
 27486 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 27487 ;; Parameters:    Size  Location     Type
 27488 ;;		None
 27489 ;; Auto vars:     Size  Location     Type
 27490 ;;		None
 27491 ;; Return value:  Size  Location     Type
 27492 ;;                  1  [STACK] void 
 27493 ;; Registers used:
 27494 ;;		wreg, status,2
 27495 ;; Tracked objects:
 27496 ;;		On entry : 3F/3F
 27497 ;;		On exit  : 3F/39
 27498 ;;		Unchanged: 0/0
 27499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27504 ;;Total ram usage:        0 bytes
 27505 ;; Hardware stack levels used:    1
 27506 ;; Hardware stack levels required when called:   15
 27507 ;; This function calls:
 27508 ;;		Nothing
 27509 ;; This function is called by:
 27510 ;;		_SYSTEM_Initialize
 27511 ;; This function uses a reentrant model
 27512 ;;
 27513                           
 27514                           	psect	text114
 27515  01A83E                     __ptext114:
 27516                           	opt callstack 0
 27517  01A83E                     _TMR2_Initialize:
 27518                           	opt callstack 14
 27519                           
 27520                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 27521                           
 27522                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27523                           ;incstack = 0
 27524  01A83E  0E01               	movlw	1
 27525  01A840  6EAE               	movwf	174,c	;volatile
 27526                           
 27527                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 27528  01A842  6AAD               	clrf	173,c	;volatile
 27529                           
 27530                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 27531  01A844  6AAF               	clrf	175,c	;volatile
 27532                           
 27533                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 27534  01A846  0E63               	movlw	99
 27535  01A848  6EAB               	movwf	171,c	;volatile
 27536                           
 27537                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 27538  01A84A  6AAA               	clrf	170,c	;volatile
 27539                           
 27540                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 27541  01A84C  0139               	movlb	57	; () banked
 27542  01A84E  95A4               	bcf	164,2,b	;volatile
 27543                           
 27544                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 27545  01A850  0EC0               	movlw	192
 27546  01A852  6EAC               	movwf	172,c	;volatile
 27547                           
 27548                           ; BSR set to: 57
 27549                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27550  01A854  0012               	return		;funcret
 27551  01A856                     __end_of_TMR2_Initialize:
 27552                           	opt callstack 0
 27553                           
 27554 ;; *************** function _SPI1_Initialize *****************
 27555 ;; Defined at:
 27556 ;;		line 64 in file "mcc_generated_files/spi1.c"
 27557 ;; Parameters:    Size  Location     Type
 27558 ;;		None
 27559 ;; Auto vars:     Size  Location     Type
 27560 ;;		None
 27561 ;; Return value:  Size  Location     Type
 27562 ;;                  1  [STACK] void 
 27563 ;; Registers used:
 27564 ;;		wreg, status,2
 27565 ;; Tracked objects:
 27566 ;;		On entry : 3F/39
 27567 ;;		On exit  : 3F/3D
 27568 ;;		Unchanged: 0/0
 27569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27574 ;;Total ram usage:        0 bytes
 27575 ;; Hardware stack levels used:    1
 27576 ;; Hardware stack levels required when called:   15
 27577 ;; This function calls:
 27578 ;;		Nothing
 27579 ;; This function is called by:
 27580 ;;		_SYSTEM_Initialize
 27581 ;; This function uses a reentrant model
 27582 ;;
 27583                           
 27584                           	psect	text115
 27585  01A856                     __ptext115:
 27586                           	opt callstack 0
 27587  01A856                     _SPI1_Initialize:
 27588                           	opt callstack 14
 27589                           
 27590                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 27591                           
 27592                           ; BSR set to: 57
 27593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27594                           ;incstack = 0
 27595  01A856  0E40               	movlw	64
 27596  01A858  013D               	movlb	61	; () banked
 27597  01A85A  6F15               	movwf	21,b	;volatile
 27598                           
 27599                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 27600  01A85C  0E03               	movlw	3
 27601  01A85E  6F16               	movwf	22,b	;volatile
 27602                           
 27603                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 27604  01A860  0E4F               	movlw	79
 27605  01A862  6F19               	movwf	25,b	;volatile
 27606                           
 27607                           ; BSR set to: 61
 27608                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 27609  01A864  6B1C               	clrf	28,b	;volatile
 27610                           
 27611                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 27612  01A866  0E83               	movlw	131
 27613  01A868  6F14               	movwf	20,b	;volatile
 27614                           
 27615                           ; BSR set to: 61
 27616                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27617  01A86A  0012               	return		;funcret
 27618  01A86C                     __end_of_SPI1_Initialize:
 27619                           	opt callstack 0
 27620                           
 27621 ;; *************** function _PWM8_Initialize *****************
 27622 ;; Defined at:
 27623 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 27624 ;; Parameters:    Size  Location     Type
 27625 ;;		None
 27626 ;; Auto vars:     Size  Location     Type
 27627 ;;		None
 27628 ;; Return value:  Size  Location     Type
 27629 ;;                  1  [STACK] void 
 27630 ;; Registers used:
 27631 ;;		wreg, status,2
 27632 ;; Tracked objects:
 27633 ;;		On entry : 0/3E
 27634 ;;		On exit  : 3F/3F
 27635 ;;		Unchanged: 0/0
 27636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27641 ;;Total ram usage:        0 bytes
 27642 ;; Hardware stack levels used:    1
 27643 ;; Hardware stack levels required when called:   15
 27644 ;; This function calls:
 27645 ;;		Nothing
 27646 ;; This function is called by:
 27647 ;;		_SYSTEM_Initialize
 27648 ;; This function uses a reentrant model
 27649 ;;
 27650                           
 27651                           	psect	text116
 27652  01A86C                     __ptext116:
 27653                           	opt callstack 0
 27654  01A86C                     _PWM8_Initialize:
 27655                           	opt callstack 14
 27656                           
 27657                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 27658                           
 27659                           ; BSR set to: 61
 27660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27661                           ;incstack = 0
 27662  01A86C  0E80               	movlw	128
 27663  01A86E  6E62               	movwf	98,c	;volatile
 27664                           
 27665                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 27666  01A870  6A61               	clrf	97,c	;volatile
 27667                           
 27668                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 27669  01A872  0E40               	movlw	64
 27670  01A874  6E60               	movwf	96,c	;volatile
 27671                           
 27672                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 27673  01A876  013F               	movlb	63	; () banked
 27674  01A878  515F               	movf	95,w,b	;volatile
 27675  01A87A  0B3F               	andlw	-193
 27676  01A87C  0940               	iorlw	64
 27677  01A87E  6F5F               	movwf	95,b	;volatile
 27678                           
 27679                           ; BSR set to: 63
 27680                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27681  01A880  0012               	return		;funcret
 27682  01A882                     __end_of_PWM8_Initialize:
 27683                           	opt callstack 0
 27684                           
 27685 ;; *************** function _PMD_Initialize *****************
 27686 ;; Defined at:
 27687 ;;		line 90 in file "mcc_generated_files/mcc.c"
 27688 ;; Parameters:    Size  Location     Type
 27689 ;;		None
 27690 ;; Auto vars:     Size  Location     Type
 27691 ;;		None
 27692 ;; Return value:  Size  Location     Type
 27693 ;;                  1  [STACK] void 
 27694 ;; Registers used:
 27695 ;;		None
 27696 ;; Tracked objects:
 27697 ;;		On entry : 3F/39
 27698 ;;		On exit  : 3F/39
 27699 ;;		Unchanged: 0/0
 27700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27705 ;;Total ram usage:        0 bytes
 27706 ;; Hardware stack levels used:    1
 27707 ;; Hardware stack levels required when called:   15
 27708 ;; This function calls:
 27709 ;;		Nothing
 27710 ;; This function is called by:
 27711 ;;		_SYSTEM_Initialize
 27712 ;; This function uses a reentrant model
 27713 ;;
 27714                           
 27715                           	psect	text117
 27716  01A898                     __ptext117:
 27717                           	opt callstack 0
 27718  01A898                     _PMD_Initialize:
 27719                           	opt callstack 14
 27720                           
 27721                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 27722                           
 27723                           ; BSR set to: 63
 27724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27725                           ;incstack = 0
 27726  01A898  0139               	movlb	57	; () banked
 27727  01A89A  6BC0               	clrf	192,b	;volatile
 27728                           
 27729                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 27730  01A89C  6BC1               	clrf	193,b	;volatile
 27731                           
 27732                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 27733  01A89E  6BC2               	clrf	194,b	;volatile
 27734                           
 27735                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 27736  01A8A0  6BC3               	clrf	195,b	;volatile
 27737                           
 27738                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 27739  01A8A2  6BC4               	clrf	196,b	;volatile
 27740                           
 27741                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 27742  01A8A4  6BC5               	clrf	197,b	;volatile
 27743                           
 27744                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 27745  01A8A6  6BC6               	clrf	198,b	;volatile
 27746                           
 27747                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 27748  01A8A8  6BC7               	clrf	199,b	;volatile
 27749                           
 27750                           ; BSR set to: 57
 27751                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 27752  01A8AA  0012               	return		;funcret
 27753  01A8AC                     __end_of_PMD_Initialize:
 27754                           	opt callstack 0
 27755                           
 27756 ;; *************** function _PIN_MANAGER_Initialize *****************
 27757 ;; Defined at:
 27758 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 27759 ;; Parameters:    Size  Location     Type
 27760 ;;		None
 27761 ;; Auto vars:     Size  Location     Type
 27762 ;;		None
 27763 ;; Return value:  Size  Location     Type
 27764 ;;                  1  [STACK] void 
 27765 ;; Registers used:
 27766 ;;		wreg, status,2
 27767 ;; Tracked objects:
 27768 ;;		On entry : 3F/39
 27769 ;;		On exit  : 3F/3A
 27770 ;;		Unchanged: 0/0
 27771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27776 ;;Total ram usage:        0 bytes
 27777 ;; Hardware stack levels used:    1
 27778 ;; Hardware stack levels required when called:   15
 27779 ;; This function calls:
 27780 ;;		Nothing
 27781 ;; This function is called by:
 27782 ;;		_SYSTEM_Initialize
 27783 ;; This function uses a reentrant model
 27784 ;;
 27785                           
 27786                           	psect	text118
 27787  0193C6                     __ptext118:
 27788                           	opt callstack 0
 27789  0193C6                     _PIN_MANAGER_Initialize:
 27790                           	opt callstack 14
 27791                           
 27792                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 27793                           
 27794                           ; BSR set to: 57
 27795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27796                           ;incstack = 0
 27797  0193C6  0E07               	movlw	7
 27798  0193C8  6EBE               	movwf	190,c	;volatile
 27799                           
 27800                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 27801  0193CA  0E80               	movlw	128
 27802  0193CC  6EBD               	movwf	189,c	;volatile
 27803                           
 27804                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 27805  0193CE  6ABA               	clrf	186,c	;volatile
 27806                           
 27807                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 27808  0193D0  6ABF               	clrf	191,c	;volatile
 27809                           
 27810                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 27811  0193D2  6ABB               	clrf	187,c	;volatile
 27812                           
 27813                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 27814  0193D4  0E07               	movlw	7
 27815  0193D6  6EBC               	movwf	188,c	;volatile
 27816                           
 27817                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 27818  0193D8  6AC6               	clrf	198,c	;volatile
 27819                           
 27820                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 27821  0193DA  0E0F               	movlw	15
 27822  0193DC  6EC7               	movwf	199,c	;volatile
 27823                           
 27824                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 27825  0193DE  68C2               	setf	194,c	;volatile
 27826                           
 27827                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 27828  0193E0  0EBF               	movlw	191
 27829  0193E2  6EC3               	movwf	195,c	;volatile
 27830                           
 27831                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 27832  0193E4  0E90               	movlw	144
 27833  0193E6  6EC4               	movwf	196,c	;volatile
 27834                           
 27835                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 27836  0193E8  0E0C               	movlw	12
 27837  0193EA  6EC5               	movwf	197,c	;volatile
 27838                           
 27839                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 27840  0193EC  013A               	movlb	58	; () banked
 27841  0193EE  6B70               	clrf	112,b	;volatile
 27842                           
 27843                           ; BSR set to: 58
 27844                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 27845  0193F0  6B60               	clrf	96,b	;volatile
 27846                           
 27847                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 27848  0193F2  0E3C               	movlw	60
 27849  0193F4  6F50               	movwf	80,b	;volatile
 27850                           
 27851                           ; BSR set to: 58
 27852                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 27853  0193F6  6B80               	clrf	128,b	;volatile
 27854                           
 27855                           ; BSR set to: 58
 27856                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 27857  0193F8  6B90               	clrf	144,b	;volatile
 27858                           
 27859                           ; BSR set to: 58
 27860                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 27861  0193FA  6940               	setf	64,b	;volatile
 27862                           
 27863                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 27864  0193FC  0E0C               	movlw	12
 27865  0193FE  6F71               	movwf	113,b	;volatile
 27866                           
 27867                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 27868  019400  0E0F               	movlw	15
 27869  019402  6F91               	movwf	145,b	;volatile
 27870                           
 27871                           ; BSR set to: 58
 27872                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 27873  019404  6B81               	clrf	129,b	;volatile
 27874                           
 27875                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 27876  019406  0E83               	movlw	131
 27877  019408  6F51               	movwf	81,b	;volatile
 27878                           
 27879                           ; BSR set to: 58
 27880                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 27881  01940A  6B41               	clrf	65,b	;volatile
 27882                           
 27883                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 27884  01940C  0E97               	movlw	151
 27885  01940E  6F61               	movwf	97,b	;volatile
 27886                           
 27887                           ; BSR set to: 58
 27888                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 27889  019410  6B82               	clrf	130,b	;volatile
 27890                           
 27891                           ; BSR set to: 58
 27892                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 27893  019412  6B92               	clrf	146,b	;volatile
 27894                           
 27895                           ; BSR set to: 58
 27896                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 27897  019414  6B42               	clrf	66,b	;volatile
 27898                           
 27899                           ; BSR set to: 58
 27900                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 27901  019416  6B52               	clrf	82,b	;volatile
 27902                           
 27903                           ; BSR set to: 58
 27904                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 27905  019418  6B62               	clrf	98,b	;volatile
 27906                           
 27907                           ; BSR set to: 58
 27908                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 27909  01941A  6B72               	clrf	114,b	;volatile
 27910                           
 27911                           ; BSR set to: 58
 27912                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 27913  01941C  6943               	setf	67,b	;volatile
 27914                           
 27915                           ; BSR set to: 58
 27916                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 27917  01941E  6953               	setf	83,b	;volatile
 27918                           
 27919                           ; BSR set to: 58
 27920                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 27921  019420  6963               	setf	99,b	;volatile
 27922                           
 27923                           ; BSR set to: 58
 27924                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 27925  019422  6973               	setf	115,b	;volatile
 27926                           
 27927                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 27928  019424  0E07               	movlw	7
 27929  019426  6F83               	movwf	131,b	;volatile
 27930                           
 27931                           ; BSR set to: 58
 27932                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 27933  019428  6993               	setf	147,b	;volatile
 27934                           
 27935                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 27936  01942A  0E0F               	movlw	15
 27937  01942C  6FE8               	movwf	232,b	;volatile
 27938                           
 27939                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 27940  01942E  0E13               	movlw	19
 27941  019430  6FDE               	movwf	222,b	;volatile
 27942                           
 27943                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 27944  019432  0E16               	movlw	22
 27945  019434  6F0E               	movwf	14,b	;volatile
 27946                           
 27947                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 27948  019436  0E1E               	movlw	30
 27949  019438  6F13               	movwf	19,b	;volatile
 27950                           
 27951                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 27952  01943A  0E08               	movlw	8
 27953  01943C  6FC0               	movwf	192,b	;volatile
 27954                           
 27955                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 27956  01943E  0E10               	movlw	16
 27957  019440  6F19               	movwf	25,b	;volatile
 27958                           
 27959                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 27960  019442  0E09               	movlw	9
 27961  019444  6FC1               	movwf	193,b	;volatile
 27962                           
 27963                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 27964  019446  0E1F               	movlw	31
 27965  019448  6F15               	movwf	21,b	;volatile
 27966                           
 27967                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 27968  01944A  0E13               	movlw	19
 27969  01944C  6F16               	movwf	22,b	;volatile
 27970                           
 27971                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 27972  01944E  0E17               	movlw	23
 27973  019450  6FE5               	movwf	229,b	;volatile
 27974                           
 27975                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 27976  019452  0E14               	movlw	20
 27977  019454  6FDF               	movwf	223,b	;volatile
 27978                           
 27979                           ; BSR set to: 58
 27980                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 27981  019456  0012               	return		;funcret
 27982  019458                     __end_of_PIN_MANAGER_Initialize:
 27983                           	opt callstack 0
 27984                           
 27985 ;; *************** function _OSCILLATOR_Initialize *****************
 27986 ;; Defined at:
 27987 ;;		line 72 in file "mcc_generated_files/mcc.c"
 27988 ;; Parameters:    Size  Location     Type
 27989 ;;		None
 27990 ;; Auto vars:     Size  Location     Type
 27991 ;;		None
 27992 ;; Return value:  Size  Location     Type
 27993 ;;                  1  [STACK] void 
 27994 ;; Registers used:
 27995 ;;		wreg, status,2
 27996 ;; Tracked objects:
 27997 ;;		On entry : 3F/3A
 27998 ;;		On exit  : 3F/39
 27999 ;;		Unchanged: 0/0
 28000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28005 ;;Total ram usage:        0 bytes
 28006 ;; Hardware stack levels used:    1
 28007 ;; Hardware stack levels required when called:   15
 28008 ;; This function calls:
 28009 ;;		Nothing
 28010 ;; This function is called by:
 28011 ;;		_SYSTEM_Initialize
 28012 ;; This function uses a reentrant model
 28013 ;;
 28014                           
 28015                           	psect	text119
 28016  01A882                     __ptext119:
 28017                           	opt callstack 0
 28018  01A882                     _OSCILLATOR_Initialize:
 28019                           	opt callstack 14
 28020                           
 28021                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 28022                           
 28023                           ; BSR set to: 58
 28024                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28025                           ;incstack = 0
 28026  01A882  0E20               	movlw	32
 28027  01A884  0139               	movlb	57	; () banked
 28028  01A886  6FD9               	movwf	217,b	;volatile
 28029                           
 28030                           ; BSR set to: 57
 28031                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 28032  01A888  6BDB               	clrf	219,b	;volatile
 28033                           
 28034                           ; BSR set to: 57
 28035                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 28036  01A88A  6BDD               	clrf	221,b	;volatile
 28037                           
 28038                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 28039  01A88C  0E02               	movlw	2
 28040  01A88E  6FDF               	movwf	223,b	;volatile
 28041                           
 28042                           ; BSR set to: 57
 28043                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 28044  01A890  6BDE               	clrf	222,b	;volatile
 28045  01A892                     l169:
 28046                           
 28047                           ; BSR set to: 57
 28048                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 28049  01A892  B1DC               	btfsc	220,0,b	;volatile
 28050  01A894  0012               	return	
 28051  01A896  D7FD               	goto	l169
 28052  01A898                     __end_of_OSCILLATOR_Initialize:
 28053                           	opt callstack 0
 28054                           
 28055 ;; *************** function _INTERRUPT_Initialize *****************
 28056 ;; Defined at:
 28057 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 28058 ;; Parameters:    Size  Location     Type
 28059 ;;		None
 28060 ;; Auto vars:     Size  Location     Type
 28061 ;;  state           1  [STACK] _Bool 
 28062 ;; Return value:  Size  Location     Type
 28063 ;;                  1  [STACK] void 
 28064 ;; Registers used:
 28065 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 28066 ;; Tracked objects:
 28067 ;;		On entry : 0/0
 28068 ;;		On exit  : 3F/39
 28069 ;;		Unchanged: 0/0
 28070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28075 ;;Total ram usage:        0 bytes
 28076 ;; Hardware stack levels used:    1
 28077 ;; Hardware stack levels required when called:   15
 28078 ;; This function calls:
 28079 ;;		Nothing
 28080 ;; This function is called by:
 28081 ;;		_SYSTEM_Initialize
 28082 ;; This function uses a reentrant model
 28083 ;;
 28084                           
 28085                           	psect	text120
 28086  019836                     __ptext120:
 28087                           	opt callstack 0
 28088  019836                     _INTERRUPT_Initialize:
 28089                           	opt callstack 0
 28090                           
 28091                           ; BSR set to: 57
 28092                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28093  019836  52E6               	movf	postinc1,f,c
 28094                           
 28095                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 28096                           
 28097                           ;incstack = 0
 28098  019838  8AD2               	bsf	210,5,c	;volatile
 28099                           
 28100                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 28101  01983A  AED2               	btfss	16338,7,c	;volatile
 28102  01983C  D003               	goto	u8760
 28103  01983E  6A0C               	clrf	(btemp+11)^0,c
 28104  019840  2A0C               	incf	(btemp+11)^0,f,c
 28105  019842  D001               	goto	u8778
 28106  019844                     u8760:
 28107  019844  6A0C               	clrf	(btemp+11)^0,c
 28108  019846                     u8778:
 28109                           
 28110                           ;stkvar	_state @ sp[(-1)+0]
 28111  019846  0EFF               	movlw	-1
 28112  019848  0060  F033  FFE3   	movff	btemp+11,plusw1
 28113                           
 28114                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 28115  01984E  9ED2               	bcf	16338,7,c	;volatile
 28116                           
 28117                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 28118  019850  0E55               	movlw	85
 28119  019852  6ED4               	movwf	212,c	;volatile
 28120                           
 28121                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 28122  019854  0EAA               	movlw	170
 28123  019856  6ED4               	movwf	212,c	;volatile
 28124                           
 28125                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 28126  019858  90D4               	bcf	212,0,c	;volatile
 28127                           
 28128                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 28129  01985A  0138               	movlb	56	; () banked
 28130  01985C  6B9F               	clrf	159,b	;volatile
 28131                           
 28132                           ; BSR set to: 56
 28133                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 28134  01985E  6B9E               	clrf	158,b	;volatile
 28135                           
 28136                           ; BSR set to: 56
 28137                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 28138  019860  0E08               	movlw	8
 28139  019862  6F9D               	movwf	157,b	;volatile
 28140                           
 28141                           ; BSR set to: 56
 28142                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 28143  019864  0E55               	movlw	85
 28144  019866  6ED4               	movwf	212,c	;volatile
 28145                           
 28146                           ; BSR set to: 56
 28147                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 28148  019868  0EAA               	movlw	170
 28149  01986A  6ED4               	movwf	212,c	;volatile
 28150                           
 28151                           ; BSR set to: 56
 28152                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 28153  01986C  80D4               	bsf	212,0,c	;volatile
 28154                           
 28155                           ; BSR set to: 56
 28156                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 28157                           ;stkvar	_state @ sp[(-1)+0]
 28158  01986E  0EFF               	movlw	-1
 28159  019870  B0E3               	btfsc	plusw1,0,c
 28160  019872  D002               	bra	u8785
 28161  019874  9ED2               	bcf	16338,7,c	;volatile
 28162  019876  D001               	bra	u8786
 28163  019878                     u8785:
 28164  019878  8ED2               	bsf	16338,7,c	;volatile
 28165  01987A                     u8786:
 28166                           
 28167                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 28168  01987A  0139               	movlb	57	; () banked
 28169  01987C  8782               	bsf	130,3,b	;volatile
 28170                           
 28171                           ; BSR set to: 57
 28172                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 28173  01987E  8382               	bsf	130,1,b	;volatile
 28174                           
 28175                           ; BSR set to: 57
 28176                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 28177  019880  8182               	bsf	130,0,b	;volatile
 28178                           
 28179                           ; BSR set to: 57
 28180                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 28181  019882  8582               	bsf	130,2,b	;volatile
 28182                           
 28183                           ; BSR set to: 57
 28184                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 28185  019884  8786               	bsf	134,3,b	;volatile
 28186                           
 28187                           ; BSR set to: 57
 28188                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 28189  019886  8586               	bsf	134,2,b	;volatile
 28190                           
 28191                           ; BSR set to: 57
 28192                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 28193  019888  8783               	bsf	131,3,b	;volatile
 28194                           
 28195                           ; BSR set to: 57
 28196                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 28197  01988A  8181               	bsf	129,0,b	;volatile
 28198                           
 28199                           ; BSR set to: 57
 28200                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 28201  01988C  9185               	bcf	133,0,b	;volatile
 28202                           
 28203                           ; BSR set to: 57
 28204                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 28205  01988E  8189               	bsf	137,0,b	;volatile
 28206                           
 28207                           ; BSR set to: 57
 28208                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 28209  019890  9D88               	bcf	136,6,b	;volatile
 28210                           
 28211                           ; BSR set to: 57
 28212                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 28213  019892  9D86               	bcf	134,6,b	;volatile
 28214                           
 28215                           ; BSR set to: 57
 28216                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 28217  019894  8581               	bsf	129,2,b	;volatile
 28218                           
 28219                           ; BSR set to: 57
 28220                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 28221  019896  8781               	bsf	129,3,b	;volatile
 28222                           
 28223                           ; BSR set to: 57
 28224                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 28225  019898  52E5               	movf	postdec1,f,c
 28226  01989A  0012               	return		;funcret
 28227  01989C                     __end_of_INTERRUPT_Initialize:
 28228                           	opt callstack 0
 28229                           
 28230 ;; *************** function _FVR_Initialize *****************
 28231 ;; Defined at:
 28232 ;;		line 58 in file "mcc_generated_files/fvr.c"
 28233 ;; Parameters:    Size  Location     Type
 28234 ;;		None
 28235 ;; Auto vars:     Size  Location     Type
 28236 ;;		None
 28237 ;; Return value:  Size  Location     Type
 28238 ;;                  1  [STACK] void 
 28239 ;; Registers used:
 28240 ;;		wreg, status,2
 28241 ;; Tracked objects:
 28242 ;;		On entry : 3F/39
 28243 ;;		On exit  : 3F/3E
 28244 ;;		Unchanged: 0/0
 28245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28250 ;;Total ram usage:        0 bytes
 28251 ;; Hardware stack levels used:    1
 28252 ;; Hardware stack levels required when called:   15
 28253 ;; This function calls:
 28254 ;;		Nothing
 28255 ;; This function is called by:
 28256 ;;		_SYSTEM_Initialize
 28257 ;; This function uses a reentrant model
 28258 ;;
 28259                           
 28260                           	psect	text121
 28261  01A982                     __ptext121:
 28262                           	opt callstack 0
 28263  01A982                     _FVR_Initialize:
 28264                           	opt callstack 14
 28265                           
 28266                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 28267                           
 28268                           ; BSR set to: 57
 28269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28270                           ;incstack = 0
 28271  01A982  0EAF               	movlw	175
 28272  01A984  013E               	movlb	62	; () banked
 28273  01A986  6FC1               	movwf	193,b	;volatile
 28274                           
 28275                           ; BSR set to: 62
 28276                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 28277  01A988  0012               	return		;funcret
 28278  01A98A                     __end_of_FVR_Initialize:
 28279                           	opt callstack 0
 28280                           
 28281 ;; *************** function _EXT_INT_Initialize *****************
 28282 ;; Defined at:
 28283 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 28284 ;; Parameters:    Size  Location     Type
 28285 ;;		None
 28286 ;; Auto vars:     Size  Location     Type
 28287 ;;		None
 28288 ;; Return value:  Size  Location     Type
 28289 ;;                  1  [STACK] void 
 28290 ;; Registers used:
 28291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28292 ;; Tracked objects:
 28293 ;;		On entry : 3F/39
 28294 ;;		On exit  : 3F/39
 28295 ;;		Unchanged: 0/0
 28296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28301 ;;Total ram usage:        0 bytes
 28302 ;; Hardware stack levels used:    1
 28303 ;; Hardware stack levels required when called:   16
 28304 ;; This function calls:
 28305 ;;		_INT0_SetInterruptHandler
 28306 ;;		_INT1_SetInterruptHandler
 28307 ;; This function is called by:
 28308 ;;		_SYSTEM_Initialize
 28309 ;; This function uses a reentrant model
 28310 ;;
 28311                           
 28312                           	psect	text122
 28313  01A102                     __ptext122:
 28314                           	opt callstack 0
 28315  01A102                     _EXT_INT_Initialize:
 28316                           	opt callstack 13
 28317                           
 28318                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 28319                           
 28320                           ; BSR set to: 62
 28321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28322                           ;incstack = 0
 28323  01A102  0139               	movlb	57	; () banked
 28324  01A104  91A1               	bcf	161,0,b	;volatile
 28325                           
 28326                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 28327  01A106  90D2               	bcf	210,0,c	;volatile
 28328                           
 28329                           ; BSR set to: 57
 28330                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 28331  01A108  0EB6               	movlw	low _INT0_DefaultInterruptHandler
 28332  01A10A  6EE6               	movwf	postinc1,c
 28333  01A10C  0EA9               	movlw	high _INT0_DefaultInterruptHandler
 28334  01A10E  6EE6               	movwf	postinc1,c
 28335  01A110  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 28336  01A112  6EE6               	movwf	postinc1,c
 28337  01A114  EC77  F0D2         	call	_INT0_SetInterruptHandler	;wreg free
 28338                           
 28339                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 28340  01A118  0139               	movlb	57	; () banked
 28341  01A11A  8191               	bsf	145,0,b	;volatile
 28342                           
 28343                           ; BSR set to: 57
 28344                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 28345  01A11C  91A5               	bcf	165,0,b	;volatile
 28346                           
 28347                           ; BSR set to: 57
 28348                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 28349  01A11E  92D2               	bcf	210,1,c	;volatile
 28350                           
 28351                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 28352  01A120  0EB2               	movlw	low _INT1_DefaultInterruptHandler
 28353  01A122  6EE6               	movwf	postinc1,c
 28354  01A124  0EA9               	movlw	high _INT1_DefaultInterruptHandler
 28355  01A126  6EE6               	movwf	postinc1,c
 28356  01A128  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 28357  01A12A  6EE6               	movwf	postinc1,c
 28358  01A12C  EC63  F0D2         	call	_INT1_SetInterruptHandler	;wreg free
 28359                           
 28360                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 28361  01A130  0139               	movlb	57	; () banked
 28362  01A132  8195               	bsf	149,0,b	;volatile
 28363                           
 28364                           ; BSR set to: 57
 28365                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28366  01A134  0012               	return		;funcret
 28367  01A136                     __end_of_EXT_INT_Initialize:
 28368                           	opt callstack 0
 28369                           
 28370 ;; *************** function _INT1_SetInterruptHandler *****************
 28371 ;; Defined at:
 28372 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 28373 ;; Parameters:    Size  Location     Type
 28374 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28375 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 28376 ;; Auto vars:     Size  Location     Type
 28377 ;;		None
 28378 ;; Return value:  Size  Location     Type
 28379 ;;                  1  [STACK] void 
 28380 ;; Registers used:
 28381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28382 ;; Tracked objects:
 28383 ;;		On entry : 3F/39
 28384 ;;		On exit  : 0/0
 28385 ;;		Unchanged: 0/0
 28386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28391 ;;Total ram usage:        0 bytes
 28392 ;; Hardware stack levels used:    1
 28393 ;; Hardware stack levels required when called:   15
 28394 ;; This function calls:
 28395 ;;		Nothing
 28396 ;; This function is called by:
 28397 ;;		_EXT_INT_Initialize
 28398 ;;		_start_switch_handler
 28399 ;; This function uses a reentrant model
 28400 ;;
 28401                           
 28402                           	psect	text123
 28403  01A4C6                     __ptext123:
 28404                           	opt callstack 0
 28405  01A4C6                     _INT1_SetInterruptHandler:
 28406                           	opt callstack 14
 28407                           
 28408                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 28409                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28410                           
 28411                           ; BSR set to: 57
 28412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28413                           ;incstack = 0
 28414  01A4C6  50E1               	movf	fsr1l,w,c
 28415  01A4C8  0FFD               	addlw	-3
 28416  01A4CA  6ED9               	movwf	fsr2l,c
 28417  01A4CC  50E2               	movf	fsr1h,w,c
 28418  01A4CE  6EDA               	movwf	fsr2h,c
 28419  01A4D0  0EFF               	movlw	255
 28420  01A4D2  22DA               	addwfc	fsr2h,f,c
 28421  01A4D4  006F FF78  F0A0    	movff	postinc2,_INT1_InterruptHandler
 28422  01A4DA  006F FF78  F0A1    	movff	postinc2,_INT1_InterruptHandler+1
 28423  01A4E0  006F FF74  F0A2    	movff	postdec2,_INT1_InterruptHandler+2
 28424                           
 28425                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28426  01A4E6  52E5               	movf	postdec1,f,c
 28427  01A4E8  52E5               	movf	postdec1,f,c
 28428  01A4EA  52E5               	movf	postdec1,f,c
 28429  01A4EC  0012               	return		;funcret
 28430  01A4EE                     __end_of_INT1_SetInterruptHandler:
 28431                           	opt callstack 0
 28432                           
 28433 ;; *************** function _INT0_SetInterruptHandler *****************
 28434 ;; Defined at:
 28435 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 28436 ;; Parameters:    Size  Location     Type
 28437 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28438 ;;		 -> INT0_DefaultInterruptHandler(1), 
 28439 ;; Auto vars:     Size  Location     Type
 28440 ;;		None
 28441 ;; Return value:  Size  Location     Type
 28442 ;;                  1  [STACK] void 
 28443 ;; Registers used:
 28444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28445 ;; Tracked objects:
 28446 ;;		On entry : 3F/39
 28447 ;;		On exit  : 0/0
 28448 ;;		Unchanged: 0/0
 28449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28454 ;;Total ram usage:        0 bytes
 28455 ;; Hardware stack levels used:    1
 28456 ;; Hardware stack levels required when called:   15
 28457 ;; This function calls:
 28458 ;;		Nothing
 28459 ;; This function is called by:
 28460 ;;		_EXT_INT_Initialize
 28461 ;; This function uses a reentrant model
 28462 ;;
 28463                           
 28464                           	psect	text124
 28465  01A4EE                     __ptext124:
 28466                           	opt callstack 0
 28467  01A4EE                     _INT0_SetInterruptHandler:
 28468                           	opt callstack 13
 28469                           
 28470                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 28471                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28472                           
 28473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28474                           ;incstack = 0
 28475  01A4EE  50E1               	movf	fsr1l,w,c
 28476  01A4F0  0FFD               	addlw	-3
 28477  01A4F2  6ED9               	movwf	fsr2l,c
 28478  01A4F4  50E2               	movf	fsr1h,w,c
 28479  01A4F6  6EDA               	movwf	fsr2h,c
 28480  01A4F8  0EFF               	movlw	255
 28481  01A4FA  22DA               	addwfc	fsr2h,f,c
 28482  01A4FC  006F FF78  F0A3    	movff	postinc2,_INT0_InterruptHandler
 28483  01A502  006F FF78  F0A4    	movff	postinc2,_INT0_InterruptHandler+1
 28484  01A508  006F FF74  F0A5    	movff	postdec2,_INT0_InterruptHandler+2
 28485                           
 28486                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28487  01A50E  52E5               	movf	postdec1,f,c
 28488  01A510  52E5               	movf	postdec1,f,c
 28489  01A512  52E5               	movf	postdec1,f,c
 28490  01A514  0012               	return		;funcret
 28491  01A516                     __end_of_INT0_SetInterruptHandler:
 28492                           	opt callstack 0
 28493                           
 28494 ;; *************** function _DMA2_Initialize *****************
 28495 ;; Defined at:
 28496 ;;		line 61 in file "mcc_generated_files/dma2.c"
 28497 ;; Parameters:    Size  Location     Type
 28498 ;;		None
 28499 ;; Auto vars:     Size  Location     Type
 28500 ;;		None
 28501 ;; Return value:  Size  Location     Type
 28502 ;;                  1  [STACK] void 
 28503 ;; Registers used:
 28504 ;;		wreg, status,2
 28505 ;; Tracked objects:
 28506 ;;		On entry : 3F/3D
 28507 ;;		On exit  : 3F/3B
 28508 ;;		Unchanged: 0/0
 28509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28514 ;;Total ram usage:        0 bytes
 28515 ;; Hardware stack levels used:    1
 28516 ;; Hardware stack levels required when called:   15
 28517 ;; This function calls:
 28518 ;;		Nothing
 28519 ;; This function is called by:
 28520 ;;		_SYSTEM_Initialize
 28521 ;; This function uses a reentrant model
 28522 ;;
 28523                           
 28524                           	psect	text125
 28525  019A7C                     __ptext125:
 28526                           	opt callstack 0
 28527  019A7C                     _DMA2_Initialize:
 28528                           	opt callstack 14
 28529                           
 28530                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 28531                           
 28532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28533                           ;incstack = 0
 28534  019A7C  0E00               	movlw	0
 28535  019A7E  013B               	movlb	59	; () banked
 28536  019A80  6FD9               	movwf	217,b	;volatile
 28537  019A82  0E10               	movlw	16
 28538  019A84  6FDA               	movwf	218,b	;volatile
 28539  019A86  0E00               	movlw	0
 28540  019A88  6FDB               	movwf	219,b	;volatile
 28541                           
 28542                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 28543  019A8A  0E3F               	movlw	63
 28544  019A8C  6FD1               	movwf	209,b	;volatile
 28545  019A8E  0EBB               	movlw	187
 28546  019A90  6FD0               	movwf	208,b	;volatile
 28547                           
 28548                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 28549  019A92  0E03               	movlw	3
 28550  019A94  6FDD               	movwf	221,b	;volatile
 28551                           
 28552                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 28553  019A96  0E00               	movlw	0
 28554  019A98  6FD8               	movwf	216,b	;volatile
 28555  019A9A  0E01               	movlw	1
 28556  019A9C  6FD7               	movwf	215,b	;volatile
 28557                           
 28558                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 28559  019A9E  0E00               	movlw	0
 28560  019AA0  6FCF               	movwf	207,b	;volatile
 28561  019AA2  0E01               	movlw	1
 28562  019AA4  6FCE               	movwf	206,b	;volatile
 28563                           
 28564                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 28565  019AA6  0E1C               	movlw	28
 28566  019AA8  6FDF               	movwf	223,b	;volatile
 28567                           
 28568                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 28569  019AAA  0E3D               	movlw	61
 28570  019AAC  6FDE               	movwf	222,b	;volatile
 28571                           
 28572                           ; BSR set to: 59
 28573                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 28574  019AAE  0139               	movlb	57	; () banked
 28575  019AB0  97A5               	bcf	165,3,b	;volatile
 28576                           
 28577                           ; BSR set to: 57
 28578                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 28579  019AB2  95A5               	bcf	165,2,b	;volatile
 28580                           
 28581                           ; BSR set to: 57
 28582                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 28583  019AB4  9BA5               	bcf	165,5,b	;volatile
 28584                           
 28585                           ; BSR set to: 57
 28586                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 28587  019AB6  99A5               	bcf	165,4,b	;volatile
 28588                           
 28589                           ; BSR set to: 57
 28590                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 28591  019AB8  9795               	bcf	149,3,b	;volatile
 28592                           
 28593                           ; BSR set to: 57
 28594                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 28595  019ABA  9595               	bcf	149,2,b	;volatile
 28596                           
 28597                           ; BSR set to: 57
 28598                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 28599  019ABC  9B95               	bcf	149,5,b	;volatile
 28600                           
 28601                           ; BSR set to: 57
 28602                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 28603  019ABE  9995               	bcf	149,4,b	;volatile
 28604  019AC0  9ED2               	bcf	16338,7,c	;# 
 28605  019AC2  0139               	banksel	14831	;# 
 28606  019AC4  0E55               	movlw	85	;# 
 28607  019AC6  6FEF               	movwf	14831,b	;# 
 28608  019AC8  0EAA               	movlw	170	;# 
 28609  019ACA  6FEF               	movwf	14831,b	;# 
 28610  019ACC  81EF               	bsf	14831,0,b	;# 
 28611  019ACE  8ED2               	bsf	16338,7,c	;# 
 28612                           
 28613                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 28614  019AD0  013B               	movlb	59	; () banked
 28615  019AD2  6BDC               	clrf	220,b	;volatile
 28616                           
 28617                           ; BSR set to: 59
 28618                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28619  019AD4  0012               	return		;funcret
 28620  019AD6                     __end_of_DMA2_Initialize:
 28621                           	opt callstack 0
 28622                           
 28623 ;; *************** function _DMA1_Initialize *****************
 28624 ;; Defined at:
 28625 ;;		line 86 in file "mcc_generated_files/dma1.c"
 28626 ;; Parameters:    Size  Location     Type
 28627 ;;		None
 28628 ;; Auto vars:     Size  Location     Type
 28629 ;;		None
 28630 ;; Return value:  Size  Location     Type
 28631 ;;                  1  [STACK] void 
 28632 ;; Registers used:
 28633 ;;		wreg, status,2
 28634 ;; Tracked objects:
 28635 ;;		On entry : 3F/3B
 28636 ;;		On exit  : 3F/3B
 28637 ;;		Unchanged: 0/0
 28638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28643 ;;Total ram usage:        0 bytes
 28644 ;; Hardware stack levels used:    1
 28645 ;; Hardware stack levels required when called:   15
 28646 ;; This function calls:
 28647 ;;		Nothing
 28648 ;; This function is called by:
 28649 ;;		_SYSTEM_Initialize
 28650 ;; This function uses a reentrant model
 28651 ;;
 28652                           
 28653                           	psect	text126
 28654  0196F6                     __ptext126:
 28655                           	opt callstack 0
 28656  0196F6                     _DMA1_Initialize:
 28657                           	opt callstack 14
 28658                           
 28659                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 28660                           
 28661                           ; BSR set to: 59
 28662                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28663                           ;incstack = 0
 28664  0196F6  0E00               	movlw	0
 28665  0196F8  013B               	movlb	59	; () banked
 28666  0196FA  6FF9               	movwf	249,b	;volatile
 28667  0196FC  0E10               	movlw	16
 28668  0196FE  6FFA               	movwf	250,b	;volatile
 28669  019700  0E00               	movlw	0
 28670  019702  6FFB               	movwf	251,b	;volatile
 28671                           
 28672                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 28673  019704  0E3D               	movlw	61
 28674  019706  6FF1               	movwf	241,b	;volatile
 28675  019708  0E11               	movlw	17
 28676  01970A  6FF0               	movwf	240,b	;volatile
 28677                           
 28678                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 28679  01970C  0E03               	movlw	3
 28680  01970E  6FFD               	movwf	253,b	;volatile
 28681                           
 28682                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 28683  019710  0E00               	movlw	0
 28684  019712  6FF8               	movwf	248,b	;volatile
 28685  019714  0E01               	movlw	1
 28686  019716  6FF7               	movwf	247,b	;volatile
 28687                           
 28688                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 28689  019718  0E00               	movlw	0
 28690  01971A  6FEF               	movwf	239,b	;volatile
 28691  01971C  0E01               	movlw	1
 28692  01971E  6FEE               	movwf	238,b	;volatile
 28693                           
 28694                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 28695  019720  0E15               	movlw	21
 28696  019722  6FFF               	movwf	255,b	;volatile
 28697                           
 28698                           ; BSR set to: 59
 28699                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 28700  019724  6BFE               	clrf	254,b	;volatile
 28701                           
 28702                           ; BSR set to: 59
 28703                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 28704  019726  0139               	movlb	57	; () banked
 28705  019728  93A2               	bcf	162,1,b	;volatile
 28706                           
 28707                           ; BSR set to: 57
 28708                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 28709  01972A  91A2               	bcf	162,0,b	;volatile
 28710                           
 28711                           ; BSR set to: 57
 28712                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 28713  01972C  97A2               	bcf	162,3,b	;volatile
 28714                           
 28715                           ; BSR set to: 57
 28716                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 28717  01972E  95A2               	bcf	162,2,b	;volatile
 28718                           
 28719                           ; BSR set to: 57
 28720                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 28721  019730  8392               	bsf	146,1,b	;volatile
 28722                           
 28723                           ; BSR set to: 57
 28724                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 28725  019732  8192               	bsf	146,0,b	;volatile
 28726                           
 28727                           ; BSR set to: 57
 28728                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 28729  019734  8792               	bsf	146,3,b	;volatile
 28730                           
 28731                           ; BSR set to: 57
 28732                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 28733  019736  8592               	bsf	146,2,b	;volatile
 28734                           
 28735                           ; BSR set to: 57
 28736                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 28737  019738  6BF1               	clrf	241,b	;volatile
 28738                           
 28739                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 28740  01973A  0E01               	movlw	1
 28741  01973C  6FF2               	movwf	242,b	;volatile
 28742                           
 28743                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 28744  01973E  0E04               	movlw	4
 28745  019740  6FF3               	movwf	243,b	;volatile
 28746                           
 28747                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 28748  019742  0E02               	movlw	2
 28749  019744  6FF4               	movwf	244,b	;volatile
 28750                           
 28751                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 28752  019746  0E03               	movlw	3
 28753  019748  6FF7               	movwf	247,b	;volatile
 28754  01974A  9ED2               	bcf	16338,7,c	;# 
 28755  01974C  0139               	banksel	14831	;# 
 28756  01974E  0E55               	movlw	85	;# 
 28757  019750  6FEF               	movwf	14831,b	;# 
 28758  019752  0EAA               	movlw	170	;# 
 28759  019754  6FEF               	movwf	14831,b	;# 
 28760  019756  81EF               	bsf	14831,0,b	;# 
 28761  019758  8ED2               	bsf	16338,7,c	;# 
 28762                           
 28763                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 28764  01975A  013B               	movlb	59	; () banked
 28765  01975C  6BFC               	clrf	252,b	;volatile
 28766                           
 28767                           ; BSR set to: 59
 28768                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28769  01975E  0012               	return		;funcret
 28770  019760                     __end_of_DMA1_Initialize:
 28771                           	opt callstack 0
 28772                           
 28773 ;; *************** function _CLKREF_Initialize *****************
 28774 ;; Defined at:
 28775 ;;		line 58 in file "mcc_generated_files/clkref.c"
 28776 ;; Parameters:    Size  Location     Type
 28777 ;;		None
 28778 ;; Auto vars:     Size  Location     Type
 28779 ;;		None
 28780 ;; Return value:  Size  Location     Type
 28781 ;;                  1  [STACK] void 
 28782 ;; Registers used:
 28783 ;;		wreg, status,2
 28784 ;; Tracked objects:
 28785 ;;		On entry : 3F/3B
 28786 ;;		On exit  : 3F/3C
 28787 ;;		Unchanged: 0/0
 28788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28793 ;;Total ram usage:        0 bytes
 28794 ;; Hardware stack levels used:    1
 28795 ;; Hardware stack levels required when called:   15
 28796 ;; This function calls:
 28797 ;;		Nothing
 28798 ;; This function is called by:
 28799 ;;		_SYSTEM_Initialize
 28800 ;; This function uses a reentrant model
 28801 ;;
 28802                           
 28803                           	psect	text127
 28804  01A92A                     __ptext127:
 28805                           	opt callstack 0
 28806  01A92A                     _CLKREF_Initialize:
 28807                           	opt callstack 14
 28808                           
 28809                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 28810                           
 28811                           ; BSR set to: 59
 28812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28813                           ;incstack = 0
 28814  01A92A  013C               	movlb	60	; () banked
 28815  01A92C  6BE6               	clrf	230,b	;volatile
 28816                           
 28817                           ; BSR set to: 60
 28818                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 28819  01A92E  0E94               	movlw	148
 28820  01A930  6FE5               	movwf	229,b	;volatile
 28821                           
 28822                           ; BSR set to: 60
 28823                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28824  01A932  0012               	return		;funcret
 28825  01A934                     __end_of_CLKREF_Initialize:
 28826                           	opt callstack 0
 28827                           
 28828 ;; *************** function _ADCC_Initialize *****************
 28829 ;; Defined at:
 28830 ;;		line 65 in file "mcc_generated_files/adcc.c"
 28831 ;; Parameters:    Size  Location     Type
 28832 ;;		None
 28833 ;; Auto vars:     Size  Location     Type
 28834 ;;		None
 28835 ;; Return value:  Size  Location     Type
 28836 ;;                  1  [STACK] void 
 28837 ;; Registers used:
 28838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28839 ;; Tracked objects:
 28840 ;;		On entry : 3F/3E
 28841 ;;		On exit  : 0/0
 28842 ;;		Unchanged: 0/0
 28843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28848 ;;Total ram usage:        0 bytes
 28849 ;; Hardware stack levels used:    1
 28850 ;; Hardware stack levels required when called:   16
 28851 ;; This function calls:
 28852 ;;		_ADCC_SetADIInterruptHandler
 28853 ;;		_ADCC_SetADTIInterruptHandler
 28854 ;; This function is called by:
 28855 ;;		_SYSTEM_Initialize
 28856 ;; This function uses a reentrant model
 28857 ;;
 28858                           
 28859                           	psect	text128
 28860  019760                     __ptext128:
 28861                           	opt callstack 0
 28862  019760                     _ADCC_Initialize:
 28863                           	opt callstack 13
 28864                           
 28865                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 28866                           
 28867                           ; BSR set to: 60
 28868                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28869                           ;incstack = 0
 28870  019760  013E               	movlb	62	; () banked
 28871  019762  6BDE               	clrf	222,b	;volatile
 28872                           
 28873                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 28874  019764  6BDF               	clrf	223,b	;volatile
 28875                           
 28876                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 28877  019766  6BE0               	clrf	224,b	;volatile
 28878                           
 28879                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 28880  019768  6BE1               	clrf	225,b	;volatile
 28881                           
 28882                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 28883  01976A  6BE4               	clrf	228,b	;volatile
 28884                           
 28885                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 28886  01976C  6BE5               	clrf	229,b	;volatile
 28887                           
 28888                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 28889  01976E  6BEA               	clrf	234,b	;volatile
 28890                           
 28891                           ; BSR set to: 62
 28892                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 28893  019770  0E40               	movlw	64
 28894  019772  6FEC               	movwf	236,b	;volatile
 28895                           
 28896                           ; BSR set to: 62
 28897                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 28898  019774  6BF1               	clrf	241,b	;volatile
 28899                           
 28900                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 28901  019776  0E20               	movlw	32
 28902  019778  6FF3               	movwf	243,b	;volatile
 28903                           
 28904                           ; BSR set to: 62
 28905                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 28906  01977A  6BF4               	clrf	244,b	;volatile
 28907                           
 28908                           ; BSR set to: 62
 28909                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 28910  01977C  6BF5               	clrf	245,b	;volatile
 28911                           
 28912                           ; BSR set to: 62
 28913                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 28914  01977E  6BF6               	clrf	246,b	;volatile
 28915                           
 28916                           ; BSR set to: 62
 28917                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 28918  019780  6BF7               	clrf	247,b	;volatile
 28919                           
 28920                           ; BSR set to: 62
 28921                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 28922  019782  6BF9               	clrf	249,b	;volatile
 28923                           
 28924                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 28925  019784  0E5B               	movlw	91
 28926  019786  6FFA               	movwf	250,b	;volatile
 28927                           
 28928                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 28929  019788  0E27               	movlw	39
 28930  01978A  6FFB               	movwf	251,b	;volatile
 28931                           
 28932                           ; BSR set to: 62
 28933                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 28934  01978C  6BFC               	clrf	252,b	;volatile
 28935                           
 28936                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 28937  01978E  0E02               	movlw	2
 28938  019790  6FFD               	movwf	253,b	;volatile
 28939                           
 28940                           ; BSR set to: 62
 28941                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 28942  019792  6BFE               	clrf	254,b	;volatile
 28943                           
 28944                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 28945  019794  0E07               	movlw	7
 28946  019796  6FFF               	movwf	255,b	;volatile
 28947                           
 28948                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 28949  019798  0E84               	movlw	132
 28950  01979A  6FF8               	movwf	248,b	;volatile
 28951                           
 28952                           ; BSR set to: 62
 28953                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 28954  01979C  0139               	movlb	57	; () banked
 28955  01979E  95A1               	bcf	161,2,b	;volatile
 28956                           
 28957                           ; BSR set to: 57
 28958                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 28959  0197A0  8591               	bsf	145,2,b	;volatile
 28960                           
 28961                           ; BSR set to: 57
 28962                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 28963  0197A2  0EB8               	movlw	low _ADCC_DefaultInterruptHandler
 28964  0197A4  6EE6               	movwf	postinc1,c
 28965  0197A6  0EA9               	movlw	high _ADCC_DefaultInterruptHandler
 28966  0197A8  6EE6               	movwf	postinc1,c
 28967  0197AA  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 28968  0197AC  6EE6               	movwf	postinc1,c
 28969  0197AE  EC9F  F0D2         	call	_ADCC_SetADIInterruptHandler	;wreg free
 28970                           
 28971                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 28972  0197B2  0139               	movlb	57	; () banked
 28973  0197B4  97A1               	bcf	161,3,b	;volatile
 28974                           
 28975                           ; BSR set to: 57
 28976                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 28977  0197B6  8791               	bsf	145,3,b	;volatile
 28978                           
 28979                           ; BSR set to: 57
 28980                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 28981  0197B8  0EB8               	movlw	low _ADCC_DefaultInterruptHandler
 28982  0197BA  6EE6               	movwf	postinc1,c
 28983  0197BC  0EA9               	movlw	high _ADCC_DefaultInterruptHandler
 28984  0197BE  6EE6               	movwf	postinc1,c
 28985  0197C0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 28986  0197C2  6EE6               	movwf	postinc1,c
 28987  0197C4  EC8B  F0D2         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 28988                           
 28989                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28990  0197C8  0012               	return		;funcret
 28991  0197CA                     __end_of_ADCC_Initialize:
 28992                           	opt callstack 0
 28993                           
 28994 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 28995 ;; Defined at:
 28996 ;;		line 336 in file "mcc_generated_files/adcc.c"
 28997 ;; Parameters:    Size  Location     Type
 28998 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28999 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 29000 ;; Auto vars:     Size  Location     Type
 29001 ;;		None
 29002 ;; Return value:  Size  Location     Type
 29003 ;;                  1  [STACK] void 
 29004 ;; Registers used:
 29005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29006 ;; Tracked objects:
 29007 ;;		On entry : 0/0
 29008 ;;		On exit  : 0/0
 29009 ;;		Unchanged: 0/0
 29010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29015 ;;Total ram usage:        0 bytes
 29016 ;; Hardware stack levels used:    1
 29017 ;; Hardware stack levels required when called:   15
 29018 ;; This function calls:
 29019 ;;		Nothing
 29020 ;; This function is called by:
 29021 ;;		_ADCC_Initialize
 29022 ;;		_start_adc_scan
 29023 ;; This function uses a reentrant model
 29024 ;;
 29025                           
 29026                           	psect	text129
 29027  01A516                     __ptext129:
 29028                           	opt callstack 0
 29029  01A516                     _ADCC_SetADTIInterruptHandler:
 29030                           	opt callstack 14
 29031                           
 29032                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 29033                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29034                           
 29035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29036                           ;incstack = 0
 29037  01A516  50E1               	movf	fsr1l,w,c
 29038  01A518  0FFD               	addlw	-3
 29039  01A51A  6ED9               	movwf	fsr2l,c
 29040  01A51C  50E2               	movf	fsr1h,w,c
 29041  01A51E  6EDA               	movwf	fsr2h,c
 29042  01A520  0EFF               	movlw	255
 29043  01A522  22DA               	addwfc	fsr2h,f,c
 29044  01A524  006F FF78  F091    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 29045  01A52A  006F FF78  F092    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 29046  01A530  006F FF74  F093    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 29047                           
 29048                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 29049  01A536  52E5               	movf	postdec1,f,c
 29050  01A538  52E5               	movf	postdec1,f,c
 29051  01A53A  52E5               	movf	postdec1,f,c
 29052  01A53C  0012               	return		;funcret
 29053  01A53E                     __end_of_ADCC_SetADTIInterruptHandler:
 29054                           	opt callstack 0
 29055                           
 29056 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 29057 ;; Defined at:
 29058 ;;		line 323 in file "mcc_generated_files/adcc.c"
 29059 ;; Parameters:    Size  Location     Type
 29060 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29061 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 29062 ;; Auto vars:     Size  Location     Type
 29063 ;;		None
 29064 ;; Return value:  Size  Location     Type
 29065 ;;                  1  [STACK] void 
 29066 ;; Registers used:
 29067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29068 ;; Tracked objects:
 29069 ;;		On entry : 6/0
 29070 ;;		On exit  : 0/0
 29071 ;;		Unchanged: 0/0
 29072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29077 ;;Total ram usage:        0 bytes
 29078 ;; Hardware stack levels used:    1
 29079 ;; Hardware stack levels required when called:   15
 29080 ;; This function calls:
 29081 ;;		Nothing
 29082 ;; This function is called by:
 29083 ;;		_ADCC_Initialize
 29084 ;;		_start_adc_scan
 29085 ;; This function uses a reentrant model
 29086 ;;
 29087                           
 29088                           	psect	text130
 29089  01A53E                     __ptext130:
 29090                           	opt callstack 0
 29091  01A53E                     _ADCC_SetADIInterruptHandler:
 29092                           	opt callstack 14
 29093                           
 29094                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 29095                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29096                           
 29097                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29098                           ;incstack = 0
 29099  01A53E  50E1               	movf	fsr1l,w,c
 29100  01A540  0FFD               	addlw	-3
 29101  01A542  6ED9               	movwf	fsr2l,c
 29102  01A544  50E2               	movf	fsr1h,w,c
 29103  01A546  6EDA               	movwf	fsr2h,c
 29104  01A548  0EFF               	movlw	255
 29105  01A54A  22DA               	addwfc	fsr2h,f,c
 29106  01A54C  006F FF78  F094    	movff	postinc2,_ADCC_ADI_InterruptHandler
 29107  01A552  006F FF78  F095    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 29108  01A558  006F FF74  F096    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 29109                           
 29110                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29111  01A55E  52E5               	movf	postdec1,f,c
 29112  01A560  52E5               	movf	postdec1,f,c
 29113  01A562  52E5               	movf	postdec1,f,c
 29114  01A564  0012               	return		;funcret
 29115  01A566                     __end_of_ADCC_SetADIInterruptHandler:
 29116                           	opt callstack 0
 29117                           
 29118 ;; *************** function _INT1_ISR *****************
 29119 ;; Defined at:
 29120 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 29121 ;; Parameters:    Size  Location     Type
 29122 ;;		None
 29123 ;; Auto vars:     Size  Location     Type
 29124 ;;		None
 29125 ;; Return value:  Size  Location     Type
 29126 ;;                  1    wreg      void 
 29127 ;; Registers used:
 29128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 29129 ;; Tracked objects:
 29130 ;;		On entry : 0/0
 29131 ;;		On exit  : 0/0
 29132 ;;		Unchanged: 0/0
 29133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29136 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29137 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29138 ;;Total ram usage:        4 bytes
 29139 ;; Hardware stack levels used:    1
 29140 ;; Hardware stack levels required when called:    5
 29141 ;; This function calls:
 29142 ;;		_INT1_CallBack
 29143 ;; This function is called by:
 29144 ;;		Interrupt level 1
 29145 ;; This function uses a non-reentrant model
 29146 ;;
 29147                           
 29148                           	psect	text131
 29149  019FEC                     __ptext131:
 29150                           	opt callstack 0
 29151  019FEC                     _INT1_ISR:
 29152                           	opt callstack 12
 29153                           
 29154                           ;incstack = 0
 29155  019FEC  006F FF60  F03E    	movff	status,??_INT1_ISR
 29156  019FF2  0060  F004  F03F   	movff	btemp,??_INT1_ISR+1
 29157  019FF8  0060  F02C  F040   	movff	btemp+10,??_INT1_ISR+2
 29158  019FFE  0060  F030  F041   	movff	btemp+11,??_INT1_ISR+3
 29159  01A004  EE16  F061         	lfsr	1,___intlo_sp
 29160                           
 29161                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 29162  01A008  0139               	movlb	57	; () banked
 29163  01A00A  91A5               	bcf	165,0,b	;volatile
 29164                           
 29165                           ; BSR set to: 57
 29166                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 29167  01A00C  EC14  F0D3         	call	_INT1_CallBack	;wreg free
 29168  01A010  0060  F104  F00C   	movff	??_INT1_ISR+3,btemp+11
 29169  01A016  0060  F100  F00B   	movff	??_INT1_ISR+2,btemp+10
 29170  01A01C  0060  F0FC  F001   	movff	??_INT1_ISR+1,btemp
 29171  01A022  0060  F0FB  FFD8   	movff	??_INT1_ISR,status
 29172  01A028  0011               	retfie		f
 29173  01A02A                     __end_of_INT1_ISR:
 29174                           	opt callstack 0
 29175                           
 29176 ;; *************** function _INT1_CallBack *****************
 29177 ;; Defined at:
 29178 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 29179 ;; Parameters:    Size  Location     Type
 29180 ;;		None
 29181 ;; Auto vars:     Size  Location     Type
 29182 ;;		None
 29183 ;; Return value:  Size  Location     Type
 29184 ;;                  1  [STACK] void 
 29185 ;; Registers used:
 29186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 29187 ;; Tracked objects:
 29188 ;;		On entry : 3F/39
 29189 ;;		On exit  : 0/0
 29190 ;;		Unchanged: 0/0
 29191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29196 ;;Total ram usage:        0 bytes
 29197 ;; Hardware stack levels used:    1
 29198 ;; Hardware stack levels required when called:    4
 29199 ;; This function calls:
 29200 ;;		Absolute function
 29201 ;;		_INT1_DefaultInterruptHandler
 29202 ;;		_switch_handler
 29203 ;; This function is called by:
 29204 ;;		_INT1_ISR
 29205 ;; This function uses a reentrant model
 29206 ;;
 29207                           
 29208                           	psect	text132
 29209  01A628                     __ptext132:
 29210                           	opt callstack 0
 29211  01A628                     _INT1_CallBack:
 29212                           	opt callstack 12
 29213                           
 29214                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 29215                           
 29216                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29217                           ;incstack = 0
 29218  01A628  0100               	movlb	0	; () banked
 29219  01A62A  51A0               	movf	_INT1_InterruptHandler& (0+255),w,b
 29220  01A62C  11A1               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 29221  01A62E  11A2               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 29222  01A630  B4D8               	btfsc	status,2,c
 29223  01A632  0012               	return	
 29224                           
 29225                           ; BSR set to: 0
 29226                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 29227  01A634  D801               	call	u1176_28
 29228  01A636  0012               	return	
 29229  01A638                     u1176_28:
 29230  01A638  0005               	push	
 29231  01A63A  6EFA               	movwf	pclath,c
 29232  01A63C  51A0               	movf	_INT1_InterruptHandler& (0+255),w,b
 29233  01A63E  6EFD               	movwf	tosl,c
 29234  01A640  51A1               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 29235  01A642  6EFE               	movwf	tosh,c
 29236  01A644  51A2               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 29237  01A646  6EFF               	movwf	tosu,c
 29238  01A648  50FA               	movf	pclath,w,c
 29239  01A64A  0012               	return		;indir
 29240  01A64C                     __end_of_INT1_CallBack:
 29241                           	opt callstack 0
 29242                           
 29243 ;; *************** function _INT1_DefaultInterruptHandler *****************
 29244 ;; Defined at:
 29245 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 29246 ;; Parameters:    Size  Location     Type
 29247 ;;		None
 29248 ;; Auto vars:     Size  Location     Type
 29249 ;;		None
 29250 ;; Return value:  Size  Location     Type
 29251 ;;                  1  [STACK] void 
 29252 ;; Registers used:
 29253 ;;		None
 29254 ;; Tracked objects:
 29255 ;;		On entry : 3F/0
 29256 ;;		On exit  : 0/0
 29257 ;;		Unchanged: 0/0
 29258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29263 ;;Total ram usage:        0 bytes
 29264 ;; Hardware stack levels used:    1
 29265 ;; Hardware stack levels required when called:    3
 29266 ;; This function calls:
 29267 ;;		Nothing
 29268 ;; This function is called by:
 29269 ;;		_EXT_INT_Initialize
 29270 ;;		_INT1_CallBack
 29271 ;; This function uses a reentrant model
 29272 ;;
 29273                           
 29274                           	psect	text133
 29275  01A9B2                     __ptext133:
 29276                           	opt callstack 0
 29277  01A9B2                     _INT1_DefaultInterruptHandler:
 29278                           	opt callstack 12
 29279                           
 29280                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29281                           
 29282                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29283                           ;incstack = 0
 29284  01A9B2  0012               	return		;funcret
 29285  01A9B4                     __end_of_INT1_DefaultInterruptHandler:
 29286                           	opt callstack 0
 29287                           
 29288 ;; *************** function _switch_handler *****************
 29289 ;; Defined at:
 29290 ;;		line 58 in file "dio.c"
 29291 ;; Parameters:    Size  Location     Type
 29292 ;;		None
 29293 ;; Auto vars:     Size  Location     Type
 29294 ;;  i               1  [STACK] unsigned char 
 29295 ;;  sw_value        1  [STACK] unsigned char 
 29296 ;; Return value:  Size  Location     Type
 29297 ;;                  1  [STACK] void 
 29298 ;; Registers used:
 29299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 29300 ;; Tracked objects:
 29301 ;;		On entry : 3F/0
 29302 ;;		On exit  : 0/0
 29303 ;;		Unchanged: 0/0
 29304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29309 ;;Total ram usage:        0 bytes
 29310 ;; Hardware stack levels used:    1
 29311 ;; Hardware stack levels required when called:    3
 29312 ;; This function calls:
 29313 ;;		Nothing
 29314 ;; This function is called by:
 29315 ;;		_start_switch_handler
 29316 ;;		_INT1_CallBack
 29317 ;; This function uses a reentrant model
 29318 ;;
 29319                           
 29320                           	psect	text134
 29321  018090                     __ptext134:
 29322                           	opt callstack 0
 29323  018090                     _switch_handler:
 29324                           	opt callstack 0
 29325                           
 29326                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29327  018090  52E6               	movf	postinc1,f,c
 29328  018092  52E6               	movf	postinc1,f,c
 29329                           
 29330                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 29331                           ;stkvar	_i @ sp[(-2)+0]
 29332                           
 29333                           ;incstack = 0
 29334  018094  0EFE               	movlw	-2
 29335  018096  6AE3               	clrf	plusw1,c
 29336  018098  9EBD               	bcf	189,7,c	;volatile
 29337                           
 29338                           ;dio.c: 72:  __nop();
 29339  01809A  F000               	nop	
 29340                           
 29341                           ;dio.c: 73:  __nop();
 29342  01809C  F000               	nop	
 29343                           
 29344                           ;dio.c: 74:  __nop();
 29345  01809E  F000               	nop	
 29346  0180A0  D019               	goto	l11886
 29347  0180A2                     l11874:
 29348                           
 29349                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 29350  0180A2  A6CF               	btfss	207,3,c	;volatile
 29351  0180A4  D011               	goto	u1156_20
 29352  0180A6  D00D               	goto	u1156_21
 29353  0180A8                     u1153_28:
 29354                           
 29355                           ;stkvar	_sw_value @ sp[(-2)+1]
 29356  0180A8  0EFF               	movlw	-1
 29357  0180AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 29358                           
 29359                           ;dio.c: 80:    break;
 29360  0180B0  D027               	goto	l11888
 29361  0180B2                     l11876:
 29362                           
 29363                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 29364  0180B2  A4CF               	btfss	207,2,c	;volatile
 29365  0180B4  D009               	goto	u1156_20
 29366  0180B6  D005               	goto	u1156_21
 29367  0180B8                     l11878:
 29368                           
 29369                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 29370  0180B8  A2CF               	btfss	207,1,c	;volatile
 29371  0180BA  D006               	goto	u1156_20
 29372  0180BC  D002               	goto	u1156_21
 29373  0180BE                     l11880:
 29374                           
 29375                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 29376  0180BE  A0CF               	btfss	207,0,c	;volatile
 29377  0180C0  D003               	goto	u1156_20
 29378  0180C2                     u1156_21:
 29379  0180C2  6A0C               	clrf	(btemp+11)^0,c
 29380  0180C4  2A0C               	incf	(btemp+11)^0,f,c
 29381  0180C6  D7F0               	goto	u1153_28
 29382  0180C8                     u1156_20:
 29383  0180C8  6A0C               	clrf	(btemp+11)^0,c
 29384  0180CA  D7EE               	goto	u1153_28
 29385  0180CC                     l11882:
 29386                           
 29387                           ;dio.c: 91:    sw_value = 1;
 29388                           ;stkvar	_sw_value @ sp[(-2)+1]
 29389  0180CC  0EFF               	movlw	-1
 29390  0180CE  6AE3               	clrf	plusw1,c
 29391  0180D0  2AE3               	incf	plusw1,f,c
 29392                           
 29393                           ;dio.c: 92:    break;
 29394  0180D2  D016               	goto	l11888
 29395  0180D4                     l11886:
 29396                           
 29397                           ;stkvar	_i @ sp[(-2)+0]
 29398  0180D4  0EFE               	movlw	-2
 29399  0180D6  50E3               	movf	plusw1,w,c
 29400  0180D8  6E0B               	movwf	(btemp+10)^0,c
 29401  0180DA  6A0C               	clrf	(btemp+11)^0,c
 29402                           
 29403                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29404                           ; Switch size 1, requested type "simple"
 29405                           ; Number of cases is 1, Range of values is 0 to 0
 29406                           ; switch strategies available:
 29407                           ; Name         Instructions Cycles
 29408                           ; simple_byte            4     3 (average)
 29409                           ;	Chosen strategy is simple_byte
 29410  0180DC  500C               	movf	(btemp+11)^0,w,c
 29411  0180DE  0A00               	xorlw	0	; case 0
 29412  0180E0  A4D8               	btfss	status,2,c
 29413  0180E2  D7F4               	goto	l11882
 29414                           
 29415                           ; Switch size 1, requested type "simple"
 29416                           ; Number of cases is 4, Range of values is 0 to 3
 29417                           ; switch strategies available:
 29418                           ; Name         Instructions Cycles
 29419                           ; simple_byte           13     7 (average)
 29420                           ;	Chosen strategy is simple_byte
 29421  0180E4  500B               	movf	(btemp+10)^0,w,c
 29422  0180E6  0A00               	xorlw	0	; case 0
 29423  0180E8  B4D8               	btfsc	status,2,c
 29424  0180EA  D7E9               	goto	l11880
 29425  0180EC  0A01               	xorlw	1	; case 1
 29426  0180EE  B4D8               	btfsc	status,2,c
 29427  0180F0  D7E3               	goto	l11878
 29428  0180F2  0A03               	xorlw	3	; case 2
 29429  0180F4  B4D8               	btfsc	status,2,c
 29430  0180F6  D7DD               	goto	l11876
 29431  0180F8  0A01               	xorlw	1	; case 3
 29432  0180FA  B4D8               	btfsc	status,2,c
 29433  0180FC  D7D2               	goto	l11874
 29434  0180FE  D7E6               	goto	l11882
 29435  018100                     l11888:
 29436                           
 29437                           ;dio.c: 96:   if (sw_value) {
 29438                           ;stkvar	_sw_value @ sp[(-2)+1]
 29439  018100  0EFF               	movlw	-1
 29440  018102  50E3               	movf	plusw1,w,c
 29441  018104  B4D8               	btfsc	status,2,c
 29442  018106  D018               	goto	l11894
 29443                           
 29444                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 29445                           ;stkvar	_i @ sp[(-2)+0]
 29446  018108  0EFE               	movlw	-2
 29447  01810A  50E3               	movf	plusw1,w,c
 29448  01810C  0D05               	mullw	5
 29449  01810E  0EBC               	movlw	low _S
 29450  018110  24F3               	addwf	243,w,c
 29451  018112  6ED9               	movwf	fsr2l,c
 29452  018114  0E02               	movlw	high _S
 29453  018116  20F4               	addwfc	prodh,w,c
 29454  018118  6EDA               	movwf	fsr2h,c
 29455  01811A  04DE               	decf	postinc2,w,c
 29456  01811C  A4D8               	btfss	status,2,c
 29457  01811E  D049               	goto	l11902
 29458                           
 29459                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 29460                           ;stkvar	_i @ sp[(-2)+0]
 29461  018120  0EFE               	movlw	-2
 29462  018122  50E3               	movf	plusw1,w,c
 29463  018124  0D05               	mullw	5
 29464  018126  0EBC               	movlw	low _S
 29465  018128  24F3               	addwf	243,w,c
 29466  01812A  6ED9               	movwf	fsr2l,c
 29467  01812C  0E02               	movlw	high _S
 29468  01812E  20F4               	addwfc	prodh,w,c
 29469  018130  6EDA               	movwf	fsr2h,c
 29470  018132  0E00               	movlw	0
 29471  018134  6EDF               	movwf	indf2,c
 29472  018136  D03D               	goto	l11902
 29473  018138                     l11894:
 29474                           
 29475                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 29476                           ;stkvar	_i @ sp[(-2)+0]
 29477  018138  0EFE               	movlw	-2
 29478  01813A  50E3               	movf	plusw1,w,c
 29479  01813C  0D05               	mullw	5
 29480  01813E  0EBC               	movlw	low _S
 29481  018140  24F3               	addwf	243,w,c
 29482  018142  6ED9               	movwf	fsr2l,c
 29483  018144  0E02               	movlw	high _S
 29484  018146  20F4               	addwfc	prodh,w,c
 29485  018148  6EDA               	movwf	fsr2h,c
 29486  01814A  50DF               	movf	indf2,w,c
 29487  01814C  A4D8               	btfss	status,2,c
 29488  01814E  D031               	goto	l11902
 29489                           
 29490                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 29491                           ;stkvar	_i @ sp[(-2)+0]
 29492  018150  0EFE               	movlw	-2
 29493  018152  50E3               	movf	plusw1,w,c
 29494  018154  0D05               	mullw	5
 29495  018156  0EBC               	movlw	low _S
 29496  018158  24F3               	addwf	243,w,c
 29497  01815A  6ED9               	movwf	fsr2l,c
 29498  01815C  0E02               	movlw	high _S
 29499  01815E  20F4               	addwfc	prodh,w,c
 29500  018160  6EDA               	movwf	fsr2h,c
 29501  018162  0E01               	movlw	1
 29502  018164  6EDF               	movwf	indf2,c
 29503                           
 29504                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 29505  018166  EE20  F2B8         	lfsr	2,_V+184	;volatile
 29506                           
 29507                           ;stkvar	_i @ sp[(-2)+0]
 29508  01816A  0EFE               	movlw	-2
 29509  01816C  50E3               	movf	plusw1,w,c
 29510  01816E  0D05               	mullw	5
 29511  018170  0EBD               	movlw	low (_S+1)
 29512  018172  24F3               	addwf	243,w,c
 29513  018174  6EE9               	movwf	fsr0l,c
 29514  018176  0E02               	movlw	high (_S+1)
 29515  018178  20F4               	addwfc	prodh,w,c
 29516  01817A  6EEA               	movwf	fsr0h,c
 29517  01817C  006F FF7B FFEE     	movff	postinc2,postinc0
 29518  018182  006F FF7B FFEE     	movff	postinc2,postinc0
 29519  018188  006F FF7B FFEE     	movff	postinc2,postinc0
 29520  01818E  006F FF7B FFEE     	movff	postinc2,postinc0
 29521                           
 29522                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 29523                           ;stkvar	_i @ sp[(-2)+0]
 29524  018194  0EFE               	movlw	-2
 29525  018196  006F FF8C  F00C    	movff	plusw1,btemp+11
 29526  01819C  0E01               	movlw	1
 29527  01819E  6E0B               	movwf	(btemp+10)^0,c
 29528  0181A0  2A0C               	incf	(btemp+11)^0,f,c
 29529  0181A2  D002               	goto	u1160_24
 29530  0181A4                     u1160_25:
 29531  0181A4  90D8               	bcf	status,0,c
 29532  0181A6  360B               	rlcf	(btemp+10)^0,f,c
 29533  0181A8                     u1160_24:
 29534  0181A8  2E0C               	decfsz	(btemp+11)^0,f,c
 29535  0181AA  D7FC               	goto	u1160_25
 29536  0181AC  500B               	movf	(btemp+10)^0,w,c
 29537  0181AE  0102               	movlb	2	; () banked
 29538  0181B0  13E4               	iorwf	(_S+40)& (0+255),f,b	;volatile
 29539  0181B2                     l11902:
 29540                           
 29541                           ;dio.c: 107:  } while (++i < 4);
 29542                           ;stkvar	_i @ sp[(-2)+0]
 29543  0181B2  0EFE               	movlw	-2
 29544  0181B4  2AE3               	incf	plusw1,f,c
 29545  0181B6  0EFE               	movlw	-2
 29546  0181B8  006F FF8C  F001    	movff	plusw1,btemp
 29547  0181BE  0E03               	movlw	3
 29548  0181C0  6401               	cpfsgt	btemp^0,c
 29549  0181C2  D788               	goto	l11886
 29550                           
 29551                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 29552  0181C4  8EBD               	bsf	189,7,c	;volatile
 29553                           
 29554                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29555  0181C6  52E5               	movf	postdec1,f,c
 29556  0181C8  52E5               	movf	postdec1,f,c
 29557  0181CA  0012               	return		;funcret
 29558  0181CC                     __end_of_switch_handler:
 29559                           	opt callstack 0
 29560                           
 29561 ;; *************** function _TMR5_ISR *****************
 29562 ;; Defined at:
 29563 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 29564 ;; Parameters:    Size  Location     Type
 29565 ;;		None
 29566 ;; Auto vars:     Size  Location     Type
 29567 ;;		None
 29568 ;; Return value:  Size  Location     Type
 29569 ;;                  1    wreg      void 
 29570 ;; Registers used:
 29571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 29572 ;; Tracked objects:
 29573 ;;		On entry : 0/0
 29574 ;;		On exit  : 0/0
 29575 ;;		Unchanged: 0/0
 29576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29579 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29580 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29581 ;;Total ram usage:        4 bytes
 29582 ;; Hardware stack levels used:    1
 29583 ;; Hardware stack levels required when called:    5
 29584 ;; This function calls:
 29585 ;;		_TMR5_CallBack
 29586 ;;		_TMR5_WriteTimer
 29587 ;; This function is called by:
 29588 ;;		Interrupt level 1
 29589 ;; This function uses a non-reentrant model
 29590 ;;
 29591                           
 29592                           	psect	text135
 29593  019AD8                     __ptext135:
 29594                           	opt callstack 0
 29595  019AD8                     _TMR5_ISR:
 29596                           	opt callstack 12
 29597                           
 29598                           ;incstack = 0
 29599  019AD8  006F FF60  F044    	movff	status,??_TMR5_ISR+2
 29600  019ADE  0060  F030  F045   	movff	btemp+11,??_TMR5_ISR+3
 29601  019AE4  EE16  F061         	lfsr	1,___intlo_sp
 29602                           
 29603                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 29604  019AE8  0139               	movlb	57	; () banked
 29605  019AEA  9DA8               	bcf	168,6,b	;volatile
 29606                           
 29607                           ; BSR set to: 57
 29608                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 29609  019AEC  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 29610  019AF2  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 29611  019AF8  ECB6  F0CF         	call	_TMR5_WriteTimer	;wreg free
 29612                           
 29613                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 29614  019AFC  0102               	movlb	2	; () banked
 29615  019AFE  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 29616  019B00  6E42               	movwf	??_TMR5_ISR^0,c
 29617  019B02  6A43               	clrf	(??_TMR5_ISR+1)^0,c
 29618  019B04  0E05               	movlw	5
 29619  019B06  2642               	addwf	??_TMR5_ISR^0,f,c
 29620  019B08  0E00               	movlw	0
 29621  019B0A  2243               	addwfc	(??_TMR5_ISR+1)^0,f,c
 29622  019B0C  4A29               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 29623  019B0E  2A2A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 29624  019B10  5042               	movf	??_TMR5_ISR^0,w,c
 29625  019B12  5C29               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 29626  019B14  5043               	movf	(??_TMR5_ISR+1)^0,w,c
 29627  019B16  582A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 29628  019B18  A0D8               	btfss	status,0,c
 29629  019B1A  D004               	goto	i1l1017
 29630                           
 29631                           ; BSR set to: 2
 29632                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 29633  019B1C  EC26  F0D3         	call	_TMR5_CallBack	;wreg free
 29634                           
 29635                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 29636  019B20  6A29               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 29637  019B22  6A2A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 29638  019B24                     i1l1017:
 29639  019B24  0060  F114  F00C   	movff	??_TMR5_ISR+3,btemp+11
 29640  019B2A  0060  F113  FFD8   	movff	??_TMR5_ISR+2,status
 29641  019B30  0011               	retfie		f
 29642  019B32                     __end_of_TMR5_ISR:
 29643                           	opt callstack 0
 29644                           
 29645 ;; *************** function _TMR5_WriteTimer *****************
 29646 ;; Defined at:
 29647 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 29648 ;; Parameters:    Size  Location     Type
 29649 ;;  timerVal        2  [STACK] unsigned short 
 29650 ;; Auto vars:     Size  Location     Type
 29651 ;;		None
 29652 ;; Return value:  Size  Location     Type
 29653 ;;                  1  [STACK] void 
 29654 ;; Registers used:
 29655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29656 ;; Tracked objects:
 29657 ;;		On entry : 3F/39
 29658 ;;		On exit  : 0/0
 29659 ;;		Unchanged: 0/0
 29660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29665 ;;Total ram usage:        0 bytes
 29666 ;; Hardware stack levels used:    1
 29667 ;; Hardware stack levels required when called:    3
 29668 ;; This function calls:
 29669 ;;		Nothing
 29670 ;; This function is called by:
 29671 ;;		_TMR5_ISR
 29672 ;; This function uses a reentrant model
 29673 ;;
 29674                           
 29675                           	psect	text136
 29676  019F6C                     __ptext136:
 29677                           	opt callstack 0
 29678  019F6C                     _TMR5_WriteTimer:
 29679                           	opt callstack 13
 29680                           
 29681                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 29682                           
 29683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29684                           ;incstack = 0
 29685  019F6C  A49A               	btfss	154,2,c	;volatile
 29686  019F6E  D00F               	goto	l10066
 29687                           
 29688                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 29689  019F70  909A               	bcf	154,0,c	;volatile
 29690                           
 29691                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 29692                           ;stkvar	_timerVal @ sp[(0)+-2]
 29693  019F72  0EFF               	movlw	255
 29694  019F74  24E1               	addwf	fsr1l,w,c
 29695  019F76  6ED9               	movwf	fsr2l,c
 29696  019F78  0EFF               	movlw	255
 29697  019F7A  20E2               	addwfc	fsr1h,w,c
 29698  019F7C  6EDA               	movwf	fsr2h,c
 29699  019F7E  50DF               	movf	indf2,w,c
 29700  019F80  6E99               	movwf	153,c	;volatile
 29701                           
 29702                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 29703                           ;stkvar	_timerVal @ sp[(0)+-2]
 29704  019F82  0EFE               	movlw	-2
 29705  019F84  006F FF8F FF98     	movff	plusw1,16280	;volatile
 29706                           
 29707                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 29708  019F8A  809A               	bsf	154,0,c	;volatile
 29709                           
 29710                           ;mcc_generated_files/tmr5.c: 142:  } else {
 29711  019F8C  D00C               	goto	l1000
 29712  019F8E                     l10066:
 29713                           
 29714                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 29715                           ;stkvar	_timerVal @ sp[(0)+-2]
 29716  019F8E  0EFF               	movlw	255
 29717  019F90  24E1               	addwf	fsr1l,w,c
 29718  019F92  6ED9               	movwf	fsr2l,c
 29719  019F94  0EFF               	movlw	255
 29720  019F96  20E2               	addwfc	fsr1h,w,c
 29721  019F98  6EDA               	movwf	fsr2h,c
 29722  019F9A  50DF               	movf	indf2,w,c
 29723  019F9C  6E99               	movwf	153,c	;volatile
 29724                           
 29725                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 29726                           ;stkvar	_timerVal @ sp[(0)+-2]
 29727  019F9E  0EFE               	movlw	-2
 29728  019FA0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 29729  019FA6                     l1000:
 29730                           
 29731                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 29732  019FA6  52E5               	movf	postdec1,f,c
 29733  019FA8  52E5               	movf	postdec1,f,c
 29734  019FAA  0012               	return		;funcret
 29735  019FAC                     __end_of_TMR5_WriteTimer:
 29736                           	opt callstack 0
 29737                           
 29738 ;; *************** function _TMR5_CallBack *****************
 29739 ;; Defined at:
 29740 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 29741 ;; Parameters:    Size  Location     Type
 29742 ;;		None
 29743 ;; Auto vars:     Size  Location     Type
 29744 ;;		None
 29745 ;; Return value:  Size  Location     Type
 29746 ;;                  1  [STACK] void 
 29747 ;; Registers used:
 29748 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 29749 ;; Tracked objects:
 29750 ;;		On entry : 3F/2
 29751 ;;		On exit  : 0/0
 29752 ;;		Unchanged: 0/0
 29753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29758 ;;Total ram usage:        0 bytes
 29759 ;; Hardware stack levels used:    1
 29760 ;; Hardware stack levels required when called:    4
 29761 ;; This function calls:
 29762 ;;		Absolute function
 29763 ;;		_TMR5_DefaultInterruptHandler
 29764 ;; This function is called by:
 29765 ;;		_TMR5_ISR
 29766 ;; This function uses a reentrant model
 29767 ;;
 29768                           
 29769                           	psect	text137
 29770  01A64C                     __ptext137:
 29771                           	opt callstack 0
 29772  01A64C                     _TMR5_CallBack:
 29773                           	opt callstack 12
 29774                           
 29775                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 29776                           
 29777                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29778                           ;incstack = 0
 29779  01A64C  0100               	movlb	0	; () banked
 29780  01A64E  518B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 29781  01A650  118C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 29782  01A652  118D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 29783  01A654  B4D8               	btfsc	status,2,c
 29784  01A656  0012               	return	
 29785                           
 29786                           ; BSR set to: 0
 29787                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 29788  01A658  D801               	call	u941_28
 29789  01A65A  0012               	return	
 29790  01A65C                     u941_28:
 29791  01A65C  0005               	push	
 29792  01A65E  6EFA               	movwf	pclath,c
 29793  01A660  518B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 29794  01A662  6EFD               	movwf	tosl,c
 29795  01A664  518C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 29796  01A666  6EFE               	movwf	tosh,c
 29797  01A668  518D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 29798  01A66A  6EFF               	movwf	tosu,c
 29799  01A66C  50FA               	movf	pclath,w,c
 29800  01A66E  0012               	return		;indir
 29801  01A670                     __end_of_TMR5_CallBack:
 29802                           	opt callstack 0
 29803                           
 29804 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 29805 ;; Defined at:
 29806 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 29807 ;; Parameters:    Size  Location     Type
 29808 ;;		None
 29809 ;; Auto vars:     Size  Location     Type
 29810 ;;		None
 29811 ;; Return value:  Size  Location     Type
 29812 ;;                  1  [STACK] void 
 29813 ;; Registers used:
 29814 ;;		wreg, status,2, status,0, btemp+11
 29815 ;; Tracked objects:
 29816 ;;		On entry : 3F/0
 29817 ;;		On exit  : 3F/2
 29818 ;;		Unchanged: 0/0
 29819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29824 ;;Total ram usage:        0 bytes
 29825 ;; Hardware stack levels used:    1
 29826 ;; Hardware stack levels required when called:    3
 29827 ;; This function calls:
 29828 ;;		Nothing
 29829 ;; This function is called by:
 29830 ;;		_TMR5_Initialize
 29831 ;;		_TMR5_CallBack
 29832 ;; This function uses a reentrant model
 29833 ;;
 29834                           
 29835                           	psect	text138
 29836  01A136                     __ptext138:
 29837                           	opt callstack 0
 29838  01A136                     _TMR5_DefaultInterruptHandler:
 29839                           	opt callstack 12
 29840                           
 29841                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 29842                           
 29843                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29844                           ;incstack = 0
 29845  01A136  A0BE               	btfss	190,0,c	;volatile
 29846  01A138  D002               	goto	u882_20
 29847  01A13A  0E01               	movlw	1
 29848  01A13C  D001               	goto	u882_26
 29849  01A13E                     u882_20:
 29850  01A13E  0E00               	movlw	0
 29851  01A140                     u882_26:
 29852  01A140  0AFF               	xorlw	255
 29853  01A142  6E0C               	movwf	(btemp+11)^0,c
 29854  01A144  50BE               	movf	190,w,c	;volatile
 29855  01A146  180C               	xorwf	(btemp+11)^0,w,c
 29856  01A148  0BFE               	andlw	-2
 29857  01A14A  180C               	xorwf	(btemp+11)^0,w,c
 29858  01A14C  6EBE               	movwf	190,c	;volatile
 29859                           
 29860                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 29861  01A14E  0E01               	movlw	1
 29862  01A150  0102               	movlb	2	; () banked
 29863  01A152  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 29864  01A154  0E00               	movlw	0
 29865  01A156  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 29866  01A158  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 29867  01A15A  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 29868                           
 29869                           ; BSR set to: 2
 29870                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 29871  01A15C  0E01               	movlw	1
 29872  01A15E  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 29873  01A160  0E00               	movlw	0
 29874  01A162  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 29875  01A164  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 29876  01A166  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 29877                           
 29878                           ; BSR set to: 2
 29879                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29880  01A168  0012               	return		;funcret
 29881  01A16A                     __end_of_TMR5_DefaultInterruptHandler:
 29882                           	opt callstack 0
 29883                           
 29884 ;; *************** function _TMR3_ISR *****************
 29885 ;; Defined at:
 29886 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 29887 ;; Parameters:    Size  Location     Type
 29888 ;;		None
 29889 ;; Auto vars:     Size  Location     Type
 29890 ;;		None
 29891 ;; Return value:  Size  Location     Type
 29892 ;;                  1    wreg      void 
 29893 ;; Registers used:
 29894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 29895 ;; Tracked objects:
 29896 ;;		On entry : 0/0
 29897 ;;		On exit  : 3F/0
 29898 ;;		Unchanged: 0/0
 29899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29902 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29903 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29904 ;;Total ram usage:       25 bytes
 29905 ;; Hardware stack levels used:    1
 29906 ;; Hardware stack levels required when called:   14
 29907 ;; This function calls:
 29908 ;;		_TMR3_CallBack
 29909 ;;		_TMR3_WriteTimer
 29910 ;; This function is called by:
 29911 ;;		Interrupt level 1
 29912 ;; This function uses a non-reentrant model
 29913 ;;
 29914                           
 29915                           	psect	text139
 29916  017CA0                     __ptext139:
 29917                           	opt callstack 0
 29918  017CA0                     _TMR3_ISR:
 29919                           	opt callstack 3
 29920                           
 29921                           ; BSR set to: 2
 29922                           ;incstack = 0
 29923  017CA0  006F FF60  F0D9    	movff	status,??_TMR3_ISR
 29924  017CA6  006F FFD8  F0DA    	movff	tblptrl,??_TMR3_ISR+1
 29925  017CAC  006F FFDC  F0DB    	movff	tblptrh,??_TMR3_ISR+2
 29926  017CB2  006F FFE0  F0DC    	movff	tblptru,??_TMR3_ISR+3
 29927  017CB8  006F FFD4  F0DD    	movff	tablat,??_TMR3_ISR+4
 29928  017CBE  0060  F004  F0DE   	movff	btemp,??_TMR3_ISR+5
 29929  017CC4  0060  F008  F0DF   	movff	btemp+1,??_TMR3_ISR+6
 29930  017CCA  0060  F00C  F0E0   	movff	btemp+2,??_TMR3_ISR+7
 29931  017CD0  0060  F010  F0E1   	movff	btemp+3,??_TMR3_ISR+8
 29932  017CD6  0060  F014  F0E2   	movff	btemp+4,??_TMR3_ISR+9
 29933  017CDC  0060  F018  F0E3   	movff	btemp+5,??_TMR3_ISR+10
 29934  017CE2  0060  F01C  F0E4   	movff	btemp+6,??_TMR3_ISR+11
 29935  017CE8  0060  F020  F0E5   	movff	btemp+7,??_TMR3_ISR+12
 29936  017CEE  0060  F024  F0E6   	movff	btemp+8,??_TMR3_ISR+13
 29937  017CF4  0060  F028  F0E7   	movff	btemp+9,??_TMR3_ISR+14
 29938  017CFA  0060  F02C  F0E8   	movff	btemp+10,??_TMR3_ISR+15
 29939  017D00  0060  F030  F0E9   	movff	btemp+11,??_TMR3_ISR+16
 29940  017D06  0060  F044  F0EA   	movff	btemp+16,??_TMR3_ISR+17
 29941  017D0C  0060  F048  F0EB   	movff	btemp+17,??_TMR3_ISR+18
 29942  017D12  0060  F04C  F0EC   	movff	btemp+18,??_TMR3_ISR+19
 29943  017D18  0060  F050  F0ED   	movff	btemp+19,??_TMR3_ISR+20
 29944  017D1E  0060  F054  F0EE   	movff	btemp+20,??_TMR3_ISR+21
 29945  017D24  0060  F058  F0EF   	movff	btemp+21,??_TMR3_ISR+22
 29946  017D2A  0060  F05C  F0F0   	movff	btemp+22,??_TMR3_ISR+23
 29947  017D30  0060  F060  F0F1   	movff	btemp+23,??_TMR3_ISR+24
 29948  017D36  EE16  F061         	lfsr	1,___intlo_sp
 29949                           
 29950                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 29951  017D3A  0139               	movlb	57	; () banked
 29952  017D3C  9DA6               	bcf	166,6,b	;volatile
 29953                           
 29954                           ; BSR set to: 57
 29955                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 29956  017D3E  0060  F09F  FFE6   	movff	_timer3ReloadVal,postinc1
 29957  017D44  0060  F0A3  FFE6   	movff	_timer3ReloadVal+1,postinc1
 29958  017D4A  ECD6  F0CF         	call	_TMR3_WriteTimer	;wreg free
 29959                           
 29960                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 29961  017D4E  0100               	movlb	0	; () banked
 29962  017D50  4BA8               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 29963  017D52  2BA9               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 29964  017D54  51A9               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 29965  017D56  E104               	bnz	i1u1202_20
 29966  017D58  0E28               	movlw	40
 29967  017D5A  5DA8               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 29968  017D5C  A0D8               	btfss	status,0,c
 29969  017D5E  D005               	goto	i1l1205
 29970  017D60                     i1u1202_20:
 29971                           
 29972                           ; BSR set to: 0
 29973                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 29974  017D60  EC38  F0D3         	call	_TMR3_CallBack	;wreg free
 29975                           
 29976                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 29977  017D64  0100               	movlb	0	; () banked
 29978  017D66  6BA8               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 29979  017D68  6BA9               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 29980  017D6A                     i1l1205:
 29981                           
 29982                           ; BSR set to: 0
 29983  017D6A  0060  F3C4  F018   	movff	??_TMR3_ISR+24,btemp+23
 29984  017D70  0060  F3C0  F017   	movff	??_TMR3_ISR+23,btemp+22
 29985  017D76  0060  F3BC  F016   	movff	??_TMR3_ISR+22,btemp+21
 29986  017D7C  0060  F3B8  F015   	movff	??_TMR3_ISR+21,btemp+20
 29987  017D82  0060  F3B4  F014   	movff	??_TMR3_ISR+20,btemp+19
 29988  017D88  0060  F3B0  F013   	movff	??_TMR3_ISR+19,btemp+18
 29989  017D8E  0060  F3AC  F012   	movff	??_TMR3_ISR+18,btemp+17
 29990  017D94  0060  F3A8  F011   	movff	??_TMR3_ISR+17,btemp+16
 29991  017D9A  0060  F3A4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 29992  017DA0  0060  F3A0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 29993  017DA6  0060  F39C  F00A   	movff	??_TMR3_ISR+14,btemp+9
 29994  017DAC  0060  F398  F009   	movff	??_TMR3_ISR+13,btemp+8
 29995  017DB2  0060  F394  F008   	movff	??_TMR3_ISR+12,btemp+7
 29996  017DB8  0060  F390  F007   	movff	??_TMR3_ISR+11,btemp+6
 29997  017DBE  0060  F38C  F006   	movff	??_TMR3_ISR+10,btemp+5
 29998  017DC4  0060  F388  F005   	movff	??_TMR3_ISR+9,btemp+4
 29999  017DCA  0060  F384  F004   	movff	??_TMR3_ISR+8,btemp+3
 30000  017DD0  0060  F380  F003   	movff	??_TMR3_ISR+7,btemp+2
 30001  017DD6  0060  F37C  F002   	movff	??_TMR3_ISR+6,btemp+1
 30002  017DDC  0060  F378  F001   	movff	??_TMR3_ISR+5,btemp
 30003  017DE2  0060  F377  FFF5   	movff	??_TMR3_ISR+4,tablat
 30004  017DE8  0060  F373  FFF8   	movff	??_TMR3_ISR+3,tblptru
 30005  017DEE  0060  F36F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 30006  017DF4  0060  F36B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 30007  017DFA  0060  F367  FFD8   	movff	??_TMR3_ISR,status
 30008  017E00  0011               	retfie		f
 30009  017E02                     __end_of_TMR3_ISR:
 30010                           	opt callstack 0
 30011                           
 30012 ;; *************** function _TMR3_WriteTimer *****************
 30013 ;; Defined at:
 30014 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 30015 ;; Parameters:    Size  Location     Type
 30016 ;;  timerVal        2  [STACK] unsigned short 
 30017 ;; Auto vars:     Size  Location     Type
 30018 ;;		None
 30019 ;; Return value:  Size  Location     Type
 30020 ;;                  1  [STACK] void 
 30021 ;; Registers used:
 30022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 30023 ;; Tracked objects:
 30024 ;;		On entry : 3F/39
 30025 ;;		On exit  : 0/0
 30026 ;;		Unchanged: 0/0
 30027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30032 ;;Total ram usage:        0 bytes
 30033 ;; Hardware stack levels used:    1
 30034 ;; Hardware stack levels required when called:    3
 30035 ;; This function calls:
 30036 ;;		Nothing
 30037 ;; This function is called by:
 30038 ;;		_TMR3_ISR
 30039 ;; This function uses a reentrant model
 30040 ;;
 30041                           
 30042                           	psect	text140
 30043  019FAC                     __ptext140:
 30044                           	opt callstack 0
 30045  019FAC                     _TMR3_WriteTimer:
 30046                           	opt callstack 13
 30047                           
 30048                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 30049                           
 30050                           ; BSR set to: 0
 30051                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30052                           ;incstack = 0
 30053  019FAC  A4A6               	btfss	166,2,c	;volatile
 30054  019FAE  D00F               	goto	l10084
 30055                           
 30056                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 30057  019FB0  90A6               	bcf	166,0,c	;volatile
 30058                           
 30059                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 30060                           ;stkvar	_timerVal @ sp[(0)+-2]
 30061  019FB2  0EFF               	movlw	255
 30062  019FB4  24E1               	addwf	fsr1l,w,c
 30063  019FB6  6ED9               	movwf	fsr2l,c
 30064  019FB8  0EFF               	movlw	255
 30065  019FBA  20E2               	addwfc	fsr1h,w,c
 30066  019FBC  6EDA               	movwf	fsr2h,c
 30067  019FBE  50DF               	movf	indf2,w,c
 30068  019FC0  6EA5               	movwf	165,c	;volatile
 30069                           
 30070                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 30071                           ;stkvar	_timerVal @ sp[(0)+-2]
 30072  019FC2  0EFE               	movlw	-2
 30073  019FC4  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 30074                           
 30075                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 30076  019FCA  80A6               	bsf	166,0,c	;volatile
 30077                           
 30078                           ;mcc_generated_files/tmr3.c: 141:     }
 30079  019FCC  D00C               	goto	l1188
 30080  019FCE                     l10084:
 30081                           
 30082                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 30083                           ;stkvar	_timerVal @ sp[(0)+-2]
 30084  019FCE  0EFF               	movlw	255
 30085  019FD0  24E1               	addwf	fsr1l,w,c
 30086  019FD2  6ED9               	movwf	fsr2l,c
 30087  019FD4  0EFF               	movlw	255
 30088  019FD6  20E2               	addwfc	fsr1h,w,c
 30089  019FD8  6EDA               	movwf	fsr2h,c
 30090  019FDA  50DF               	movf	indf2,w,c
 30091  019FDC  6EA5               	movwf	165,c	;volatile
 30092                           
 30093                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 30094                           ;stkvar	_timerVal @ sp[(0)+-2]
 30095  019FDE  0EFE               	movlw	-2
 30096  019FE0  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 30097  019FE6                     l1188:
 30098                           
 30099                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 30100  019FE6  52E5               	movf	postdec1,f,c
 30101  019FE8  52E5               	movf	postdec1,f,c
 30102  019FEA  0012               	return		;funcret
 30103  019FEC                     __end_of_TMR3_WriteTimer:
 30104                           	opt callstack 0
 30105                           
 30106 ;; *************** function _TMR3_CallBack *****************
 30107 ;; Defined at:
 30108 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 30109 ;; Parameters:    Size  Location     Type
 30110 ;;		None
 30111 ;; Auto vars:     Size  Location     Type
 30112 ;;		None
 30113 ;; Return value:  Size  Location     Type
 30114 ;;                  1  [STACK] void 
 30115 ;; Registers used:
 30116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 30117 ;; Tracked objects:
 30118 ;;		On entry : 3F/0
 30119 ;;		On exit  : 0/0
 30120 ;;		Unchanged: 0/0
 30121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30126 ;;Total ram usage:        0 bytes
 30127 ;; Hardware stack levels used:    1
 30128 ;; Hardware stack levels required when called:   13
 30129 ;; This function calls:
 30130 ;;		Absolute function
 30131 ;;		_TMR3_DefaultInterruptHandler
 30132 ;;		_calc_bsoc
 30133 ;; This function is called by:
 30134 ;;		_TMR3_ISR
 30135 ;; This function uses a reentrant model
 30136 ;;
 30137                           
 30138                           	psect	text141
 30139  01A670                     __ptext141:
 30140                           	opt callstack 0
 30141  01A670                     _TMR3_CallBack:
 30142                           	opt callstack 3
 30143                           
 30144                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 30145                           
 30146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30147                           ;incstack = 0
 30148  01A670  0100               	movlb	0	; () banked
 30149  01A672  5188               	movf	_TMR3_InterruptHandler& (0+255),w,b
 30150  01A674  1189               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 30151  01A676  118A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 30152  01A678  B4D8               	btfsc	status,2,c
 30153  01A67A  0012               	return	
 30154                           
 30155                           ; BSR set to: 0
 30156                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 30157  01A67C  D801               	call	u1178_28
 30158  01A67E  0012               	return	
 30159  01A680                     u1178_28:
 30160  01A680  0005               	push	
 30161  01A682  6EFA               	movwf	pclath,c
 30162  01A684  5188               	movf	_TMR3_InterruptHandler& (0+255),w,b
 30163  01A686  6EFD               	movwf	tosl,c
 30164  01A688  5189               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 30165  01A68A  6EFE               	movwf	tosh,c
 30166  01A68C  518A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 30167  01A68E  6EFF               	movwf	tosu,c
 30168  01A690  50FA               	movf	pclath,w,c
 30169  01A692  0012               	return		;indir
 30170  01A694                     __end_of_TMR3_CallBack:
 30171                           	opt callstack 0
 30172                           
 30173 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 30174 ;; Defined at:
 30175 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 30176 ;; Parameters:    Size  Location     Type
 30177 ;;		None
 30178 ;; Auto vars:     Size  Location     Type
 30179 ;;		None
 30180 ;; Return value:  Size  Location     Type
 30181 ;;                  1  [STACK] void 
 30182 ;; Registers used:
 30183 ;;		None
 30184 ;; Tracked objects:
 30185 ;;		On entry : 3F/0
 30186 ;;		On exit  : 0/0
 30187 ;;		Unchanged: 0/0
 30188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30193 ;;Total ram usage:        0 bytes
 30194 ;; Hardware stack levels used:    1
 30195 ;; Hardware stack levels required when called:    3
 30196 ;; This function calls:
 30197 ;;		Nothing
 30198 ;; This function is called by:
 30199 ;;		_TMR3_Initialize
 30200 ;;		_TMR3_CallBack
 30201 ;; This function uses a reentrant model
 30202 ;;
 30203                           
 30204                           	psect	text142
 30205  01A9B4                     __ptext142:
 30206                           	opt callstack 0
 30207  01A9B4                     _TMR3_DefaultInterruptHandler:
 30208                           	opt callstack 12
 30209                           
 30210                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30211                           
 30212                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30213                           ;incstack = 0
 30214  01A9B4  0012               	return		;funcret
 30215  01A9B6                     __end_of_TMR3_DefaultInterruptHandler:
 30216                           	opt callstack 0
 30217                           
 30218 ;; *************** function _calc_bsoc *****************
 30219 ;; Defined at:
 30220 ;;		line 39 in file "bsoc.c"
 30221 ;; Parameters:    Size  Location     Type
 30222 ;;		None
 30223 ;; Auto vars:     Size  Location     Type
 30224 ;;  log_ptr         2  [STACK] PTR unsigned char 
 30225 ;;		 -> port_data(512), 
 30226 ;; Return value:  Size  Location     Type
 30227 ;;                  1  [STACK] void 
 30228 ;; Registers used:
 30229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 30230 ;; Tracked objects:
 30231 ;;		On entry : 3F/0
 30232 ;;		On exit  : 3F/1
 30233 ;;		Unchanged: 0/0
 30234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30239 ;;Total ram usage:        0 bytes
 30240 ;; Hardware stack levels used:    1
 30241 ;; Hardware stack levels required when called:   12
 30242 ;; This function calls:
 30243 ;;		_StartTimer
 30244 ;;		___fladd
 30245 ;;		___fldiv
 30246 ;;		___flge
 30247 ;;		___flmul
 30248 ;;		___flneg
 30249 ;;		___fltol
 30250 ;;		_port_data_dma_ptr
 30251 ;;		_send_port_data_dma
 30252 ;;		_sprintf
 30253 ;;		_strlen
 30254 ;; This function is called by:
 30255 ;;		_init_bsoc
 30256 ;;		_TMR3_CallBack
 30257 ;; This function uses a reentrant model
 30258 ;;
 30259                           
 30260                           	psect	text143
 30261  013B40                     __ptext143:
 30262                           	opt callstack 0
 30263  013B40                     _calc_bsoc:
 30264                           	opt callstack 0
 30265                           
 30266                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30267  013B40  52E6               	movf	postinc1,f,c
 30268  013B42  52E6               	movf	postinc1,f,c
 30269                           
 30270                           ;incstack = 0
 30271                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 43:  do { LATEbits.LATE1 = 1; } while(0);
 30272  013B44  82BE               	bsf	190,1,c	;volatile
 30273                           
 30274                           ;bsoc.c: 45:  C.dynamic_ah += (C.c_bat / 3600.0);
 30275  013B46  0E00               	movlw	0
 30276  013B48  6EE6               	movwf	postinc1,c
 30277  013B4A  0E00               	movlw	0
 30278  013B4C  6EE6               	movwf	postinc1,c
 30279  013B4E  0E61               	movlw	97
 30280  013B50  6EE6               	movwf	postinc1,c
 30281  013B52  0E45               	movlw	69
 30282  013B54  6EE6               	movwf	postinc1,c
 30283  013B56  0060  F513  FFE6   	movff	_C+68,postinc1
 30284  013B5C  0060  F517  FFE6   	movff	_C+69,postinc1
 30285  013B62  0060  F51B  FFE6   	movff	_C+70,postinc1
 30286  013B68  0060  F51F  FFE6   	movff	_C+71,postinc1
 30287  013B6E  ECE3  F0A0         	call	___fldiv	;wreg free
 30288  013B72  0060  F007  FFE6   	movff	btemp,postinc1
 30289  013B78  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30290  013B7E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30291  013B84  0060  F013  FFE6   	movff	btemp+3,postinc1
 30292  013B8A  0060  F633  FFE6   	movff	_C+140,postinc1
 30293  013B90  0060  F637  FFE6   	movff	_C+141,postinc1
 30294  013B96  0060  F63B  FFE6   	movff	_C+142,postinc1
 30295  013B9C  0060  F63F  FFE6   	movff	_C+143,postinc1
 30296  013BA2  ECC2  F099         	call	___fladd	;wreg free
 30297  013BA6  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 30298  013BAC  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 30299  013BB2  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 30300  013BB8  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 30301                           
 30302                           ;bsoc.c: 46:  if (C.dynamic_ah > (C.bank_ah))
 30303  013BBE  0060  F633  FFE6   	movff	_C+140,postinc1
 30304  013BC4  0060  F637  FFE6   	movff	_C+141,postinc1
 30305  013BCA  0060  F63B  FFE6   	movff	_C+142,postinc1
 30306  013BD0  0060  F63F  FFE6   	movff	_C+143,postinc1
 30307  013BD6  0060  F623  FFE6   	movff	_C+136,postinc1
 30308  013BDC  0060  F627  FFE6   	movff	_C+137,postinc1
 30309  013BE2  0060  F62B  FFE6   	movff	_C+138,postinc1
 30310  013BE8  0060  F62F  FFE6   	movff	_C+139,postinc1
 30311  013BEE  EC9E  F0BD         	call	___flge	;wreg free
 30312  013BF2  B001               	btfsc	btemp& (0+255),0,c
 30313  013BF4  D008               	goto	l11930
 30314                           
 30315                           ;bsoc.c: 47:   C.dynamic_ah = C.bank_ah;
 30316  013BF6  C188  F18C         	movff	_C+136,_C+140	;volatile
 30317  013BFA  C189  F18D         	movff	_C+137,_C+141	;volatile
 30318  013BFE  C18A  F18E         	movff	_C+138,_C+142	;volatile
 30319  013C02  C18B  F18F         	movff	_C+139,_C+143	;volatile
 30320  013C06                     l11930:
 30321                           
 30322                           ;bsoc.c: 48:  if (C.dynamic_ah < 0.1)
 30323  013C06  0ECD               	movlw	205
 30324  013C08  6EE6               	movwf	postinc1,c
 30325  013C0A  0ECC               	movlw	204
 30326  013C0C  6EE6               	movwf	postinc1,c
 30327  013C0E  0ECC               	movlw	204
 30328  013C10  6EE6               	movwf	postinc1,c
 30329  013C12  0E3D               	movlw	61
 30330  013C14  6EE6               	movwf	postinc1,c
 30331  013C16  0060  F633  FFE6   	movff	_C+140,postinc1
 30332  013C1C  0060  F637  FFE6   	movff	_C+141,postinc1
 30333  013C22  0060  F63B  FFE6   	movff	_C+142,postinc1
 30334  013C28  0060  F63F  FFE6   	movff	_C+143,postinc1
 30335  013C2E  EC9E  F0BD         	call	___flge	;wreg free
 30336  013C32  B001               	btfsc	btemp& (0+255),0,c
 30337  013C34  D009               	goto	l11934
 30338                           
 30339                           ;bsoc.c: 49:   C.dynamic_ah = 0.1;
 30340  013C36  0ECD               	movlw	205
 30341  013C38  0101               	movlb	1	; () banked
 30342  013C3A  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 30343  013C3C  0ECC               	movlw	204
 30344  013C3E  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 30345  013C40  0ECC               	movlw	204
 30346  013C42  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 30347  013C44  0E3D               	movlw	61
 30348  013C46  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 30349  013C48                     l11934:
 30350                           
 30351                           ;bsoc.c: 51:  C.pv_ah += (C.c_pv / 3600.0);
 30352  013C48  0E00               	movlw	0
 30353  013C4A  6EE6               	movwf	postinc1,c
 30354  013C4C  0E00               	movlw	0
 30355  013C4E  6EE6               	movwf	postinc1,c
 30356  013C50  0E61               	movlw	97
 30357  013C52  6EE6               	movwf	postinc1,c
 30358  013C54  0E45               	movlw	69
 30359  013C56  6EE6               	movwf	postinc1,c
 30360  013C58  0060  F523  FFE6   	movff	_C+72,postinc1
 30361  013C5E  0060  F527  FFE6   	movff	_C+73,postinc1
 30362  013C64  0060  F52B  FFE6   	movff	_C+74,postinc1
 30363  013C6A  0060  F52F  FFE6   	movff	_C+75,postinc1
 30364  013C70  ECE3  F0A0         	call	___fldiv	;wreg free
 30365  013C74  0060  F007  FFE6   	movff	btemp,postinc1
 30366  013C7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30367  013C80  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30368  013C86  0060  F013  FFE6   	movff	btemp+3,postinc1
 30369  013C8C  0060  F643  FFE6   	movff	_C+144,postinc1
 30370  013C92  0060  F647  FFE6   	movff	_C+145,postinc1
 30371  013C98  0060  F64B  FFE6   	movff	_C+146,postinc1
 30372  013C9E  0060  F64F  FFE6   	movff	_C+147,postinc1
 30373  013CA4  ECC2  F099         	call	___fladd	;wreg free
 30374  013CA8  0060  F004  F190   	movff	btemp,_C+144	;volatile
 30375  013CAE  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 30376  013CB4  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 30377  013CBA  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 30378                           
 30379                           ;bsoc.c: 52:  C.pvkw += (C.p_pv / 3600.0);
 30380  013CC0  0E00               	movlw	0
 30381  013CC2  6EE6               	movwf	postinc1,c
 30382  013CC4  0E00               	movlw	0
 30383  013CC6  6EE6               	movwf	postinc1,c
 30384  013CC8  0E61               	movlw	97
 30385  013CCA  6EE6               	movwf	postinc1,c
 30386  013CCC  0E45               	movlw	69
 30387  013CCE  6EE6               	movwf	postinc1,c
 30388  013CD0  0060  F5E3  FFE6   	movff	_C+120,postinc1
 30389  013CD6  0060  F5E7  FFE6   	movff	_C+121,postinc1
 30390  013CDC  0060  F5EB  FFE6   	movff	_C+122,postinc1
 30391  013CE2  0060  F5EF  FFE6   	movff	_C+123,postinc1
 30392  013CE8  ECE3  F0A0         	call	___fldiv	;wreg free
 30393  013CEC  0060  F007  FFE6   	movff	btemp,postinc1
 30394  013CF2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30395  013CF8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30396  013CFE  0060  F013  FFE6   	movff	btemp+3,postinc1
 30397  013D04  0060  F683  FFE6   	movff	_C+160,postinc1
 30398  013D0A  0060  F687  FFE6   	movff	_C+161,postinc1
 30399  013D10  0060  F68B  FFE6   	movff	_C+162,postinc1
 30400  013D16  0060  F68F  FFE6   	movff	_C+163,postinc1
 30401  013D1C  ECC2  F099         	call	___fladd	;wreg free
 30402  013D20  0060  F004  F1A0   	movff	btemp,_C+160	;volatile
 30403  013D26  0060  F008  F1A1   	movff	btemp+1,_C+161	;volatile
 30404  013D2C  0060  F00C  F1A2   	movff	btemp+2,_C+162	;volatile
 30405  013D32  0060  F010  F1A3   	movff	btemp+3,_C+163	;volatile
 30406                           
 30407                           ;bsoc.c: 53:  C.invkw += (C.p_inverter / 3600.0);
 30408  013D38  0E00               	movlw	0
 30409  013D3A  6EE6               	movwf	postinc1,c
 30410  013D3C  0E00               	movlw	0
 30411  013D3E  6EE6               	movwf	postinc1,c
 30412  013D40  0E61               	movlw	97
 30413  013D42  6EE6               	movwf	postinc1,c
 30414  013D44  0E45               	movlw	69
 30415  013D46  6EE6               	movwf	postinc1,c
 30416  013D48  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30417  013D4E  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30418  013D54  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30419  013D5A  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30420  013D60  ECE3  F0A0         	call	___fldiv	;wreg free
 30421  013D64  0060  F007  FFE6   	movff	btemp,postinc1
 30422  013D6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30423  013D70  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30424  013D76  0060  F013  FFE6   	movff	btemp+3,postinc1
 30425  013D7C  0060  F693  FFE6   	movff	_C+164,postinc1
 30426  013D82  0060  F697  FFE6   	movff	_C+165,postinc1
 30427  013D88  0060  F69B  FFE6   	movff	_C+166,postinc1
 30428  013D8E  0060  F69F  FFE6   	movff	_C+167,postinc1
 30429  013D94  ECC2  F099         	call	___fladd	;wreg free
 30430  013D98  0060  F004  F1A4   	movff	btemp,_C+164	;volatile
 30431  013D9E  0060  F008  F1A5   	movff	btemp+1,_C+165	;volatile
 30432  013DA4  0060  F00C  F1A6   	movff	btemp+2,_C+166	;volatile
 30433  013DAA  0060  F010  F1A7   	movff	btemp+3,_C+167	;volatile
 30434                           
 30435                           ;bsoc.c: 54:  if (C.p_bat > 0.0)
 30436  013DB0  0060  F5F3  FFE6   	movff	_C+124,postinc1
 30437  013DB6  0060  F5F7  FFE6   	movff	_C+125,postinc1
 30438  013DBC  0060  F5FB  FFE6   	movff	_C+126,postinc1
 30439  013DC2  0060  F5FF  FFE6   	movff	_C+127,postinc1
 30440  013DC8  0E00               	movlw	0
 30441  013DCA  6EE6               	movwf	postinc1,c
 30442  013DCC  0E00               	movlw	0
 30443  013DCE  6EE6               	movwf	postinc1,c
 30444  013DD0  0E00               	movlw	0
 30445  013DD2  6EE6               	movwf	postinc1,c
 30446  013DD4  0E00               	movlw	0
 30447  013DD6  6EE6               	movwf	postinc1,c
 30448  013DD8  EC9E  F0BD         	call	___flge	;wreg free
 30449  013DDC  B001               	btfsc	btemp& (0+255),0,c
 30450  013DDE  D03C               	goto	l11944
 30451                           
 30452                           ;bsoc.c: 55:   C.bkwi += (C.p_bat / 3600.0);
 30453  013DE0  0E00               	movlw	0
 30454  013DE2  6EE6               	movwf	postinc1,c
 30455  013DE4  0E00               	movlw	0
 30456  013DE6  6EE6               	movwf	postinc1,c
 30457  013DE8  0E61               	movlw	97
 30458  013DEA  6EE6               	movwf	postinc1,c
 30459  013DEC  0E45               	movlw	69
 30460  013DEE  6EE6               	movwf	postinc1,c
 30461  013DF0  0060  F5F3  FFE6   	movff	_C+124,postinc1
 30462  013DF6  0060  F5F7  FFE6   	movff	_C+125,postinc1
 30463  013DFC  0060  F5FB  FFE6   	movff	_C+126,postinc1
 30464  013E02  0060  F5FF  FFE6   	movff	_C+127,postinc1
 30465  013E08  ECE3  F0A0         	call	___fldiv	;wreg free
 30466  013E0C  0060  F007  FFE6   	movff	btemp,postinc1
 30467  013E12  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30468  013E18  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30469  013E1E  0060  F013  FFE6   	movff	btemp+3,postinc1
 30470  013E24  0060  F663  FFE6   	movff	_C+152,postinc1
 30471  013E2A  0060  F667  FFE6   	movff	_C+153,postinc1
 30472  013E30  0060  F66B  FFE6   	movff	_C+154,postinc1
 30473  013E36  0060  F66F  FFE6   	movff	_C+155,postinc1
 30474  013E3C  ECC2  F099         	call	___fladd	;wreg free
 30475  013E40  0060  F004  F198   	movff	btemp,_C+152	;volatile
 30476  013E46  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 30477  013E4C  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 30478  013E52  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 30479  013E58                     l11944:
 30480                           
 30481                           ;bsoc.c: 56:  if (C.p_bat < 0.0)
 30482  013E58  0101               	movlb	1	; () banked
 30483  013E5A  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 30484  013E5C  D03C               	goto	l11948
 30485                           
 30486                           ; BSR set to: 1
 30487                           ;bsoc.c: 57:   C.bkwo += (C.p_bat / 3600.0);
 30488  013E5E  0E00               	movlw	0
 30489  013E60  6EE6               	movwf	postinc1,c
 30490  013E62  0E00               	movlw	0
 30491  013E64  6EE6               	movwf	postinc1,c
 30492  013E66  0E61               	movlw	97
 30493  013E68  6EE6               	movwf	postinc1,c
 30494  013E6A  0E45               	movlw	69
 30495  013E6C  6EE6               	movwf	postinc1,c
 30496  013E6E  0060  F5F3  FFE6   	movff	_C+124,postinc1
 30497  013E74  0060  F5F7  FFE6   	movff	_C+125,postinc1
 30498  013E7A  0060  F5FB  FFE6   	movff	_C+126,postinc1
 30499  013E80  0060  F5FF  FFE6   	movff	_C+127,postinc1
 30500  013E86  ECE3  F0A0         	call	___fldiv	;wreg free
 30501  013E8A  0060  F007  FFE6   	movff	btemp,postinc1
 30502  013E90  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30503  013E96  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30504  013E9C  0060  F013  FFE6   	movff	btemp+3,postinc1
 30505  013EA2  0060  F673  FFE6   	movff	_C+156,postinc1
 30506  013EA8  0060  F677  FFE6   	movff	_C+157,postinc1
 30507  013EAE  0060  F67B  FFE6   	movff	_C+158,postinc1
 30508  013EB4  0060  F67F  FFE6   	movff	_C+159,postinc1
 30509  013EBA  ECC2  F099         	call	___fladd	;wreg free
 30510  013EBE  0060  F004  F19C   	movff	btemp,_C+156	;volatile
 30511  013EC4  0060  F008  F19D   	movff	btemp+1,_C+157	;volatile
 30512  013ECA  0060  F00C  F19E   	movff	btemp+2,_C+158	;volatile
 30513  013ED0  0060  F010  F19F   	movff	btemp+3,_C+159	;volatile
 30514  013ED6                     l11948:
 30515                           
 30516                           ;bsoc.c: 59:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 30517  013ED6  0E00               	movlw	0
 30518  013ED8  6EE6               	movwf	postinc1,c
 30519  013EDA  0E00               	movlw	0
 30520  013EDC  6EE6               	movwf	postinc1,c
 30521  013EDE  0EC8               	movlw	200
 30522  013EE0  6EE6               	movwf	postinc1,c
 30523  013EE2  0E42               	movlw	66
 30524  013EE4  6EE6               	movwf	postinc1,c
 30525  013EE6  0060  F623  FFE6   	movff	_C+136,postinc1
 30526  013EEC  0060  F627  FFE6   	movff	_C+137,postinc1
 30527  013EF2  0060  F62B  FFE6   	movff	_C+138,postinc1
 30528  013EF8  0060  F62F  FFE6   	movff	_C+139,postinc1
 30529  013EFE  0060  F633  FFE6   	movff	_C+140,postinc1
 30530  013F04  0060  F637  FFE6   	movff	_C+141,postinc1
 30531  013F0A  0060  F63B  FFE6   	movff	_C+142,postinc1
 30532  013F10  0060  F63F  FFE6   	movff	_C+143,postinc1
 30533  013F16  ECE3  F0A0         	call	___fldiv	;wreg free
 30534  013F1A  0060  F007  FFE6   	movff	btemp,postinc1
 30535  013F20  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30536  013F26  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30537  013F2C  0060  F013  FFE6   	movff	btemp+3,postinc1
 30538  013F32  ECAD  F095         	call	___flmul	;wreg free
 30539  013F36  0060  F007  FFE6   	movff	btemp,postinc1
 30540  013F3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30541  013F42  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30542  013F48  0060  F013  FFE6   	movff	btemp+3,postinc1
 30543  013F4E  EC2D  F0BC         	call	___fltol	;wreg free
 30544  013F52  0060  F004  F00B   	movff	btemp,btemp+10
 30545  013F58  0060  F008  F00C   	movff	btemp+1,btemp+11
 30546  013F5E  0E01               	movlw	1
 30547  013F60  240B               	addwf	(btemp+10)^0,w,c
 30548  013F62  0101               	movlb	1	; () banked
 30549  013F64  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
 30550  013F66  0E00               	movlw	0
 30551  013F68  200C               	addwfc	(btemp+11)^0,w,c
 30552  013F6A  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
 30553                           
 30554                           ; BSR set to: 1
 30555                           ;bsoc.c: 60:  if (C.soc > 100)
 30556  013F6C  51AB               	movf	(_C+171)& (0+255),w,b	;volatile
 30557  013F6E  E104               	bnz	u1172_20
 30558  013F70  0E65               	movlw	101
 30559  013F72  5DAA               	subwf	(_C+170)& (0+255),w,b	;volatile
 30560  013F74  A0D8               	btfss	status,0,c
 30561  013F76  D004               	goto	l11954
 30562  013F78                     u1172_20:
 30563                           
 30564                           ; BSR set to: 1
 30565                           ;bsoc.c: 61:   C.soc = 100;
 30566  013F78  0E00               	movlw	0
 30567  013F7A  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
 30568  013F7C  0E64               	movlw	100
 30569  013F7E  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
 30570  013F80                     l11954:
 30571                           
 30572                           ; BSR set to: 1
 30573                           ;bsoc.c: 63:  if (C.c_bat < 0.0) {
 30574  013F80  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 30575  013F82  D043               	goto	l11958
 30576                           
 30577                           ; BSR set to: 1
 30578                           ;bsoc.c: 64:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 30579  013F84  0060  F513  FFE6   	movff	_C+68,postinc1
 30580  013F8A  0060  F517  FFE6   	movff	_C+69,postinc1
 30581  013F90  0060  F51B  FFE6   	movff	_C+70,postinc1
 30582  013F96  0060  F51F  FFE6   	movff	_C+71,postinc1
 30583  013F9C  0060  F633  FFE6   	movff	_C+140,postinc1
 30584  013FA2  0060  F637  FFE6   	movff	_C+141,postinc1
 30585  013FA8  0060  F63B  FFE6   	movff	_C+142,postinc1
 30586  013FAE  0060  F63F  FFE6   	movff	_C+143,postinc1
 30587  013FB4  ECE3  F0A0         	call	___fldiv	;wreg free
 30588  013FB8  0060  F007  FFE6   	movff	btemp,postinc1
 30589  013FBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30590  013FC4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30591  013FCA  0060  F013  FFE6   	movff	btemp+3,postinc1
 30592  013FD0  EC60  F0CE         	call	___flneg	;wreg free
 30593  013FD4  0060  F007  FFE6   	movff	btemp,postinc1
 30594  013FDA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30595  013FE0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30596  013FE6  0060  F013  FFE6   	movff	btemp+3,postinc1
 30597  013FEC  EC2D  F0BC         	call	___fltol	;wreg free
 30598  013FF0  0060  F004  F00B   	movff	btemp,btemp+10
 30599  013FF6  0060  F008  F00C   	movff	btemp+1,btemp+11
 30600  013FFC  0060  F02C  F1A8   	movff	btemp+10,_C+168	;volatile
 30601  014002  0060  F030  F1A9   	movff	btemp+11,_C+169	;volatile
 30602                           
 30603                           ;bsoc.c: 65:  } else {
 30604  014008  D004               	goto	l11960
 30605  01400A                     l11958:
 30606                           
 30607                           ; BSR set to: 1
 30608                           ;bsoc.c: 66:   C.runtime = 120;
 30609  01400A  0E00               	movlw	0
 30610  01400C  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
 30611  01400E  0E78               	movlw	120
 30612  014010  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
 30613  014012                     l11960:
 30614                           
 30615                           ;bsoc.c: 68:  if (C.runtime > 120)
 30616  014012  0101               	movlb	1	; () banked
 30617  014014  51A9               	movf	(_C+169)& (0+255),w,b	;volatile
 30618  014016  E104               	bnz	u1174_20
 30619  014018  0E79               	movlw	121
 30620  01401A  5DA8               	subwf	(_C+168)& (0+255),w,b	;volatile
 30621  01401C  A0D8               	btfss	status,0,c
 30622  01401E  D004               	goto	l11964
 30623  014020                     u1174_20:
 30624                           
 30625                           ; BSR set to: 1
 30626                           ;bsoc.c: 69:   C.runtime = 120;
 30627  014020  0E00               	movlw	0
 30628  014022  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
 30629  014024  0E78               	movlw	120
 30630  014026  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
 30631  014028                     l11964:
 30632                           
 30633                           ; BSR set to: 1
 30634                           ;bsoc.c: 71:  V.lowint_count++;
 30635  014028  0E01               	movlw	1
 30636  01402A  0102               	movlb	2	; () banked
 30637  01402C  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 30638  01402E  0E00               	movlw	0
 30639  014030  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 30640  014032  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 30641  014034  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 30642                           
 30643                           ; BSR set to: 2
 30644                           ;bsoc.c: 73:  log_ptr = port_data_dma_ptr();
 30645  014036  EC9A  F0D4         	call	_port_data_dma_ptr	;wreg free
 30646                           
 30647                           ;stkvar	_log_ptr @ sp[(-2)+0]
 30648  01403A  0EFF               	movlw	-1
 30649  01403C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30650  014042  0EFE               	movlw	-2
 30651  014044  0060  F007  FFE3   	movff	btemp,plusw1
 30652                           
 30653                           ;bsoc.c: 74:  sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,%
      +                          4.3f,%4.3f,%4.3f,%4.3d,%4.3d\r\n",
 30654  01404A  0060  F6A3  FFE6   	movff	_C+168,postinc1
 30655  014050  0060  F6A7  FFE6   	movff	_C+169,postinc1
 30656  014056  0060  F6AB  FFE6   	movff	_C+170,postinc1
 30657  01405C  0060  F6AF  FFE6   	movff	_C+171,postinc1
 30658  014062  0060  F643  FFE6   	movff	_C+144,postinc1
 30659  014068  0060  F647  FFE6   	movff	_C+145,postinc1
 30660  01406E  0060  F64B  FFE6   	movff	_C+146,postinc1
 30661  014074  0060  F64F  FFE6   	movff	_C+147,postinc1
 30662  01407A  0060  F633  FFE6   	movff	_C+140,postinc1
 30663  014080  0060  F637  FFE6   	movff	_C+141,postinc1
 30664  014086  0060  F63B  FFE6   	movff	_C+142,postinc1
 30665  01408C  0060  F63F  FFE6   	movff	_C+143,postinc1
 30666  014092  0060  F5D3  FFE6   	movff	_C+116,postinc1
 30667  014098  0060  F5D7  FFE6   	movff	_C+117,postinc1
 30668  01409E  0060  F5DB  FFE6   	movff	_C+118,postinc1
 30669  0140A4  0060  F5DF  FFE6   	movff	_C+119,postinc1
 30670  0140AA  0060  F5C3  FFE6   	movff	_C+112,postinc1
 30671  0140B0  0060  F5C7  FFE6   	movff	_C+113,postinc1
 30672  0140B6  0060  F5CB  FFE6   	movff	_C+114,postinc1
 30673  0140BC  0060  F5CF  FFE6   	movff	_C+115,postinc1
 30674  0140C2  0060  F5E3  FFE6   	movff	_C+120,postinc1
 30675  0140C8  0060  F5E7  FFE6   	movff	_C+121,postinc1
 30676  0140CE  0060  F5EB  FFE6   	movff	_C+122,postinc1
 30677  0140D4  0060  F5EF  FFE6   	movff	_C+123,postinc1
 30678  0140DA  0060  F5F3  FFE6   	movff	_C+124,postinc1
 30679  0140E0  0060  F5F7  FFE6   	movff	_C+125,postinc1
 30680  0140E6  0060  F5FB  FFE6   	movff	_C+126,postinc1
 30681  0140EC  0060  F5FF  FFE6   	movff	_C+127,postinc1
 30682  0140F2  0060  F593  FFE6   	movff	_C+100,postinc1
 30683  0140F8  0060  F597  FFE6   	movff	_C+101,postinc1
 30684  0140FE  0060  F59B  FFE6   	movff	_C+102,postinc1
 30685  014104  0060  F59F  FFE6   	movff	_C+103,postinc1
 30686  01410A  0060  F533  FFE6   	movff	_C+76,postinc1
 30687  014110  0060  F537  FFE6   	movff	_C+77,postinc1
 30688  014116  0060  F53B  FFE6   	movff	_C+78,postinc1
 30689  01411C  0060  F53F  FFE6   	movff	_C+79,postinc1
 30690  014122  0060  F543  FFE6   	movff	_C+80,postinc1
 30691  014128  0060  F547  FFE6   	movff	_C+81,postinc1
 30692  01412E  0060  F54B  FFE6   	movff	_C+82,postinc1
 30693  014134  0060  F54F  FFE6   	movff	_C+83,postinc1
 30694  01413A  0060  F553  FFE6   	movff	_C+84,postinc1
 30695  014140  0060  F557  FFE6   	movff	_C+85,postinc1
 30696  014146  0060  F55B  FFE6   	movff	_C+86,postinc1
 30697  01414C  0060  F55F  FFE6   	movff	_C+87,postinc1
 30698  014152  0060  FA07  FFE6   	movff	_V+129,postinc1
 30699  014158  0060  FA0B  FFE6   	movff	_V+130,postinc1
 30700  01415E  0060  FA0F  FFE6   	movff	_V+131,postinc1
 30701  014164  0060  FA13  FFE6   	movff	_V+132,postinc1
 30702  01416A  0ECD               	movlw	low STR_47
 30703  01416C  6EE6               	movwf	postinc1,c
 30704  01416E  0EFD               	movlw	high STR_47
 30705  014170  6EE6               	movwf	postinc1,c
 30706                           
 30707                           ;stkvar	_log_ptr @ sp[(-52)+0]
 30708  014172  0ECC               	movlw	-52
 30709  014174  006F FF8F FFE6     	movff	plusw1,postinc1
 30710  01417A  006F FF8F FFE6     	movff	plusw1,postinc1
 30711  014180  0E34               	movlw	52
 30712  014182  6EE6               	movwf	postinc1,c
 30713  014184  EC45  F0C4         	call	_sprintf	;wreg free
 30714                           
 30715                           ; BSR set to: 0
 30716                           ;bsoc.c: 79:  StartTimer(TMR_DISPLAY, 125);
 30717  014188  0E7D               	movlw	125
 30718  01418A  6EE6               	movwf	postinc1,c
 30719  01418C  0E00               	movlw	0
 30720  01418E  6EE6               	movwf	postinc1,c
 30721  014190  0E0A               	movlw	10
 30722  014192  6EE6               	movwf	postinc1,c
 30723  014194  EC76  F0CF         	call	_StartTimer	;wreg free
 30724                           
 30725                           ;bsoc.c: 80:  send_port_data_dma(strlen((char*) log_ptr));
 30726                           ;stkvar	_log_ptr @ sp[(-2)+0]
 30727  014198  0EFE               	movlw	-2
 30728  01419A  006F FF8F FFE6     	movff	plusw1,postinc1
 30729  0141A0  006F FF8F FFE6     	movff	plusw1,postinc1
 30730  0141A6  ECB4  F0C8         	call	_strlen	;wreg free
 30731  0141AA  0060  F007  FFE6   	movff	btemp,postinc1
 30732  0141B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30733  0141B6  ECEB  F0CD         	call	_send_port_data_dma	;wreg free
 30734                           
 30735                           ; BSR set to: 59
 30736                           ;bsoc.c: 81:  C.update = 0;
 30737  0141BA  0101               	movlb	1	; () banked
 30738  0141BC  6BAC               	clrf	(_C+172)& (0+255),b	;volatile
 30739                           
 30740                           ; BSR set to: 1
 30741  0141BE  92BE               	bcf	190,1,c	;volatile
 30742                           
 30743                           ; BSR set to: 1
 30744                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 30745  0141C0  52E5               	movf	postdec1,f,c
 30746  0141C2  52E5               	movf	postdec1,f,c
 30747  0141C4  0012               	return		;funcret
 30748  0141C6                     __end_of_calc_bsoc:
 30749                           	opt callstack 0
 30750                           
 30751 ;; *************** function _send_port_data_dma *****************
 30752 ;; Defined at:
 30753 ;;		line 258 in file "eadog.c"
 30754 ;; Parameters:    Size  Location     Type
 30755 ;;  dsize           2  [STACK] unsigned short 
 30756 ;; Auto vars:     Size  Location     Type
 30757 ;;		None
 30758 ;; Return value:  Size  Location     Type
 30759 ;;                  1  [STACK] void 
 30760 ;; Registers used:
 30761 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 30762 ;; Tracked objects:
 30763 ;;		On entry : 0/0
 30764 ;;		On exit  : 3F/3B
 30765 ;;		Unchanged: 0/0
 30766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30771 ;;Total ram usage:        0 bytes
 30772 ;; Hardware stack levels used:    1
 30773 ;; Hardware stack levels required when called:    3
 30774 ;; This function calls:
 30775 ;;		Nothing
 30776 ;; This function is called by:
 30777 ;;		_calc_bsoc
 30778 ;; This function uses a reentrant model
 30779 ;;
 30780                           
 30781                           	psect	text144
 30782  019BD6                     __ptext144:
 30783                           	opt callstack 0
 30784  019BD6                     _send_port_data_dma:
 30785                           	opt callstack 11
 30786                           
 30787                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 30788                           ;stkvar	_dsize @ sp[(0)+-2]
 30789                           
 30790                           ; BSR set to: 1
 30791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30792                           ;incstack = 0
 30793  019BD6  0EFE               	movlw	-2
 30794  019BD8  04E3               	decf	plusw1,w,c
 30795  019BDA  0EFF               	movlw	-1
 30796  019BDC  006F FF8C  F001    	movff	plusw1,btemp
 30797  019BE2  0E02               	movlw	2
 30798  019BE4  5A01               	subwfb	btemp^0,f,c
 30799  019BE6  A0D8               	btfss	status,0,c
 30800  019BE8  D00C               	goto	l9194
 30801                           
 30802                           ;eadog.c: 261:   dsize = 512;
 30803  019BEA  0E00               	movlw	0
 30804  019BEC  6E0B               	movwf	(btemp+10)^0,c
 30805  019BEE  0E02               	movlw	2
 30806  019BF0  6E0C               	movwf	(btemp+11)^0,c
 30807                           
 30808                           ;stkvar	_dsize @ sp[(0)+-2]
 30809  019BF2  0EFE               	movlw	-2
 30810  019BF4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30811  019BFA  0EFF               	movlw	-1
 30812  019BFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 30813  019C02                     l9194:
 30814                           
 30815                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 30816  019C02  013B               	movlb	59	; () banked
 30817  019C04  9FDC               	bcf	220,7,b	;volatile
 30818                           
 30819                           ; BSR set to: 59
 30820                           ;eadog.c: 264:  DMA2SSZ = dsize;
 30821                           ;stkvar	_dsize @ sp[(0)+-2]
 30822  019C06  0EFE               	movlw	-2
 30823  019C08  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 30824  019C0E  0EFF               	movlw	-1
 30825  019C10  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 30826                           
 30827                           ; BSR set to: 59
 30828                           ;eadog.c: 265:  DMA2DSZ = 1;
 30829  019C16  0E00               	movlw	0
 30830  019C18  6FCF               	movwf	207,b	;volatile
 30831  019C1A  0E01               	movlw	1
 30832  019C1C  6FCE               	movwf	206,b	;volatile
 30833                           
 30834                           ; BSR set to: 59
 30835                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 30836  019C1E  8FDC               	bsf	220,7,b	;volatile
 30837                           
 30838                           ; BSR set to: 59
 30839                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 30840  019C20  8DDC               	bsf	220,6,b	;volatile
 30841                           
 30842                           ; BSR set to: 59
 30843                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 30844  019C22  52E5               	movf	postdec1,f,c
 30845  019C24  52E5               	movf	postdec1,f,c
 30846  019C26  0012               	return		;funcret
 30847  019C28                     __end_of_send_port_data_dma:
 30848                           	opt callstack 0
 30849                           
 30850 ;; *************** function _port_data_dma_ptr *****************
 30851 ;; Defined at:
 30852 ;;		line 273 in file "eadog.c"
 30853 ;; Parameters:    Size  Location     Type
 30854 ;;		None
 30855 ;; Auto vars:     Size  Location     Type
 30856 ;;		None
 30857 ;; Return value:  Size  Location     Type
 30858 ;;                  2  [STACK] PTR unsigned char 
 30859 ;; Registers used:
 30860 ;;		wreg, status,2, status,0, btemp, btemp+1
 30861 ;; Tracked objects:
 30862 ;;		On entry : 3F/2
 30863 ;;		On exit  : 0/0
 30864 ;;		Unchanged: 0/0
 30865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30870 ;;Total ram usage:        0 bytes
 30871 ;; Hardware stack levels used:    1
 30872 ;; Hardware stack levels required when called:    3
 30873 ;; This function calls:
 30874 ;;		Nothing
 30875 ;; This function is called by:
 30876 ;;		_calc_bsoc
 30877 ;; This function uses a reentrant model
 30878 ;;
 30879                           
 30880                           	psect	text145
 30881  01A934                     __ptext145:
 30882                           	opt callstack 0
 30883  01A934                     _port_data_dma_ptr:
 30884                           	opt callstack 11
 30885                           
 30886                           ;eadog.c: 275:  return port_data;
 30887                           
 30888                           ; BSR set to: 59
 30889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30890                           ;incstack = 0
 30891  01A934  0EFF               	movlw	low _port_data
 30892  01A936  6E01               	movwf	btemp^0,c
 30893  01A938  0E05               	movlw	high _port_data
 30894  01A93A  6E02               	movwf	(btemp+1)^0,c
 30895                           
 30896                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30897  01A93C  0012               	return		;funcret
 30898  01A93E                     __end_of_port_data_dma_ptr:
 30899                           	opt callstack 0
 30900                           
 30901 ;; *************** function _INT0_ISR *****************
 30902 ;; Defined at:
 30903 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 30904 ;; Parameters:    Size  Location     Type
 30905 ;;		None
 30906 ;; Auto vars:     Size  Location     Type
 30907 ;;		None
 30908 ;; Return value:  Size  Location     Type
 30909 ;;                  1    wreg      void 
 30910 ;; Registers used:
 30911 ;;		wreg, status,2, status,0, pclath, tosl
 30912 ;; Tracked objects:
 30913 ;;		On entry : 0/0
 30914 ;;		On exit  : 0/0
 30915 ;;		Unchanged: 0/0
 30916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30921 ;;Total ram usage:        0 bytes
 30922 ;; Hardware stack levels used:    1
 30923 ;; Hardware stack levels required when called:    2
 30924 ;; This function calls:
 30925 ;;		_INT0_CallBack
 30926 ;; This function is called by:
 30927 ;;		Interrupt level 2
 30928 ;; This function uses a non-reentrant model
 30929 ;;
 30930                           
 30931                           	psect	text146
 30932  01A90C                     __ptext146:
 30933                           	opt callstack 0
 30934  01A90C                     _INT0_ISR:
 30935                           	opt callstack 3
 30936                           
 30937                           ;incstack = 0
 30938  01A90C  EE14  F0C2         	lfsr	1,___inthi_sp
 30939                           
 30940                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 30941  01A910  0139               	movlb	57	; () banked
 30942  01A912  91A1               	bcf	161,0,b	;volatile
 30943                           
 30944                           ; BSR set to: 57
 30945                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 30946  01A914  EC4A  F0D3         	call	_INT0_CallBack	;wreg free
 30947  01A918  0011               	retfie		f
 30948  01A91A                     __end_of_INT0_ISR:
 30949                           	opt callstack 0
 30950                           
 30951 ;; *************** function _INT0_CallBack *****************
 30952 ;; Defined at:
 30953 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 30954 ;; Parameters:    Size  Location     Type
 30955 ;;		None
 30956 ;; Auto vars:     Size  Location     Type
 30957 ;;		None
 30958 ;; Return value:  Size  Location     Type
 30959 ;;                  1  [STACK] void 
 30960 ;; Registers used:
 30961 ;;		wreg, status,2, status,0, pclath, tosl
 30962 ;; Tracked objects:
 30963 ;;		On entry : 3F/39
 30964 ;;		On exit  : 0/0
 30965 ;;		Unchanged: 0/0
 30966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30971 ;;Total ram usage:        0 bytes
 30972 ;; Hardware stack levels used:    1
 30973 ;; Hardware stack levels required when called:    1
 30974 ;; This function calls:
 30975 ;;		Absolute function
 30976 ;;		_INT0_DefaultInterruptHandler
 30977 ;; This function is called by:
 30978 ;;		_INT0_ISR
 30979 ;; This function uses a reentrant model
 30980 ;;
 30981                           
 30982                           	psect	text147
 30983  01A694                     __ptext147:
 30984                           	opt callstack 0
 30985  01A694                     _INT0_CallBack:
 30986                           	opt callstack 3
 30987                           
 30988                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 30989                           
 30990                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30991                           ;incstack = 0
 30992  01A694  0100               	movlb	0	; () banked
 30993  01A696  51A3               	movf	_INT0_InterruptHandler& (0+255),w,b
 30994  01A698  11A4               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 30995  01A69A  11A5               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 30996  01A69C  B4D8               	btfsc	status,2,c
 30997  01A69E  0012               	return	
 30998                           
 30999                           ; BSR set to: 0
 31000                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 31001  01A6A0  D801               	call	u930_48
 31002  01A6A2  0012               	return	
 31003  01A6A4                     u930_48:
 31004  01A6A4  0005               	push	
 31005  01A6A6  6EFA               	movwf	pclath,c
 31006  01A6A8  51A3               	movf	_INT0_InterruptHandler& (0+255),w,b
 31007  01A6AA  6EFD               	movwf	tosl,c
 31008  01A6AC  51A4               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 31009  01A6AE  6EFE               	movwf	tosh,c
 31010  01A6B0  51A5               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 31011  01A6B2  6EFF               	movwf	tosu,c
 31012  01A6B4  50FA               	movf	pclath,w,c
 31013  01A6B6  0012               	return		;indir
 31014  01A6B8                     __end_of_INT0_CallBack:
 31015                           	opt callstack 0
 31016                           
 31017 ;; *************** function _INT0_DefaultInterruptHandler *****************
 31018 ;; Defined at:
 31019 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 31020 ;; Parameters:    Size  Location     Type
 31021 ;;		None
 31022 ;; Auto vars:     Size  Location     Type
 31023 ;;		None
 31024 ;; Return value:  Size  Location     Type
 31025 ;;                  1  [STACK] void 
 31026 ;; Registers used:
 31027 ;;		None
 31028 ;; Tracked objects:
 31029 ;;		On entry : 3F/0
 31030 ;;		On exit  : 0/0
 31031 ;;		Unchanged: 0/0
 31032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31037 ;;Total ram usage:        0 bytes
 31038 ;; Hardware stack levels used:    1
 31039 ;; This function calls:
 31040 ;;		Nothing
 31041 ;; This function is called by:
 31042 ;;		_EXT_INT_Initialize
 31043 ;;		_INT0_CallBack
 31044 ;; This function uses a reentrant model
 31045 ;;
 31046                           
 31047                           	psect	text148
 31048  01A9B6                     __ptext148:
 31049                           	opt callstack 0
 31050  01A9B6                     _INT0_DefaultInterruptHandler:
 31051                           	opt callstack 3
 31052                           
 31053                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31054                           
 31055                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31056                           ;incstack = 0
 31057  01A9B6  0012               	return		;funcret
 31058  01A9B8                     __end_of_INT0_DefaultInterruptHandler:
 31059                           	opt callstack 0
 31060                           
 31061 ;; *************** function _Default_ISR *****************
 31062 ;; Defined at:
 31063 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 31064 ;; Parameters:    Size  Location     Type
 31065 ;;		None
 31066 ;; Auto vars:     Size  Location     Type
 31067 ;;		None
 31068 ;; Return value:  Size  Location     Type
 31069 ;;                  1    wreg      void 
 31070 ;; Registers used:
 31071 ;;		None
 31072 ;; Tracked objects:
 31073 ;;		On entry : 0/0
 31074 ;;		On exit  : 0/0
 31075 ;;		Unchanged: 0/0
 31076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31081 ;;Total ram usage:        0 bytes
 31082 ;; Hardware stack levels used:    1
 31083 ;; This function calls:
 31084 ;;		Nothing
 31085 ;; This function is called by:
 31086 ;;		Interrupt level 2
 31087 ;; This function uses a non-reentrant model
 31088 ;;
 31089                           
 31090                           	psect	text149
 31091  01A9AC                     __ptext149:
 31092                           	opt callstack 0
 31093  01A9AC                     _Default_ISR:
 31094                           	opt callstack 5
 31095                           
 31096                           ;incstack = 0
 31097  01A9AC  EE14  F0C2         	lfsr	1,___inthi_sp
 31098  01A9B0  0011               	retfie		f
 31099  01A9B2                     __end_of_Default_ISR:
 31100                           	opt callstack 0
 31101                           
 31102 ;; *************** function _ADCC_ISR *****************
 31103 ;; Defined at:
 31104 ;;		line 314 in file "mcc_generated_files/adcc.c"
 31105 ;; Parameters:    Size  Location     Type
 31106 ;;		None
 31107 ;; Auto vars:     Size  Location     Type
 31108 ;;		None
 31109 ;; Return value:  Size  Location     Type
 31110 ;;                  1    wreg      void 
 31111 ;; Registers used:
 31112 ;;		wreg, status,2, status,0, pclath, tosl
 31113 ;; Tracked objects:
 31114 ;;		On entry : 0/0
 31115 ;;		On exit  : 0/0
 31116 ;;		Unchanged: 0/0
 31117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31122 ;;Total ram usage:        0 bytes
 31123 ;; Hardware stack levels used:    1
 31124 ;; Hardware stack levels required when called:    1
 31125 ;; This function calls:
 31126 ;;		Absolute function
 31127 ;;		_ADCC_DefaultInterruptHandler
 31128 ;;		_adc_int_handler
 31129 ;; This function is called by:
 31130 ;;		Interrupt level 2
 31131 ;; This function uses a non-reentrant model
 31132 ;;
 31133                           
 31134                           	psect	text150
 31135  01A2B4                     __ptext150:
 31136                           	opt callstack 0
 31137  01A2B4                     _ADCC_ISR:
 31138                           	opt callstack 4
 31139                           
 31140                           ;incstack = 0
 31141  01A2B4  EE14  F0C2         	lfsr	1,___inthi_sp
 31142                           
 31143                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 31144  01A2B8  0139               	movlb	57	; () banked
 31145  01A2BA  95A1               	bcf	161,2,b	;volatile
 31146                           
 31147                           ; BSR set to: 57
 31148                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 31149  01A2BC  0100               	movlb	0	; () banked
 31150  01A2BE  5194               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 31151  01A2C0  1195               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 31152  01A2C2  1196               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 31153  01A2C4  B4D8               	btfsc	status,2,c
 31154  01A2C6  0011               	retfie		f
 31155                           
 31156                           ; BSR set to: 0
 31157                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 31158  01A2C8  D801               	call	i2u968_48
 31159  01A2CA  0011               	retfie		f
 31160  01A2CC                     i2u968_48:
 31161  01A2CC  0005               	push	
 31162  01A2CE  6EFA               	movwf	pclath,c
 31163  01A2D0  5194               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 31164  01A2D2  6EFD               	movwf	tosl,c
 31165  01A2D4  5195               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 31166  01A2D6  6EFE               	movwf	tosh,c
 31167  01A2D8  5196               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 31168  01A2DA  6EFF               	movwf	tosu,c
 31169  01A2DC  50FA               	movf	pclath,w,c
 31170  01A2DE  0012               	return		;indir
 31171  01A2E0                     __end_of_ADCC_ISR:
 31172                           	opt callstack 0
 31173                           
 31174 ;; *************** function _adc_int_t_handler *****************
 31175 ;; Defined at:
 31176 ;;		line 128 in file "daq.c"
 31177 ;; Parameters:    Size  Location     Type
 31178 ;;		None
 31179 ;; Auto vars:     Size  Location     Type
 31180 ;;		None
 31181 ;; Return value:  Size  Location     Type
 31182 ;;                  1  [STACK] void 
 31183 ;; Registers used:
 31184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 31185 ;; Tracked objects:
 31186 ;;		On entry : 3F/0
 31187 ;;		On exit  : 1/0
 31188 ;;		Unchanged: 0/0
 31189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31194 ;;Total ram usage:        0 bytes
 31195 ;; Hardware stack levels used:    1
 31196 ;; Hardware stack levels required when called:    1
 31197 ;; This function calls:
 31198 ;;		_ADCC_DischargeSampleCapacitor
 31199 ;;		_ADCC_StartConversion
 31200 ;; This function is called by:
 31201 ;;		_start_adc_scan
 31202 ;;		_ADCC_ThresholdISR
 31203 ;; This function uses a reentrant model
 31204 ;;
 31205                           
 31206                           	psect	text151
 31207  019678                     __ptext151:
 31208                           	opt callstack 0
 31209  019678                     _adc_int_t_handler:
 31210                           	opt callstack 3
 31211                           
 31212                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 31213                           
 31214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31215                           ;incstack = 0
 31216  019678  013E               	movlb	62	; () banked
 31217  01967A  51E6               	movf	230,w,b	;volatile
 31218  01967C  006F FB9C  F001    	movff	16103,btemp	;volatile
 31219  019682  6A02               	clrf	(btemp+1)^0,c
 31220  019684  0060  F004  F002   	movff	btemp,btemp+1
 31221  01968A  6A01               	clrf	btemp^0,c
 31222  01968C  2601               	addwf	btemp^0,f,c
 31223  01968E  0E00               	movlw	0
 31224  019690  2202               	addwfc	(btemp+1)^0,f,c
 31225  019692  0100               	movlb	0	; () banked
 31226  019694  51CE               	movf	(_R+36)& (0+255),w,b	;volatile
 31227  019696  0D02               	mullw	2
 31228  019698  50F3               	movf	243,w,c
 31229  01969A  0FAA               	addlw	low _R
 31230  01969C  6ED9               	movwf	fsr2l,c
 31231  01969E  6ADA               	clrf	fsr2h,c
 31232  0196A0  0060  F007  FFDE   	movff	btemp,postinc2
 31233  0196A6  0060  F00B  FFDD   	movff	btemp+1,postdec2
 31234  0196AC                     l10362:
 31235                           
 31236                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 31237  0196AC  0100               	movlb	0	; () banked
 31238  0196AE  2BCE               	incf	(_R+36)& (0+255),f,b	;volatile
 31239  0196B0  0E0D               	movlw	13
 31240  0196B2  65CE               	cpfsgt	(_R+36)& (0+255),b	;volatile
 31241  0196B4  D003               	goto	l10368
 31242                           
 31243                           ; BSR set to: 0
 31244                           ;daq.c: 136:    R.done = 1;
 31245  0196B6  0E01               	movlw	1
 31246  0196B8  6FD1               	movwf	(_R+39)& (0+255),b	;volatile
 31247  0196BA  0012               	return	
 31248  0196BC                     l10368:
 31249                           
 31250                           ; BSR set to: 0
 31251                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 31252  0196BC  0060  F338  F00C   	movff	_R+36,btemp+11	;volatile
 31253  0196C2  EE20  F0CF         	lfsr	2,_R+37	;volatile
 31254  0196C6  006F FF78  F009    	movff	postinc2,btemp+8
 31255  0196CC  006F FF74  F00A    	movff	postdec2,btemp+9
 31256  0196D2  2A0C               	incf	(btemp+11)^0,f,c
 31257  0196D4  D003               	goto	u965_44
 31258  0196D6                     u965_45:
 31259  0196D6  90D8               	bcf	status,0,c
 31260  0196D8  320A               	rrcf	(btemp+9)^0,f,c
 31261  0196DA  3209               	rrcf	(btemp+8)^0,f,c
 31262  0196DC                     u965_44:
 31263  0196DC  2E0C               	decfsz	(btemp+11)^0,f,c
 31264  0196DE  D7FB               	goto	u965_45
 31265  0196E0  A009               	btfss	(btemp+8)^0,0,c
 31266  0196E2  D7E4               	goto	l10362
 31267                           
 31268                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 31269  0196E4  ECB1  F0D4         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 31270                           
 31271                           ; BSR set to: 62
 31272                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 31273  0196E8  0100               	movlb	0	; () banked
 31274  0196EA  51CE               	movf	(_R+36)& (0+255),w,b	;volatile
 31275  0196EC  0B0F               	andlw	15
 31276  0196EE  6EE6               	movwf	postinc1,c
 31277  0196F0  EC56  F0D4         	call	_ADCC_StartConversion	;wreg free
 31278                           
 31279                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31280  0196F4  0012               	return		;funcret
 31281  0196F6                     __end_of_adc_int_t_handler:
 31282                           	opt callstack 0
 31283                           
 31284 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 31285 ;; Defined at:
 31286 ;;		line 339 in file "mcc_generated_files/adcc.c"
 31287 ;; Parameters:    Size  Location     Type
 31288 ;;		None
 31289 ;; Auto vars:     Size  Location     Type
 31290 ;;		None
 31291 ;; Return value:  Size  Location     Type
 31292 ;;                  1  [STACK] void 
 31293 ;; Registers used:
 31294 ;;		None
 31295 ;; Tracked objects:
 31296 ;;		On entry : 3F/0
 31297 ;;		On exit  : 0/0
 31298 ;;		Unchanged: 0/0
 31299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31304 ;;Total ram usage:        0 bytes
 31305 ;; Hardware stack levels used:    1
 31306 ;; This function calls:
 31307 ;;		Nothing
 31308 ;; This function is called by:
 31309 ;;		_ADCC_Initialize
 31310 ;;		_ADCC_ISR
 31311 ;;		_ADCC_ThresholdISR
 31312 ;; This function uses a reentrant model
 31313 ;;
 31314                           
 31315                           	psect	text152
 31316  01A9B8                     __ptext152:
 31317                           	opt callstack 0
 31318  01A9B8                     _ADCC_DefaultInterruptHandler:
 31319                           	opt callstack 4
 31320                           
 31321                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31322                           
 31323                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31324                           ;incstack = 0
 31325  01A9B8  0012               	return		;funcret
 31326  01A9BA                     __end_of_ADCC_DefaultInterruptHandler:
 31327                           	opt callstack 0
 31328                           
 31329 ;; *************** function _adc_int_handler *****************
 31330 ;; Defined at:
 31331 ;;		line 118 in file "daq.c"
 31332 ;; Parameters:    Size  Location     Type
 31333 ;;		None
 31334 ;; Auto vars:     Size  Location     Type
 31335 ;;		None
 31336 ;; Return value:  Size  Location     Type
 31337 ;;                  1  [STACK] void 
 31338 ;; Registers used:
 31339 ;;		None
 31340 ;; Tracked objects:
 31341 ;;		On entry : 3F/0
 31342 ;;		On exit  : 0/0
 31343 ;;		Unchanged: 0/0
 31344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31349 ;;Total ram usage:        0 bytes
 31350 ;; Hardware stack levels used:    1
 31351 ;; This function calls:
 31352 ;;		Nothing
 31353 ;; This function is called by:
 31354 ;;		_start_adc_scan
 31355 ;;		_ADCC_ISR
 31356 ;; This function uses a reentrant model
 31357 ;;
 31358                           
 31359                           	psect	text153
 31360  01A9BA                     __ptext153:
 31361                           	opt callstack 0
 31362  01A9BA                     _adc_int_handler:
 31363                           	opt callstack 4
 31364                           
 31365                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31366                           
 31367                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31368                           ;incstack = 0
 31369  01A9BA  0012               	return		;funcret
 31370  01A9BC                     __end_of_adc_int_handler:
 31371                           	opt callstack 0
 31372                           
 31373 ;; *************** function _ADCC_ThresholdISR *****************
 31374 ;; Defined at:
 31375 ;;		line 327 in file "mcc_generated_files/adcc.c"
 31376 ;; Parameters:    Size  Location     Type
 31377 ;;		None
 31378 ;; Auto vars:     Size  Location     Type
 31379 ;;		None
 31380 ;; Return value:  Size  Location     Type
 31381 ;;                  1    wreg      void 
 31382 ;; Registers used:
 31383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 31384 ;; Tracked objects:
 31385 ;;		On entry : 0/0
 31386 ;;		On exit  : 0/0
 31387 ;;		Unchanged: 0/0
 31388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31391 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31392 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31393 ;;Total ram usage:        5 bytes
 31394 ;; Hardware stack levels used:    1
 31395 ;; Hardware stack levels required when called:    2
 31396 ;; This function calls:
 31397 ;;		Absolute function
 31398 ;;		_ADCC_DefaultInterruptHandler
 31399 ;;		_adc_int_t_handler
 31400 ;; This function is called by:
 31401 ;;		Interrupt level 2
 31402 ;; This function uses a non-reentrant model
 31403 ;;
 31404                           
 31405                           	psect	text154
 31406  0197CC                     __ptext154:
 31407                           	opt callstack 0
 31408  0197CC                     _ADCC_ThresholdISR:
 31409                           	opt callstack 3
 31410                           
 31411                           ;incstack = 0
 31412  0197CC  0060  F004  F038   	movff	btemp,??_ADCC_ThresholdISR
 31413  0197D2  0060  F008  F039   	movff	btemp+1,??_ADCC_ThresholdISR+1
 31414  0197D8  0060  F024  F03A   	movff	btemp+8,??_ADCC_ThresholdISR+2
 31415  0197DE  0060  F028  F03B   	movff	btemp+9,??_ADCC_ThresholdISR+3
 31416  0197E4  0060  F030  F03C   	movff	btemp+11,??_ADCC_ThresholdISR+4
 31417  0197EA  EE14  F0C2         	lfsr	1,___inthi_sp
 31418                           
 31419                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 31420  0197EE  0139               	movlb	57	; () banked
 31421  0197F0  97A1               	bcf	161,3,b	;volatile
 31422                           
 31423                           ; BSR set to: 57
 31424                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 31425  0197F2  0100               	movlb	0	; () banked
 31426  0197F4  5191               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 31427  0197F6  1192               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 31428  0197F8  1193               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 31429  0197FA  B4D8               	btfsc	status,2,c
 31430  0197FC  D00C               	goto	i2u970_49
 31431                           
 31432                           ; BSR set to: 0
 31433                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 31434  0197FE  D801               	call	i2u970_48
 31435  019800  D00A               	goto	i2u970_49
 31436  019802                     i2u970_48:
 31437  019802  0005               	push	
 31438  019804  6EFA               	movwf	pclath,c
 31439  019806  5191               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 31440  019808  6EFD               	movwf	tosl,c
 31441  01980A  5192               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 31442  01980C  6EFE               	movwf	tosh,c
 31443  01980E  5193               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 31444  019810  6EFF               	movwf	tosu,c
 31445  019812  50FA               	movf	pclath,w,c
 31446  019814  0012               	return		;indir
 31447  019816                     i2u970_49:
 31448  019816  0060  F0F0  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 31449  01981C  0060  F0EC  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 31450  019822  0060  F0E8  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 31451  019828  0060  F0E4  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 31452  01982E  0060  F0E0  F001   	movff	??_ADCC_ThresholdISR,btemp
 31453  019834  0011               	retfie		f
 31454  019836                     __end_of_ADCC_ThresholdISR:
 31455                           	opt callstack 0
 31456                           
 31457 ;; *************** function _UART1_rx_vect_isr *****************
 31458 ;; Defined at:
 31459 ;;		line 181 in file "mcc_generated_files/uart1.c"
 31460 ;; Parameters:    Size  Location     Type
 31461 ;;		None
 31462 ;; Auto vars:     Size  Location     Type
 31463 ;;		None
 31464 ;; Return value:  Size  Location     Type
 31465 ;;                  1    wreg      void 
 31466 ;; Registers used:
 31467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 31468 ;; Tracked objects:
 31469 ;;		On entry : 0/0
 31470 ;;		On exit  : 0/0
 31471 ;;		Unchanged: 0/0
 31472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31477 ;;Total ram usage:        0 bytes
 31478 ;; Hardware stack levels used:    1
 31479 ;; Hardware stack levels required when called:    1
 31480 ;; This function calls:
 31481 ;;		Absolute function
 31482 ;;		_UART1_Receive_ISR
 31483 ;; This function is called by:
 31484 ;;		Interrupt level 2
 31485 ;; This function uses a non-reentrant model
 31486 ;;
 31487                           
 31488                           	psect	text155
 31489  01A568                     __ptext155:
 31490                           	opt callstack 0
 31491  01A568                     _UART1_rx_vect_isr:
 31492                           	opt callstack 4
 31493                           
 31494                           ;incstack = 0
 31495  01A568  EE14  F0C2         	lfsr	1,___inthi_sp
 31496                           
 31497                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 31498  01A56C  0100               	movlb	0	; () banked
 31499  01A56E  5197               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 31500  01A570  1198               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 31501  01A572  1199               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 31502  01A574  B4D8               	btfsc	status,2,c
 31503  01A576  0011               	retfie		f
 31504                           
 31505                           ; BSR set to: 0
 31506                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 31507  01A578  D801               	call	i2u972_48
 31508  01A57A  0011               	retfie		f
 31509  01A57C                     i2u972_48:
 31510  01A57C  0005               	push	
 31511  01A57E  6EFA               	movwf	pclath,c
 31512  01A580  5197               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 31513  01A582  6EFD               	movwf	tosl,c
 31514  01A584  5198               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 31515  01A586  6EFE               	movwf	tosh,c
 31516  01A588  5199               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 31517  01A58A  6EFF               	movwf	tosu,c
 31518  01A58C  50FA               	movf	pclath,w,c
 31519  01A58E  0012               	return		;indir
 31520  01A590                     __end_of_UART1_rx_vect_isr:
 31521                           	opt callstack 0
 31522                           
 31523 ;; *************** function _UART1_Receive_ISR *****************
 31524 ;; Defined at:
 31525 ;;		line 192 in file "mcc_generated_files/uart1.c"
 31526 ;; Parameters:    Size  Location     Type
 31527 ;;		None
 31528 ;; Auto vars:     Size  Location     Type
 31529 ;;		None
 31530 ;; Return value:  Size  Location     Type
 31531 ;;                  1  [STACK] void 
 31532 ;; Registers used:
 31533 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31534 ;; Tracked objects:
 31535 ;;		On entry : 3F/0
 31536 ;;		On exit  : 0/0
 31537 ;;		Unchanged: 0/0
 31538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31543 ;;Total ram usage:        0 bytes
 31544 ;; Hardware stack levels used:    1
 31545 ;; This function calls:
 31546 ;;		Nothing
 31547 ;; This function is called by:
 31548 ;;		_UART1_Initialize
 31549 ;;		_UART1_rx_vect_isr
 31550 ;; This function uses a reentrant model
 31551 ;;
 31552                           
 31553                           	psect	text156
 31554  01A71E                     __ptext156:
 31555                           	opt callstack 0
 31556  01A71E                     _UART1_Receive_ISR:
 31557                           	opt callstack 4
 31558                           
 31559                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 31560                           
 31561                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31562                           ;incstack = 0
 31563  01A71E  0EF7               	movlw	low _uart1RxBuffer
 31564  01A720  2437               	addwf	_uart1RxHead^0,w,c	;volatile
 31565  01A722  6ED9               	movwf	fsr2l,c
 31566  01A724  6ADA               	clrf	fsr2h,c
 31567  01A726  0E01               	movlw	high _uart1RxBuffer
 31568  01A728  22DA               	addwfc	fsr2h,f,c
 31569  01A72A  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 31570  01A730  2A37               	incf	_uart1RxHead^0,f,c	;volatile
 31571                           
 31572                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 31573  01A732  0E07               	movlw	7
 31574  01A734  6437               	cpfsgt	_uart1RxHead^0,c
 31575  01A736  D001               	goto	l10028
 31576                           
 31577                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 31578  01A738  6A37               	clrf	_uart1RxHead^0,c	;volatile
 31579  01A73A                     l10028:
 31580                           
 31581                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 31582  01A73A  2A35               	incf	_uart1RxCount^0,f,c	;volatile
 31583                           
 31584                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31585  01A73C  0012               	return		;funcret
 31586  01A73E                     __end_of_UART1_Receive_ISR:
 31587                           	opt callstack 0
 31588                           
 31589 ;; *************** function _UART2_tx_vect_isr *****************
 31590 ;; Defined at:
 31591 ;;		line 195 in file "mcc_generated_files/uart2.c"
 31592 ;; Parameters:    Size  Location     Type
 31593 ;;		None
 31594 ;; Auto vars:     Size  Location     Type
 31595 ;;		None
 31596 ;; Return value:  Size  Location     Type
 31597 ;;                  1    wreg      void 
 31598 ;; Registers used:
 31599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 31600 ;; Tracked objects:
 31601 ;;		On entry : 0/0
 31602 ;;		On exit  : 0/0
 31603 ;;		Unchanged: 0/0
 31604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31609 ;;Total ram usage:        0 bytes
 31610 ;; Hardware stack levels used:    1
 31611 ;; Hardware stack levels required when called:    1
 31612 ;; This function calls:
 31613 ;;		Absolute function
 31614 ;;		_UART2_Transmit_ISR
 31615 ;; This function is called by:
 31616 ;;		Interrupt level 2
 31617 ;; This function uses a non-reentrant model
 31618 ;;
 31619                           
 31620                           	psect	text157
 31621  01A590                     __ptext157:
 31622                           	opt callstack 0
 31623  01A590                     _UART2_tx_vect_isr:
 31624                           	opt callstack 4
 31625                           
 31626                           ;incstack = 0
 31627  01A590  EE14  F0C2         	lfsr	1,___inthi_sp
 31628                           
 31629                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 31630  01A594  0100               	movlb	0	; () banked
 31631  01A596  519A               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 31632  01A598  119B               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 31633  01A59A  119C               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 31634  01A59C  B4D8               	btfsc	status,2,c
 31635  01A59E  0011               	retfie		f
 31636                           
 31637                           ; BSR set to: 0
 31638                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 31639  01A5A0  D801               	call	i2u974_48
 31640  01A5A2  0011               	retfie		f
 31641  01A5A4                     i2u974_48:
 31642  01A5A4  0005               	push	
 31643  01A5A6  6EFA               	movwf	pclath,c
 31644  01A5A8  519A               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 31645  01A5AA  6EFD               	movwf	tosl,c
 31646  01A5AC  519B               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 31647  01A5AE  6EFE               	movwf	tosh,c
 31648  01A5B0  519C               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 31649  01A5B2  6EFF               	movwf	tosu,c
 31650  01A5B4  50FA               	movf	pclath,w,c
 31651  01A5B6  0012               	return		;indir
 31652  01A5B8                     __end_of_UART2_tx_vect_isr:
 31653                           	opt callstack 0
 31654                           
 31655 ;; *************** function _UART2_Transmit_ISR *****************
 31656 ;; Defined at:
 31657 ;;		line 213 in file "mcc_generated_files/uart2.c"
 31658 ;; Parameters:    Size  Location     Type
 31659 ;;		None
 31660 ;; Auto vars:     Size  Location     Type
 31661 ;;		None
 31662 ;; Return value:  Size  Location     Type
 31663 ;;                  1  [STACK] void 
 31664 ;; Registers used:
 31665 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31666 ;; Tracked objects:
 31667 ;;		On entry : 3F/0
 31668 ;;		On exit  : 3B/39
 31669 ;;		Unchanged: 0/0
 31670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31675 ;;Total ram usage:        0 bytes
 31676 ;; Hardware stack levels used:    1
 31677 ;; This function calls:
 31678 ;;		Nothing
 31679 ;; This function is called by:
 31680 ;;		_UART2_Initialize
 31681 ;;		_UART2_tx_vect_isr
 31682 ;; This function uses a reentrant model
 31683 ;;
 31684                           
 31685                           	psect	text158
 31686  01A2E0                     __ptext158:
 31687                           	opt callstack 0
 31688  01A2E0                     _UART2_Transmit_ISR:
 31689                           	opt callstack 4
 31690                           
 31691                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 31692                           
 31693                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31694                           ;incstack = 0
 31695  01A2E0  0E40               	movlw	64
 31696  01A2E2  6032               	cpfslt	_uart2TxBufferRemaining^0,c
 31697  01A2E4  D010               	goto	l673
 31698                           
 31699                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 31700  01A2E6  0E54               	movlw	low _uart2TxBuffer
 31701  01A2E8  2433               	addwf	_uart2TxTail^0,w,c	;volatile
 31702  01A2EA  6ED9               	movwf	fsr2l,c
 31703  01A2EC  6ADA               	clrf	fsr2h,c
 31704  01A2EE  0E03               	movlw	high _uart2TxBuffer
 31705  01A2F0  22DA               	addwfc	fsr2h,f,c
 31706  01A2F2  50DF               	movf	indf2,w,c
 31707  01A2F4  013D               	movlb	61	; () banked
 31708  01A2F6  6FD2               	movwf	210,b	;volatile
 31709                           
 31710                           ; BSR set to: 61
 31711  01A2F8  2A33               	incf	_uart2TxTail^0,f,c	;volatile
 31712                           
 31713                           ; BSR set to: 61
 31714                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 31715  01A2FA  0E3F               	movlw	63
 31716  01A2FC  6433               	cpfsgt	_uart2TxTail^0,c
 31717  01A2FE  D001               	goto	l10040
 31718                           
 31719                           ; BSR set to: 61
 31720                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 31721  01A300  6A33               	clrf	_uart2TxTail^0,c	;volatile
 31722  01A302                     l10040:
 31723                           
 31724                           ; BSR set to: 61
 31725                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 31726  01A302  2A32               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 31727                           
 31728                           ;mcc_generated_files/uart2.c: 224:     }
 31729  01A304  0012               	return	
 31730  01A306                     l673:
 31731                           
 31732                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 31733  01A306  0139               	movlb	57	; () banked
 31734  01A308  9796               	bcf	150,3,b	;volatile
 31735                           
 31736                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31737  01A30A  0012               	return		;funcret
 31738  01A30C                     __end_of_UART2_Transmit_ISR:
 31739                           	opt callstack 0
 31740                           
 31741 ;; *************** function _UART2_rx_vect_isr *****************
 31742 ;; Defined at:
 31743 ;;		line 203 in file "mcc_generated_files/uart2.c"
 31744 ;; Parameters:    Size  Location     Type
 31745 ;;		None
 31746 ;; Auto vars:     Size  Location     Type
 31747 ;;		None
 31748 ;; Return value:  Size  Location     Type
 31749 ;;                  1    wreg      void 
 31750 ;; Registers used:
 31751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 31752 ;; Tracked objects:
 31753 ;;		On entry : 0/0
 31754 ;;		On exit  : 0/0
 31755 ;;		Unchanged: 0/0
 31756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31761 ;;Total ram usage:        0 bytes
 31762 ;; Hardware stack levels used:    1
 31763 ;; Hardware stack levels required when called:    1
 31764 ;; This function calls:
 31765 ;;		Absolute function
 31766 ;;		_UART2_Receive_ISR
 31767 ;; This function is called by:
 31768 ;;		Interrupt level 2
 31769 ;; This function uses a non-reentrant model
 31770 ;;
 31771                           
 31772                           	psect	text159
 31773  01A5B8                     __ptext159:
 31774                           	opt callstack 0
 31775  01A5B8                     _UART2_rx_vect_isr:
 31776                           	opt callstack 4
 31777                           
 31778                           ;incstack = 0
 31779  01A5B8  EE14  F0C2         	lfsr	1,___inthi_sp
 31780                           
 31781                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 31782  01A5BC  0100               	movlb	0	; () banked
 31783  01A5BE  519D               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 31784  01A5C0  119E               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 31785  01A5C2  119F               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 31786  01A5C4  B4D8               	btfsc	status,2,c
 31787  01A5C6  0011               	retfie		f
 31788                           
 31789                           ; BSR set to: 0
 31790                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 31791  01A5C8  D801               	call	i2u976_48
 31792  01A5CA  0011               	retfie		f
 31793  01A5CC                     i2u976_48:
 31794  01A5CC  0005               	push	
 31795  01A5CE  6EFA               	movwf	pclath,c
 31796  01A5D0  519D               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 31797  01A5D2  6EFD               	movwf	tosl,c
 31798  01A5D4  519E               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 31799  01A5D6  6EFE               	movwf	tosh,c
 31800  01A5D8  519F               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 31801  01A5DA  6EFF               	movwf	tosu,c
 31802  01A5DC  50FA               	movf	pclath,w,c
 31803  01A5DE  0012               	return		;indir
 31804  01A5E0                     __end_of_UART2_rx_vect_isr:
 31805                           	opt callstack 0
 31806                           
 31807 ;; *************** function _UART2_Receive_ISR *****************
 31808 ;; Defined at:
 31809 ;;		line 233 in file "mcc_generated_files/uart2.c"
 31810 ;; Parameters:    Size  Location     Type
 31811 ;;		None
 31812 ;; Auto vars:     Size  Location     Type
 31813 ;;		None
 31814 ;; Return value:  Size  Location     Type
 31815 ;;                  1  [STACK] void 
 31816 ;; Registers used:
 31817 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31818 ;; Tracked objects:
 31819 ;;		On entry : 3F/0
 31820 ;;		On exit  : 0/0
 31821 ;;		Unchanged: 0/0
 31822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31827 ;;Total ram usage:        0 bytes
 31828 ;; Hardware stack levels used:    1
 31829 ;; This function calls:
 31830 ;;		Nothing
 31831 ;; This function is called by:
 31832 ;;		_UART2_Initialize
 31833 ;;		_UART2_rx_vect_isr
 31834 ;; This function uses a reentrant model
 31835 ;;
 31836                           
 31837                           	psect	text160
 31838  01A7B6                     __ptext160:
 31839                           	opt callstack 0
 31840  01A7B6                     _UART2_Receive_ISR:
 31841                           	opt callstack 4
 31842                           
 31843                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 31844                           
 31845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31846                           ;incstack = 0
 31847  01A7B6  0E00               	movlw	low _uart2RxBuffer
 31848  01A7B8  2431               	addwf	_uart2RxHead^0,w,c	;volatile
 31849  01A7BA  6ED9               	movwf	fsr2l,c
 31850  01A7BC  6ADA               	clrf	fsr2h,c
 31851  01A7BE  0E05               	movlw	high _uart2RxBuffer
 31852  01A7C0  22DA               	addwfc	fsr2h,f,c
 31853  01A7C2  006F F743 FFDF     	movff	15824,indf2	;volatile
 31854  01A7C8  2A31               	incf	_uart2RxHead^0,f,c	;volatile
 31855                           
 31856                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 31857  01A7CA  2831               	incf	_uart2RxHead^0,w,c
 31858  01A7CC  B4D8               	btfsc	status,2,c
 31859                           
 31860                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 31861  01A7CE  6A31               	clrf	_uart2RxHead^0,c	;volatile
 31862                           
 31863                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 31864  01A7D0  2A2F               	incf	_uart2RxCount^0,f,c	;volatile
 31865                           
 31866                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31867  01A7D2  0012               	return		;funcret
 31868  01A7D4                     __end_of_UART2_Receive_ISR:
 31869                           	opt callstack 0
 31870                           
 31871 ;; *************** function _TMR6_ISR *****************
 31872 ;; Defined at:
 31873 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 31874 ;; Parameters:    Size  Location     Type
 31875 ;;		None
 31876 ;; Auto vars:     Size  Location     Type
 31877 ;;		None
 31878 ;; Return value:  Size  Location     Type
 31879 ;;                  1    wreg      void 
 31880 ;; Registers used:
 31881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 31882 ;; Tracked objects:
 31883 ;;		On entry : 0/0
 31884 ;;		On exit  : 0/0
 31885 ;;		Unchanged: 0/0
 31886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31889 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31890 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31891 ;;Total ram usage:        1 bytes
 31892 ;; Hardware stack levels used:    1
 31893 ;; Hardware stack levels required when called:    2
 31894 ;; This function calls:
 31895 ;;		_TMR6_CallBack
 31896 ;; This function is called by:
 31897 ;;		Interrupt level 2
 31898 ;; This function uses a non-reentrant model
 31899 ;;
 31900                           
 31901                           	psect	text161
 31902  01A80C                     __ptext161:
 31903                           	opt callstack 0
 31904  01A80C                     _TMR6_ISR:
 31905                           	opt callstack 3
 31906                           
 31907                           ;incstack = 0
 31908  01A80C  0060  F004  F03D   	movff	btemp,??_TMR6_ISR
 31909  01A812  EE14  F0C2         	lfsr	1,___inthi_sp
 31910                           
 31911                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 31912  01A816  0139               	movlb	57	; () banked
 31913  01A818  91A9               	bcf	169,0,b	;volatile
 31914                           
 31915                           ; BSR set to: 57
 31916                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 31917  01A81A  EC5C  F0D3         	call	_TMR6_CallBack	;wreg free
 31918  01A81E  0060  F0F4  F001   	movff	??_TMR6_ISR,btemp
 31919  01A824  0011               	retfie		f
 31920  01A826                     __end_of_TMR6_ISR:
 31921                           	opt callstack 0
 31922                           
 31923 ;; *************** function _TMR6_CallBack *****************
 31924 ;; Defined at:
 31925 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 31926 ;; Parameters:    Size  Location     Type
 31927 ;;		None
 31928 ;; Auto vars:     Size  Location     Type
 31929 ;;		None
 31930 ;; Return value:  Size  Location     Type
 31931 ;;                  1  [STACK] void 
 31932 ;; Registers used:
 31933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 31934 ;; Tracked objects:
 31935 ;;		On entry : 3F/39
 31936 ;;		On exit  : 0/0
 31937 ;;		Unchanged: 0/0
 31938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31943 ;;Total ram usage:        0 bytes
 31944 ;; Hardware stack levels used:    1
 31945 ;; Hardware stack levels required when called:    1
 31946 ;; This function calls:
 31947 ;;		Absolute function
 31948 ;;		_TMR6_DefaultInterruptHandler
 31949 ;; This function is called by:
 31950 ;;		_TMR6_ISR
 31951 ;; This function uses a reentrant model
 31952 ;;
 31953                           
 31954                           	psect	text162
 31955  01A6B8                     __ptext162:
 31956                           	opt callstack 0
 31957  01A6B8                     _TMR6_CallBack:
 31958                           	opt callstack 3
 31959                           
 31960                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 31961                           
 31962                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31963                           ;incstack = 0
 31964  01A6B8  0100               	movlb	0	; () banked
 31965  01A6BA  518E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31966  01A6BC  118F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31967  01A6BE  1190               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 31968  01A6C0  B4D8               	btfsc	status,2,c
 31969  01A6C2  0012               	return	
 31970                           
 31971                           ; BSR set to: 0
 31972                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 31973  01A6C4  D801               	call	u938_48
 31974  01A6C6  0012               	return	
 31975  01A6C8                     u938_48:
 31976  01A6C8  0005               	push	
 31977  01A6CA  6EFA               	movwf	pclath,c
 31978  01A6CC  518E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 31979  01A6CE  6EFD               	movwf	tosl,c
 31980  01A6D0  518F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 31981  01A6D2  6EFE               	movwf	tosh,c
 31982  01A6D4  5190               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 31983  01A6D6  6EFF               	movwf	tosu,c
 31984  01A6D8  50FA               	movf	pclath,w,c
 31985  01A6DA  0012               	return		;indir
 31986  01A6DC                     __end_of_TMR6_CallBack:
 31987                           	opt callstack 0
 31988                           
 31989 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 31990 ;; Defined at:
 31991 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 31992 ;; Parameters:    Size  Location     Type
 31993 ;;		None
 31994 ;; Auto vars:     Size  Location     Type
 31995 ;;  i               1  [STACK] unsigned char 
 31996 ;; Return value:  Size  Location     Type
 31997 ;;                  1  [STACK] void 
 31998 ;; Registers used:
 31999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 32000 ;; Tracked objects:
 32001 ;;		On entry : 3F/0
 32002 ;;		On exit  : 0/0
 32003 ;;		Unchanged: 0/0
 32004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32009 ;;Total ram usage:        0 bytes
 32010 ;; Hardware stack levels used:    1
 32011 ;; This function calls:
 32012 ;;		Nothing
 32013 ;; This function is called by:
 32014 ;;		_TMR6_Initialize
 32015 ;;		_TMR6_CallBack
 32016 ;; This function uses a reentrant model
 32017 ;;
 32018                           
 32019                           	psect	text163
 32020  019C28                     __ptext163:
 32021                           	opt callstack 0
 32022  019C28                     _TMR6_DefaultInterruptHandler:
 32023                           	opt callstack 0
 32024                           
 32025                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32026  019C28  52E6               	movf	postinc1,f,c
 32027                           
 32028                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 32029                           ;stkvar	_i @ sp[(-1)+0]
 32030                           
 32031                           ;incstack = 0
 32032  019C2A  0EFF               	movlw	-1
 32033  019C2C  6AE3               	clrf	plusw1,c
 32034  019C2E                     l9636:
 32035                           
 32036                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 32037                           ;stkvar	_i @ sp[(-1)+0]
 32038  019C2E  0EFF               	movlw	-1
 32039  019C30  50E3               	movf	plusw1,w,c
 32040  019C32  0D02               	mullw	2
 32041  019C34  0EDF               	movlw	low _tickCount
 32042  019C36  24F3               	addwf	243,w,c
 32043  019C38  6ED9               	movwf	fsr2l,c
 32044  019C3A  0E01               	movlw	high _tickCount
 32045  019C3C  20F4               	addwfc	prodh,w,c
 32046  019C3E  6EDA               	movwf	fsr2h,c
 32047  019C40  50DE               	movf	postinc2,w,c
 32048  019C42  10DE               	iorwf	postinc2,w,c
 32049  019C44  B4D8               	btfsc	status,2,c
 32050  019C46  D00C               	goto	l9640
 32051                           
 32052                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 32053                           ;stkvar	_i @ sp[(-1)+0]
 32054  019C48  0EFF               	movlw	-1
 32055  019C4A  50E3               	movf	plusw1,w,c
 32056  019C4C  0D02               	mullw	2
 32057  019C4E  0EDF               	movlw	low _tickCount
 32058  019C50  24F3               	addwf	243,w,c
 32059  019C52  6ED9               	movwf	fsr2l,c
 32060  019C54  0E01               	movlw	high _tickCount
 32061  019C56  20F4               	addwfc	prodh,w,c
 32062  019C58  6EDA               	movwf	fsr2h,c
 32063  019C5A  06DE               	decf	postinc2,f,c
 32064  019C5C  0E00               	movlw	0
 32065  019C5E  5ADD               	subwfb	postdec2,f,c
 32066  019C60                     l9640:
 32067                           
 32068                           ;mcc_generated_files/tmr6.c: 207:  }
 32069                           ;stkvar	_i @ sp[(-1)+0]
 32070  019C60  0EFF               	movlw	-1
 32071  019C62  2AE3               	incf	plusw1,f,c
 32072                           
 32073                           ;stkvar	_i @ sp[(-1)+0]
 32074  019C64  0EFF               	movlw	-1
 32075  019C66  006F FF8C  F001    	movff	plusw1,btemp
 32076  019C6C  0E0B               	movlw	11
 32077  019C6E  6401               	cpfsgt	btemp^0,c
 32078  019C70  D7DE               	goto	l9636
 32079                           
 32080                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32081  019C72  52E5               	movf	postdec1,f,c
 32082  019C74  0012               	return		;funcret
 32083  019C76                     __end_of_TMR6_DefaultInterruptHandler:
 32084                           	opt callstack 0
 32085                           
 32086 ;; *************** function _DMA1_DMASCNT_ISR *****************
 32087 ;; Defined at:
 32088 ;;		line 126 in file "mcc_generated_files/dma1.c"
 32089 ;; Parameters:    Size  Location     Type
 32090 ;;		None
 32091 ;; Auto vars:     Size  Location     Type
 32092 ;;		None
 32093 ;; Return value:  Size  Location     Type
 32094 ;;                  1    wreg      void 
 32095 ;; Registers used:
 32096 ;;		None
 32097 ;; Tracked objects:
 32098 ;;		On entry : 0/0
 32099 ;;		On exit  : 3F/0
 32100 ;;		Unchanged: 0/0
 32101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32106 ;;Total ram usage:        0 bytes
 32107 ;; Hardware stack levels used:    1
 32108 ;; This function calls:
 32109 ;;		Nothing
 32110 ;; This function is called by:
 32111 ;;		Interrupt level 2
 32112 ;; This function uses a non-reentrant model
 32113 ;;
 32114                           
 32115                           	psect	text164
 32116  01A91C                     __ptext164:
 32117                           	opt callstack 0
 32118  01A91C                     _DMA1_DMASCNT_ISR:
 32119                           	opt callstack 5
 32120                           
 32121                           ;incstack = 0
 32122  01A91C  EE14  F0C2         	lfsr	1,___inthi_sp
 32123                           
 32124                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 32125  01A920  0139               	movlb	57	; () banked
 32126  01A922  91A2               	bcf	162,0,b	;volatile
 32127                           
 32128                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 32129  01A924  0100               	movlb	0	; () banked
 32130  01A926  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 32131                           
 32132                           ; BSR set to: 0
 32133  01A928  0011               	retfie		f
 32134  01A92A                     __end_of_DMA1_DMASCNT_ISR:
 32135                           	opt callstack 0
 32136                           
 32137 ;; *************** function _DMA1_DMADCNT_ISR *****************
 32138 ;; Defined at:
 32139 ;;		line 134 in file "mcc_generated_files/dma1.c"
 32140 ;; Parameters:    Size  Location     Type
 32141 ;;		None
 32142 ;; Auto vars:     Size  Location     Type
 32143 ;;		None
 32144 ;; Return value:  Size  Location     Type
 32145 ;;                  1    wreg      void 
 32146 ;; Registers used:
 32147 ;;		None
 32148 ;; Tracked objects:
 32149 ;;		On entry : 0/0
 32150 ;;		On exit  : 3F/39
 32151 ;;		Unchanged: 0/0
 32152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32157 ;;Total ram usage:        0 bytes
 32158 ;; Hardware stack levels used:    1
 32159 ;; This function calls:
 32160 ;;		Nothing
 32161 ;; This function is called by:
 32162 ;;		Interrupt level 2
 32163 ;; This function uses a non-reentrant model
 32164 ;;
 32165                           
 32166                           	psect	text165
 32167  01A940                     __ptext165:
 32168                           	opt callstack 0
 32169  01A940                     _DMA1_DMADCNT_ISR:
 32170                           	opt callstack 5
 32171                           
 32172                           ; BSR set to: 0
 32173                           ;incstack = 0
 32174  01A940  EE14  F0C2         	lfsr	1,___inthi_sp
 32175                           
 32176                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 32177  01A944  0139               	movlb	57	; () banked
 32178  01A946  93A2               	bcf	162,1,b	;volatile
 32179                           
 32180                           ; BSR set to: 57
 32181  01A948  0011               	retfie		f
 32182  01A94A                     __end_of_DMA1_DMADCNT_ISR:
 32183                           	opt callstack 0
 32184                           
 32185 ;; *************** function _DMA1_DMAA_ISR *****************
 32186 ;; Defined at:
 32187 ;;		line 144 in file "mcc_generated_files/dma1.c"
 32188 ;; Parameters:    Size  Location     Type
 32189 ;;		None
 32190 ;; Auto vars:     Size  Location     Type
 32191 ;;		None
 32192 ;; Return value:  Size  Location     Type
 32193 ;;                  1    wreg      void 
 32194 ;; Registers used:
 32195 ;;		None
 32196 ;; Tracked objects:
 32197 ;;		On entry : 0/0
 32198 ;;		On exit  : 3F/39
 32199 ;;		Unchanged: 0/0
 32200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32205 ;;Total ram usage:        0 bytes
 32206 ;; Hardware stack levels used:    1
 32207 ;; This function calls:
 32208 ;;		Nothing
 32209 ;; This function is called by:
 32210 ;;		Interrupt level 2
 32211 ;; This function uses a non-reentrant model
 32212 ;;
 32213                           
 32214                           	psect	text166
 32215  01A94C                     __ptext166:
 32216                           	opt callstack 0
 32217  01A94C                     _DMA1_DMAA_ISR:
 32218                           	opt callstack 5
 32219                           
 32220                           ; BSR set to: 57
 32221                           ;incstack = 0
 32222  01A94C  EE14  F0C2         	lfsr	1,___inthi_sp
 32223                           
 32224                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 32225  01A950  0139               	movlb	57	; () banked
 32226  01A952  97A2               	bcf	162,3,b	;volatile
 32227                           
 32228                           ; BSR set to: 57
 32229  01A954  0011               	retfie		f
 32230  01A956                     __end_of_DMA1_DMAA_ISR:
 32231                           	opt callstack 0
 32232                           
 32233 ;; *************** function _DMA1_DMAOR_ISR *****************
 32234 ;; Defined at:
 32235 ;;		line 155 in file "mcc_generated_files/dma1.c"
 32236 ;; Parameters:    Size  Location     Type
 32237 ;;		None
 32238 ;; Auto vars:     Size  Location     Type
 32239 ;;		None
 32240 ;; Return value:  Size  Location     Type
 32241 ;;                  1    wreg      void 
 32242 ;; Registers used:
 32243 ;;		None
 32244 ;; Tracked objects:
 32245 ;;		On entry : 0/0
 32246 ;;		On exit  : 3F/39
 32247 ;;		Unchanged: 0/0
 32248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32253 ;;Total ram usage:        0 bytes
 32254 ;; Hardware stack levels used:    1
 32255 ;; This function calls:
 32256 ;;		Nothing
 32257 ;; This function is called by:
 32258 ;;		Interrupt level 2
 32259 ;; This function uses a non-reentrant model
 32260 ;;
 32261                           
 32262                           	psect	text167
 32263  01A958                     __ptext167:
 32264                           	opt callstack 0
 32265  01A958                     _DMA1_DMAOR_ISR:
 32266                           	opt callstack 5
 32267                           
 32268                           ; BSR set to: 57
 32269                           ;incstack = 0
 32270  01A958  EE14  F0C2         	lfsr	1,___inthi_sp
 32271                           
 32272                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 32273  01A95C  0139               	movlb	57	; () banked
 32274  01A95E  95A2               	bcf	162,2,b	;volatile
 32275                           
 32276                           ; BSR set to: 57
 32277  01A960  0011               	retfie		f
 32278  01A962                     __end_of_DMA1_DMAOR_ISR:
 32279                           	opt callstack 0
 32280                           
 32281                           ;
 32282                           ; Interrupt Vector Table @ 0x8
 32283                           ;
 32284                           
 32285                           	psect	ivt0x8
 32286  000008                     __pivt0x8:
 32287                           	opt callstack 0
 32288  000008                     ivt0x8_base:
 32289                           	opt callstack 0
 32290                           
 32291                           ; Vector 0 : SWINT
 32292  000008  6A6B               	dw	_Default_ISR shr (0+2)
 32293                           
 32294                           ; Vector 1 : HLVD
 32295  00000A  6A6B               	dw	_Default_ISR shr (0+2)
 32296                           
 32297                           ; Vector 2 : OSF
 32298  00000C  6A6B               	dw	_Default_ISR shr (0+2)
 32299                           
 32300                           ; Vector 3 : CSW
 32301  00000E  6A6B               	dw	_Default_ISR shr (0+2)
 32302                           
 32303                           ; Vector 4 : NVM
 32304  000010  6A6B               	dw	_Default_ISR shr (0+2)
 32305                           
 32306                           ; Vector 5 : SCAN
 32307  000012  6A6B               	dw	_Default_ISR shr (0+2)
 32308                           
 32309                           ; Vector 6 : CRC
 32310  000014  6A6B               	dw	_Default_ISR shr (0+2)
 32311                           
 32312                           ; Vector 7 : IOC
 32313  000016  6A6B               	dw	_Default_ISR shr (0+2)
 32314                           
 32315                           ; Vector 8 : INT0
 32316  000018  6A43               	dw	_INT0_ISR shr (0+2)
 32317                           
 32318                           ; Vector 9 : ZCD
 32319  00001A  6A6B               	dw	_Default_ISR shr (0+2)
 32320                           
 32321                           ; Vector 10 : AD
 32322  00001C  68AD               	dw	_ADCC_ISR shr (0+2)
 32323                           
 32324                           ; Vector 11 : ADT
 32325  00001E  65F3               	dw	_ADCC_ThresholdISR shr (0+2)
 32326                           
 32327                           ; Vector 12 : CMP1
 32328  000020  6A6B               	dw	_Default_ISR shr (0+2)
 32329                           
 32330                           ; Vector 13 : SMT1
 32331  000022  6A6B               	dw	_Default_ISR shr (0+2)
 32332                           
 32333                           ; Vector 14 : SMT1PRA
 32334  000024  6A6B               	dw	_Default_ISR shr (0+2)
 32335                           
 32336                           ; Vector 15 : SMT1PRW
 32337  000026  6A6B               	dw	_Default_ISR shr (0+2)
 32338                           
 32339                           ; Vector 16 : DMA1SCNT
 32340  000028  6A47               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 32341                           
 32342                           ; Vector 17 : DMA1DCNT
 32343  00002A  6A50               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 32344                           
 32345                           ; Vector 18 : DMA1OR
 32346  00002C  6A56               	dw	_DMA1_DMAOR_ISR shr (0+2)
 32347                           
 32348                           ; Vector 19 : DMA1A
 32349  00002E  6A53               	dw	_DMA1_DMAA_ISR shr (0+2)
 32350                           
 32351                           ; Vector 20 : SPI1RX
 32352  000030  6A6B               	dw	_Default_ISR shr (0+2)
 32353                           
 32354                           ; Vector 21 : SPI1TX
 32355  000032  6A6B               	dw	_Default_ISR shr (0+2)
 32356                           
 32357                           ; Vector 22 : SPI1
 32358  000034  6A6B               	dw	_Default_ISR shr (0+2)
 32359                           
 32360                           ; Vector 23 : I2C1RX
 32361  000036  6A6B               	dw	_Default_ISR shr (0+2)
 32362                           
 32363                           ; Vector 24 : I2C1TX
 32364  000038  6A6B               	dw	_Default_ISR shr (0+2)
 32365                           
 32366                           ; Vector 25 : I2C1
 32367  00003A  6A6B               	dw	_Default_ISR shr (0+2)
 32368                           
 32369                           ; Vector 26 : I2C1E
 32370  00003C  6A6B               	dw	_Default_ISR shr (0+2)
 32371                           
 32372                           ; Vector 27 : U1RX
 32373  00003E  695A               	dw	_UART1_rx_vect_isr shr (0+2)
 32374                           
 32375                           ; Vector 28 : U1TX
 32376  000040  6A6B               	dw	_Default_ISR shr (0+2)
 32377                           
 32378                           ; Vector 29 : U1E
 32379  000042  6A6B               	dw	_Default_ISR shr (0+2)
 32380                           
 32381                           ; Vector 30 : U1
 32382  000044  6A6B               	dw	_Default_ISR shr (0+2)
 32383                           
 32384                           ; Vector 31 : TMR0
 32385  000046  6A6B               	dw	_Default_ISR shr (0+2)
 32386                           
 32387                           ; Vector 32 : TMR1
 32388  000048  6A6B               	dw	_Default_ISR shr (0+2)
 32389                           
 32390                           ; Vector 33 : TMR1G
 32391  00004A  6A6B               	dw	_Default_ISR shr (0+2)
 32392                           
 32393                           ; Vector 34 : TMR2
 32394  00004C  6A6B               	dw	_Default_ISR shr (0+2)
 32395                           
 32396                           ; Vector 35 : CCP1
 32397  00004E  6A6B               	dw	_Default_ISR shr (0+2)
 32398                           
 32399                           ; Vector 36 : Undefined
 32400  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 32401                           
 32402                           ; Vector 37 : NCO1
 32403  000052  6A6B               	dw	_Default_ISR shr (0+2)
 32404                           
 32405                           ; Vector 38 : CWG1
 32406  000054  6A6B               	dw	_Default_ISR shr (0+2)
 32407                           
 32408                           ; Vector 39 : CLC1
 32409  000056  6A6B               	dw	_Default_ISR shr (0+2)
 32410                           
 32411                           ; Vector 40 : INT1
 32412  000058  67FB               	dw	_INT1_ISR shr (0+2)
 32413                           
 32414                           ; Vector 41 : CMP2
 32415  00005A  6A6B               	dw	_Default_ISR shr (0+2)
 32416                           
 32417                           ; Vector 42 : DMA2SCNT
 32418  00005C  6A6B               	dw	_Default_ISR shr (0+2)
 32419                           
 32420                           ; Vector 43 : DMA2DCNT
 32421  00005E  6A6B               	dw	_Default_ISR shr (0+2)
 32422                           
 32423                           ; Vector 44 : DMA2OR
 32424  000060  6A6B               	dw	_Default_ISR shr (0+2)
 32425                           
 32426                           ; Vector 45 : DMA2A
 32427  000062  6A6B               	dw	_Default_ISR shr (0+2)
 32428                           
 32429                           ; Vector 46 : I2C2RX
 32430  000064  6A6B               	dw	_Default_ISR shr (0+2)
 32431                           
 32432                           ; Vector 47 : I2C2TX
 32433  000066  6A6B               	dw	_Default_ISR shr (0+2)
 32434                           
 32435                           ; Vector 48 : I2C2
 32436  000068  6A6B               	dw	_Default_ISR shr (0+2)
 32437                           
 32438                           ; Vector 49 : I2C2E
 32439  00006A  6A6B               	dw	_Default_ISR shr (0+2)
 32440                           
 32441                           ; Vector 50 : U2RX
 32442  00006C  696E               	dw	_UART2_rx_vect_isr shr (0+2)
 32443                           
 32444                           ; Vector 51 : U2TX
 32445  00006E  6964               	dw	_UART2_tx_vect_isr shr (0+2)
 32446                           
 32447                           ; Vector 52 : U2E
 32448  000070  6A6B               	dw	_Default_ISR shr (0+2)
 32449                           
 32450                           ; Vector 53 : U2
 32451  000072  6A6B               	dw	_Default_ISR shr (0+2)
 32452                           
 32453                           ; Vector 54 : TMR3
 32454  000074  5F28               	dw	_TMR3_ISR shr (0+2)
 32455                           
 32456                           ; Vector 55 : TMR3G
 32457  000076  6A6B               	dw	_Default_ISR shr (0+2)
 32458                           
 32459                           ; Vector 56 : TMR4
 32460  000078  6A6B               	dw	_Default_ISR shr (0+2)
 32461                           
 32462                           ; Vector 57 : CCP2
 32463  00007A  6A6B               	dw	_Default_ISR shr (0+2)
 32464                           
 32465                           ; Vector 58 : Undefined
 32466  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 32467                           
 32468                           ; Vector 59 : CWG2
 32469  00007E  6A6B               	dw	_Default_ISR shr (0+2)
 32470                           
 32471                           ; Vector 60 : CLC2
 32472  000080  6A6B               	dw	_Default_ISR shr (0+2)
 32473                           
 32474                           ; Vector 61 : INT2
 32475  000082  6A6B               	dw	_Default_ISR shr (0+2)
 32476                           
 32477                           ; Vector 62 : Undefined
 32478  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 32479                           
 32480                           ; Vector 63 : Undefined
 32481  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 32482                           
 32483                           ; Vector 64 : Undefined
 32484  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 32485                           
 32486                           ; Vector 65 : Undefined
 32487  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 32488                           
 32489                           ; Vector 66 : Undefined
 32490  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 32491                           
 32492                           ; Vector 67 : Undefined
 32493  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 32494                           
 32495                           ; Vector 68 : Undefined
 32496  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 32497                           
 32498                           ; Vector 69 : Undefined
 32499  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 32500                           
 32501                           ; Vector 70 : TMR5
 32502  000094  66B6               	dw	_TMR5_ISR shr (0+2)
 32503                           
 32504                           ; Vector 71 : TMR5G
 32505  000096  6A6B               	dw	_Default_ISR shr (0+2)
 32506                           
 32507                           ; Vector 72 : TMR6
 32508  000098  6A03               	dw	_TMR6_ISR shr (0+2)
 32509                           
 32510                           ; Vector 73 : CCP3
 32511  00009A  6A6B               	dw	_Default_ISR shr (0+2)
 32512                           
 32513                           ; Vector 74 : CWG3
 32514  00009C  6A6B               	dw	_Default_ISR shr (0+2)
 32515                           
 32516                           ; Vector 75 : CLC3
 32517  00009E  6A6B               	dw	_Default_ISR shr (0+2)
 32518                           
 32519                           ; Vector 76 : Undefined
 32520  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 32521                           
 32522                           ; Vector 77 : Undefined
 32523  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 32524                           
 32525                           ; Vector 78 : Undefined
 32526  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 32527                           
 32528                           ; Vector 79 : Undefined
 32529  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 32530                           
 32531                           ; Vector 80 : CCP4
 32532  0000A8  6A6B               	dw	_Default_ISR shr (0+2)
 32533                           
 32534                           ; Vector 81 : CLC4
 32535  0000AA  6A6B               	dw	_Default_ISR shr (0+2)
 32536  0000AC                     ivt0x8_undefint:
 32537                           	opt callstack 0
 32538  0000AC  00FF               	reset	
 32539                           
 32540                           	psect	text168
 32541  000000                     __ptext168:
 32542                           	opt callstack 0
 32543                           
 32544                           	psect	rparam
 32545  0000                     
 32546                           	psect	temp
 32547  000001                     btemp:
 32548                           	opt callstack 0
 32549  000001                     	ds	32
 32550  0000                     wtemp0	set	btemp
 32551  0000                     wtemp1	set	btemp+2
 32552  0000                     wtemp2	set	btemp+4
 32553  0000                     wtemp3	set	btemp+6
 32554  0000                     wtemp4	set	btemp+8
 32555  0000                     wtemp5	set	btemp+10
 32556  0000                     wtemp8	set	btemp+1
 32557  0000                     ttemp0	set	btemp
 32558  0000                     ttemp1	set	btemp+3
 32559  0000                     ttemp2	set	btemp+6
 32560  0000                     ttemp3	set	btemp+9
 32561  0000                     ttemp5	set	btemp+1
 32562  0000                     ttemp6	set	btemp+4
 32563  0000                     ttemp7	set	btemp+8
 32564  0000                     ltemp0	set	btemp
 32565  0000                     ltemp1	set	btemp+4
 32566  0000                     ltemp2	set	btemp+8
 32567  0000                     lltemp0	set	btemp
 32568  0000                     lltemp1	set	btemp+8
 32569  0000                     lltemp2	set	btemp+16
 32570  0000                     lltemp3	set	btemp+24
 32571                           tosu	equ	0x3FFF
 32572                           tosh	equ	0x3FFE
 32573                           tosl	equ	0x3FFD
 32574                           stkptr	equ	0x3FFC
 32575                           pclatu	equ	0x3FFB
 32576                           pclath	equ	0x3FFA
 32577                           pcl	equ	0x3FF9
 32578                           tblptru	equ	0x3FF8
 32579                           tblptrh	equ	0x3FF7
 32580                           tblptrl	equ	0x3FF6
 32581                           tablat	equ	0x3FF5
 32582                           prodh	equ	0x3FF4
 32583                           prodl	equ	0x3FF3
 32584                           indf0	equ	0x3FEF
 32585                           postinc0	equ	0x3FEE
 32586                           postdec0	equ	0x3FED
 32587                           preinc0	equ	0x3FEC
 32588                           plusw0	equ	0x3FEB
 32589                           fsr0h	equ	0x3FEA
 32590                           fsr0l	equ	0x3FE9
 32591                           wreg	equ	0x3FE8
 32592                           indf1	equ	0x3FE7
 32593                           postinc1	equ	0x3FE6
 32594                           postdec1	equ	0x3FE5
 32595                           preinc1	equ	0x3FE4
 32596                           plusw1	equ	0x3FE3
 32597                           fsr1h	equ	0x3FE2
 32598                           fsr1l	equ	0x3FE1
 32599                           bsr	equ	0x3FE0
 32600                           indf2	equ	0x3FDF
 32601                           postinc2	equ	0x3FDE
 32602                           postdec2	equ	0x3FDD
 32603                           preinc2	equ	0x3FDC
 32604                           plusw2	equ	0x3FDB
 32605                           fsr2h	equ	0x3FDA
 32606                           fsr2l	equ	0x3FD9
 32607                           status	equ	0x3FD8


Data Sizes:
    Strings     561
    Constant    372
    Data        977
    BSS         1085
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      37
    BANK0           160     25     146
    BANK1           256      0     255
    BANK2           256      0     229
    BANK3           256      0     243
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_84(CODE[1]), STR_46(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_81(CODE[3]), STR_77(CODE[3]), STR_72(CODE[3]), STR_67(CODE[3]), 
		 -> STR_62(CODE[3]), STR_58(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_81(CODE[3]), STR_77(CODE[3]), STR_72(CODE[3]), STR_67(CODE[3]), 
		 -> STR_62(CODE[3]), STR_58(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 79
		 -> ct(STACK[3]), STR_47(CODE[79]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[19]), STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), 
		 -> STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[24]), STR_36(CODE[15]), 
		 -> STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[10]), STR_32(CODE[10]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), 
		 -> STR_21(CODE[19]), STR_20(CODE[20]), STR_19(CODE[19]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[17]), STR_11(CODE[16]), STR_10(CODE[16]), 
		 -> STR_9(CODE[23]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 79
		 -> ct(STACK[3]), STR_47(CODE[79]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[19]), STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), 
		 -> STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[24]), STR_36(CODE[15]), 
		 -> STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[10]), STR_32(CODE[10]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), 
		 -> STR_21(CODE[19]), STR_20(CODE[20]), STR_19(CODE[19]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[17]), STR_11(CODE[16]), STR_10(CODE[16]), 
		 -> STR_9(CODE[23]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_29(CODE[9]), STR_28(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_7(CODE[4]), STR_3(CODE[4]), 
		 -> V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_29(CODE[9]), STR_28(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), port_data(BIGRAM[512]), STR_7(CODE[4]), STR_3(CODE[4]), 
		 -> V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[4]), STR_52(CODE[4]), STR_49(CODE[4]), STR_48(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_53(CODE[4]), STR_52(CODE[4]), STR_49(CODE[4]), STR_48(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_47(CODE[79]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[19]), 
		 -> STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_37(CODE[24]), STR_36(CODE[15]), STR_35(CODE[15]), 
		 -> STR_34(CODE[15]), STR_33(CODE[10]), STR_32(CODE[10]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), 
		 -> STR_21(CODE[19]), STR_20(CODE[20]), STR_19(CODE[19]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), 
		 -> STR_13(CODE[19]), STR_12(CODE[17]), STR_11(CODE[16]), STR_10(CODE[16]), 
		 -> STR_9(CODE[23]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5843_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_47(CODE[79]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[19]), 
		 -> STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_37(CODE[24]), STR_36(CODE[15]), STR_35(CODE[15]), 
		 -> STR_34(CODE[15]), STR_33(CODE[10]), STR_32(CODE[10]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[19]), 
		 -> STR_20(CODE[20]), STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[17]), STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[23]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_47(CODE[79]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[19]), 
		 -> STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_37(CODE[24]), STR_36(CODE[15]), STR_35(CODE[15]), 
		 -> STR_34(CODE[15]), STR_33(CODE[10]), STR_32(CODE[10]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[19]), 
		 -> STR_20(CODE[20]), STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[17]), STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[23]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 79
		 -> STR_47(CODE[79]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[19]), 
		 -> STR_42(CODE[19]), STR_41(CODE[19]), STR_40(CODE[19]), STR_39(CODE[19]), 
		 -> STR_38(CODE[19]), STR_37(CODE[24]), STR_36(CODE[15]), STR_35(CODE[15]), 
		 -> STR_34(CODE[15]), STR_33(CODE[10]), STR_32(CODE[10]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[19]), 
		 -> STR_20(CODE[20]), STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), 
		 -> STR_12(CODE[17]), STR_11(CODE[16]), STR_10(CODE[16]), STR_9(CODE[23]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_29(CODE[9]), STR_28(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_29(CODE[9]), STR_28(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_29(CODE[9]), 
		 -> STR_28(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4399tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_29(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_28(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1994spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1994spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0  352596
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      31
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     665
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     193
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      62
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31430
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  187752
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   93623
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            62    10     52   30377
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   63334
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   63070
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31399
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31578
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   30152
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29999
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29607
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     252
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      53
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     297
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     297
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     297
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35713
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35623
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35623
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            62    10     52   30377
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29999
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29607
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13817
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     322      69        9.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F3      11       94.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E5       9       89.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      92       5       91.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      25       1       58.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     513      58        0.0%
DATA                 0      0     835       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 12 04:32:40 2019

                     _SPI1_Exchange8bit A73E                __end_of_set_display_info A7B6  
                                     _C 0100                                       _D 07FF  
                                     _H 00D2                                       _P 0084  
                                     _R 00AA                                       _S 02BC  
                                     _T FD29                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler A49E            __end_of_start_switch_handler A71E  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FDB9                  __end_of_FVR_Initialize A98A  
                           __CFG_LVP$ON 000000                                     l169 A892  
                                   l807 A74C                                     l673 A306  
                                   _GIE 01FE97                                     _abs 9D08  
                                   _pad 8666                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize A83E                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack A694                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 0092                           _INT1_CallBack A628  
                          __CFG_ZCD$OFF 000000                                    l1000 9FA6  
                                  l1312 224E                                    l2034 86C2  
                                  l1322 24CA                                    l3011 6908  
                                  l1420 9A2C                                    l1332 2568  
                                  l1324 24D0                                    l2054 4CCA  
                                  l2134 0B1A                                    l1334 262E  
                                  l2119 066A                                    l1335 273C  
                                  l2208 50B0                                    l2090 123A  
                                  l1339 2B1E                         _timer3ReloadVal 0027  
                                  l1188 9FE6                                    l2172 624A  
                                  l1560 90BA                                    l2193 5B78  
                                  l2258 21E6                                    l3075 8544  
                                  l1564 93BE                                    l1638 A046  
                                  l2550 8DEE                                    l3342 6D68  
                                  l1655 8886                                    l1647 6E24  
                                  l1743 4BE6                                    l1648 6F80  
                                  l2561 7C94                                    l2554 7BC0  
                                  l3370 95EA                                    l1579 A07A  
                                  l3357 966E                    _ADCC_StartConversion A8AC  
                                  l1695 A7B2                                    l2840 39C6  
                                  l1875 94E4                                    l2828 3B36  
                                  l1788 753A                                    l2588 79C2  
                                  l1884 8A92                                    l2909 337A  
                                  l2873 4736                                    l7210 350A  
                                  l7300 3846                                    l7204 34CA  
                                  l2980 9D48                                    l2972 76D0  
                                  l2949 717E                                    l7222 3572  
                                  l7214 3520                                    l8006 864C  
                                  l8022 8DEC                                    l8014 8D76  
                                  l8030 7B7E                                    l7304 3878  
                                  l7216 3550                                    l8040 7C5C  
                                  l8018 8DB8                                    l8106 7728  
                                  l8130 7F8A                                    l7340 3A06  
                                  l7316 3950                                    l7252 36B0  
                                  l7180 33DA                                    l8036 7C0E  
                                  l7350 3A2E                                    l7334 39E8  
                                  l7326 39AA                                    l7318 3976  
                                  l7262 3722                                    l7190 3430  
                                  l7422 9D38                                    l7502 5B0A  
                                  l8118 77FA                                    l7336 39FA  
                                  l7272 375E                                    l7192 3460  
                                  l8048 7C92                                    l8056 9CDE  
                                  l7440 7672                                    l7520 95DA  
                                  l7354 3A34                                    l7266 3742  
                                  l7186 341A                                    l8154 9BC6  
                                  l8090 795A                                    l8082 792E  
                                  l8066 78AC                                    l8138 8036  
                                  l7380 3AD6                                    l7268 3754  
                                  l7276 378E                                    l8092 7970  
                                  l8084 794A                                    l7436 766E  
                                  l7382 3AE6                                    l7366 3A92  
                                  l7294 382A                                    l7198 3498  
                                  l9062 A3CE                                    l7542 64D4  
                                  l7702 4570                                    l7622 425C  
                                  l7446 76C8                                    l9230 703A  
                                  l9222 6FCE                                    l7800 2CF4  
                                  l7376 3ABE                                    l7296 383C  
                                  l7560 65EC                                    l7536 6480  
                                  l7712 45B2                                    l7616 421C  
                                  l7464 965E                                    l9232 7048  
                                  l7722 45FC                                    l7642 433A  
                                  l7626 4272                                    l9154 A084  
                                  l9242 70AA                                    l9234 705E  
                                  l7388 3B16                                    l7548 651A  
                                  l7580 6970                                    l7708 458C  
                                  l7660 43F8                                    l7636 42FA  
                                  l7628 42A2                                    l7492 5A04  
                                  l9244 70C8                                    l9236 707C  
                                  l7742 46B2                                    l7726 4602  
                                  l7654 43BE                                    l7646 4350  
                                  l7494 5A54                                    l7478 58E6  
                                  l9254 70FC                                    l9246 70DE  
                                  l7912 3328                                    l7904 32E4  
                                  l7808 2D16                                    l7736 4676  
                                  l7648 4380                                    l9264 715E  
                                  l9194 9C02                                    l7914 3342  
                                  l7754 470A                                    l7498 5A9C  
                                  l7860 316E                                    l7780 2BF6  
                                  l7772 2BB0                                    l7596 6AA4  
                                  l7588 69F8                                    l7940 7E3C  
                                  l7756 471A                                    l7748 46E2  
                                  l7668 4412                                    l8812 6BDA  
                                  l7870 31B0                                    l7790 2C7E  
                                  l7782 2C26                                    l9702 73EC  
                                  l7934 7E26                                    l7694 453E  
                                  l7686 44D8                                    l7678 44A2  
                                  l8814 6C46                                    l9640 9C60  
                                  l7880 31FA                                    l8760 66B8  
                                  l7960 7F02                                    l7688 44EA  
                                  l7696 4542                                    l7866 318A  
                                  l7778 2BF0                                    l9706 7400  
                                  l8770 674E                                    l8762 66DA  
                                  l7946 7E5C                                    l9636 9C2E  
                                  l7884 3200                                    l7796 2CBE  
                                  l9740 A05C                                    l8780 67B6  
                                  l7980 856E                                    l9804 499C  
                                  l7894 3274                                    l7798 2CC4  
                                  l8782 67F4                                    l9822 4BB4  
                                  l9830 4BC6                                    l8776 677A  
                                  l7968 7F36                                    l7984 8580  
                                  l9816 4B18                                    l9808 4A38  
                                  l7898 32BA                                    l8786 685C  
                                  l8778 6792                                    l8796 68F8  
                                  l7988 8598                                    l9694 73C0  
                                  l7998 8618                                    l9782 4772  
                                  STR_1 FF52                                    l9792 4890  
                                  l9776 4742                                    STR_2 FFA4  
                                  STR_3 FFE2                                    STR_4 FF41  
                                  STR_5 FF63                                    l9796 496A  
                                  l9964 92AA                                    STR_6 FFA4  
                                  STR_7 FFE2                                    STR_8 FF30  
                                  STR_9 FE34                                    l9968 9312  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u5200 3786  
                                  u6000 69F2                                    u5040 A1EE  
                                  u5210 37A6                                    u6010 6A24  
                                  u5050 A1F0                                    u5205 3776  
                                  u5310 3998                                    u5150 36D6  
                                  u6030 6ADC                                    u5160 36F6  
                                  u5161 36F0                                    u5410 3A82  
                                  u6050 6B2E                                    _T6PR 003F93  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u5350 3A0C                                    u5270 386E  
                                  u6230 45F4                                    _PMD2 0039C2  
                                  u5415 3A72                                    _PMD3 0039C3  
                                  u5440 3AA2                                    u5600 76C0  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u5370 3A26                                    u5178 36F8  
                                  u5610 76C2                                    _PMD6 0039C6  
                                  u5275 385E                                    _PMD7 0039C7  
                                  u6500 3288                                    u5540 9D1C  
                                  u6405 2F60                                    u6510 32CE  
                                  u6270 4650                                    u6190 456A  
                                  u5550 75F2                                    u6415 3128  
                                  u8120 674A                                    u6280 468A  
                                  u5720 59AA                                    u5640 961C  
                                  u5480 A1BE                                    u5800 959A  
                                  u5705 5904                                    u6450 31F2  
                                  u6290 46C6                                    u5706 590A  
                                  u5650 961E                                    u5490 A1C0  
                                  u6275 4640                                    u5555 75E8  
                                  u5707 5918                                    u6380 2D04  
                                  u5820 A21E                                    u8140 68A2  
                                  u5900 6546                                    u5740 5A82  
                                  u9004 4A52                                    u5725 59A0  
                                  u9005 4A4C                                    u5830 A220  
                                  u8150 68A4                                    u6630 85C4  
                                  u5670 587E                                    u8230 6D0E  
                                  u9030 4A7C                                    u9040 A6E8  
                                  u5920 6624                                    u6560 7E88  
                                  u5680 58CA                                    u8240 6D3C  
                                  u9024 4A74                                    u5745 5A78  
                                  u9025 4A6E                                    u6490 324E  
                                  u5850 647A                                    u6650 8638  
                                  u5770 9E9E                                    u6395 2E98  
                                  u5595 76A2                                    u5675 5874  
                                  u8235 6D08                                    u5940 6676  
                                  u6580 7F22                                    u6900 7832  
                                  u5780 9EA0                                    u8237 6CFA  
                                  u9046 A6EA                                    u5870 64D0  
                                  u6750 9CDA                                    u6830 7978  
                                  u8190 6C74                                    u5790 9598  
                                  u6495 323E                                    u8247 6D2E  
                                  u6760 788C                                    u6920 7F84  
                                  u5881 64DA                                    u5890 6514  
                                  u5970 696A                                    u6690 8DE8  
                                  u6850 79A2                                    u6770 78A0  
                                  u6930 7FB6                                    u6780 78DA  
                                  u6765 7882                                    u8197 6C66  
                                  u6861 76E8                                    u5990 69C0  
                                  u6870 7722                                    u6950 806E  
                                  u6880 7754                                    u8720 70F2  
                                  u8625 9EDA                                    u6785 78D0  
                                  u6970 9BA2                                    u6980 9BC2  
                                  u9455 A8D8                                    u8760 9844  
                                  u9456 A8DA                                    u9465 A8C8  
                                  u9466 A8CA                                    _PLLR 01CEE0  
                                  u8860 739E                                    u8924 475C  
                                  u8925 4756                                    u8944 478C  
                                  u8785 9878                                    u8945 4786  
                                  u8786 987A                                    u8778 9846  
                                  u9930 844E                                    u8964 47AE  
                                  u8965 47A8                                    u9950 84CA  
                                  u9960 91DE                                    u8984 4984  
                                  u8985 497E                                    u9967 91D0  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR A2E0                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0394                                    _cp_h FDC9  
                                  _cp_l FDC5                                    _atoi 669E  
                                  _ctoa 94E8                                    _main 21F0  
                                  _dtoa 4BEC                                    _nanf 9900  
                                  _seed 03E4                                    _prec 0023  
                                  _nout 00A6                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 6160                                    btemp 0001  
                                  _utoa 5B34                                    _xtoa 506C  
                __end_of_check_adc_scan A982                           ___fpclassifyf 7544  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 002B  
             __end_of_SPI1_Exchange8bit A75C               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize 9E20             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr A568                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0038                        __end_of_INT0_ISR A91A  
                      __end_of_INT1_ISR A02A          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 90C2           __end_of_OSCILLATOR_Initialize A898  
                                 l10040 A302                                   l11002 4D22  
                                 l10210 8EBA                                   l10028 A73A  
                                 l11012 4F34                                   l10214 8EF8  
                                 l11032 4FE6                                   l11120 0470  
                                 l10066 9F8E                                   l11114 0396  
                                 l11106 032A                                   l11050 00AC  
                                 l10084 9FCE                                   l11036 5022  
                                 l11140 057C                                   l11124 04D2  
                                 l11142 058E                                   l11118 0406  
                                 l11062 00F0                                   l11070 0146  
                                 l12102 89A0                                   l10256 57BC  
                                 l11232 0C32                                   l11216 0B12  
                                 l11208 0A48                                   l11136 0554  
                                 l11080 01EA                                   l10362 96AC  
                                 l11306 1092                                   l11218 0B34  
                                 l11082 0216                                   l12114 89FC  
                                 l10356 9F64                                   l11332 119A  
                                 l11316 10E2                                   l11244 0CBA  
                                 l11252 0D24                                   l11260 0D90  
                                 l11156 05F6                                   l11148 0594  
                                 l11084 022C                                   l11412 5BC4  
                                 l11404 5B68                                   l12124 8A6C  
                                 l12300 2502                                   l12220 2238  
                                 l11174 06B8                                   l11158 0602  
                                 l11422 5DBA                                   l10368 96BC  
                                 l11280 0F3A                                   l11184 077A  
                                 l11088 0258                                   l11352 61CC  
                                 l11504 53DC                                   l12152 6DF4  
                                 l12320 255A                                   l12312 2536  
                                 l12224 2256                                   l11194 0926  
                                 l11178 06F0                                   l11098 02FC  
                                 l11450 50DA                                   l11602 1834  
                                 l12226 2268                                   l12218 2230  
                                 l10900 86BA                                   l11268 0EA2  
                                 l11372 62BC                                   l11444 50A0  
                                 l11540 1360                                   l12332 281A  
                                 l10910 8752                                   l10902 86CC  
                                 l11294 0FD6                                   l11390 63DE  
                                 l11382 6376                                   l11710 216E  
                                 l11622 1A46                                   l11614 198E  
                                 l11542 1376                                   l12166 6F1C  
                                 l11296 0FF0                                   l11376 62EC  
                                 l11368 6280                                   l11480 526C  
                                 l11464 5176                                   l11456 5116  
                                 l11704 2114                                   l11560 14A8  
                                 l11720 2192                                   l12336 287C  
                                 l10906 8708                                   l11386 63A2  
                                 l11714 2172                                   l11626 1A7A  
                                 l11562 14E2                                   l11538 1326  
                                 l12370 2A98                                   l12346 29F8  
                                 l12354 2A42                                   l10916 8CA8  
                                 l11580 165C                                   l11564 14F8  
                                 l10932 5F0C                                   l11804 A29A  
                                 l12372 2AB0                                   l12364 2A86  
                                 l12348 2A22                                   l12276 2422  
                                 PRLOCK 0039EF                                   l11902 81B2  
                                 l11646 1BDA                                   l11590 16F4  
                                 l11830 879E                                   l12382 2AF4  
                                 l10864 845A                                   l11488 52F2  
                                 l11656 1C88                                   l10952 60E2  
                                 l10944 6034                                   l11760 911A  
                                 l12392 2B48                                   l11930 3C06  
                                 l10890 9258                                   l11690 1FDC  
                                 l11666 1DAA                                   l10938 5FCA  
                                 l12378 2ACE                                   l12298 24D4  
                                 l10876 918E                                   l10964 9506  
                                 l11676 1E60                                   l11916 949E  
                                 l11934 3C48                                   l10886 921A  
                                 l10878 91B0                                   l10966 9532  
                                 l10990 4CBA                                   l11598 17E0  
                                 l11774 8F98                                   l11960 4012  
                                 l11944 3E58                                   l11880 80BE  
                                 l10896 8692                                   l11776 8FDA  
                                 l11954 3F80                                   l11882 80CC  
                                 l11874 80A2                                   l11964 4028  
                                 l11948 3ED6                                   l11876 80B2  
                                 l11958 400A                                   l11894 8138  
                                 l11878 80B8                                   l11886 80D4  
                                 l10998 4D04                                   l11888 8100  
                       __end_of___aodiv 669E                            _Volts_to_SOC 92A2  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 3B40                                   _ADCLK 003EFF  
                       __end_of___aomod 6B52                                   _ADPCH 003EF1  
                       __end_of___fldiv 4740                                   _ADREF 003EFD  
                       __end_of___awdiv 7F50                         __end_of___flneg 9D08  
                                 STR_10 FF85                                   STR_12 FF74  
                                 STR_20 FE4B                                   STR_13 FEAB  
                                 STR_21 FE98                                   STR_22 FF85  
                                 STR_14 FED1                                   STR_30 FE72  
                                 STR_31 FE72                                   STR_23 FF85  
                                 STR_15 FEBE                                   STR_24 FF74  
                                 STR_32 FFBF                                   STR_16 FF1D  
                                 STR_40 FE5F                                   STR_33 FFBF  
                                 STR_25 FFFB                                   STR_17 FEF7  
                         __CFG_WDTE$OFF 000000                                   STR_26 FFF8  
                                 STR_34 FF95                                   STR_18 FF0A  
                                 STR_35 FF95                                   STR_19 FEE4  
                                 STR_36 FF95                                   STR_60 FFEF  
                                 STR_52 FFD6                                   STR_28 FFB3  
                       __end_of___awmod 8666                                   STR_53 FFDE  
                                 STR_29 FFC9                                   STR_37 FE1C  
                                 STR_46 FE1B                                   STR_62 FFEF  
                                 STR_70 FFF2                                   STR_39 FE85  
                                 STR_47 FDCD                                   STR_72 FFF2  
                                 STR_56 FFE9                                   STR_48 FFD2  
                                 _ADRPT 003EEC                                   STR_81 FFE6  
                                 STR_65 FFEC                                   STR_49 FFDA  
                                 STR_58 FFE9                                   STR_67 FFEC  
                                 STR_75 FFF5                                   STR_77 FFF5  
                                 STR_79 FFE6                         __end_of___flmul 3384  
                       __end_of___flsub 9D94                         __end_of___fltol 79CC  
                                 u10030 8D22                                   u10200 4F48  
                                 u10120 4C1C                                   u10130 4C1E  
                                 u10211 4F78                                   u10220 4F8E  
                                 u10300 00DA                                   u11100 530E  
                                 u11020 516E                                   u10221 4F8C  
                                 u10037 8D14                                   u10230 4FA2  
                                 u10150 4C8E                                   u11030 51C2  
                                 u11111 533E                                   u10240 4FA6  
                                 u11120 5354                                   u11040 51C4  
                                 u11200 13BE                                   u11121 5352  
                                 u10170 4CA0                                   u10330 0194  
                                 u11130 5368                                   u11210 13C0  
                                 u10090 6156                                   u10260 4FBC  
                                 u10420 050E                                   u10340 0196  
                                 u11140 536C                                   u11060 5222  
                                 u11220 13E6                                   u10190 4CF0  
                                 u11070 5224                                   u10520 0648  
                                 u11320 1748                                   u10450 0562  
                                 u10370 02A6                                   u11090 52EE  
                                 u11250 1540                         __end_of___lodiv 785A  
                                 u10380 02A8                                   u11340 18BC  
                                 u11260 1542                                   u11270 1568  
                                 u11095 52D0                                   u10480 05C6  
                                 u11440 1EB4                                   u11370 1B34  
                                 _U1P1H 003DED                                   u11460 2064  
                                 u11380 1B36                                   _U1P2H 003DEF  
                                 u10750 10B8                                   u10590 0A18  
                                 u10910 5B4E                                   u11630 948A  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u11480 90FA  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u10770 116E                                   u10690 0EE4  
                                 u10850 62E2                                   _U1P3L 003DF0  
                                 u10780 1170                                   u10860 6328  
                                 u11660 94D0                                   u10941 5DFC  
                                 u10950 5E12                                   _U2P1L 003DD4  
                                 u10951 5E10                                   u10960 5E26  
                                 u11648 948C                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u10890 6404  
                                 u10970 5E2A                                   _U2P3L 003DD8  
                                 u10867 631A                                   u10990 5086  
                                 u11870 6F6C                                   u11678 94D2  
                                 _T5CLK 003F9D                                   u11880 6F6E  
                       __end_of___lomod 8090                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0091                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 003D                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR A9AC  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 7E02                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 9B32  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR A826  
                          _DMA1CON1bits 003BFD                                   _flags 0025  
              __size_of_calc_model_data 03A2                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD                                   _fputc 842A  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 9EAA  
                                 _fputs 920A                         __end_of_isdigit A22A  
                       __end_of_ivln2_h FDC5                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand A0CE                                   _width 0021  
                                 _putch A7F0                         __end_of_islower A1CA  
                       __end_of_isspace 9BD6                _INT1_SetInterruptHandler A4C6  
                       __end_of_isupper A1FA                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler A44E  
           _UART1_SetRxInterruptHandler A426                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf 8994                         __end_of_tolower 9678  
                       __end_of_strncmp 6D72                         __end_of_toupper 95F4  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr A590  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 9DDA  
                 __end_of_ringBufS_init A3AE                         __initialization 81CC  
                     _UART2_rx_vect_isr A5B8                            __end_of_cp_h FDCD  
                          __end_of_cp_l FDC9                            __end_of_atoi 6912  
                          __end_of_ctoa 9570                            __end_of_main 2B5A  
                          __end_of_dtoa 506C                            __end_of_nanf 9962  
                          __end_of_stoa 641E                            __end_of_utoa 5E74  
                          __end_of_xtoa 5426                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0038                 __end_of_TMR2_Initialize A856  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button 9F6C  
              _TMR5_SetInterruptHandler A476                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 0088  
                     _port_data_dma_ptr A934                     ??_UART2_rx_vect_isr 003D  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize A30C  
                       _PWM8_Initialize A86C                        _UART1_Initialize 9D94  
                     _UART2_tx_vect_isr A590                      _UART2_Transmit_ISR A2E0  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 989C  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 9EAA  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0038                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1017 9B24                                  _RB6PPS 003A0E  
                                i1l1205 7D6A                    _start_switch_handler A6FE  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize 9E66                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright A8FC  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u930_48 A6A4                                  u941_28 A65C  
                                u882_20 A13E                                  u882_26 A140  
                                u938_48 A6C8                    __size_of_hid_display 0102  
                                u965_44 96DC                                  u965_45 96D6  
                      __end_of___xxtofl 7188   __end_of_ADCC_DischargeSampleCapacitor A96A  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor A962  
              __end_of_send_lcd_cmd_dma 9B84                         _TMR3_WriteTimer 9FAC  
                   ??_UART2_tx_vect_isr 003D               __end_of_UART2_rx_vect_isr A5E0  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize A92A  
                      _UART2_Initialize 99C4                                  _WaitMs A062  
                       _conv_raw_result 4740                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 7B3C  
                                ___fleq 8D34                       _ADCC_ThresholdISR 97CC  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 9334  
                                _efgtoa 0000                                  _floorf 57C8  
                    ?_ADCC_ThresholdISR 0038                                  _memset 5E74  
                  __size_of_help_button 0038                                  clear_0 8282  
                                clear_1 8296                                  clear_2 82A8  
                                clear_3 82B4                                  clear_4 82C0  
                                clear_5 82CC                                  clear_6 82D8  
                                clear_7 82E4               __end_of_port_data_dma_ptr A93E  
                                _printf 9962                      _eaDogM_WriteString 90C2  
                                _strcpy 8C60                               ?_ADCC_ISR 0038  
                                _strlen 9168                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 05FF                         _ADCC_Initialize 9760  
                        _PMD_Initialize A898               __end_of_UART2_tx_vect_isr A5B8  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0038                  __end_of_start_adc_scan 9900  
                          __mediumconst FC58                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay 9A7C                        __end_of_vfprintf 9018  
                            _StartTimer 9EEC           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize 9E20                       _SYSTEM_Initialize 9C76  
                            __accesstop 0060                 __end_of__initialization 82F6  
                             ?_INT0_ISR 0038                               ?_INT1_ISR 0038  
                  __end_of_display_help A97A                    __end_of_display_info A972  
             __end_of_CLKREF_Initialize A934                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer 9F6C  
                 _set_temp_display_help A8DE                        _clear_hid_pflags A604  
                 __end_of_TMR3_CallBack A694               __end_of_ADCC_ThresholdISR 9836  
                    __size_of_calc_bsoc 0686                  __end_of_ringBufS_flush 93C6  
                        __pcstackCOMRAM 0038                              ___inthi_sp 10C2  
                            ___intlo_sp 1861                            __pidataBANK0 A22A  
                          __pidataBANK1 8B80                            __pidataBANK2 8DF8  
                          __pidataBANK3 A98A             __size_of_send_port_data_dma 0052  
                             ?_TMR3_ISR 0038                               ?_TMR5_ISR 0038  
                             ?_TMR6_ISR 0038                          ivt0x8_undefint 00AC  
                         __end_of_fputc 854E                           __end_of_fputs 92A2  
                         __end_of_srand A102                   __end_of_TMR5_CallBack A670  
                         __end_of_putch A80A                 __end_of_PWM8_Initialize A882  
               __end_of_TMR6_Initialize A336                       _adc_int_t_handler 9678  
                __end_of_PMD_Initialize A8AC                              __end_of_bp FDC1  
                            ??_ADCC_ISR 0038                   __end_of_TMR6_CallBack A6DC  
           __size_of_EXT_INT_Initialize 0034                           _DMA1_DMAA_ISR A94C  
                 TMR3_ISR@CountCallBack 00A8                          _clear_adc_scan A992  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 009D               __end_of_SYSTEM_Initialize 9CC0  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer 9FEC                              __pbssBANK0 0060  
                            __pbssBANK1 01DF                              __pbssBANK2 02BC  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              _check_help 6D72  
               __end_of_conv_raw_result 4BEC                   _INT0_InterruptHandler 00A3  
                            ??_INT0_ISR 0038                              ??_INT1_ISR 003E  
                     __end_of_TimerDone A3D6                        _DMA1_DMADCNT_ISR A940  
                    __size_of_init_bsoc 0170              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma A16A                   __end_of_wait_lcd_done A7F0  
      __end_of_TMR3_SetInterruptHandler A4C6                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler A476                              ??_TMR3_ISR 00D9  
               __end_of_ADCC_Initialize 97CA                              ??_TMR5_ISR 0042  
             __end_of_adc_int_t_handler 96F6                              ??_TMR6_ISR 003D  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler A53E   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler A516                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR A71E                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan A998  
                        ?_DMA1_DMAA_ISR 0038                        _DMA1_DMASCNT_ISR A91C  
                               u1160_24 81A8                                 u1160_25 81A4  
                               _U1ERRIE 003DFA                                 u1153_28 80A8  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               u1172_20 3F78                                 u1156_20 80C8  
                               u1156_21 80C2                                 _U2ERRIE 003DE2  
                               u1174_20 4020                                 _U2ERRIR 003DE1  
                               u1176_28 A638                                 u1178_28 A680  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0038  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 41C6  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch A288  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 9FAC  
               __size_of_switch_handler 013C                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one A8DE              __end_of_set_load_relay_two A8CE  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim A826  
                               __Lparam 0000                __end_of_UART1_Initialize 9DDA  
                     __end_of_hid_input 94E8                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 641E                                 ___fladd 3384  
                               ___aomod 6912                                 ___fldiv 41C6  
                               ___awdiv 7E02                                 ___flneg 9CC0  
                               ___awmod 854E                                 ___flmul 2B5A  
                               ___flsub 9D4E                                 ___fltol 785A  
                               ___lodiv 76DA                                 ___lomod 7F50  
             __end_of_UART1_Receive_ISR A73E                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 8B80  
                               __pcinit 81CC                __end_of_mode_lamp_bright A90A  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand A8EE                                 __ramtop 2000  
                               __ptext0 21F0                                 __ptext1 A5E0  
                               __ptext2 A6FE                                 __ptext3 989C  
                               __ptext4 A8AC                                 __ptext5 A962  
                               __ptext6 A0CE                                 __ptext7 A8BE  
                               __ptext8 A8CE                                 __ptext9 A16A  
                     _UART2_Receive_ISR A7B6                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize A882  
                               us606999 6B40                            __size_of_abs 0046  
                          __size_of_pad 0114                       __end_of_init_bsoc 7B3C  
                               _isalpha 9E66                                 _isdigit A1FA  
                               _ivln2_h FDC1                                 us595999 6688  
                               us691999 7844                               _T3CONbits 003FA6  
                               us696999 8080                                 _mode_sw 002E  
                     __end_of_lp_filter 7544                                 _islower A19A  
                               _isspace 9B84                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 9A22  
                               _isupper A1CA              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 888A                                 _tolower 95F4  
                 __size_of_display_help 0008                                 _utctime 007C  
                 __size_of_display_info 0008                                 _strncmp 6B52  
                               _toupper 9570                    end_of_initialization 82F6  
             __size_of_convert_adc_data 00B8                      _check_enter_button 9F2C  
                             i1u1202_20 7D60     __end_of_UART2_SetRxInterruptHandler A426  
           _UART2_SetRxInterruptHandler A3FE                       __end_of_set_vterm A798  
                     __end_of_vfpfcnvrt 21F0                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd A9A4               __end_of_UART2_Receive_ISR A7D4  
                        wdtdelay@dcount 0080                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 003E                   _INT1_InterruptHandler 00A0  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc A9AA  
              _TMR3_SetInterruptHandler A49E                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler A44E                            _display_help A972  
                 _TMR5_InterruptHandler 008B                            _display_info A96A  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags A628  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler A566  
           _ADCC_SetADIInterruptHandler A53E                              _update_lcd 877A  
                       _calc_model_data 5426                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc A5E0  
                       _DMA1_Initialize 96F6                              _start_bsoc A6DC  
                       _SPI1_Initialize A856                   __end_of_get_vterm_ptr A288  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs A098            __end_of_INTERRUPT_Initialize 989C  
                            _vterm_dump 82FC                          __end_of___flge 7C9E  
                        __end_of___fleq 8DF8    __end_of_INT0_DefaultInterruptHandler A9B8  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler A9B6  
            __size_of_UART1_Receive_ISR 0020                         _DMA2_Initialize 9A7C  
                         __pidataBIGRAM 7188                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 5B34             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 006C                          __end_of_memset 6160  
                        __end_of_printf 99C4                __end_of_DMA1_DMADCNT_ISR A94A  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack A6B8  
                        __end_of_strcpy 8D34                          __end_of_strlen 920A  
                   start_initialization 81CC    __end_of_TMR5_DefaultInterruptHandler A16A  
 __size_of_TMR5_DefaultInterruptHandler 0034            _TMR5_DefaultInterruptHandler A136  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 9D4E  
                 __end_of_INT1_CallBack A64C               __size_of_set_display_info 001E  
                           __end_of_pad 877A                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd A386                          _switch_handler 8090  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01F7                   __end_of___fpclassifyf 76DA  
                         _uart2RxBuffer 0500                __end_of_DMA1_DMASCNT_ISR A92A  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR A958  
                   __end_of_hid_display 8A96              __end_of_send_port_data_dma 9C28  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone A3AE  
                         _ringBufS_init A386                             __pdataBANK0 00AA  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
                           __pdataBANK3 03EC              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize A136  
               __end_of_calc_model_data 57C8                     __end_of_help_button A062  
       __end_of_eaDogM_WriteStringAtPos A0CE                     __end_of_BVSOC_TABLE FD29  
                  calc_model_data@bcror 0074                             __pbssBIGRAM 07FF  
               __end_of_DMA1_Initialize 9760                    calc_model_data@bvror 0078  
                           __pbssCOMRAM 0021        __end_of_INT0_SetInterruptHandler A516  
                         __pcstackBANK0 00D9                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 81CC  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize A86C  
              _UART1_RxInterruptHandler 0097                _UART2_TxInterruptHandler 009A  
                             __end_of_T FDB9                        _convert_adc_data 8EB4  
                             _calc_bsoc 3B40               __size_of_ringBufS_put_dma 00AA  
                          _init_display 8A96                  __end_of_DMA1_DMAOR_ISR A962  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 008E  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize 9AD6  
                _PIN_MANAGER_Initialize 93C6                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set A99E                           __pmediumconst FC58  
                             __ptext100 3384                               __ptext101 2B5A  
                             __ptext110 9DDA                               __ptext102 9C76  
                             __ptext111 A476                               __ptext103 99C4  
                             __ptext120 9836                               __ptext112 9E20  
                             __ptext104 A3D6                               __ptext121 A982  
                             __ptext113 A49E                               __ptext105 A3FE  
                             __ptext130 A53E                               __ptext122 A102  
                             __ptext114 A83E                               __ptext106 9D94  
                             __ptext131 9FEC                               __ptext123 A4C6  
                             __ptext115 A856                               __ptext107 A426  
                             __ptext140 9FAC                               __ptext132 A628  
                             __ptext124 A4EE                               __ptext116 A86C  
                             __ptext108 A30C                               __ptext141 A670  
                             __ptext133 A9B2                               __ptext125 9A7C  
                             __ptext117 A898                               __ptext109 A44E  
                             __ptext150 A2B4                               __ptext142 A9B4  
                             __ptext134 8090                               __ptext126 96F6  
                             __ptext118 93C6                               __ptext151 9678  
                             __ptext143 3B40                               __ptext135 9AD8  
                             __ptext127 A92A                               __ptext119 A882  
                             __ptext160 A7B6                               __ptext152 A9B8  
                             __ptext144 9BD6                               __ptext136 9F6C  
                             __ptext128 9760                               __ptext161 A80C  
                             __ptext153 A9BA                               __ptext145 A934  
                             __ptext137 A64C                               __ptext129 A516  
                             __ptext162 A6B8                               __ptext154 97CC  
                             __ptext146 A90C                               __ptext138 A136  
                             __ptext163 9C28                               __ptext155 A568  
                             __ptext147 A694                               __ptext139 7CA0  
                             __ptext164 A91C                               __ptext156 A71E  
                             __ptext148 A9B6                               __ptext165 A940  
                             __ptext157 A590                               __ptext149 A9AC  
                             __ptext166 A94C                               __ptext158 A2E0  
                             __ptext167 A958                               __ptext159 A5B8  
                             __ptext168 0000                               _hid_input 9458  
                    __end_of_StartTimer 9F2C                      _set_load_relay_one A8CE  
                    _set_load_relay_two A8BE                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00AC                                _ADCC_ISR A2B4  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                             _init_bsoc 79CC                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 7388  
                           _hid_display 8994                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 9836  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0038                                _INT0_ISR A90C  
                              _INT1_ISR 9FEC                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 01DF                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0443  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack A670                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u970_48 9802  
                              i2u970_49 9816                                i2u972_48 A57C  
              __size_of_TMR5_Initialize 0046                                i2u974_48 A5A4  
                              i2u976_48 A5CC                                i2u968_48 A2CC  
                             _set_vterm A77A                     __size_of_update_lcd 0110  
                           _help_button A02A                                _TMR3_ISR 7CA0  
                           _BVSOC_TABLE FC59                                _TMR5_ISR 9AD8  
                              _TMR6_ISR A80C                               _port_data 05FF  
                   __size_of_static_soc 0024                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack A64C                              _ADCON0bits 003EF8  
                    __end_of_check_help 6F84                               _start_lcd A99E  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack A6B8                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc A9A4  
                      _set_display_info A798                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 81E0                               copy_data1 8206  
                             copy_data2 8228                               copy_data3 824A  
                             copy_data4 826C                _INT0_SetInterruptHandler A4EE  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler A3FE  
           _UART2_SetTxInterruptHandler A3D6                            _uart1RxCount 0035  
                          _uart2RxCount 002F                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done A7D4  
                          _send_lcd_cmd A35E                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler A9BA                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
                    __end_of_get_switch A2B4                   __end_of_DMA1_DMAA_ISR A956  
                    ___fpclassifyf@F463 0070    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 6F84  
                     ?_DMA1_DMADCNT_ISR 0038             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand A8FC  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 003E  
                              __ptext10 8A96                                __ptext11 A336  
                              __ptext20 A8EE                                __ptext12 A35E  
                              __ptext21 8EB4                                __ptext13 A73E  
                              __ptext30 888A                                __ptext22 4740  
                              __ptext14 A386                                __ptext31 A25A  
                              __ptext23 9900                                __ptext15 79CC  
                              __ptext40 A99E                                __ptext32 A062  
                              __ptext24 A75C                                __ptext16 92A2  
                              __ptext41 9334                                __ptext33 877A  
                              __ptext25 6F84                                __ptext17 8994  
                              __ptext50 5B34                                __ptext42 5E74  
                              __ptext34 A098                                __ptext26 A604  
                              __ptext18 9458                                __ptext51 7F50  
                              __ptext43 9962                                __ptext35 9B32  
                              __ptext27 A992                                __ptext19 A288  
                              __ptext60 7544                                __ptext52 76DA  
                              __ptext44 8F6C                                __ptext36 A7D4  
                              __ptext28 6D72                                __ptext61 785A  
                              __ptext53 6B52                                __ptext45 1244  
                              __ptext37 9A22                                __ptext29 82FC  
                              __ptext70 6912                                __ptext62 9CC0  
                              __ptext54 6160                                __ptext46 506C  
                              __ptext38 90C2                                __ptext71 641E  
                              __ptext63 7B3C                                __ptext55 0000  
                              __ptext47 9570                                __ptext39 A998  
                              __ptext80 9B84                                __ptext72 94E8  
                              __ptext64 8D34                                __ptext56 95F4  
                              __ptext48 A19A                                __ptext81 A1FA  
                              __ptext73 8666                                __ptext65 41C6  
                              __ptext57 A1CA                                __ptext49 9E66  
                              __ptext90 9EEC                                __ptext82 A77A  
                              __ptext74 9168                                __ptext66 854E  
                              __ptext58 8C60                                __ptext91 A96A  
                              __ptext83 A8DE                                __ptext75 920A  
                              __ptext67 7E02                                __ptext59 57C8  
                              __ptext92 A972                                __ptext84 A798  
                              __ptext76 842A                                __ptext68 4BEC  
                              __ptext93 9F2C                                __ptext85 A826  
                              __ptext77 A7F0                                __ptext69 9D08  
                              __ptext94 A97A                                __ptext86 A8FC  
                              __ptext78 9018                                __ptext95 5426  
                              __ptext87 9EAA                                __ptext79 669E  
                              __ptext96 A9A4                                __ptext88 A02A  
                              __ptext97 A6DC                                __ptext89 A3AE  
                              __ptext98 7388                                __ptext99 9D4E  
                      __size_of_isupper 0030                                us1011999 4C06  
                              us1101999 50EC                                us1080999 6172  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1092999 5B9A                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma 9018  
                  __end_of_Volts_to_SOC 9334                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 096A  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0038  
                 __end_of_init_port_dma A19A                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0094  
                             stoa@F1166 03EC                      ??_DMA1_DMASCNT_ISR 003E  
          __end_of_ADCC_StartConversion A8BE                                _spi_link 0060  
                              _wdtdelay 9A22              __end_of_UART2_Transmit_ISR A30C  
                              _vfprintf 8F6C                __end_of_convert_adc_data 8F6C  
            __end_of_PWM8_LoadDutyValue 9EEC    __end_of_TMR3_DefaultInterruptHandler A9B6  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler A9B4  
  __end_of_INT1_DefaultInterruptHandler A9B4   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler A9B2                      _send_port_data_dma 9BD6  
                         ??_Default_ISR 0038                             _uart1RxHead 0037  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0031  
                           _uart1RxTail 0036                          _get_raw_result A75C  
                           _uart2TxHead 0034                             _uart2RxTail 0030  
                           _uart2TxTail 0033                            _wait_lcd_set A998  
                      Volts_to_SOC@slot 002D                      _EXT_INT_Initialize A102  
  __end_of_TMR6_DefaultInterruptHandler 9C76   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler 9C28    __end_of_ADCC_DefaultInterruptHandler A9BA  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler A9B8  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long A336          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help A8EE                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 9168                   __end_of_mode_lamp_dim A83E  
               __end_of_adc_int_handler A9BC                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd 888A  
                _uart2TxBufferRemaining 0032                      __end_of_static_soc A604  
                    __end_of_start_bsoc A6FE                          _FVR_Initialize A982  
                __end_of_get_raw_result A77A                        _send_lcd_cmd_dma 9B32  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0029  
      __end_of_INT1_SetInterruptHandler A4EE               __size_of_UART1_Initialize 0046  
                      ??_DMA1_DMAOR_ISR 003E               __end_of_send_lcd_cmd_long A35E  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR A9B2  
        __end_of_PIN_MANAGER_Initialize 9458               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 842A                 _eaDogM_WriteStringAtPos A098  
                         _get_vterm_ptr A25A                          _check_adc_scan A97A  
             __size_of_UART2_Initialize 005E  
