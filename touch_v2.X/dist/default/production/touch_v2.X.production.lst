

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 10 02:03:41 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=2
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1,inline
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1,inline
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=4,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=4,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=4,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1,group=1
   199                           	psect	text176,global,reloc=4,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=4,class=CODE,delta=1
   203                           	psect	text180,global,reloc=4,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=4,class=CODE,delta=1
   208                           	psect	text185,global,reloc=4,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=4,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=4,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=4,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=4,class=CODE,delta=1
   218                           	psect	text195,global,reloc=4,class=CODE,delta=1
   219                           	psect	text196,global,reloc=4,class=CODE,delta=1
   220                           	psect	text197,global,reloc=4,class=CODE,delta=1
   221                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   222                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   223                           	psect	text198,global,reloc=4,class=CODE,delta=1
   224                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   225                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   226  0000                     
   227                           ; Version 2.10
   228                           ; Generated 31/07/2019 GMT
   229                           ; 
   230                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   231                           ; All rights reserved.
   232                           ; 
   233                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   234                           ; 
   235                           ; Redistribution and use in source and binary forms, with or without modification, are
   236                           ; permitted provided that the following conditions are met:
   237                           ; 
   238                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   239                           ;        conditions and the following disclaimer.
   240                           ; 
   241                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   242                           ;        of conditions and the following disclaimer in the documentation and/or other
   243                           ;        materials provided with the distribution.
   244                           ; 
   245                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   246                           ;        software without specific prior written permission.
   247                           ; 
   248                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   249                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   250                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   251                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   252                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   253                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   254                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   255                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   256                           ; 
   257                           ; 
   258                           ; Code-generator required, PIC18F57K42 Definitions
   259                           ; 
   260                           ; SFR Addresses
   261  0000                     
   262 ;;_main$3811	offset	0
   263 ;;_main$3807	offset	2
   264 ;;_esr_temp	offset	4
   265 ;;_i_esr	offset	8
   266 ;;_shape	offset	10
   267 ;;_inp_index	offset	11
   268 ;;_k	offset	12
   269 ;;_j	offset	13
   270 ;;_i	offset	14
   271 ;;_mode	offset	15
   272 ;;_i_ror	offset	16
   273 ;;_s	offset=-2 (param)
   274 ;;_voltage	offset=-4 (param)
   275 ;;_voltage	offset=-4 (param)
   276 ;;_voltage	offset=-4 (param)
   277 ;;_set	offset=-1 (param)
   278 ;;_x	offset	0
   279 ;;_r_cal_ptr	offset	2
   280 ;;_y	offset	4
   281 ;;_crcVal_save	offset	6
   282 ;;_bAdd	offset=-2 (param)
   283 ;;_data	offset=-1 (param)
   284 ;;_cmd	offset=-1 (param)
   285 ;;_cmd	offset=-1 (param)
   286 ;;_data	offset=-1 (param)
   287 ;;__this	offset=-2 (param)
   288 ;;_soc	offset	0
   289 ;;_slot	offset	2
   290 ;;_cvoltage	offset=-4 (param)
   291 ;;_h	offset=-2 (param)
   292 ;;_h	offset=-2 (param)
   293 ;;_fsm	offset=-1 (param)
   294 ;;_mode	offset=-1 (param)
   295 ;;_mode	offset=-1 (param)
   296 ;;_cmd	offset=-1 (param)
   297 ;;_cp	offset	0
   298 ;;_cb	offset	4
   299 ;;_x	offset	8
   300 ;;_x	offset	0
   301 ;;_y	offset	2
   302 ;;_r_cal_ptr	offset	4
   303 ;;_GIEBitValue	offset	0
   304 ;;_bAdd	offset=-2 (param)
   305 ;;_bData	offset=-3 (param)
   306 ;;_result	offset	0
   307 ;;_mask	offset	2
   308 ;;_reverse	offset=-1 (param)
   309 ;;_xorValue	offset=-3 (param)
   310 ;;_mask	offset	0
   311 ;;_reverse	offset	2
   312 ;;_crc	offset=-2 (param)
   313 ;;_data	offset=-1 (param)
   314 ;;_channel	offset=-1 (param)
   315 ;;_c	offset	0
   316 ;;_shape	offset=-1 (param)
   317 ;;_reset	offset=-2 (param)
   318 ;;_i	offset=-1 (param)
   319 ;;_mode	offset=-1 (param)
   320 ;;_cb	offset=-3 (param)
   321 ;;_cp	offset=-5 (param)
   322 ;;_value	offset=-2 (param)
   323 ;;_window	offset=-4 (param)
   324 ;;_standard	offset=-6 (param)
   325 ;;_i	offset	0
   326 ;;_h	offset=-2 (param)
   327 ;;_flipper	offset=-1 (param)
   328 ;;_f	offset	0
   329 ;;_ap	offset	6
   330 ;;_s	offset=-3 (param)
   331 ;;_fmt	offset=-5 (param)
   332 ;;_line	offset=-1 (param)
   333 ;;_vterm	offset=-2 (param)
   334 ;;_numMilliseconds	offset=-2 (param)
   335 ;;_vterm	offset=-1 (param)
   336 ;;_row	offset	0
   337 ;;_r	offset=-1 (param)
   338 ;;_c	offset=-2 (param)
   339 ;;_strPtr	offset=-4 (param)
   340 ;;_strPtr	offset=-1 (param)
   341 ;;_delay	offset=-4 (param)
   342 ;;_strPtr	offset=-1 (param)
   343 ;;_strPtr	offset=-2 (param)
   344 ;;__this	offset=-2 (param)
   345 ;;_clearBuffer	offset=-3 (param)
   346 ;;_s	offset	0
   347 ;;_k	offset	2
   348 ;;_dest	offset=-2 (param)
   349 ;;_c	offset=-4 (param)
   350 ;;_n	offset=-6 (param)
   351 ;;_ap	offset	0
   352 ;;_fmt	offset=-3 (param)
   353 ;;_cfmt	offset	0
   354 ;;_fp	offset=-2 (param)
   355 ;;_fmt	offset=-4 (param)
   356 ;;_ap	offset=-6 (param)
   357 ;;_vfpfcnvrt$6220	offset	0
   358 ;;_vfpfcnvrt$6231	offset	2
   359 ;;_vfpfcnvrt$6219	offset	4
   360 ;;_llu	offset	6
   361 ;;_ll	offset	14
   362 ;;_f	offset	22
   363 ;;_ct	offset	26
   364 ;;_cp	offset	29
   365 ;;_c	offset	31
   366 ;;_fp	offset=-2 (param)
   367 ;;_fmt	offset=-4 (param)
   368 ;;_ap	offset=-6 (param)
   369 ;;_xtoa$6205	offset	0
   370 ;;_xtoa$6204	offset	2
   371 ;;_n	offset	4
   372 ;;_c	offset	12
   373 ;;_i	offset	14
   374 ;;_w	offset	16
   375 ;;_p	offset	18
   376 ;;_fp	offset=-2 (param)
   377 ;;_d	offset=-10 (param)
   378 ;;_x	offset=-11 (param)
   379 ;;_toupper$7011	offset	0
   380 ;;_c	offset=-2 (param)
   381 ;;_c	offset=-2 (param)
   382 ;;_c	offset=-2 (param)
   383 ;;_n	offset	0
   384 ;;_i	offset	8
   385 ;;_w	offset	10
   386 ;;_p	offset	12
   387 ;;_fp	offset=-2 (param)
   388 ;;_d	offset=-10 (param)
   389 ;;_counter	offset	0
   390 ;;_dividend	offset=-8 (param)
   391 ;;_divisor	offset=-16 (param)
   392 ;;_quotient	offset	0
   393 ;;_counter	offset	8
   394 ;;_dividend	offset=-8 (param)
   395 ;;_divisor	offset=-16 (param)
   396 ;;_r	offset	0
   397 ;;_l	offset	2
   398 ;;__l	offset=-2 (param)
   399 ;;__r	offset=-4 (param)
   400 ;;_n	offset=-6 (param)
   401 ;;_nuls	offset	0
   402 ;;_l	offset	7
   403 ;;_p	offset	9
   404 ;;_cp	offset	11
   405 ;;_w	offset	13
   406 ;;_i	offset	15
   407 ;;_fp	offset=-2 (param)
   408 ;;_s	offset=-4 (param)
   409 ;;_efgtoa$6177	offset	0
   410 ;;_efgtoa$6176	offset	2
   411 ;;_efgtoa$6175	offset	4
   412 ;;_efgtoa$6171	offset	6
   413 ;;_efgtoa$6167	offset	8
   414 ;;_efgtoa$6166	offset	10
   415 ;;_u	offset	12
   416 ;;_g	offset	16
   417 ;;_l	offset	20
   418 ;;_h	offset	24
   419 ;;_ou	offset	28
   420 ;;_n	offset	32
   421 ;;_e	offset	34
   422 ;;_i	offset	36
   423 ;;_w	offset	38
   424 ;;_p	offset	40
   425 ;;_sign	offset	42
   426 ;;_d	offset	44
   427 ;;_ne	offset	46
   428 ;;_m	offset	48
   429 ;;_pp	offset	50
   430 ;;_t	offset	52
   431 ;;_mode	offset	54
   432 ;;_nmode	offset	55
   433 ;;_fp	offset=-2 (param)
   434 ;;_f	offset=-6 (param)
   435 ;;_c	offset=-7 (param)
   436 ;;_tolower$6996	offset	0
   437 ;;_c	offset=-2 (param)
   438 ;;_c	offset=-2 (param)
   439 ;;_d	offset	0
   440 ;;_s	offset	2
   441 ;;_dest	offset=-2 (param)
   442 ;;_src	offset=-4 (param)
   443 ;;_u	offset	0
   444 ;;_m	offset	4
   445 ;;_e	offset	8
   446 ;;_x	offset=-4 (param)
   447 ;;_u	offset	0
   448 ;;_e	offset	4
   449 ;;_x	offset=-4 (param)
   450 ;;_exp1	offset	0
   451 ;;_sign1	offset	1
   452 ;;_f1	offset=-4 (param)
   453 ;;_f1	offset=-4 (param)
   454 ;;_ff1	offset=-4 (param)
   455 ;;_ff2	offset=-8 (param)
   456 ;;_sign	offset	0
   457 ;;_counter	offset	1
   458 ;;_dividend	offset=-2 (param)
   459 ;;_divisor	offset=-4 (param)
   460 ;;_quotient	offset	0
   461 ;;_sign	offset	2
   462 ;;_counter	offset	3
   463 ;;_dividend	offset=-2 (param)
   464 ;;_divisor	offset=-4 (param)
   465 ;;_dtoa$6143	offset	0
   466 ;;_n	offset	2
   467 ;;_i	offset	10
   468 ;;_s	offset	12
   469 ;;_w	offset	14
   470 ;;_p	offset	16
   471 ;;_fp	offset=-2 (param)
   472 ;;_d	offset=-10 (param)
   473 ;;_a	offset=-2 (param)
   474 ;;_sign	offset	0
   475 ;;_counter	offset	1
   476 ;;_dividend	offset=-8 (param)
   477 ;;_divisor	offset=-16 (param)
   478 ;;_quotient	offset	0
   479 ;;_sign	offset	8
   480 ;;_counter	offset	9
   481 ;;_dividend	offset=-8 (param)
   482 ;;_divisor	offset=-16 (param)
   483 ;;_w	offset	0
   484 ;;_fp	offset=-2 (param)
   485 ;;_c	offset=-3 (param)
   486 ;;_w	offset	0
   487 ;;_i	offset	2
   488 ;;_fp	offset=-2 (param)
   489 ;;_buf	offset=-4 (param)
   490 ;;_p	offset=-6 (param)
   491 ;;_a	offset	0
   492 ;;_s	offset=-2 (param)
   493 ;;_i	offset	0
   494 ;;_c	offset	2
   495 ;;_s	offset=-2 (param)
   496 ;;_fp	offset=-4 (param)
   497 ;;_c	offset=-2 (param)
   498 ;;_fp	offset=-4 (param)
   499 ;;_c	offset=-1 (param)
   500 ;;__this	offset=-2 (param)
   501 ;;_c	offset=-3 (param)
   502 ;;_atoi$6727	offset	0
   503 ;;_atoi$6725	offset	2
   504 ;;_atoi$6726	offset	4
   505 ;;_n	offset	5
   506 ;;_neg	offset	7
   507 ;;_s	offset=-2 (param)
   508 ;;_isspace$6776	offset	0
   509 ;;_c	offset=-2 (param)
   510 ;;_c	offset=-2 (param)
   511 ;;_vterm	offset=-1 (param)
   512 ;;_new_response_info	offset=-1 (param)
   513 ;;_new_response_info	offset=-1 (param)
   514 ;;_level	offset=-2 (param)
   515 ;;_dutyValue	offset=-2 (param)
   516 ;;_timer	offset=-1 (param)
   517 ;;_timer	offset=-1 (param)
   518 ;;_count	offset=-3 (param)
   519 ;;_h	offset=-2 (param)
   520 ;;_u	offset	0
   521 ;;_x	offset=-4 (param)
   522 ;;_chan	offset=-1 (param)
   523 ;;_to_what	offset=-2 (param)
   524 ;;_u	offset	0
   525 ;;_s	offset=-2 (param)
   526 ;;_index	offset=-1 (param)
   527 ;;_arg	offset	0
   528 ;;_exp	offset	4
   529 ;;_sign	offset=-1 (param)
   530 ;;_val	offset=-5 (param)
   531 ;;_grs	offset	0
   532 ;;_rem	offset	4
   533 ;;_new_exp	offset	8
   534 ;;_aexp	offset	10
   535 ;;_bexp	offset	11
   536 ;;_sign	offset	12
   537 ;;_b	offset=-4 (param)
   538 ;;_a	offset=-8 (param)
   539 ;;_ff1	offset=-4 (param)
   540 ;;_ff2	offset=-8 (param)
   541 ;;_lp_speed	offset	0
   542 ;;_new	offset=-4 (param)
   543 ;;_bn	offset=-5 (param)
   544 ;;_slow	offset=-6 (param)
   545 ;;_b	offset=-4 (param)
   546 ;;_a	offset=-8 (param)
   547 ;;_grs	offset	0
   548 ;;_bexp	offset	1
   549 ;;_aexp	offset	2
   550 ;;_signs	offset	3
   551 ;;_b	offset=-4 (param)
   552 ;;_a	offset=-8 (param)
   553 ;;_prod	offset	0
   554 ;;_grs	offset	4
   555 ;;_temp	offset	8
   556 ;;_bexp	offset	10
   557 ;;_aexp	offset	11
   558 ;;_sign	offset	12
   559 ;;_b	offset=-4 (param)
   560 ;;_a	offset=-8 (param)
   561 ;;_InterruptHandler	offset=-3 (param)
   562 ;;_InterruptHandler	offset=-3 (param)
   563 ;;_InterruptHandler	offset=-3 (param)
   564 ;;_InterruptHandler	offset=-3 (param)
   565 ;;_InterruptHandler	offset=-3 (param)
   566 ;;_InterruptHandler	offset=-3 (param)
   567 ;;_state	offset	0
   568 ;;_InterruptHandler	offset=-3 (param)
   569 ;;_InterruptHandler	offset=-3 (param)
   570 ;;_seed	offset	0
   571 ;;_poly	offset	2
   572 ;;_InterruptHandler	offset=-3 (param)
   573 ;;_InterruptHandler	offset=-3 (param)
   574 ;;_i	offset	0
   575 ;;_sw_value	offset	1
   576 ;;_timerVal	offset=-2 (param)
   577 ;;_light	offset	0
   578 ;;_mode	offset=-1 (param)
   579 ;;_chan	offset=-1 (param)
   580 ;;_to_what	offset=-2 (param)
   581 ;;_u	offset	0
   582 ;;_s	offset=-2 (param)
   583 ;;_index	offset=-1 (param)
   584 ;;_arg	offset	0
   585 ;;_exp	offset	4
   586 ;;_sign	offset=-1 (param)
   587 ;;_val	offset=-5 (param)
   588 ;;_b	offset=-4 (param)
   589 ;;_a	offset=-8 (param)
   590 ;;_grs	offset	0
   591 ;;_bexp	offset	1
   592 ;;_aexp	offset	2
   593 ;;_signs	offset	3
   594 ;;_b	offset=-4 (param)
   595 ;;_a	offset=-8 (param)
   596 ;;_prod	offset	0
   597 ;;_grs	offset	4
   598 ;;_temp	offset	8
   599 ;;_bexp	offset	10
   600 ;;_aexp	offset	11
   601 ;;_sign	offset	12
   602 ;;_b	offset=-4 (param)
   603 ;;_a	offset=-8 (param)
   604 ;;_grs	offset	0
   605 ;;_rem	offset	4
   606 ;;_new_exp	offset	8
   607 ;;_aexp	offset	10
   608 ;;_bexp	offset	11
   609 ;;_sign	offset	12
   610 ;;_b	offset=-4 (param)
   611 ;;_a	offset=-8 (param)
   612 ;;_ff1	offset=-4 (param)
   613 ;;_ff2	offset=-8 (param)
   614 ;;_timerVal	offset=-2 (param)
   615 ;;_adj	offset	0
   616 ;;_log_ptr	offset	4
   617 ;;_f	offset	0
   618 ;;_ap	offset	6
   619 ;;_s	offset=-3 (param)
   620 ;;_fmt	offset=-5 (param)
   621 ;;_cfmt	offset	0
   622 ;;_fp	offset=-2 (param)
   623 ;;_fmt	offset=-4 (param)
   624 ;;_ap	offset=-6 (param)
   625 ;;_vfpfcnvrt$6220	offset	0
   626 ;;_vfpfcnvrt$6231	offset	2
   627 ;;_vfpfcnvrt$6219	offset	4
   628 ;;_llu	offset	6
   629 ;;_ll	offset	14
   630 ;;_f	offset	22
   631 ;;_ct	offset	26
   632 ;;_cp	offset	29
   633 ;;_c	offset	31
   634 ;;_fp	offset=-2 (param)
   635 ;;_fmt	offset=-4 (param)
   636 ;;_ap	offset=-6 (param)
   637 ;;_xtoa$6205	offset	0
   638 ;;_xtoa$6204	offset	2
   639 ;;_n	offset	4
   640 ;;_c	offset	12
   641 ;;_i	offset	14
   642 ;;_w	offset	16
   643 ;;_p	offset	18
   644 ;;_fp	offset=-2 (param)
   645 ;;_d	offset=-10 (param)
   646 ;;_x	offset=-11 (param)
   647 ;;_toupper$7011	offset	0
   648 ;;_c	offset=-2 (param)
   649 ;;_c	offset=-2 (param)
   650 ;;_c	offset=-2 (param)
   651 ;;_n	offset	0
   652 ;;_i	offset	8
   653 ;;_w	offset	10
   654 ;;_p	offset	12
   655 ;;_fp	offset=-2 (param)
   656 ;;_d	offset=-10 (param)
   657 ;;_counter	offset	0
   658 ;;_dividend	offset=-8 (param)
   659 ;;_divisor	offset=-16 (param)
   660 ;;_quotient	offset	0
   661 ;;_counter	offset	8
   662 ;;_dividend	offset=-8 (param)
   663 ;;_divisor	offset=-16 (param)
   664 ;;_r	offset	0
   665 ;;_l	offset	2
   666 ;;__l	offset=-2 (param)
   667 ;;__r	offset=-4 (param)
   668 ;;_n	offset=-6 (param)
   669 ;;_nuls	offset	0
   670 ;;_l	offset	7
   671 ;;_p	offset	9
   672 ;;_cp	offset	11
   673 ;;_w	offset	13
   674 ;;_i	offset	15
   675 ;;_fp	offset=-2 (param)
   676 ;;_s	offset=-4 (param)
   677 ;;_efgtoa$6177	offset	0
   678 ;;_efgtoa$6176	offset	2
   679 ;;_efgtoa$6175	offset	4
   680 ;;_efgtoa$6171	offset	6
   681 ;;_efgtoa$6167	offset	8
   682 ;;_efgtoa$6166	offset	10
   683 ;;_u	offset	12
   684 ;;_g	offset	16
   685 ;;_l	offset	20
   686 ;;_h	offset	24
   687 ;;_ou	offset	28
   688 ;;_n	offset	32
   689 ;;_e	offset	34
   690 ;;_i	offset	36
   691 ;;_w	offset	38
   692 ;;_p	offset	40
   693 ;;_sign	offset	42
   694 ;;_d	offset	44
   695 ;;_ne	offset	46
   696 ;;_m	offset	48
   697 ;;_pp	offset	50
   698 ;;_t	offset	52
   699 ;;_mode	offset	54
   700 ;;_nmode	offset	55
   701 ;;_fp	offset=-2 (param)
   702 ;;_f	offset=-6 (param)
   703 ;;_c	offset=-7 (param)
   704 ;;_tolower$6996	offset	0
   705 ;;_c	offset=-2 (param)
   706 ;;_c	offset=-2 (param)
   707 ;;_d	offset	0
   708 ;;_s	offset	2
   709 ;;_dest	offset=-2 (param)
   710 ;;_src	offset=-4 (param)
   711 ;;_u	offset	0
   712 ;;_m	offset	4
   713 ;;_e	offset	8
   714 ;;_x	offset=-4 (param)
   715 ;;_u	offset	0
   716 ;;_e	offset	4
   717 ;;_x	offset=-4 (param)
   718 ;;_exp1	offset	0
   719 ;;_sign1	offset	1
   720 ;;_f1	offset=-4 (param)
   721 ;;_f1	offset=-4 (param)
   722 ;;_ff1	offset=-4 (param)
   723 ;;_ff2	offset=-8 (param)
   724 ;;_sign	offset	0
   725 ;;_counter	offset	1
   726 ;;_dividend	offset=-2 (param)
   727 ;;_divisor	offset=-4 (param)
   728 ;;_quotient	offset	0
   729 ;;_sign	offset	2
   730 ;;_counter	offset	3
   731 ;;_dividend	offset=-2 (param)
   732 ;;_divisor	offset=-4 (param)
   733 ;;_dtoa$6143	offset	0
   734 ;;_n	offset	2
   735 ;;_i	offset	10
   736 ;;_s	offset	12
   737 ;;_w	offset	14
   738 ;;_p	offset	16
   739 ;;_fp	offset=-2 (param)
   740 ;;_d	offset=-10 (param)
   741 ;;_a	offset=-2 (param)
   742 ;;_sign	offset	0
   743 ;;_counter	offset	1
   744 ;;_dividend	offset=-8 (param)
   745 ;;_divisor	offset=-16 (param)
   746 ;;_quotient	offset	0
   747 ;;_sign	offset	8
   748 ;;_counter	offset	9
   749 ;;_dividend	offset=-8 (param)
   750 ;;_divisor	offset=-16 (param)
   751 ;;_w	offset	0
   752 ;;_fp	offset=-2 (param)
   753 ;;_c	offset=-3 (param)
   754 ;;_w	offset	0
   755 ;;_i	offset	2
   756 ;;_fp	offset=-2 (param)
   757 ;;_buf	offset=-4 (param)
   758 ;;_p	offset=-6 (param)
   759 ;;_a	offset	0
   760 ;;_s	offset=-2 (param)
   761 ;;_i	offset	0
   762 ;;_c	offset	2
   763 ;;_s	offset=-2 (param)
   764 ;;_fp	offset=-4 (param)
   765 ;;_c	offset=-2 (param)
   766 ;;_fp	offset=-4 (param)
   767 ;;_c	offset=-1 (param)
   768 ;;__this	offset=-2 (param)
   769 ;;_c	offset=-3 (param)
   770 ;;_atoi$6727	offset	0
   771 ;;_atoi$6725	offset	2
   772 ;;_atoi$6726	offset	4
   773 ;;_n	offset	5
   774 ;;_neg	offset	7
   775 ;;_s	offset=-2 (param)
   776 ;;_isspace$6776	offset	0
   777 ;;_c	offset=-2 (param)
   778 ;;_c	offset=-2 (param)
   779 ;;_dsize	offset=-2 (param)
   780 ;;_u	offset	0
   781 ;;_x	offset=-4 (param)
   782 ;;_f1p	offset=-2 (param)
   783 ;;_f2	offset=-6 (param)
   784 ;;_timer	offset=-1 (param)
   785 ;;_count	offset=-3 (param)
   786 ;;_channel	offset=-1 (param)
   787 ;;_i	offset	0
   788                           
   789                           	psect	idataBIGRAM
   790  0170E2                     __pidataBIGRAM:
   791                           	opt callstack 0
   792                           
   793                           ;initializer for _port_data
   794  0170E2  FF                 	db	255
   795  0170E3  00                 	db	0
   796  0170E4  FF                 	db	255
   797  0170E5  00                 	db	0
   798  0170E6  FF                 	db	255
   799  0170E7  00                 	db	0
   800  0170E8  FF                 	db	255
   801  0170E9  00                 	db	0
   802  0170EA  FF                 	db	255
   803  0170EB  00                 	db	0
   804  0170EC  FF                 	db	255
   805  0170ED  00                 	db	0
   806  0170EE  FF                 	db	255
   807  0170EF  00                 	db	0
   808  0170F0  FF                 	db	255
   809  0170F1  00                 	db	0
   810  0170F2  00                 	db	0
   811  0170F3  00                 	db	0
   812  0170F4  00                 	db	0
   813  0170F5  00                 	db	0
   814  0170F6  00                 	db	0
   815  0170F7  00                 	db	0
   816  0170F8  00                 	db	0
   817  0170F9  00                 	db	0
   818  0170FA  00                 	db	0
   819  0170FB  00                 	db	0
   820  0170FC  00                 	db	0
   821  0170FD  00                 	db	0
   822  0170FE  00                 	db	0
   823  0170FF  00                 	db	0
   824  017100  00                 	db	0
   825  017101  00                 	db	0
   826  017102  00                 	db	0
   827  017103  00                 	db	0
   828  017104  00                 	db	0
   829  017105  00                 	db	0
   830  017106  00                 	db	0
   831  017107  00                 	db	0
   832  017108  00                 	db	0
   833  017109  00                 	db	0
   834  01710A  00                 	db	0
   835  01710B  00                 	db	0
   836  01710C  00                 	db	0
   837  01710D  00                 	db	0
   838  01710E  00                 	db	0
   839  01710F  00                 	db	0
   840  017110  00                 	db	0
   841  017111  00                 	db	0
   842  017112  00                 	db	0
   843  017113  00                 	db	0
   844  017114  00                 	db	0
   845  017115  00                 	db	0
   846  017116  00                 	db	0
   847  017117  00                 	db	0
   848  017118  00                 	db	0
   849  017119  00                 	db	0
   850  01711A  00                 	db	0
   851  01711B  00                 	db	0
   852  01711C  00                 	db	0
   853  01711D  00                 	db	0
   854  01711E  00                 	db	0
   855  01711F  00                 	db	0
   856  017120  00                 	db	0
   857  017121  00                 	db	0
   858  017122  00                 	db	0
   859  017123  00                 	db	0
   860  017124  00                 	db	0
   861  017125  00                 	db	0
   862  017126  00                 	db	0
   863  017127  00                 	db	0
   864  017128  00                 	db	0
   865  017129  00                 	db	0
   866  01712A  00                 	db	0
   867  01712B  00                 	db	0
   868  01712C  00                 	db	0
   869  01712D  00                 	db	0
   870  01712E  00                 	db	0
   871  01712F  00                 	db	0
   872  017130  00                 	db	0
   873  017131  00                 	db	0
   874  017132  00                 	db	0
   875  017133  00                 	db	0
   876  017134  00                 	db	0
   877  017135  00                 	db	0
   878  017136  00                 	db	0
   879  017137  00                 	db	0
   880  017138  00                 	db	0
   881  017139  00                 	db	0
   882  01713A  00                 	db	0
   883  01713B  00                 	db	0
   884  01713C  00                 	db	0
   885  01713D  00                 	db	0
   886  01713E  00                 	db	0
   887  01713F  00                 	db	0
   888  017140  00                 	db	0
   889  017141  00                 	db	0
   890  017142  00                 	db	0
   891  017143  00                 	db	0
   892  017144  00                 	db	0
   893  017145  00                 	db	0
   894  017146  00                 	db	0
   895  017147  00                 	db	0
   896  017148  00                 	db	0
   897  017149  00                 	db	0
   898  01714A  00                 	db	0
   899  01714B  00                 	db	0
   900  01714C  00                 	db	0
   901  01714D  00                 	db	0
   902  01714E  00                 	db	0
   903  01714F  00                 	db	0
   904  017150  00                 	db	0
   905  017151  00                 	db	0
   906  017152  00                 	db	0
   907  017153  00                 	db	0
   908  017154  00                 	db	0
   909  017155  00                 	db	0
   910  017156  00                 	db	0
   911  017157  00                 	db	0
   912  017158  00                 	db	0
   913  017159  00                 	db	0
   914  01715A  00                 	db	0
   915  01715B  00                 	db	0
   916  01715C  00                 	db	0
   917  01715D  00                 	db	0
   918  01715E  00                 	db	0
   919  01715F  00                 	db	0
   920  017160  00                 	db	0
   921  017161  00                 	db	0
   922  017162  00                 	db	0
   923  017163  00                 	db	0
   924  017164  00                 	db	0
   925  017165  00                 	db	0
   926  017166  00                 	db	0
   927  017167  00                 	db	0
   928  017168  00                 	db	0
   929  017169  00                 	db	0
   930  01716A  00                 	db	0
   931  01716B  00                 	db	0
   932  01716C  00                 	db	0
   933  01716D  00                 	db	0
   934  01716E  00                 	db	0
   935  01716F  00                 	db	0
   936  017170  00                 	db	0
   937  017171  00                 	db	0
   938  017172  00                 	db	0
   939  017173  00                 	db	0
   940  017174  00                 	db	0
   941  017175  00                 	db	0
   942  017176  00                 	db	0
   943  017177  00                 	db	0
   944  017178  00                 	db	0
   945  017179  00                 	db	0
   946  01717A  00                 	db	0
   947  01717B  00                 	db	0
   948  01717C  00                 	db	0
   949  01717D  00                 	db	0
   950  01717E  00                 	db	0
   951  01717F  00                 	db	0
   952  017180  00                 	db	0
   953  017181  00                 	db	0
   954  017182  00                 	db	0
   955  017183  00                 	db	0
   956  017184  00                 	db	0
   957  017185  00                 	db	0
   958  017186  00                 	db	0
   959  017187  00                 	db	0
   960  017188  00                 	db	0
   961  017189  00                 	db	0
   962  01718A  00                 	db	0
   963  01718B  00                 	db	0
   964  01718C  00                 	db	0
   965  01718D  00                 	db	0
   966  01718E  00                 	db	0
   967  01718F  00                 	db	0
   968  017190  00                 	db	0
   969  017191  00                 	db	0
   970  017192  00                 	db	0
   971  017193  00                 	db	0
   972  017194  00                 	db	0
   973  017195  00                 	db	0
   974  017196  00                 	db	0
   975  017197  00                 	db	0
   976  017198  00                 	db	0
   977  017199  00                 	db	0
   978  01719A  00                 	db	0
   979  01719B  00                 	db	0
   980  01719C  00                 	db	0
   981  01719D  00                 	db	0
   982  01719E  00                 	db	0
   983  01719F  00                 	db	0
   984  0171A0  00                 	db	0
   985  0171A1  00                 	db	0
   986  0171A2  00                 	db	0
   987  0171A3  00                 	db	0
   988  0171A4  00                 	db	0
   989  0171A5  00                 	db	0
   990  0171A6  00                 	db	0
   991  0171A7  00                 	db	0
   992  0171A8  00                 	db	0
   993  0171A9  00                 	db	0
   994  0171AA  00                 	db	0
   995  0171AB  00                 	db	0
   996  0171AC  00                 	db	0
   997  0171AD  00                 	db	0
   998  0171AE  00                 	db	0
   999  0171AF  00                 	db	0
  1000  0171B0  00                 	db	0
  1001  0171B1  00                 	db	0
  1002  0171B2  00                 	db	0
  1003  0171B3  00                 	db	0
  1004  0171B4  00                 	db	0
  1005  0171B5  00                 	db	0
  1006  0171B6  00                 	db	0
  1007  0171B7  00                 	db	0
  1008  0171B8  00                 	db	0
  1009  0171B9  00                 	db	0
  1010  0171BA  00                 	db	0
  1011  0171BB  00                 	db	0
  1012  0171BC  00                 	db	0
  1013  0171BD  00                 	db	0
  1014  0171BE  00                 	db	0
  1015  0171BF  00                 	db	0
  1016  0171C0  00                 	db	0
  1017  0171C1  00                 	db	0
  1018  0171C2  00                 	db	0
  1019  0171C3  00                 	db	0
  1020  0171C4  00                 	db	0
  1021  0171C5  00                 	db	0
  1022  0171C6  00                 	db	0
  1023  0171C7  00                 	db	0
  1024  0171C8  00                 	db	0
  1025  0171C9  00                 	db	0
  1026  0171CA  00                 	db	0
  1027  0171CB  00                 	db	0
  1028  0171CC  00                 	db	0
  1029  0171CD  00                 	db	0
  1030  0171CE  00                 	db	0
  1031  0171CF  00                 	db	0
  1032  0171D0  00                 	db	0
  1033  0171D1  00                 	db	0
  1034  0171D2  00                 	db	0
  1035  0171D3  00                 	db	0
  1036  0171D4  00                 	db	0
  1037  0171D5  00                 	db	0
  1038  0171D6  00                 	db	0
  1039  0171D7  00                 	db	0
  1040  0171D8  00                 	db	0
  1041  0171D9  00                 	db	0
  1042  0171DA  00                 	db	0
  1043  0171DB  00                 	db	0
  1044  0171DC  00                 	db	0
  1045  0171DD  00                 	db	0
  1046  0171DE  00                 	db	0
  1047  0171DF  00                 	db	0
  1048  0171E0  00                 	db	0
  1049  0171E1  00                 	db	0
  1050  0171E2  00                 	db	0
  1051  0171E3  00                 	db	0
  1052  0171E4  00                 	db	0
  1053  0171E5  00                 	db	0
  1054  0171E6  00                 	db	0
  1055  0171E7  00                 	db	0
  1056  0171E8  00                 	db	0
  1057  0171E9  00                 	db	0
  1058  0171EA  00                 	db	0
  1059  0171EB  00                 	db	0
  1060  0171EC  00                 	db	0
  1061  0171ED  00                 	db	0
  1062  0171EE  00                 	db	0
  1063  0171EF  00                 	db	0
  1064  0171F0  00                 	db	0
  1065  0171F1  00                 	db	0
  1066  0171F2  00                 	db	0
  1067  0171F3  00                 	db	0
  1068  0171F4  00                 	db	0
  1069  0171F5  00                 	db	0
  1070  0171F6  00                 	db	0
  1071  0171F7  00                 	db	0
  1072  0171F8  00                 	db	0
  1073  0171F9  00                 	db	0
  1074  0171FA  00                 	db	0
  1075  0171FB  00                 	db	0
  1076  0171FC  00                 	db	0
  1077  0171FD  00                 	db	0
  1078  0171FE  00                 	db	0
  1079  0171FF  00                 	db	0
  1080  017200  00                 	db	0
  1081  017201  00                 	db	0
  1082  017202  00                 	db	0
  1083  017203  00                 	db	0
  1084  017204  00                 	db	0
  1085  017205  00                 	db	0
  1086  017206  00                 	db	0
  1087  017207  00                 	db	0
  1088  017208  00                 	db	0
  1089  017209  00                 	db	0
  1090  01720A  00                 	db	0
  1091  01720B  00                 	db	0
  1092  01720C  00                 	db	0
  1093  01720D  00                 	db	0
  1094  01720E  00                 	db	0
  1095  01720F  00                 	db	0
  1096  017210  00                 	db	0
  1097  017211  00                 	db	0
  1098  017212  00                 	db	0
  1099  017213  00                 	db	0
  1100  017214  00                 	db	0
  1101  017215  00                 	db	0
  1102  017216  00                 	db	0
  1103  017217  00                 	db	0
  1104  017218  00                 	db	0
  1105  017219  00                 	db	0
  1106  01721A  00                 	db	0
  1107  01721B  00                 	db	0
  1108  01721C  00                 	db	0
  1109  01721D  00                 	db	0
  1110  01721E  00                 	db	0
  1111  01721F  00                 	db	0
  1112  017220  00                 	db	0
  1113  017221  00                 	db	0
  1114  017222  00                 	db	0
  1115  017223  00                 	db	0
  1116  017224  00                 	db	0
  1117  017225  00                 	db	0
  1118  017226  00                 	db	0
  1119  017227  00                 	db	0
  1120  017228  00                 	db	0
  1121  017229  00                 	db	0
  1122  01722A  00                 	db	0
  1123  01722B  00                 	db	0
  1124  01722C  00                 	db	0
  1125  01722D  00                 	db	0
  1126  01722E  00                 	db	0
  1127  01722F  00                 	db	0
  1128  017230  00                 	db	0
  1129  017231  00                 	db	0
  1130  017232  00                 	db	0
  1131  017233  00                 	db	0
  1132  017234  00                 	db	0
  1133  017235  00                 	db	0
  1134  017236  00                 	db	0
  1135  017237  00                 	db	0
  1136  017238  00                 	db	0
  1137  017239  00                 	db	0
  1138  01723A  00                 	db	0
  1139  01723B  00                 	db	0
  1140  01723C  00                 	db	0
  1141  01723D  00                 	db	0
  1142  01723E  00                 	db	0
  1143  01723F  00                 	db	0
  1144  017240  00                 	db	0
  1145  017241  00                 	db	0
  1146  017242  00                 	db	0
  1147  017243  00                 	db	0
  1148  017244  00                 	db	0
  1149  017245  00                 	db	0
  1150  017246  00                 	db	0
  1151  017247  00                 	db	0
  1152  017248  00                 	db	0
  1153  017249  00                 	db	0
  1154  01724A  00                 	db	0
  1155  01724B  00                 	db	0
  1156  01724C  00                 	db	0
  1157  01724D  00                 	db	0
  1158  01724E  00                 	db	0
  1159  01724F  00                 	db	0
  1160  017250  00                 	db	0
  1161  017251  00                 	db	0
  1162  017252  00                 	db	0
  1163  017253  00                 	db	0
  1164  017254  00                 	db	0
  1165  017255  00                 	db	0
  1166  017256  00                 	db	0
  1167  017257  00                 	db	0
  1168  017258  00                 	db	0
  1169  017259  00                 	db	0
  1170  01725A  00                 	db	0
  1171  01725B  00                 	db	0
  1172  01725C  00                 	db	0
  1173  01725D  00                 	db	0
  1174  01725E  00                 	db	0
  1175  01725F  00                 	db	0
  1176  017260  00                 	db	0
  1177  017261  00                 	db	0
  1178  017262  00                 	db	0
  1179  017263  00                 	db	0
  1180  017264  00                 	db	0
  1181  017265  00                 	db	0
  1182  017266  00                 	db	0
  1183  017267  00                 	db	0
  1184  017268  00                 	db	0
  1185  017269  00                 	db	0
  1186  01726A  00                 	db	0
  1187  01726B  00                 	db	0
  1188  01726C  00                 	db	0
  1189  01726D  00                 	db	0
  1190  01726E  00                 	db	0
  1191  01726F  00                 	db	0
  1192  017270  00                 	db	0
  1193  017271  00                 	db	0
  1194  017272  00                 	db	0
  1195  017273  00                 	db	0
  1196  017274  00                 	db	0
  1197  017275  00                 	db	0
  1198  017276  00                 	db	0
  1199  017277  00                 	db	0
  1200  017278  00                 	db	0
  1201  017279  00                 	db	0
  1202  01727A  00                 	db	0
  1203  01727B  00                 	db	0
  1204  01727C  00                 	db	0
  1205  01727D  00                 	db	0
  1206  01727E  00                 	db	0
  1207  01727F  00                 	db	0
  1208  017280  00                 	db	0
  1209  017281  00                 	db	0
  1210  017282  00                 	db	0
  1211  017283  00                 	db	0
  1212  017284  00                 	db	0
  1213  017285  00                 	db	0
  1214  017286  00                 	db	0
  1215  017287  00                 	db	0
  1216  017288  00                 	db	0
  1217  017289  00                 	db	0
  1218  01728A  00                 	db	0
  1219  01728B  00                 	db	0
  1220  01728C  00                 	db	0
  1221  01728D  00                 	db	0
  1222  01728E  00                 	db	0
  1223  01728F  00                 	db	0
  1224  017290  00                 	db	0
  1225  017291  00                 	db	0
  1226  017292  00                 	db	0
  1227  017293  00                 	db	0
  1228  017294  00                 	db	0
  1229  017295  00                 	db	0
  1230  017296  00                 	db	0
  1231  017297  00                 	db	0
  1232  017298  00                 	db	0
  1233  017299  00                 	db	0
  1234  01729A  00                 	db	0
  1235  01729B  00                 	db	0
  1236  01729C  00                 	db	0
  1237  01729D  00                 	db	0
  1238  01729E  00                 	db	0
  1239  01729F  00                 	db	0
  1240  0172A0  00                 	db	0
  1241  0172A1  00                 	db	0
  1242  0172A2  00                 	db	0
  1243  0172A3  00                 	db	0
  1244  0172A4  00                 	db	0
  1245  0172A5  00                 	db	0
  1246  0172A6  00                 	db	0
  1247  0172A7  00                 	db	0
  1248  0172A8  00                 	db	0
  1249  0172A9  00                 	db	0
  1250  0172AA  00                 	db	0
  1251  0172AB  00                 	db	0
  1252  0172AC  00                 	db	0
  1253  0172AD  00                 	db	0
  1254  0172AE  00                 	db	0
  1255  0172AF  00                 	db	0
  1256  0172B0  00                 	db	0
  1257  0172B1  00                 	db	0
  1258  0172B2  00                 	db	0
  1259  0172B3  00                 	db	0
  1260  0172B4  00                 	db	0
  1261  0172B5  00                 	db	0
  1262  0172B6  00                 	db	0
  1263  0172B7  00                 	db	0
  1264  0172B8  00                 	db	0
  1265  0172B9  00                 	db	0
  1266  0172BA  00                 	db	0
  1267  0172BB  00                 	db	0
  1268  0172BC  00                 	db	0
  1269  0172BD  00                 	db	0
  1270  0172BE  00                 	db	0
  1271  0172BF  00                 	db	0
  1272  0172C0  00                 	db	0
  1273  0172C1  00                 	db	0
  1274  0172C2  00                 	db	0
  1275  0172C3  00                 	db	0
  1276  0172C4  00                 	db	0
  1277  0172C5  00                 	db	0
  1278  0172C6  00                 	db	0
  1279  0172C7  00                 	db	0
  1280  0172C8  00                 	db	0
  1281  0172C9  00                 	db	0
  1282  0172CA  00                 	db	0
  1283  0172CB  00                 	db	0
  1284  0172CC  00                 	db	0
  1285  0172CD  00                 	db	0
  1286  0172CE  00                 	db	0
  1287  0172CF  00                 	db	0
  1288  0172D0  00                 	db	0
  1289  0172D1  00                 	db	0
  1290  0172D2  00                 	db	0
  1291  0172D3  00                 	db	0
  1292  0172D4  00                 	db	0
  1293  0172D5  00                 	db	0
  1294  0172D6  00                 	db	0
  1295  0172D7  00                 	db	0
  1296  0172D8  00                 	db	0
  1297  0172D9  00                 	db	0
  1298  0172DA  00                 	db	0
  1299  0172DB  00                 	db	0
  1300  0172DC  00                 	db	0
  1301  0172DD  00                 	db	0
  1302  0172DE  00                 	db	0
  1303  0172DF  00                 	db	0
  1304  0172E0  00                 	db	0
  1305  0172E1  00                 	db	0
  1306                           
  1307                           ;initializer for _C
  1308  0172E2  0000               	dw	0
  1309  0172E4  0000               	dw	0
  1310  0172E6  0000               	dw	0
  1311  0172E8  0000               	dw	0
  1312  0172EA  0000               	dw	0
  1313  0172EC  0000               	dw	0
  1314  0172EE  0000               	dw	0
  1315  0172F0  0000               	dw	0
  1316  0172F2  0000               	dw	0
  1317  0172F4  0000               	dw	0
  1318  0172F6  0000               	dw	0
  1319  0172F8  0000               	dw	0
  1320  0172FA  0000               	dw	0
  1321  0172FC  0000               	dw	0
  1322  0172FE  0000               	dw	0
  1323  017300  0000               	dw	0
  1324  017302  0000               	dw	0
  1325  017304  0000               	dw	0
  1326  017306  0000               	dw	0
  1327  017308  0000               	dw	0
  1328  01730A  0000               	dw	0
  1329  01730C  0000               	dw	0
  1330  01730E  0000               	dw	0
  1331  017310  0000               	dw	0
  1332  017312  0000               	dw	0
  1333  017314  0000               	dw	0
  1334  017316  0000               	dw	0
  1335  017318  0000               	dw	0
  1336  01731A  0000               	dw	0
  1337  01731C  0000               	dw	0
  1338  01731E  0000               	dw	0
  1339  017320  0000               	dw	0
  1340  017322  0000               	dw	0
  1341  017324  0000               	dw	0
  1342  017326  0000               	dw	0
  1343  017328  0000               	dw	0
  1344  01732A  0000               	dw	0
  1345  01732C  0000               	dw	0
  1346  01732E  0000               	dw	0
  1347  017330  0000               	dw	0
  1348  017332  0000               	dw	0
  1349  017334  0000               	dw	0
  1350  017336  0000               	dw	0
  1351  017338  0000               	dw	0
  1352  01733A  0000               	dw	0
  1353  01733C  0000               	dw	0
  1354  01733E  0000               	dw	0
  1355  017340  0000               	dw	0
  1356  017342  0000               	dw	0
  1357  017344  0000               	dw	0
  1358  017346  0000               	dw	0
  1359  017348  0000               	dw	0
  1360  01734A  0000               	dw	0
  1361  01734C  0000               	dw	0
  1362  01734E  0000               	dw	0
  1363  017350  0000               	dw	0
  1364  017352  0000               	dw	0
  1365  017354  0000               	dw	0
  1366  017356  0000               	dw	0
  1367  017358  0000               	dw	0
  1368  01735A  0000               	dw	0
  1369  01735C  0000               	dw	0
  1370  01735E  0000               	dw	0
  1371  017360  0000               	dw	0
  1372  017362  0000               	dw	0
  1373  017364  0000               	dw	0
  1374  017366  0000               	dw	0
  1375  017368  0000               	dw	0
  1376  01736A  0000               	dw	0
  1377  01736C  0000               	dw	0
  1378  01736E  0000               	dw	0
  1379  017370  42FA               	dw	17146
  1380  017372  0000               	dw	0
  1381  017374  0000               	dw	0
  1382  017376  0000               	dw	0
  1383  017378  0000               	dw	0
  1384  01737A  0000               	dw	0
  1385  01737C  0000               	dw	0
  1386  01737E  0000               	dw	0
  1387  017380  0000               	dw	0
  1388  017382  0000               	dw	0
  1389  017384  0000               	dw	0
  1390  017386  0000               	dw	0
  1391  017388  0000               	dw	0
  1392  01738A  0000               	dw	0
  1393  01738C  0000               	dw	0
  1394  01738E  0000               	dw	0
  1395  017390  0000               	dw	0
  1396  017392  0000               	dw	0
  1397  017394  0000               	dw	0
  1398  017396  0000               	dw	0
  1399  017398  0000               	dw	0
  1400  01739A  00                 	db	0
  1401  01739B  01                 	db	1
  1402  01739C  0000               	dw	0
  1403  01739E  3F80               	dw	16256
  1404  0173A0  0000               	dw	0
  1405  0173A2  3F80               	dw	16256
  1406  0173A4  00                 	db	0
  1407  0173A5  00                 	db	0
  1408  0173A6  00                 	db	0
  1409  0173A7  00                 	db	0
  1410  0173A8  00                 	db	0
  1411  0173A9  00                 	db	0
  1412  0173AA  00                 	db	0
  1413  0173AB  00                 	db	0
  1414  0173AC  00                 	db	0
  1415  0173AD  00                 	db	0
  1416  0173AE  00                 	db	0
  1417  0173AF  00                 	db	0
  1418  0173B0  00                 	db	0
  1419  0173B1  00                 	db	0
  1420  0173B2  00                 	db	0
  1421  0173B3  00                 	db	0
  1422  0173B4  00                 	db	0
  1423  0173B5  00                 	db	0
  1424  0173B6  00                 	db	0
  1425  0173B7  00                 	db	0
  1426  0173B8  00                 	db	0
  1427  0173B9  00                 	db	0
  1428  0173BA  00                 	db	0
  1429  0173BB  00                 	db	0
  1430  0173BC  00                 	db	0
  1431  0173BD  00                 	db	0
  1432  0173BE  00                 	db	0
  1433  0173BF  00                 	db	0
  1434  0173C0  00                 	db	0
  1435  0173C1  00                 	db	0
  1436  0173C2  00                 	db	0
  1437  0173C3  00                 	db	0
  1438  0173C4  00                 	db	0
  1439  0173C5  00                 	db	0
  1440  0173C6  00                 	db	0
  1441  0173C7  00                 	db	0
  1442  0173C8  00                 	db	0
  1443  0173C9  00                 	db	0
  1444  0173CA  00                 	db	0
  1445  0173CB  00                 	db	0
  1446  0173CC  00                 	db	0
  1447  0173CD  00                 	db	0
  1448  0173CE  00                 	db	0
  1449  0173CF  00                 	db	0
  1450  0173D0  00                 	db	0
  1451  0173D1  00                 	db	0
  1452  0173D2  00                 	db	0
  1453  0173D3  00                 	db	0
  1454  0173D4  00                 	db	0
  1455  0173D5  00                 	db	0
  1456  0173D6  00                 	db	0
  1457  0173D7  00                 	db	0
  1458  0173D8  00                 	db	0
  1459  0173D9  00                 	db	0
  1460  0173DA  00                 	db	0
  1461  0173DB  00                 	db	0
  1462  0173DC  00                 	db	0
  1463  0173DD  00                 	db	0
  1464  0173DE  00                 	db	0
  1465  0173DF  00                 	db	0
  1466  0173E0  00                 	db	0
  1467  0173E1  00                 	db	0
  1468  0173E2  00                 	db	0
  1469  0173E3  00                 	db	0
  1470  0173E4  00                 	db	0
  1471  0173E5  00                 	db	0
  1472  0173E6  00                 	db	0
  1473  0173E7  00                 	db	0
  1474  0173E8  00                 	db	0
  1475  0173E9  00                 	db	0
  1476  0173EA  00                 	db	0
  1477  0173EB  00                 	db	0
  1478  0173EC  00                 	db	0
  1479  0173ED  00                 	db	0
  1480  0173EE  00                 	db	0
  1481  0173EF  00                 	db	0
  1482  0173F0  0000               	dw	0
  1483  0173F2  0000               	dw	0
  1484  0173F4  0000               	dw	0
  1485  0173F6  0000               	dw	0
  1486  0173F8  0000               	dw	0
  1487  0173FA  0000               	dw	0
  1488  0173FC  0000               	dw	0
  1489  0173FE  0000               	dw	0
  1490  017400  0000               	dw	0
  1491  017402  0000               	dw	0
  1492  017404  01                 	db	1
  1493  017405  00                 	db	0
  1494  017406  00                 	db	0
  1495  017407  00                 	db	0
  1496  017408  00                 	db	0
  1497  017409  00                 	db	0
  1498  01740A  00                 	db	0
  1499  01740B  00                 	db	0
  1500  01740C  00                 	db	0
  1501                           
  1502                           	psect	idataBANK0
  1503  01C9AC                     __pidataBANK0:
  1504                           	opt callstack 0
  1505                           
  1506                           ;initializer for _R
  1507  01C9AC  0000               	dw	0
  1508  01C9AE  0000               	dw	0
  1509  01C9B0  0000               	dw	0
  1510  01C9B2  0000               	dw	0
  1511  01C9B4  0000               	dw	0
  1512  01C9B6  0000               	dw	0
  1513  01C9B8  0000               	dw	0
  1514  01C9BA  0000               	dw	0
  1515  01C9BC  0000               	dw	0
  1516  01C9BE  0000               	dw	0
  1517  01C9C0  0000               	dw	0
  1518  01C9C2  0000               	dw	0
  1519  01C9C4  0000               	dw	0
  1520  01C9C6  0000               	dw	0
  1521  01C9C8  0000               	dw	0
  1522  01C9CA  0000               	dw	0
  1523  01C9CC  0000               	dw	0
  1524  01C9CE  0000               	dw	0
  1525  01C9D0  0000               	dw	0
  1526  01C9D2  0F62               	dw	3938
  1527  01C9D4  0FA4               	dw	4004
  1528  01C9D6  2D0E               	dw	11534
  1529  01C9D8  3DB2               	dw	15794
  1530  01C9DA  DD98               	dw	56728
  1531  01C9DC  3D13               	dw	15635
  1532  01C9DE  00                 	db	0
  1533  01C9DF  0000               	dw	0
  1534  01C9E1  00                 	db	0
  1535  01C9E2  1957               	dw	6487
  1536  01C9E4  42                 	db	66
  1537                           
  1538                           	psect	idataBANK1
  1539  01AFE2                     __pidataBANK1:
  1540                           	opt callstack 0
  1541                           
  1542                           ;initializer for stoa@F1166
  1543  01AFE2  28                 	db	40
  1544  01AFE3  6E                 	db	110
  1545  01AFE4  75                 	db	117
  1546  01AFE5  6C                 	db	108
  1547  01AFE6  6C                 	db	108
  1548  01AFE7  29                 	db	41
  1549  01AFE8  00                 	db	0
  1550                           
  1551                           ;initializer for _V
  1552  01AFE9  00                 	db	0
  1553  01AFEA  00                 	db	0
  1554  01AFEB  00                 	db	0
  1555  01AFEC  00                 	db	0
  1556  01AFED  00                 	db	0
  1557  01AFEE  00                 	db	0
  1558  01AFEF  00                 	db	0
  1559  01AFF0  00                 	db	0
  1560  01AFF1  00                 	db	0
  1561  01AFF2  00                 	db	0
  1562  01AFF3  00                 	db	0
  1563  01AFF4  00                 	db	0
  1564  01AFF5  00                 	db	0
  1565  01AFF6  00                 	db	0
  1566  01AFF7  00                 	db	0
  1567  01AFF8  00                 	db	0
  1568  01AFF9  00                 	db	0
  1569  01AFFA  00                 	db	0
  1570  01AFFB  00                 	db	0
  1571  01AFFC  00                 	db	0
  1572  01AFFD  00                 	db	0
  1573  01AFFE  00                 	db	0
  1574  01AFFF  00                 	db	0
  1575  01B000  00                 	db	0
  1576  01B001  00                 	db	0
  1577  01B002  00                 	db	0
  1578  01B003  00                 	db	0
  1579  01B004  00                 	db	0
  1580  01B005  00                 	db	0
  1581  01B006  00                 	db	0
  1582  01B007  00                 	db	0
  1583  01B008  00                 	db	0
  1584  01B009  00                 	db	0
  1585  01B00A  00                 	db	0
  1586  01B00B  00                 	db	0
  1587  01B00C  00                 	db	0
  1588  01B00D  00                 	db	0
  1589  01B00E  00                 	db	0
  1590  01B00F  00                 	db	0
  1591  01B010  00                 	db	0
  1592  01B011  00                 	db	0
  1593  01B012  00                 	db	0
  1594  01B013  00                 	db	0
  1595  01B014  00                 	db	0
  1596  01B015  00                 	db	0
  1597  01B016  00                 	db	0
  1598  01B017  00                 	db	0
  1599  01B018  00                 	db	0
  1600  01B019  00                 	db	0
  1601  01B01A  00                 	db	0
  1602  01B01B  00                 	db	0
  1603  01B01C  00                 	db	0
  1604  01B01D  00                 	db	0
  1605  01B01E  00                 	db	0
  1606  01B01F  00                 	db	0
  1607  01B020  00                 	db	0
  1608  01B021  00                 	db	0
  1609  01B022  00                 	db	0
  1610  01B023  00                 	db	0
  1611  01B024  00                 	db	0
  1612  01B025  00                 	db	0
  1613  01B026  00                 	db	0
  1614  01B027  00                 	db	0
  1615  01B028  00                 	db	0
  1616  01B029  00                 	db	0
  1617  01B02A  00                 	db	0
  1618  01B02B  00                 	db	0
  1619  01B02C  00                 	db	0
  1620  01B02D  00                 	db	0
  1621  01B02E  00                 	db	0
  1622  01B02F  00                 	db	0
  1623  01B030  00                 	db	0
  1624  01B031  00                 	db	0
  1625  01B032  00                 	db	0
  1626  01B033  00                 	db	0
  1627  01B034  00                 	db	0
  1628  01B035  00                 	db	0
  1629  01B036  00                 	db	0
  1630  01B037  00                 	db	0
  1631  01B038  00                 	db	0
  1632  01B039  00                 	db	0
  1633  01B03A  00                 	db	0
  1634  01B03B  00                 	db	0
  1635  01B03C  00                 	db	0
  1636  01B03D  00                 	db	0
  1637  01B03E  00                 	db	0
  1638  01B03F  00                 	db	0
  1639  01B040  00                 	db	0
  1640  01B041  00                 	db	0
  1641  01B042  00                 	db	0
  1642  01B043  00                 	db	0
  1643  01B044  00                 	db	0
  1644  01B045  00                 	db	0
  1645  01B046  00                 	db	0
  1646  01B047  00                 	db	0
  1647  01B048  00                 	db	0
  1648  01B049  00                 	db	0
  1649  01B04A  00                 	db	0
  1650  01B04B  00                 	db	0
  1651  01B04C  00                 	db	0
  1652  01B04D  00                 	db	0
  1653  01B04E  00                 	db	0
  1654  01B04F  00                 	db	0
  1655  01B050  00                 	db	0
  1656  01B051  00                 	db	0
  1657  01B052  00                 	db	0
  1658  01B053  00                 	db	0
  1659  01B054  00                 	db	0
  1660  01B055  00                 	db	0
  1661  01B056  00                 	db	0
  1662  01B057  00                 	db	0
  1663  01B058  00                 	db	0
  1664  01B059  00                 	db	0
  1665  01B05A  00                 	db	0
  1666  01B05B  00                 	db	0
  1667  01B05C  00                 	db	0
  1668  01B05D  00                 	db	0
  1669  01B05E  00                 	db	0
  1670  01B05F  00                 	db	0
  1671  01B060  00                 	db	0
  1672  01B061  00                 	db	0
  1673  01B062  00                 	db	0
  1674  01B063  00                 	db	0
  1675  01B064  00                 	db	0
  1676  01B065  00                 	db	0
  1677  01B066  00                 	db	0
  1678  01B067  00                 	db	0
  1679  01B068  00                 	db	0
  1680  01B069  00                 	db	0
  1681  01B06A  0000               	dw	0
  1682  01B06C  0000               	dw	0
  1683  01B06E  0000               	dw	0
  1684  01B070  0000               	dw	0
  1685  01B072  00                 	db	0
  1686  01B073  00                 	db	0
  1687  01B074  00                 	db	0
  1688  01B075  00                 	db	0
  1689  01B076  00                 	db	0
  1690  01B077  00                 	db	0
  1691  01B078  0000               	dw	0
  1692  01B07A  0000               	dw	0
  1693  01B07C  0000               	dw	0
  1694  01B07E  0000               	dw	0
  1695  01B080  0000               	dw	0
  1696  01B082  0000               	dw	0
  1697  01B084  00                 	db	0
  1698  01B085  00                 	db	0
  1699  01B086  00                 	db	0
  1700  01B087  00                 	db	0
  1701  01B088  00                 	db	0
  1702  01B089  00                 	db	0
  1703  01B08A  00                 	db	0
  1704  01B08B  00                 	db	0
  1705  01B08C  00                 	db	0
  1706  01B08D  00                 	db	0
  1707  01B08E  00                 	db	0
  1708  01B08F  0000               	dw	0
  1709  01B091  0000               	dw	0
  1710  01B093  2D                 	db	45
  1711  01B094  00                 	db	0
  1712  01B095  00                 	db	0
  1713  01B096  00                 	db	0
  1714  01B097  00                 	db	0
  1715  01B098  00                 	db	0
  1716  01B099  0000               	dw	0
  1717  01B09B  0000               	dw	0
  1718  01B09D  0000               	dw	0
  1719  01B09F  0000               	dw	0
  1720  01B0A1  0000               	dw	0
  1721  01B0A3  0000               	dw	0
  1722  01B0A5  0000               	dw	0
  1723  01B0A7  0000               	dw	0
  1724                           
  1725                           ;initializer for _H
  1726  01B0A9  00                 	db	0
  1727  01B0AA  00                 	db	0
  1728  01B0AB  01                 	db	1
  1729  01B0AC  00                 	db	0
  1730  01B0AD  01                 	db	1
  1731  01B0AE  00                 	db	0
  1732  01B0AF  01                 	db	1
  1733  01B0B0  00                 	db	0
  1734  01B0B1  00                 	db	0
  1735                           
  1736                           	psect	mediumconst
  1737  00F8E2                     __pmediumconst:
  1738                           	opt callstack 0
  1739  00F8E2  00                 	db	0
  1740  00F8E3                     _BVSOC_TABLE:
  1741                           	opt callstack 0
  1742  00F8E3  59D8               	dw	23000
  1743  00F8E5  0000               	dw	0
  1744  00F8E7  0005               	dw	5
  1745  00F8E9  0000               	dw	0
  1746  00F8EB  5B68               	dw	23400
  1747  00F8ED  0000               	dw	0
  1748  00F8EF  000A               	dw	10
  1749  00F8F1  0000               	dw	0
  1750  00F8F3  5C30               	dw	23600
  1751  00F8F5  0000               	dw	0
  1752  00F8F7  0014               	dw	20
  1753  00F8F9  0000               	dw	0
  1754  00F8FB  5E38               	dw	24120
  1755  00F8FD  0000               	dw	0
  1756  00F8FF  0019               	dw	25
  1757  00F901  0000               	dw	0
  1758  00F903  5E88               	dw	24200
  1759  00F905  0000               	dw	0
  1760  00F907  001E               	dw	30
  1761  00F909  0000               	dw	0
  1762  00F90B  5F78               	dw	24440
  1763  00F90D  0000               	dw	0
  1764  00F90F  0028               	dw	40
  1765  00F911  0000               	dw	0
  1766  00F913  5FDC               	dw	24540
  1767  00F915  0000               	dw	0
  1768  00F917  002D               	dw	45
  1769  00F919  0000               	dw	0
  1770  00F91B  6018               	dw	24600
  1771  00F91D  0000               	dw	0
  1772  00F91F  0032               	dw	50
  1773  00F921  0000               	dw	0
  1774  00F923  6046               	dw	24646
  1775  00F925  0000               	dw	0
  1776  00F927  0035               	dw	53
  1777  00F929  0000               	dw	0
  1778  00F92B  607C               	dw	24700
  1779  00F92D  0000               	dw	0
  1780  00F92F  0037               	dw	55
  1781  00F931  0000               	dw	0
  1782  00F933  60AE               	dw	24750
  1783  00F935  0000               	dw	0
  1784  00F937  0039               	dw	57
  1785  00F939  0000               	dw	0
  1786  00F93B  60E0               	dw	24800
  1787  00F93D  0000               	dw	0
  1788  00F93F  003C               	dw	60
  1789  00F941  0000               	dw	0
  1790  00F943  6112               	dw	24850
  1791  00F945  0000               	dw	0
  1792  00F947  003F               	dw	63
  1793  00F949  0000               	dw	0
  1794  00F94B  615D               	dw	24925
  1795  00F94D  0000               	dw	0
  1796  00F94F  0043               	dw	67
  1797  00F951  0000               	dw	0
  1798  00F953  61A8               	dw	25000
  1799  00F955  0000               	dw	0
  1800  00F957  0046               	dw	70
  1801  00F959  0000               	dw	0
  1802  00F95B  61BC               	dw	25020
  1803  00F95D  0000               	dw	0
  1804  00F95F  0048               	dw	72
  1805  00F961  0000               	dw	0
  1806  00F963  61D0               	dw	25040
  1807  00F965  0000               	dw	0
  1808  00F967  004B               	dw	75
  1809  00F969  0000               	dw	0
  1810  00F96B  61DA               	dw	25050
  1811  00F96D  0000               	dw	0
  1812  00F96F  0050               	dw	80
  1813  00F971  0000               	dw	0
  1814  00F973  61E4               	dw	25060
  1815  00F975  0000               	dw	0
  1816  00F977  0055               	dw	85
  1817  00F979  0000               	dw	0
  1818  00F97B  61F8               	dw	25080
  1819  00F97D  0000               	dw	0
  1820  00F97F  005A               	dw	90
  1821  00F981  0000               	dw	0
  1822  00F983  6208               	dw	25096
  1823  00F985  0000               	dw	0
  1824  00F987  005C               	dw	92
  1825  00F989  0000               	dw	0
  1826  00F98B  6222               	dw	25122
  1827  00F98D  0000               	dw	0
  1828  00F98F  005D               	dw	93
  1829  00F991  0000               	dw	0
  1830  00F993  6234               	dw	25140
  1831  00F995  0000               	dw	0
  1832  00F997  005F               	dw	95
  1833  00F999  0000               	dw	0
  1834  00F99B  6248               	dw	25160
  1835  00F99D  0000               	dw	0
  1836  00F99F  0061               	dw	97
  1837  00F9A1  0000               	dw	0
  1838  00F9A3  625C               	dw	25180
  1839  00F9A5  0000               	dw	0
  1840  00F9A7  0064               	dw	100
  1841  00F9A9  0000               	dw	0
  1842  00F9AB  6784               	dw	26500
  1843  00F9AD  0000               	dw	0
  1844  00F9AF  0062               	dw	98
  1845  00F9B1  0000               	dw	0
  1846  00F9B3                     __end_of_BVSOC_TABLE:
  1847                           	opt callstack 0
  1848  00F9B3                     _T:
  1849                           	opt callstack 0
  1850  00F9B3  63                 	db	99
  1851  00F9B4  6F                 	db	111
  1852  00F9B5  6D                 	db	109
  1853  00F9B6  6D                 	db	109
  1854  00F9B7  61                 	db	97
  1855  00F9B8  6E                 	db	110
  1856  00F9B9  64                 	db	100
  1857  00F9BA  73                 	db	115
  1858  00F9BB  20                 	db	32
  1859  00F9BC  31                 	db	49
  1860  00F9BD  00                 	db	0
  1861  00F9BE  00                 	db	0
  1862  00F9BF  00                 	db	0
  1863  00F9C0  00                 	db	0
  1864  00F9C1  00                 	db	0
  1865  00F9C2  00                 	db	0
  1866  00F9C3  00                 	db	0
  1867  00F9C4  00                 	db	0
  1868  00F9C5  64                 	db	100
  1869  00F9C6  69                 	db	105
  1870  00F9C7  73                 	db	115
  1871  00F9C8  70                 	db	112
  1872  00F9C9  6C                 	db	108
  1873  00F9CA  61                 	db	97
  1874  00F9CB  79                 	db	121
  1875  00F9CC  73                 	db	115
  1876  00F9CD  20                 	db	32
  1877  00F9CE  31                 	db	49
  1878  00F9CF  00                 	db	0
  1879  00F9D0  00                 	db	0
  1880  00F9D1  00                 	db	0
  1881  00F9D2  00                 	db	0
  1882  00F9D3  00                 	db	0
  1883  00F9D4  00                 	db	0
  1884  00F9D5  00                 	db	0
  1885  00F9D6  00                 	db	0
  1886  00F9D7  63                 	db	99
  1887  00F9D8  6F                 	db	111
  1888  00F9D9  6D                 	db	109
  1889  00F9DA  6D                 	db	109
  1890  00F9DB  61                 	db	97
  1891  00F9DC  6E                 	db	110
  1892  00F9DD  64                 	db	100
  1893  00F9DE  73                 	db	115
  1894  00F9DF  20                 	db	32
  1895  00F9E0  32                 	db	50
  1896  00F9E1  00                 	db	0
  1897  00F9E2  00                 	db	0
  1898  00F9E3  00                 	db	0
  1899  00F9E4  00                 	db	0
  1900  00F9E5  00                 	db	0
  1901  00F9E6  00                 	db	0
  1902  00F9E7  00                 	db	0
  1903  00F9E8  00                 	db	0
  1904  00F9E9  64                 	db	100
  1905  00F9EA  69                 	db	105
  1906  00F9EB  73                 	db	115
  1907  00F9EC  70                 	db	112
  1908  00F9ED  6C                 	db	108
  1909  00F9EE  61                 	db	97
  1910  00F9EF  79                 	db	121
  1911  00F9F0  73                 	db	115
  1912  00F9F1  20                 	db	32
  1913  00F9F2  32                 	db	50
  1914  00F9F3  00                 	db	0
  1915  00F9F4  00                 	db	0
  1916  00F9F5  00                 	db	0
  1917  00F9F6  00                 	db	0
  1918  00F9F7  00                 	db	0
  1919  00F9F8  00                 	db	0
  1920  00F9F9  00                 	db	0
  1921  00F9FA  00                 	db	0
  1922  00F9FB  63                 	db	99
  1923  00F9FC  6F                 	db	111
  1924  00F9FD  6D                 	db	109
  1925  00F9FE  6D                 	db	109
  1926  00F9FF  61                 	db	97
  1927  00FA00  6E                 	db	110
  1928  00FA01  64                 	db	100
  1929  00FA02  73                 	db	115
  1930  00FA03  20                 	db	32
  1931  00FA04  33                 	db	51
  1932  00FA05  00                 	db	0
  1933  00FA06  00                 	db	0
  1934  00FA07  00                 	db	0
  1935  00FA08  00                 	db	0
  1936  00FA09  00                 	db	0
  1937  00FA0A  00                 	db	0
  1938  00FA0B  00                 	db	0
  1939  00FA0C  00                 	db	0
  1940  00FA0D  64                 	db	100
  1941  00FA0E  69                 	db	105
  1942  00FA0F  73                 	db	115
  1943  00FA10  70                 	db	112
  1944  00FA11  6C                 	db	108
  1945  00FA12  61                 	db	97
  1946  00FA13  79                 	db	121
  1947  00FA14  73                 	db	115
  1948  00FA15  20                 	db	32
  1949  00FA16  33                 	db	51
  1950  00FA17  00                 	db	0
  1951  00FA18  00                 	db	0
  1952  00FA19  00                 	db	0
  1953  00FA1A  00                 	db	0
  1954  00FA1B  00                 	db	0
  1955  00FA1C  00                 	db	0
  1956  00FA1D  00                 	db	0
  1957  00FA1E  00                 	db	0
  1958  00FA1F  63                 	db	99
  1959  00FA20  6F                 	db	111
  1960  00FA21  6D                 	db	109
  1961  00FA22  6D                 	db	109
  1962  00FA23  61                 	db	97
  1963  00FA24  6E                 	db	110
  1964  00FA25  64                 	db	100
  1965  00FA26  73                 	db	115
  1966  00FA27  20                 	db	32
  1967  00FA28  34                 	db	52
  1968  00FA29  00                 	db	0
  1969  00FA2A  00                 	db	0
  1970  00FA2B  00                 	db	0
  1971  00FA2C  00                 	db	0
  1972  00FA2D  00                 	db	0
  1973  00FA2E  00                 	db	0
  1974  00FA2F  00                 	db	0
  1975  00FA30  00                 	db	0
  1976  00FA31  64                 	db	100
  1977  00FA32  69                 	db	105
  1978  00FA33  73                 	db	115
  1979  00FA34  70                 	db	112
  1980  00FA35  6C                 	db	108
  1981  00FA36  61                 	db	97
  1982  00FA37  79                 	db	121
  1983  00FA38  73                 	db	115
  1984  00FA39  20                 	db	32
  1985  00FA3A  34                 	db	52
  1986  00FA3B  00                 	db	0
  1987  00FA3C  00                 	db	0
  1988  00FA3D  00                 	db	0
  1989  00FA3E  00                 	db	0
  1990  00FA3F  00                 	db	0
  1991  00FA40  00                 	db	0
  1992  00FA41  00                 	db	0
  1993  00FA42  00                 	db	0
  1994  00FA43                     __end_of_T:
  1995                           	opt callstack 0
  1996  00FA43                     _spin:
  1997                           	opt callstack 0
  1998  00FA43  7C                 	db	124
  1999  00FA44  7C                 	db	124
  2000  00FA45  2F                 	db	47
  2001  00FA46  2F                 	db	47
  2002  00FA47  2D                 	db	45
  2003  00FA48  2D                 	db	45
  2004  00FA49  00                 	db	0
  2005  00FA4A  00                 	db	0
  2006  00FA4B  00                 	db	0
  2007  00FA4C  00                 	db	0
  2008  00FA4D  00                 	db	0
  2009  00FA4E  00                 	db	0
  2010  00FA4F  00                 	db	0
  2011  00FA50  00                 	db	0
  2012  00FA51  00                 	db	0
  2013  00FA52  00                 	db	0
  2014  00FA53  00                 	db	0
  2015  00FA54  00                 	db	0
  2016  00FA55  00                 	db	0
  2017  00FA56  00                 	db	0
  2018  00FA57  7C                 	db	124
  2019  00FA58  7C                 	db	124
  2020  00FA59  2F                 	db	47
  2021  00FA5A  2F                 	db	47
  2022  00FA5B  2D                 	db	45
  2023  00FA5C  2D                 	db	45
  2024  00FA5D  5C                 	db	92
  2025  00FA5E  5C                 	db	92
  2026  00FA5F  00                 	db	0
  2027  00FA60  00                 	db	0
  2028  00FA61  00                 	db	0
  2029  00FA62  00                 	db	0
  2030  00FA63  00                 	db	0
  2031  00FA64  00                 	db	0
  2032  00FA65  00                 	db	0
  2033  00FA66  00                 	db	0
  2034  00FA67  00                 	db	0
  2035  00FA68  00                 	db	0
  2036  00FA69  00                 	db	0
  2037  00FA6A  00                 	db	0
  2038  00FA6B  4F                 	db	79
  2039  00FA6C  4F                 	db	79
  2040  00FA6D  4F                 	db	79
  2041  00FA6E  4F                 	db	79
  2042  00FA6F  4F                 	db	79
  2043  00FA70  4F                 	db	79
  2044  00FA71  2D                 	db	45
  2045  00FA72  2D                 	db	45
  2046  00FA73  5F                 	db	95
  2047  00FA74  5F                 	db	95
  2048  00FA75  2D                 	db	45
  2049  00FA76  00                 	db	0
  2050  00FA77  00                 	db	0
  2051  00FA78  00                 	db	0
  2052  00FA79  00                 	db	0
  2053  00FA7A  00                 	db	0
  2054  00FA7B  00                 	db	0
  2055  00FA7C  00                 	db	0
  2056  00FA7D  00                 	db	0
  2057  00FA7E  00                 	db	0
  2058  00FA7F  76                 	db	118
  2059  00FA80  76                 	db	118
  2060  00FA81  3C                 	db	60
  2061  00FA82  3C                 	db	60
  2062  00FA83  5E                 	db	94
  2063  00FA84  5E                 	db	94
  2064  00FA85  3E                 	db	62
  2065  00FA86  3E                 	db	62
  2066  00FA87  00                 	db	0
  2067  00FA88  00                 	db	0
  2068  00FA89  00                 	db	0
  2069  00FA8A  00                 	db	0
  2070  00FA8B  00                 	db	0
  2071  00FA8C  00                 	db	0
  2072  00FA8D  00                 	db	0
  2073  00FA8E  00                 	db	0
  2074  00FA8F  00                 	db	0
  2075  00FA90  00                 	db	0
  2076  00FA91  00                 	db	0
  2077  00FA92  00                 	db	0
  2078  00FA93  2E                 	db	46
  2079  00FA94  2E                 	db	46
  2080  00FA95  2A                 	db	42
  2081  00FA96  2A                 	db	42
  2082  00FA97  78                 	db	120
  2083  00FA98  23                 	db	35
  2084  00FA99  78                 	db	120
  2085  00FA9A  23                 	db	35
  2086  00FA9B  58                 	db	88
  2087  00FA9C  58                 	db	88
  2088  00FA9D  7C                 	db	124
  2089  00FA9E  7C                 	db	124
  2090  00FA9F  2D                 	db	45
  2091  00FAA0  2D                 	db	45
  2092  00FAA1  00                 	db	0
  2093  00FAA2  00                 	db	0
  2094  00FAA3  00                 	db	0
  2095  00FAA4  00                 	db	0
  2096  00FAA5  00                 	db	0
  2097  00FAA6  00                 	db	0
  2098  00FAA7  2E                 	db	46
  2099  00FAA8  2E                 	db	46
  2100  00FAA9  6F                 	db	111
  2101  00FAAA  6F                 	db	111
  2102  00FAAB  4F                 	db	79
  2103  00FAAC  4F                 	db	79
  2104  00FAAD  6F                 	db	111
  2105  00FAAE  6F                 	db	111
  2106  00FAAF  00                 	db	0
  2107  00FAB0  00                 	db	0
  2108  00FAB1  00                 	db	0
  2109  00FAB2  00                 	db	0
  2110  00FAB3  00                 	db	0
  2111  00FAB4  00                 	db	0
  2112  00FAB5  00                 	db	0
  2113  00FAB6  00                 	db	0
  2114  00FAB7  00                 	db	0
  2115  00FAB8  00                 	db	0
  2116  00FAB9  00                 	db	0
  2117  00FABA  00                 	db	0
  2118  00FABB                     __end_of_spin:
  2119                           	opt callstack 0
  2120  00FABB  0000               	dw	0
  2121  00FABD  3F80               	dw	16256
  2122  00FABF  0000               	dw	0
  2123  00FAC1  3FC0               	dw	16320
  2124  00FAC3                     __end_of_bp:
  2125                           	opt callstack 0
  2126  00FAC3  AA00               	dw	43520
  2127  00FAC5  3FB8               	dw	16312
  2128  00FAC7                     __end_of_ivln2_h:
  2129                           	opt callstack 0
  2130  00FAC7  23C6               	dw	9158
  2131  00FAC9  B8F6               	dw	47350
  2132  00FACB                     __end_of_cp_l:
  2133                           	opt callstack 0
  2134  00FACB  4000               	dw	16384
  2135  00FACD  3F76               	dw	16246
  2136  00FACF                     __end_of_cp_h:
  2137                           	opt callstack 0
  2138  0000                     _IVTADL	set	14493
  2139  0000                     _IVTADH	set	14494
  2140  0000                     _IVTADU	set	14495
  2141  0000                     _CRCDATH	set	14689
  2142  0000                     _CRCDATL	set	14688
  2143  0000                     _CRCCON0bits	set	14696
  2144  0000                     _CRCCON1bits	set	14697
  2145  0000                     _CRCXORL	set	14694
  2146  0000                     _CRCXORH	set	14695
  2147  0000                     _SCANTRIG	set	14717
  2148  0000                     _SCANHADRL	set	14713
  2149  0000                     _SCANHADRH	set	14714
  2150  0000                     _SCANHADRU	set	14715
  2151  0000                     _SCANLADRL	set	14710
  2152  0000                     _SCANLADRH	set	14711
  2153  0000                     _SCANLADRU	set	14712
  2154  0000                     _SCANCON0	set	14716
  2155  0000                     _CRCACCH	set	14691
  2156  0000                     _CRCACCL	set	14690
  2157  0000                     _CRCCON1	set	14697
  2158  0000                     _CRCCON0	set	14696
  2159  0000                     _PIR6bits	set	14758
  2160  0000                     _PIR4bits	set	14756
  2161  0000                     _PIE8bits	set	14744
  2162  0000                     _PIR8bits	set	14760
  2163  0000                     _PIR0bits	set	14752
  2164  0000                     _NVMCON2	set	14822
  2165  0000                     _NVMDAT	set	14819
  2166  0000                     _NVMADRL	set	14816
  2167  0000                     _NVMADRH	set	14817
  2168  0000                     _NVMCON1bits	set	14821
  2169  0000                     _SCANPR	set	14839
  2170  0000                     _DMA2PR	set	14836
  2171  0000                     _DMA1PR	set	14835
  2172  0000                     _MAINPR	set	14834
  2173  0000                     _ISRPR	set	14833
  2174  0000                     _PIE2bits	set	14738
  2175  0000                     _PIR2bits	set	14754
  2176  0000                     _PIE9bits	set	14745
  2177  0000                     _PIR9bits	set	14761
  2178  0000                     _PIE6bits	set	14742
  2179  0000                     _PIE3bits	set	14739
  2180  0000                     _PMD7	set	14791
  2181  0000                     _PMD6	set	14790
  2182  0000                     _PMD5	set	14789
  2183  0000                     _PMD4	set	14788
  2184  0000                     _PMD3	set	14787
  2185  0000                     _PMD2	set	14786
  2186  0000                     _PMD1	set	14785
  2187  0000                     _PMD0	set	14784
  2188  0000                     _OSCTUNE	set	14814
  2189  0000                     _OSCFRQ	set	14815
  2190  0000                     _OSCEN	set	14813
  2191  0000                     _OSCCON3	set	14811
  2192  0000                     _OSCCON1	set	14809
  2193  0000                     _IPR8bits	set	14728
  2194  0000                     _IPR9bits	set	14729
  2195  0000                     _IPR5bits	set	14725
  2196  0000                     _IPR1bits	set	14721
  2197  0000                     _IPR3bits	set	14723
  2198  0000                     _IPR6bits	set	14726
  2199  0000                     _IPR2bits	set	14722
  2200  0000                     _PIE5bits	set	14741
  2201  0000                     _PIE1bits	set	14737
  2202  0000                     _PIR5bits	set	14757
  2203  0000                     _PIR1bits	set	14753
  2204  0000                     _PLLR	set	118496
  2205  0000                     _SPI1SDIPPS	set	15071
  2206  0000                     _U1RXPPS	set	15077
  2207  0000                     _RC6PPS	set	14870
  2208  0000                     _RC5PPS	set	14869
  2209  0000                     _INT1PPS	set	15041
  2210  0000                     _RD1PPS	set	14873
  2211  0000                     _INT0PPS	set	15040
  2212  0000                     _RC3PPS	set	14867
  2213  0000                     _RB6PPS	set	14862
  2214  0000                     _SPI1SCKPPS	set	15070
  2215  0000                     _U2RXPPS	set	15080
  2216  0000                     _SLRCONF	set	14995
  2217  0000                     _SLRCONE	set	14979
  2218  0000                     _SLRCOND	set	14963
  2219  0000                     _SLRCONC	set	14947
  2220  0000                     _SLRCONB	set	14931
  2221  0000                     _SLRCONA	set	14915
  2222  0000                     _ODCOND	set	14962
  2223  0000                     _ODCONC	set	14946
  2224  0000                     _ODCONB	set	14930
  2225  0000                     _ODCONA	set	14914
  2226  0000                     _ODCONF	set	14994
  2227  0000                     _ODCONE	set	14978
  2228  0000                     _WPUC	set	14945
  2229  0000                     _WPUA	set	14913
  2230  0000                     _WPUB	set	14929
  2231  0000                     _WPUE	set	14977
  2232  0000                     _WPUF	set	14993
  2233  0000                     _WPUD	set	14961
  2234  0000                     _ANSELA	set	14912
  2235  0000                     _ANSELF	set	14992
  2236  0000                     _ANSELE	set	14976
  2237  0000                     _ANSELB	set	14928
  2238  0000                     _ANSELC	set	14944
  2239  0000                     _ANSELD	set	14960
  2240  0000                     _DMA2SSA	set	15321
  2241  0000                     _DMA1SSA	set	15353
  2242  0000                     _DMA2DSZ	set	15310
  2243  0000                     _DMA2SSZ	set	15319
  2244  0000                     _DMA2DSA	set	15312
  2245  0000                     _DMA1DSZ	set	15342
  2246  0000                     _DMA1SSZ	set	15351
  2247  0000                     _DMA1DSA	set	15344
  2248  0000                     _DMA2CON0bits	set	15324
  2249  0000                     _DMA2CON1bits	set	15325
  2250  0000                     _DMA1CON0bits	set	15356
  2251  0000                     _DMA1CON1bits	set	15357
  2252  0000                     _DMA2CON0	set	15324
  2253  0000                     _DMA2AIRQ	set	15326
  2254  0000                     _DMA2SIRQ	set	15327
  2255  0000                     _DMA2CON1	set	15325
  2256  0000                     _DMA1CON0	set	15356
  2257  0000                     _DMA1AIRQ	set	15358
  2258  0000                     _DMA1SIRQ	set	15359
  2259  0000                     _DMA1CON1	set	15357
  2260  0000                     _CLKRCON	set	15589
  2261  0000                     _CLKRCLK	set	15590
  2262  0000                     _SPI1CON1bits	set	15637
  2263  0000                     _SPI1STATUSbits	set	15639
  2264  0000                     _SPI1INTFbits	set	15642
  2265  0000                     _SPI1CON0bits	set	15636
  2266  0000                     _SPI1RXB	set	15632
  2267  0000                     _SPI1TXB	set	15633
  2268  0000                     _SPI1TCNTL	set	15634
  2269  0000                     _SPI1CON0	set	15636
  2270  0000                     _SPI1CLK	set	15644
  2271  0000                     _SPI1BAUD	set	15641
  2272  0000                     _SPI1CON2	set	15638
  2273  0000                     _SPI1CON1	set	15637
  2274  0000                     _U2RXB	set	15824
  2275  0000                     _U2TXB	set	15826
  2276  0000                     _U2ERRIE	set	15842
  2277  0000                     _U2ERRIR	set	15841
  2278  0000                     _U2UIR	set	15840
  2279  0000                     _U2FIFO	set	15839
  2280  0000                     _U2BRGH	set	15838
  2281  0000                     _U2BRGL	set	15837
  2282  0000                     _U2CON2	set	15836
  2283  0000                     _U2CON1	set	15835
  2284  0000                     _U2CON0	set	15834
  2285  0000                     _U2P3L	set	15832
  2286  0000                     _U2P2L	set	15830
  2287  0000                     _U2P1L	set	15828
  2288  0000                     _U1RXB	set	15848
  2289  0000                     _U1ERRIE	set	15866
  2290  0000                     _U1ERRIR	set	15865
  2291  0000                     _U1UIR	set	15864
  2292  0000                     _U1FIFO	set	15863
  2293  0000                     _U1BRGH	set	15862
  2294  0000                     _U1BRGL	set	15861
  2295  0000                     _U1CON2	set	15860
  2296  0000                     _U1CON1	set	15859
  2297  0000                     _U1CON0	set	15858
  2298  0000                     _U1P3H	set	15857
  2299  0000                     _U1P3L	set	15856
  2300  0000                     _U1P2H	set	15855
  2301  0000                     _U1P2L	set	15854
  2302  0000                     _U1P1H	set	15853
  2303  0000                     _U1P1L	set	15852
  2304  0000                     _FVRCON	set	16065
  2305  0000                     _ADFLTRL	set	16102
  2306  0000                     _ADFLTRH	set	16103
  2307  0000                     _ADCON0bits	set	16120
  2308  0000                     _ADCON0	set	16120
  2309  0000                     _ADCLK	set	16127
  2310  0000                     _ADACT	set	16126
  2311  0000                     _ADREF	set	16125
  2312  0000                     _ADSTAT	set	16124
  2313  0000                     _ADCON3	set	16123
  2314  0000                     _ADCON2	set	16122
  2315  0000                     _ADCON1	set	16121
  2316  0000                     _ADPREH	set	16119
  2317  0000                     _ADPREL	set	16118
  2318  0000                     _ADCAP	set	16117
  2319  0000                     _ADACQH	set	16116
  2320  0000                     _ADACQL	set	16115
  2321  0000                     _ADPCH	set	16113
  2322  0000                     _ADRPT	set	16108
  2323  0000                     _ADACCU	set	16106
  2324  0000                     _ADSTPTH	set	16101
  2325  0000                     _ADSTPTL	set	16100
  2326  0000                     _ADUTHH	set	16097
  2327  0000                     _ADUTHL	set	16096
  2328  0000                     _ADLTHH	set	16095
  2329  0000                     _ADLTHL	set	16094
  2330  0000                     _CCPTMRS1bits	set	16223
  2331  0000                     _PORTDbits	set	16333
  2332  0000                     _PORTFbits	set	16335
  2333  0000                     _LATFbits	set	16319
  2334  0000                     _LATCbits	set	16316
  2335  0000                     _LATDbits	set	16317
  2336  0000                     _PORTBbits	set	16331
  2337  0000                     _T3CONbits	set	16294
  2338  0000                     _T3CON	set	16294
  2339  0000                     _TMR3L	set	16292
  2340  0000                     _TMR3H	set	16293
  2341  0000                     _T3CLK	set	16297
  2342  0000                     _T3GATE	set	16296
  2343  0000                     _T3GCON	set	16295
  2344  0000                     _T2CON	set	16300
  2345  0000                     _T2TMR	set	16298
  2346  0000                     _T2PR	set	16299
  2347  0000                     _T2RST	set	16303
  2348  0000                     _T2HLT	set	16301
  2349  0000                     _T2CLKCON	set	16302
  2350  0000                     _PWM8DCL	set	16224
  2351  0000                     _PWM8DCH	set	16225
  2352  0000                     _PWM8CON	set	16226
  2353  0000                     _LATEbits	set	16318
  2354  0000                     _T5CONbits	set	16282
  2355  0000                     _T5CON	set	16282
  2356  0000                     _TMR5L	set	16280
  2357  0000                     _TMR5H	set	16281
  2358  0000                     _T5CLK	set	16285
  2359  0000                     _T5GATE	set	16284
  2360  0000                     _T5GCON	set	16283
  2361  0000                     _T6CON	set	16276
  2362  0000                     _T6TMR	set	16274
  2363  0000                     _T6PR	set	16275
  2364  0000                     _T6RST	set	16279
  2365  0000                     _T6HLT	set	16277
  2366  0000                     _T6CLKCON	set	16278
  2367  0000                     _TRISD	set	16325
  2368  0000                     _TRISC	set	16324
  2369  0000                     _TRISB	set	16323
  2370  0000                     _TRISA	set	16322
  2371  0000                     _TRISF	set	16327
  2372  0000                     _TRISE	set	16326
  2373  0000                     _LATC	set	16316
  2374  0000                     _LATB	set	16315
  2375  0000                     _LATF	set	16319
  2376  0000                     _LATA	set	16314
  2377  0000                     _LATD	set	16317
  2378  0000                     _LATE	set	16318
  2379  0000                     _IVTLOCKbits	set	16340
  2380  0000                     _IVTLOCK	set	16340
  2381  0000                     _INTCON0bits	set	16338
  2382  0000                     _GIE	set	130711
  2383  00FACF                     STR_81:
  2384                           
  2385                           ; BSR set to: 57
  2386  00FACF  20                 	db	32
  2387  00FAD0  25                 	db	37
  2388  00FAD1  63                 	db	99	;'c'
  2389  00FAD2  20                 	db	32
  2390  00FAD3  2C                 	db	44
  2391  00FAD4  25                 	db	37
  2392  00FAD5  6C                 	db	108	;'l'
  2393  00FAD6  75                 	db	117	;'u'
  2394  00FAD7  2C                 	db	44
  2395  00FAD8  25                 	db	37
  2396  00FAD9  34                 	db	52	;'4'
  2397  00FADA  2E                 	db	46
  2398  00FADB  34                 	db	52	;'4'
  2399  00FADC  66                 	db	102	;'f'
  2400  00FADD  2C                 	db	44
  2401  00FADE  25                 	db	37
  2402  00FADF  34                 	db	52	;'4'
  2403  00FAE0  2E                 	db	46
  2404  00FAE1  34                 	db	52	;'4'
  2405  00FAE2  66                 	db	102	;'f'
  2406  00FAE3  2C                 	db	44
  2407  00FAE4  25                 	db	37
  2408  00FAE5  34                 	db	52	;'4'
  2409  00FAE6  2E                 	db	46
  2410  00FAE7  34                 	db	52	;'4'
  2411  00FAE8  66                 	db	102	;'f'
  2412  00FAE9  2C                 	db	44
  2413  00FAEA  25                 	db	37
  2414  00FAEB  34                 	db	52	;'4'
  2415  00FAEC  2E                 	db	46
  2416  00FAED  34                 	db	52	;'4'
  2417  00FAEE  66                 	db	102	;'f'
  2418  00FAEF  2C                 	db	44
  2419  00FAF0  25                 	db	37
  2420  00FAF1  34                 	db	52	;'4'
  2421  00FAF2  2E                 	db	46
  2422  00FAF3  34                 	db	52	;'4'
  2423  00FAF4  66                 	db	102	;'f'
  2424  00FAF5  2C                 	db	44
  2425  00FAF6  25                 	db	37
  2426  00FAF7  34                 	db	52	;'4'
  2427  00FAF8  2E                 	db	46
  2428  00FAF9  33                 	db	51	;'3'
  2429  00FAFA  66                 	db	102	;'f'
  2430  00FAFB  2C                 	db	44
  2431  00FAFC  25                 	db	37
  2432  00FAFD  34                 	db	52	;'4'
  2433  00FAFE  2E                 	db	46
  2434  00FAFF  33                 	db	51	;'3'
  2435  00FB00  66                 	db	102	;'f'
  2436  00FB01  2C                 	db	44
  2437  00FB02  25                 	db	37
  2438  00FB03  34                 	db	52	;'4'
  2439  00FB04  2E                 	db	46
  2440  00FB05  33                 	db	51	;'3'
  2441  00FB06  66                 	db	102	;'f'
  2442  00FB07  2C                 	db	44
  2443  00FB08  25                 	db	37
  2444  00FB09  34                 	db	52	;'4'
  2445  00FB0A  2E                 	db	46
  2446  00FB0B  33                 	db	51	;'3'
  2447  00FB0C  66                 	db	102	;'f'
  2448  00FB0D  2C                 	db	44
  2449  00FB0E  25                 	db	37
  2450  00FB0F  34                 	db	52	;'4'
  2451  00FB10  2E                 	db	46
  2452  00FB11  33                 	db	51	;'3'
  2453  00FB12  66                 	db	102	;'f'
  2454  00FB13  2C                 	db	44
  2455  00FB14  25                 	db	37
  2456  00FB15  34                 	db	52	;'4'
  2457  00FB16  2E                 	db	46
  2458  00FB17  33                 	db	51	;'3'
  2459  00FB18  66                 	db	102	;'f'
  2460  00FB19  2C                 	db	44
  2461  00FB1A  25                 	db	37
  2462  00FB1B  64                 	db	100	;'d'
  2463  00FB1C  2C                 	db	44
  2464  00FB1D  25                 	db	37
  2465  00FB1E  64                 	db	100	;'d'
  2466  00FB1F  2C                 	db	44
  2467  00FB20  25                 	db	37
  2468  00FB21  32                 	db	50	;'2'
  2469  00FB22  2E                 	db	46
  2470  00FB23  36                 	db	54	;'6'
  2471  00FB24  66                 	db	102	;'f'
  2472  00FB25  2C                 	db	44
  2473  00FB26  25                 	db	37
  2474  00FB27  34                 	db	52	;'4'
  2475  00FB28  2E                 	db	46
  2476  00FB29  33                 	db	51	;'3'
  2477  00FB2A  66                 	db	102	;'f'
  2478  00FB2B  2C                 	db	44
  2479  00FB2C  25                 	db	37
  2480  00FB2D  64                 	db	100	;'d'
  2481  00FB2E  2C                 	db	44
  2482  00FB2F  25                 	db	37
  2483  00FB30  64                 	db	100	;'d'
  2484  00FB31  2C                 	db	44
  2485  00FB32  25                 	db	37
  2486  00FB33  6C                 	db	108	;'l'
  2487  00FB34  75                 	db	117	;'u'
  2488  00FB35  2C                 	db	44
  2489  00FB36  25                 	db	37
  2490  00FB37  6C                 	db	108	;'l'
  2491  00FB38  75                 	db	117	;'u'
  2492  00FB39  2C                 	db	44
  2493  00FB3A  25                 	db	37
  2494  00FB3B  34                 	db	52	;'4'
  2495  00FB3C  2E                 	db	46
  2496  00FB3D  33                 	db	51	;'3'
  2497  00FB3E  66                 	db	102	;'f'
  2498  00FB3F  2C                 	db	44
  2499  00FB40  25                 	db	37
  2500  00FB41  34                 	db	52	;'4'
  2501  00FB42  2E                 	db	46
  2502  00FB43  33                 	db	51	;'3'
  2503  00FB44  66                 	db	102	;'f'
  2504  00FB45  2C                 	db	44
  2505  00FB46  25                 	db	37
  2506  00FB47  34                 	db	52	;'4'
  2507  00FB48  2E                 	db	46
  2508  00FB49  33                 	db	51	;'3'
  2509  00FB4A  66                 	db	102	;'f'
  2510  00FB4B  0D                 	db	13
  2511  00FB4C  0A                 	db	10
  2512  00FB4D  00                 	db	0
  2513  00FB4E                     STR_39:
  2514                           
  2515                           ; BSR set to: 57
  2516  00FB4E  53                 	db	83	;'S'
  2517  00FB4F  25                 	db	37
  2518  00FB50  63                 	db	99	;'c'
  2519  00FB51  43                 	db	67	;'C'
  2520  00FB52  20                 	db	32
  2521  00FB53  25                 	db	37
  2522  00FB54  64                 	db	100	;'d'
  2523  00FB55  20                 	db	32
  2524  00FB56  52                 	db	82	;'R'
  2525  00FB57  55                 	db	85	;'U'
  2526  00FB58  4E                 	db	78	;'N'
  2527  00FB59  20                 	db	32
  2528  00FB5A  25                 	db	37
  2529  00FB5B  64                 	db	100	;'d'
  2530  00FB5C  20                 	db	32
  2531  00FB5D  56                 	db	86	;'V'
  2532  00FB5E  25                 	db	37
  2533  00FB5F  32                 	db	50	;'2'
  2534  00FB60  2E                 	db	46
  2535  00FB61  32                 	db	50	;'2'
  2536  00FB62  66                 	db	102	;'f'
  2537  00FB63  20                 	db	32
  2538  00FB64  20                 	db	32
  2539  00FB65  20                 	db	32
  2540  00FB66  20                 	db	32
  2541  00FB67  20                 	db	32
  2542  00FB68  20                 	db	32
  2543  00FB69  20                 	db	32
  2544  00FB6A  00                 	db	0
  2545  00FB6B                     STR_20:
  2546                           
  2547                           ; BSR set to: 57
  2548  00FB6B  52                 	db	82	;'R'
  2549  00FB6C  31                 	db	49	;'1'
  2550  00FB6D  20                 	db	32
  2551  00FB6E  25                 	db	37
  2552  00FB6F  32                 	db	50	;'2'
  2553  00FB70  2E                 	db	46
  2554  00FB71  33                 	db	51	;'3'
  2555  00FB72  66                 	db	102	;'f'
  2556  00FB73  20                 	db	32
  2557  00FB74  25                 	db	37
  2558  00FB75  33                 	db	51	;'3'
  2559  00FB76  2E                 	db	46
  2560  00FB77  34                 	db	52	;'4'
  2561  00FB78  66                 	db	102	;'f'
  2562  00FB79  20                 	db	32
  2563  00FB7A  20                 	db	32
  2564  00FB7B  20                 	db	32
  2565  00FB7C  20                 	db	32
  2566  00FB7D  20                 	db	32
  2567  00FB7E  20                 	db	32
  2568  00FB7F  20                 	db	32
  2569  00FB80  20                 	db	32
  2570  00FB81  20                 	db	32
  2571  00FB82  20                 	db	32
  2572  00FB83  20                 	db	32
  2573  00FB84  00                 	db	0
  2574  00FB85                     STR_21:
  2575                           
  2576                           ; BSR set to: 57
  2577  00FB85  52                 	db	82	;'R'
  2578  00FB86  32                 	db	50	;'2'
  2579  00FB87  20                 	db	32
  2580  00FB88  25                 	db	37
  2581  00FB89  32                 	db	50	;'2'
  2582  00FB8A  2E                 	db	46
  2583  00FB8B  33                 	db	51	;'3'
  2584  00FB8C  66                 	db	102	;'f'
  2585  00FB8D  20                 	db	32
  2586  00FB8E  25                 	db	37
  2587  00FB8F  33                 	db	51	;'3'
  2588  00FB90  2E                 	db	46
  2589  00FB91  34                 	db	52	;'4'
  2590  00FB92  66                 	db	102	;'f'
  2591  00FB93  20                 	db	32
  2592  00FB94  20                 	db	32
  2593  00FB95  20                 	db	32
  2594  00FB96  20                 	db	32
  2595  00FB97  20                 	db	32
  2596  00FB98  20                 	db	32
  2597  00FB99  20                 	db	32
  2598  00FB9A  20                 	db	32
  2599  00FB9B  20                 	db	32
  2600  00FB9C  20                 	db	32
  2601  00FB9D  20                 	db	32
  2602  00FB9E  00                 	db	0
  2603  00FB9F                     STR_11:
  2604                           
  2605                           ; BSR set to: 57
  2606  00FB9F  53                 	db	83	;'S'
  2607  00FBA0  20                 	db	32
  2608  00FBA1  53                 	db	83	;'S'
  2609  00FBA2  25                 	db	37
  2610  00FBA3  63                 	db	99	;'c'
  2611  00FBA4  43                 	db	67	;'C'
  2612  00FBA5  20                 	db	32
  2613  00FBA6  25                 	db	37
  2614  00FBA7  64                 	db	100	;'d'
  2615  00FBA8  20                 	db	32
  2616  00FBA9  25                 	db	37
  2617  00FBAA  32                 	db	50	;'2'
  2618  00FBAB  2E                 	db	46
  2619  00FBAC  34                 	db	52	;'4'
  2620  00FBAD  66                 	db	102	;'f'
  2621  00FBAE  20                 	db	32
  2622  00FBAF  20                 	db	32
  2623  00FBB0  20                 	db	32
  2624  00FBB1  20                 	db	32
  2625  00FBB2  20                 	db	32
  2626  00FBB3  20                 	db	32
  2627  00FBB4  20                 	db	32
  2628  00FBB5  20                 	db	32
  2629  00FBB6  20                 	db	32
  2630  00FBB7  20                 	db	32
  2631  00FBB8  00                 	db	0
  2632  00FBB9                     
  2633                           ; BSR set to: 57
  2634  00FBB9  20                 	db	32
  2635  00FBBA  4D                 	db	77	;'M'
  2636  00FBBB  65                 	db	101	;'e'
  2637  00FBBC  73                 	db	115	;'s'
  2638  00FBBD  67                 	db	103	;'g'
  2639  00FBBE  20                 	db	32
  2640  00FBBF  25                 	db	37
  2641  00FBC0  64                 	db	100	;'d'
  2642  00FBC1  20                 	db	32
  2643  00FBC2  53                 	db	83	;'S'
  2644  00FBC3  74                 	db	116	;'t'
  2645  00FBC4  61                 	db	97	;'a'
  2646  00FBC5  63                 	db	99	;'c'
  2647  00FBC6  6B                 	db	107	;'k'
  2648  00FBC7  20                 	db	32
  2649  00FBC8  25                 	db	37
  2650  00FBC9  64                 	db	100	;'d'
  2651  00FBCA  20                 	db	32
  2652  00FBCB  20                 	db	32
  2653  00FBCC  20                 	db	32
  2654  00FBCD  20                 	db	32
  2655  00FBCE  20                 	db	32
  2656  00FBCF  20                 	db	32
  2657  00FBD0  00                 	db	0
  2658  00FBD1                     STR_40:
  2659                           
  2660                           ; BSR set to: 57
  2661  00FBD1  45                 	db	69	;'E'
  2662  00FBD2  53                 	db	83	;'S'
  2663  00FBD3  52                 	db	82	;'R'
  2664  00FBD4  20                 	db	32
  2665  00FBD5  20                 	db	32
  2666  00FBD6  25                 	db	37
  2667  00FBD7  32                 	db	50	;'2'
  2668  00FBD8  2E                 	db	46
  2669  00FBD9  36                 	db	54	;'6'
  2670  00FBDA  66                 	db	102	;'f'
  2671  00FBDB  20                 	db	32
  2672  00FBDC  20                 	db	32
  2673  00FBDD  20                 	db	32
  2674  00FBDE  20                 	db	32
  2675  00FBDF  20                 	db	32
  2676  00FBE0  20                 	db	32
  2677  00FBE1  20                 	db	32
  2678  00FBE2  20                 	db	32
  2679  00FBE3  20                 	db	32
  2680  00FBE4  20                 	db	32
  2681  00FBE5  20                 	db	32
  2682  00FBE6  20                 	db	32
  2683  00FBE7  00                 	db	0
  2684  00FBE8                     STR_37:
  2685                           
  2686                           ; BSR set to: 57
  2687  00FBE8  42                 	db	66	;'B'
  2688  00FBE9  41                 	db	65	;'A'
  2689  00FBEA  54                 	db	84	;'T'
  2690  00FBEB  54                 	db	84	;'T'
  2691  00FBEC  20                 	db	32
  2692  00FBED  50                 	db	80	;'P'
  2693  00FBEE  57                 	db	87	;'W'
  2694  00FBEF  52                 	db	82	;'R'
  2695  00FBF0  20                 	db	32
  2696  00FBF1  25                 	db	37
  2697  00FBF2  33                 	db	51	;'3'
  2698  00FBF3  2E                 	db	46
  2699  00FBF4  32                 	db	50	;'2'
  2700  00FBF5  66                 	db	102	;'f'
  2701  00FBF6  20                 	db	32
  2702  00FBF7  20                 	db	32
  2703  00FBF8  20                 	db	32
  2704  00FBF9  20                 	db	32
  2705  00FBFA  20                 	db	32
  2706  00FBFB  20                 	db	32
  2707  00FBFC  20                 	db	32
  2708  00FBFD  20                 	db	32
  2709  00FBFE  00                 	db	0
  2710  00FBFF                     STR_41:
  2711                           
  2712                           ; BSR set to: 57
  2713  00FBFF  52                 	db	82	;'R'
  2714  00FC00  31                 	db	49	;'1'
  2715  00FC01  20                 	db	32
  2716  00FC02  25                 	db	37
  2717  00FC03  32                 	db	50	;'2'
  2718  00FC04  2E                 	db	46
  2719  00FC05  33                 	db	51	;'3'
  2720  00FC06  66                 	db	102	;'f'
  2721  00FC07  20                 	db	32
  2722  00FC08  25                 	db	37
  2723  00FC09  33                 	db	51	;'3'
  2724  00FC0A  2E                 	db	46
  2725  00FC0B  34                 	db	52	;'4'
  2726  00FC0C  66                 	db	102	;'f'
  2727  00FC0D  20                 	db	32
  2728  00FC0E  20                 	db	32
  2729  00FC0F  20                 	db	32
  2730  00FC10  20                 	db	32
  2731  00FC11  20                 	db	32
  2732  00FC12  20                 	db	32
  2733  00FC13  20                 	db	32
  2734  00FC14  20                 	db	32
  2735  00FC15  00                 	db	0
  2736  00FC16                     STR_42:
  2737                           
  2738                           ; BSR set to: 57
  2739  00FC16  52                 	db	82	;'R'
  2740  00FC17  32                 	db	50	;'2'
  2741  00FC18  20                 	db	32
  2742  00FC19  25                 	db	37
  2743  00FC1A  32                 	db	50	;'2'
  2744  00FC1B  2E                 	db	46
  2745  00FC1C  33                 	db	51	;'3'
  2746  00FC1D  66                 	db	102	;'f'
  2747  00FC1E  20                 	db	32
  2748  00FC1F  25                 	db	37
  2749  00FC20  33                 	db	51	;'3'
  2750  00FC21  2E                 	db	46
  2751  00FC22  34                 	db	52	;'4'
  2752  00FC23  66                 	db	102	;'f'
  2753  00FC24  20                 	db	32
  2754  00FC25  20                 	db	32
  2755  00FC26  20                 	db	32
  2756  00FC27  20                 	db	32
  2757  00FC28  20                 	db	32
  2758  00FC29  20                 	db	32
  2759  00FC2A  20                 	db	32
  2760  00FC2B  20                 	db	32
  2761  00FC2C  00                 	db	0
  2762  00FC2D                     STR_38:
  2763                           
  2764                           ; BSR set to: 57
  2765  00FC2D  42                 	db	66	;'B'
  2766  00FC2E  41                 	db	65	;'A'
  2767  00FC2F  48                 	db	72	;'H'
  2768  00FC30  20                 	db	32
  2769  00FC31  25                 	db	37
  2770  00FC32  33                 	db	51	;'3'
  2771  00FC33  2E                 	db	46
  2772  00FC34  32                 	db	50	;'2'
  2773  00FC35  66                 	db	102	;'f'
  2774  00FC36  20                 	db	32
  2775  00FC37  50                 	db	80	;'P'
  2776  00FC38  25                 	db	37
  2777  00FC39  33                 	db	51	;'3'
  2778  00FC3A  2E                 	db	46
  2779  00FC3B  32                 	db	50	;'2'
  2780  00FC3C  66                 	db	102	;'f'
  2781  00FC3D  20                 	db	32
  2782  00FC3E  20                 	db	32
  2783  00FC3F  20                 	db	32
  2784  00FC40  20                 	db	32
  2785  00FC41  20                 	db	32
  2786  00FC42  20                 	db	32
  2787  00FC43  00                 	db	0
  2788  00FC44                     STR_14:
  2789                           
  2790                           ; BSR set to: 57
  2791  00FC44  20                 	db	32
  2792  00FC45  20                 	db	32
  2793  00FC46  20                 	db	32
  2794  00FC47  20                 	db	32
  2795  00FC48  20                 	db	32
  2796  00FC49  20                 	db	32
  2797  00FC4A  20                 	db	32
  2798  00FC4B  20                 	db	32
  2799  00FC4C  20                 	db	32
  2800  00FC4D  20                 	db	32
  2801  00FC4E  20                 	db	32
  2802  00FC4F  20                 	db	32
  2803  00FC50  20                 	db	32
  2804  00FC51  20                 	db	32
  2805  00FC52  20                 	db	32
  2806  00FC53  20                 	db	32
  2807  00FC54  20                 	db	32
  2808  00FC55  20                 	db	32
  2809  00FC56  20                 	db	32
  2810  00FC57  20                 	db	32
  2811  00FC58  20                 	db	32
  2812  00FC59  00                 	db	0
  2813  00FC5A                     STR_19:
  2814                           
  2815                           ; BSR set to: 57
  2816  00FC5A  45                 	db	69	;'E'
  2817  00FC5B  53                 	db	83	;'S'
  2818  00FC5C  52                 	db	82	;'R'
  2819  00FC5D  20                 	db	32
  2820  00FC5E  20                 	db	32
  2821  00FC5F  25                 	db	37
  2822  00FC60  32                 	db	50	;'2'
  2823  00FC61  2E                 	db	46
  2824  00FC62  36                 	db	54	;'6'
  2825  00FC63  66                 	db	102	;'f'
  2826  00FC64  20                 	db	32
  2827  00FC65  20                 	db	32
  2828  00FC66  20                 	db	32
  2829  00FC67  20                 	db	32
  2830  00FC68  20                 	db	32
  2831  00FC69  20                 	db	32
  2832  00FC6A  20                 	db	32
  2833  00FC6B  20                 	db	32
  2834  00FC6C  20                 	db	32
  2835  00FC6D  20                 	db	32
  2836  00FC6E  20                 	db	32
  2837  00FC6F  00                 	db	0
  2838  00FC70                     STR_12:
  2839                           
  2840                           ; BSR set to: 57
  2841  00FC70  53                 	db	83	;'S'
  2842  00FC71  74                 	db	116	;'t'
  2843  00FC72  61                 	db	97	;'a'
  2844  00FC73  74                 	db	116	;'t'
  2845  00FC74  69                 	db	105	;'i'
  2846  00FC75  63                 	db	99	;'c'
  2847  00FC76  20                 	db	32
  2848  00FC77  53                 	db	83	;'S'
  2849  00FC78  4F                 	db	79	;'O'
  2850  00FC79  43                 	db	67	;'C'
  2851  00FC7A  20                 	db	32
  2852  00FC7B  25                 	db	37
  2853  00FC7C  64                 	db	100	;'d'
  2854  00FC7D  20                 	db	32
  2855  00FC7E  20                 	db	32
  2856  00FC7F  20                 	db	32
  2857  00FC80  20                 	db	32
  2858  00FC81  20                 	db	32
  2859  00FC82  20                 	db	32
  2860  00FC83  20                 	db	32
  2861  00FC84  20                 	db	32
  2862  00FC85  00                 	db	0
  2863  00FC86                     STR_34:
  2864                           
  2865                           ; BSR set to: 57
  2866  00FC86  42                 	db	66	;'B'
  2867  00FC87  41                 	db	65	;'A'
  2868  00FC88  54                 	db	84	;'T'
  2869  00FC89  20                 	db	32
  2870  00FC8A  49                 	db	73	;'I'
  2871  00FC8B  57                 	db	87	;'W'
  2872  00FC8C  48                 	db	72	;'H'
  2873  00FC8D  20                 	db	32
  2874  00FC8E  25                 	db	37
  2875  00FC8F  34                 	db	52	;'4'
  2876  00FC90  2E                 	db	46
  2877  00FC91  31                 	db	49	;'1'
  2878  00FC92  66                 	db	102	;'f'
  2879  00FC93  20                 	db	32
  2880  00FC94  20                 	db	32
  2881  00FC95  20                 	db	32
  2882  00FC96  20                 	db	32
  2883  00FC97  20                 	db	32
  2884  00FC98  20                 	db	32
  2885  00FC99  20                 	db	32
  2886  00FC9A  20                 	db	32
  2887  00FC9B  00                 	db	0
  2888  00FC9C                     STR_35:
  2889                           
  2890                           ; BSR set to: 57
  2891  00FC9C  42                 	db	66	;'B'
  2892  00FC9D  41                 	db	65	;'A'
  2893  00FC9E  54                 	db	84	;'T'
  2894  00FC9F  20                 	db	32
  2895  00FCA0  4F                 	db	79	;'O'
  2896  00FCA1  57                 	db	87	;'W'
  2897  00FCA2  48                 	db	72	;'H'
  2898  00FCA3  20                 	db	32
  2899  00FCA4  25                 	db	37
  2900  00FCA5  34                 	db	52	;'4'
  2901  00FCA6  2E                 	db	46
  2902  00FCA7  31                 	db	49	;'1'
  2903  00FCA8  66                 	db	102	;'f'
  2904  00FCA9  20                 	db	32
  2905  00FCAA  20                 	db	32
  2906  00FCAB  20                 	db	32
  2907  00FCAC  20                 	db	32
  2908  00FCAD  20                 	db	32
  2909  00FCAE  20                 	db	32
  2910  00FCAF  20                 	db	32
  2911  00FCB0  20                 	db	32
  2912  00FCB1  00                 	db	0
  2913  00FCB2                     STR_36:
  2914                           
  2915                           ; BSR set to: 57
  2916  00FCB2  42                 	db	66	;'B'
  2917  00FCB3  41                 	db	65	;'A'
  2918  00FCB4  54                 	db	84	;'T'
  2919  00FCB5  20                 	db	32
  2920  00FCB6  54                 	db	84	;'T'
  2921  00FCB7  57                 	db	87	;'W'
  2922  00FCB8  48                 	db	72	;'H'
  2923  00FCB9  20                 	db	32
  2924  00FCBA  25                 	db	37
  2925  00FCBB  34                 	db	52	;'4'
  2926  00FCBC  2E                 	db	46
  2927  00FCBD  31                 	db	49	;'1'
  2928  00FCBE  66                 	db	102	;'f'
  2929  00FCBF  20                 	db	32
  2930  00FCC0  20                 	db	32
  2931  00FCC1  20                 	db	32
  2932  00FCC2  20                 	db	32
  2933  00FCC3  20                 	db	32
  2934  00FCC4  20                 	db	32
  2935  00FCC5  20                 	db	32
  2936  00FCC6  20                 	db	32
  2937  00FCC7  00                 	db	0
  2938  00FCC8                     STR_30:
  2939                           
  2940                           ; BSR set to: 57
  2941  00FCC8  49                 	db	73	;'I'
  2942  00FCC9  4E                 	db	78	;'N'
  2943  00FCCA  56                 	db	86	;'V'
  2944  00FCCB  20                 	db	32
  2945  00FCCC  20                 	db	32
  2946  00FCCD  57                 	db	87	;'W'
  2947  00FCCE  48                 	db	72	;'H'
  2948  00FCCF  20                 	db	32
  2949  00FCD0  25                 	db	37
  2950  00FCD1  33                 	db	51	;'3'
  2951  00FCD2  2E                 	db	46
  2952  00FCD3  32                 	db	50	;'2'
  2953  00FCD4  66                 	db	102	;'f'
  2954  00FCD5  20                 	db	32
  2955  00FCD6  20                 	db	32
  2956  00FCD7  20                 	db	32
  2957  00FCD8  20                 	db	32
  2958  00FCD9  20                 	db	32
  2959  00FCDA  20                 	db	32
  2960  00FCDB  20                 	db	32
  2961  00FCDC  20                 	db	32
  2962  00FCDD  00                 	db	0
  2963  00FCDE                     STR_29:
  2964                           
  2965                           ; BSR set to: 57
  2966  00FCDE  4C                 	db	76	;'L'
  2967  00FCDF  4F                 	db	79	;'O'
  2968  00FCE0  41                 	db	65	;'A'
  2969  00FCE1  44                 	db	68	;'D'
  2970  00FCE2  20                 	db	32
  2971  00FCE3  57                 	db	87	;'W'
  2972  00FCE4  48                 	db	72	;'H'
  2973  00FCE5  20                 	db	32
  2974  00FCE6  25                 	db	37
  2975  00FCE7  33                 	db	51	;'3'
  2976  00FCE8  2E                 	db	46
  2977  00FCE9  32                 	db	50	;'2'
  2978  00FCEA  66                 	db	102	;'f'
  2979  00FCEB  20                 	db	32
  2980  00FCEC  20                 	db	32
  2981  00FCED  20                 	db	32
  2982  00FCEE  20                 	db	32
  2983  00FCEF  20                 	db	32
  2984  00FCF0  20                 	db	32
  2985  00FCF1  20                 	db	32
  2986  00FCF2  20                 	db	32
  2987  00FCF3  00                 	db	0
  2988  00FCF4                     STR_28:
  2989                           
  2990                           ; BSR set to: 57
  2991  00FCF4  50                 	db	80	;'P'
  2992  00FCF5  56                 	db	86	;'V'
  2993  00FCF6  20                 	db	32
  2994  00FCF7  25                 	db	37
  2995  00FCF8  63                 	db	99	;'c'
  2996  00FCF9  20                 	db	32
  2997  00FCFA  57                 	db	87	;'W'
  2998  00FCFB  48                 	db	72	;'H'
  2999  00FCFC  20                 	db	32
  3000  00FCFD  25                 	db	37
  3001  00FCFE  33                 	db	51	;'3'
  3002  00FCFF  2E                 	db	46
  3003  00FD00  32                 	db	50	;'2'
  3004  00FD01  66                 	db	102	;'f'
  3005  00FD02  20                 	db	32
  3006  00FD03  20                 	db	32
  3007  00FD04  20                 	db	32
  3008  00FD05  20                 	db	32
  3009  00FD06  20                 	db	32
  3010  00FD07  20                 	db	32
  3011  00FD08  20                 	db	32
  3012  00FD09  00                 	db	0
  3013  00FD0A                     STR_27:
  3014                           
  3015                           ; BSR set to: 57
  3016  00FD0A  49                 	db	73	;'I'
  3017  00FD0B  4E                 	db	78	;'N'
  3018  00FD0C  56                 	db	86	;'V'
  3019  00FD0D  20                 	db	32
  3020  00FD0E  20                 	db	32
  3021  00FD0F  50                 	db	80	;'P'
  3022  00FD10  57                 	db	87	;'W'
  3023  00FD11  52                 	db	82	;'R'
  3024  00FD12  20                 	db	32
  3025  00FD13  25                 	db	37
  3026  00FD14  33                 	db	51	;'3'
  3027  00FD15  2E                 	db	46
  3028  00FD16  32                 	db	50	;'2'
  3029  00FD17  66                 	db	102	;'f'
  3030  00FD18  20                 	db	32
  3031  00FD19  20                 	db	32
  3032  00FD1A  20                 	db	32
  3033  00FD1B  20                 	db	32
  3034  00FD1C  20                 	db	32
  3035  00FD1D  20                 	db	32
  3036  00FD1E  20                 	db	32
  3037  00FD1F  00                 	db	0
  3038  00FD20                     STR_26:
  3039                           
  3040                           ; BSR set to: 57
  3041  00FD20  4C                 	db	76	;'L'
  3042  00FD21  4F                 	db	79	;'O'
  3043  00FD22  41                 	db	65	;'A'
  3044  00FD23  44                 	db	68	;'D'
  3045  00FD24  20                 	db	32
  3046  00FD25  50                 	db	80	;'P'
  3047  00FD26  57                 	db	87	;'W'
  3048  00FD27  52                 	db	82	;'R'
  3049  00FD28  20                 	db	32
  3050  00FD29  25                 	db	37
  3051  00FD2A  33                 	db	51	;'3'
  3052  00FD2B  2E                 	db	46
  3053  00FD2C  32                 	db	50	;'2'
  3054  00FD2D  66                 	db	102	;'f'
  3055  00FD2E  20                 	db	32
  3056  00FD2F  20                 	db	32
  3057  00FD30  20                 	db	32
  3058  00FD31  20                 	db	32
  3059  00FD32  20                 	db	32
  3060  00FD33  20                 	db	32
  3061  00FD34  20                 	db	32
  3062  00FD35  00                 	db	0
  3063  00FD36                     STR_25:
  3064                           
  3065                           ; BSR set to: 57
  3066  00FD36  50                 	db	80	;'P'
  3067  00FD37  56                 	db	86	;'V'
  3068  00FD38  20                 	db	32
  3069  00FD39  25                 	db	37
  3070  00FD3A  63                 	db	99	;'c'
  3071  00FD3B  20                 	db	32
  3072  00FD3C  50                 	db	80	;'P'
  3073  00FD3D  57                 	db	87	;'W'
  3074  00FD3E  52                 	db	82	;'R'
  3075  00FD3F  20                 	db	32
  3076  00FD40  25                 	db	37
  3077  00FD41  33                 	db	51	;'3'
  3078  00FD42  2E                 	db	46
  3079  00FD43  32                 	db	50	;'2'
  3080  00FD44  66                 	db	102	;'f'
  3081  00FD45  20                 	db	32
  3082  00FD46  20                 	db	32
  3083  00FD47  20                 	db	32
  3084  00FD48  20                 	db	32
  3085  00FD49  20                 	db	32
  3086  00FD4A  20                 	db	32
  3087  00FD4B  00                 	db	0
  3088  00FD4C                     STR_13:
  3089                           
  3090                           ; BSR set to: 57
  3091  00FD4C  42                 	db	66	;'B'
  3092  00FD4D  61                 	db	97	;'a'
  3093  00FD4E  74                 	db	116	;'t'
  3094  00FD4F  74                 	db	116	;'t'
  3095  00FD50  65                 	db	101	;'e'
  3096  00FD51  72                 	db	114	;'r'
  3097  00FD52  79                 	db	121	;'y'
  3098  00FD53  20                 	db	32
  3099  00FD54  41                 	db	65	;'A'
  3100  00FD55  68                 	db	104	;'h'
  3101  00FD56  20                 	db	32
  3102  00FD57  25                 	db	37
  3103  00FD58  33                 	db	51	;'3'
  3104  00FD59  2E                 	db	46
  3105  00FD5A  32                 	db	50	;'2'
  3106  00FD5B  66                 	db	102	;'f'
  3107  00FD5C  20                 	db	32
  3108  00FD5D  20                 	db	32
  3109  00FD5E  20                 	db	32
  3110  00FD5F  20                 	db	32
  3111  00FD60  20                 	db	32
  3112  00FD61  00                 	db	0
  3113  00FD62                     STR_32:
  3114                           
  3115                           ; BSR set to: 57
  3116  00FD62  42                 	db	66	;'B'
  3117  00FD63  56                 	db	86	;'V'
  3118  00FD64  20                 	db	32
  3119  00FD65  25                 	db	37
  3120  00FD66  32                 	db	50	;'2'
  3121  00FD67  2E                 	db	46
  3122  00FD68  32                 	db	50	;'2'
  3123  00FD69  66                 	db	102	;'f'
  3124  00FD6A  20                 	db	32
  3125  00FD6B  42                 	db	66	;'B'
  3126  00FD6C  41                 	db	65	;'A'
  3127  00FD6D  20                 	db	32
  3128  00FD6E  25                 	db	37
  3129  00FD6F  32                 	db	50	;'2'
  3130  00FD70  2E                 	db	46
  3131  00FD71  32                 	db	50	;'2'
  3132  00FD72  66                 	db	102	;'f'
  3133  00FD73  20                 	db	32
  3134  00FD74  20                 	db	32
  3135  00FD75  20                 	db	32
  3136  00FD76  20                 	db	32
  3137  00FD77  00                 	db	0
  3138  00FD78                     STR_33:
  3139                           
  3140                           ; BSR set to: 57
  3141  00FD78  43                 	db	67	;'C'
  3142  00FD79  56                 	db	86	;'V'
  3143  00FD7A  20                 	db	32
  3144  00FD7B  25                 	db	37
  3145  00FD7C  32                 	db	50	;'2'
  3146  00FD7D  2E                 	db	46
  3147  00FD7E  32                 	db	50	;'2'
  3148  00FD7F  66                 	db	102	;'f'
  3149  00FD80  20                 	db	32
  3150  00FD81  4C                 	db	76	;'L'
  3151  00FD82  41                 	db	65	;'A'
  3152  00FD83  20                 	db	32
  3153  00FD84  25                 	db	37
  3154  00FD85  32                 	db	50	;'2'
  3155  00FD86  2E                 	db	46
  3156  00FD87  32                 	db	50	;'2'
  3157  00FD88  66                 	db	102	;'f'
  3158  00FD89  20                 	db	32
  3159  00FD8A  20                 	db	32
  3160  00FD8B  20                 	db	32
  3161  00FD8C  20                 	db	32
  3162  00FD8D  00                 	db	0
  3163  00FD8E                     STR_31:
  3164                           
  3165                           ; BSR set to: 57
  3166  00FD8E  50                 	db	80	;'P'
  3167  00FD8F  56                 	db	86	;'V'
  3168  00FD90  20                 	db	32
  3169  00FD91  25                 	db	37
  3170  00FD92  32                 	db	50	;'2'
  3171  00FD93  2E                 	db	46
  3172  00FD94  32                 	db	50	;'2'
  3173  00FD95  66                 	db	102	;'f'
  3174  00FD96  20                 	db	32
  3175  00FD97  50                 	db	80	;'P'
  3176  00FD98  41                 	db	65	;'A'
  3177  00FD99  20                 	db	32
  3178  00FD9A  25                 	db	37
  3179  00FD9B  32                 	db	50	;'2'
  3180  00FD9C  2E                 	db	46
  3181  00FD9D  32                 	db	50	;'2'
  3182  00FD9E  66                 	db	102	;'f'
  3183  00FD9F  20                 	db	32
  3184  00FDA0  20                 	db	32
  3185  00FDA1  20                 	db	32
  3186  00FDA2  20                 	db	32
  3187  00FDA3  00                 	db	0
  3188  00FDA4                     STR_43:
  3189                           
  3190                           ; BSR set to: 57
  3191  00FDA4  25                 	db	37
  3192  00FDA5  64                 	db	100	;'d'
  3193  00FDA6  20                 	db	32
  3194  00FDA7  25                 	db	37
  3195  00FDA8  32                 	db	50	;'2'
  3196  00FDA9  2E                 	db	46
  3197  00FDAA  34                 	db	52	;'4'
  3198  00FDAB  66                 	db	102	;'f'
  3199  00FDAC  2C                 	db	44
  3200  00FDAD  20                 	db	32
  3201  00FDAE  25                 	db	37
  3202  00FDAF  64                 	db	100	;'d'
  3203  00FDB0  20                 	db	32
  3204  00FDB1  20                 	db	32
  3205  00FDB2  54                 	db	84	;'T'
  3206  00FDB3  52                 	db	82	;'R'
  3207  00FDB4  49                 	db	73	;'I'
  3208  00FDB5  4D                 	db	77	;'M'
  3209  00FDB6  20                 	db	32
  3210  00FDB7  20                 	db	32
  3211  00FDB8  20                 	db	32
  3212  00FDB9  00                 	db	0
  3213  00FDBA                     STR_52:
  3214                           
  3215                           ; BSR set to: 57
  3216  00FDBA  20                 	db	32
  3217  00FDBB  25                 	db	37
  3218  00FDBC  64                 	db	100	;'d'
  3219  00FDBD  20                 	db	32
  3220  00FDBE  25                 	db	37
  3221  00FDBF  64                 	db	100	;'d'
  3222  00FDC0  20                 	db	32
  3223  00FDC1  20                 	db	32
  3224  00FDC2  20                 	db	32
  3225  00FDC3  20                 	db	32
  3226  00FDC4  20                 	db	32
  3227  00FDC5  20                 	db	32
  3228  00FDC6  20                 	db	32
  3229  00FDC7  20                 	db	32
  3230  00FDC8  20                 	db	32
  3231  00FDC9  20                 	db	32
  3232  00FDCA  20                 	db	32
  3233  00FDCB  20                 	db	32
  3234  00FDCC  20                 	db	32
  3235  00FDCD  20                 	db	32
  3236  00FDCE  00                 	db	0
  3237  00FDCF                     STR_47:
  3238                           
  3239                           ; BSR set to: 57
  3240  00FDCF  53                 	db	83	;'S'
  3241  00FDD0  65                 	db	101	;'e'
  3242  00FDD1  6E                 	db	110	;'n'
  3243  00FDD2  73                 	db	115	;'s'
  3244  00FDD3  6F                 	db	111	;'o'
  3245  00FDD4  72                 	db	114	;'r'
  3246  00FDD5  20                 	db	32
  3247  00FDD6  20                 	db	32
  3248  00FDD7  20                 	db	32
  3249  00FDD8  20                 	db	32
  3250  00FDD9  20                 	db	32
  3251  00FDDA  20                 	db	32
  3252  00FDDB  20                 	db	32
  3253  00FDDC  20                 	db	32
  3254  00FDDD  20                 	db	32
  3255  00FDDE  20                 	db	32
  3256  00FDDF  20                 	db	32
  3257  00FDE0  20                 	db	32
  3258  00FDE1  20                 	db	32
  3259  00FDE2  20                 	db	32
  3260  00FDE3  00                 	db	0
  3261  00FDE4                     STR_55:
  3262                           
  3263                           ; BSR set to: 57
  3264  00FDE4  20                 	db	32
  3265  00FDE5  25                 	db	37
  3266  00FDE6  6C                 	db	108	;'l'
  3267  00FDE7  64                 	db	100	;'d'
  3268  00FDE8  20                 	db	32
  3269  00FDE9  25                 	db	37
  3270  00FDEA  6C                 	db	108	;'l'
  3271  00FDEB  64                 	db	100	;'d'
  3272  00FDEC  20                 	db	32
  3273  00FDED  20                 	db	32
  3274  00FDEE  20                 	db	32
  3275  00FDEF  20                 	db	32
  3276  00FDF0  20                 	db	32
  3277  00FDF1  20                 	db	32
  3278  00FDF2  20                 	db	32
  3279  00FDF3  20                 	db	32
  3280  00FDF4  20                 	db	32
  3281  00FDF5  20                 	db	32
  3282  00FDF6  20                 	db	32
  3283  00FDF7  20                 	db	32
  3284  00FDF8  00                 	db	0
  3285  00FDF9                     STR_10:
  3286                           
  3287                           ; BSR set to: 57
  3288  00FDF9  42                 	db	66	;'B'
  3289  00FDFA  56                 	db	86	;'V'
  3290  00FDFB  20                 	db	32
  3291  00FDFC  25                 	db	37
  3292  00FDFD  32                 	db	50	;'2'
  3293  00FDFE  2E                 	db	46
  3294  00FDFF  34                 	db	52	;'4'
  3295  00FE00  66                 	db	102	;'f'
  3296  00FE01  20                 	db	32
  3297  00FE02  20                 	db	32
  3298  00FE03  20                 	db	32
  3299  00FE04  20                 	db	32
  3300  00FE05  20                 	db	32
  3301  00FE06  20                 	db	32
  3302  00FE07  20                 	db	32
  3303  00FE08  20                 	db	32
  3304  00FE09  20                 	db	32
  3305  00FE0A  20                 	db	32
  3306  00FE0B  20                 	db	32
  3307  00FE0C  20                 	db	32
  3308  00FE0D  00                 	db	0
  3309  00FE0E                     STR_4:
  3310                           
  3311                           ; BSR set to: 57
  3312  00FE0E  20                 	db	32
  3313  00FE0F  4E                 	db	78	;'N'
  3314  00FE10  53                 	db	83	;'S'
  3315  00FE11  41                 	db	65	;'A'
  3316  00FE12  53                 	db	83	;'S'
  3317  00FE13  50                 	db	80	;'P'
  3318  00FE14  4F                 	db	79	;'O'
  3319  00FE15  4F                 	db	79	;'O'
  3320  00FE16  4B                 	db	75	;'K'
  3321  00FE17  20                 	db	32
  3322  00FE18  20                 	db	32
  3323  00FE19  20                 	db	32
  3324  00FE1A  20                 	db	32
  3325  00FE1B  20                 	db	32
  3326  00FE1C  20                 	db	32
  3327  00FE1D  20                 	db	32
  3328  00FE1E  20                 	db	32
  3329  00FE1F  20                 	db	32
  3330  00FE20  20                 	db	32
  3331  00FE21  20                 	db	32
  3332  00FE22  00                 	db	0
  3333  00FE23                     STR_15:
  3334                           
  3335                           ; BSR set to: 57
  3336  00FE23  42                 	db	66	;'B'
  3337  00FE24  61                 	db	97	;'a'
  3338  00FE25  74                 	db	116	;'t'
  3339  00FE26  74                 	db	116	;'t'
  3340  00FE27  65                 	db	101	;'e'
  3341  00FE28  72                 	db	114	;'r'
  3342  00FE29  79                 	db	121	;'y'
  3343  00FE2A  20                 	db	32
  3344  00FE2B  45                 	db	69	;'E'
  3345  00FE2C  53                 	db	83	;'S'
  3346  00FE2D  52                 	db	82	;'R'
  3347  00FE2E  20                 	db	32
  3348  00FE2F  20                 	db	32
  3349  00FE30  20                 	db	32
  3350  00FE31  20                 	db	32
  3351  00FE32  20                 	db	32
  3352  00FE33  20                 	db	32
  3353  00FE34  20                 	db	32
  3354  00FE35  20                 	db	32
  3355  00FE36  20                 	db	32
  3356  00FE37  00                 	db	0
  3357  00FE38                     STR_16:
  3358                           
  3359                           ; BSR set to: 57
  3360  00FE38  43                 	db	67	;'C'
  3361  00FE39  61                 	db	97	;'a'
  3362  00FE3A  6C                 	db	108	;'l'
  3363  00FE3B  63                 	db	99	;'c'
  3364  00FE3C  75                 	db	117	;'u'
  3365  00FE3D  6C                 	db	108	;'l'
  3366  00FE3E  61                 	db	97	;'a'
  3367  00FE3F  74                 	db	116	;'t'
  3368  00FE40  69                 	db	105	;'i'
  3369  00FE41  6F                 	db	111	;'o'
  3370  00FE42  6E                 	db	110	;'n'
  3371  00FE43  20                 	db	32
  3372  00FE44  20                 	db	32
  3373  00FE45  20                 	db	32
  3374  00FE46  20                 	db	32
  3375  00FE47  20                 	db	32
  3376  00FE48  20                 	db	32
  3377  00FE49  20                 	db	32
  3378  00FE4A  20                 	db	32
  3379  00FE4B  20                 	db	32
  3380  00FE4C  00                 	db	0
  3381  00FE4D                     STR_48:
  3382                           
  3383                           ; BSR set to: 57
  3384  00FE4D  43                 	db	67	;'C'
  3385  00FE4E  61                 	db	97	;'a'
  3386  00FE4F  6C                 	db	108	;'l'
  3387  00FE50  69                 	db	105	;'i'
  3388  00FE51  62                 	db	98	;'b'
  3389  00FE52  72                 	db	114	;'r'
  3390  00FE53  61                 	db	97	;'a'
  3391  00FE54  74                 	db	116	;'t'
  3392  00FE55  69                 	db	105	;'i'
  3393  00FE56  6F                 	db	111	;'o'
  3394  00FE57  6E                 	db	110	;'n'
  3395  00FE58  20                 	db	32
  3396  00FE59  20                 	db	32
  3397  00FE5A  20                 	db	32
  3398  00FE5B  20                 	db	32
  3399  00FE5C  20                 	db	32
  3400  00FE5D  20                 	db	32
  3401  00FE5E  20                 	db	32
  3402  00FE5F  20                 	db	32
  3403  00FE60  20                 	db	32
  3404  00FE61  00                 	db	0
  3405  00FE62                     STR_2:
  3406                           
  3407                           ; BSR set to: 57
  3408  00FE62  20                 	db	32
  3409  00FE63  56                 	db	86	;'V'
  3410  00FE64  65                 	db	101	;'e'
  3411  00FE65  72                 	db	114	;'r'
  3412  00FE66  73                 	db	115	;'s'
  3413  00FE67  69                 	db	105	;'i'
  3414  00FE68  6F                 	db	111	;'o'
  3415  00FE69  6E                 	db	110	;'n'
  3416  00FE6A  20                 	db	32
  3417  00FE6B  25                 	db	37
  3418  00FE6C  73                 	db	115	;'s'
  3419  00FE6D  20                 	db	32
  3420  00FE6E  20                 	db	32
  3421  00FE6F  20                 	db	32
  3422  00FE70  20                 	db	32
  3423  00FE71  20                 	db	32
  3424  00FE72  20                 	db	32
  3425  00FE73  20                 	db	32
  3426  00FE74  20                 	db	32
  3427  00FE75  20                 	db	32
  3428  00FE76  00                 	db	0
  3429  00FE77                     STR_59:
  3430                           
  3431                           ; BSR set to: 57
  3432  00FE77  4F                 	db	79	;'O'
  3433  00FE78  75                 	db	117	;'u'
  3434  00FE79  74                 	db	116	;'t'
  3435  00FE7A  20                 	db	32
  3436  00FE7B  4F                 	db	79	;'O'
  3437  00FE7C  66                 	db	102	;'f'
  3438  00FE7D  20                 	db	32
  3439  00FE7E  52                 	db	82	;'R'
  3440  00FE7F  61                 	db	97	;'a'
  3441  00FE80  6E                 	db	110	;'n'
  3442  00FE81  67                 	db	103	;'g'
  3443  00FE82  65                 	db	101	;'e'
  3444  00FE83  20                 	db	32
  3445  00FE84  20                 	db	32
  3446  00FE85  20                 	db	32
  3447  00FE86  20                 	db	32
  3448  00FE87  20                 	db	32
  3449  00FE88  20                 	db	32
  3450  00FE89  20                 	db	32
  3451  00FE8A  20                 	db	32
  3452  00FE8B  00                 	db	0
  3453  00FE8C                     STR_56:
  3454                           
  3455                           ; BSR set to: 57
  3456  00FE8C  5A                 	db	90	;'Z'
  3457  00FE8D  65                 	db	101	;'e'
  3458  00FE8E  72                 	db	114	;'r'
  3459  00FE8F  6F                 	db	111	;'o'
  3460  00FE90  20                 	db	32
  3461  00FE91  43                 	db	67	;'C'
  3462  00FE92  61                 	db	97	;'a'
  3463  00FE93  6C                 	db	108	;'l'
  3464  00FE94  20                 	db	32
  3465  00FE95  53                 	db	83	;'S'
  3466  00FE96  65                 	db	101	;'e'
  3467  00FE97  74                 	db	116	;'t'
  3468  00FE98  20                 	db	32
  3469  00FE99  20                 	db	32
  3470  00FE9A  20                 	db	32
  3471  00FE9B  20                 	db	32
  3472  00FE9C  20                 	db	32
  3473  00FE9D  20                 	db	32
  3474  00FE9E  20                 	db	32
  3475  00FE9F  20                 	db	32
  3476  00FEA0  00                 	db	0
  3477  00FEA1                     STR_1:
  3478                           
  3479                           ; BSR set to: 57
  3480  00FEA1  20                 	db	32
  3481  00FEA2  4D                 	db	77	;'M'
  3482  00FEA3  42                 	db	66	;'B'
  3483  00FEA4  4D                 	db	77	;'M'
  3484  00FEA5  43                 	db	67	;'C'
  3485  00FEA6  20                 	db	32
  3486  00FEA7  53                 	db	83	;'S'
  3487  00FEA8  4F                 	db	79	;'O'
  3488  00FEA9  4C                 	db	76	;'L'
  3489  00FEAA  41                 	db	65	;'A'
  3490  00FEAB  52                 	db	82	;'R'
  3491  00FEAC  4D                 	db	77	;'M'
  3492  00FEAD  4F                 	db	79	;'O'
  3493  00FEAE  4E                 	db	78	;'N'
  3494  00FEAF  20                 	db	32
  3495  00FEB0  20                 	db	32
  3496  00FEB1  20                 	db	32
  3497  00FEB2  20                 	db	32
  3498  00FEB3  20                 	db	32
  3499  00FEB4  20                 	db	32
  3500  00FEB5  00                 	db	0
  3501  00FEB6                     STR_46:
  3502                           
  3503                           ; BSR set to: 57
  3504  00FEB6  50                 	db	80	;'P'
  3505  00FEB7  56                 	db	86	;'V'
  3506  00FEB8  20                 	db	32
  3507  00FEB9  61                 	db	97	;'a'
  3508  00FEBA  6E                 	db	110	;'n'
  3509  00FEBB  64                 	db	100	;'d'
  3510  00FEBC  20                 	db	32
  3511  00FEBD  42                 	db	66	;'B'
  3512  00FEBE  41                 	db	65	;'A'
  3513  00FEBF  54                 	db	84	;'T'
  3514  00FEC0  54                 	db	84	;'T'
  3515  00FEC1  45                 	db	69	;'E'
  3516  00FEC2  52                 	db	82	;'R'
  3517  00FEC3  59                 	db	89	;'Y'
  3518  00FEC4  20                 	db	32
  3519  00FEC5  20                 	db	32
  3520  00FEC6  20                 	db	32
  3521  00FEC7  20                 	db	32
  3522  00FEC8  20                 	db	32
  3523  00FEC9  20                 	db	32
  3524  00FECA  00                 	db	0
  3525  00FECB                     STR_18:
  3526                           
  3527                           ; BSR set to: 57
  3528  00FECB  43                 	db	67	;'C'
  3529  00FECC  68                 	db	104	;'h'
  3530  00FECD  65                 	db	101	;'e'
  3531  00FECE  63                 	db	99	;'c'
  3532  00FECF  6B                 	db	107	;'k'
  3533  00FED0  69                 	db	105	;'i'
  3534  00FED1  6E                 	db	110	;'n'
  3535  00FED2  67                 	db	103	;'g'
  3536  00FED3  20                 	db	32
  3537  00FED4  25                 	db	37
  3538  00FED5  63                 	db	99	;'c'
  3539  00FED6  20                 	db	32
  3540  00FED7  25                 	db	37
  3541  00FED8  63                 	db	99	;'c'
  3542  00FED9  20                 	db	32
  3543  00FEDA  20                 	db	32
  3544  00FEDB  20                 	db	32
  3545  00FEDC  20                 	db	32
  3546  00FEDD  20                 	db	32
  3547  00FEDE  20                 	db	32
  3548  00FEDF  00                 	db	0
  3549  00FEE0                     STR_51:
  3550                           
  3551                           ; BSR set to: 57
  3552  00FEE0  53                 	db	83	;'S'
  3553  00FEE1  65                 	db	101	;'e'
  3554  00FEE2  6E                 	db	110	;'n'
  3555  00FEE3  73                 	db	115	;'s'
  3556  00FEE4  6F                 	db	111	;'o'
  3557  00FEE5  72                 	db	114	;'r'
  3558  00FEE6  20                 	db	32
  3559  00FEE7  52                 	db	82	;'R'
  3560  00FEE8  65                 	db	101	;'e'
  3561  00FEE9  61                 	db	97	;'a'
  3562  00FEEA  64                 	db	100	;'d'
  3563  00FEEB  69                 	db	105	;'i'
  3564  00FEEC  6E                 	db	110	;'n'
  3565  00FEED  67                 	db	103	;'g'
  3566  00FEEE  73                 	db	115	;'s'
  3567  00FEEF  20                 	db	32
  3568  00FEF0  20                 	db	32
  3569  00FEF1  20                 	db	32
  3570  00FEF2  20                 	db	32
  3571  00FEF3  20                 	db	32
  3572  00FEF4  00                 	db	0
  3573  00FEF5                     STR_8:
  3574                           
  3575                           ; BSR set to: 57
  3576  00FEF5  52                 	db	82	;'R'
  3577  00FEF6  65                 	db	101	;'e'
  3578  00FEF7  61                 	db	97	;'a'
  3579  00FEF8  64                 	db	100	;'d'
  3580  00FEF9  20                 	db	32
  3581  00FEFA  45                 	db	69	;'E'
  3582  00FEFB  45                 	db	69	;'E'
  3583  00FEFC  50                 	db	80	;'P'
  3584  00FEFD  52                 	db	82	;'R'
  3585  00FEFE  4F                 	db	79	;'O'
  3586  00FEFF  4D                 	db	77	;'M'
  3587  00FF00  20                 	db	32
  3588  00FF01  44                 	db	68	;'D'
  3589  00FF02  41                 	db	65	;'A'
  3590  00FF03  54                 	db	84	;'T'
  3591  00FF04  41                 	db	65	;'A'
  3592  00FF05  20                 	db	32
  3593  00FF06  20                 	db	32
  3594  00FF07  20                 	db	32
  3595  00FF08  20                 	db	32
  3596  00FF09  00                 	db	0
  3597  00FF0A                     STR_17:
  3598                           
  3599                           ; BSR set to: 57
  3600  00FF0A  43                 	db	67	;'C'
  3601  00FF0B  68                 	db	104	;'h'
  3602  00FF0C  65                 	db	101	;'e'
  3603  00FF0D  63                 	db	99	;'c'
  3604  00FF0E  6B                 	db	107	;'k'
  3605  00FF0F  20                 	db	32
  3606  00FF10  33                 	db	51	;'3'
  3607  00FF11  30                 	db	48	;'0'
  3608  00FF12  20                 	db	32
  3609  00FF13  73                 	db	115	;'s'
  3610  00FF14  65                 	db	101	;'e'
  3611  00FF15  63                 	db	99	;'c'
  3612  00FF16  6F                 	db	111	;'o'
  3613  00FF17  6E                 	db	110	;'n'
  3614  00FF18  64                 	db	100	;'d'
  3615  00FF19  73                 	db	115	;'s'
  3616  00FF1A  20                 	db	32
  3617  00FF1B  20                 	db	32
  3618  00FF1C  20                 	db	32
  3619  00FF1D  20                 	db	32
  3620  00FF1E  00                 	db	0
  3621  00FF1F                     STR_53:
  3622                           
  3623                           ; BSR set to: 57
  3624  00FF1F  53                 	db	83	;'S'
  3625  00FF20  74                 	db	116	;'t'
  3626  00FF21  61                 	db	97	;'a'
  3627  00FF22  62                 	db	98	;'b'
  3628  00FF23  69                 	db	105	;'i'
  3629  00FF24  6C                 	db	108	;'l'
  3630  00FF25  69                 	db	105	;'i'
  3631  00FF26  74                 	db	116	;'t'
  3632  00FF27  79                 	db	121	;'y'
  3633  00FF28  20                 	db	32
  3634  00FF29  63                 	db	99	;'c'
  3635  00FF2A  6C                 	db	108	;'l'
  3636  00FF2B  6F                 	db	111	;'o'
  3637  00FF2C  63                 	db	99	;'c'
  3638  00FF2D  6B                 	db	107	;'k'
  3639  00FF2E  20                 	db	32
  3640  00FF2F  25                 	db	37
  3641  00FF30  64                 	db	100	;'d'
  3642  00FF31  20                 	db	32
  3643  00FF32  20                 	db	32
  3644  00FF33  00                 	db	0
  3645  00FF34                     STR_9:
  3646                           
  3647                           ; BSR set to: 57
  3648  00FF34  49                 	db	73	;'I'
  3649  00FF35  6E                 	db	110	;'n'
  3650  00FF36  76                 	db	118	;'v'
  3651  00FF37  61                 	db	97	;'a'
  3652  00FF38  6C                 	db	108	;'l'
  3653  00FF39  69                 	db	105	;'i'
  3654  00FF3A  64                 	db	100	;'d'
  3655  00FF3B  20                 	db	32
  3656  00FF3C  45                 	db	69	;'E'
  3657  00FF3D  45                 	db	69	;'E'
  3658  00FF3E  50                 	db	80	;'P'
  3659  00FF3F  52                 	db	82	;'R'
  3660  00FF40  4F                 	db	79	;'O'
  3661  00FF41  4D                 	db	77	;'M'
  3662  00FF42  20                 	db	32
  3663  00FF43  44                 	db	68	;'D'
  3664  00FF44  41                 	db	65	;'A'
  3665  00FF45  54                 	db	84	;'T'
  3666  00FF46  41                 	db	65	;'A'
  3667  00FF47  20                 	db	32
  3668  00FF48  00                 	db	0
  3669  00FF49                     STR_49:
  3670                           
  3671                           ; BSR set to: 57
  3672  00FF49  52                 	db	82	;'R'
  3673  00FF4A  65                 	db	101	;'e'
  3674  00FF4B  6C                 	db	108	;'l'
  3675  00FF4C  65                 	db	101	;'e'
  3676  00FF4D  61                 	db	97	;'a'
  3677  00FF4E  73                 	db	115	;'s'
  3678  00FF4F  65                 	db	101	;'e'
  3679  00FF50  20                 	db	32
  3680  00FF51  62                 	db	98	;'b'
  3681  00FF52  75                 	db	117	;'u'
  3682  00FF53  74                 	db	116	;'t'
  3683  00FF54  74                 	db	116	;'t'
  3684  00FF55  6F                 	db	111	;'o'
  3685  00FF56  6E                 	db	110	;'n'
  3686  00FF57  20                 	db	32
  3687  00FF58  25                 	db	37
  3688  00FF59  63                 	db	99	;'c'
  3689  00FF5A  20                 	db	32
  3690  00FF5B  20                 	db	32
  3691  00FF5C  00                 	db	0
  3692  00FF5D                     STR_64:
  3693                           
  3694                           ; BSR set to: 57
  3695  00FF5D  48                 	db	72	;'H'
  3696  00FF5E  45                 	db	69	;'E'
  3697  00FF5F  4C                 	db	76	;'L'
  3698  00FF60  50                 	db	80	;'P'
  3699  00FF61  20                 	db	32
  3700  00FF62  25                 	db	37
  3701  00FF63  73                 	db	115	;'s'
  3702  00FF64  20                 	db	32
  3703  00FF65  20                 	db	32
  3704  00FF66  20                 	db	32
  3705  00FF67  20                 	db	32
  3706  00FF68  20                 	db	32
  3707  00FF69  20                 	db	32
  3708  00FF6A  20                 	db	32
  3709  00FF6B  20                 	db	32
  3710  00FF6C  20                 	db	32
  3711  00FF6D  20                 	db	32
  3712  00FF6E  20                 	db	32
  3713  00FF6F  00                 	db	0
  3714  00FF70                     
  3715                           ; BSR set to: 57
  3716  00FF70  44                 	db	68	;'D'
  3717  00FF71  49                 	db	73	;'I'
  3718  00FF72  53                 	db	83	;'S'
  3719  00FF73  50                 	db	80	;'P'
  3720  00FF74  4C                 	db	76	;'L'
  3721  00FF75  41                 	db	65	;'A'
  3722  00FF76  59                 	db	89	;'Y'
  3723  00FF77  20                 	db	32
  3724  00FF78  25                 	db	37
  3725  00FF79  73                 	db	115	;'s'
  3726  00FF7A  20                 	db	32
  3727  00FF7B  20                 	db	32
  3728  00FF7C  20                 	db	32
  3729  00FF7D  20                 	db	32
  3730  00FF7E  20                 	db	32
  3731  00FF7F  20                 	db	32
  3732  00FF80  20                 	db	32
  3733  00FF81  20                 	db	32
  3734  00FF82  00                 	db	0
  3735  00FF83                     
  3736                           ; BSR set to: 57
  3737  00FF83  25                 	db	37
  3738  00FF84  64                 	db	100	;'d'
  3739  00FF85  20                 	db	32
  3740  00FF86  25                 	db	37
  3741  00FF87  32                 	db	50	;'2'
  3742  00FF88  2E                 	db	46
  3743  00FF89  34                 	db	52	;'4'
  3744  00FF8A  66                 	db	102	;'f'
  3745  00FF8B  2C                 	db	44
  3746  00FF8C  20                 	db	32
  3747  00FF8D  25                 	db	37
  3748  00FF8E  64                 	db	100	;'d'
  3749  00FF8F  20                 	db	32
  3750  00FF90  20                 	db	32
  3751  00FF91  20                 	db	32
  3752  00FF92  23                 	db	35
  3753  00FF93  00                 	db	0
  3754  00FF94                     STR_22:
  3755                           
  3756                           ; BSR set to: 57
  3757  00FF94  25                 	db	37
  3758  00FF95  64                 	db	100	;'d'
  3759  00FF96  20                 	db	32
  3760  00FF97  25                 	db	37
  3761  00FF98  32                 	db	50	;'2'
  3762  00FF99  2E                 	db	46
  3763  00FF9A  34                 	db	52	;'4'
  3764  00FF9B  66                 	db	102	;'f'
  3765  00FF9C  20                 	db	32
  3766  00FF9D  20                 	db	32
  3767  00FF9E  20                 	db	32
  3768  00FF9F  25                 	db	37
  3769  00FFA0  64                 	db	100	;'d'
  3770  00FFA1  20                 	db	32
  3771  00FFA2  20                 	db	32
  3772  00FFA3  00                 	db	0
  3773  00FFA4                     STR_68:
  3774                           
  3775                           ; BSR set to: 57
  3776  00FFA4  76                 	db	118	;'v'
  3777  00FFA5  74                 	db	116	;'t'
  3778  00FFA6  65                 	db	101	;'e'
  3779  00FFA7  72                 	db	114	;'r'
  3780  00FFA8  6D                 	db	109	;'m'
  3781  00FFA9  20                 	db	32
  3782  00FFAA  25                 	db	37
  3783  00FFAB  78                 	db	120	;'x'
  3784  00FFAC  3A                 	db	58	;':'
  3785  00FFAD  25                 	db	37
  3786  00FFAE  78                 	db	120	;'x'
  3787  00FFAF  20                 	db	32
  3788  00FFB0  20                 	db	32
  3789  00FFB1  20                 	db	32
  3790  00FFB2  00                 	db	0
  3791  00FFB3                     STR_62:
  3792                           
  3793                           ; BSR set to: 57
  3794  00FFB3  46                 	db	70	;'F'
  3795  00FFB4  65                 	db	101	;'e'
  3796  00FFB5  62                 	db	98	;'b'
  3797  00FFB6  20                 	db	32
  3798  00FFB7  20                 	db	32
  3799  00FFB8  39                 	db	57	;'9'
  3800  00FFB9  20                 	db	32
  3801  00FFBA  32                 	db	50	;'2'
  3802  00FFBB  30                 	db	48	;'0'
  3803  00FFBC  32                 	db	50	;'2'
  3804  00FFBD  30                 	db	48	;'0'
  3805  00FFBE  00                 	db	0
  3806  00FFBF                     STR_66:
  3807                           
  3808                           ; BSR set to: 57
  3809  00FFBF  25                 	db	37
  3810  00FFC0  73                 	db	115	;'s'
  3811  00FFC1  20                 	db	32
  3812  00FFC2  20                 	db	32
  3813  00FFC3  20                 	db	32
  3814  00FFC4  20                 	db	32
  3815  00FFC5  20                 	db	32
  3816  00FFC6  20                 	db	32
  3817  00FFC7  20                 	db	32
  3818  00FFC8  00                 	db	0
  3819  00FFC9                     STR_63:
  3820                           
  3821                           ; BSR set to: 57
  3822  00FFC9  31                 	db	49	;'1'
  3823  00FFCA  37                 	db	55	;'7'
  3824  00FFCB  3A                 	db	58	;':'
  3825  00FFCC  32                 	db	50	;'2'
  3826  00FFCD  34                 	db	52	;'4'
  3827  00FFCE  3A                 	db	58	;':'
  3828  00FFCF  35                 	db	53	;'5'
  3829  00FFD0  31                 	db	49	;'1'
  3830  00FFD1  00                 	db	0
  3831  00FFD2                     STR_3:
  3832                           
  3833                           ; BSR set to: 57
  3834  00FFD2  31                 	db	49	;'1'
  3835  00FFD3  2E                 	db	46
  3836  00FFD4  31                 	db	49	;'1'
  3837  00FFD5  38                 	db	56	;'8'
  3838  00FFD6  00                 	db	0
  3839  00FFD7                     STR_82:
  3840                           
  3841                           ; BSR set to: 57
  3842  00FFD7  49                 	db	73	;'I'
  3843  00FFD8  4E                 	db	78	;'N'
  3844  00FFD9  46                 	db	70	;'F'
  3845  00FFDA  00                 	db	0
  3846  00FFDB                     STR_86:
  3847                           
  3848                           ; BSR set to: 57
  3849  00FFDB  4E                 	db	78	;'N'
  3850  00FFDC  41                 	db	65	;'A'
  3851  00FFDD  4E                 	db	78	;'N'
  3852  00FFDE  00                 	db	0
  3853  00FFDF                     STR_83:
  3854                           
  3855                           ; BSR set to: 57
  3856  00FFDF  69                 	db	105	;'i'
  3857  00FFE0  6E                 	db	110	;'n'
  3858  00FFE1  66                 	db	102	;'f'
  3859  00FFE2  00                 	db	0
  3860  00FFE3                     STR_87:
  3861                           
  3862                           ; BSR set to: 57
  3863  00FFE3  6E                 	db	110	;'n'
  3864  00FFE4  61                 	db	97	;'a'
  3865  00FFE5  6E                 	db	110	;'n'
  3866  00FFE6  00                 	db	0
  3867  00FFE7                     STR_113:
  3868                           
  3869                           ; BSR set to: 57
  3870  00FFE7  6C                 	db	108	;'l'
  3871  00FFE8  58                 	db	88	;'X'
  3872  00FFE9  00                 	db	0
  3873  00FFEA                     STR_90:
  3874                           
  3875                           ; BSR set to: 57
  3876  00FFEA  6C                 	db	108	;'l'
  3877  00FFEB  64                 	db	100	;'d'
  3878  00FFEC  00                 	db	0
  3879  00FFED                     STR_99:
  3880                           
  3881                           ; BSR set to: 57
  3882  00FFED  6C                 	db	108	;'l'
  3883  00FFEE  66                 	db	102	;'f'
  3884  00FFEF  00                 	db	0
  3885  00FFF0                     STR_94:
  3886                           
  3887                           ; BSR set to: 57
  3888  00FFF0  6C                 	db	108	;'l'
  3889  00FFF1  69                 	db	105	;'i'
  3890  00FFF2  00                 	db	0
  3891  00FFF3                     STR_104:
  3892                           
  3893                           ; BSR set to: 57
  3894  00FFF3  6C                 	db	108	;'l'
  3895  00FFF4  75                 	db	117	;'u'
  3896  00FFF5  00                 	db	0
  3897  00FFF6                     STR_109:
  3898                           
  3899                           ; BSR set to: 57
  3900  00FFF6  6C                 	db	108	;'l'
  3901  00FFF7  78                 	db	120	;'x'
  3902  00FFF8  00                 	db	0
  3903  00FFF9                     STR_61:
  3904                           
  3905                           ; BSR set to: 57
  3906  00FFF9  25                 	db	37
  3907  00FFFA  63                 	db	99	;'c'
  3908  00FFFB  00                 	db	0
  3909  00FFFC                     STR_60:
  3910                           
  3911                           ; BSR set to: 57
  3912  00FFFC  25                 	db	37
  3913  00FFFD  73                 	db	115	;'s'
  3914  00FFFE  00                 	db	0
  3915  0000                     
  3916                           ; #config settings
  3917  00FFFF  00                 	db	0	; dummy byte at the end
  3918  0000                     
  3919                           	psect	cinit
  3920  01AC56                     __pcinit:
  3921                           	opt callstack 0
  3922  01AC56                     start_initialization:
  3923                           	opt callstack 0
  3924  01AC56                     __initialization:
  3925                           	opt callstack 0
  3926                           
  3927                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3928                           ; load TBLPTR registers with __pidataBIGRAM
  3929  01AC56  0EE2               	movlw	low __pidataBIGRAM
  3930  01AC58  6EF6               	movwf	tblptrl,c
  3931  01AC5A  0E70               	movlw	high __pidataBIGRAM
  3932  01AC5C  6EF7               	movwf	tblptrh,c
  3933  01AC5E  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3934  01AC60  6EF8               	movwf	tblptru,c
  3935  01AC62  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  3936  01AC66  EE20 F32B          	lfsr	2,811
  3937  01AC6A                     copy_data0:
  3938  01AC6A  0009               	tblrd		*+
  3939  01AC6C  006F FFD7 FFEE     	movff	tablat,postinc0
  3940  01AC72  50DD               	movf	postdec2,w,c
  3941  01AC74  50D9               	movf	fsr2l,w,c
  3942  01AC76  E1F9               	bnz	copy_data0
  3943  01AC78  50DA               	movf	fsr2h,w,c
  3944  01AC7A  E1F7               	bnz	copy_data0
  3945                           
  3946                           ; Initialize objects allocated to BANK1 (208 bytes)
  3947                           ; load TBLPTR registers with __pidataBANK1
  3948  01AC7C  0EE2               	movlw	low __pidataBANK1
  3949  01AC7E  6EF6               	movwf	tblptrl,c
  3950  01AC80  0EAF               	movlw	high __pidataBANK1
  3951  01AC82  6EF7               	movwf	tblptrh,c
  3952  01AC84  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3953  01AC86  6EF8               	movwf	tblptru,c
  3954  01AC88  EE00  F100         	lfsr	0,__pdataBANK1
  3955  01AC8C  EE20 F0D0          	lfsr	2,208
  3956  01AC90                     copy_data1:
  3957  01AC90  0009               	tblrd		*+
  3958  01AC92  006F FFD7 FFEE     	movff	tablat,postinc0
  3959  01AC98  50DD               	movf	postdec2,w,c
  3960  01AC9A  50D9               	movf	fsr2l,w,c
  3961  01AC9C  E1F9               	bnz	copy_data1
  3962                           
  3963                           ; Initialize objects allocated to BANK0 (57 bytes)
  3964                           ; load TBLPTR registers with __pidataBANK0
  3965  01AC9E  0EAC               	movlw	low __pidataBANK0
  3966  01ACA0  6EF6               	movwf	tblptrl,c
  3967  01ACA2  0EC9               	movlw	high __pidataBANK0
  3968  01ACA4  6EF7               	movwf	tblptrh,c
  3969  01ACA6  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3970  01ACA8  6EF8               	movwf	tblptru,c
  3971  01ACAA  EE00  F0AE         	lfsr	0,__pdataBANK0
  3972  01ACAE  EE20 F039          	lfsr	2,57
  3973  01ACB2                     copy_data2:
  3974  01ACB2  0009               	tblrd		*+
  3975  01ACB4  006F FFD7 FFEE     	movff	tablat,postinc0
  3976  01ACBA  50DD               	movf	postdec2,w,c
  3977  01ACBC  50D9               	movf	fsr2l,w,c
  3978  01ACBE  E1F9               	bnz	copy_data2
  3979                           
  3980                           ; Clear objects allocated to BIGRAM (482 bytes)
  3981  01ACC0  EE02  F12A         	lfsr	0,__pbssBIGRAM
  3982  01ACC4  EE20 F1E2          	lfsr	2,482
  3983  01ACC8                     clear_0:
  3984  01ACC8  6AEE               	clrf	postinc0,c
  3985  01ACCA  50DD               	movf	postdec2,w,c
  3986  01ACCC  50D9               	movf	fsr2l,w,c
  3987  01ACCE  E1FC               	bnz	clear_0
  3988  01ACD0  50DA               	movf	fsr2h,w,c
  3989  01ACD2  E1FA               	bnz	clear_0
  3990                           
  3991                           ; Clear objects allocated to BANK5 (255 bytes)
  3992  01ACD4  EE01  F100         	lfsr	0,__pbssBANK5
  3993  01ACD8  EE20 F0FF          	lfsr	2,255
  3994  01ACDC                     clear_1:
  3995  01ACDC  6AEE               	clrf	postinc0,c
  3996  01ACDE  50DD               	movf	postdec2,w,c
  3997  01ACE0  50D9               	movf	fsr2l,w,c
  3998  01ACE2  E1FC               	bnz	clear_1
  3999  01ACE4  50DA               	movf	fsr2h,w,c
  4000  01ACE6  E1FA               	bnz	clear_1
  4001                           
  4002                           ; Clear objects allocated to BANK4 (67 bytes)
  4003  01ACE8  EE01  F000         	lfsr	0,__pbssBANK4
  4004  01ACEC  0E43               	movlw	67
  4005  01ACEE                     clear_2:
  4006  01ACEE  6AEE               	clrf	postinc0,c
  4007  01ACF0  06E8               	decf	wreg,f,c
  4008  01ACF2  E1FD               	bnz	clear_2
  4009                           
  4010                           ; Clear objects allocated to BANK3 (215 bytes)
  4011  01ACF4  EE00  F300         	lfsr	0,__pbssBANK3
  4012  01ACF8  0ED7               	movlw	215
  4013  01ACFA                     clear_3:
  4014  01ACFA  6AEE               	clrf	postinc0,c
  4015  01ACFC  06E8               	decf	wreg,f,c
  4016  01ACFE  E1FD               	bnz	clear_3
  4017                           
  4018                           ; Clear objects allocated to BANK2 (212 bytes)
  4019  01AD00  EE00  F200         	lfsr	0,__pbssBANK2
  4020  01AD04  0ED4               	movlw	212
  4021  01AD06                     clear_4:
  4022  01AD06  6AEE               	clrf	postinc0,c
  4023  01AD08  06E8               	decf	wreg,f,c
  4024  01AD0A  E1FD               	bnz	clear_4
  4025                           
  4026                           ; Clear objects allocated to BANK1 (42 bytes)
  4027  01AD0C  EE00  F1D0         	lfsr	0,__pbssBANK1
  4028  01AD10  0E2A               	movlw	42
  4029  01AD12                     clear_5:
  4030  01AD12  6AEE               	clrf	postinc0,c
  4031  01AD14  06E8               	decf	wreg,f,c
  4032  01AD16  E1FD               	bnz	clear_5
  4033                           
  4034                           ; Clear objects allocated to BANK0 (78 bytes)
  4035  01AD18  EE00  F060         	lfsr	0,__pbssBANK0
  4036  01AD1C  0E4E               	movlw	78
  4037  01AD1E                     clear_6:
  4038  01AD1E  6AEE               	clrf	postinc0,c
  4039  01AD20  06E8               	decf	wreg,f,c
  4040  01AD22  E1FD               	bnz	clear_6
  4041                           
  4042                           ; Clear objects allocated to COMRAM (14 bytes)
  4043  01AD24  EE00  F03A         	lfsr	0,__pbssCOMRAM
  4044  01AD28  0E0E               	movlw	14
  4045  01AD2A                     clear_7:
  4046  01AD2A  6AEE               	clrf	postinc0,c
  4047  01AD2C  06E8               	decf	wreg,f,c
  4048  01AD2E  E1FD               	bnz	clear_7
  4049                           
  4050                           ;
  4051                           ; Setup IVTBASE
  4052                           ;
  4053  01AD30  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4054  01AD32  6ED5               	movwf	213,c
  4055  01AD34  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4056  01AD36  6ED6               	movwf	214,c
  4057  01AD38  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4058  01AD3A  6ED7               	movwf	215,c
  4059  01AD3C                     end_of_initialization:
  4060                           	opt callstack 0
  4061  01AD3C                     __end_of__initialization:
  4062                           	opt callstack 0
  4063  01AD3C  0100               	movlb	0
  4064  01AD3E  EF00  F080         	goto	_main	;jump to C main() function
  4065                           
  4066                           	psect	bssCOMRAM
  4067  00003A                     __pbssCOMRAM:
  4068                           	opt callstack 0
  4069  00003A                     _width:
  4070                           	opt callstack 0
  4071  00003A                     	ds	2
  4072  00003C                     _prec:
  4073                           	opt callstack 0
  4074  00003C                     	ds	2
  4075  00003E                     _flags:
  4076                           	opt callstack 0
  4077  00003E                     	ds	2
  4078  000040                     calc_bsoc@log_update_wait:
  4079                           	opt callstack 0
  4080  000040                     	ds	1
  4081  000041                     check_day_time@day_delay:
  4082                           	opt callstack 0
  4083  000041                     	ds	1
  4084  000042                     dac_spi_control@S0:
  4085                           	opt callstack 0
  4086  000042                     	ds	1
  4087  000043                     dac_spi_control@init:
  4088                           	opt callstack 0
  4089  000043                     	ds	1
  4090  000044                     _uart2RxHead:
  4091                           	opt callstack 0
  4092  000044                     	ds	1
  4093  000045                     _uart2TxBufferRemaining:
  4094                           	opt callstack 0
  4095  000045                     	ds	1
  4096  000046                     _uart2TxTail:
  4097                           	opt callstack 0
  4098  000046                     	ds	1
  4099  000047                     _uart1RxHead:
  4100                           	opt callstack 0
  4101  000047                     	ds	1
  4102                           
  4103                           	psect	bssBANK0
  4104  000060                     __pbssBANK0:
  4105                           	opt callstack 0
  4106  000060                     ___fpclassifyf@F463:
  4107                           	opt callstack 0
  4108  000060                     	ds	4
  4109  000064                     calc_ror_data@bcror:
  4110                           	opt callstack 0
  4111  000064                     	ds	4
  4112  000068                     calc_ror_data@bvror:
  4113                           	opt callstack 0
  4114  000068                     	ds	4
  4115  00006C                     calc_model_data@bcror:
  4116                           	opt callstack 0
  4117  00006C                     	ds	4
  4118  000070                     calc_model_data@bvror:
  4119                           	opt callstack 0
  4120  000070                     	ds	4
  4121  000074                     wdtdelay@dcount:
  4122                           	opt callstack 0
  4123  000074                     	ds	4
  4124  000078                     _TMR3_InterruptHandler:
  4125                           	opt callstack 0
  4126  000078                     	ds	3
  4127  00007B                     _TMR5_InterruptHandler:
  4128                           	opt callstack 0
  4129  00007B                     	ds	3
  4130  00007E                     _TMR6_InterruptHandler:
  4131                           	opt callstack 0
  4132  00007E                     	ds	3
  4133  000081                     _ADCC_ADTI_InterruptHandler:
  4134                           	opt callstack 0
  4135  000081                     	ds	3
  4136  000084                     _ADCC_ADI_InterruptHandler:
  4137                           	opt callstack 0
  4138  000084                     	ds	3
  4139  000087                     _UART1_RxInterruptHandler:
  4140                           	opt callstack 0
  4141  000087                     	ds	3
  4142  00008A                     _UART2_TxInterruptHandler:
  4143                           	opt callstack 0
  4144  00008A                     	ds	3
  4145  00008D                     _UART2_RxInterruptHandler:
  4146                           	opt callstack 0
  4147  00008D                     	ds	3
  4148  000090                     _INT1_InterruptHandler:
  4149                           	opt callstack 0
  4150  000090                     	ds	3
  4151  000093                     _INT0_InterruptHandler:
  4152                           	opt callstack 0
  4153  000093                     	ds	3
  4154  000096                     _nout:
  4155                           	opt callstack 0
  4156  000096                     	ds	2
  4157  000098                     TMR3_ISR@CountCallBack:
  4158                           	opt callstack 0
  4159  000098                     	ds	2
  4160  00009A                     _timer3ReloadVal:
  4161                           	opt callstack 0
  4162  00009A                     	ds	2
  4163  00009C                     TMR5_ISR@CountCallBack:
  4164                           	opt callstack 0
  4165  00009C                     	ds	2
  4166  00009E                     _timer5ReloadVal:
  4167                           	opt callstack 0
  4168  00009E                     	ds	2
  4169  0000A0                     esr_check@esr_state:
  4170                           	opt callstack 0
  4171  0000A0                     	ds	1
  4172  0000A1                     dac_spi_control@SB:
  4173                           	opt callstack 0
  4174  0000A1                     	ds	1
  4175  0000A2                     dac_spi_control@SC:
  4176                           	opt callstack 0
  4177  0000A2                     	ds	1
  4178  0000A3                     dac_spi_control@S2:
  4179                           	opt callstack 0
  4180  0000A3                     	ds	1
  4181  0000A4                     dac_spi_control@S1:
  4182                           	opt callstack 0
  4183  0000A4                     	ds	1
  4184  0000A5                     _mode_sw:
  4185                           	opt callstack 0
  4186  0000A5                     	ds	1
  4187  0000A6                     _uart2RxCount:
  4188                           	opt callstack 0
  4189  0000A6                     	ds	1
  4190  0000A7                     _uart2RxTail:
  4191                           	opt callstack 0
  4192  0000A7                     	ds	1
  4193  0000A8                     _uart2TxHead:
  4194                           	opt callstack 0
  4195  0000A8                     	ds	1
  4196  0000A9                     _uart1RxCount:
  4197                           	opt callstack 0
  4198  0000A9                     	ds	1
  4199  0000AA                     _uart1RxTail:
  4200                           	opt callstack 0
  4201  0000AA                     	ds	1
  4202  0000AB                     _crcObj:
  4203                           	opt callstack 0
  4204  0000AB                     	ds	3
  4205                           
  4206                           	psect	dataBANK0
  4207  0000AE                     __pdataBANK0:
  4208                           	opt callstack 0
  4209  0000AE                     _R:
  4210                           	opt callstack 0
  4211  0000AE                     	ds	57
  4212                           
  4213                           	psect	bssBANK1
  4214  0001D0                     __pbssBANK1:
  4215                           	opt callstack 0
  4216  0001D0                     _spi_link:
  4217                           	opt callstack 0
  4218  0001D0                     	ds	12
  4219  0001DC                     _uart1RxBuffer:
  4220                           	opt callstack 0
  4221  0001DC                     	ds	8
  4222  0001E4                     spinners@s:
  4223                           	opt callstack 0
  4224  0001E4                     	ds	6
  4225  0001EA                     floorf@F524:
  4226                           	opt callstack 0
  4227  0001EA                     	ds	4
  4228  0001EE                     fabsf@F463:
  4229                           	opt callstack 0
  4230  0001EE                     	ds	4
  4231  0001F2                     _utctime:
  4232                           	opt callstack 0
  4233  0001F2                     	ds	4
  4234  0001F6                     _P:
  4235                           	opt callstack 0
  4236  0001F6                     	ds	4
  4237                           
  4238                           	psect	dataBANK1
  4239  000100                     __pdataBANK1:
  4240                           	opt callstack 0
  4241  000100                     stoa@F1166:
  4242                           	opt callstack 0
  4243  000100                     	ds	7
  4244  000107                     _V:
  4245                           	opt callstack 0
  4246  000107                     	ds	192
  4247  0001C7                     _H:
  4248                           	opt callstack 0
  4249  0001C7                     	ds	9
  4250                           
  4251                           	psect	bssBANK2
  4252  000200                     __pbssBANK2:
  4253                           	opt callstack 0
  4254  000200                     _S:
  4255                           	opt callstack 0
  4256  000200                     	ds	41
  4257  000229                     _tickCount:
  4258                           	opt callstack 0
  4259  000229                     	ds	26
  4260  000243                     _dbuf:
  4261                           	opt callstack 0
  4262  000243                     	ds	80
  4263  000293                     _r_cal:
  4264                           	opt callstack 0
  4265  000293                     	ds	57
  4266  0002CC                     _seed:
  4267                           	opt callstack 0
  4268  0002CC                     	ds	8
  4269                           
  4270                           	psect	bssBANK3
  4271  000300                     __pbssBANK3:
  4272                           	opt callstack 0
  4273  000300                     lp_filter@smooth:
  4274                           	opt callstack 0
  4275  000300                     	ds	84
  4276  000354                     _uart2TxBuffer:
  4277                           	opt callstack 0
  4278  000354                     	ds	64
  4279  000394                     _ring_buf1:
  4280                           	opt callstack 0
  4281  000394                     	ds	67
  4282                           
  4283                           	psect	bssBANK4
  4284  000400                     __pbssBANK4:
  4285                           	opt callstack 0
  4286  000400                     _ring_buf2:
  4287                           	opt callstack 0
  4288  000400                     	ds	67
  4289                           
  4290                           	psect	bssBANK5
  4291  000500                     __pbssBANK5:
  4292                           	opt callstack 0
  4293  000500                     _uart2RxBuffer:
  4294                           	opt callstack 0
  4295  000500                     	ds	255
  4296                           
  4297                           	psect	bssBIGRAM
  4298  00092A                     __pbssBIGRAM:
  4299                           	opt callstack 0
  4300  00092A                     _D:
  4301                           	opt callstack 0
  4302  00092A                     	ds	482
  4303                           
  4304                           	psect	dataBIGRAM
  4305  0005FF                     __pdataBIGRAM:
  4306                           	opt callstack 0
  4307  0005FF                     _port_data:
  4308                           	opt callstack 0
  4309  0005FF                     	ds	512
  4310  0007FF                     _C:
  4311                           	opt callstack 0
  4312  0007FF                     	ds	299
  4313                           
  4314                           	psect	cstackBANK0
  4315  0000E7                     __pcstackBANK0:
  4316                           	opt callstack 0
  4317  0000E7                     ??_TMR3_ISR:
  4318                           
  4319                           ; 1 bytes @ 0x0
  4320  0000E7                     	ds	25
  4321                           
  4322                           	psect	cstackCOMRAM
  4323  000021                     __pcstackCOMRAM:
  4324                           	opt callstack 0
  4325  000021                     ??_ADCC_ThresholdISR:
  4326  000021                     
  4327                           ; 1 bytes @ 0x0
  4328  000021                     	ds	5
  4329  000026                     ??_TMR6_ISR:
  4330                           
  4331                           ; 1 bytes @ 0x5
  4332  000026                     	ds	1
  4333  000027                     ??_INT1_ISR:
  4334  000027                     
  4335                           ; 1 bytes @ 0x6
  4336  000027                     	ds	4
  4337  00002B                     ??_TMR5_ISR:
  4338                           
  4339                           ; 1 bytes @ 0xA
  4340  00002B                     	ds	15
  4341                           
  4342 ;;
  4343 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4344 ;;
  4345 ;; *************** function _main *****************
  4346 ;; Defined at:
  4347 ;;		line 189 in file "main.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;		None
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  esr_temp        4  [STACK] float 
  4352 ;;  i_esr           2  [STACK] unsigned short 
  4353 ;;  shape           1  [STACK] unsigned char 
  4354 ;;  inp_index       1  [STACK] unsigned char 
  4355 ;;  k               1  [STACK] unsigned char 
  4356 ;;  j               1  [STACK] unsigned char 
  4357 ;;  i               1  [STACK] unsigned char 
  4358 ;;  mode            1  [STACK] enum E17028
  4359 ;;  i_ror           1  [STACK] unsigned char 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1  [STACK] void 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4373 ;;Total ram usage:        0 bytes
  4374 ;; Hardware stack levels required when called:   29
  4375 ;; This function calls:
  4376 ;;		_SYSTEM_Initialize
  4377 ;;		_StartTimer
  4378 ;;		_TimerDone
  4379 ;;		_WaitMs
  4380 ;;		___fladd
  4381 ;;		___flge
  4382 ;;		___fltol
  4383 ;;		_calc_model_data
  4384 ;;		_calc_ror_data
  4385 ;;		_check_adc_scan
  4386 ;;		_check_enter_button
  4387 ;;		_check_help
  4388 ;;		_clear_adc_scan
  4389 ;;		_clear_hid_pflags
  4390 ;;		_conv_raw_result
  4391 ;;		_convert_adc_data
  4392 ;;		_current_sensor_cal
  4393 ;;		_eaDogM_WriteCommand
  4394 ;;		_esr_check
  4395 ;;		_fabsf
  4396 ;;		_get_raw_result
  4397 ;;		_get_switch
  4398 ;;		_get_vterm_ptr
  4399 ;;		_hid_display
  4400 ;;		_init_bsoc
  4401 ;;		_init_display
  4402 ;;		_init_port_dma
  4403 ;;		_lp_filter
  4404 ;;		_mode_lamp_dim
  4405 ;;		_read_cal_data
  4406 ;;		_set_dac
  4407 ;;		_set_dac_a
  4408 ;;		_set_dac_b
  4409 ;;		_set_display_info
  4410 ;;		_set_load_relay_one
  4411 ;;		_set_load_relay_two
  4412 ;;		_set_vterm
  4413 ;;		_spinners
  4414 ;;		_sprintf
  4415 ;;		_srand
  4416 ;;		_start_adc_scan
  4417 ;;		_start_switch_handler
  4418 ;;		_static_soc
  4419 ;;		_update_cal_data
  4420 ;;		_update_lcd
  4421 ;;		_wait_lcd_done
  4422 ;; This function is called by:
  4423 ;;		Startup code after reset
  4424 ;; This function uses a reentrant model
  4425 ;;
  4426                           
  4427                           	psect	text0
  4428  010000                     __ptext0:
  4429                           	opt callstack 0
  4430  010000                     _main:
  4431                           	opt callstack 0
  4432                           
  4433                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4434  010000  0E11               	movlw	17
  4435  010002  26E1               	addwf	fsr1l,f,c
  4436  010004  0E00               	movlw	0
  4437  010006  22E2               	addwfc	fsr1h,f,c
  4438                           
  4439                           ;main.c: 191:  UI_STATES mode;;main.c: 192:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4440                           ;stkvar	_inp_index @ sp[(-17)+11]
  4441                           
  4442                           ;incstack = 0
  4443  010008  0EFA               	movlw	-6
  4444  01000A  6AE3               	clrf	plusw1,c
  4445                           
  4446                           ;stkvar	_i @ sp[(-17)+14]
  4447  01000C  0EFD               	movlw	-3
  4448  01000E  6AE3               	clrf	plusw1,c
  4449                           
  4450                           ;stkvar	_j @ sp[(-17)+13]
  4451  010010  0EFC               	movlw	-4
  4452  010012  6AE3               	clrf	plusw1,c
  4453  010014  2AE3               	incf	plusw1,f,c
  4454                           
  4455                           ;stkvar	_k @ sp[(-17)+12]
  4456  010016  0EFB               	movlw	-5
  4457  010018  6AE3               	clrf	plusw1,c
  4458  01001A  82E3               	bsf	plusw1,1,c
  4459                           
  4460                           ;main.c: 195:  SYSTEM_Initialize();
  4461  01001C  EC6E  F0E2         	call	_SYSTEM_Initialize	;wreg free
  4462                           
  4463                           ; BSR set to: 60
  4464                           ;main.c: 198:  (INTCON0bits.GIEH = 1);
  4465  010020  8ED2               	bsf	210,7,c	;volatile
  4466                           
  4467                           ; BSR set to: 60
  4468                           ;main.c: 201:  (INTCON0bits.GIEL = 1);
  4469  010022  8CD2               	bsf	210,6,c	;volatile
  4470                           
  4471                           ; BSR set to: 60
  4472                           ;main.c: 203:  V.ui_state = UI_STATE_INIT;
  4473  010024  0101               	movlb	1	; () banked
  4474  010026  6B07               	clrf	_V& (0+255),b	;volatile
  4475                           
  4476                           ; BSR set to: 1
  4477                           ;main.c: 208:  WaitMs(300);
  4478  010028  0E2C               	movlw	44
  4479  01002A  6EE6               	movwf	postinc1,c
  4480  01002C  0E01               	movlw	1
  4481  01002E  6EE6               	movwf	postinc1,c
  4482  010030  EC2B  F0E5         	call	_WaitMs	;wreg free
  4483                           
  4484                           ;main.c: 209:  if (PORTBbits.RB0) {
  4485  010034  A0CB               	btfss	203,0,c	;volatile
  4486  010036  D004               	goto	l14373
  4487                           
  4488                           ;main.c: 210:   mode = UI_STATE_HOST;
  4489                           ;stkvar	_mode @ sp[(-17)+15]
  4490  010038  0EFE               	movlw	-2
  4491  01003A  6AE3               	clrf	plusw1,c
  4492  01003C  2AE3               	incf	plusw1,f,c
  4493                           
  4494                           ;main.c: 211:  } else {
  4495  01003E  D004               	goto	l14375
  4496  010040                     l14373:
  4497                           
  4498                           ;main.c: 212:   mode = UI_STATE_LOG;
  4499                           ;stkvar	_mode @ sp[(-17)+15]
  4500  010040  0EFE               	movlw	-2
  4501  010042  6AE3               	clrf	plusw1,c
  4502  010044  80E3               	bsf	plusw1,0,c
  4503  010046  82E3               	bsf	plusw1,1,c	;indir
  4504  010048                     l14375:
  4505                           
  4506                           ;main.c: 215:  if (mode == UI_STATE_HOST) {
  4507                           ;stkvar	_mode @ sp[(-17)+15]
  4508  010048  0EFE               	movlw	-2
  4509  01004A  04E3               	decf	plusw1,w,c
  4510  01004C  A4D8               	btfss	status,2,c
  4511  01004E  D007               	goto	l1344
  4512                           
  4513                           ;main.c: 216:   do { LATDbits.LATD0 = 1; } while(0);
  4514  010050  80BD               	bsf	189,0,c	;volatile
  4515                           
  4516                           ;main.c: 217:   V.mode_pwm = 70;
  4517  010052  0E00               	movlw	0
  4518  010054  0101               	movlb	1	; () banked
  4519  010056  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4520  010058  0E46               	movlw	70
  4521  01005A  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4522                           
  4523                           ;main.c: 218:  } else {
  4524  01005C  D004               	goto	l14379
  4525  01005E                     l1344:
  4526  01005E  90BD               	bcf	189,0,c	;volatile
  4527                           
  4528                           ;main.c: 220:   V.mode_pwm = 0;
  4529  010060  0101               	movlb	1	; () banked
  4530  010062  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4531  010064  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4532  010066                     l14379:
  4533                           
  4534                           ; BSR set to: 1
  4535                           ;main.c: 222:  mode_lamp_dim(V.mode_pwm);
  4536  010066  0060  F673  FFE6   	movff	_V+149,postinc1
  4537  01006C  0060  F677  FFE6   	movff	_V+150,postinc1
  4538  010072  ECE7  F0E8         	call	_mode_lamp_dim	;wreg free
  4539  010076  D39B               	goto	l14527
  4540  010078                     l14381:
  4541                           
  4542                           ; BSR set to: 1
  4543                           ;main.c: 230:    init_port_dma();
  4544  010078  ECC7  F0E5         	call	_init_port_dma	;wreg free
  4545                           
  4546                           ; BSR set to: 59
  4547                           ;main.c: 232:    init_display();
  4548  01007C  ECA1  F0D6         	call	_init_display	;wreg free
  4549                           
  4550                           ; BSR set to: 61
  4551                           ;main.c: 233:    eaDogM_WriteCommand(0b00001100);
  4552  010080  0E0C               	movlw	12
  4553  010082  6EE6               	movwf	postinc1,c
  4554  010084  EC6F  F0E9         	call	_eaDogM_WriteCommand	;wreg free
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;main.c: 234:    set_dac();
  4558  010088  ECDB  F0D9         	call	_set_dac	;wreg free
  4559                           
  4560                           ;main.c: 238:    set_load_relay_one(1);
  4561  01008C  0E01               	movlw	1
  4562  01008E  6EE6               	movwf	postinc1,c
  4563  010090  EC4F  F0E9         	call	_set_load_relay_one	;wreg free
  4564                           
  4565                           ;main.c: 239:    set_load_relay_two(1);
  4566  010094  0E01               	movlw	1
  4567  010096  6EE6               	movwf	postinc1,c
  4568  010098  EC47  F0E9         	call	_set_load_relay_two	;wreg free
  4569                           
  4570                           ;main.c: 241:    V.ui_state = mode;
  4571                           ;stkvar	_mode @ sp[(-17)+15]
  4572  01009C  0EFE               	movlw	-2
  4573  01009E  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4574                           
  4575                           ;main.c: 242:    srand(1957);
  4576  0100A4  0EA5               	movlw	165
  4577  0100A6  6EE6               	movwf	postinc1,c
  4578  0100A8  0E07               	movlw	7
  4579  0100AA  6EE6               	movwf	postinc1,c
  4580  0100AC  EC46  F0E5         	call	_srand	;wreg free
  4581                           
  4582                           ; BSR set to: 2
  4583                           ;main.c: 243:    set_vterm(0);
  4584  0100B0  0E00               	movlw	0
  4585  0100B2  6EE6               	movwf	postinc1,c
  4586  0100B4  EC9F  F0E8         	call	_set_vterm	;wreg free
  4587                           
  4588                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4589  0100B8  0EA1               	movlw	low STR_1
  4590  0100BA  6EE6               	movwf	postinc1,c
  4591  0100BC  0EFE               	movlw	high STR_1
  4592  0100BE  6EE6               	movwf	postinc1,c
  4593  0100C0  0E00               	movlw	0
  4594  0100C2  6EE6               	movwf	postinc1,c
  4595  0100C4  0E00               	movlw	0
  4596  0100C6  6EE6               	movwf	postinc1,c
  4597  0100C8  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  4598  0100CC  0060  F007  FFE6   	movff	btemp,postinc1
  4599  0100D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4600  0100D8  0E04               	movlw	4
  4601  0100DA  6EE6               	movwf	postinc1,c
  4602  0100DC  ECAC  F0D4         	call	_sprintf	;wreg free
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.18");
  4606  0100E0  0ED2               	movlw	low STR_3
  4607  0100E2  6EE6               	movwf	postinc1,c
  4608  0100E4  0EFF               	movlw	high STR_3
  4609  0100E6  6EE6               	movwf	postinc1,c
  4610  0100E8  0E62               	movlw	low STR_2
  4611  0100EA  6EE6               	movwf	postinc1,c
  4612  0100EC  0EFE               	movlw	high STR_2
  4613  0100EE  6EE6               	movwf	postinc1,c
  4614  0100F0  0E00               	movlw	0
  4615  0100F2  6EE6               	movwf	postinc1,c
  4616  0100F4  0E01               	movlw	1
  4617  0100F6  6EE6               	movwf	postinc1,c
  4618  0100F8  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  4619  0100FC  0060  F007  FFE6   	movff	btemp,postinc1
  4620  010102  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4621  010108  0E06               	movlw	6
  4622  01010A  6EE6               	movwf	postinc1,c
  4623  01010C  ECAC  F0D4         	call	_sprintf	;wreg free
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4627  010110  0E0E               	movlw	low STR_4
  4628  010112  6EE6               	movwf	postinc1,c
  4629  010114  0EFE               	movlw	high STR_4
  4630  010116  6EE6               	movwf	postinc1,c
  4631  010118  0E00               	movlw	0
  4632  01011A  6EE6               	movwf	postinc1,c
  4633  01011C  0E02               	movlw	2
  4634  01011E  6EE6               	movwf	postinc1,c
  4635  010120  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  4636  010124  0060  F007  FFE6   	movff	btemp,postinc1
  4637  01012A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4638  010130  0E04               	movlw	4
  4639  010132  6EE6               	movwf	postinc1,c
  4640  010134  ECAC  F0D4         	call	_sprintf	;wreg free
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4644  010138  0E45               	movlw	low (STR_14+1)
  4645  01013A  6EE6               	movwf	postinc1,c
  4646  01013C  0EFC               	movlw	high (STR_14+1)
  4647  01013E  6EE6               	movwf	postinc1,c
  4648  010140  0E02               	movlw	2
  4649  010142  6EE6               	movwf	postinc1,c
  4650  010144  0E00               	movlw	0
  4651  010146  6EE6               	movwf	postinc1,c
  4652  010148  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  4653  01014C  0060  F007  FFE6   	movff	btemp,postinc1
  4654  010152  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4655  010158  0E04               	movlw	4
  4656  01015A  6EE6               	movwf	postinc1,c
  4657  01015C  ECAC  F0D4         	call	_sprintf	;wreg free
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4661  010160  0E45               	movlw	low (STR_14+1)
  4662  010162  6EE6               	movwf	postinc1,c
  4663  010164  0EFC               	movlw	high (STR_14+1)
  4664  010166  6EE6               	movwf	postinc1,c
  4665  010168  0E02               	movlw	2
  4666  01016A  6EE6               	movwf	postinc1,c
  4667  01016C  0E01               	movlw	1
  4668  01016E  6EE6               	movwf	postinc1,c
  4669  010170  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  4670  010174  0060  F007  FFE6   	movff	btemp,postinc1
  4671  01017A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4672  010180  0E04               	movlw	4
  4673  010182  6EE6               	movwf	postinc1,c
  4674  010184  ECAC  F0D4         	call	_sprintf	;wreg free
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4678  010188  0E45               	movlw	low (STR_14+1)
  4679  01018A  6EE6               	movwf	postinc1,c
  4680  01018C  0EFC               	movlw	high (STR_14+1)
  4681  01018E  6EE6               	movwf	postinc1,c
  4682  010190  0E02               	movlw	2
  4683  010192  6EE6               	movwf	postinc1,c
  4684  010194  0E02               	movlw	2
  4685  010196  6EE6               	movwf	postinc1,c
  4686  010198  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  4687  01019C  0060  F007  FFE6   	movff	btemp,postinc1
  4688  0101A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4689  0101A8  0E04               	movlw	4
  4690  0101AA  6EE6               	movwf	postinc1,c
  4691  0101AC  ECAC  F0D4         	call	_sprintf	;wreg free
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;main.c: 250:    update_lcd(0);
  4695  0101B0  0E00               	movlw	0
  4696  0101B2  6EE6               	movwf	postinc1,c
  4697  0101B4  EC24  F0D4         	call	_update_lcd	;wreg free
  4698                           
  4699                           ;main.c: 251:    WaitMs(1000);
  4700  0101B8  0EE8               	movlw	232
  4701  0101BA  6EE6               	movwf	postinc1,c
  4702  0101BC  0E03               	movlw	3
  4703  0101BE  6EE6               	movwf	postinc1,c
  4704  0101C0  EC2B  F0E5         	call	_WaitMs	;wreg free
  4705                           
  4706                           ;main.c: 252:    StartTimer(TMR_DISPLAY, 250);
  4707  0101C4  0EFA               	movlw	250
  4708  0101C6  6EE6               	movwf	postinc1,c
  4709  0101C8  0E00               	movlw	0
  4710  0101CA  6EE6               	movwf	postinc1,c
  4711  0101CC  0E0A               	movlw	10
  4712  0101CE  6EE6               	movwf	postinc1,c
  4713  0101D0  EC3A  F0E4         	call	_StartTimer	;wreg free
  4714                           
  4715                           ;main.c: 253:    StartTimer(TMR_ADC, 200);
  4716  0101D4  0EC8               	movlw	200
  4717  0101D6  6EE6               	movwf	postinc1,c
  4718  0101D8  0E00               	movlw	0
  4719  0101DA  6EE6               	movwf	postinc1,c
  4720  0101DC  0E01               	movlw	1
  4721  0101DE  6EE6               	movwf	postinc1,c
  4722  0101E0  EC3A  F0E4         	call	_StartTimer	;wreg free
  4723                           
  4724                           ;main.c: 254:    StartTimer(TMR_INFO, 3000);
  4725  0101E4  0EB8               	movlw	184
  4726  0101E6  6EE6               	movwf	postinc1,c
  4727  0101E8  0E0B               	movlw	11
  4728  0101EA  6EE6               	movwf	postinc1,c
  4729  0101EC  0E07               	movlw	7
  4730  0101EE  6EE6               	movwf	postinc1,c
  4731  0101F0  EC3A  F0E4         	call	_StartTimer	;wreg free
  4732                           
  4733                           ;main.c: 255:    StartTimer(TMR_FLIPPER, 1500);
  4734  0101F4  0EDC               	movlw	220
  4735  0101F6  6EE6               	movwf	postinc1,c
  4736  0101F8  0E05               	movlw	5
  4737  0101FA  6EE6               	movwf	postinc1,c
  4738  0101FC  0E0B               	movlw	11
  4739  0101FE  6EE6               	movwf	postinc1,c
  4740  010200  EC3A  F0E4         	call	_StartTimer	;wreg free
  4741                           
  4742                           ;main.c: 256:    StartTimer(TMR_HELPDIS, 3000);
  4743  010204  0EB8               	movlw	184
  4744  010206  6EE6               	movwf	postinc1,c
  4745  010208  0E0B               	movlw	11
  4746  01020A  6EE6               	movwf	postinc1,c
  4747  01020C  0E09               	movlw	9
  4748  01020E  6EE6               	movwf	postinc1,c
  4749  010210  EC3A  F0E4         	call	_StartTimer	;wreg free
  4750                           
  4751                           ;main.c: 258:    start_adc_scan();
  4752  010214  ECD1  F0E0         	call	_start_adc_scan	;wreg free
  4753                           
  4754                           ;main.c: 259:    start_switch_handler();
  4755  010218  EC61  F0E8         	call	_start_switch_handler	;wreg free
  4756                           
  4757                           ; BSR set to: 57
  4758                           ;main.c: 260:    WaitMs(1000);
  4759  01021C  0EE8               	movlw	232
  4760  01021E  6EE6               	movwf	postinc1,c
  4761  010220  0E03               	movlw	3
  4762  010222  6EE6               	movwf	postinc1,c
  4763  010224  EC2B  F0E5         	call	_WaitMs	;wreg free
  4764                           
  4765                           ;main.c: 265:    if (read_cal_data()) {
  4766  010228  EC0C  F0C8         	call	_read_cal_data	;wreg free
  4767  01022C  5001               	movf	btemp^0,w,c
  4768  01022E  B4D8               	btfsc	status,2,c
  4769  010230  D017               	goto	l14437
  4770                           
  4771                           ;main.c: 266:     update_cal_data();
  4772  010232  ECFF  F0E8         	call	_update_cal_data	;wreg free
  4773                           
  4774                           ;main.c: 267:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  4775  010236  0EF5               	movlw	low STR_8
  4776  010238  6EE6               	movwf	postinc1,c
  4777  01023A  0EFE               	movlw	high STR_8
  4778  01023C  6EE6               	movwf	postinc1,c
  4779  01023E  0E00               	movlw	0
  4780  010240  6EE6               	movwf	postinc1,c
  4781  010242  0E02               	movlw	2
  4782  010244  6EE6               	movwf	postinc1,c
  4783  010246  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  4784  01024A  0060  F007  FFE6   	movff	btemp,postinc1
  4785  010250  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4786  010256  0E04               	movlw	4
  4787  010258  6EE6               	movwf	postinc1,c
  4788  01025A  ECAC  F0D4         	call	_sprintf	;wreg free
  4789                           
  4790                           ;main.c: 268:    } else {
  4791  01025E  D014               	goto	l1350
  4792  010260                     l14437:
  4793                           
  4794                           ;main.c: 269:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  4795  010260  0E34               	movlw	low STR_9
  4796  010262  6EE6               	movwf	postinc1,c
  4797  010264  0EFF               	movlw	high STR_9
  4798  010266  6EE6               	movwf	postinc1,c
  4799  010268  0E00               	movlw	0
  4800  01026A  6EE6               	movwf	postinc1,c
  4801  01026C  0E02               	movlw	2
  4802  01026E  6EE6               	movwf	postinc1,c
  4803  010270  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  4804  010274  0060  F007  FFE6   	movff	btemp,postinc1
  4805  01027A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4806  010280  0E04               	movlw	4
  4807  010282  6EE6               	movwf	postinc1,c
  4808  010284  ECAC  F0D4         	call	_sprintf	;wreg free
  4809  010288                     l1350:
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;main.c: 271:    update_lcd(0);
  4813  010288  0E00               	movlw	0
  4814  01028A  6EE6               	movwf	postinc1,c
  4815  01028C  EC24  F0D4         	call	_update_lcd	;wreg free
  4816                           
  4817                           ;main.c: 272:    WaitMs(2000);
  4818  010290  0ED0               	movlw	208
  4819  010292  6EE6               	movwf	postinc1,c
  4820  010294  0E07               	movlw	7
  4821  010296  6EE6               	movwf	postinc1,c
  4822  010298  EC2B  F0E5         	call	_WaitMs	;wreg free
  4823                           
  4824                           ;main.c: 274:    i_ror = 1;
  4825                           ;stkvar	_i_ror @ sp[(-17)+16]
  4826  01029C  0EFF               	movlw	-1
  4827  01029E  6AE3               	clrf	plusw1,c
  4828  0102A0  2AE3               	incf	plusw1,f,c
  4829  0102A2                     l14443:
  4830                           
  4831                           ;main.c: 276:     calc_ror_data();
  4832  0102A2  EC7E  F0CA         	call	_calc_ror_data	;wreg free
  4833                           
  4834                           ;main.c: 277:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4835  0102A6  0E00               	movlw	0
  4836  0102A8  6EE6               	movwf	postinc1,c
  4837  0102AA  0E04               	movlw	4
  4838  0102AC  6EE6               	movwf	postinc1,c
  4839  0102AE  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  4840  0102B2  0060  F007  FFE6   	movff	btemp,postinc1
  4841  0102B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4842  0102BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4843  0102C4  0060  F013  FFE6   	movff	btemp+3,postinc1
  4844  0102CA  0EF9               	movlw	low STR_10
  4845  0102CC  6EE6               	movwf	postinc1,c
  4846  0102CE  0EFD               	movlw	high STR_10
  4847  0102D0  6EE6               	movwf	postinc1,c
  4848  0102D2  0E00               	movlw	0
  4849  0102D4  6EE6               	movwf	postinc1,c
  4850  0102D6  0E01               	movlw	1
  4851  0102D8  6EE6               	movwf	postinc1,c
  4852  0102DA  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  4853  0102DE  0060  F007  FFE6   	movff	btemp,postinc1
  4854  0102E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4855  0102EA  0E08               	movlw	8
  4856  0102EC  6EE6               	movwf	postinc1,c
  4857  0102EE  ECAC  F0D4         	call	_sprintf	;wreg free
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;main.c: 278:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4861  0102F2  EE22  F06B         	lfsr	2,_C+108	;volatile
  4862  0102F6  006F FF7B FFE6     	movff	postinc2,postinc1
  4863  0102FC  006F FF7B FFE6     	movff	postinc2,postinc1
  4864  010302  006F FF7B FFE6     	movff	postinc2,postinc1
  4865  010308  006F FF7B FFE6     	movff	postinc2,postinc1
  4866                           
  4867                           ;stkvar	_i_ror @ sp[(-21)+16]
  4868  01030E  0EFB               	movlw	-5
  4869  010310  50E3               	movf	plusw1,w,c
  4870  010312  6EE6               	movwf	postinc1,c
  4871  010314  0E00               	movlw	0
  4872  010316  6EE6               	movwf	postinc1,c
  4873  010318  0E00               	movlw	0
  4874  01031A  6EE6               	movwf	postinc1,c
  4875  01031C  0E05               	movlw	5
  4876  01031E  6EE6               	movwf	postinc1,c
  4877  010320  ECB0  F0D5         	call	_spinners	;wreg free
  4878  010324  5001               	movf	btemp^0,w,c
  4879  010326  6EE6               	movwf	postinc1,c
  4880  010328  0E00               	movlw	0
  4881  01032A  6EE6               	movwf	postinc1,c
  4882  01032C  0E9F               	movlw	low STR_11
  4883  01032E  6EE6               	movwf	postinc1,c
  4884  010330  0EFB               	movlw	high STR_11
  4885  010332  6EE6               	movwf	postinc1,c
  4886  010334  0E00               	movlw	0
  4887  010336  6EE6               	movwf	postinc1,c
  4888  010338  0E02               	movlw	2
  4889  01033A  6EE6               	movwf	postinc1,c
  4890  01033C  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  4891  010340  0060  F007  FFE6   	movff	btemp,postinc1
  4892  010346  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4893  01034C  0E0C               	movlw	12
  4894  01034E  6EE6               	movwf	postinc1,c
  4895  010350  ECAC  F0D4         	call	_sprintf	;wreg free
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;main.c: 279:     update_lcd(0);
  4899  010354  0E00               	movlw	0
  4900  010356  6EE6               	movwf	postinc1,c
  4901  010358  EC24  F0D4         	call	_update_lcd	;wreg free
  4902                           
  4903                           ;main.c: 280:     clear_adc_scan();
  4904  01035C  ECC6  F0E9         	call	_clear_adc_scan	;wreg free
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;main.c: 281:     start_adc_scan();
  4908  010360  ECD1  F0E0         	call	_start_adc_scan	;wreg free
  4909                           
  4910                           ;main.c: 282:     WaitMs(2000);
  4911  010364  0ED0               	movlw	208
  4912  010366  6EE6               	movwf	postinc1,c
  4913  010368  0E07               	movlw	7
  4914  01036A  6EE6               	movwf	postinc1,c
  4915  01036C  EC2B  F0E5         	call	_WaitMs	;wreg free
  4916                           
  4917                           ;main.c: 285:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4918                           ;stkvar	_i_ror @ sp[(-17)+16]
  4919  010370  0EFF               	movlw	-1
  4920  010372  006F FF8C  F00C    	movff	plusw1,btemp+11
  4921  010378  2A0C               	incf	(btemp+11)^0,f,c
  4922  01037A  0060  F033  FFE3   	movff	btemp+11,plusw1
  4923  010380  060C               	decf	(btemp+11)^0,f,c
  4924  010382  0E1E               	movlw	30
  4925  010384  600C               	cpfslt	(btemp+11)^0,c
  4926  010386  D01A               	goto	u13720
  4927  010388  EE22  F06B         	lfsr	2,_C+108	;volatile
  4928  01038C  006F FF7B FFE6     	movff	postinc2,postinc1
  4929  010392  006F FF7B FFE6     	movff	postinc2,postinc1
  4930  010398  006F FF7B FFE6     	movff	postinc2,postinc1
  4931  01039E  006F FF7B FFE6     	movff	postinc2,postinc1
  4932  0103A4  0E42               	movlw	66
  4933  0103A6  6EE6               	movwf	postinc1,c
  4934  0103A8  0E60               	movlw	96
  4935  0103AA  6EE6               	movwf	postinc1,c
  4936  0103AC  0E65               	movlw	101
  4937  0103AE  6EE6               	movwf	postinc1,c
  4938  0103B0  0E3C               	movlw	60
  4939  0103B2  6EE6               	movwf	postinc1,c
  4940  0103B4  EC73  F0CD         	call	___flge	;wreg free
  4941  0103B8  A001               	btfss	btemp& (0+255),0,c
  4942  0103BA  D773               	goto	l14443
  4943  0103BC                     u13720:
  4944                           
  4945                           ;main.c: 287:    static_soc();
  4946  0103BC  EC95  F0E1         	call	_static_soc	;wreg free
  4947                           
  4948                           ;main.c: 288:    init_bsoc();
  4949  0103C0  ECC2  F0C0         	call	_init_bsoc	;wreg free
  4950                           
  4951                           ;main.c: 289:    set_load_relay_one(0);
  4952  0103C4  0E00               	movlw	0
  4953  0103C6  6EE6               	movwf	postinc1,c
  4954  0103C8  EC4F  F0E9         	call	_set_load_relay_one	;wreg free
  4955                           
  4956                           ;main.c: 290:    set_load_relay_two(0);
  4957  0103CC  0E00               	movlw	0
  4958  0103CE  6EE6               	movwf	postinc1,c
  4959  0103D0  EC47  F0E9         	call	_set_load_relay_two	;wreg free
  4960                           
  4961                           ;main.c: 291:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4962  0103D4  EE22  F0B5         	lfsr	2,_C+182	;volatile
  4963  0103D8  006F FF78  F00B    	movff	postinc2,btemp+10
  4964  0103DE  006F FF74  F00C    	movff	postdec2,btemp+11
  4965  0103E4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4966  0103EA  0060  F033  FFE6   	movff	btemp+11,postinc1
  4967  0103F0  0E70               	movlw	low STR_12
  4968  0103F2  6EE6               	movwf	postinc1,c
  4969  0103F4  0EFC               	movlw	high STR_12
  4970  0103F6  6EE6               	movwf	postinc1,c
  4971  0103F8  0E00               	movlw	0
  4972  0103FA  6EE6               	movwf	postinc1,c
  4973  0103FC  0E00               	movlw	0
  4974  0103FE  6EE6               	movwf	postinc1,c
  4975  010400  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  4976  010404  0060  F007  FFE6   	movff	btemp,postinc1
  4977  01040A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4978  010410  0E06               	movlw	6
  4979  010412  6EE6               	movwf	postinc1,c
  4980  010414  ECAC  F0D4         	call	_sprintf	;wreg free
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;main.c: 292:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4984  010418  EE22  F08F         	lfsr	2,_C+144	;volatile
  4985  01041C  006F FF7B FFE6     	movff	postinc2,postinc1
  4986  010422  006F FF7B FFE6     	movff	postinc2,postinc1
  4987  010428  006F FF7B FFE6     	movff	postinc2,postinc1
  4988  01042E  006F FF7B FFE6     	movff	postinc2,postinc1
  4989  010434  0E4C               	movlw	low STR_13
  4990  010436  6EE6               	movwf	postinc1,c
  4991  010438  0EFD               	movlw	high STR_13
  4992  01043A  6EE6               	movwf	postinc1,c
  4993  01043C  0E00               	movlw	0
  4994  01043E  6EE6               	movwf	postinc1,c
  4995  010440  0E01               	movlw	1
  4996  010442  6EE6               	movwf	postinc1,c
  4997  010444  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  4998  010448  0060  F007  FFE6   	movff	btemp,postinc1
  4999  01044E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5000  010454  0E08               	movlw	8
  5001  010456  6EE6               	movwf	postinc1,c
  5002  010458  ECAC  F0D4         	call	_sprintf	;wreg free
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;main.c: 293:    sprintf(get_vterm_ptr(2, 0), "                     ");
  5006  01045C  0E44               	movlw	low STR_14
  5007  01045E  6EE6               	movwf	postinc1,c
  5008  010460  0EFC               	movlw	high STR_14
  5009  010462  6EE6               	movwf	postinc1,c
  5010  010464  0E00               	movlw	0
  5011  010466  6EE6               	movwf	postinc1,c
  5012  010468  0E02               	movlw	2
  5013  01046A  6EE6               	movwf	postinc1,c
  5014  01046C  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5015  010470  0060  F007  FFE6   	movff	btemp,postinc1
  5016  010476  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5017  01047C  0E04               	movlw	4
  5018  01047E  6EE6               	movwf	postinc1,c
  5019  010480  ECAC  F0D4         	call	_sprintf	;wreg free
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;main.c: 294:    update_lcd(0);
  5023  010484  0E00               	movlw	0
  5024  010486  6EE6               	movwf	postinc1,c
  5025  010488  EC24  F0D4         	call	_update_lcd	;wreg free
  5026                           
  5027                           ;main.c: 295:    WaitMs(2000);
  5028  01048C  0ED0               	movlw	208
  5029  01048E  6EE6               	movwf	postinc1,c
  5030  010490  0E07               	movlw	7
  5031  010492  6EE6               	movwf	postinc1,c
  5032  010494  EC2B  F0E5         	call	_WaitMs	;wreg free
  5033                           
  5034                           ;main.c: 296:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  5035  010498  0E23               	movlw	low STR_15
  5036  01049A  6EE6               	movwf	postinc1,c
  5037  01049C  0EFE               	movlw	high STR_15
  5038  01049E  6EE6               	movwf	postinc1,c
  5039  0104A0  0E00               	movlw	0
  5040  0104A2  6EE6               	movwf	postinc1,c
  5041  0104A4  0E00               	movlw	0
  5042  0104A6  6EE6               	movwf	postinc1,c
  5043  0104A8  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5044  0104AC  0060  F007  FFE6   	movff	btemp,postinc1
  5045  0104B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5046  0104B8  0E04               	movlw	4
  5047  0104BA  6EE6               	movwf	postinc1,c
  5048  0104BC  ECAC  F0D4         	call	_sprintf	;wreg free
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;main.c: 297:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  5052  0104C0  0E38               	movlw	low STR_16
  5053  0104C2  6EE6               	movwf	postinc1,c
  5054  0104C4  0EFE               	movlw	high STR_16
  5055  0104C6  6EE6               	movwf	postinc1,c
  5056  0104C8  0E00               	movlw	0
  5057  0104CA  6EE6               	movwf	postinc1,c
  5058  0104CC  0E01               	movlw	1
  5059  0104CE  6EE6               	movwf	postinc1,c
  5060  0104D0  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5061  0104D4  0060  F007  FFE6   	movff	btemp,postinc1
  5062  0104DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5063  0104E0  0E04               	movlw	4
  5064  0104E2  6EE6               	movwf	postinc1,c
  5065  0104E4  ECAC  F0D4         	call	_sprintf	;wreg free
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;main.c: 298:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  5069  0104E8  0E0A               	movlw	low STR_17
  5070  0104EA  6EE6               	movwf	postinc1,c
  5071  0104EC  0EFF               	movlw	high STR_17
  5072  0104EE  6EE6               	movwf	postinc1,c
  5073  0104F0  0E00               	movlw	0
  5074  0104F2  6EE6               	movwf	postinc1,c
  5075  0104F4  0E02               	movlw	2
  5076  0104F6  6EE6               	movwf	postinc1,c
  5077  0104F8  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5078  0104FC  0060  F007  FFE6   	movff	btemp,postinc1
  5079  010502  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5080  010508  0E04               	movlw	4
  5081  01050A  6EE6               	movwf	postinc1,c
  5082  01050C  ECAC  F0D4         	call	_sprintf	;wreg free
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;main.c: 299:    update_lcd(0);
  5086  010510  0E00               	movlw	0
  5087  010512  6EE6               	movwf	postinc1,c
  5088  010514  EC24  F0D4         	call	_update_lcd	;wreg free
  5089                           
  5090                           ;main.c: 300:    uint16_t i_esr = 1;
  5091  010518  0E01               	movlw	1
  5092  01051A  6E0B               	movwf	(btemp+10)^0,c
  5093  01051C  0E00               	movlw	0
  5094  01051E  6E0C               	movwf	(btemp+11)^0,c
  5095                           
  5096                           ;stkvar	_i_esr @ sp[(-17)+8]
  5097  010520  0EF7               	movlw	-9
  5098  010522  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5099  010528  0EF8               	movlw	-8
  5100  01052A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5101                           
  5102                           ;main.c: 302:    float esr_temp;;main.c: 303:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5103  010530  D06D               	goto	l14503
  5104  010532                     l14491:
  5105                           
  5106                           ;main.c: 304:     WaitMs(110);
  5107  010532  0E6E               	movlw	110
  5108  010534  6EE6               	movwf	postinc1,c
  5109  010536  0E00               	movlw	0
  5110  010538  6EE6               	movwf	postinc1,c
  5111  01053A  EC2B  F0E5         	call	_WaitMs	;wreg free
  5112                           
  5113                           ;main.c: 305:     shape = (uint8_t) fabsf(esr_temp);
  5114                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5115  01053E  0EF3               	movlw	-13
  5116  010540  006F FF8F FFE6     	movff	plusw1,postinc1
  5117  010546  006F FF8F FFE6     	movff	plusw1,postinc1
  5118  01054C  006F FF8F FFE6     	movff	plusw1,postinc1
  5119  010552  006F FF8F FFE6     	movff	plusw1,postinc1
  5120  010558  EC36  F0DA         	call	_fabsf	;wreg free
  5121  01055C  0060  F007  FFE6   	movff	btemp,postinc1
  5122  010562  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5123  010568  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5124  01056E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5125  010574  ECBA  F0CC         	call	___fltol	;wreg free
  5126  010578  0060  F004  F00C   	movff	btemp,btemp+11
  5127                           
  5128                           ;stkvar	_shape @ sp[(-17)+10]
  5129  01057E  0EF9               	movlw	-7
  5130  010580  0060  F033  FFE3   	movff	btemp+11,plusw1
  5131                           
  5132                           ;main.c: 306:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  5133  010586  0E00               	movlw	0
  5134  010588  6EE6               	movwf	postinc1,c
  5135                           
  5136                           ;stkvar	_shape @ sp[(-18)+10]
  5137  01058A  0EF8               	movlw	-8
  5138  01058C  50E3               	movf	plusw1,w,c
  5139  01058E  6EE6               	movwf	postinc1,c
  5140  010590  ECB0  F0D5         	call	_spinners	;wreg free
  5141  010594  5001               	movf	btemp^0,w,c
  5142  010596  6EE6               	movwf	postinc1,c
  5143  010598  0E00               	movlw	0
  5144  01059A  6EE6               	movwf	postinc1,c
  5145  01059C  0E00               	movlw	0
  5146  01059E  6EE6               	movwf	postinc1,c
  5147  0105A0  0E00               	movlw	0
  5148  0105A2  6EE6               	movwf	postinc1,c
  5149  0105A4  ECB0  F0D5         	call	_spinners	;wreg free
  5150  0105A8  5001               	movf	btemp^0,w,c
  5151  0105AA  6EE6               	movwf	postinc1,c
  5152  0105AC  0E00               	movlw	0
  5153  0105AE  6EE6               	movwf	postinc1,c
  5154  0105B0  0ECB               	movlw	low STR_18
  5155  0105B2  6EE6               	movwf	postinc1,c
  5156  0105B4  0EFE               	movlw	high STR_18
  5157  0105B6  6EE6               	movwf	postinc1,c
  5158  0105B8  0E00               	movlw	0
  5159  0105BA  6EE6               	movwf	postinc1,c
  5160  0105BC  0E02               	movlw	2
  5161  0105BE  6EE6               	movwf	postinc1,c
  5162  0105C0  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5163  0105C4  0060  F007  FFE6   	movff	btemp,postinc1
  5164  0105CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5165  0105D0  0E08               	movlw	8
  5166  0105D2  6EE6               	movwf	postinc1,c
  5167  0105D4  ECAC  F0D4         	call	_sprintf	;wreg free
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;main.c: 307:     update_lcd(0);
  5171  0105D8  0E00               	movlw	0
  5172  0105DA  6EE6               	movwf	postinc1,c
  5173  0105DC  EC24  F0D4         	call	_update_lcd	;wreg free
  5174                           
  5175                           ;main.c: 309:     if (i_esr++ > 512)
  5176                           ;stkvar	_i_esr @ sp[(-17)+8]
  5177  0105E0  50E1               	movf	fsr1l,w,c
  5178  0105E2  0FF7               	addlw	-9
  5179  0105E4  6ED9               	movwf	fsr2l,c
  5180  0105E6  50E2               	movf	fsr1h,w,c
  5181  0105E8  6EDA               	movwf	fsr2h,c
  5182  0105EA  0EFF               	movlw	255
  5183  0105EC  22DA               	addwfc	fsr2h,f,c
  5184  0105EE  006F FF7C  F00B    	movff	indf2,btemp+10
  5185  0105F4  0E01               	movlw	1
  5186  0105F6  26DE               	addwf	postinc2,f,c
  5187  0105F8  006F FF7C  F00C    	movff	indf2,btemp+11
  5188  0105FE  0E00               	movlw	0
  5189  010600  22DD               	addwfc	postdec2,f,c
  5190  010602  040B               	decf	(btemp+10)^0,w,c
  5191  010604  0E02               	movlw	2
  5192  010606  580C               	subwfb	(btemp+11)^0,w,c
  5193  010608  B0D8               	btfsc	status,0,c
  5194  01060A  D017               	goto	u13740
  5195  01060C                     l14503:
  5196                           
  5197                           ;main.c: 303:    while ((esr_temp = esr_check(0)) < 0.0) {
  5198  01060C  0E00               	movlw	0
  5199  01060E  6EE6               	movwf	postinc1,c
  5200  010610  EC7D  F0BB         	call	_esr_check	;wreg free
  5201                           
  5202                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5203  010614  0EF3               	movlw	-13
  5204  010616  0060  F007  FFE3   	movff	btemp,plusw1
  5205  01061C  0EF4               	movlw	-12
  5206  01061E  0060  F00B  FFE3   	movff	btemp+1,plusw1
  5207  010624  0EF5               	movlw	-11
  5208  010626  0060  F00F  FFE3   	movff	btemp+2,plusw1
  5209  01062C  0EF6               	movlw	-10
  5210  01062E  0060  F013  FFE3   	movff	btemp+3,plusw1
  5211  010634  0EF6               	movlw	-10
  5212  010636  BEE3               	btfsc	plusw1,7,c
  5213  010638  D77C               	goto	l14491
  5214  01063A                     u13740:
  5215                           
  5216                           ;main.c: 312:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5217  01063A  EE22  F087         	lfsr	2,_C+136	;volatile
  5218  01063E  006F FF7B FFE6     	movff	postinc2,postinc1
  5219  010644  006F FF7B FFE6     	movff	postinc2,postinc1
  5220  01064A  006F FF7B FFE6     	movff	postinc2,postinc1
  5221  010650  006F FF7B FFE6     	movff	postinc2,postinc1
  5222  010656  0E5A               	movlw	low STR_19
  5223  010658  6EE6               	movwf	postinc1,c
  5224  01065A  0EFC               	movlw	high STR_19
  5225  01065C  6EE6               	movwf	postinc1,c
  5226  01065E  0E00               	movlw	0
  5227  010660  6EE6               	movwf	postinc1,c
  5228  010662  0E00               	movlw	0
  5229  010664  6EE6               	movwf	postinc1,c
  5230  010666  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5231  01066A  0060  F007  FFE6   	movff	btemp,postinc1
  5232  010670  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5233  010676  0E08               	movlw	8
  5234  010678  6EE6               	movwf	postinc1,c
  5235  01067A  ECAC  F0D4         	call	_sprintf	;wreg free
  5236                           
  5237                           ;main.c: 313:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5238  01067E  EE22  F10D         	lfsr	2,_C+270	;volatile
  5239  010682  006F FF7B FFE6     	movff	postinc2,postinc1
  5240  010688  006F FF7B FFE6     	movff	postinc2,postinc1
  5241  01068E  006F FF7B FFE6     	movff	postinc2,postinc1
  5242  010694  006F FF7B FFE6     	movff	postinc2,postinc1
  5243  01069A  EE22  F119         	lfsr	2,_C+282	;volatile
  5244  01069E  006F FF7B FFE6     	movff	postinc2,postinc1
  5245  0106A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5246  0106AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5247  0106B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5248  0106B6  0E6B               	movlw	low STR_20
  5249  0106B8  6EE6               	movwf	postinc1,c
  5250  0106BA  0EFB               	movlw	high STR_20
  5251  0106BC  6EE6               	movwf	postinc1,c
  5252  0106BE  0E00               	movlw	0
  5253  0106C0  6EE6               	movwf	postinc1,c
  5254  0106C2  0E01               	movlw	1
  5255  0106C4  6EE6               	movwf	postinc1,c
  5256  0106C6  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5257  0106CA  0060  F007  FFE6   	movff	btemp,postinc1
  5258  0106D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5259  0106D6  0E0C               	movlw	12
  5260  0106D8  6EE6               	movwf	postinc1,c
  5261  0106DA  ECAC  F0D4         	call	_sprintf	;wreg free
  5262                           
  5263                           ;main.c: 314:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5264  0106DE  EE22  F111         	lfsr	2,_C+274	;volatile
  5265  0106E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5266  0106E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5267  0106EE  006F FF7B FFE6     	movff	postinc2,postinc1
  5268  0106F4  006F FF7B FFE6     	movff	postinc2,postinc1
  5269  0106FA  EE22  F11D         	lfsr	2,_C+286	;volatile
  5270  0106FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5271  010704  006F FF7B FFE6     	movff	postinc2,postinc1
  5272  01070A  006F FF7B FFE6     	movff	postinc2,postinc1
  5273  010710  006F FF7B FFE6     	movff	postinc2,postinc1
  5274  010716  0E85               	movlw	low STR_21
  5275  010718  6EE6               	movwf	postinc1,c
  5276  01071A  0EFB               	movlw	high STR_21
  5277  01071C  6EE6               	movwf	postinc1,c
  5278  01071E  0E00               	movlw	0
  5279  010720  6EE6               	movwf	postinc1,c
  5280  010722  0E02               	movlw	2
  5281  010724  6EE6               	movwf	postinc1,c
  5282  010726  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5283  01072A  0060  F007  FFE6   	movff	btemp,postinc1
  5284  010730  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5285  010736  0E0C               	movlw	12
  5286  010738  6EE6               	movwf	postinc1,c
  5287  01073A  ECAC  F0D4         	call	_sprintf	;wreg free
  5288                           
  5289                           ;main.c: 315:    update_lcd(0);
  5290  01073E  0E00               	movlw	0
  5291  010740  6EE6               	movwf	postinc1,c
  5292  010742  EC24  F0D4         	call	_update_lcd	;wreg free
  5293                           
  5294                           ;main.c: 316:    WaitMs(4000);
  5295  010746  0EA0               	movlw	160
  5296  010748  6EE6               	movwf	postinc1,c
  5297  01074A  0E0F               	movlw	15
  5298  01074C  6EE6               	movwf	postinc1,c
  5299  01074E  EC2B  F0E5         	call	_WaitMs	;wreg free
  5300                           
  5301                           ;main.c: 317:    V.sensor_set = get_switch(SCALIB);
  5302  010752  0E04               	movlw	4
  5303  010754  6EE6               	movwf	postinc1,c
  5304  010756  EC3E  F0E6         	call	_get_switch	;wreg free
  5305  01075A  5001               	movf	btemp^0,w,c
  5306  01075C  B4D8               	btfsc	status,2,c
  5307  01075E  D002               	goto	u13750
  5308  010760  0E01               	movlw	1
  5309  010762  D001               	goto	u13760
  5310  010764                     u13750:
  5311  010764  0E00               	movlw	0
  5312  010766                     u13760:
  5313  010766  0101               	movlb	1	; () banked
  5314  010768  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  5315                           
  5316                           ; BSR set to: 1
  5317                           ;main.c: 318:    WaitMs(1000);
  5318  01076A  0EE8               	movlw	232
  5319  01076C  6EE6               	movwf	postinc1,c
  5320  01076E  0E03               	movlw	3
  5321  010770  6EE6               	movwf	postinc1,c
  5322  010772  EC2B  F0E5         	call	_WaitMs	;wreg free
  5323                           
  5324                           ;main.c: 319:    if (V.sensor_set && get_switch(SCALIB)) {
  5325  010776  0101               	movlb	1	; () banked
  5326  010778  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
  5327  01077A  B4D8               	btfsc	status,2,c
  5328  01077C  D00F               	goto	l14521
  5329                           
  5330                           ; BSR set to: 1
  5331  01077E  0E04               	movlw	4
  5332  010780  6EE6               	movwf	postinc1,c
  5333  010782  EC3E  F0E6         	call	_get_switch	;wreg free
  5334  010786  5001               	movf	btemp^0,w,c
  5335  010788  B4D8               	btfsc	status,2,c
  5336  01078A  D008               	goto	l14521
  5337                           
  5338                           ;main.c: 320:     current_sensor_cal();
  5339  01078C  EC7C  F0AC         	call	_current_sensor_cal	;wreg free
  5340                           
  5341                           ;main.c: 321:     WaitMs(4000);
  5342  010790  0EA0               	movlw	160
  5343  010792  6EE6               	movwf	postinc1,c
  5344  010794  0E0F               	movlw	15
  5345  010796  6EE6               	movwf	postinc1,c
  5346  010798  EC2B  F0E5         	call	_WaitMs	;wreg free
  5347  01079C                     l14521:
  5348                           
  5349                           ;main.c: 323:    V.sensor_set = 0;
  5350  01079C  0101               	movlb	1	; () banked
  5351  01079E  6BB5               	clrf	(_V+174)& (0+255),b	;volatile
  5352                           
  5353                           ; BSR set to: 1
  5354                           ;main.c: 324:    V.system_stable = 1;
  5355  0107A0  0E01               	movlw	1
  5356  0107A2  6FB6               	movwf	(_V+175)& (0+255),b	;volatile
  5357                           
  5358                           ;main.c: 325:    break;
  5359  0107A4  D01B               	goto	l14529
  5360  0107A6                     l1363:
  5361                           
  5362                           ; BSR set to: 1
  5363                           ;main.c: 331:    P.SYSTEM_STABLE = 1;
  5364  0107A6  81F7               	bsf	(_P+1)& (0+255),0,b	;volatile
  5365                           
  5366                           ;main.c: 332:    break;
  5367  0107A8  D019               	goto	l14529
  5368  0107AA                     l1365:
  5369                           
  5370                           ; BSR set to: 1
  5371                           ;main.c: 335:    V.ui_state = UI_STATE_INIT;
  5372  0107AA  6B07               	clrf	_V& (0+255),b	;volatile
  5373                           
  5374                           ;main.c: 336:    break;
  5375  0107AC  D017               	goto	l14529
  5376  0107AE                     l14527:
  5377  0107AE  0101               	movlb	1	; () banked
  5378  0107B0  5107               	movf	_V& (0+255),w,b	;volatile
  5379  0107B2  6E0B               	movwf	(btemp+10)^0,c
  5380  0107B4  6A0C               	clrf	(btemp+11)^0,c
  5381                           
  5382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5383                           ; Switch size 1, requested type "simple"
  5384                           ; Number of cases is 1, Range of values is 0 to 0
  5385                           ; switch strategies available:
  5386                           ; Name         Instructions Cycles
  5387                           ; simple_byte            4     3 (average)
  5388                           ;	Chosen strategy is simple_byte
  5389  0107B6  500C               	movf	(btemp+11)^0,w,c
  5390  0107B8  0A00               	xorlw	0	; case 0
  5391  0107BA  A4D8               	btfss	status,2,c
  5392  0107BC  D7F6               	goto	l1365
  5393                           
  5394                           ; BSR set to: 1
  5395                           ; Switch size 1, requested type "simple"
  5396                           ; Number of cases is 5, Range of values is 0 to 5
  5397                           ; switch strategies available:
  5398                           ; Name         Instructions Cycles
  5399                           ; simple_byte           16     9 (average)
  5400                           ;	Chosen strategy is simple_byte
  5401  0107BE  500B               	movf	(btemp+10)^0,w,c
  5402  0107C0  0A00               	xorlw	0	; case 0
  5403  0107C2  B4D8               	btfsc	status,2,c
  5404  0107C4  D459               	goto	l14381
  5405  0107C6  0A01               	xorlw	1	; case 1
  5406  0107C8  B4D8               	btfsc	status,2,c
  5407  0107CA  D008               	goto	l14529
  5408  0107CC  0A02               	xorlw	2	; case 3
  5409  0107CE  B4D8               	btfsc	status,2,c
  5410  0107D0  D005               	goto	l14529
  5411  0107D2  0A07               	xorlw	7	; case 4
  5412  0107D4  B4D8               	btfsc	status,2,c
  5413  0107D6  D7E7               	goto	l1363
  5414  0107D8  0A01               	xorlw	1	; case 5
  5415  0107DA  D7E7               	goto	l1365
  5416  0107DC                     l14529:
  5417                           
  5418                           ; BSR set to: 1
  5419                           ;main.c: 339:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5420  0107DC  0E01               	movlw	1
  5421  0107DE  6EE6               	movwf	postinc1,c
  5422  0107E0  ECA9  F0E6         	call	_TimerDone	;wreg free
  5423  0107E4  5001               	movf	btemp^0,w,c
  5424  0107E6  B4D8               	btfsc	status,2,c
  5425  0107E8  D013               	goto	l14541
  5426  0107EA  ECAF  F0E9         	call	_check_adc_scan	;wreg free
  5427  0107EE  5001               	movf	btemp^0,w,c
  5428  0107F0  B4D8               	btfsc	status,2,c
  5429  0107F2  D00E               	goto	l14541
  5430                           
  5431                           ;main.c: 343:    convert_adc_data();
  5432  0107F4  EC7F  F0D9         	call	_convert_adc_data	;wreg free
  5433                           
  5434                           ;main.c: 347:    clear_adc_scan();
  5435  0107F8  ECC6  F0E9         	call	_clear_adc_scan	;wreg free
  5436                           
  5437                           ; BSR set to: 0
  5438                           ;main.c: 348:    start_adc_scan();
  5439  0107FC  ECD1  F0E0         	call	_start_adc_scan	;wreg free
  5440                           
  5441                           ;main.c: 349:    StartTimer(TMR_ADC, 200);
  5442  010800  0EC8               	movlw	200
  5443  010802  6EE6               	movwf	postinc1,c
  5444  010804  0E00               	movlw	0
  5445  010806  6EE6               	movwf	postinc1,c
  5446  010808  0E01               	movlw	1
  5447  01080A  6EE6               	movwf	postinc1,c
  5448  01080C  EC3A  F0E4         	call	_StartTimer	;wreg free
  5449  010810                     l14541:
  5450                           
  5451                           ;main.c: 356:   if (TimerDone(TMR_DISPLAY)) {
  5452                           
  5453                           ;main.c: 352:   if (V.ticks) {
  5454  010810  0E0A               	movlw	10
  5455  010812  6EE6               	movwf	postinc1,c
  5456  010814  ECA9  F0E6         	call	_TimerDone	;wreg free
  5457  010818  5001               	movf	btemp^0,w,c
  5458  01081A  B4D8               	btfsc	status,2,c
  5459  01081C  EFB4  F088         	goto	l14625
  5460                           
  5461                           ;main.c: 357:    if (TimerDone(TMR_HELPDIS)) {
  5462  010820  0E09               	movlw	9
  5463  010822  6EE6               	movwf	postinc1,c
  5464  010824  ECA9  F0E6         	call	_TimerDone	;wreg free
  5465  010828  5001               	movf	btemp^0,w,c
  5466  01082A  B4D8               	btfsc	status,2,c
  5467  01082C  D004               	goto	l14549
  5468                           
  5469                           ;main.c: 358:     set_display_info(DIS_STR);
  5470  01082E  0E00               	movlw	0
  5471  010830  6EE6               	movwf	postinc1,c
  5472  010832  ECAE  F0E8         	call	_set_display_info	;wreg free
  5473  010836                     l14549:
  5474                           
  5475                           ;main.c: 360:    calc_model_data();
  5476  010836  EC18  F0B1         	call	_calc_model_data	;wreg free
  5477                           
  5478                           ; BSR set to: 57
  5479                           ;main.c: 367:     hid_display(&H);
  5480                           
  5481                           ;main.c: 362:    if (0) {
  5482  01083A  0EC7               	movlw	low _H
  5483  01083C  6EE6               	movwf	postinc1,c
  5484  01083E  0E01               	movlw	high _H
  5485  010840  6EE6               	movwf	postinc1,c
  5486  010842  EC15  F0C4         	call	_hid_display	;wreg free
  5487                           
  5488                           ;main.c: 368:     switch (H.hid_display) {
  5489  010846  EF4A  F088         	goto	l14597
  5490  01084A                     l1373:
  5491                           
  5492                           ; BSR set to: 1
  5493                           ;main.c: 370:      V.calib = 0;
  5494  01084A  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5495                           
  5496                           ; BSR set to: 1
  5497                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  5498  01084C  EE22  F121         	lfsr	2,_C+290	;volatile
  5499  010850  50DF               	movf	indf2,w,c
  5500  010852  A4D8               	btfss	status,2,c
  5501  010854  D002               	goto	l14559
  5502                           
  5503                           ; BSR set to: 1
  5504  010856  0E20               	movlw	32
  5505  010858  D001               	goto	L1
  5506  01085A                     l14559:
  5507                           
  5508                           ; BSR set to: 1
  5509  01085A  0E44               	movlw	68
  5510  01085C                     L1:
  5511  01085C  6E0B               	movwf	(btemp+10)^0,c
  5512  01085E  0E00               	movlw	0
  5513  010860  6E0C               	movwf	(btemp+11)^0,c
  5514                           
  5515                           ;stkvar	_main$3807 @ sp[(-17)+2]
  5516  010862  0EF1               	movlw	-15
  5517  010864  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5518  01086A  0EF2               	movlw	-14
  5519  01086C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5520                           
  5521                           ; BSR set to: 1
  5522  010872  EE22  F07B         	lfsr	2,_C+124	;volatile
  5523  010876  006F FF7B FFE6     	movff	postinc2,postinc1
  5524  01087C  006F FF7B FFE6     	movff	postinc2,postinc1
  5525  010882  006F FF7B FFE6     	movff	postinc2,postinc1
  5526  010888  006F FF7B FFE6     	movff	postinc2,postinc1
  5527                           
  5528                           ;stkvar	_main$3807 @ sp[(-21)+2]
  5529  01088E  0EED               	movlw	-19
  5530  010890  006F FF8F FFE6     	movff	plusw1,postinc1
  5531  010896  006F FF8F FFE6     	movff	plusw1,postinc1
  5532  01089C  0E36               	movlw	low STR_25
  5533  01089E  6EE6               	movwf	postinc1,c
  5534  0108A0  0EFD               	movlw	high STR_25
  5535  0108A2  6EE6               	movwf	postinc1,c
  5536  0108A4  0E00               	movlw	0
  5537  0108A6  6EE6               	movwf	postinc1,c
  5538  0108A8  0E00               	movlw	0
  5539  0108AA  6EE6               	movwf	postinc1,c
  5540  0108AC  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5541  0108B0  0060  F007  FFE6   	movff	btemp,postinc1
  5542  0108B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5543  0108BC  0E0A               	movlw	10
  5544  0108BE  6EE6               	movwf	postinc1,c
  5545  0108C0  ECAC  F0D4         	call	_sprintf	;wreg free
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5549  0108C4  EE22  F073         	lfsr	2,_C+116	;volatile
  5550  0108C8  006F FF7B FFE6     	movff	postinc2,postinc1
  5551  0108CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5552  0108D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5553  0108DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5554  0108E0  0E20               	movlw	low STR_26
  5555  0108E2  6EE6               	movwf	postinc1,c
  5556  0108E4  0EFD               	movlw	high STR_26
  5557  0108E6  6EE6               	movwf	postinc1,c
  5558  0108E8  0E00               	movlw	0
  5559  0108EA  6EE6               	movwf	postinc1,c
  5560  0108EC  0E01               	movlw	1
  5561  0108EE  6EE6               	movwf	postinc1,c
  5562  0108F0  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5563  0108F4  0060  F007  FFE6   	movff	btemp,postinc1
  5564  0108FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5565  010900  0E08               	movlw	8
  5566  010902  6EE6               	movwf	postinc1,c
  5567  010904  ECAC  F0D4         	call	_sprintf	;wreg free
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5571  010908  EE22  F077         	lfsr	2,_C+120	;volatile
  5572  01090C  006F FF7B FFE6     	movff	postinc2,postinc1
  5573  010912  006F FF7B FFE6     	movff	postinc2,postinc1
  5574  010918  006F FF7B FFE6     	movff	postinc2,postinc1
  5575  01091E  006F FF7B FFE6     	movff	postinc2,postinc1
  5576  010924  0E0A               	movlw	low STR_27
  5577  010926  6EE6               	movwf	postinc1,c
  5578  010928  0EFD               	movlw	high STR_27
  5579  01092A  6EE6               	movwf	postinc1,c
  5580  01092C  0E00               	movlw	0
  5581  01092E  6EE6               	movwf	postinc1,c
  5582  010930  0E02               	movlw	2
  5583  010932  6EE6               	movwf	postinc1,c
  5584  010934  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5585  010938  0060  F007  FFE6   	movff	btemp,postinc1
  5586  01093E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5587  010944  0E08               	movlw	8
  5588  010946  6EE6               	movwf	postinc1,c
  5589  010948  ECAC  F0D4         	call	_sprintf	;wreg free
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5593  01094C  EE22  F121         	lfsr	2,_C+290	;volatile
  5594  010950  50DF               	movf	indf2,w,c
  5595  010952  A4D8               	btfss	status,2,c
  5596  010954  D002               	goto	l14571
  5597                           
  5598                           ; BSR set to: 0
  5599  010956  0E20               	movlw	32
  5600  010958  D001               	goto	L2
  5601  01095A                     l14571:
  5602                           
  5603                           ; BSR set to: 0
  5604  01095A  0E44               	movlw	68
  5605  01095C                     L2:
  5606  01095C  6E0B               	movwf	(btemp+10)^0,c
  5607  01095E  0E00               	movlw	0
  5608  010960  6E0C               	movwf	(btemp+11)^0,c
  5609                           
  5610                           ;stkvar	_main$3811 @ sp[(-17)+0]
  5611  010962  0EEF               	movlw	-17
  5612  010964  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5613  01096A  0EF0               	movlw	-16
  5614  01096C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5615                           
  5616                           ; BSR set to: 0
  5617  010972  EE22  F0A7         	lfsr	2,_C+168	;volatile
  5618  010976  006F FF7B FFE6     	movff	postinc2,postinc1
  5619  01097C  006F FF7B FFE6     	movff	postinc2,postinc1
  5620  010982  006F FF7B FFE6     	movff	postinc2,postinc1
  5621  010988  006F FF7B FFE6     	movff	postinc2,postinc1
  5622                           
  5623                           ;stkvar	_main$3811 @ sp[(-21)+0]
  5624  01098E  0EEB               	movlw	-21
  5625  010990  006F FF8F FFE6     	movff	plusw1,postinc1
  5626  010996  006F FF8F FFE6     	movff	plusw1,postinc1
  5627  01099C  0EF4               	movlw	low STR_28
  5628  01099E  6EE6               	movwf	postinc1,c
  5629  0109A0  0EFC               	movlw	high STR_28
  5630  0109A2  6EE6               	movwf	postinc1,c
  5631  0109A4  0E01               	movlw	1
  5632  0109A6  6EE6               	movwf	postinc1,c
  5633  0109A8  0E00               	movlw	0
  5634  0109AA  6EE6               	movwf	postinc1,c
  5635  0109AC  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5636  0109B0  0060  F007  FFE6   	movff	btemp,postinc1
  5637  0109B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5638  0109BC  0E0A               	movlw	10
  5639  0109BE  6EE6               	movwf	postinc1,c
  5640  0109C0  ECAC  F0D4         	call	_sprintf	;wreg free
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5644  0109C4  EE22  F0AF         	lfsr	2,_C+176	;volatile
  5645  0109C8  006F FF7B FFE6     	movff	postinc2,postinc1
  5646  0109CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5647  0109D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5648  0109DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5649  0109E0  0EDE               	movlw	low STR_29
  5650  0109E2  6EE6               	movwf	postinc1,c
  5651  0109E4  0EFC               	movlw	high STR_29
  5652  0109E6  6EE6               	movwf	postinc1,c
  5653  0109E8  0E01               	movlw	1
  5654  0109EA  6EE6               	movwf	postinc1,c
  5655  0109EC  0E01               	movlw	1
  5656  0109EE  6EE6               	movwf	postinc1,c
  5657  0109F0  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5658  0109F4  0060  F007  FFE6   	movff	btemp,postinc1
  5659  0109FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5660  010A00  0E08               	movlw	8
  5661  010A02  6EE6               	movwf	postinc1,c
  5662  010A04  ECAC  F0D4         	call	_sprintf	;wreg free
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5666  010A08  EE22  F0AB         	lfsr	2,_C+172	;volatile
  5667  010A0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5668  010A12  006F FF7B FFE6     	movff	postinc2,postinc1
  5669  010A18  006F FF7B FFE6     	movff	postinc2,postinc1
  5670  010A1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5671  010A24  0EC8               	movlw	low STR_30
  5672  010A26  6EE6               	movwf	postinc1,c
  5673  010A28  0EFC               	movlw	high STR_30
  5674  010A2A  6EE6               	movwf	postinc1,c
  5675  010A2C  0E01               	movlw	1
  5676  010A2E  6EE6               	movwf	postinc1,c
  5677  010A30  0E02               	movlw	2
  5678  010A32  6EE6               	movwf	postinc1,c
  5679  010A34  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5680  010A38  0060  F007  FFE6   	movff	btemp,postinc1
  5681  010A3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5682  010A44  0E08               	movlw	8
  5683  010A46  6EE6               	movwf	postinc1,c
  5684  010A48  ECAC  F0D4         	call	_sprintf	;wreg free
  5685                           
  5686                           ;main.c: 378:      break;
  5687  010A4C  D339               	goto	l14599
  5688  010A4E                     l1383:
  5689                           
  5690                           ; BSR set to: 1
  5691                           ;main.c: 380:      V.calib = 0;
  5692  010A4E  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5693                           
  5694                           ; BSR set to: 1
  5695                           ;main.c: 381:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5696  010A50  EE22  F003         	lfsr	2,_C+4	;volatile
  5697  010A54  006F FF7B FFE6     	movff	postinc2,postinc1
  5698  010A5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5699  010A60  006F FF7B FFE6     	movff	postinc2,postinc1
  5700  010A66  006F FF7B FFE6     	movff	postinc2,postinc1
  5701  010A6C  EE22  F013         	lfsr	2,_C+20	;volatile
  5702  010A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5703  010A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5704  010A7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5705  010A82  006F FF7B FFE6     	movff	postinc2,postinc1
  5706  010A88  0E8E               	movlw	low STR_31
  5707  010A8A  6EE6               	movwf	postinc1,c
  5708  010A8C  0EFD               	movlw	high STR_31
  5709  010A8E  6EE6               	movwf	postinc1,c
  5710  010A90  0E00               	movlw	0
  5711  010A92  6EE6               	movwf	postinc1,c
  5712  010A94  0E00               	movlw	0
  5713  010A96  6EE6               	movwf	postinc1,c
  5714  010A98  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5715  010A9C  0060  F007  FFE6   	movff	btemp,postinc1
  5716  010AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5717  010AA8  0E0C               	movlw	12
  5718  010AAA  6EE6               	movwf	postinc1,c
  5719  010AAC  ECAC  F0D4         	call	_sprintf	;wreg free
  5720                           
  5721                           ;main.c: 382:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5722  010AB0  EE21  F3FF         	lfsr	2,_C
  5723  010AB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5724  010ABA  006F FF7B FFE6     	movff	postinc2,postinc1
  5725  010AC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5726  010AC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5727  010ACC  EE22  F00F         	lfsr	2,_C+16	;volatile
  5728  010AD0  006F FF7B FFE6     	movff	postinc2,postinc1
  5729  010AD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5730  010ADC  006F FF7B FFE6     	movff	postinc2,postinc1
  5731  010AE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5732  010AE8  0E62               	movlw	low STR_32
  5733  010AEA  6EE6               	movwf	postinc1,c
  5734  010AEC  0EFD               	movlw	high STR_32
  5735  010AEE  6EE6               	movwf	postinc1,c
  5736  010AF0  0E00               	movlw	0
  5737  010AF2  6EE6               	movwf	postinc1,c
  5738  010AF4  0E01               	movlw	1
  5739  010AF6  6EE6               	movwf	postinc1,c
  5740  010AF8  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5741  010AFC  0060  F007  FFE6   	movff	btemp,postinc1
  5742  010B02  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5743  010B08  0E0C               	movlw	12
  5744  010B0A  6EE6               	movwf	postinc1,c
  5745  010B0C  ECAC  F0D4         	call	_sprintf	;wreg free
  5746                           
  5747                           ;main.c: 383:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5748  010B10  EE22  F03F         	lfsr	2,_C+64	;volatile
  5749  010B14  006F FF7B FFE6     	movff	postinc2,postinc1
  5750  010B1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5751  010B20  006F FF7B FFE6     	movff	postinc2,postinc1
  5752  010B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5753  010B2C  EE22  F007         	lfsr	2,_C+8	;volatile
  5754  010B30  006F FF7B FFE6     	movff	postinc2,postinc1
  5755  010B36  006F FF7B FFE6     	movff	postinc2,postinc1
  5756  010B3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5757  010B42  006F FF7B FFE6     	movff	postinc2,postinc1
  5758  010B48  0E78               	movlw	low STR_33
  5759  010B4A  6EE6               	movwf	postinc1,c
  5760  010B4C  0EFD               	movlw	high STR_33
  5761  010B4E  6EE6               	movwf	postinc1,c
  5762  010B50  0E00               	movlw	0
  5763  010B52  6EE6               	movwf	postinc1,c
  5764  010B54  0E02               	movlw	2
  5765  010B56  6EE6               	movwf	postinc1,c
  5766  010B58  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5767  010B5C  0060  F007  FFE6   	movff	btemp,postinc1
  5768  010B62  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5769  010B68  0E0C               	movlw	12
  5770  010B6A  6EE6               	movwf	postinc1,c
  5771  010B6C  ECAC  F0D4         	call	_sprintf	;wreg free
  5772                           
  5773                           ;main.c: 385:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5774  010B70  EE22  F09F         	lfsr	2,_C+160	;volatile
  5775  010B74  006F FF7B FFE6     	movff	postinc2,postinc1
  5776  010B7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5777  010B80  006F FF7B FFE6     	movff	postinc2,postinc1
  5778  010B86  006F FF7B FFE6     	movff	postinc2,postinc1
  5779  010B8C  0E86               	movlw	low STR_34
  5780  010B8E  6EE6               	movwf	postinc1,c
  5781  010B90  0EFC               	movlw	high STR_34
  5782  010B92  6EE6               	movwf	postinc1,c
  5783  010B94  0E01               	movlw	1
  5784  010B96  6EE6               	movwf	postinc1,c
  5785  010B98  0E00               	movlw	0
  5786  010B9A  6EE6               	movwf	postinc1,c
  5787  010B9C  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5788  010BA0  0060  F007  FFE6   	movff	btemp,postinc1
  5789  010BA6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5790  010BAC  0E08               	movlw	8
  5791  010BAE  6EE6               	movwf	postinc1,c
  5792  010BB0  ECAC  F0D4         	call	_sprintf	;wreg free
  5793                           
  5794                           ;main.c: 386:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5795  010BB4  EE22  F0A3         	lfsr	2,_C+164	;volatile
  5796  010BB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5797  010BBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5798  010BC4  006F FF7B FFE6     	movff	postinc2,postinc1
  5799  010BCA  006F FF7B FFE6     	movff	postinc2,postinc1
  5800  010BD0  0E9C               	movlw	low STR_35
  5801  010BD2  6EE6               	movwf	postinc1,c
  5802  010BD4  0EFC               	movlw	high STR_35
  5803  010BD6  6EE6               	movwf	postinc1,c
  5804  010BD8  0E01               	movlw	1
  5805  010BDA  6EE6               	movwf	postinc1,c
  5806  010BDC  0E01               	movlw	1
  5807  010BDE  6EE6               	movwf	postinc1,c
  5808  010BE0  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5809  010BE4  0060  F007  FFE6   	movff	btemp,postinc1
  5810  010BEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5811  010BF0  0E08               	movlw	8
  5812  010BF2  6EE6               	movwf	postinc1,c
  5813  010BF4  ECAC  F0D4         	call	_sprintf	;wreg free
  5814                           
  5815                           ;main.c: 387:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5816  010BF8  EE22  F0A3         	lfsr	2,_C+164	;volatile
  5817  010BFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5818  010C02  006F FF7B FFE6     	movff	postinc2,postinc1
  5819  010C08  006F FF7B FFE6     	movff	postinc2,postinc1
  5820  010C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5821  010C14  EE22  F09F         	lfsr	2,_C+160	;volatile
  5822  010C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5823  010C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5824  010C24  006F FF7B FFE6     	movff	postinc2,postinc1
  5825  010C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5826  010C30  EC83  F0A3         	call	___fladd	;wreg free
  5827  010C34  0060  F007  FFE6   	movff	btemp,postinc1
  5828  010C3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5829  010C40  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5830  010C46  0060  F013  FFE6   	movff	btemp+3,postinc1
  5831  010C4C  0EB2               	movlw	low STR_36
  5832  010C4E  6EE6               	movwf	postinc1,c
  5833  010C50  0EFC               	movlw	high STR_36
  5834  010C52  6EE6               	movwf	postinc1,c
  5835  010C54  0E01               	movlw	1
  5836  010C56  6EE6               	movwf	postinc1,c
  5837  010C58  0E02               	movlw	2
  5838  010C5A  6EE6               	movwf	postinc1,c
  5839  010C5C  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5840  010C60  0060  F007  FFE6   	movff	btemp,postinc1
  5841  010C66  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5842  010C6C  0E08               	movlw	8
  5843  010C6E  6EE6               	movwf	postinc1,c
  5844  010C70  ECAC  F0D4         	call	_sprintf	;wreg free
  5845                           
  5846                           ;main.c: 388:      break;
  5847  010C74  D225               	goto	l14599
  5848  010C76                     l1384:
  5849                           
  5850                           ; BSR set to: 1
  5851                           ;main.c: 390:      V.calib = 0;
  5852  010C76  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5853                           
  5854                           ; BSR set to: 1
  5855                           ;main.c: 391:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5856  010C78  EE22  F07F         	lfsr	2,_C+128	;volatile
  5857  010C7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5858  010C82  006F FF7B FFE6     	movff	postinc2,postinc1
  5859  010C88  006F FF7B FFE6     	movff	postinc2,postinc1
  5860  010C8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5861  010C94  0EE8               	movlw	low STR_37
  5862  010C96  6EE6               	movwf	postinc1,c
  5863  010C98  0EFB               	movlw	high STR_37
  5864  010C9A  6EE6               	movwf	postinc1,c
  5865  010C9C  0E00               	movlw	0
  5866  010C9E  6EE6               	movwf	postinc1,c
  5867  010CA0  0E00               	movlw	0
  5868  010CA2  6EE6               	movwf	postinc1,c
  5869  010CA4  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5870  010CA8  0060  F007  FFE6   	movff	btemp,postinc1
  5871  010CAE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5872  010CB4  0E08               	movlw	8
  5873  010CB6  6EE6               	movwf	postinc1,c
  5874  010CB8  ECAC  F0D4         	call	_sprintf	;wreg free
  5875                           
  5876                           ;main.c: 392:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5877  010CBC  EE22  F093         	lfsr	2,_C+148	;volatile
  5878  010CC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5879  010CC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5880  010CCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5881  010CD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5882  010CD8  EE22  F08F         	lfsr	2,_C+144	;volatile
  5883  010CDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5884  010CE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5885  010CE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5886  010CEE  006F FF7B FFE6     	movff	postinc2,postinc1
  5887  010CF4  0E2D               	movlw	low STR_38
  5888  010CF6  6EE6               	movwf	postinc1,c
  5889  010CF8  0EFC               	movlw	high STR_38
  5890  010CFA  6EE6               	movwf	postinc1,c
  5891  010CFC  0E00               	movlw	0
  5892  010CFE  6EE6               	movwf	postinc1,c
  5893  010D00  0E01               	movlw	1
  5894  010D02  6EE6               	movwf	postinc1,c
  5895  010D04  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5896  010D08  0060  F007  FFE6   	movff	btemp,postinc1
  5897  010D0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5898  010D14  0E0C               	movlw	12
  5899  010D16  6EE6               	movwf	postinc1,c
  5900  010D18  ECAC  F0D4         	call	_sprintf	;wreg free
  5901                           
  5902                           ;main.c: 393:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  5903  010D1C  EE22  F00F         	lfsr	2,_C+16	;volatile
  5904  010D20  006F FF7B FFE6     	movff	postinc2,postinc1
  5905  010D26  006F FF7B FFE6     	movff	postinc2,postinc1
  5906  010D2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5907  010D32  006F FF7B FFE6     	movff	postinc2,postinc1
  5908  010D38  EE22  F0B3         	lfsr	2,_C+180	;volatile
  5909  010D3C  006F FF78  F00B    	movff	postinc2,btemp+10
  5910  010D42  006F FF74  F00C    	movff	postdec2,btemp+11
  5911  010D48  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5912  010D4E  0060  F033  FFE6   	movff	btemp+11,postinc1
  5913  010D54  EE22  F0B5         	lfsr	2,_C+182	;volatile
  5914  010D58  006F FF78  F00B    	movff	postinc2,btemp+10
  5915  010D5E  006F FF74  F00C    	movff	postdec2,btemp+11
  5916  010D64  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5917  010D6A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5918  010D70  0E00               	movlw	0
  5919  010D72  6EE6               	movwf	postinc1,c
  5920  010D74  0E05               	movlw	5
  5921  010D76  6EE6               	movwf	postinc1,c
  5922  010D78  ECB0  F0D5         	call	_spinners	;wreg free
  5923  010D7C  5001               	movf	btemp^0,w,c
  5924  010D7E  6EE6               	movwf	postinc1,c
  5925  010D80  0E00               	movlw	0
  5926  010D82  6EE6               	movwf	postinc1,c
  5927  010D84  0E4E               	movlw	low STR_39
  5928  010D86  6EE6               	movwf	postinc1,c
  5929  010D88  0EFB               	movlw	high STR_39
  5930  010D8A  6EE6               	movwf	postinc1,c
  5931  010D8C  0E00               	movlw	0
  5932  010D8E  6EE6               	movwf	postinc1,c
  5933  010D90  0E02               	movlw	2
  5934  010D92  6EE6               	movwf	postinc1,c
  5935  010D94  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5936  010D98  0060  F007  FFE6   	movff	btemp,postinc1
  5937  010D9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5938  010DA4  0E0E               	movlw	14
  5939  010DA6  6EE6               	movwf	postinc1,c
  5940  010DA8  ECAC  F0D4         	call	_sprintf	;wreg free
  5941                           
  5942                           ;main.c: 395:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5943  010DAC  EE22  F087         	lfsr	2,_C+136	;volatile
  5944  010DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5945  010DB6  006F FF7B FFE6     	movff	postinc2,postinc1
  5946  010DBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5947  010DC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5948  010DC8  0ED1               	movlw	low STR_40
  5949  010DCA  6EE6               	movwf	postinc1,c
  5950  010DCC  0EFB               	movlw	high STR_40
  5951  010DCE  6EE6               	movwf	postinc1,c
  5952  010DD0  0E01               	movlw	1
  5953  010DD2  6EE6               	movwf	postinc1,c
  5954  010DD4  0E00               	movlw	0
  5955  010DD6  6EE6               	movwf	postinc1,c
  5956  010DD8  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5957  010DDC  0060  F007  FFE6   	movff	btemp,postinc1
  5958  010DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5959  010DE8  0E08               	movlw	8
  5960  010DEA  6EE6               	movwf	postinc1,c
  5961  010DEC  ECAC  F0D4         	call	_sprintf	;wreg free
  5962                           
  5963                           ;main.c: 396:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5964  010DF0  EE22  F10D         	lfsr	2,_C+270	;volatile
  5965  010DF4  006F FF7B FFE6     	movff	postinc2,postinc1
  5966  010DFA  006F FF7B FFE6     	movff	postinc2,postinc1
  5967  010E00  006F FF7B FFE6     	movff	postinc2,postinc1
  5968  010E06  006F FF7B FFE6     	movff	postinc2,postinc1
  5969  010E0C  EE22  F119         	lfsr	2,_C+282	;volatile
  5970  010E10  006F FF7B FFE6     	movff	postinc2,postinc1
  5971  010E16  006F FF7B FFE6     	movff	postinc2,postinc1
  5972  010E1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5973  010E22  006F FF7B FFE6     	movff	postinc2,postinc1
  5974  010E28  0EFF               	movlw	low STR_41
  5975  010E2A  6EE6               	movwf	postinc1,c
  5976  010E2C  0EFB               	movlw	high STR_41
  5977  010E2E  6EE6               	movwf	postinc1,c
  5978  010E30  0E01               	movlw	1
  5979  010E32  6EE6               	movwf	postinc1,c
  5980  010E34  0E01               	movlw	1
  5981  010E36  6EE6               	movwf	postinc1,c
  5982  010E38  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  5983  010E3C  0060  F007  FFE6   	movff	btemp,postinc1
  5984  010E42  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5985  010E48  0E0C               	movlw	12
  5986  010E4A  6EE6               	movwf	postinc1,c
  5987  010E4C  ECAC  F0D4         	call	_sprintf	;wreg free
  5988                           
  5989                           ;main.c: 397:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5990  010E50  EE22  F111         	lfsr	2,_C+274	;volatile
  5991  010E54  006F FF7B FFE6     	movff	postinc2,postinc1
  5992  010E5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5993  010E60  006F FF7B FFE6     	movff	postinc2,postinc1
  5994  010E66  006F FF7B FFE6     	movff	postinc2,postinc1
  5995  010E6C  EE22  F11D         	lfsr	2,_C+286	;volatile
  5996  010E70  006F FF7B FFE6     	movff	postinc2,postinc1
  5997  010E76  006F FF7B FFE6     	movff	postinc2,postinc1
  5998  010E7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5999  010E82  006F FF7B FFE6     	movff	postinc2,postinc1
  6000  010E88  0E16               	movlw	low STR_42
  6001  010E8A  6EE6               	movwf	postinc1,c
  6002  010E8C  0EFC               	movlw	high STR_42
  6003  010E8E  6EE6               	movwf	postinc1,c
  6004  010E90  0E01               	movlw	1
  6005  010E92  6EE6               	movwf	postinc1,c
  6006  010E94  0E02               	movlw	2
  6007  010E96  6EE6               	movwf	postinc1,c
  6008  010E98  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  6009  010E9C  0060  F007  FFE6   	movff	btemp,postinc1
  6010  010EA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6011  010EA8  0E0C               	movlw	12
  6012  010EAA  6EE6               	movwf	postinc1,c
  6013  010EAC  ECAC  F0D4         	call	_sprintf	;wreg free
  6014                           
  6015                           ;main.c: 398:      break;
  6016  010EB0  D107               	goto	l14599
  6017  010EB2                     l14583:
  6018                           
  6019                           ; BSR set to: 1
  6020                           ;main.c: 400:      if (!V.calib) {
  6021  010EB2  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  6022  010EB4  A4D8               	btfss	status,2,c
  6023  010EB6  D02D               	goto	l14587
  6024                           
  6025                           ; BSR set to: 1
  6026                           ;main.c: 401:       lp_filter(0.0, i, -1);
  6027  010EB8  0EFF               	movlw	255
  6028  010EBA  6EE6               	movwf	postinc1,c
  6029                           
  6030                           ;stkvar	_i @ sp[(-18)+14]
  6031  010EBC  0EFC               	movlw	-4
  6032  010EBE  50E3               	movf	plusw1,w,c
  6033  010EC0  6EE6               	movwf	postinc1,c
  6034  010EC2  0E00               	movlw	0
  6035  010EC4  6EE6               	movwf	postinc1,c
  6036  010EC6  0E00               	movlw	0
  6037  010EC8  6EE6               	movwf	postinc1,c
  6038  010ECA  0E00               	movlw	0
  6039  010ECC  6EE6               	movwf	postinc1,c
  6040  010ECE  0E00               	movlw	0
  6041  010ED0  6EE6               	movwf	postinc1,c
  6042  010ED2  EC2E  F0C7         	call	_lp_filter	;wreg free
  6043                           
  6044                           ;main.c: 402:       lp_filter(0.0, j, -1);
  6045  010ED6  0EFF               	movlw	255
  6046  010ED8  6EE6               	movwf	postinc1,c
  6047                           
  6048                           ;stkvar	_j @ sp[(-18)+13]
  6049  010EDA  0EFB               	movlw	-5
  6050  010EDC  50E3               	movf	plusw1,w,c
  6051  010EDE  6EE6               	movwf	postinc1,c
  6052  010EE0  0E00               	movlw	0
  6053  010EE2  6EE6               	movwf	postinc1,c
  6054  010EE4  0E00               	movlw	0
  6055  010EE6  6EE6               	movwf	postinc1,c
  6056  010EE8  0E00               	movlw	0
  6057  010EEA  6EE6               	movwf	postinc1,c
  6058  010EEC  0E00               	movlw	0
  6059  010EEE  6EE6               	movwf	postinc1,c
  6060  010EF0  EC2E  F0C7         	call	_lp_filter	;wreg free
  6061                           
  6062                           ;main.c: 403:       lp_filter(0.0, k, -1);
  6063  010EF4  0EFF               	movlw	255
  6064  010EF6  6EE6               	movwf	postinc1,c
  6065                           
  6066                           ;stkvar	_k @ sp[(-18)+12]
  6067  010EF8  0EFA               	movlw	-6
  6068  010EFA  50E3               	movf	plusw1,w,c
  6069  010EFC  6EE6               	movwf	postinc1,c
  6070  010EFE  0E00               	movlw	0
  6071  010F00  6EE6               	movwf	postinc1,c
  6072  010F02  0E00               	movlw	0
  6073  010F04  6EE6               	movwf	postinc1,c
  6074  010F06  0E00               	movlw	0
  6075  010F08  6EE6               	movwf	postinc1,c
  6076  010F0A  0E00               	movlw	0
  6077  010F0C  6EE6               	movwf	postinc1,c
  6078  010F0E  EC2E  F0C7         	call	_lp_filter	;wreg free
  6079  010F12                     l14587:
  6080                           
  6081                           ;main.c: 405:      V.calib = 1;
  6082  010F12  0E01               	movlw	1
  6083  010F14  0101               	movlb	1	; () banked
  6084  010F16  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6085                           
  6086                           ; BSR set to: 1
  6087                           ;main.c: 406:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6088                           ;stkvar	_inp_index @ sp[(-17)+11]
  6089  010F18  0EFA               	movlw	-6
  6090  010F1A  50E3               	movf	plusw1,w,c
  6091  010F1C  6EE6               	movwf	postinc1,c
  6092  010F1E  0E00               	movlw	0
  6093  010F20  6EE6               	movwf	postinc1,c
  6094                           
  6095                           ;stkvar	_i @ sp[(-19)+14]
  6096  010F22  0EFB               	movlw	-5
  6097  010F24  50E3               	movf	plusw1,w,c
  6098  010F26  0D04               	mullw	4
  6099  010F28  0EFF               	movlw	low _C
  6100  010F2A  24F3               	addwf	243,w,c
  6101  010F2C  6ED9               	movwf	fsr2l,c
  6102  010F2E  0E07               	movlw	high _C
  6103  010F30  20F4               	addwfc	prodh,w,c
  6104  010F32  6EDA               	movwf	fsr2h,c
  6105  010F34  006F FF7B FFE6     	movff	postinc2,postinc1
  6106  010F3A  006F FF7B FFE6     	movff	postinc2,postinc1
  6107  010F40  006F FF7B FFE6     	movff	postinc2,postinc1
  6108  010F46  006F FF7B FFE6     	movff	postinc2,postinc1
  6109                           
  6110                           ;stkvar	_i @ sp[(-23)+14]
  6111  010F4C  0EF7               	movlw	-9
  6112  010F4E  50E3               	movf	plusw1,w,c
  6113  010F50  6EE6               	movwf	postinc1,c
  6114  010F52  ECBD  F0E8         	call	_get_raw_result	;wreg free
  6115  010F56  0060  F007  FFE6   	movff	btemp,postinc1
  6116  010F5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6117  010F62  0EA4               	movlw	low STR_43
  6118  010F64  6EE6               	movwf	postinc1,c
  6119  010F66  0EFD               	movlw	high STR_43
  6120  010F68  6EE6               	movwf	postinc1,c
  6121  010F6A  0E00               	movlw	0
  6122  010F6C  6EE6               	movwf	postinc1,c
  6123  010F6E  0E00               	movlw	0
  6124  010F70  6EE6               	movwf	postinc1,c
  6125  010F72  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  6126  010F76  0060  F007  FFE6   	movff	btemp,postinc1
  6127  010F7C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6128  010F82  0E0C               	movlw	12
  6129  010F84  6EE6               	movwf	postinc1,c
  6130  010F86  ECAC  F0D4         	call	_sprintf	;wreg free
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;main.c: 407:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  6134                           ;stkvar	_inp_index @ sp[(-17)+11]
  6135  010F8A  0EFA               	movlw	-6
  6136  010F8C  50E3               	movf	plusw1,w,c
  6137  010F8E  6E0B               	movwf	(btemp+10)^0,c
  6138  010F90  6A0C               	clrf	(btemp+11)^0,c
  6139  010F92  0E01               	movlw	1
  6140  010F94  260B               	addwf	(btemp+10)^0,f,c
  6141  010F96  0E00               	movlw	0
  6142  010F98  220C               	addwfc	(btemp+11)^0,f,c
  6143  010F9A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6144  010FA0  0060  F033  FFE6   	movff	btemp+11,postinc1
  6145                           
  6146                           ;stkvar	_j @ sp[(-19)+13]
  6147  010FA6  0EFA               	movlw	-6
  6148  010FA8  50E3               	movf	plusw1,w,c
  6149  010FAA  0D04               	mullw	4
  6150  010FAC  0EFF               	movlw	low _C
  6151  010FAE  24F3               	addwf	243,w,c
  6152  010FB0  6ED9               	movwf	fsr2l,c
  6153  010FB2  0E07               	movlw	high _C
  6154  010FB4  20F4               	addwfc	prodh,w,c
  6155  010FB6  6EDA               	movwf	fsr2h,c
  6156  010FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  6157  010FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6158  010FC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6159  010FCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6160                           
  6161                           ;stkvar	_j @ sp[(-23)+13]
  6162  010FD0  0EF6               	movlw	-10
  6163  010FD2  50E3               	movf	plusw1,w,c
  6164  010FD4  6EE6               	movwf	postinc1,c
  6165  010FD6  ECBD  F0E8         	call	_get_raw_result	;wreg free
  6166  010FDA  0060  F007  FFE6   	movff	btemp,postinc1
  6167  010FE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6168  010FE6  0EA4               	movlw	low STR_43
  6169  010FE8  6EE6               	movwf	postinc1,c
  6170  010FEA  0EFD               	movlw	high STR_43
  6171  010FEC  6EE6               	movwf	postinc1,c
  6172  010FEE  0E00               	movlw	0
  6173  010FF0  6EE6               	movwf	postinc1,c
  6174  010FF2  0E01               	movlw	1
  6175  010FF4  6EE6               	movwf	postinc1,c
  6176  010FF6  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  6177  010FFA  0060  F007  FFE6   	movff	btemp,postinc1
  6178  011000  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6179  011006  0E0C               	movlw	12
  6180  011008  6EE6               	movwf	postinc1,c
  6181  01100A  ECAC  F0D4         	call	_sprintf	;wreg free
  6182                           
  6183                           ; BSR set to: 0
  6184                           ;main.c: 408:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  6185                           ;stkvar	_inp_index @ sp[(-17)+11]
  6186  01100E  0EFA               	movlw	-6
  6187  011010  50E3               	movf	plusw1,w,c
  6188  011012  6E0B               	movwf	(btemp+10)^0,c
  6189  011014  6A0C               	clrf	(btemp+11)^0,c
  6190  011016  0E02               	movlw	2
  6191  011018  260B               	addwf	(btemp+10)^0,f,c
  6192  01101A  0E00               	movlw	0
  6193  01101C  220C               	addwfc	(btemp+11)^0,f,c
  6194  01101E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6195  011024  0060  F033  FFE6   	movff	btemp+11,postinc1
  6196                           
  6197                           ;stkvar	_k @ sp[(-19)+12]
  6198  01102A  0EF9               	movlw	-7
  6199  01102C  50E3               	movf	plusw1,w,c
  6200  01102E  0D04               	mullw	4
  6201  011030  0EFF               	movlw	low _C
  6202  011032  24F3               	addwf	243,w,c
  6203  011034  6ED9               	movwf	fsr2l,c
  6204  011036  0E07               	movlw	high _C
  6205  011038  20F4               	addwfc	prodh,w,c
  6206  01103A  6EDA               	movwf	fsr2h,c
  6207  01103C  006F FF7B FFE6     	movff	postinc2,postinc1
  6208  011042  006F FF7B FFE6     	movff	postinc2,postinc1
  6209  011048  006F FF7B FFE6     	movff	postinc2,postinc1
  6210  01104E  006F FF7B FFE6     	movff	postinc2,postinc1
  6211                           
  6212                           ;stkvar	_k @ sp[(-23)+12]
  6213  011054  0EF5               	movlw	-11
  6214  011056  50E3               	movf	plusw1,w,c
  6215  011058  6EE6               	movwf	postinc1,c
  6216  01105A  ECBD  F0E8         	call	_get_raw_result	;wreg free
  6217  01105E  0060  F007  FFE6   	movff	btemp,postinc1
  6218  011064  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6219  01106A  0EA4               	movlw	low STR_43
  6220  01106C  6EE6               	movwf	postinc1,c
  6221  01106E  0EFD               	movlw	high STR_43
  6222  011070  6EE6               	movwf	postinc1,c
  6223  011072  0E00               	movlw	0
  6224  011074  6EE6               	movwf	postinc1,c
  6225  011076  0E02               	movlw	2
  6226  011078  6EE6               	movwf	postinc1,c
  6227  01107A  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
  6228  01107E  0060  F007  FFE6   	movff	btemp,postinc1
  6229  011084  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6230  01108A  0E0C               	movlw	12
  6231  01108C  6EE6               	movwf	postinc1,c
  6232  01108E  ECAC  F0D4         	call	_sprintf	;wreg free
  6233                           
  6234                           ;main.c: 409:      break;
  6235  011092  D016               	goto	l14599
  6236  011094                     l14597:
  6237  011094  0101               	movlb	1	; () banked
  6238  011096  51C7               	movf	_H& (0+255),w,b
  6239  011098  6E0B               	movwf	(btemp+10)^0,c
  6240  01109A  6A0C               	clrf	(btemp+11)^0,c
  6241                           
  6242                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6243                           ; Switch size 1, requested type "simple"
  6244                           ; Number of cases is 1, Range of values is 0 to 0
  6245                           ; switch strategies available:
  6246                           ; Name         Instructions Cycles
  6247                           ; simple_byte            4     3 (average)
  6248                           ;	Chosen strategy is simple_byte
  6249  01109C  500C               	movf	(btemp+11)^0,w,c
  6250  01109E  0A00               	xorlw	0	; case 0
  6251  0110A0  A4D8               	btfss	status,2,c
  6252  0110A2  D00E               	goto	l14599
  6253                           
  6254                           ; BSR set to: 1
  6255                           ; Switch size 1, requested type "simple"
  6256                           ; Number of cases is 4, Range of values is 0 to 3
  6257                           ; switch strategies available:
  6258                           ; Name         Instructions Cycles
  6259                           ; simple_byte           13     7 (average)
  6260                           ;	Chosen strategy is simple_byte
  6261  0110A4  500B               	movf	(btemp+10)^0,w,c
  6262  0110A6  0A00               	xorlw	0	; case 0
  6263  0110A8  B4D8               	btfsc	status,2,c
  6264  0110AA  D4D1               	goto	l1383
  6265  0110AC  0A01               	xorlw	1	; case 1
  6266  0110AE  B4D8               	btfsc	status,2,c
  6267  0110B0  EF25  F084         	goto	l1373
  6268  0110B4  0A03               	xorlw	3	; case 2
  6269  0110B6  B4D8               	btfsc	status,2,c
  6270  0110B8  D5DE               	goto	l1384
  6271  0110BA  0A01               	xorlw	1	; case 3
  6272  0110BC  B4D8               	btfsc	status,2,c
  6273  0110BE  D6F9               	goto	l14583
  6274  0110C0                     l14599:
  6275                           
  6276                           ;main.c: 413:     clear_hid_pflags(&H);
  6277  0110C0  0EC7               	movlw	low _H
  6278  0110C2  6EE6               	movwf	postinc1,c
  6279  0110C4  0E01               	movlw	high _H
  6280  0110C6  6EE6               	movwf	postinc1,c
  6281  0110C8  EC6B  F0E0         	call	_clear_hid_pflags	;wreg free
  6282                           
  6283                           ;main.c: 415:    StartTimer(TMR_DISPLAY, 250);
  6284  0110CC  0EFA               	movlw	250
  6285  0110CE  6EE6               	movwf	postinc1,c
  6286  0110D0  0E00               	movlw	0
  6287  0110D2  6EE6               	movwf	postinc1,c
  6288  0110D4  0E0A               	movlw	10
  6289  0110D6  6EE6               	movwf	postinc1,c
  6290  0110D8  EC3A  F0E4         	call	_StartTimer	;wreg free
  6291                           
  6292                           ;main.c: 416:    V.enter = check_enter_button(&H);
  6293  0110DC  0EC7               	movlw	low _H
  6294  0110DE  6EE6               	movwf	postinc1,c
  6295  0110E0  0E01               	movlw	high _H
  6296  0110E2  6EE6               	movwf	postinc1,c
  6297  0110E4  EC5E  F0DF         	call	_check_enter_button	;wreg free
  6298  0110E8  5001               	movf	btemp^0,w,c
  6299  0110EA  0101               	movlb	1	; () banked
  6300  0110EC  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  6301                           
  6302                           ; BSR set to: 1
  6303                           ;main.c: 417:    if (V.enter && (H.hid_display != HID_AUX)) {
  6304  0110EE  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6305  0110F0  B4D8               	btfsc	status,2,c
  6306  0110F2  D011               	goto	l14613
  6307                           
  6308                           ; BSR set to: 1
  6309  0110F4  0E03               	movlw	3
  6310  0110F6  19C7               	xorwf	_H& (0+255),w,b
  6311  0110F8  B4D8               	btfsc	status,2,c
  6312  0110FA  D00D               	goto	l14613
  6313                           
  6314                           ; BSR set to: 1
  6315                           ;main.c: 418:     V.enter = 0;
  6316  0110FC  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6317                           
  6318                           ; BSR set to: 1
  6319                           ;main.c: 419:     V.screen = ~V.screen;
  6320  0110FE  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6321  011100  D002               	goto	u13880
  6322  011102  0E01               	movlw	1
  6323  011104  D001               	goto	u13886
  6324  011106                     u13880:
  6325  011106  0E00               	movlw	0
  6326  011108                     u13886:
  6327  011108  0AFF               	xorlw	255
  6328  01110A  6E0C               	movwf	(btemp+11)^0,c
  6329  01110C  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  6330  01110E  180C               	xorwf	(btemp+11)^0,w,c
  6331  011110  0BFE               	andlw	-2
  6332  011112  180C               	xorwf	(btemp+11)^0,w,c
  6333  011114  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  6334  011116                     l14613:
  6335                           
  6336                           ; BSR set to: 1
  6337                           ;main.c: 421:    set_vterm(V.screen);
  6338  011116  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6339  011118  D002               	goto	u13890
  6340  01111A  0E01               	movlw	1
  6341  01111C  D001               	goto	u13896
  6342  01111E                     u13890:
  6343  01111E  0E00               	movlw	0
  6344  011120                     u13896:
  6345  011120  6EE6               	movwf	postinc1,c
  6346  011122  EC9F  F0E8         	call	_set_vterm	;wreg free
  6347                           
  6348                           ;main.c: 422:    update_lcd(V.screen);
  6349  011126  0101               	movlb	1	; () banked
  6350  011128  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6351  01112A  D002               	goto	u13900
  6352  01112C  0E01               	movlw	1
  6353  01112E  D001               	goto	u13906
  6354  011130                     u13900:
  6355  011130  0E00               	movlw	0
  6356  011132                     u13906:
  6357  011132  6EE6               	movwf	postinc1,c
  6358  011134  EC24  F0D4         	call	_update_lcd	;wreg free
  6359                           
  6360                           ;main.c: 424:    wait_lcd_done();
  6361  011138  EC2E  F0E8         	call	_wait_lcd_done	;wreg free
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;main.c: 425:    set_dac_a(3.333);
  6365  01113C  0EDF               	movlw	223
  6366  01113E  6EE6               	movwf	postinc1,c
  6367  011140  0E4F               	movlw	79
  6368  011142  6EE6               	movwf	postinc1,c
  6369  011144  0E55               	movlw	85
  6370  011146  6EE6               	movwf	postinc1,c
  6371  011148  0E40               	movlw	64
  6372  01114A  6EE6               	movwf	postinc1,c
  6373  01114C  EC7A  F0E5         	call	_set_dac_a	;wreg free
  6374                           
  6375                           ;main.c: 426:    set_dac_b(6.666);
  6376  011150  0EDF               	movlw	223
  6377  011152  6EE6               	movwf	postinc1,c
  6378  011154  0E4F               	movlw	79
  6379  011156  6EE6               	movwf	postinc1,c
  6380  011158  0ED5               	movlw	213
  6381  01115A  6EE6               	movwf	postinc1,c
  6382  01115C  0E40               	movlw	64
  6383  01115E  6EE6               	movwf	postinc1,c
  6384  011160  EC60  F0E5         	call	_set_dac_b	;wreg free
  6385                           
  6386                           ;main.c: 427:    set_dac();
  6387  011164  ECDB  F0D9         	call	_set_dac	;wreg free
  6388  011168                     l14625:
  6389                           
  6390                           ;main.c: 433:   check_help(V.flipper);
  6391  011168  0101               	movlb	1	; () banked
  6392  01116A  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6393  01116C  6EE6               	movwf	postinc1,c
  6394  01116E  EC23  F0C5         	call	_check_help	;wreg free
  6395                           
  6396                           ;main.c: 435:   if (V.enter) {
  6397  011172  0101               	movlb	1	; () banked
  6398  011174  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6399  011176  B4D8               	btfsc	status,2,c
  6400  011178  D062               	goto	l1389
  6401                           
  6402                           ; BSR set to: 1
  6403                           ;main.c: 436:    V.enter = 0;
  6404  01117A  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6405                           
  6406                           ;main.c: 437:    V.calib = 0;
  6407  01117C  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6408                           
  6409                           ; BSR set to: 1
  6410                           ;main.c: 438:    inp_index += 3;
  6411                           ;stkvar	_inp_index @ sp[(-17)+11]
  6412  01117E  0EFA               	movlw	-6
  6413  011180  006F FF8C  F001    	movff	plusw1,btemp
  6414  011186  0E03               	movlw	3
  6415  011188  2601               	addwf	btemp^0,f,c
  6416  01118A  0EFA               	movlw	-6
  6417  01118C  0060  F007  FFE3   	movff	btemp,plusw1
  6418                           
  6419                           ;main.c: 439:    if (inp_index > 9)
  6420                           ;stkvar	_inp_index @ sp[(-17)+11]
  6421  011192  0EFA               	movlw	-6
  6422  011194  006F FF8C  F001    	movff	plusw1,btemp
  6423  01119A  0E09               	movlw	9
  6424  01119C  6401               	cpfsgt	btemp^0,c
  6425  01119E  D03A               	goto	l14653
  6426                           
  6427                           ; BSR set to: 1
  6428                           ;main.c: 440:     inp_index = 0;
  6429                           ;stkvar	_inp_index @ sp[(-17)+11]
  6430  0111A0  0EFA               	movlw	-6
  6431  0111A2  6AE3               	clrf	plusw1,c
  6432  0111A4  D037               	goto	l14653
  6433  0111A6                     l14635:
  6434                           
  6435                           ; BSR set to: 1
  6436                           ;main.c: 443:     i = C_BATT;
  6437                           ;stkvar	_i @ sp[(-17)+14]
  6438  0111A6  0EFD               	movlw	-3
  6439  0111A8  6AE3               	clrf	plusw1,c
  6440                           
  6441                           ; BSR set to: 1
  6442                           ;main.c: 444:     j = C_PV;
  6443                           ;stkvar	_j @ sp[(-17)+13]
  6444  0111AA  0EFC               	movlw	-4
  6445  0111AC  6AE3               	clrf	plusw1,c
  6446  0111AE  2AE3               	incf	plusw1,f,c
  6447                           
  6448                           ; BSR set to: 1
  6449                           ;main.c: 445:     k = V_CC;
  6450                           ;stkvar	_k @ sp[(-17)+12]
  6451  0111B0  0EFB               	movlw	-5
  6452  0111B2  6AE3               	clrf	plusw1,c
  6453  0111B4  82E3               	bsf	plusw1,1,c
  6454                           
  6455                           ;main.c: 446:     break;
  6456  0111B6  D043               	goto	l1389
  6457  0111B8                     l14641:
  6458                           
  6459                           ; BSR set to: 1
  6460                           ;main.c: 448:     i = V_BAT;
  6461                           ;stkvar	_i @ sp[(-17)+14]
  6462  0111B8  0EFD               	movlw	-3
  6463  0111BA  6AE3               	clrf	plusw1,c
  6464  0111BC  84E3               	bsf	plusw1,2,c
  6465                           
  6466                           ;main.c: 449:     j = V_PV;
  6467                           ;stkvar	_j @ sp[(-17)+13]
  6468  0111BE  0EFC               	movlw	-4
  6469  0111C0  6AE3               	clrf	plusw1,c
  6470  0111C2  80E3               	bsf	plusw1,0,c
  6471  0111C4  84E3               	bsf	plusw1,2,c	;indir
  6472                           
  6473                           ;main.c: 450:     k = V_CBUS;
  6474                           ;stkvar	_k @ sp[(-17)+12]
  6475  0111C6  0EFB               	movlw	-5
  6476  0111C8  6AE3               	clrf	plusw1,c
  6477  0111CA  82E3               	bsf	plusw1,1,c
  6478  0111CC  84E3               	bsf	plusw1,2,c	;indir
  6479                           
  6480                           ;main.c: 451:     break;
  6481  0111CE  D037               	goto	l1389
  6482  0111D0                     l14643:
  6483                           
  6484                           ; BSR set to: 1
  6485                           ;main.c: 453:     i = V_BBAT;
  6486                           ;stkvar	_i @ sp[(-17)+14]
  6487  0111D0  0EFD               	movlw	-3
  6488  0111D2  6AE3               	clrf	plusw1,c
  6489  0111D4  82E3               	bsf	plusw1,1,c
  6490  0111D6  86E3               	bsf	plusw1,3,c	;indir
  6491                           
  6492                           ; BSR set to: 1
  6493                           ;main.c: 454:     j = V_TEMP;
  6494  0111D8  0E0B               	movlw	11
  6495  0111DA  6E0C               	movwf	(btemp+11)^0,c
  6496                           
  6497                           ;stkvar	_j @ sp[(-17)+13]
  6498  0111DC  0EFC               	movlw	-4
  6499  0111DE  0060  F033  FFE3   	movff	btemp+11,plusw1
  6500                           
  6501                           ; BSR set to: 1
  6502                           ;main.c: 455:     k = V_INVERTER;
  6503                           ;stkvar	_k @ sp[(-17)+12]
  6504  0111E4  0EFB               	movlw	-5
  6505  0111E6  6AE3               	clrf	plusw1,c
  6506  0111E8  84E3               	bsf	plusw1,2,c
  6507  0111EA  86E3               	bsf	plusw1,3,c	;indir
  6508                           
  6509                           ;main.c: 456:     break;
  6510  0111EC  D028               	goto	l1389
  6511  0111EE                     l14649:
  6512                           
  6513                           ; BSR set to: 1
  6514                           ;main.c: 458:     i = V_LIGHT_SENSOR;
  6515  0111EE  0E0D               	movlw	13
  6516  0111F0  6E0C               	movwf	(btemp+11)^0,c
  6517                           
  6518                           ;stkvar	_i @ sp[(-17)+14]
  6519  0111F2  0EFD               	movlw	-3
  6520  0111F4  0060  F033  FFE3   	movff	btemp+11,plusw1
  6521                           
  6522                           ;main.c: 459:     j = V_LIGHT_SENSOR;
  6523  0111FA  0E0D               	movlw	13
  6524  0111FC  6E0C               	movwf	(btemp+11)^0,c
  6525                           
  6526                           ;stkvar	_j @ sp[(-17)+13]
  6527  0111FE  0EFC               	movlw	-4
  6528  011200  0060  F033  FFE3   	movff	btemp+11,plusw1
  6529                           
  6530                           ;main.c: 460:     k = V_LIGHT_SENSOR;
  6531  011206  0E0D               	movlw	13
  6532  011208  6E0C               	movwf	(btemp+11)^0,c
  6533                           
  6534                           ;stkvar	_k @ sp[(-17)+12]
  6535  01120A  0EFB               	movlw	-5
  6536  01120C  0060  F033  FFE3   	movff	btemp+11,plusw1
  6537                           
  6538                           ;main.c: 461:     break;
  6539  011212  D015               	goto	l1389
  6540  011214                     l14653:
  6541                           
  6542                           ; BSR set to: 1
  6543                           ;stkvar	_inp_index @ sp[(-17)+11]
  6544  011214  0EFA               	movlw	-6
  6545  011216  50E3               	movf	plusw1,w,c
  6546  011218  6E0B               	movwf	(btemp+10)^0,c
  6547  01121A  6A0C               	clrf	(btemp+11)^0,c
  6548                           
  6549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6550                           ; Switch size 1, requested type "simple"
  6551                           ; Number of cases is 1, Range of values is 0 to 0
  6552                           ; switch strategies available:
  6553                           ; Name         Instructions Cycles
  6554                           ; simple_byte            4     3 (average)
  6555                           ;	Chosen strategy is simple_byte
  6556  01121C  500C               	movf	(btemp+11)^0,w,c
  6557  01121E  0A00               	xorlw	0	; case 0
  6558  011220  A4D8               	btfss	status,2,c
  6559  011222  D00D               	goto	l1389
  6560                           
  6561                           ; BSR set to: 1
  6562                           ; Switch size 1, requested type "simple"
  6563                           ; Number of cases is 4, Range of values is 0 to 9
  6564                           ; switch strategies available:
  6565                           ; Name         Instructions Cycles
  6566                           ; simple_byte           13     7 (average)
  6567                           ;	Chosen strategy is simple_byte
  6568  011224  500B               	movf	(btemp+10)^0,w,c
  6569  011226  0A00               	xorlw	0	; case 0
  6570  011228  B4D8               	btfsc	status,2,c
  6571  01122A  D7BD               	goto	l14635
  6572  01122C  0A03               	xorlw	3	; case 3
  6573  01122E  B4D8               	btfsc	status,2,c
  6574  011230  D7C3               	goto	l14641
  6575  011232  0A05               	xorlw	5	; case 6
  6576  011234  B4D8               	btfsc	status,2,c
  6577  011236  D7CC               	goto	l14643
  6578  011238  0A0F               	xorlw	15	; case 9
  6579  01123A  B4D8               	btfsc	status,2,c
  6580  01123C  D7D8               	goto	l14649
  6581  01123E                     l1389:
  6582                           
  6583                           ; BSR set to: 1
  6584                           ;main.c: 470:   if (V.set_sequ) {
  6585  01123E  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6586  011240  EFD7  F083         	goto	l14527
  6587                           
  6588                           ; BSR set to: 1
  6589                           ;main.c: 471:    if (TimerDone(TMR_INFO)) {
  6590  011244  0E07               	movlw	7
  6591  011246  6EE6               	movwf	postinc1,c
  6592  011248  ECA9  F0E6         	call	_TimerDone	;wreg free
  6593  01124C  5001               	movf	btemp^0,w,c
  6594  01124E  B4D8               	btfsc	status,2,c
  6595  011250  D00C               	goto	l14663
  6596                           
  6597                           ;main.c: 472:     V.set_sequ = 0;
  6598  011252  0101               	movlb	1	; () banked
  6599  011254  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6600                           
  6601                           ; BSR set to: 1
  6602                           ;main.c: 473:     set_vterm(0);
  6603  011256  0E00               	movlw	0
  6604  011258  6EE6               	movwf	postinc1,c
  6605  01125A  EC9F  F0E8         	call	_set_vterm	;wreg free
  6606                           
  6607                           ;main.c: 474:     update_lcd(0);
  6608  01125E  0E00               	movlw	0
  6609  011260  6EE6               	movwf	postinc1,c
  6610  011262  EC24  F0D4         	call	_update_lcd	;wreg free
  6611                           
  6612                           ;main.c: 475:    } else {
  6613  011266  EFD7  F083         	goto	l14527
  6614  01126A                     l14663:
  6615                           
  6616                           ;main.c: 476:     set_vterm(2);
  6617  01126A  0E02               	movlw	2
  6618  01126C  6EE6               	movwf	postinc1,c
  6619  01126E  EC9F  F0E8         	call	_set_vterm	;wreg free
  6620                           
  6621                           ;main.c: 477:     update_lcd(2);
  6622  011272  0E02               	movlw	2
  6623  011274  6EE6               	movwf	postinc1,c
  6624  011276  EC24  F0D4         	call	_update_lcd	;wreg free
  6625  01127A  EFD7  F083         	goto	l14527
  6626  01127E                     __end_of_main:
  6627                           	opt callstack 0
  6628                           
  6629 ;; *************** function _update_cal_data *****************
  6630 ;; Defined at:
  6631 ;;		line 414 in file "daq.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;		None
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1  [STACK] void 
  6638 ;; Registers used:
  6639 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/39
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6649 ;;Total ram usage:        0 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:   15
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_main
  6656 ;; This function uses a reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text1
  6660  01D1FE                     __ptext1:
  6661                           	opt callstack 0
  6662  01D1FE                     _update_cal_data:
  6663                           	opt callstack 15
  6664                           
  6665                           ;daq.c: 416:  R = r_cal;
  6666                           
  6667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6668                           ;incstack = 0
  6669  01D1FE  EE20  F293         	lfsr	2,_r_cal
  6670  01D202  EE00  F0AE         	lfsr	0,_R	;volatile
  6671  01D206  0E38               	movlw	56
  6672  01D208                     u10951:
  6673  01D208  006F FF6F FFEB     	movff	plusw2,plusw0
  6674  01D20E  06E8               	decf	wreg,f,c
  6675  01D210  E2FB               	bc	u10951
  6676                           
  6677                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  6678  01D212  0012               	return		;funcret
  6679  01D214                     __end_of_update_cal_data:
  6680                           	opt callstack 0
  6681                           
  6682 ;; *************** function _static_soc *****************
  6683 ;; Defined at:
  6684 ;;		line 117 in file "mbmc.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;		None
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;		None
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1  [STACK] void 
  6691 ;; Registers used:
  6692 ;;		wreg, fsr2l, fsr2h
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6702 ;;Total ram usage:        0 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:   15
  6705 ;; This function calls:
  6706 ;;		Nothing
  6707 ;; This function is called by:
  6708 ;;		_main
  6709 ;; This function uses a reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text2
  6713  01C32A                     __ptext2:
  6714                           	opt callstack 0
  6715  01C32A                     _static_soc:
  6716                           	opt callstack 15
  6717                           
  6718                           ;mbmc.c: 119:  C.runtime = 120;
  6719                           
  6720                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6721                           ;incstack = 0
  6722  01C32A  0E78               	movlw	120
  6723  01C32C  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
  6724  01C332  0E00               	movlw	0
  6725  01C334  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
  6726                           
  6727                           ;mbmc.c: 120:  C.soc = 100;
  6728  01C33A  0E64               	movlw	100
  6729  01C33C  006F FFA0  F8B5    	movff	wreg,_C+182	;volatile
  6730  01C342  0E00               	movlw	0
  6731  01C344  006F FFA0  F8B6    	movff	wreg,_C+183	;volatile
  6732                           
  6733                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6734  01C34A  EE22  F08B         	lfsr	2,_C+140	;volatile
  6735  01C34E  006F FF78  F88F    	movff	postinc2,_C+144	;volatile
  6736  01C354  006F FF78  F890    	movff	postinc2,_C+145	;volatile
  6737  01C35A  006F FF78  F891    	movff	postinc2,_C+146	;volatile
  6738  01C360  006F FF74  F892    	movff	postdec2,_C+147	;volatile
  6739                           
  6740                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6741  01C366  EE22  F08F         	lfsr	2,_C+144	;volatile
  6742  01C36A  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
  6743  01C370  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
  6744  01C376  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
  6745  01C37C  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
  6746                           
  6747                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6748  01C382  0012               	return		;funcret
  6749  01C384                     __end_of_static_soc:
  6750                           	opt callstack 0
  6751                           
  6752 ;; *************** function _start_switch_handler *****************
  6753 ;; Defined at:
  6754 ;;		line 125 in file "dio.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;		None
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;		None
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  1  [STACK] void 
  6761 ;; Registers used:
  6762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6763 ;; Tracked objects:
  6764 ;;		On entry : 1/0
  6765 ;;		On exit  : 3F/39
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6772 ;;Total ram usage:        0 bytes
  6773 ;; Hardware stack levels used:    1
  6774 ;; Hardware stack levels required when called:   16
  6775 ;; This function calls:
  6776 ;;		_INT1_SetInterruptHandler
  6777 ;; This function is called by:
  6778 ;;		_main
  6779 ;; This function uses a reentrant model
  6780 ;;
  6781                           
  6782                           	psect	text3
  6783  01D0C2                     __ptext3:
  6784                           	opt callstack 0
  6785  01D0C2                     _start_switch_handler:
  6786                           	opt callstack 14
  6787                           
  6788                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  6789                           
  6790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6791                           ;incstack = 0
  6792  01D0C2  0139               	movlb	57	; () banked
  6793  01D0C4  9195               	bcf	149,0,b	;volatile
  6794                           
  6795                           ; BSR set to: 57
  6796                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  6797  01D0C6  0EF8               	movlw	low _switch_handler
  6798  01D0C8  6EE6               	movwf	postinc1,c
  6799  01D0CA  0E9E               	movlw	high _switch_handler
  6800  01D0CC  6EE6               	movwf	postinc1,c
  6801  01D0CE  0E01               	movlw	low (_switch_handler shr (0+16))
  6802  01D0D0  6EE6               	movwf	postinc1,c
  6803  01D0D2  EC35  F0E7         	call	_INT1_SetInterruptHandler	;wreg free
  6804                           
  6805                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  6806  01D0D6  0E02               	movlw	2
  6807  01D0D8  0102               	movlb	2	; () banked
  6808  01D0DA  6F23               	movwf	(_S+35)& (0+255),b	;volatile
  6809                           
  6810                           ; BSR set to: 2
  6811                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  6812  01D0DC  0139               	movlb	57	; () banked
  6813  01D0DE  8195               	bsf	149,0,b	;volatile
  6814                           
  6815                           ; BSR set to: 57
  6816                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6817  01D0E0  0012               	return		;funcret
  6818  01D0E2                     __end_of_start_switch_handler:
  6819                           	opt callstack 0
  6820                           
  6821 ;; *************** function _srand *****************
  6822 ;; Defined at:
  6823 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6824 ;; Parameters:    Size  Location     Type
  6825 ;;  s               2  [STACK] unsigned int 
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;		None
  6828 ;; Return value:  Size  Location     Type
  6829 ;;                  1  [STACK] void 
  6830 ;; Registers used:
  6831 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 3F/2
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6841 ;;Total ram usage:        0 bytes
  6842 ;; Hardware stack levels used:    1
  6843 ;; Hardware stack levels required when called:   15
  6844 ;; This function calls:
  6845 ;;		Nothing
  6846 ;; This function is called by:
  6847 ;;		_main
  6848 ;; This function uses a reentrant model
  6849 ;;
  6850                           
  6851                           	psect	text4
  6852  01CA8C                     __ptext4:
  6853                           	opt callstack 0
  6854  01CA8C                     _srand:
  6855                           	opt callstack 15
  6856                           
  6857                           ;stkvar	_s @ sp[(0)+-2]
  6858                           
  6859                           ; BSR set to: 57
  6860                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6861                           ;incstack = 0
  6862  01CA8C  0EFE               	movlw	-2
  6863  01CA8E  50E3               	movf	plusw1,w,c
  6864  01CA90  0FFF               	addlw	255
  6865  01CA92  6E0B               	movwf	(btemp+10)^0,c
  6866  01CA94  0EFF               	movlw	-1
  6867  01CA96  006F FF8C  F00C    	movff	plusw1,btemp+11
  6868  01CA9C  0EFF               	movlw	255
  6869  01CA9E  220C               	addwfc	(btemp+11)^0,f,c
  6870  01CAA0  0060  F02C  F2CC   	movff	btemp+10,_seed
  6871  01CAA6  0060  F030  F2CD   	movff	btemp+11,_seed+1
  6872  01CAAC  0102               	movlb	2	; () banked
  6873  01CAAE  6BCE               	clrf	(_seed+2)& (0+255),b
  6874  01CAB0  6BCF               	clrf	(_seed+3)& (0+255),b
  6875  01CAB2  6BD0               	clrf	(_seed+4)& (0+255),b
  6876  01CAB4  6BD1               	clrf	(_seed+5)& (0+255),b
  6877  01CAB6  6BD2               	clrf	(_seed+6)& (0+255),b
  6878  01CAB8  6BD3               	clrf	(_seed+7)& (0+255),b
  6879                           
  6880                           ; BSR set to: 2
  6881                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6882  01CABA  52E5               	movf	postdec1,f,c
  6883  01CABC  52E5               	movf	postdec1,f,c
  6884  01CABE  0012               	return		;funcret
  6885  01CAC0                     __end_of_srand:
  6886                           	opt callstack 0
  6887                           
  6888 ;; *************** function _set_dac_b *****************
  6889 ;; Defined at:
  6890 ;;		line 301 in file "daq.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;  voltage         4  [STACK] const float 
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;		None
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  2  [STACK] unsigned short 
  6897 ;; Registers used:
  6898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6908 ;;Total ram usage:        0 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:   17
  6911 ;; This function calls:
  6912 ;;		_convert_dac_raw
  6913 ;; This function is called by:
  6914 ;;		_main
  6915 ;; This function uses a reentrant model
  6916 ;;
  6917                           
  6918                           	psect	text5
  6919  01CAC0                     __ptext5:
  6920                           	opt callstack 0
  6921  01CAC0                     _set_dac_b:
  6922                           	opt callstack 13
  6923                           
  6924                           ;daq.c: 301: uint16_t set_dac_b(const float voltage);daq.c: 302: {;daq.c: 303:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  6925                           ;stkvar	_voltage @ sp[(0)+-4]
  6926                           
  6927                           ; BSR set to: 2
  6928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6929                           ;incstack = 0
  6930  01CAC0  0EFC               	movlw	-4
  6931  01CAC2  006F FF8F FFE6     	movff	plusw1,postinc1
  6932  01CAC8  006F FF8F FFE6     	movff	plusw1,postinc1
  6933  01CACE  006F FF8F FFE6     	movff	plusw1,postinc1
  6934  01CAD4  006F FF8F FFE6     	movff	plusw1,postinc1
  6935  01CADA  EC82  F0D2         	call	_convert_dac_raw	;wreg free
  6936  01CADE  0060  F004  F0D0   	movff	btemp,_R+34	;volatile
  6937  01CAE4  0060  F008  F0D1   	movff	btemp+1,_R+35	;volatile
  6938                           
  6939                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6940                           
  6941                           ;daq.c: 304:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6942  01CAEA  52E5               	movf	postdec1,f,c
  6943  01CAEC  52E5               	movf	postdec1,f,c
  6944  01CAEE  52E5               	movf	postdec1,f,c
  6945  01CAF0  52E5               	movf	postdec1,f,c
  6946  01CAF2  0012               	return		;funcret
  6947  01CAF4                     __end_of_set_dac_b:
  6948                           	opt callstack 0
  6949                           
  6950 ;; *************** function _set_dac_a *****************
  6951 ;; Defined at:
  6952 ;;		line 292 in file "daq.c"
  6953 ;; Parameters:    Size  Location     Type
  6954 ;;  voltage         4  [STACK] const float 
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;		None
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  2  [STACK] unsigned short 
  6959 ;; Registers used:
  6960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6961 ;; Tracked objects:
  6962 ;;		On entry : 3F/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6970 ;;Total ram usage:        0 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; Hardware stack levels required when called:   17
  6973 ;; This function calls:
  6974 ;;		_convert_dac_raw
  6975 ;; This function is called by:
  6976 ;;		_main
  6977 ;; This function uses a reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text6
  6981  01CAF4                     __ptext6:
  6982                           	opt callstack 0
  6983  01CAF4                     _set_dac_a:
  6984                           	opt callstack 13
  6985                           
  6986                           ;daq.c: 292: uint16_t set_dac_a(const float voltage);daq.c: 293: {;daq.c: 294:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  6987                           ;stkvar	_voltage @ sp[(0)+-4]
  6988                           
  6989                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6990                           ;incstack = 0
  6991  01CAF4  0EFC               	movlw	-4
  6992  01CAF6  006F FF8F FFE6     	movff	plusw1,postinc1
  6993  01CAFC  006F FF8F FFE6     	movff	plusw1,postinc1
  6994  01CB02  006F FF8F FFE6     	movff	plusw1,postinc1
  6995  01CB08  006F FF8F FFE6     	movff	plusw1,postinc1
  6996  01CB0E  EC82  F0D2         	call	_convert_dac_raw	;wreg free
  6997  01CB12  0060  F004  F0CE   	movff	btemp,_R+32	;volatile
  6998  01CB18  0060  F008  F0CF   	movff	btemp+1,_R+33	;volatile
  6999                           
  7000                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7001                           
  7002                           ;daq.c: 295:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  7003  01CB1E  52E5               	movf	postdec1,f,c
  7004  01CB20  52E5               	movf	postdec1,f,c
  7005  01CB22  52E5               	movf	postdec1,f,c
  7006  01CB24  52E5               	movf	postdec1,f,c
  7007  01CB26  0012               	return		;funcret
  7008  01CB28                     __end_of_set_dac_a:
  7009                           	opt callstack 0
  7010                           
  7011 ;; *************** function _convert_dac_raw *****************
  7012 ;; Defined at:
  7013 ;;		line 274 in file "daq.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;  voltage         4  [STACK] float 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  2  [STACK] unsigned short 
  7020 ;; Registers used:
  7021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7031 ;;Total ram usage:        0 bytes
  7032 ;; Hardware stack levels used:    1
  7033 ;; Hardware stack levels required when called:   16
  7034 ;; This function calls:
  7035 ;;		___fldiv
  7036 ;;		___flge
  7037 ;;		___fltol
  7038 ;; This function is called by:
  7039 ;;		_set_dac_a
  7040 ;;		_set_dac_b
  7041 ;; This function uses a reentrant model
  7042 ;;
  7043                           
  7044                           	psect	text7
  7045  01A504                     __ptext7:
  7046                           	opt callstack 0
  7047  01A504                     _convert_dac_raw:
  7048                           	opt callstack 13
  7049                           
  7050                           ;daq.c: 274: static uint16_t convert_dac_raw(float voltage);daq.c: 275: {;daq.c: 279:  i
      +                          f (voltage < 0.001)
  7051                           
  7052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7053                           ;incstack = 0
  7054  01A504  0E6F               	movlw	111
  7055  01A506  6EE6               	movwf	postinc1,c
  7056  01A508  0E12               	movlw	18
  7057  01A50A  6EE6               	movwf	postinc1,c
  7058  01A50C  0E83               	movlw	131
  7059  01A50E  6EE6               	movwf	postinc1,c
  7060  01A510  0E3A               	movlw	58
  7061  01A512  6EE6               	movwf	postinc1,c
  7062                           
  7063                           ;stkvar	_voltage @ sp[(-4)+-4]
  7064  01A514  0EF8               	movlw	-8
  7065  01A516  006F FF8F FFE6     	movff	plusw1,postinc1
  7066  01A51C  006F FF8F FFE6     	movff	plusw1,postinc1
  7067  01A522  006F FF8F FFE6     	movff	plusw1,postinc1
  7068  01A528  006F FF8F FFE6     	movff	plusw1,postinc1
  7069  01A52E  EC73  F0CD         	call	___flge	;wreg free
  7070  01A532  B001               	btfsc	btemp& (0+255),0,c
  7071  01A534  D018               	goto	l11487
  7072                           
  7073                           ;daq.c: 280:   voltage = 0.001;
  7074  01A536  0E6F               	movlw	111
  7075  01A538  6E09               	movwf	(btemp+8)^0,c
  7076  01A53A  0E12               	movlw	18
  7077  01A53C  6E0A               	movwf	(btemp+9)^0,c
  7078  01A53E  0E83               	movlw	131
  7079  01A540  6E0B               	movwf	(btemp+10)^0,c
  7080  01A542  0E3A               	movlw	58
  7081  01A544  6E0C               	movwf	(btemp+11)^0,c
  7082                           
  7083                           ;stkvar	_voltage @ sp[(0)+-4]
  7084  01A546  0EFC               	movlw	-4
  7085  01A548  0060  F027  FFE3   	movff	btemp+8,plusw1
  7086  01A54E  0EFD               	movlw	-3
  7087  01A550  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7088  01A556  0EFE               	movlw	-2
  7089  01A558  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7090  01A55E  0EFF               	movlw	-1
  7091  01A560  0060  F033  FFE3   	movff	btemp+11,plusw1
  7092  01A566                     l11487:
  7093                           
  7094                           ;daq.c: 281:  if (voltage > 10.0)
  7095                           ;stkvar	_voltage @ sp[(0)+-4]
  7096  01A566  0EFC               	movlw	-4
  7097  01A568  006F FF8F FFE6     	movff	plusw1,postinc1
  7098  01A56E  006F FF8F FFE6     	movff	plusw1,postinc1
  7099  01A574  006F FF8F FFE6     	movff	plusw1,postinc1
  7100  01A57A  006F FF8F FFE6     	movff	plusw1,postinc1
  7101  01A580  0E00               	movlw	0
  7102  01A582  6EE6               	movwf	postinc1,c
  7103  01A584  0E00               	movlw	0
  7104  01A586  6EE6               	movwf	postinc1,c
  7105  01A588  0E20               	movlw	32
  7106  01A58A  6EE6               	movwf	postinc1,c
  7107  01A58C  0E41               	movlw	65
  7108  01A58E  6EE6               	movwf	postinc1,c
  7109  01A590  EC73  F0CD         	call	___flge	;wreg free
  7110  01A594  B001               	btfsc	btemp& (0+255),0,c
  7111  01A596  D018               	goto	l11491
  7112                           
  7113                           ;daq.c: 282:   voltage = 10.0;
  7114  01A598  0E00               	movlw	0
  7115  01A59A  6E09               	movwf	(btemp+8)^0,c
  7116  01A59C  0E00               	movlw	0
  7117  01A59E  6E0A               	movwf	(btemp+9)^0,c
  7118  01A5A0  0E20               	movlw	32
  7119  01A5A2  6E0B               	movwf	(btemp+10)^0,c
  7120  01A5A4  0E41               	movlw	65
  7121  01A5A6  6E0C               	movwf	(btemp+11)^0,c
  7122                           
  7123                           ;stkvar	_voltage @ sp[(0)+-4]
  7124  01A5A8  0EFC               	movlw	-4
  7125  01A5AA  0060  F027  FFE3   	movff	btemp+8,plusw1
  7126  01A5B0  0EFD               	movlw	-3
  7127  01A5B2  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7128  01A5B8  0EFE               	movlw	-2
  7129  01A5BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7130  01A5C0  0EFF               	movlw	-1
  7131  01A5C2  0060  F033  FFE3   	movff	btemp+11,plusw1
  7132  01A5C8                     l11491:
  7133                           
  7134                           ;daq.c: 286:  return(uint16_t) (voltage / 0.002442);
  7135  01A5C8  0EF6               	movlw	246
  7136  01A5CA  6EE6               	movwf	postinc1,c
  7137  01A5CC  0E09               	movlw	9
  7138  01A5CE  6EE6               	movwf	postinc1,c
  7139  01A5D0  0E20               	movlw	32
  7140  01A5D2  6EE6               	movwf	postinc1,c
  7141  01A5D4  0E3B               	movlw	59
  7142  01A5D6  6EE6               	movwf	postinc1,c
  7143                           
  7144                           ;stkvar	_voltage @ sp[(-4)+-4]
  7145  01A5D8  0EF8               	movlw	-8
  7146  01A5DA  006F FF8F FFE6     	movff	plusw1,postinc1
  7147  01A5E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7148  01A5E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7149  01A5EC  006F FF8F FFE6     	movff	plusw1,postinc1
  7150  01A5F2  EC61  F0A7         	call	___fldiv	;wreg free
  7151  01A5F6  0060  F007  FFE6   	movff	btemp,postinc1
  7152  01A5FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7153  01A602  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7154  01A608  0060  F013  FFE6   	movff	btemp+3,postinc1
  7155  01A60E  ECBA  F0CC         	call	___fltol	;wreg free
  7156                           
  7157                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  7158  01A612  52E5               	movf	postdec1,f,c
  7159  01A614  52E5               	movf	postdec1,f,c
  7160  01A616  52E5               	movf	postdec1,f,c
  7161  01A618  52E5               	movf	postdec1,f,c
  7162  01A61A  0012               	return		;funcret
  7163  01A61C                     __end_of_convert_dac_raw:
  7164                           	opt callstack 0
  7165                           
  7166 ;; *************** function _set_dac *****************
  7167 ;; Defined at:
  7168 ;;		line 250 in file "daq.c"
  7169 ;; Parameters:    Size  Location     Type
  7170 ;;		None
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;		None
  7173 ;; Return value:  Size  Location     Type
  7174 ;;                  1  [STACK] void 
  7175 ;; Registers used:
  7176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  7177 ;; Tracked objects:
  7178 ;;		On entry : 0/0
  7179 ;;		On exit  : 0/0
  7180 ;;		Unchanged: 0/0
  7181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7186 ;;Total ram usage:        0 bytes
  7187 ;; Hardware stack levels used:    1
  7188 ;; Hardware stack levels required when called:   16
  7189 ;; This function calls:
  7190 ;;		_SPI1_Exchange8bit
  7191 ;;		_dac_spi_control
  7192 ;; This function is called by:
  7193 ;;		_main
  7194 ;; This function uses a reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text8
  7198  01B3B6                     __ptext8:
  7199                           	opt callstack 0
  7200  01B3B6                     _set_dac:
  7201                           	opt callstack 14
  7202                           
  7203                           ;daq.c: 252:  while (!SPI1STATUSbits.TXBE);
  7204                           
  7205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7206                           ;incstack = 0
  7207  01B3B6  013D               	movlb	61	; () banked
  7208  01B3B8  AB17               	btfss	23,5,b	;volatile
  7209  01B3BA  D7FD               	goto	_set_dac
  7210                           
  7211                           ; BSR set to: 61
  7212                           
  7213                           ;daq.c: 253:  do { LATCbits.LATC2 = 1; } while(0);
  7214  01B3BC  84BC               	bsf	188,2,c	;volatile
  7215                           
  7216                           ; BSR set to: 61
  7217                           
  7218                           ;daq.c: 254:  do { LATCbits.LATC0 = 1; } while(0);
  7219  01B3BE  80BC               	bsf	188,0,c	;volatile
  7220                           
  7221                           ; BSR set to: 61
  7222                           ;daq.c: 255:  dac_spi_control(1);
  7223  01B3C0  0E01               	movlw	1
  7224  01B3C2  6EE6               	movwf	postinc1,c
  7225  01B3C4  ECE5  F0DE         	call	_dac_spi_control	;wreg free
  7226                           
  7227                           ;daq.c: 256:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  7228  01B3C8  C0CE  F0D2         	movff	_R+32,_R+36	;volatile
  7229                           
  7230                           ;daq.c: 257:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  7231  01B3CC  EE20  F0CE         	lfsr	2,_R+32	;volatile
  7232  01B3D0  006F FF78  F00B    	movff	postinc2,btemp+10
  7233  01B3D6  006F FF74  F00C    	movff	postdec2,btemp+11
  7234  01B3DC  0060  F030  F00B   	movff	btemp+11,btemp+10
  7235  01B3E2  6A0C               	clrf	(btemp+11)^0,c
  7236  01B3E4  0E0F               	movlw	15
  7237  01B3E6  160B               	andwf	(btemp+10)^0,f,c
  7238  01B3E8  0100               	movlb	0	; () banked
  7239  01B3EA  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7240  01B3EC  180B               	xorwf	(btemp+10)^0,w,c
  7241  01B3EE  0BF0               	andlw	-16
  7242  01B3F0  180B               	xorwf	(btemp+10)^0,w,c
  7243  01B3F2  6FD3               	movwf	(_R+37)& (0+255),b	;volatile
  7244                           
  7245                           ; BSR set to: 0
  7246                           ;daq.c: 258:  R.max5322_cmd.map.cont = 0b0100;
  7247  01B3F4  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7248  01B3F6  0B0F               	andlw	-241
  7249  01B3F8  0940               	iorlw	64
  7250  01B3FA  6FD3               	movwf	(_R+37)& (0+255),b	;volatile
  7251                           
  7252                           ; BSR set to: 0
  7253  01B3FC  90BF               	bcf	191,0,c	;volatile
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;daq.c: 260:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7257  01B3FE  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7258  01B400  6EE6               	movwf	postinc1,c
  7259  01B402  EC81  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  7260                           
  7261                           ; BSR set to: 57
  7262                           ;daq.c: 261:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7263  01B406  0100               	movlb	0	; () banked
  7264  01B408  51D2               	movf	(_R+36)& (0+255),w,b	;volatile
  7265  01B40A  6EE6               	movwf	postinc1,c
  7266  01B40C  EC81  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  7267                           
  7268                           ; BSR set to: 57
  7269  01B410  80BF               	bsf	191,0,c	;volatile
  7270                           
  7271                           ; BSR set to: 57
  7272                           ;daq.c: 263:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  7273  01B412  C0D0  F0D2         	movff	_R+34,_R+36	;volatile
  7274                           
  7275                           ; BSR set to: 57
  7276                           ;daq.c: 264:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  7277  01B416  EE20  F0D0         	lfsr	2,_R+34	;volatile
  7278  01B41A  006F FF78  F00B    	movff	postinc2,btemp+10
  7279  01B420  006F FF74  F00C    	movff	postdec2,btemp+11
  7280  01B426  0060  F030  F00B   	movff	btemp+11,btemp+10
  7281  01B42C  6A0C               	clrf	(btemp+11)^0,c
  7282  01B42E  0E0F               	movlw	15
  7283  01B430  160B               	andwf	(btemp+10)^0,f,c
  7284  01B432  0100               	movlb	0	; () banked
  7285  01B434  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7286  01B436  180B               	xorwf	(btemp+10)^0,w,c
  7287  01B438  0BF0               	andlw	-16
  7288  01B43A  180B               	xorwf	(btemp+10)^0,w,c
  7289  01B43C  6FD3               	movwf	(_R+37)& (0+255),b	;volatile
  7290                           
  7291                           ; BSR set to: 0
  7292                           ;daq.c: 265:  R.max5322_cmd.map.cont = 0b0101;
  7293  01B43E  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7294  01B440  0B0F               	andlw	-241
  7295  01B442  0950               	iorlw	80
  7296  01B444  6FD3               	movwf	(_R+37)& (0+255),b	;volatile
  7297                           
  7298                           ; BSR set to: 0
  7299  01B446  90BF               	bcf	191,0,c	;volatile
  7300                           
  7301                           ; BSR set to: 0
  7302                           ;daq.c: 267:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7303  01B448  51D3               	movf	(_R+37)& (0+255),w,b	;volatile
  7304  01B44A  6EE6               	movwf	postinc1,c
  7305  01B44C  EC81  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  7306                           
  7307                           ; BSR set to: 57
  7308                           ;daq.c: 268:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7309  01B450  0100               	movlb	0	; () banked
  7310  01B452  51D2               	movf	(_R+36)& (0+255),w,b	;volatile
  7311  01B454  6EE6               	movwf	postinc1,c
  7312  01B456  EC81  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  7313  01B45A                     l1913:
  7314  01B45A  013D               	movlb	61	; () banked
  7315  01B45C  AB17               	btfss	23,5,b	;volatile
  7316  01B45E  D7FD               	goto	l1913
  7317                           
  7318                           ; BSR set to: 61
  7319                           
  7320                           ;daq.c: 270:  do { LATFbits.LATF0 = 1; } while(0);
  7321  01B460  80BF               	bsf	191,0,c	;volatile
  7322                           
  7323                           ; BSR set to: 61
  7324                           ;daq.c: 271:  dac_spi_control(0);
  7325  01B462  0E00               	movlw	0
  7326  01B464  6EE6               	movwf	postinc1,c
  7327  01B466  ECE5  F0DE         	call	_dac_spi_control	;wreg free
  7328                           
  7329                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  7330  01B46A  0012               	return		;funcret
  7331  01B46C                     __end_of_set_dac:
  7332                           	opt callstack 0
  7333                           
  7334 ;; *************** function _dac_spi_control *****************
  7335 ;; Defined at:
  7336 ;;		line 202 in file "daq.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;  set             1  [STACK] _Bool 
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;		None
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  1  [STACK] void 
  7343 ;; Registers used:
  7344 ;;		wreg, fsr1l, fsr1h, status,2
  7345 ;; Tracked objects:
  7346 ;;		On entry : 3F/3D
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7354 ;;Total ram usage:        0 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; Hardware stack levels required when called:   15
  7357 ;; This function calls:
  7358 ;;		Nothing
  7359 ;; This function is called by:
  7360 ;;		_set_dac
  7361 ;; This function uses a reentrant model
  7362 ;;
  7363                           
  7364                           	psect	text9
  7365  01BDCA                     __ptext9:
  7366                           	opt callstack 0
  7367  01BDCA                     _dac_spi_control:
  7368                           	opt callstack 14
  7369                           
  7370                           ;daq.c: 202: void dac_spi_control(_Bool set);daq.c: 203: {;daq.c: 204:  static _Bool ini
      +                          t = 0;;daq.c: 205:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 207:  if (set) {
  7371                           ;stkvar	_set @ sp[(0)+-1]
  7372                           
  7373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7374                           ;incstack = 0
  7375  01BDCA  0EFF               	movlw	-1
  7376  01BDCC  50E3               	movf	plusw1,w,c
  7377  01BDCE  B4D8               	btfsc	status,2,c
  7378  01BDD0  D022               	goto	l11479
  7379                           
  7380                           ;daq.c: 208:   SPI1CON0bits.EN = 0;
  7381  01BDD2  013D               	movlb	61	; () banked
  7382  01BDD4  9F14               	bcf	20,7,b	;volatile
  7383                           
  7384                           ; BSR set to: 61
  7385                           ;daq.c: 209:   if (!init) {
  7386  01BDD6  5043               	movf	dac_spi_control@init^0,w,c
  7387  01BDD8  A4D8               	btfss	status,2,c
  7388  01BDDA  D011               	goto	l11467
  7389                           
  7390                           ; BSR set to: 61
  7391                           ;daq.c: 210:    init = 1;
  7392  01BDDC  0E01               	movlw	1
  7393  01BDDE  6E43               	movwf	dac_spi_control@init^0,c
  7394                           
  7395                           ; BSR set to: 61
  7396                           ;daq.c: 211:    S0 = SPI1CON0;
  7397  01BDE0  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7398                           
  7399                           ; BSR set to: 61
  7400                           ;daq.c: 212:    S1 = SPI1CON1;
  7401  01BDE6  006F F454  F0A4    	movff	15637,dac_spi_control@S1	;volatile
  7402                           
  7403                           ; BSR set to: 61
  7404                           ;daq.c: 213:    S2 = SPI1CON2;
  7405  01BDEC  006F F458  F0A3    	movff	15638,dac_spi_control@S2	;volatile
  7406                           
  7407                           ; BSR set to: 61
  7408                           ;daq.c: 214:    SC = SPI1CLK;
  7409  01BDF2  006F F470  F0A2    	movff	15644,dac_spi_control@SC	;volatile
  7410                           
  7411                           ; BSR set to: 61
  7412                           ;daq.c: 215:    SB = SPI1BAUD;
  7413  01BDF8  006F F464  F0A1    	movff	15641,dac_spi_control@SB	;volatile
  7414  01BDFE                     l11467:
  7415                           
  7416                           ; BSR set to: 61
  7417                           ;daq.c: 221:   SPI1CON1 = 0x00;
  7418  01BDFE  6B15               	clrf	21,b	;volatile
  7419                           
  7420                           ; BSR set to: 61
  7421                           ;daq.c: 222:   SPI1CON1bits.CKE = 1;
  7422  01BE00  8D15               	bsf	21,6,b	;volatile
  7423                           
  7424                           ; BSR set to: 61
  7425                           ;daq.c: 223:   SPI1CON1bits.CKP = 0;
  7426  01BE02  9B15               	bcf	21,5,b	;volatile
  7427                           
  7428                           ; BSR set to: 61
  7429                           ;daq.c: 224:   SPI1CON1bits.SMP = 0;
  7430  01BE04  9F15               	bcf	21,7,b	;volatile
  7431                           
  7432                           ;daq.c: 226:   SPI1CON2 = 0x03;
  7433  01BE06  0E03               	movlw	3
  7434  01BE08  6F16               	movwf	22,b	;volatile
  7435                           
  7436                           ;daq.c: 228:   SPI1BAUD = 0x0f;
  7437  01BE0A  0E0F               	movlw	15
  7438  01BE0C  6F19               	movwf	25,b	;volatile
  7439                           
  7440                           ; BSR set to: 61
  7441                           ;daq.c: 230:   SPI1CLK = 0x00;
  7442  01BE0E  6B1C               	clrf	28,b	;volatile
  7443                           
  7444                           ;daq.c: 232:   SPI1CON0 = 0x83;
  7445  01BE10  0E83               	movlw	131
  7446  01BE12  6F14               	movwf	20,b	;volatile
  7447  01BE14  D014               	goto	L3
  7448  01BE16                     l11479:
  7449                           
  7450                           ;daq.c: 235:   if (init) {
  7451  01BE16  5043               	movf	dac_spi_control@init^0,w,c
  7452  01BE18  B4D8               	btfsc	status,2,c
  7453  01BE1A  D012               	goto	l1897
  7454                           
  7455                           ;daq.c: 239:    SPI1CON0bits.EN = 0;
  7456  01BE1C  013D               	movlb	61	; () banked
  7457  01BE1E  9F14               	bcf	20,7,b	;volatile
  7458                           
  7459                           ;daq.c: 240:    SPI1CON1 = S1;
  7460  01BE20  0060  F293  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7461                           
  7462                           ;daq.c: 241:    SPI1CON2 = S2;
  7463  01BE26  0060  F28F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7464                           
  7465                           ;daq.c: 242:    SPI1CLK = SC;
  7466  01BE2C  0060  F28B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7467                           
  7468                           ;daq.c: 243:    SPI1BAUD = SB;
  7469  01BE32  0060  F287  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7470                           
  7471                           ;daq.c: 244:    SPI1CON0 = S0;
  7472  01BE38  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7473  01BE3E                     L3:
  7474                           
  7475                           ;daq.c: 245:    SPI1CON0bits.EN = 1;
  7476  01BE3E  8F14               	bsf	20,7,b	;volatile
  7477  01BE40                     l1897:
  7478                           
  7479                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7480  01BE40  52E5               	movf	postdec1,f,c
  7481  01BE42  0012               	return		;funcret
  7482  01BE44                     __end_of_dac_spi_control:
  7483                           	opt callstack 0
  7484                           
  7485 ;; *************** function _read_cal_data *****************
  7486 ;; Defined at:
  7487 ;;		line 351 in file "daq.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;		None
  7490 ;; Auto vars:     Size  Location     Type
  7491 ;;  x               2  [STACK] unsigned short 
  7492 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  7493 ;;		 -> r_cal(57), 
  7494 ;;  y               2  [STACK] unsigned short 
  7495 ;;  crcVal_save     1  [STACK] unsigned char 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1  [STACK] _Bool 
  7498 ;; Registers used:
  7499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/39
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7509 ;;Total ram usage:        0 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:   17
  7512 ;; This function calls:
  7513 ;;		_CRC_8BitDataWrite
  7514 ;;		_CRC_CalculatedResultGet
  7515 ;;		_CRC_Initialize
  7516 ;;		_CRC_Start
  7517 ;;		_DATAEE_ReadByte
  7518 ;; This function is called by:
  7519 ;;		_main
  7520 ;; This function uses a reentrant model
  7521 ;;
  7522                           
  7523                           	psect	text10
  7524  019018                     __ptext10:
  7525                           	opt callstack 0
  7526  019018                     _read_cal_data:
  7527                           	opt callstack 0
  7528                           
  7529                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7530  019018  0E07               	movlw	7
  7531  01901A  26E1               	addwf	fsr1l,f,c
  7532  01901C  0E00               	movlw	0
  7533  01901E  22E2               	addwfc	fsr1h,f,c
  7534                           
  7535                           ;daq.c: 353:  uint16_t x = 0, y;
  7536                           ;stkvar	_x @ sp[(-7)+0]
  7537                           
  7538                           ;incstack = 0
  7539  019020  0EF9               	movlw	-7
  7540  019022  6AE3               	clrf	plusw1,c
  7541  019024  0EFA               	movlw	-6
  7542  019026  6AE3               	clrf	plusw1,c
  7543                           
  7544                           ;daq.c: 354:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 356:  y = sizeof(r_cal);
  7545  019028  0E39               	movlw	57
  7546  01902A  6E0B               	movwf	(btemp+10)^0,c
  7547  01902C  0E00               	movlw	0
  7548  01902E  6E0C               	movwf	(btemp+11)^0,c
  7549                           
  7550                           ;stkvar	_y @ sp[(-7)+4]
  7551  019030  0EFD               	movlw	-3
  7552  019032  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7553  019038  0EFE               	movlw	-2
  7554  01903A  0060  F033  FFE3   	movff	btemp+11,plusw1
  7555                           
  7556                           ;daq.c: 357:  r_cal_ptr = (uint8_t*) & r_cal;
  7557                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7558  019040  0E02               	movlw	high _r_cal
  7559  019042  6E01               	movwf	btemp^0,c
  7560  019044  0EFC               	movlw	-4
  7561  019046  0060  F007  FFE3   	movff	btemp,plusw1
  7562  01904C  0E93               	movlw	low _r_cal
  7563  01904E  6E01               	movwf	btemp^0,c
  7564  019050  0EFB               	movlw	-5
  7565  019052  0060  F007  FFE3   	movff	btemp,plusw1
  7566                           
  7567                           ;daq.c: 359:  CRC_Initialize();
  7568  019058  EC0E  F0DD         	call	_CRC_Initialize	;wreg free
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;daq.c: 362:  CRC_Start();
  7572  01905C  ECC3  F0E9         	call	_CRC_Start	;wreg free
  7573  019060                     l11913:
  7574                           
  7575                           ;daq.c: 365:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  7576                           ;stkvar	_x @ sp[(-7)+0]
  7577  019060  0EF9               	movlw	-7
  7578  019062  006F FF8F FFE6     	movff	plusw1,postinc1
  7579  019068  006F FF8F FFE6     	movff	plusw1,postinc1
  7580  01906E  ECAE  F0E5         	call	_DATAEE_ReadByte	;wreg free
  7581                           
  7582                           ;stkvar	_x @ sp[(-7)+0]
  7583  019072  0EF9               	movlw	-7
  7584  019074  006F FF8C  F00B    	movff	plusw1,btemp+10
  7585  01907A  0EFA               	movlw	-6
  7586  01907C  006F FF8C  F00C    	movff	plusw1,btemp+11
  7587                           
  7588                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7589  019082  0EFB               	movlw	-5
  7590  019084  006F FF8C  F009    	movff	plusw1,btemp+8
  7591  01908A  0EFC               	movlw	-4
  7592  01908C  006F FF8C  F00A    	movff	plusw1,btemp+9
  7593  019092  500B               	movf	(btemp+10)^0,w,c
  7594  019094  2409               	addwf	(btemp+8)^0,w,c
  7595  019096  6ED9               	movwf	fsr2l,c
  7596  019098  500C               	movf	(btemp+11)^0,w,c
  7597  01909A  200A               	addwfc	(btemp+9)^0,w,c
  7598  01909C  6EDA               	movwf	fsr2h,c
  7599  01909E  0060  F007  FFDF   	movff	btemp,indf2
  7600                           
  7601                           ;daq.c: 366:  } while (++x < y);
  7602                           ;stkvar	_y @ sp[(-7)+4]
  7603  0190A4  0EFD               	movlw	-3
  7604  0190A6  006F FF8C  F00B    	movff	plusw1,btemp+10
  7605  0190AC  0EFE               	movlw	-2
  7606  0190AE  006F FF8C  F00C    	movff	plusw1,btemp+11
  7607                           
  7608                           ;stkvar	_x @ sp[(-7)+0]
  7609  0190B4  0EF9               	movlw	-7
  7610  0190B6  50E3               	movf	plusw1,w,c
  7611  0190B8  0F01               	addlw	1
  7612  0190BA  6E01               	movwf	btemp^0,c
  7613  0190BC  0EF9               	movlw	-7
  7614  0190BE  0060  F007  FFE3   	movff	btemp,plusw1
  7615  0190C4  6A01               	clrf	btemp^0,c
  7616  0190C6  0EFA               	movlw	-6
  7617  0190C8  50E3               	movf	plusw1,w,c
  7618  0190CA  2001               	addwfc	btemp^0,w,c
  7619  0190CC  6E01               	movwf	btemp^0,c
  7620  0190CE  0EFA               	movlw	-6
  7621  0190D0  0060  F007  FFE3   	movff	btemp,plusw1
  7622  0190D6  0EF9               	movlw	-7
  7623  0190D8  006F FF8C  F009    	movff	plusw1,btemp+8
  7624  0190DE  0EFA               	movlw	-6
  7625  0190E0  006F FF8C  F00A    	movff	plusw1,btemp+9
  7626  0190E6  500B               	movf	(btemp+10)^0,w,c
  7627  0190E8  5C09               	subwf	(btemp+8)^0,w,c
  7628  0190EA  500C               	movf	(btemp+11)^0,w,c
  7629  0190EC  580A               	subwfb	(btemp+9)^0,w,c
  7630  0190EE  A0D8               	btfss	status,0,c
  7631  0190F0  D7B7               	goto	l11913
  7632                           
  7633                           ;daq.c: 367:  crcVal_save = r_cal.crc;
  7634                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  7635  0190F2  0EFF               	movlw	-1
  7636  0190F4  0060  FB2F  FFE3   	movff	_r_cal+56,plusw1
  7637                           
  7638                           ;daq.c: 368:  r_cal.crc = 0x42;
  7639  0190FA  0E42               	movlw	66
  7640  0190FC  0102               	movlb	2	; () banked
  7641  0190FE  6FCB               	movwf	(_r_cal+56)& (0+255),b
  7642                           
  7643                           ; BSR set to: 2
  7644                           ;daq.c: 370:  if (r_cal.checkmark == 0x1957) {
  7645  019100  0E57               	movlw	87
  7646  019102  19C9               	xorwf	(_r_cal+54)& (0+255),w,b
  7647  019104  E159               	bnz	l11935
  7648  019106  0E19               	movlw	25
  7649  019108  19CA               	xorwf	(_r_cal+55)& (0+255),w,b
  7650  01910A  A4D8               	btfss	status,2,c
  7651  01910C  D055               	goto	l11935
  7652                           
  7653                           ; BSR set to: 2
  7654                           ;daq.c: 371:   x = 0;
  7655                           ;stkvar	_x @ sp[(-7)+0]
  7656  01910E  0EF9               	movlw	-7
  7657  019110  6AE3               	clrf	plusw1,c
  7658  019112  0EFA               	movlw	-6
  7659  019114  6AE3               	clrf	plusw1,c
  7660  019116                     l11925:
  7661                           
  7662                           ;daq.c: 374:    CRC_8BitDataWrite(r_cal_ptr[x]);
  7663                           ;stkvar	_x @ sp[(-7)+0]
  7664  019116  0EF9               	movlw	-7
  7665  019118  006F FF8C  F00B    	movff	plusw1,btemp+10
  7666  01911E  0EFA               	movlw	-6
  7667  019120  006F FF8C  F00C    	movff	plusw1,btemp+11
  7668                           
  7669                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  7670  019126  0EFB               	movlw	-5
  7671  019128  006F FF8C  F009    	movff	plusw1,btemp+8
  7672  01912E  0EFC               	movlw	-4
  7673  019130  006F FF8C  F00A    	movff	plusw1,btemp+9
  7674  019136  500B               	movf	(btemp+10)^0,w,c
  7675  019138  2409               	addwf	(btemp+8)^0,w,c
  7676  01913A  6ED9               	movwf	fsr2l,c
  7677  01913C  500C               	movf	(btemp+11)^0,w,c
  7678  01913E  200A               	addwfc	(btemp+9)^0,w,c
  7679  019140  6EDA               	movwf	fsr2h,c
  7680  019142  50DF               	movf	indf2,w,c
  7681  019144  6EE6               	movwf	postinc1,c
  7682  019146  EC35  F0E9         	call	_CRC_8BitDataWrite	;wreg free
  7683                           
  7684                           ; BSR set to: 57
  7685                           ;daq.c: 375:   } while (++x < y);
  7686                           ;stkvar	_y @ sp[(-7)+4]
  7687  01914A  0EFD               	movlw	-3
  7688  01914C  006F FF8C  F00B    	movff	plusw1,btemp+10
  7689  019152  0EFE               	movlw	-2
  7690  019154  006F FF8C  F00C    	movff	plusw1,btemp+11
  7691                           
  7692                           ;stkvar	_x @ sp[(-7)+0]
  7693  01915A  0EF9               	movlw	-7
  7694  01915C  50E3               	movf	plusw1,w,c
  7695  01915E  0F01               	addlw	1
  7696  019160  6E01               	movwf	btemp^0,c
  7697  019162  0EF9               	movlw	-7
  7698  019164  0060  F007  FFE3   	movff	btemp,plusw1
  7699  01916A  6A01               	clrf	btemp^0,c
  7700  01916C  0EFA               	movlw	-6
  7701  01916E  50E3               	movf	plusw1,w,c
  7702  019170  2001               	addwfc	btemp^0,w,c
  7703  019172  6E01               	movwf	btemp^0,c
  7704  019174  0EFA               	movlw	-6
  7705  019176  0060  F007  FFE3   	movff	btemp,plusw1
  7706  01917C  0EF9               	movlw	-7
  7707  01917E  006F FF8C  F009    	movff	plusw1,btemp+8
  7708  019184  0EFA               	movlw	-6
  7709  019186  006F FF8C  F00A    	movff	plusw1,btemp+9
  7710  01918C  500B               	movf	(btemp+10)^0,w,c
  7711  01918E  5C09               	subwf	(btemp+8)^0,w,c
  7712  019190  500C               	movf	(btemp+11)^0,w,c
  7713  019192  580A               	subwfb	(btemp+9)^0,w,c
  7714  019194  A0D8               	btfss	status,0,c
  7715  019196  D7BF               	goto	l11925
  7716                           
  7717                           ; BSR set to: 57
  7718                           ;daq.c: 376:   if (crcVal_save == CRC_CalculatedResultGet(0, 0x00))
  7719  019198  0E00               	movlw	0
  7720  01919A  6EE6               	movwf	postinc1,c
  7721  01919C  0E00               	movlw	0
  7722  01919E  6EE6               	movwf	postinc1,c
  7723  0191A0  0E00               	movlw	0
  7724  0191A2  6EE6               	movwf	postinc1,c
  7725  0191A4  EC01  F0CC         	call	_CRC_CalculatedResultGet	;wreg free
  7726                           
  7727                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  7728  0191A8  0EFF               	movlw	-1
  7729  0191AA  50E3               	movf	plusw1,w,c
  7730  0191AC  1801               	xorwf	btemp^0,w,c
  7731  0191AE  1002               	iorwf	(btemp+1)^0,w,c
  7732  0191B0  A4D8               	btfss	status,2,c
  7733  0191B2  D002               	goto	l11935
  7734                           
  7735                           ;daq.c: 377:    return 1;
  7736  0191B4  0E01               	movlw	1
  7737  0191B6  D001               	goto	L4
  7738  0191B8                     l11935:
  7739                           
  7740                           ;daq.c: 379:   return 0;
  7741  0191B8  0E00               	movlw	0
  7742  0191BA                     L4:
  7743  0191BA  6E01               	movwf	btemp^0,c
  7744                           
  7745                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7746  0191BC  0EF9               	movlw	249
  7747  0191BE  26E1               	addwf	fsr1l,f,c
  7748  0191C0  0EFF               	movlw	255
  7749  0191C2  22E2               	addwfc	fsr1h,f,c
  7750  0191C4  0012               	return		;funcret
  7751  0191C6                     __end_of_read_cal_data:
  7752                           	opt callstack 0
  7753                           
  7754 ;; *************** function _DATAEE_ReadByte *****************
  7755 ;; Defined at:
  7756 ;;		line 194 in file "mcc_generated_files/memory.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;  bAdd            2  [STACK] unsigned short 
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;		None
  7761 ;; Return value:  Size  Location     Type
  7762 ;;                  1  [STACK] unsigned char 
  7763 ;; Registers used:
  7764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  7765 ;; Tracked objects:
  7766 ;;		On entry : 0/39
  7767 ;;		On exit  : 0/0
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7774 ;;Total ram usage:        0 bytes
  7775 ;; Hardware stack levels used:    1
  7776 ;; Hardware stack levels required when called:   15
  7777 ;; This function calls:
  7778 ;;		Nothing
  7779 ;; This function is called by:
  7780 ;;		_read_cal_data
  7781 ;; This function uses a reentrant model
  7782 ;;
  7783                           
  7784                           	psect	text11
  7785  01CB5C                     __ptext11:
  7786                           	opt callstack 0
  7787  01CB5C                     _DATAEE_ReadByte:
  7788                           	opt callstack 14
  7789                           
  7790                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  7791                           ;stkvar	_bAdd @ sp[(0)+-2]
  7792                           
  7793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7794                           ;incstack = 0
  7795  01CB5C  0EFF               	movlw	255
  7796  01CB5E  24E1               	addwf	fsr1l,w,c
  7797  01CB60  6ED9               	movwf	fsr2l,c
  7798  01CB62  0EFF               	movlw	255
  7799  01CB64  20E2               	addwfc	fsr1h,w,c
  7800  01CB66  6EDA               	movwf	fsr2h,c
  7801  01CB68  50DF               	movf	indf2,w,c
  7802  01CB6A  0B03               	andlw	3
  7803  01CB6C  0139               	movlb	57	; () banked
  7804  01CB6E  6FE1               	movwf	225,b	;volatile
  7805                           
  7806                           ; BSR set to: 57
  7807                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  7808                           ;stkvar	_bAdd @ sp[(0)+-2]
  7809  01CB70  0EFE               	movlw	-2
  7810  01CB72  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  7811                           
  7812                           ; BSR set to: 57
  7813                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  7814  01CB78  0E3F               	movlw	-193
  7815  01CB7A  17E5               	andwf	229,f,b	;volsfr
  7816                           
  7817                           ; BSR set to: 57
  7818                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  7819  01CB7C  81E5               	bsf	229,0,b	;volsfr
  7820                           
  7821                           ; BSR set to: 57
  7822                           ;mcc_generated_files/memory.c: 200:     __nop();
  7823  01CB7E  F000               	nop	
  7824                           
  7825                           ;mcc_generated_files/memory.c: 201:     __nop();
  7826  01CB80  F000               	nop	
  7827                           
  7828                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  7829  01CB82  006E F78C  F001    	movff	14819,btemp	;volatile
  7830                           
  7831                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  7832  01CB88  52E5               	movf	postdec1,f,c
  7833  01CB8A  52E5               	movf	postdec1,f,c
  7834  01CB8C  0012               	return		;funcret
  7835  01CB8E                     __end_of_DATAEE_ReadByte:
  7836                           	opt callstack 0
  7837                           
  7838 ;; *************** function _init_port_dma *****************
  7839 ;; Defined at:
  7840 ;;		line 104 in file "eadog.c"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;		None
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;		None
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  1  [STACK] void 
  7847 ;; Registers used:
  7848 ;;		wreg, status,2
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/1
  7851 ;;		On exit  : 3F/3B
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7858 ;;Total ram usage:        0 bytes
  7859 ;; Hardware stack levels used:    1
  7860 ;; Hardware stack levels required when called:   15
  7861 ;; This function calls:
  7862 ;;		Nothing
  7863 ;; This function is called by:
  7864 ;;		_main
  7865 ;; This function uses a reentrant model
  7866 ;;
  7867                           
  7868                           	psect	text12
  7869  01CB8E                     __ptext12:
  7870                           	opt callstack 0
  7871  01CB8E                     _init_port_dma:
  7872                           	opt callstack 15
  7873                           
  7874                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7875                           
  7876                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7877                           ;incstack = 0
  7878  01CB8E  0E3F               	movlw	-193
  7879  01CB90  013B               	movlb	59	; () banked
  7880  01CB92  17DD               	andwf	221,f,b	;volatile
  7881                           
  7882                           ; BSR set to: 59
  7883                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7884  01CB94  9BDD               	bcf	221,5,b	;volatile
  7885                           
  7886                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7887  01CB96  51DD               	movf	221,w,b	;volatile
  7888  01CB98  0BF9               	andlw	-7
  7889  01CB9A  0902               	iorlw	2
  7890  01CB9C  6FDD               	movwf	221,b	;volatile
  7891                           
  7892                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7893  01CB9E  0EE7               	movlw	-25
  7894  01CBA0  17DD               	andwf	221,f,b	;volatile
  7895                           
  7896                           ; BSR set to: 59
  7897                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7898  01CBA2  81DD               	bsf	221,0,b	;volatile
  7899                           
  7900                           ; BSR set to: 59
  7901                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7902  01CBA4  9DDC               	bcf	220,6,b	;volatile
  7903                           
  7904                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7905  01CBA6  0E3D               	movlw	61
  7906  01CBA8  6FD1               	movwf	209,b	;volatile
  7907  01CBAA  0EEA               	movlw	234
  7908  01CBAC  6FD0               	movwf	208,b	;volatile
  7909                           
  7910                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7911  01CBAE  0EFF               	movlw	low _port_data
  7912  01CBB0  6FD9               	movwf	217,b	;volatile
  7913  01CBB2  0E05               	movlw	high _port_data
  7914  01CBB4  6FDA               	movwf	218,b	;volatile
  7915  01CBB6  0E00               	movlw	low (_port_data shr (0+16))
  7916  01CBB8  6FDB               	movwf	219,b	;volatile
  7917                           
  7918                           ; BSR set to: 59
  7919                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7920  01CBBA  9BDC               	bcf	220,5,b	;volatile
  7921                           
  7922                           ; BSR set to: 59
  7923                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7924  01CBBC  0012               	return		;funcret
  7925  01CBBE                     __end_of_init_port_dma:
  7926                           	opt callstack 0
  7927                           
  7928 ;; *************** function _init_display *****************
  7929 ;; Defined at:
  7930 ;;		line 38 in file "eadog.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;		None
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;		None
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  1  [STACK] void 
  7937 ;; Registers used:
  7938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7939 ;; Tracked objects:
  7940 ;;		On entry : 3F/3B
  7941 ;;		On exit  : 3F/3D
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7948 ;;Total ram usage:        0 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; Hardware stack levels required when called:   17
  7951 ;; This function calls:
  7952 ;;		_ringBufS_init
  7953 ;;		_send_lcd_cmd
  7954 ;;		_send_lcd_cmd_long
  7955 ;;		_send_lcd_data
  7956 ;;		_wdtdelay
  7957 ;; This function is called by:
  7958 ;;		_main
  7959 ;; This function uses a reentrant model
  7960 ;;
  7961                           
  7962                           	psect	text13
  7963  01AD42                     __ptext13:
  7964                           	opt callstack 0
  7965  01AD42                     _init_display:
  7966                           	opt callstack 13
  7967                           
  7968                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7969                           
  7970                           ; BSR set to: 59
  7971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7972                           ;incstack = 0
  7973  01AD42  0E94               	movlw	low _ring_buf1
  7974  01AD44  0101               	movlb	1	; () banked
  7975  01AD46  6FD6               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7976  01AD48  0E03               	movlw	high _ring_buf1
  7977  01AD4A  6FD7               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7978                           
  7979                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7980  01AD4C  0E00               	movlw	low _ring_buf2
  7981  01AD4E  6FD4               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7982  01AD50  0E04               	movlw	high _ring_buf2
  7983  01AD52  6FD5               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7984                           
  7985                           ; BSR set to: 1
  7986                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  7987  01AD54  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
  7988  01AD5A  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
  7989  01AD60  EC95  F0E6         	call	_ringBufS_init	;wreg free
  7990                           
  7991                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  7992  01AD64  0060  F753  FFE6   	movff	_spi_link+4,postinc1
  7993  01AD6A  0060  F757  FFE6   	movff	_spi_link+5,postinc1
  7994  01AD70  EC95  F0E6         	call	_ringBufS_init	;wreg free
  7995                           
  7996                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  7997  01AD74  84BE               	bsf	190,2,c	;volatile
  7998                           
  7999                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  8000  01AD76  013D               	movlb	61	; () banked
  8001  01AD78  9F14               	bcf	20,7,b	;volatile
  8002                           
  8003                           ; BSR set to: 61
  8004                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  8005  01AD7A  0E20               	movlw	32
  8006  01AD7C  6F15               	movwf	21,b	;volatile
  8007                           
  8008                           ; BSR set to: 61
  8009                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  8010  01AD7E  0E03               	movlw	3
  8011  01AD80  6F16               	movwf	22,b	;volatile
  8012                           
  8013                           ; BSR set to: 61
  8014                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  8015  01AD82  0E04               	movlw	4
  8016  01AD84  6F19               	movwf	25,b	;volatile
  8017                           
  8018                           ; BSR set to: 61
  8019                           ;eadog.c: 55:  SPI1CLK = 0x02;
  8020  01AD86  0E02               	movlw	2
  8021  01AD88  6F1C               	movwf	28,b	;volatile
  8022                           
  8023                           ; BSR set to: 61
  8024                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  8025  01AD8A  0E83               	movlw	131
  8026  01AD8C  6F14               	movwf	20,b	;volatile
  8027                           
  8028                           ; BSR set to: 61
  8029                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  8030  01AD8E  8F14               	bsf	20,7,b	;volatile
  8031                           
  8032                           ; BSR set to: 61
  8033                           ;eadog.c: 60:  wdtdelay(350000);
  8034  01AD90  0E30               	movlw	48
  8035  01AD92  6EE6               	movwf	postinc1,c
  8036  01AD94  0E57               	movlw	87
  8037  01AD96  6EE6               	movwf	postinc1,c
  8038  01AD98  0E05               	movlw	5
  8039  01AD9A  6EE6               	movwf	postinc1,c
  8040  01AD9C  0E00               	movlw	0
  8041  01AD9E  6EE6               	movwf	postinc1,c
  8042  01ADA0  ECC2  F0E1         	call	_wdtdelay	;wreg free
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  8046  01ADA4  0E46               	movlw	70
  8047  01ADA6  6EE6               	movwf	postinc1,c
  8048  01ADA8  ECFA  F0E3         	call	_send_lcd_cmd_long	;wreg free
  8049                           
  8050                           ; BSR set to: 0
  8051                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  8052  01ADAC  0E41               	movlw	65
  8053  01ADAE  6EE6               	movwf	postinc1,c
  8054  01ADB0  EC1A  F0E4         	call	_send_lcd_cmd	;wreg free
  8055                           
  8056                           ; BSR set to: 0
  8057                           ;eadog.c: 63:  wdtdelay(80);
  8058  01ADB4  0E50               	movlw	80
  8059  01ADB6  6EE6               	movwf	postinc1,c
  8060  01ADB8  0E00               	movlw	0
  8061  01ADBA  6EE6               	movwf	postinc1,c
  8062  01ADBC  0E00               	movlw	0
  8063  01ADBE  6EE6               	movwf	postinc1,c
  8064  01ADC0  0E00               	movlw	0
  8065  01ADC2  6EE6               	movwf	postinc1,c
  8066  01ADC4  ECC2  F0E1         	call	_wdtdelay	;wreg free
  8067                           
  8068                           ; BSR set to: 0
  8069                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  8070  01ADC8  0E53               	movlw	83
  8071  01ADCA  6EE6               	movwf	postinc1,c
  8072  01ADCC  EC1A  F0E4         	call	_send_lcd_cmd	;wreg free
  8073                           
  8074                           ; BSR set to: 0
  8075                           ;eadog.c: 65:  send_lcd_data(2);
  8076  01ADD0  0E02               	movlw	2
  8077  01ADD2  6EE6               	movwf	postinc1,c
  8078  01ADD4  ECC2  F0E7         	call	_send_lcd_data	;wreg free
  8079                           
  8080                           ; BSR set to: 0
  8081                           ;eadog.c: 66:  wdtdelay(80);
  8082  01ADD8  0E50               	movlw	80
  8083  01ADDA  6EE6               	movwf	postinc1,c
  8084  01ADDC  0E00               	movlw	0
  8085  01ADDE  6EE6               	movwf	postinc1,c
  8086  01ADE0  0E00               	movlw	0
  8087  01ADE2  6EE6               	movwf	postinc1,c
  8088  01ADE4  0E00               	movlw	0
  8089  01ADE6  6EE6               	movwf	postinc1,c
  8090  01ADE8  ECC2  F0E1         	call	_wdtdelay	;wreg free
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  8094  01ADEC  0E51               	movlw	81
  8095  01ADEE  6EE6               	movwf	postinc1,c
  8096  01ADF0  ECFA  F0E3         	call	_send_lcd_cmd_long	;wreg free
  8097                           
  8098                           ; BSR set to: 0
  8099                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  8100  01ADF4  013D               	movlb	61	; () banked
  8101  01ADF6  9F14               	bcf	20,7,b	;volatile
  8102                           
  8103                           ; BSR set to: 61
  8104                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  8105  01ADF8  0E02               	movlw	2
  8106  01ADFA  6F16               	movwf	22,b	;volatile
  8107                           
  8108                           ; BSR set to: 61
  8109                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  8110  01ADFC  8F14               	bsf	20,7,b	;volatile
  8111                           
  8112                           ; BSR set to: 61
  8113                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  8114  01ADFE  931A               	bcf	26,1,b	;volatile
  8115                           
  8116                           ; BSR set to: 61
  8117                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  8118  01AE00  0E3F               	movlw	-193
  8119  01AE02  013B               	movlb	59	; () banked
  8120  01AE04  17FD               	andwf	253,f,b	;volatile
  8121                           
  8122                           ; BSR set to: 59
  8123                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  8124  01AE06  9BFD               	bcf	253,5,b	;volatile
  8125                           
  8126                           ; BSR set to: 59
  8127                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  8128  01AE08  51FD               	movf	253,w,b	;volatile
  8129  01AE0A  0BF9               	andlw	-7
  8130  01AE0C  0902               	iorlw	2
  8131  01AE0E  6FFD               	movwf	253,b	;volatile
  8132                           
  8133                           ; BSR set to: 59
  8134                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  8135  01AE10  0EE7               	movlw	-25
  8136  01AE12  17FD               	andwf	253,f,b	;volatile
  8137                           
  8138                           ; BSR set to: 59
  8139                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  8140  01AE14  81FD               	bsf	253,0,b	;volatile
  8141                           
  8142                           ; BSR set to: 59
  8143                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  8144  01AE16  0E94               	movlw	low _ring_buf1
  8145  01AE18  6FF9               	movwf	249,b	;volatile
  8146  01AE1A  0E03               	movlw	high _ring_buf1
  8147  01AE1C  6FFA               	movwf	250,b	;volatile
  8148  01AE1E  0E00               	movlw	low (_ring_buf1 shr (0+16))
  8149  01AE20  6FFB               	movwf	251,b	;volatile
  8150                           
  8151                           ; BSR set to: 59
  8152                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  8153  01AE22  9BFC               	bcf	252,5,b	;volatile
  8154                           
  8155                           ; BSR set to: 59
  8156                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  8157  01AE24  013D               	movlb	61	; () banked
  8158  01AE26  831A               	bsf	26,1,b	;volatile
  8159                           
  8160                           ; BSR set to: 61
  8161                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  8162  01AE28  94BE               	bcf	190,2,c	;volatile
  8163                           
  8164                           ; BSR set to: 61
  8165                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8166  01AE2A  0012               	return		;funcret
  8167  01AE2C                     __end_of_init_display:
  8168                           	opt callstack 0
  8169                           
  8170 ;; *************** function _send_lcd_data *****************
  8171 ;; Defined at:
  8172 ;;		line 123 in file "eadog.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;  data            1  [STACK] const unsigned char 
  8175 ;; Auto vars:     Size  Location     Type
  8176 ;;		None
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  1  [STACK] void 
  8179 ;; Registers used:
  8180 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8181 ;; Tracked objects:
  8182 ;;		On entry : 3F/0
  8183 ;;		On exit  : 3F/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8190 ;;Total ram usage:        0 bytes
  8191 ;; Hardware stack levels used:    1
  8192 ;; Hardware stack levels required when called:   16
  8193 ;; This function calls:
  8194 ;;		_SPI1_Exchange8bit
  8195 ;;		_wdtdelay
  8196 ;; This function is called by:
  8197 ;;		_init_display
  8198 ;; This function uses a reentrant model
  8199 ;;
  8200                           
  8201                           	psect	text14
  8202  01CF84                     __ptext14:
  8203                           	opt callstack 0
  8204  01CF84                     _send_lcd_data:
  8205                           	opt callstack 13
  8206                           
  8207                           ; BSR set to: 61
  8208                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8209                           ;incstack = 0
  8210                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  8211  01CF84  94BC               	bcf	188,2,c	;volatile
  8212                           
  8213                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  8214                           ;stkvar	_data @ sp[(0)+-1]
  8215  01CF86  0EFF               	movlw	-1
  8216  01CF88  50E3               	movf	plusw1,w,c
  8217  01CF8A  6EE6               	movwf	postinc1,c
  8218  01CF8C  EC81  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8219                           
  8220                           ; BSR set to: 57
  8221                           ;eadog.c: 127:  wdtdelay(8);
  8222  01CF90  0E08               	movlw	8
  8223  01CF92  6EE6               	movwf	postinc1,c
  8224  01CF94  0E00               	movlw	0
  8225  01CF96  6EE6               	movwf	postinc1,c
  8226  01CF98  0E00               	movlw	0
  8227  01CF9A  6EE6               	movwf	postinc1,c
  8228  01CF9C  0E00               	movlw	0
  8229  01CF9E  6EE6               	movwf	postinc1,c
  8230  01CFA0  ECC2  F0E1         	call	_wdtdelay	;wreg free
  8231                           
  8232                           ; BSR set to: 0
  8233                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  8234  01CFA4  52E5               	movf	postdec1,f,c
  8235  01CFA6  0012               	return		;funcret
  8236  01CFA8                     __end_of_send_lcd_data:
  8237                           	opt callstack 0
  8238                           
  8239 ;; *************** function _send_lcd_cmd_long *****************
  8240 ;; Defined at:
  8241 ;;		line 139 in file "eadog.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;  cmd             1  [STACK] const unsigned char 
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;		None
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  1  [STACK] void 
  8248 ;; Registers used:
  8249 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8250 ;; Tracked objects:
  8251 ;;		On entry : 3F/0
  8252 ;;		On exit  : 3F/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8259 ;;Total ram usage:        0 bytes
  8260 ;; Hardware stack levels used:    1
  8261 ;; Hardware stack levels required when called:   16
  8262 ;; This function calls:
  8263 ;;		_SPI1_Exchange8bit
  8264 ;;		_wdtdelay
  8265 ;; This function is called by:
  8266 ;;		_init_display
  8267 ;; This function uses a reentrant model
  8268 ;;
  8269                           
  8270                           	psect	text15
  8271  01C7F4                     __ptext15:
  8272                           	opt callstack 0
  8273  01C7F4                     _send_lcd_cmd_long:
  8274                           	opt callstack 13
  8275                           
  8276                           ; BSR set to: 0
  8277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8278                           ;incstack = 0
  8279                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  8280  01C7F4  94BC               	bcf	188,2,c	;volatile
  8281                           
  8282                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  8283  01C7F6  0EFE               	movlw	254
  8284  01C7F8  6EE6               	movwf	postinc1,c
  8285  01C7FA  EC81  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8286                           
  8287                           ; BSR set to: 57
  8288                           ;eadog.c: 143:  wdtdelay(8);
  8289  01C7FE  0E08               	movlw	8
  8290  01C800  6EE6               	movwf	postinc1,c
  8291  01C802  0E00               	movlw	0
  8292  01C804  6EE6               	movwf	postinc1,c
  8293  01C806  0E00               	movlw	0
  8294  01C808  6EE6               	movwf	postinc1,c
  8295  01C80A  0E00               	movlw	0
  8296  01C80C  6EE6               	movwf	postinc1,c
  8297  01C80E  ECC2  F0E1         	call	_wdtdelay	;wreg free
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  8301                           ;stkvar	_cmd @ sp[(0)+-1]
  8302  01C812  0EFF               	movlw	-1
  8303  01C814  50E3               	movf	plusw1,w,c
  8304  01C816  6EE6               	movwf	postinc1,c
  8305  01C818  EC81  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8306                           
  8307                           ;eadog.c: 145:  wdtdelay(800);
  8308  01C81C  0E20               	movlw	32
  8309  01C81E  6EE6               	movwf	postinc1,c
  8310  01C820  0E03               	movlw	3
  8311  01C822  6EE6               	movwf	postinc1,c
  8312  01C824  0E00               	movlw	0
  8313  01C826  6EE6               	movwf	postinc1,c
  8314  01C828  0E00               	movlw	0
  8315  01C82A  6EE6               	movwf	postinc1,c
  8316  01C82C  ECC2  F0E1         	call	_wdtdelay	;wreg free
  8317                           
  8318                           ; BSR set to: 0
  8319                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8320  01C830  52E5               	movf	postdec1,f,c
  8321  01C832  0012               	return		;funcret
  8322  01C834                     __end_of_send_lcd_cmd_long:
  8323                           	opt callstack 0
  8324                           
  8325 ;; *************** function _send_lcd_cmd *****************
  8326 ;; Defined at:
  8327 ;;		line 130 in file "eadog.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;  cmd             1  [STACK] const unsigned char 
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;		None
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  1  [STACK] void 
  8334 ;; Registers used:
  8335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8336 ;; Tracked objects:
  8337 ;;		On entry : 3F/0
  8338 ;;		On exit  : 3F/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8345 ;;Total ram usage:        0 bytes
  8346 ;; Hardware stack levels used:    1
  8347 ;; Hardware stack levels required when called:   16
  8348 ;; This function calls:
  8349 ;;		_SPI1_Exchange8bit
  8350 ;;		_wdtdelay
  8351 ;; This function is called by:
  8352 ;;		_init_display
  8353 ;; This function uses a reentrant model
  8354 ;;
  8355                           
  8356                           	psect	text16
  8357  01C834                     __ptext16:
  8358                           	opt callstack 0
  8359  01C834                     _send_lcd_cmd:
  8360                           	opt callstack 13
  8361                           
  8362                           ; BSR set to: 0
  8363                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8364                           ;incstack = 0
  8365                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  8366  01C834  94BC               	bcf	188,2,c	;volatile
  8367                           
  8368                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  8369  01C836  0EFE               	movlw	254
  8370  01C838  6EE6               	movwf	postinc1,c
  8371  01C83A  EC81  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8372                           
  8373                           ; BSR set to: 57
  8374                           ;eadog.c: 134:  wdtdelay(8);
  8375  01C83E  0E08               	movlw	8
  8376  01C840  6EE6               	movwf	postinc1,c
  8377  01C842  0E00               	movlw	0
  8378  01C844  6EE6               	movwf	postinc1,c
  8379  01C846  0E00               	movlw	0
  8380  01C848  6EE6               	movwf	postinc1,c
  8381  01C84A  0E00               	movlw	0
  8382  01C84C  6EE6               	movwf	postinc1,c
  8383  01C84E  ECC2  F0E1         	call	_wdtdelay	;wreg free
  8384                           
  8385                           ; BSR set to: 0
  8386                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  8387                           ;stkvar	_cmd @ sp[(0)+-1]
  8388  01C852  0EFF               	movlw	-1
  8389  01C854  50E3               	movf	plusw1,w,c
  8390  01C856  6EE6               	movwf	postinc1,c
  8391  01C858  EC81  F0E8         	call	_SPI1_Exchange8bit	;wreg free
  8392                           
  8393                           ;eadog.c: 136:  wdtdelay(8);
  8394  01C85C  0E08               	movlw	8
  8395  01C85E  6EE6               	movwf	postinc1,c
  8396  01C860  0E00               	movlw	0
  8397  01C862  6EE6               	movwf	postinc1,c
  8398  01C864  0E00               	movlw	0
  8399  01C866  6EE6               	movwf	postinc1,c
  8400  01C868  0E00               	movlw	0
  8401  01C86A  6EE6               	movwf	postinc1,c
  8402  01C86C  ECC2  F0E1         	call	_wdtdelay	;wreg free
  8403                           
  8404                           ; BSR set to: 0
  8405                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  8406  01C870  52E5               	movf	postdec1,f,c
  8407  01C872  0012               	return		;funcret
  8408  01C874                     __end_of_send_lcd_cmd:
  8409                           	opt callstack 0
  8410                           
  8411 ;; *************** function _SPI1_Exchange8bit *****************
  8412 ;; Defined at:
  8413 ;;		line 79 in file "mcc_generated_files/spi1.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  data            1  [STACK] unsigned char 
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;		None
  8418 ;; Return value:  Size  Location     Type
  8419 ;;                  1  [STACK] unsigned char 
  8420 ;; Registers used:
  8421 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  8422 ;; Tracked objects:
  8423 ;;		On entry : 0/0
  8424 ;;		On exit  : 3F/39
  8425 ;;		Unchanged: 0/0
  8426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8431 ;;Total ram usage:        0 bytes
  8432 ;; Hardware stack levels used:    1
  8433 ;; Hardware stack levels required when called:   15
  8434 ;; This function calls:
  8435 ;;		Nothing
  8436 ;; This function is called by:
  8437 ;;		_send_lcd_data
  8438 ;;		_send_lcd_cmd
  8439 ;;		_send_lcd_cmd_long
  8440 ;;		_set_dac
  8441 ;; This function uses a reentrant model
  8442 ;;
  8443                           
  8444                           	psect	text17
  8445  01D102                     __ptext17:
  8446                           	opt callstack 0
  8447  01D102                     _SPI1_Exchange8bit:
  8448                           	opt callstack 14
  8449                           
  8450                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  8451                           
  8452                           ; BSR set to: 0
  8453                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8454                           ;incstack = 0
  8455  01D102  0E01               	movlw	1
  8456  01D104  013D               	movlb	61	; () banked
  8457  01D106  6F12               	movwf	18,b	;volatile
  8458                           
  8459                           ; BSR set to: 61
  8460                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  8461                           ;stkvar	_data @ sp[(0)+-1]
  8462  01D108  0EFF               	movlw	-1
  8463  01D10A  006F FF8F FD11     	movff	plusw1,15633	;volatile
  8464  01D110                     l809:
  8465                           
  8466                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  8467  01D110  0139               	movlb	57	; () banked
  8468  01D112  A9A2               	btfss	162,4,b	;volatile
  8469  01D114  D7FD               	goto	l809
  8470                           
  8471                           ; BSR set to: 57
  8472                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  8473  01D116  006F F440  F001    	movff	15632,btemp	;volatile
  8474                           
  8475                           ; BSR set to: 57
  8476                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8477  01D11C  52E5               	movf	postdec1,f,c
  8478  01D11E  0012               	return		;funcret
  8479  01D120                     __end_of_SPI1_Exchange8bit:
  8480                           	opt callstack 0
  8481                           
  8482 ;; *************** function _ringBufS_init *****************
  8483 ;; Defined at:
  8484 ;;		line 22 in file "ringbufs.c"
  8485 ;; Parameters:    Size  Location     Type
  8486 ;;  _this           2  [STACK] PTR volatile struct ring
  8487 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;		None
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  1  [STACK] void 
  8492 ;; Registers used:
  8493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/1
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8503 ;;Total ram usage:        0 bytes
  8504 ;; Hardware stack levels used:    1
  8505 ;; Hardware stack levels required when called:   16
  8506 ;; This function calls:
  8507 ;;		_memset
  8508 ;; This function is called by:
  8509 ;;		_init_display
  8510 ;; This function uses a reentrant model
  8511 ;;
  8512                           
  8513                           	psect	text18
  8514  01CD2A                     __ptext18:
  8515                           	opt callstack 0
  8516  01CD2A                     _ringBufS_init:
  8517                           	opt callstack 13
  8518                           
  8519                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  8520                           
  8521                           ; BSR set to: 57
  8522                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8523                           ;incstack = 0
  8524  01CD2A  0E43               	movlw	67
  8525  01CD2C  6EE6               	movwf	postinc1,c
  8526  01CD2E  0E00               	movlw	0
  8527  01CD30  6EE6               	movwf	postinc1,c
  8528  01CD32  0E00               	movlw	0
  8529  01CD34  6EE6               	movwf	postinc1,c
  8530  01CD36  0E00               	movlw	0
  8531  01CD38  6EE6               	movwf	postinc1,c
  8532                           
  8533                           ;stkvar	__this @ sp[(-4)+-2]
  8534  01CD3A  0EFA               	movlw	-6
  8535  01CD3C  006F FF8F FFE6     	movff	plusw1,postinc1
  8536  01CD42  006F FF8F FFE6     	movff	plusw1,postinc1
  8537  01CD48  EC07  F0BA         	call	_memset	;wreg free
  8538                           
  8539                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8540  01CD4C  52E5               	movf	postdec1,f,c
  8541  01CD4E  52E5               	movf	postdec1,f,c
  8542  01CD50  0012               	return		;funcret
  8543  01CD52                     __end_of_ringBufS_init:
  8544                           	opt callstack 0
  8545                           
  8546 ;; *************** function _init_bsoc *****************
  8547 ;; Defined at:
  8548 ;;		line 110 in file "bsoc.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;		None
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;		None
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  1  [STACK] void 
  8555 ;; Registers used:
  8556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8557 ;; Tracked objects:
  8558 ;;		On entry : 0/0
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8566 ;;Total ram usage:        0 bytes
  8567 ;; Hardware stack levels used:    1
  8568 ;; Hardware stack levels required when called:   18
  8569 ;; This function calls:
  8570 ;;		_TMR3_SetInterruptHandler
  8571 ;;		_Volts_to_SOC
  8572 ;;		___fldiv
  8573 ;;		___flmul
  8574 ;;		___fltol
  8575 ;;		___xxtofl
  8576 ;;		_conv_raw_result
  8577 ;; This function is called by:
  8578 ;;		_main
  8579 ;; This function uses a reentrant model
  8580 ;;
  8581                           
  8582                           	psect	text19
  8583  018184                     __ptext19:
  8584                           	opt callstack 0
  8585  018184                     _init_bsoc:
  8586                           	opt callstack 12
  8587                           
  8588                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  8589                           
  8590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8591                           ;incstack = 0
  8592  018184  0E00               	movlw	0
  8593  018186  6EE6               	movwf	postinc1,c
  8594  018188  0E00               	movlw	0
  8595  01818A  6EE6               	movwf	postinc1,c
  8596  01818C  0E7A               	movlw	122
  8597  01818E  6EE6               	movwf	postinc1,c
  8598  018190  0E44               	movlw	68
  8599  018192  6EE6               	movwf	postinc1,c
  8600  018194  0E00               	movlw	0
  8601  018196  6EE6               	movwf	postinc1,c
  8602  018198  0E04               	movlw	4
  8603  01819A  6EE6               	movwf	postinc1,c
  8604  01819C  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  8605  0181A0  0060  F007  FFE6   	movff	btemp,postinc1
  8606  0181A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8607  0181AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8608  0181B2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8609  0181B8  ECBA  F0CC         	call	___fltol	;wreg free
  8610  0181BC  0060  F007  FFE6   	movff	btemp,postinc1
  8611  0181C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8612  0181C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8613  0181CE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8614  0181D4  0E00               	movlw	0
  8615  0181D6  6EE6               	movwf	postinc1,c
  8616  0181D8  EC2C  F0C6         	call	___xxtofl	;wreg free
  8617  0181DC  0060  F007  FFE6   	movff	btemp,postinc1
  8618  0181E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8619  0181E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8620  0181EE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8621  0181F4  EC6E  F09F         	call	___flmul	;wreg free
  8622  0181F8  0060  F007  FFE6   	movff	btemp,postinc1
  8623  0181FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8624  018204  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8625  01820A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8626  018210  ECBA  F0CC         	call	___fltol	;wreg free
  8627  018214  0060  F007  FFE6   	movff	btemp,postinc1
  8628  01821A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8629  018220  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8630  018226  0060  F013  FFE6   	movff	btemp+3,postinc1
  8631  01822C  EC22  F0D9         	call	_Volts_to_SOC	;wreg free
  8632  018230  0060  F004  F8B5   	movff	btemp,_C+182	;volatile
  8633  018236  0060  F008  F8B6   	movff	btemp+1,_C+183	;volatile
  8634                           
  8635                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  8636  01823C  EE22  F08B         	lfsr	2,_C+140	;volatile
  8637  018240  006F FF7B FFE6     	movff	postinc2,postinc1
  8638  018246  006F FF7B FFE6     	movff	postinc2,postinc1
  8639  01824C  006F FF7B FFE6     	movff	postinc2,postinc1
  8640  018252  006F FF7B FFE6     	movff	postinc2,postinc1
  8641  018258  0E00               	movlw	0
  8642  01825A  6EE6               	movwf	postinc1,c
  8643  01825C  0E00               	movlw	0
  8644  01825E  6EE6               	movwf	postinc1,c
  8645  018260  0EC8               	movlw	200
  8646  018262  6EE6               	movwf	postinc1,c
  8647  018264  0E42               	movlw	66
  8648  018266  6EE6               	movwf	postinc1,c
  8649  018268  0E00               	movlw	0
  8650  01826A  6EE6               	movwf	postinc1,c
  8651  01826C  0E00               	movlw	0
  8652  01826E  6EE6               	movwf	postinc1,c
  8653  018270  0E7A               	movlw	122
  8654  018272  6EE6               	movwf	postinc1,c
  8655  018274  0E44               	movlw	68
  8656  018276  6EE6               	movwf	postinc1,c
  8657  018278  0E00               	movlw	0
  8658  01827A  6EE6               	movwf	postinc1,c
  8659  01827C  0E04               	movlw	4
  8660  01827E  6EE6               	movwf	postinc1,c
  8661  018280  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  8662  018284  0060  F007  FFE6   	movff	btemp,postinc1
  8663  01828A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8664  018290  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8665  018296  0060  F013  FFE6   	movff	btemp+3,postinc1
  8666  01829C  ECBA  F0CC         	call	___fltol	;wreg free
  8667  0182A0  0060  F007  FFE6   	movff	btemp,postinc1
  8668  0182A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8669  0182AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8670  0182B2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8671  0182B8  0E00               	movlw	0
  8672  0182BA  6EE6               	movwf	postinc1,c
  8673  0182BC  EC2C  F0C6         	call	___xxtofl	;wreg free
  8674  0182C0  0060  F007  FFE6   	movff	btemp,postinc1
  8675  0182C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8676  0182CC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8677  0182D2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8678  0182D8  EC6E  F09F         	call	___flmul	;wreg free
  8679  0182DC  0060  F007  FFE6   	movff	btemp,postinc1
  8680  0182E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8681  0182E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8682  0182EE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8683  0182F4  ECBA  F0CC         	call	___fltol	;wreg free
  8684  0182F8  0060  F007  FFE6   	movff	btemp,postinc1
  8685  0182FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8686  018304  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8687  01830A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8688  018310  EC22  F0D9         	call	_Volts_to_SOC	;wreg free
  8689  018314  0060  F004  F00B   	movff	btemp,btemp+10
  8690  01831A  0060  F008  F00C   	movff	btemp+1,btemp+11
  8691  018320  500B               	movf	(btemp+10)^0,w,c
  8692  018322  6E05               	movwf	(btemp+4)^0,c
  8693  018324  500C               	movf	(btemp+11)^0,w,c
  8694  018326  6E06               	movwf	(btemp+5)^0,c
  8695  018328  6A07               	clrf	(btemp+6)^0,c
  8696  01832A  6A08               	clrf	(btemp+7)^0,c
  8697  01832C  0060  F017  FFE6   	movff	btemp+4,postinc1
  8698  018332  0060  F01B  FFE6   	movff	btemp+5,postinc1
  8699  018338  0060  F01F  FFE6   	movff	btemp+6,postinc1
  8700  01833E  0060  F023  FFE6   	movff	btemp+7,postinc1
  8701  018344  0E00               	movlw	0
  8702  018346  6EE6               	movwf	postinc1,c
  8703  018348  EC2C  F0C6         	call	___xxtofl	;wreg free
  8704  01834C  0060  F007  FFE6   	movff	btemp,postinc1
  8705  018352  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8706  018358  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8707  01835E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8708  018364  EC61  F0A7         	call	___fldiv	;wreg free
  8709  018368  0060  F007  FFE6   	movff	btemp,postinc1
  8710  01836E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8711  018374  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8712  01837A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8713  018380  EC6E  F09F         	call	___flmul	;wreg free
  8714  018384  0060  F004  F88F   	movff	btemp,_C+144	;volatile
  8715  01838A  0060  F008  F890   	movff	btemp+1,_C+145	;volatile
  8716  018390  0060  F00C  F891   	movff	btemp+2,_C+146	;volatile
  8717  018396  0060  F010  F892   	movff	btemp+3,_C+147	;volatile
  8718                           
  8719                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  8720  01839C  EE22  F08F         	lfsr	2,_C+144	;volatile
  8721  0183A0  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
  8722  0183A6  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
  8723  0183AC  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
  8724  0183B2  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
  8725                           
  8726                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  8727  0183B8  0E6E               	movlw	low _calc_bsoc
  8728  0183BA  6EE6               	movwf	postinc1,c
  8729  0183BC  0E34               	movlw	high _calc_bsoc
  8730  0183BE  6EE6               	movwf	postinc1,c
  8731  0183C0  0E01               	movlw	low (_calc_bsoc shr (0+16))
  8732  0183C2  6EE6               	movwf	postinc1,c
  8733  0183C4  EC21  F0E7         	call	_TMR3_SetInterruptHandler	;wreg free
  8734                           
  8735                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8736  0183C8  0012               	return		;funcret
  8737  0183CA                     __end_of_init_bsoc:
  8738                           	opt callstack 0
  8739                           
  8740 ;; *************** function _Volts_to_SOC *****************
  8741 ;; Defined at:
  8742 ;;		line 175 in file "bsoc.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;  cvoltage        4  [STACK] const unsigned long 
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;  soc             2  [STACK] unsigned short 
  8747 ;;  slot            1  [STACK] unsigned char 
  8748 ;; Return value:  Size  Location     Type
  8749 ;;                  2  [STACK] unsigned short 
  8750 ;; Registers used:
  8751 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8752 ;; Tracked objects:
  8753 ;;		On entry : 0/0
  8754 ;;		On exit  : 0/0
  8755 ;;		Unchanged: 0/0
  8756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8761 ;;Total ram usage:        0 bytes
  8762 ;; Hardware stack levels used:    1
  8763 ;; Hardware stack levels required when called:   15
  8764 ;; This function calls:
  8765 ;;		Nothing
  8766 ;; This function is called by:
  8767 ;;		_init_bsoc
  8768 ;; This function uses a reentrant model
  8769 ;;
  8770                           
  8771                           	psect	text20
  8772  01B244                     __ptext20:
  8773                           	opt callstack 0
  8774  01B244                     _Volts_to_SOC:
  8775                           	opt callstack 0
  8776                           
  8777                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8778  01B244  52E6               	movf	postinc1,f,c
  8779  01B246  52E6               	movf	postinc1,f,c
  8780  01B248  52E6               	movf	postinc1,f,c
  8781                           
  8782                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  8783                           ;stkvar	_soc @ sp[(-3)+0]
  8784                           
  8785                           ;incstack = 0
  8786  01B24A  0EFD               	movlw	-3
  8787  01B24C  6AE3               	clrf	plusw1,c
  8788  01B24E  0EFE               	movlw	-2
  8789  01B250  6AE3               	clrf	plusw1,c
  8790                           
  8791                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  8792                           ;stkvar	_slot @ sp[(-3)+2]
  8793  01B252  0EFF               	movlw	-1
  8794  01B254  6AE3               	clrf	plusw1,c
  8795  01B256                     l11655:
  8796                           
  8797                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8798                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8799                           ;stkvar	_slot @ sp[(-3)+2]
  8800  01B256  0EFF               	movlw	-1
  8801  01B258  50E3               	movf	plusw1,w,c
  8802  01B25A  0D08               	mullw	8
  8803  01B25C  0EE3               	movlw	low _BVSOC_TABLE
  8804  01B25E  24F3               	addwf	243,w,c
  8805  01B260  6EF6               	movwf	tblptrl,c
  8806  01B262  0EF8               	movlw	high _BVSOC_TABLE
  8807  01B264  20F4               	addwfc	244,w,c
  8808  01B266  6EF7               	movwf	tblptrh,c
  8809  01B268                     	if	1	;There are 3 active tblptr bytes
  8810  01B268  6AF8               	clrf	tblptru,c
  8811  01B26A  0E00               	movlw	low (__mediumconst shr (0+16))
  8812  01B26C  22F8               	addwfc	tblptru,f,c
  8813  01B26E                     	endif
  8814  01B26E  0EF9               	movlw	-7
  8815  01B270  50E3               	movf	plusw1,w,c
  8816  01B272  0009               	tblrd		*+
  8817  01B274  5CF5               	subwf	tablat,w,c
  8818  01B276  0EFA               	movlw	-6
  8819  01B278  50E3               	movf	plusw1,w,c
  8820  01B27A  0009               	tblrd		*+
  8821  01B27C  58F5               	subwfb	tablat,w,c
  8822  01B27E  0EFB               	movlw	-5
  8823  01B280  50E3               	movf	plusw1,w,c
  8824  01B282  0009               	tblrd		*+
  8825  01B284  58F5               	subwfb	tablat,w,c
  8826  01B286  0EFC               	movlw	-4
  8827  01B288  50E3               	movf	plusw1,w,c
  8828  01B28A  0009               	tblrd		*+
  8829  01B28C  58F5               	subwfb	tablat,w,c
  8830  01B28E  B0D8               	btfsc	status,0,c
  8831  01B290  D020               	goto	l11659
  8832                           
  8833                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  8834                           ;stkvar	_slot @ sp[(-3)+2]
  8835  01B292  0EFF               	movlw	-1
  8836  01B294  50E3               	movf	plusw1,w,c
  8837  01B296  0D08               	mullw	8
  8838  01B298  0E04               	movlw	4
  8839  01B29A  26F3               	addwf	243,f,c
  8840  01B29C  0E00               	movlw	0
  8841  01B29E  22F4               	addwfc	244,f,c
  8842  01B2A0  0EE3               	movlw	low _BVSOC_TABLE
  8843  01B2A2  24F3               	addwf	243,w,c
  8844  01B2A4  6EF6               	movwf	tblptrl,c
  8845  01B2A6  0EF8               	movlw	high _BVSOC_TABLE
  8846  01B2A8  20F4               	addwfc	244,w,c
  8847  01B2AA  6EF7               	movwf	tblptrh,c
  8848  01B2AC                     	if	1	;There are 3 active tblptr bytes
  8849  01B2AC  6AF8               	clrf	tblptru,c
  8850  01B2AE  0E00               	movlw	low (__mediumconst shr (0+16))
  8851  01B2B0  22F8               	addwfc	tblptru,f,c
  8852  01B2B2                     	endif
  8853  01B2B2  0009               	tblrd		*+
  8854  01B2B4  006F FFD4  F00B    	movff	tablat,btemp+10
  8855  01B2BA  0009               	tblrd		*+
  8856  01B2BC  006F FFD4  F00C    	movff	tablat,btemp+11
  8857                           
  8858                           ;stkvar	_soc @ sp[(-3)+0]
  8859  01B2C2  0EFD               	movlw	-3
  8860  01B2C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8861  01B2CA  0EFE               	movlw	-2
  8862  01B2CC  0060  F033  FFE3   	movff	btemp+11,plusw1
  8863  01B2D2                     l11659:
  8864                           
  8865                           ;bsoc.c: 187:  }
  8866                           ;stkvar	_slot @ sp[(-3)+2]
  8867  01B2D2  0EFF               	movlw	-1
  8868  01B2D4  2AE3               	incf	plusw1,f,c
  8869                           
  8870                           ;stkvar	_slot @ sp[(-3)+2]
  8871  01B2D6  0EFF               	movlw	-1
  8872  01B2D8  006F FF8C  F001    	movff	plusw1,btemp
  8873  01B2DE  0E19               	movlw	25
  8874  01B2E0  6401               	cpfsgt	btemp^0,c
  8875  01B2E2  D7B9               	goto	l11655
  8876                           
  8877                           ;bsoc.c: 188:  return soc;
  8878                           ;stkvar	_soc @ sp[(-3)+0]
  8879  01B2E4  0EFD               	movlw	-3
  8880  01B2E6  006F FF8C  F001    	movff	plusw1,btemp
  8881  01B2EC  0EFE               	movlw	-2
  8882  01B2EE  006F FF8C  F002    	movff	plusw1,btemp+1
  8883                           
  8884                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8885  01B2F4  0EF9               	movlw	249
  8886  01B2F6  26E1               	addwf	fsr1l,f,c
  8887  01B2F8  0EFF               	movlw	255
  8888  01B2FA  22E2               	addwfc	fsr1h,f,c
  8889  01B2FC  0012               	return		;funcret
  8890  01B2FE                     __end_of_Volts_to_SOC:
  8891                           	opt callstack 0
  8892                           
  8893 ;; *************** function _hid_display *****************
  8894 ;; Defined at:
  8895 ;;		line 22 in file "hid.c"
  8896 ;; Parameters:    Size  Location     Type
  8897 ;;  h               2  [STACK] PTR struct H_data
  8898 ;;		 -> H(9), 
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;		None
  8901 ;; Return value:  Size  Location     Type
  8902 ;;                  2  [STACK] PTR struct H_data
  8903 ;; Registers used:
  8904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8905 ;; Tracked objects:
  8906 ;;		On entry : 3F/39
  8907 ;;		On exit  : 0/0
  8908 ;;		Unchanged: 0/0
  8909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8914 ;;Total ram usage:        0 bytes
  8915 ;; Hardware stack levels used:    1
  8916 ;; Hardware stack levels required when called:   17
  8917 ;; This function calls:
  8918 ;;		_hid_input
  8919 ;; This function is called by:
  8920 ;;		_main
  8921 ;; This function uses a reentrant model
  8922 ;;
  8923                           
  8924                           	psect	text21
  8925  01882A                     __ptext21:
  8926                           	opt callstack 0
  8927  01882A                     _hid_display:
  8928                           	opt callstack 13
  8929                           
  8930                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  8931                           ;stkvar	_h @ sp[(0)+-2]
  8932                           
  8933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8934                           ;incstack = 0
  8935  01882A  0EFE               	movlw	-2
  8936  01882C  006F FF8F FFE6     	movff	plusw1,postinc1
  8937  018832  006F FF8F FFE6     	movff	plusw1,postinc1
  8938  018838  ECBD  F0D0         	call	_hid_input	;wreg free
  8939                           
  8940                           ;hid.c: 26:  switch (h->h_state) {
  8941  01883C  D0E6               	goto	l14267
  8942  01883E                     l14241:
  8943                           
  8944                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  8945                           ;stkvar	_h @ sp[(0)+-2]
  8946  01883E  0EFE               	movlw	-2
  8947  018840  006F FF8C  F00B    	movff	plusw1,btemp+10
  8948  018846  0EFF               	movlw	-1
  8949  018848  006F FF8C  F00C    	movff	plusw1,btemp+11
  8950  01884E  0E01               	movlw	1
  8951  018850  240B               	addwf	(btemp+10)^0,w,c
  8952  018852  6ED9               	movwf	fsr2l,c
  8953  018854  0E00               	movlw	0
  8954  018856  200C               	addwfc	(btemp+11)^0,w,c
  8955  018858  6EDA               	movwf	fsr2h,c
  8956  01885A  0E01               	movlw	1
  8957  01885C  6EDF               	movwf	indf2,c
  8958                           
  8959                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  8960                           ;stkvar	_h @ sp[(0)+-2]
  8961  01885E  0EFE               	movlw	-2
  8962  018860  006F FF8F FFD9     	movff	plusw1,fsr2l
  8963  018866  0EFF               	movlw	-1
  8964  018868  006F FF8F FFDA     	movff	plusw1,fsr2h
  8965  01886E  0E00               	movlw	0
  8966  018870  6EDF               	movwf	indf2,c
  8967                           
  8968                           ;hid.c: 30:   h->wait_enter = 1;
  8969                           ;stkvar	_h @ sp[(0)+-2]
  8970  018872  0EFE               	movlw	-2
  8971  018874  006F FF8C  F00B    	movff	plusw1,btemp+10
  8972  01887A  0EFF               	movlw	-1
  8973  01887C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8974  018882  0E04               	movlw	4
  8975  018884  240B               	addwf	(btemp+10)^0,w,c
  8976  018886  6ED9               	movwf	fsr2l,c
  8977  018888  0E00               	movlw	0
  8978  01888A  200C               	addwfc	(btemp+11)^0,w,c
  8979  01888C  6EDA               	movwf	fsr2h,c
  8980  01888E  0E01               	movlw	1
  8981  018890  6EDF               	movwf	indf2,c
  8982                           
  8983                           ;hid.c: 31:   h->wait_select = 1;
  8984                           ;stkvar	_h @ sp[(0)+-2]
  8985  018892  0EFE               	movlw	-2
  8986  018894  006F FF8C  F00B    	movff	plusw1,btemp+10
  8987  01889A  0EFF               	movlw	-1
  8988  01889C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8989  0188A2  0E02               	movlw	2
  8990  0188A4  240B               	addwf	(btemp+10)^0,w,c
  8991  0188A6  6ED9               	movwf	fsr2l,c
  8992  0188A8  0E00               	movlw	0
  8993  0188AA  200C               	addwfc	(btemp+11)^0,w,c
  8994  0188AC  6EDA               	movwf	fsr2h,c
  8995  0188AE  0E01               	movlw	1
  8996  0188B0  6EDF               	movwf	indf2,c
  8997                           
  8998                           ;hid.c: 32:   h->wait_calib = 1;
  8999                           ;stkvar	_h @ sp[(0)+-2]
  9000  0188B2  0EFE               	movlw	-2
  9001  0188B4  006F FF8C  F00B    	movff	plusw1,btemp+10
  9002  0188BA  0EFF               	movlw	-1
  9003  0188BC  006F FF8C  F00C    	movff	plusw1,btemp+11
  9004  0188C2  0E06               	movlw	6
  9005  0188C4  240B               	addwf	(btemp+10)^0,w,c
  9006  0188C6  6ED9               	movwf	fsr2l,c
  9007  0188C8  0E00               	movlw	0
  9008  0188CA  200C               	addwfc	(btemp+11)^0,w,c
  9009  0188CC  6EDA               	movwf	fsr2h,c
  9010  0188CE  0E01               	movlw	1
  9011  0188D0  6EDF               	movwf	indf2,c
  9012                           
  9013                           ;hid.c: 33:   h->select_p = SW_OFF;
  9014                           ;stkvar	_h @ sp[(0)+-2]
  9015  0188D2  0EFE               	movlw	-2
  9016  0188D4  006F FF8C  F00B    	movff	plusw1,btemp+10
  9017  0188DA  0EFF               	movlw	-1
  9018  0188DC  006F FF8C  F00C    	movff	plusw1,btemp+11
  9019  0188E2  0E03               	movlw	3
  9020  0188E4  240B               	addwf	(btemp+10)^0,w,c
  9021  0188E6  6ED9               	movwf	fsr2l,c
  9022  0188E8  0E00               	movlw	0
  9023  0188EA  200C               	addwfc	(btemp+11)^0,w,c
  9024  0188EC  6EDA               	movwf	fsr2h,c
  9025  0188EE  0E00               	movlw	0
  9026  0188F0  6EDF               	movwf	indf2,c
  9027                           
  9028                           ;hid.c: 34:   h->enter_p = SW_OFF;
  9029                           ;stkvar	_h @ sp[(0)+-2]
  9030  0188F2  0EFE               	movlw	-2
  9031  0188F4  006F FF8C  F00B    	movff	plusw1,btemp+10
  9032  0188FA  0EFF               	movlw	-1
  9033  0188FC  006F FF8C  F00C    	movff	plusw1,btemp+11
  9034  018902  0E05               	movlw	5
  9035  018904  240B               	addwf	(btemp+10)^0,w,c
  9036  018906  6ED9               	movwf	fsr2l,c
  9037  018908  0E00               	movlw	0
  9038  01890A  200C               	addwfc	(btemp+11)^0,w,c
  9039  01890C  6EDA               	movwf	fsr2h,c
  9040  01890E  0E00               	movlw	0
  9041  018910  6EDF               	movwf	indf2,c
  9042                           
  9043                           ;hid.c: 35:   h->calib_p = SW_OFF;
  9044                           ;stkvar	_h @ sp[(0)+-2]
  9045  018912  0EFE               	movlw	-2
  9046  018914  006F FF8C  F00B    	movff	plusw1,btemp+10
  9047  01891A  0EFF               	movlw	-1
  9048  01891C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9049  018922  0E07               	movlw	7
  9050  018924  240B               	addwf	(btemp+10)^0,w,c
  9051  018926  6ED9               	movwf	fsr2l,c
  9052  018928  0E00               	movlw	0
  9053  01892A  200C               	addwfc	(btemp+11)^0,w,c
  9054  01892C  6EDA               	movwf	fsr2h,c
  9055  01892E  0E00               	movlw	0
  9056  018930  D06A               	goto	L5
  9057  018932                     l14257:
  9058                           
  9059                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  9060                           ;stkvar	_h @ sp[(0)+-2]
  9061  018932  0EFE               	movlw	-2
  9062  018934  006F FF8C  F00B    	movff	plusw1,btemp+10
  9063  01893A  0EFF               	movlw	-1
  9064  01893C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9065  018942  0E02               	movlw	2
  9066  018944  240B               	addwf	(btemp+10)^0,w,c
  9067  018946  6ED9               	movwf	fsr2l,c
  9068  018948  0E00               	movlw	0
  9069  01894A  200C               	addwfc	(btemp+11)^0,w,c
  9070  01894C  6EDA               	movwf	fsr2h,c
  9071  01894E  50DF               	movf	indf2,w,c
  9072  018950  A4D8               	btfss	status,2,c
  9073  018952  D076               	goto	l2133
  9074                           
  9075                           ;stkvar	_h @ sp[(0)+-2]
  9076  018954  0EFE               	movlw	-2
  9077  018956  006F FF8C  F00B    	movff	plusw1,btemp+10
  9078  01895C  0EFF               	movlw	-1
  9079  01895E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9080  018964  0E03               	movlw	3
  9081  018966  240B               	addwf	(btemp+10)^0,w,c
  9082  018968  6ED9               	movwf	fsr2l,c
  9083  01896A  0E00               	movlw	0
  9084  01896C  200C               	addwfc	(btemp+11)^0,w,c
  9085  01896E  6EDA               	movwf	fsr2h,c
  9086  018970  50DF               	movf	indf2,w,c
  9087  018972  A4D8               	btfss	status,2,c
  9088  018974  D065               	goto	l2133
  9089                           
  9090                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  9091                           ;stkvar	_h @ sp[(0)+-2]
  9092  018976  0EFE               	movlw	-2
  9093  018978  006F FF8C  F00B    	movff	plusw1,btemp+10
  9094  01897E  0EFF               	movlw	-1
  9095  018980  006F FF8C  F00C    	movff	plusw1,btemp+11
  9096  018986  0E08               	movlw	8
  9097  018988  240B               	addwf	(btemp+10)^0,w,c
  9098  01898A  6ED9               	movwf	fsr2l,c
  9099  01898C  0E00               	movlw	0
  9100  01898E  200C               	addwfc	(btemp+11)^0,w,c
  9101  018990  6EDA               	movwf	fsr2h,c
  9102                           
  9103                           ;stkvar	_h @ sp[(0)+-2]
  9104  018992  0EFE               	movlw	-2
  9105  018994  006F FF8C  F00B    	movff	plusw1,btemp+10
  9106  01899A  0EFF               	movlw	-1
  9107  01899C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9108  0189A2  0E08               	movlw	8
  9109  0189A4  240B               	addwf	(btemp+10)^0,w,c
  9110  0189A6  6EE9               	movwf	fsr0l,c
  9111  0189A8  0E00               	movlw	0
  9112  0189AA  200C               	addwfc	(btemp+11)^0,w,c
  9113  0189AC  6EEA               	movwf	fsr0h,c
  9114  0189AE  2AEF               	incf	indf0,f,c
  9115  0189B0  50EF               	movf	indf0,w,c
  9116  0189B2  0B03               	andlw	3
  9117  0189B4  6EDF               	movwf	indf2,c
  9118                           
  9119                           ;hid.c: 41:    h->hid_display = h->sequence;
  9120                           ;stkvar	_h @ sp[(0)+-2]
  9121  0189B6  0EFE               	movlw	-2
  9122  0189B8  006F FF8C  F00B    	movff	plusw1,btemp+10
  9123  0189BE  0EFF               	movlw	-1
  9124  0189C0  006F FF8C  F00C    	movff	plusw1,btemp+11
  9125  0189C6  0E08               	movlw	8
  9126  0189C8  240B               	addwf	(btemp+10)^0,w,c
  9127  0189CA  6ED9               	movwf	fsr2l,c
  9128  0189CC  0E00               	movlw	0
  9129  0189CE  200C               	addwfc	(btemp+11)^0,w,c
  9130  0189D0  6EDA               	movwf	fsr2h,c
  9131                           
  9132                           ;stkvar	_h @ sp[(0)+-2]
  9133  0189D2  0EFE               	movlw	-2
  9134  0189D4  006F FF8F FFE9     	movff	plusw1,fsr0l
  9135  0189DA  0EFF               	movlw	-1
  9136  0189DC  006F FF8F FFEA     	movff	plusw1,fsr0h
  9137  0189E2  006F FF7F FFEF     	movff	indf2,indf0
  9138                           
  9139                           ;hid.c: 42:    h->wait_select = 1;
  9140                           ;stkvar	_h @ sp[(0)+-2]
  9141  0189E8  0EFE               	movlw	-2
  9142  0189EA  006F FF8C  F00B    	movff	plusw1,btemp+10
  9143  0189F0  0EFF               	movlw	-1
  9144  0189F2  006F FF8C  F00C    	movff	plusw1,btemp+11
  9145  0189F8  0E02               	movlw	2
  9146  0189FA  240B               	addwf	(btemp+10)^0,w,c
  9147  0189FC  6ED9               	movwf	fsr2l,c
  9148  0189FE  0E00               	movlw	0
  9149  018A00  200C               	addwfc	(btemp+11)^0,w,c
  9150  018A02  6EDA               	movwf	fsr2h,c
  9151  018A04  0E01               	movlw	1
  9152  018A06                     L5:
  9153  018A06  6EDF               	movwf	indf2,c
  9154  018A08  D01B               	goto	l2133
  9155  018A0A                     l14267:
  9156                           
  9157                           ;stkvar	_h @ sp[(0)+-2]
  9158  018A0A  0EFE               	movlw	-2
  9159  018A0C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9160  018A12  0EFF               	movlw	-1
  9161  018A14  006F FF8C  F00C    	movff	plusw1,btemp+11
  9162  018A1A  0E01               	movlw	1
  9163  018A1C  240B               	addwf	(btemp+10)^0,w,c
  9164  018A1E  6ED9               	movwf	fsr2l,c
  9165  018A20  0E00               	movlw	0
  9166  018A22  200C               	addwfc	(btemp+11)^0,w,c
  9167  018A24  6EDA               	movwf	fsr2h,c
  9168  018A26  50DF               	movf	indf2,w,c
  9169  018A28  6E0B               	movwf	(btemp+10)^0,c
  9170  018A2A  6A0C               	clrf	(btemp+11)^0,c
  9171                           
  9172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9173                           ; Switch size 1, requested type "simple"
  9174                           ; Number of cases is 1, Range of values is 0 to 0
  9175                           ; switch strategies available:
  9176                           ; Name         Instructions Cycles
  9177                           ; simple_byte            4     3 (average)
  9178                           ;	Chosen strategy is simple_byte
  9179  018A2C  500C               	movf	(btemp+11)^0,w,c
  9180  018A2E  0A00               	xorlw	0	; case 0
  9181  018A30  A4D8               	btfss	status,2,c
  9182  018A32  D77F               	goto	l14257
  9183                           
  9184                           ; Switch size 1, requested type "simple"
  9185                           ; Number of cases is 2, Range of values is 0 to 1
  9186                           ; switch strategies available:
  9187                           ; Name         Instructions Cycles
  9188                           ; simple_byte            7     4 (average)
  9189                           ;	Chosen strategy is simple_byte
  9190  018A34  500B               	movf	(btemp+10)^0,w,c
  9191  018A36  0A00               	xorlw	0	; case 0
  9192  018A38  B4D8               	btfsc	status,2,c
  9193  018A3A  D701               	goto	l14241
  9194  018A3C  0A01               	xorlw	1	; case 1
  9195  018A3E  D779               	goto	l14257
  9196  018A40                     l2133:
  9197                           
  9198                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  9199  018A40  52E5               	movf	postdec1,f,c
  9200  018A42  52E5               	movf	postdec1,f,c
  9201  018A44  0012               	return		;funcret
  9202  018A46                     __end_of_hid_display:
  9203                           	opt callstack 0
  9204                           
  9205 ;; *************** function _hid_input *****************
  9206 ;; Defined at:
  9207 ;;		line 3 in file "hid.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;  h               2  [STACK] PTR struct H_data
  9210 ;;		 -> H(9), 
  9211 ;; Auto vars:     Size  Location     Type
  9212 ;;		None
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  2  [STACK] PTR struct H_data
  9215 ;; Registers used:
  9216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9217 ;; Tracked objects:
  9218 ;;		On entry : 0/39
  9219 ;;		On exit  : 0/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9226 ;;Total ram usage:        0 bytes
  9227 ;; Hardware stack levels used:    1
  9228 ;; Hardware stack levels required when called:   16
  9229 ;; This function calls:
  9230 ;;		_get_switch
  9231 ;; This function is called by:
  9232 ;;		_hid_display
  9233 ;; This function uses a reentrant model
  9234 ;;
  9235                           
  9236                           	psect	text22
  9237  01A17A                     __ptext22:
  9238                           	opt callstack 0
  9239  01A17A                     _hid_input:
  9240                           	opt callstack 13
  9241                           
  9242                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  9243                           
  9244                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9245                           ;incstack = 0
  9246  01A17A  0E02               	movlw	2
  9247  01A17C  6EE6               	movwf	postinc1,c
  9248  01A17E  EC3E  F0E6         	call	_get_switch	;wreg free
  9249  01A182  5001               	movf	btemp^0,w,c
  9250  01A184  B4D8               	btfsc	status,2,c
  9251  01A186  D02C               	goto	l13997
  9252                           
  9253                           ;hid.c: 6:   h->wait_select = 0;
  9254                           ;stkvar	_h @ sp[(0)+-2]
  9255  01A188  0EFE               	movlw	-2
  9256  01A18A  006F FF8C  F00B    	movff	plusw1,btemp+10
  9257  01A190  0EFF               	movlw	-1
  9258  01A192  006F FF8C  F00C    	movff	plusw1,btemp+11
  9259  01A198  0E02               	movlw	2
  9260  01A19A  240B               	addwf	(btemp+10)^0,w,c
  9261  01A19C  6ED9               	movwf	fsr2l,c
  9262  01A19E  0E00               	movlw	0
  9263  01A1A0  200C               	addwfc	(btemp+11)^0,w,c
  9264  01A1A2  6EDA               	movwf	fsr2h,c
  9265  01A1A4  0E00               	movlw	0
  9266  01A1A6  6EDF               	movwf	indf2,c
  9267                           
  9268                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  9269  01A1A8  0E02               	movlw	2
  9270  01A1AA  6EE6               	movwf	postinc1,c
  9271  01A1AC  EC3E  F0E6         	call	_get_switch	;wreg free
  9272  01A1B0  5001               	movf	btemp^0,w,c
  9273  01A1B2  B4D8               	btfsc	status,2,c
  9274  01A1B4  D003               	goto	u13250
  9275  01A1B6  6A0C               	clrf	(btemp+11)^0,c
  9276  01A1B8  2A0C               	incf	(btemp+11)^0,f,c
  9277  01A1BA  D001               	goto	u13268
  9278  01A1BC                     u13250:
  9279  01A1BC  6A0C               	clrf	(btemp+11)^0,c
  9280  01A1BE                     u13268:
  9281                           
  9282                           ;stkvar	_h @ sp[(0)+-2]
  9283  01A1BE  0EFE               	movlw	-2
  9284  01A1C0  006F FF8C  F009    	movff	plusw1,btemp+8
  9285  01A1C6  0EFF               	movlw	-1
  9286  01A1C8  006F FF8C  F00A    	movff	plusw1,btemp+9
  9287  01A1CE  0E03               	movlw	3
  9288  01A1D0  2409               	addwf	(btemp+8)^0,w,c
  9289  01A1D2  6ED9               	movwf	fsr2l,c
  9290  01A1D4  0E00               	movlw	0
  9291  01A1D6  200A               	addwfc	(btemp+9)^0,w,c
  9292  01A1D8  6EDA               	movwf	fsr2h,c
  9293  01A1DA  0060  F033  FFDF   	movff	btemp+11,indf2
  9294  01A1E0                     l13997:
  9295                           
  9296                           ;hid.c: 10:  if (get_switch(SENTER)) {
  9297  01A1E0  0E03               	movlw	3
  9298  01A1E2  6EE6               	movwf	postinc1,c
  9299  01A1E4  EC3E  F0E6         	call	_get_switch	;wreg free
  9300  01A1E8  5001               	movf	btemp^0,w,c
  9301  01A1EA  B4D8               	btfsc	status,2,c
  9302  01A1EC  D02C               	goto	l14003
  9303                           
  9304                           ;hid.c: 11:   h->wait_enter = 0;
  9305                           ;stkvar	_h @ sp[(0)+-2]
  9306  01A1EE  0EFE               	movlw	-2
  9307  01A1F0  006F FF8C  F00B    	movff	plusw1,btemp+10
  9308  01A1F6  0EFF               	movlw	-1
  9309  01A1F8  006F FF8C  F00C    	movff	plusw1,btemp+11
  9310  01A1FE  0E04               	movlw	4
  9311  01A200  240B               	addwf	(btemp+10)^0,w,c
  9312  01A202  6ED9               	movwf	fsr2l,c
  9313  01A204  0E00               	movlw	0
  9314  01A206  200C               	addwfc	(btemp+11)^0,w,c
  9315  01A208  6EDA               	movwf	fsr2h,c
  9316  01A20A  0E00               	movlw	0
  9317  01A20C  6EDF               	movwf	indf2,c
  9318                           
  9319                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  9320  01A20E  0E03               	movlw	3
  9321  01A210  6EE6               	movwf	postinc1,c
  9322  01A212  EC3E  F0E6         	call	_get_switch	;wreg free
  9323  01A216  5001               	movf	btemp^0,w,c
  9324  01A218  B4D8               	btfsc	status,2,c
  9325  01A21A  D003               	goto	u13280
  9326  01A21C  6A0C               	clrf	(btemp+11)^0,c
  9327  01A21E  2A0C               	incf	(btemp+11)^0,f,c
  9328  01A220  D001               	goto	u13298
  9329  01A222                     u13280:
  9330  01A222  6A0C               	clrf	(btemp+11)^0,c
  9331  01A224                     u13298:
  9332                           
  9333                           ;stkvar	_h @ sp[(0)+-2]
  9334  01A224  0EFE               	movlw	-2
  9335  01A226  006F FF8C  F009    	movff	plusw1,btemp+8
  9336  01A22C  0EFF               	movlw	-1
  9337  01A22E  006F FF8C  F00A    	movff	plusw1,btemp+9
  9338  01A234  0E05               	movlw	5
  9339  01A236  2409               	addwf	(btemp+8)^0,w,c
  9340  01A238  6ED9               	movwf	fsr2l,c
  9341  01A23A  0E00               	movlw	0
  9342  01A23C  200A               	addwfc	(btemp+9)^0,w,c
  9343  01A23E  6EDA               	movwf	fsr2h,c
  9344  01A240  0060  F033  FFDF   	movff	btemp+11,indf2
  9345  01A246                     l14003:
  9346                           
  9347                           ;hid.c: 15:  if (get_switch(SCALIB)) {
  9348  01A246  0E04               	movlw	4
  9349  01A248  6EE6               	movwf	postinc1,c
  9350  01A24A  EC3E  F0E6         	call	_get_switch	;wreg free
  9351  01A24E  5001               	movf	btemp^0,w,c
  9352  01A250  B4D8               	btfsc	status,2,c
  9353  01A252  D02C               	goto	l2124
  9354                           
  9355                           ;hid.c: 16:   h->wait_calib = 0;
  9356                           ;stkvar	_h @ sp[(0)+-2]
  9357  01A254  0EFE               	movlw	-2
  9358  01A256  006F FF8C  F00B    	movff	plusw1,btemp+10
  9359  01A25C  0EFF               	movlw	-1
  9360  01A25E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9361  01A264  0E06               	movlw	6
  9362  01A266  240B               	addwf	(btemp+10)^0,w,c
  9363  01A268  6ED9               	movwf	fsr2l,c
  9364  01A26A  0E00               	movlw	0
  9365  01A26C  200C               	addwfc	(btemp+11)^0,w,c
  9366  01A26E  6EDA               	movwf	fsr2h,c
  9367  01A270  0E00               	movlw	0
  9368  01A272  6EDF               	movwf	indf2,c
  9369                           
  9370                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
  9371  01A274  0E04               	movlw	4
  9372  01A276  6EE6               	movwf	postinc1,c
  9373  01A278  EC3E  F0E6         	call	_get_switch	;wreg free
  9374  01A27C  5001               	movf	btemp^0,w,c
  9375  01A27E  B4D8               	btfsc	status,2,c
  9376  01A280  D003               	goto	u13310
  9377  01A282  6A0C               	clrf	(btemp+11)^0,c
  9378  01A284  2A0C               	incf	(btemp+11)^0,f,c
  9379  01A286  D001               	goto	u13328
  9380  01A288                     u13310:
  9381  01A288  6A0C               	clrf	(btemp+11)^0,c
  9382  01A28A                     u13328:
  9383                           
  9384                           ;stkvar	_h @ sp[(0)+-2]
  9385  01A28A  0EFE               	movlw	-2
  9386  01A28C  006F FF8C  F009    	movff	plusw1,btemp+8
  9387  01A292  0EFF               	movlw	-1
  9388  01A294  006F FF8C  F00A    	movff	plusw1,btemp+9
  9389  01A29A  0E07               	movlw	7
  9390  01A29C  2409               	addwf	(btemp+8)^0,w,c
  9391  01A29E  6ED9               	movwf	fsr2l,c
  9392  01A2A0  0E00               	movlw	0
  9393  01A2A2  200A               	addwfc	(btemp+9)^0,w,c
  9394  01A2A4  6EDA               	movwf	fsr2h,c
  9395  01A2A6  0060  F033  FFDF   	movff	btemp+11,indf2
  9396  01A2AC                     l2124:
  9397                           
  9398                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  9399  01A2AC  52E5               	movf	postdec1,f,c
  9400  01A2AE  52E5               	movf	postdec1,f,c
  9401  01A2B0  0012               	return		;funcret
  9402  01A2B2                     __end_of_hid_input:
  9403                           	opt callstack 0
  9404                           
  9405 ;; *************** function _esr_check *****************
  9406 ;; Defined at:
  9407 ;;		line 197 in file "bsoc.c"
  9408 ;; Parameters:    Size  Location     Type
  9409 ;;  fsm             1  [STACK] const unsigned char 
  9410 ;; Auto vars:     Size  Location     Type
  9411 ;;		None
  9412 ;; Return value:  Size  Location     Type
  9413 ;;                  4  [STACK] float 
  9414 ;; Registers used:
  9415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9416 ;; Tracked objects:
  9417 ;;		On entry : 0/0
  9418 ;;		On exit  : 0/0
  9419 ;;		Unchanged: 0/0
  9420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9425 ;;Total ram usage:        0 bytes
  9426 ;; Hardware stack levels used:    1
  9427 ;; Hardware stack levels required when called:   18
  9428 ;; This function calls:
  9429 ;;		_StartTimer
  9430 ;;		_TimerDone
  9431 ;;		___fldiv
  9432 ;;		___flsub
  9433 ;;		_conv_raw_result
  9434 ;;		_fabsf
  9435 ;;		_set_load_relay_one
  9436 ;;		_set_load_relay_two
  9437 ;;		_update_adc_result
  9438 ;; This function is called by:
  9439 ;;		_main
  9440 ;; This function uses a reentrant model
  9441 ;;
  9442                           
  9443                           	psect	text23
  9444  0176FA                     __ptext23:
  9445                           	opt callstack 0
  9446  0176FA                     _esr_check:
  9447                           	opt callstack 12
  9448                           
  9449                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  9450                           ;stkvar	_fsm @ sp[(0)+-1]
  9451                           
  9452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9453                           ;incstack = 0
  9454  0176FA  0EFF               	movlw	-1
  9455  0176FC  50E3               	movf	plusw1,w,c
  9456  0176FE  B4D8               	btfsc	status,2,c
  9457  017700  D149               	goto	l12039
  9458                           
  9459                           ;bsoc.c: 202:   esr_state = 0;
  9460  017702  0100               	movlb	0	; () banked
  9461  017704  6BA0               	clrf	esr_check@esr_state& (0+255),b
  9462                           
  9463                           ; BSR set to: 0
  9464                           ;bsoc.c: 203:   return -10.0;
  9465  017706  0E00               	movlw	0
  9466  017708  6E01               	movwf	btemp^0,c
  9467  01770A  0E00               	movlw	0
  9468  01770C  6E02               	movwf	(btemp+1)^0,c
  9469  01770E  0E20               	movlw	32
  9470  017710  6E03               	movwf	(btemp+2)^0,c
  9471  017712  0EC1               	movlw	193
  9472  017714  D15B               	goto	L6
  9473  017716                     l11971:
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  9477  017716  0E10               	movlw	16
  9478  017718  6EE6               	movwf	postinc1,c
  9479  01771A  0E27               	movlw	39
  9480  01771C  6EE6               	movwf	postinc1,c
  9481  01771E  0E0C               	movlw	12
  9482  017720  6EE6               	movwf	postinc1,c
  9483  017722  EC3A  F0E4         	call	_StartTimer	;wreg free
  9484  017726                     l11973:
  9485                           
  9486                           ;bsoc.c: 209:   esr_state++;
  9487  017726  0100               	movlb	0	; () banked
  9488  017728  2BA0               	incf	esr_check@esr_state& (0+255),f,b
  9489                           
  9490                           ;bsoc.c: 210:   break;
  9491  01772A  D149               	goto	l12041
  9492  01772C                     l11975:
  9493                           
  9494                           ; BSR set to: 0
  9495                           ;bsoc.c: 215:   set_load_relay_one(0);
  9496  01772C  0E00               	movlw	0
  9497  01772E  6EE6               	movwf	postinc1,c
  9498  017730  EC4F  F0E9         	call	_set_load_relay_one	;wreg free
  9499                           
  9500                           ;bsoc.c: 216:   set_load_relay_two(0);
  9501  017734  0E00               	movlw	0
  9502  017736  6EE6               	movwf	postinc1,c
  9503  017738  EC47  F0E9         	call	_set_load_relay_two	;wreg free
  9504                           
  9505                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  9506  01773C  0E0C               	movlw	12
  9507  01773E  6EE6               	movwf	postinc1,c
  9508  017740  ECA9  F0E6         	call	_TimerDone	;wreg free
  9509  017744  5001               	movf	btemp^0,w,c
  9510  017746  B4D8               	btfsc	status,2,c
  9511  017748  D009               	goto	l11981
  9512                           
  9513                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  9514  01774A  0E10               	movlw	16
  9515  01774C  6EE6               	movwf	postinc1,c
  9516  01774E  0E27               	movlw	39
  9517  017750  6EE6               	movwf	postinc1,c
  9518  017752  0E0C               	movlw	12
  9519  017754  6EE6               	movwf	postinc1,c
  9520  017756  EC3A  F0E4         	call	_StartTimer	;wreg free
  9521                           
  9522                           ;bsoc.c: 219:   } else {
  9523  01775A  D006               	goto	l11985
  9524  01775C                     l11981:
  9525                           
  9526                           ;bsoc.c: 220:    return -2.0;
  9527  01775C  0E00               	movlw	0
  9528  01775E  6E01               	movwf	btemp^0,c
  9529  017760  0E00               	movlw	0
  9530  017762  6E02               	movwf	(btemp+1)^0,c
  9531  017764  0E00               	movlw	0
  9532  017766  D066               	goto	L8
  9533  017768                     l11985:
  9534                           
  9535                           ;bsoc.c: 225:   update_adc_result();
  9536  017768  ECB9  F0E4         	call	_update_adc_result	;wreg free
  9537                           
  9538                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  9539  01776C  0E00               	movlw	0
  9540  01776E  6EE6               	movwf	postinc1,c
  9541  017770  0E04               	movlw	4
  9542  017772  6EE6               	movwf	postinc1,c
  9543  017774  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9544  017778  0060  F004  F915   	movff	btemp,_C+278	;volatile
  9545  01777E  0060  F008  F916   	movff	btemp+1,_C+279	;volatile
  9546  017784  0060  F00C  F917   	movff	btemp+2,_C+280	;volatile
  9547  01778A  0060  F010  F918   	movff	btemp+3,_C+281	;volatile
  9548  017790  D7CA               	goto	l11973
  9549  017792                     l11991:
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;bsoc.c: 230:   set_load_relay_one(1);
  9553  017792  0E01               	movlw	1
  9554  017794  6EE6               	movwf	postinc1,c
  9555  017796  EC4F  F0E9         	call	_set_load_relay_one	;wreg free
  9556                           
  9557                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
  9558  01779A  0E0C               	movlw	12
  9559  01779C  6EE6               	movwf	postinc1,c
  9560  01779E  ECA9  F0E6         	call	_TimerDone	;wreg free
  9561  0177A2  5001               	movf	btemp^0,w,c
  9562  0177A4  B4D8               	btfsc	status,2,c
  9563  0177A6  D009               	goto	l11997
  9564                           
  9565                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
  9566  0177A8  0E10               	movlw	16
  9567  0177AA  6EE6               	movwf	postinc1,c
  9568  0177AC  0E27               	movlw	39
  9569  0177AE  6EE6               	movwf	postinc1,c
  9570  0177B0  0E0C               	movlw	12
  9571  0177B2  6EE6               	movwf	postinc1,c
  9572  0177B4  EC3A  F0E4         	call	_StartTimer	;wreg free
  9573                           
  9574                           ;bsoc.c: 233:   } else {
  9575  0177B8  D006               	goto	l12001
  9576  0177BA                     l11997:
  9577                           
  9578                           ;bsoc.c: 234:    return -3.0;
  9579  0177BA  0E00               	movlw	0
  9580  0177BC  6E01               	movwf	btemp^0,c
  9581  0177BE  0E00               	movlw	0
  9582  0177C0  6E02               	movwf	(btemp+1)^0,c
  9583  0177C2  0E40               	movlw	64
  9584  0177C4  D037               	goto	L8
  9585  0177C6                     l12001:
  9586                           
  9587                           ;bsoc.c: 237:   update_adc_result();
  9588  0177C6  ECB9  F0E4         	call	_update_adc_result	;wreg free
  9589                           
  9590                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  9591  0177CA  0E00               	movlw	0
  9592  0177CC  6EE6               	movwf	postinc1,c
  9593  0177CE  0E04               	movlw	4
  9594  0177D0  6EE6               	movwf	postinc1,c
  9595  0177D2  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9596  0177D6  0060  F004  F919   	movff	btemp,_C+282	;volatile
  9597  0177DC  0060  F008  F91A   	movff	btemp+1,_C+283	;volatile
  9598  0177E2  0060  F00C  F91B   	movff	btemp+2,_C+284	;volatile
  9599  0177E8  0060  F010  F91C   	movff	btemp+3,_C+285	;volatile
  9600                           
  9601                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  9602  0177EE  0E00               	movlw	0
  9603  0177F0  6EE6               	movwf	postinc1,c
  9604  0177F2  0E00               	movlw	0
  9605  0177F4  6EE6               	movwf	postinc1,c
  9606  0177F6  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9607  0177FA  0060  F004  F90D   	movff	btemp,_C+270	;volatile
  9608  017800  0060  F008  F90E   	movff	btemp+1,_C+271	;volatile
  9609  017806  0060  F00C  F90F   	movff	btemp+2,_C+272	;volatile
  9610  01780C  0060  F010  F910   	movff	btemp+3,_C+273	;volatile
  9611  017812  D789               	goto	l11973
  9612  017814                     l12009:
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;bsoc.c: 243:   set_load_relay_two(1);
  9616  017814  0E01               	movlw	1
  9617  017816  6EE6               	movwf	postinc1,c
  9618  017818  EC47  F0E9         	call	_set_load_relay_two	;wreg free
  9619                           
  9620                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
  9621  01781C  0E0C               	movlw	12
  9622  01781E  6EE6               	movwf	postinc1,c
  9623  017820  ECA9  F0E6         	call	_TimerDone	;wreg free
  9624  017824  5001               	movf	btemp^0,w,c
  9625  017826  A4D8               	btfss	status,2,c
  9626  017828  D008               	goto	l12017
  9627                           
  9628                           ;bsoc.c: 245:    return -4.0;
  9629  01782A  0E00               	movlw	0
  9630  01782C  6E01               	movwf	btemp^0,c
  9631  01782E  0E00               	movlw	0
  9632  017830  6E02               	movwf	(btemp+1)^0,c
  9633  017832  0E80               	movlw	128
  9634  017834                     L8:
  9635  017834  6E03               	movwf	(btemp+2)^0,c
  9636  017836  0EC0               	movlw	192
  9637  017838  D0C9               	goto	L6
  9638  01783A                     l12017:
  9639                           
  9640                           ;bsoc.c: 247:   update_adc_result();
  9641  01783A  ECB9  F0E4         	call	_update_adc_result	;wreg free
  9642                           
  9643                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  9644  01783E  0E00               	movlw	0
  9645  017840  6EE6               	movwf	postinc1,c
  9646  017842  0E04               	movlw	4
  9647  017844  6EE6               	movwf	postinc1,c
  9648  017846  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9649  01784A  0060  F004  F91D   	movff	btemp,_C+286	;volatile
  9650  017850  0060  F008  F91E   	movff	btemp+1,_C+287	;volatile
  9651  017856  0060  F00C  F91F   	movff	btemp+2,_C+288	;volatile
  9652  01785C  0060  F010  F920   	movff	btemp+3,_C+289	;volatile
  9653                           
  9654                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  9655  017862  0E00               	movlw	0
  9656  017864  6EE6               	movwf	postinc1,c
  9657  017866  0E00               	movlw	0
  9658  017868  6EE6               	movwf	postinc1,c
  9659  01786A  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9660  01786E  0060  F004  F911   	movff	btemp,_C+274	;volatile
  9661  017874  0060  F008  F912   	movff	btemp+1,_C+275	;volatile
  9662  01787A  0060  F00C  F913   	movff	btemp+2,_C+276	;volatile
  9663  017880  0060  F010  F914   	movff	btemp+3,_C+277	;volatile
  9664                           
  9665                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  9666  017886  EE22  F111         	lfsr	2,_C+274	;volatile
  9667  01788A  006F FF7B FFE6     	movff	postinc2,postinc1
  9668  017890  006F FF7B FFE6     	movff	postinc2,postinc1
  9669  017896  006F FF7B FFE6     	movff	postinc2,postinc1
  9670  01789C  006F FF7B FFE6     	movff	postinc2,postinc1
  9671  0178A2  EE22  F10D         	lfsr	2,_C+270	;volatile
  9672  0178A6  006F FF7B FFE6     	movff	postinc2,postinc1
  9673  0178AC  006F FF7B FFE6     	movff	postinc2,postinc1
  9674  0178B2  006F FF7B FFE6     	movff	postinc2,postinc1
  9675  0178B8  006F FF7B FFE6     	movff	postinc2,postinc1
  9676  0178BE  EC94  F0E3         	call	___flsub	;wreg free
  9677  0178C2  0060  F007  FFE6   	movff	btemp,postinc1
  9678  0178C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9679  0178CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9680  0178D4  0060  F013  FFE6   	movff	btemp+3,postinc1
  9681  0178DA  EE22  F11D         	lfsr	2,_C+286	;volatile
  9682  0178DE  006F FF7B FFE6     	movff	postinc2,postinc1
  9683  0178E4  006F FF7B FFE6     	movff	postinc2,postinc1
  9684  0178EA  006F FF7B FFE6     	movff	postinc2,postinc1
  9685  0178F0  006F FF7B FFE6     	movff	postinc2,postinc1
  9686  0178F6  EE22  F119         	lfsr	2,_C+282	;volatile
  9687  0178FA  006F FF7B FFE6     	movff	postinc2,postinc1
  9688  017900  006F FF7B FFE6     	movff	postinc2,postinc1
  9689  017906  006F FF7B FFE6     	movff	postinc2,postinc1
  9690  01790C  006F FF7B FFE6     	movff	postinc2,postinc1
  9691  017912  EC94  F0E3         	call	___flsub	;wreg free
  9692  017916  0060  F007  FFE6   	movff	btemp,postinc1
  9693  01791C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9694  017922  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9695  017928  0060  F013  FFE6   	movff	btemp+3,postinc1
  9696  01792E  EC61  F0A7         	call	___fldiv	;wreg free
  9697  017932  0060  F007  FFE6   	movff	btemp,postinc1
  9698  017938  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9699  01793E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9700  017944  0060  F013  FFE6   	movff	btemp+3,postinc1
  9701  01794A  EC36  F0DA         	call	_fabsf	;wreg free
  9702  01794E  0060  F004  F887   	movff	btemp,_C+136	;volatile
  9703  017954  0060  F008  F888   	movff	btemp+1,_C+137	;volatile
  9704  01795A  0060  F00C  F889   	movff	btemp+2,_C+138	;volatile
  9705  017960  0060  F010  F88A   	movff	btemp+3,_C+139	;volatile
  9706                           
  9707                           ;bsoc.c: 252:   set_load_relay_one(0);
  9708  017966  0E00               	movlw	0
  9709  017968  6EE6               	movwf	postinc1,c
  9710  01796A  EC4F  F0E9         	call	_set_load_relay_one	;wreg free
  9711                           
  9712                           ;bsoc.c: 253:   set_load_relay_two(0);
  9713  01796E  0E00               	movlw	0
  9714  017970  6EE6               	movwf	postinc1,c
  9715  017972  EC47  F0E9         	call	_set_load_relay_two	;wreg free
  9716                           
  9717                           ;bsoc.c: 254:   esr_state = 0;
  9718  017976  0100               	movlb	0	; () banked
  9719  017978  6BA0               	clrf	esr_check@esr_state& (0+255),b
  9720                           
  9721                           ; BSR set to: 0
  9722                           ;bsoc.c: 255:   return C.esr;
  9723  01797A  0062  F21C  F001   	movff	_C+136,btemp	;volatile
  9724  017980  0062  F220  F002   	movff	_C+137,btemp+1	;volatile
  9725  017986  0062  F224  F003   	movff	_C+138,btemp+2	;volatile
  9726  01798C  0062  F228  F004   	movff	_C+139,btemp+3	;volatile
  9727  017992  D01D               	goto	l2249
  9728  017994                     l12039:
  9729  017994  0100               	movlb	0	; () banked
  9730  017996  51A0               	movf	esr_check@esr_state& (0+255),w,b
  9731  017998  6E0B               	movwf	(btemp+10)^0,c
  9732  01799A  6A0C               	clrf	(btemp+11)^0,c
  9733                           
  9734                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9735                           ; Switch size 1, requested type "simple"
  9736                           ; Number of cases is 1, Range of values is 0 to 0
  9737                           ; switch strategies available:
  9738                           ; Name         Instructions Cycles
  9739                           ; simple_byte            4     3 (average)
  9740                           ;	Chosen strategy is simple_byte
  9741  01799C  500C               	movf	(btemp+11)^0,w,c
  9742  01799E  0A00               	xorlw	0	; case 0
  9743  0179A0  A4D8               	btfss	status,2,c
  9744  0179A2  D00D               	goto	l12041
  9745                           
  9746                           ; BSR set to: 0
  9747                           ; Switch size 1, requested type "simple"
  9748                           ; Number of cases is 4, Range of values is 0 to 3
  9749                           ; switch strategies available:
  9750                           ; Name         Instructions Cycles
  9751                           ; simple_byte           13     7 (average)
  9752                           ;	Chosen strategy is simple_byte
  9753  0179A4  500B               	movf	(btemp+10)^0,w,c
  9754  0179A6  0A00               	xorlw	0	; case 0
  9755  0179A8  B4D8               	btfsc	status,2,c
  9756  0179AA  D6B5               	goto	l11971
  9757  0179AC  0A01               	xorlw	1	; case 1
  9758  0179AE  B4D8               	btfsc	status,2,c
  9759  0179B0  D6BD               	goto	l11975
  9760  0179B2  0A03               	xorlw	3	; case 2
  9761  0179B4  B4D8               	btfsc	status,2,c
  9762  0179B6  D6ED               	goto	l11991
  9763  0179B8  0A01               	xorlw	1	; case 3
  9764  0179BA  B4D8               	btfsc	status,2,c
  9765  0179BC  D72B               	goto	l12009
  9766  0179BE                     l12041:
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;bsoc.c: 260:  return -1.0;
  9770  0179BE  0E00               	movlw	0
  9771  0179C0  6E01               	movwf	btemp^0,c
  9772  0179C2  0E00               	movlw	0
  9773  0179C4  6E02               	movwf	(btemp+1)^0,c
  9774  0179C6  0E80               	movlw	128
  9775  0179C8  6E03               	movwf	(btemp+2)^0,c
  9776  0179CA  0EBF               	movlw	191
  9777  0179CC                     L6:
  9778  0179CC  6E04               	movwf	(btemp+3)^0,c
  9779  0179CE                     l2249:
  9780                           
  9781                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9782  0179CE  52E5               	movf	postdec1,f,c
  9783  0179D0  0012               	return		;funcret
  9784  0179D2                     __end_of_esr_check:
  9785                           	opt callstack 0
  9786                           
  9787 ;; *************** function _update_adc_result *****************
  9788 ;; Defined at:
  9789 ;;		line 104 in file "daq.c"
  9790 ;; Parameters:    Size  Location     Type
  9791 ;;		None
  9792 ;; Auto vars:     Size  Location     Type
  9793 ;;		None
  9794 ;; Return value:  Size  Location     Type
  9795 ;;                  1  [STACK] _Bool 
  9796 ;; Registers used:
  9797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9798 ;; Tracked objects:
  9799 ;;		On entry : 0/0
  9800 ;;		On exit  : 0/0
  9801 ;;		Unchanged: 0/0
  9802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9807 ;;Total ram usage:        0 bytes
  9808 ;; Hardware stack levels used:    1
  9809 ;; Hardware stack levels required when called:   17
  9810 ;; This function calls:
  9811 ;;		_StartTimer
  9812 ;;		_TimerDone
  9813 ;;		_check_adc_scan
  9814 ;;		_clear_adc_scan
  9815 ;;		_start_adc_scan
  9816 ;; This function is called by:
  9817 ;;		_esr_check
  9818 ;; This function uses a reentrant model
  9819 ;;
  9820                           
  9821                           	psect	text24
  9822  01C972                     __ptext24:
  9823                           	opt callstack 0
  9824  01C972                     _update_adc_result:
  9825                           	opt callstack 12
  9826                           
  9827                           ;daq.c: 106:  if (R.done) {
  9828                           
  9829                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9830                           ;incstack = 0
  9831  01C972  0100               	movlb	0	; () banked
  9832  01C974  51E3               	movf	(_R+53)& (0+255),w,b	;volatile
  9833  01C976  B4D8               	btfsc	status,2,c
  9834  01C978  0012               	return	
  9835                           
  9836                           ; BSR set to: 0
  9837                           ;daq.c: 107:   clear_adc_scan();
  9838  01C97A  ECC6  F0E9         	call	_clear_adc_scan	;wreg free
  9839                           
  9840                           ; BSR set to: 0
  9841                           ;daq.c: 108:   start_adc_scan();
  9842  01C97E  ECD1  F0E0         	call	_start_adc_scan	;wreg free
  9843                           
  9844                           ;daq.c: 109:   StartTimer(TMR_ADC, 200);
  9845  01C982  0EC8               	movlw	200
  9846  01C984  6EE6               	movwf	postinc1,c
  9847  01C986  0E00               	movlw	0
  9848  01C988  6EE6               	movwf	postinc1,c
  9849  01C98A  0E01               	movlw	1
  9850  01C98C  6EE6               	movwf	postinc1,c
  9851  01C98E  EC3A  F0E4         	call	_StartTimer	;wreg free
  9852  01C992                     l11443:
  9853  01C992  0E01               	movlw	1
  9854  01C994  6EE6               	movwf	postinc1,c
  9855  01C996  ECA9  F0E6         	call	_TimerDone	;wreg free
  9856  01C99A  5001               	movf	btemp^0,w,c
  9857  01C99C  A4D8               	btfss	status,2,c
  9858  01C99E  0012               	return	
  9859  01C9A0  ECAF  F0E9         	call	_check_adc_scan	;wreg free
  9860  01C9A4  5001               	movf	btemp^0,w,c
  9861  01C9A6  A4D8               	btfss	status,2,c
  9862  01C9A8  0012               	return	
  9863  01C9AA  D7F3               	goto	l11443
  9864  01C9AC                     __end_of_update_adc_result:
  9865                           	opt callstack 0
  9866                           
  9867 ;; *************** function _check_adc_scan *****************
  9868 ;; Defined at:
  9869 ;;		line 88 in file "daq.c"
  9870 ;; Parameters:    Size  Location     Type
  9871 ;;		None
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;		None
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  1  [STACK] _Bool 
  9876 ;; Registers used:
  9877 ;;		btemp
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/1
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9887 ;;Total ram usage:        0 bytes
  9888 ;; Hardware stack levels used:    1
  9889 ;; Hardware stack levels required when called:   15
  9890 ;; This function calls:
  9891 ;;		Nothing
  9892 ;; This function is called by:
  9893 ;;		_main
  9894 ;;		_update_adc_result
  9895 ;; This function uses a reentrant model
  9896 ;;
  9897                           
  9898                           	psect	text25
  9899  01D35E                     __ptext25:
  9900                           	opt callstack 0
  9901  01D35E                     _check_adc_scan:
  9902                           	opt callstack 13
  9903                           
  9904                           ;daq.c: 90:  return R.done;
  9905                           
  9906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9907                           ;incstack = 0
  9908  01D35E  0060  F38C  F001   	movff	_R+53,btemp	;volatile
  9909                           
  9910                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9911  01D364  0012               	return		;funcret
  9912  01D366                     __end_of_check_adc_scan:
  9913                           	opt callstack 0
  9914                           
  9915 ;; *************** function _set_load_relay_two *****************
  9916 ;; Defined at:
  9917 ;;		line 130 in file "mbmc.c"
  9918 ;; Parameters:    Size  Location     Type
  9919 ;;  mode            1  [STACK] const _Bool 
  9920 ;; Auto vars:     Size  Location     Type
  9921 ;;		None
  9922 ;; Return value:  Size  Location     Type
  9923 ;;                  1  [STACK] void 
  9924 ;; Registers used:
  9925 ;;		wreg, fsr1l, fsr1h
  9926 ;; Tracked objects:
  9927 ;;		On entry : 0/0
  9928 ;;		On exit  : 0/0
  9929 ;;		Unchanged: 0/0
  9930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9935 ;;Total ram usage:        0 bytes
  9936 ;; Hardware stack levels used:    1
  9937 ;; Hardware stack levels required when called:   15
  9938 ;; This function calls:
  9939 ;;		Nothing
  9940 ;; This function is called by:
  9941 ;;		_main
  9942 ;;		_esr_check
  9943 ;; This function uses a reentrant model
  9944 ;;
  9945                           
  9946                           	psect	text26
  9947  01D28E                     __ptext26:
  9948                           	opt callstack 0
  9949  01D28E                     _set_load_relay_two:
  9950                           	opt callstack 15
  9951                           
  9952                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9953                           ;stkvar	_mode @ sp[(0)+-1]
  9954                           
  9955                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9956                           ;incstack = 0
  9957  01D28E  0EFF               	movlw	-1
  9958  01D290  B0E3               	btfsc	plusw1,0,c
  9959  01D292  D002               	bra	u10135
  9960  01D294  9ABD               	bcf	189,5,c	;volatile
  9961  01D296  D001               	bra	u10136
  9962  01D298                     u10135:
  9963  01D298  8ABD               	bsf	189,5,c	;volatile
  9964  01D29A                     u10136:
  9965                           
  9966                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9967  01D29A  52E5               	movf	postdec1,f,c
  9968  01D29C  0012               	return		;funcret
  9969  01D29E                     __end_of_set_load_relay_two:
  9970                           	opt callstack 0
  9971                           
  9972 ;; *************** function _set_load_relay_one *****************
  9973 ;; Defined at:
  9974 ;;		line 125 in file "mbmc.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;  mode            1  [STACK] const _Bool 
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;		None
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  1  [STACK] void 
  9981 ;; Registers used:
  9982 ;;		wreg, fsr1l, fsr1h
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9992 ;;Total ram usage:        0 bytes
  9993 ;; Hardware stack levels used:    1
  9994 ;; Hardware stack levels required when called:   15
  9995 ;; This function calls:
  9996 ;;		Nothing
  9997 ;; This function is called by:
  9998 ;;		_main
  9999 ;;		_esr_check
 10000 ;; This function uses a reentrant model
 10001 ;;
 10002                           
 10003                           	psect	text27
 10004  01D29E                     __ptext27:
 10005                           	opt callstack 0
 10006  01D29E                     _set_load_relay_one:
 10007                           	opt callstack 15
 10008                           
 10009                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
 10010                           ;stkvar	_mode @ sp[(0)+-1]
 10011                           
 10012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10013                           ;incstack = 0
 10014  01D29E  0EFF               	movlw	-1
 10015  01D2A0  B0E3               	btfsc	plusw1,0,c
 10016  01D2A2  D002               	bra	u10125
 10017  01D2A4  98BD               	bcf	189,4,c	;volatile
 10018  01D2A6  D001               	bra	u10126
 10019  01D2A8                     u10125:
 10020  01D2A8  88BD               	bsf	189,4,c	;volatile
 10021  01D2AA                     u10126:
 10022                           
 10023                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10024  01D2AA  52E5               	movf	postdec1,f,c
 10025  01D2AC  0012               	return		;funcret
 10026  01D2AE                     __end_of_set_load_relay_one:
 10027                           	opt callstack 0
 10028                           
 10029 ;; *************** function _eaDogM_WriteCommand *****************
 10030 ;; Defined at:
 10031 ;;		line 385 in file "eadog.c"
 10032 ;; Parameters:    Size  Location     Type
 10033 ;;  cmd             1  [STACK] const unsigned char 
 10034 ;; Auto vars:     Size  Location     Type
 10035 ;;		None
 10036 ;; Return value:  Size  Location     Type
 10037 ;;                  1  [STACK] void 
 10038 ;; Registers used:
 10039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10040 ;; Tracked objects:
 10041 ;;		On entry : 3F/3D
 10042 ;;		On exit  : 3F/0
 10043 ;;		Unchanged: 0/0
 10044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10049 ;;Total ram usage:        0 bytes
 10050 ;; Hardware stack levels used:    1
 10051 ;; Hardware stack levels required when called:   26
 10052 ;; This function calls:
 10053 ;;		_send_lcd_cmd_dma
 10054 ;; This function is called by:
 10055 ;;		_main
 10056 ;; This function uses a reentrant model
 10057 ;;
 10058                           
 10059                           	psect	text28
 10060  01D2DE                     __ptext28:
 10061                           	opt callstack 0
 10062  01D2DE                     _eaDogM_WriteCommand:
 10063                           	opt callstack 4
 10064                           
 10065                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
 10066                           ;stkvar	_cmd @ sp[(0)+-1]
 10067                           
 10068                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10069                           ;incstack = 0
 10070  01D2DE  0EFF               	movlw	-1
 10071  01D2E0  50E3               	movf	plusw1,w,c
 10072  01D2E2  6EE6               	movwf	postinc1,c
 10073  01D2E4  EC90  F0E8         	call	_send_lcd_cmd_dma	;wreg free
 10074                           
 10075                           ; BSR set to: 0
 10076                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 10077  01D2E8  52E5               	movf	postdec1,f,c
 10078  01D2EA  0012               	return		;funcret
 10079  01D2EC                     __end_of_eaDogM_WriteCommand:
 10080                           	opt callstack 0
 10081                           
 10082 ;; *************** function _current_sensor_cal *****************
 10083 ;; Defined at:
 10084 ;;		line 483 in file "main.c"
 10085 ;; Parameters:    Size  Location     Type
 10086 ;;		None
 10087 ;; Auto vars:     Size  Location     Type
 10088 ;;  cp              4  [STACK] unsigned long 
 10089 ;;  cb              4  [STACK] unsigned long 
 10090 ;;  x               1  [STACK] unsigned char 
 10091 ;; Return value:  Size  Location     Type
 10092 ;;                  1  [STACK] _Bool 
 10093 ;; Registers used:
 10094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10095 ;; Tracked objects:
 10096 ;;		On entry : 0/1
 10097 ;;		On exit  : 0/0
 10098 ;;		Unchanged: 0/0
 10099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10104 ;;Total ram usage:        0 bytes
 10105 ;; Hardware stack levels used:    1
 10106 ;; Hardware stack levels required when called:   28
 10107 ;; This function calls:
 10108 ;;		_WaitMs
 10109 ;;		_cal_current_zero
 10110 ;;		_clear_adc_scan
 10111 ;;		_get_raw_result
 10112 ;;		_get_switch
 10113 ;;		_get_vterm_ptr
 10114 ;;		_spinners
 10115 ;;		_sprintf
 10116 ;;		_start_adc_scan
 10117 ;;		_update_lcd
 10118 ;;		_write_cal_data
 10119 ;; This function is called by:
 10120 ;;		_main
 10121 ;; This function uses a reentrant model
 10122 ;;
 10123                           
 10124                           	psect	text29
 10125  0158F8                     __ptext29:
 10126                           	opt callstack 0
 10127  0158F8                     _current_sensor_cal:
 10128                           	opt callstack 0
 10129                           
 10130                           ; BSR set to: 0
 10131                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10132  0158F8  0E09               	movlw	9
 10133  0158FA  26E1               	addwf	fsr1l,f,c
 10134  0158FC  0E00               	movlw	0
 10135  0158FE  22E2               	addwfc	fsr1h,f,c
 10136                           
 10137                           ;main.c: 485:  uint8_t x = 0;
 10138                           ;stkvar	_x @ sp[(-9)+8]
 10139                           
 10140                           ;incstack = 0
 10141  015900  0EFF               	movlw	-1
 10142  015902  6AE3               	clrf	plusw1,c
 10143                           
 10144                           ;main.c: 486:  uint32_t cb = 0, cp = 0;
 10145                           ;stkvar	_cb @ sp[(-9)+4]
 10146  015904  0EFB               	movlw	-5
 10147  015906  6AE3               	clrf	plusw1,c
 10148  015908  0EFC               	movlw	-4
 10149  01590A  6AE3               	clrf	plusw1,c
 10150  01590C  0EFD               	movlw	-3
 10151  01590E  6AE3               	clrf	plusw1,c
 10152  015910  0EFE               	movlw	-2
 10153  015912  6AE3               	clrf	plusw1,c
 10154                           
 10155                           ;stkvar	_cp @ sp[(-9)+0]
 10156  015914  0EF7               	movlw	-9
 10157  015916  6AE3               	clrf	plusw1,c
 10158  015918  0EF8               	movlw	-8
 10159  01591A  6AE3               	clrf	plusw1,c
 10160  01591C  0EF9               	movlw	-7
 10161  01591E  6AE3               	clrf	plusw1,c
 10162  015920  0EFA               	movlw	-6
 10163  015922  6AE3               	clrf	plusw1,c
 10164                           
 10165                           ;main.c: 488:  sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
 10166  015924  0EB6               	movlw	low STR_46
 10167  015926  6EE6               	movwf	postinc1,c
 10168  015928  0EFE               	movlw	high STR_46
 10169  01592A  6EE6               	movwf	postinc1,c
 10170  01592C  0E00               	movlw	0
 10171  01592E  6EE6               	movwf	postinc1,c
 10172  015930  0E00               	movlw	0
 10173  015932  6EE6               	movwf	postinc1,c
 10174  015934  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 10175  015938  0060  F007  FFE6   	movff	btemp,postinc1
 10176  01593E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10177  015944  0E04               	movlw	4
 10178  015946  6EE6               	movwf	postinc1,c
 10179  015948  ECAC  F0D4         	call	_sprintf	;wreg free
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;main.c: 489:  sprintf(get_vterm_ptr(1, 0), "Sensor              ");
 10183  01594C  0ECF               	movlw	low STR_47
 10184  01594E  6EE6               	movwf	postinc1,c
 10185  015950  0EFD               	movlw	high STR_47
 10186  015952  6EE6               	movwf	postinc1,c
 10187  015954  0E00               	movlw	0
 10188  015956  6EE6               	movwf	postinc1,c
 10189  015958  0E01               	movlw	1
 10190  01595A  6EE6               	movwf	postinc1,c
 10191  01595C  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 10192  015960  0060  F007  FFE6   	movff	btemp,postinc1
 10193  015966  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10194  01596C  0E04               	movlw	4
 10195  01596E  6EE6               	movwf	postinc1,c
 10196  015970  ECAC  F0D4         	call	_sprintf	;wreg free
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;main.c: 490:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 10200  015974  0E4D               	movlw	low STR_48
 10201  015976  6EE6               	movwf	postinc1,c
 10202  015978  0EFE               	movlw	high STR_48
 10203  01597A  6EE6               	movwf	postinc1,c
 10204  01597C  0E00               	movlw	0
 10205  01597E  6EE6               	movwf	postinc1,c
 10206  015980  0E02               	movlw	2
 10207  015982  6EE6               	movwf	postinc1,c
 10208  015984  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 10209  015988  0060  F007  FFE6   	movff	btemp,postinc1
 10210  01598E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10211  015994  0E04               	movlw	4
 10212  015996  6EE6               	movwf	postinc1,c
 10213  015998  ECAC  F0D4         	call	_sprintf	;wreg free
 10214                           
 10215                           ; BSR set to: 0
 10216                           ;main.c: 491:  update_lcd(0);
 10217  01599C  0E00               	movlw	0
 10218  01599E  6EE6               	movwf	postinc1,c
 10219  0159A0  EC24  F0D4         	call	_update_lcd	;wreg free
 10220                           
 10221                           ;main.c: 492:  WaitMs(2000);
 10222  0159A4  0ED0               	movlw	208
 10223  0159A6  6EE6               	movwf	postinc1,c
 10224  0159A8  0E07               	movlw	7
 10225  0159AA  6EE6               	movwf	postinc1,c
 10226  0159AC  EC2B  F0E5         	call	_WaitMs	;wreg free
 10227                           
 10228                           ;main.c: 493:  sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 10229  0159B0  0E00               	movlw	0
 10230  0159B2  6EE6               	movwf	postinc1,c
 10231  0159B4  0E04               	movlw	4
 10232  0159B6  6EE6               	movwf	postinc1,c
 10233  0159B8  ECB0  F0D5         	call	_spinners	;wreg free
 10234  0159BC  5001               	movf	btemp^0,w,c
 10235  0159BE  6EE6               	movwf	postinc1,c
 10236  0159C0  0E00               	movlw	0
 10237  0159C2  6EE6               	movwf	postinc1,c
 10238  0159C4  0E49               	movlw	low STR_49
 10239  0159C6  6EE6               	movwf	postinc1,c
 10240  0159C8  0EFF               	movlw	high STR_49
 10241  0159CA  6EE6               	movwf	postinc1,c
 10242  0159CC  0E00               	movlw	0
 10243  0159CE  6EE6               	movwf	postinc1,c
 10244  0159D0  0E02               	movlw	2
 10245  0159D2  6EE6               	movwf	postinc1,c
 10246  0159D4  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 10247  0159D8  0060  F007  FFE6   	movff	btemp,postinc1
 10248  0159DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10249  0159E4  0E06               	movlw	6
 10250  0159E6  6EE6               	movwf	postinc1,c
 10251  0159E8  ECAC  F0D4         	call	_sprintf	;wreg free
 10252                           
 10253                           ; BSR set to: 0
 10254                           ;main.c: 494:  update_lcd(0);
 10255  0159EC  0E00               	movlw	0
 10256  0159EE  6EE6               	movwf	postinc1,c
 10257  0159F0  EC24  F0D4         	call	_update_lcd	;wreg free
 10258  0159F4                     l14183:
 10259                           
 10260                           ;main.c: 496:   if (++x > 64)
 10261                           ;stkvar	_x @ sp[(-9)+8]
 10262  0159F4  0EFF               	movlw	-1
 10263  0159F6  2AE3               	incf	plusw1,f,c
 10264  0159F8  0EFF               	movlw	-1
 10265  0159FA  006F FF8C  F001    	movff	plusw1,btemp
 10266  015A00  0E40               	movlw	64
 10267  015A02  6401               	cpfsgt	btemp^0,c
 10268  015A04  D001               	goto	l14187
 10269  015A06  D1CF               	goto	l1408
 10270  015A08                     l14187:
 10271                           
 10272                           ;main.c: 498:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 10273  015A08  0E00               	movlw	0
 10274  015A0A  6EE6               	movwf	postinc1,c
 10275  015A0C  0E04               	movlw	4
 10276  015A0E  6EE6               	movwf	postinc1,c
 10277  015A10  ECB0  F0D5         	call	_spinners	;wreg free
 10278  015A14  5001               	movf	btemp^0,w,c
 10279  015A16  6EE6               	movwf	postinc1,c
 10280  015A18  0E00               	movlw	0
 10281  015A1A  6EE6               	movwf	postinc1,c
 10282  015A1C  0E49               	movlw	low STR_49
 10283  015A1E  6EE6               	movwf	postinc1,c
 10284  015A20  0EFF               	movlw	high STR_49
 10285  015A22  6EE6               	movwf	postinc1,c
 10286  015A24  0E00               	movlw	0
 10287  015A26  6EE6               	movwf	postinc1,c
 10288  015A28  0E02               	movlw	2
 10289  015A2A  6EE6               	movwf	postinc1,c
 10290  015A2C  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 10291  015A30  0060  F007  FFE6   	movff	btemp,postinc1
 10292  015A36  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10293  015A3C  0E06               	movlw	6
 10294  015A3E  6EE6               	movwf	postinc1,c
 10295  015A40  ECAC  F0D4         	call	_sprintf	;wreg free
 10296                           
 10297                           ;main.c: 499:   update_lcd(0);
 10298  015A44  0E00               	movlw	0
 10299  015A46  6EE6               	movwf	postinc1,c
 10300  015A48  EC24  F0D4         	call	_update_lcd	;wreg free
 10301                           
 10302                           ;main.c: 500:   WaitMs(100);
 10303  015A4C  0E64               	movlw	100
 10304  015A4E  6EE6               	movwf	postinc1,c
 10305  015A50  0E00               	movlw	0
 10306  015A52  6EE6               	movwf	postinc1,c
 10307  015A54  EC2B  F0E5         	call	_WaitMs	;wreg free
 10308                           
 10309                           ;main.c: 501:  } while (get_switch(SCALIB));
 10310  015A58  0E04               	movlw	4
 10311  015A5A  6EE6               	movwf	postinc1,c
 10312  015A5C  EC3E  F0E6         	call	_get_switch	;wreg free
 10313  015A60  5001               	movf	btemp^0,w,c
 10314  015A62  A4D8               	btfss	status,2,c
 10315  015A64  D7C7               	goto	l14183
 10316                           
 10317                           ;main.c: 503:  x = 0;
 10318                           ;stkvar	_x @ sp[(-9)+8]
 10319  015A66  0EFF               	movlw	-1
 10320  015A68  6AE3               	clrf	plusw1,c
 10321  015A6A                     l14195:
 10322                           
 10323                           ;main.c: 505:   cb += get_raw_result(C_BATT);
 10324  015A6A  0E00               	movlw	0
 10325  015A6C  6EE6               	movwf	postinc1,c
 10326  015A6E  ECBD  F0E8         	call	_get_raw_result	;wreg free
 10327                           
 10328                           ;stkvar	_cb @ sp[(-9)+4]
 10329  015A72  50E1               	movf	fsr1l,w,c
 10330  015A74  0FFB               	addlw	-5
 10331  015A76  6ED9               	movwf	fsr2l,c
 10332  015A78  50E2               	movf	fsr1h,w,c
 10333  015A7A  6EDA               	movwf	fsr2h,c
 10334  015A7C  0EFF               	movlw	255
 10335  015A7E  22DA               	addwfc	fsr2h,f,c
 10336  015A80  5001               	movf	btemp^0,w,c
 10337  015A82  26DE               	addwf	postinc2,f,c
 10338  015A84  5002               	movf	(btemp+1)^0,w,c
 10339  015A86  22DE               	addwfc	postinc2,f,c
 10340  015A88  0E00               	movlw	0
 10341  015A8A  22DE               	addwfc	postinc2,f,c
 10342  015A8C  22DE               	addwfc	postinc2,f,c
 10343                           
 10344                           ;main.c: 506:   cp += get_raw_result(C_PV);
 10345  015A8E  0E01               	movlw	1
 10346  015A90  6EE6               	movwf	postinc1,c
 10347  015A92  ECBD  F0E8         	call	_get_raw_result	;wreg free
 10348                           
 10349                           ;stkvar	_cp @ sp[(-9)+0]
 10350  015A96  50E1               	movf	fsr1l,w,c
 10351  015A98  0FF7               	addlw	-9
 10352  015A9A  6ED9               	movwf	fsr2l,c
 10353  015A9C  50E2               	movf	fsr1h,w,c
 10354  015A9E  6EDA               	movwf	fsr2h,c
 10355  015AA0  0EFF               	movlw	255
 10356  015AA2  22DA               	addwfc	fsr2h,f,c
 10357  015AA4  5001               	movf	btemp^0,w,c
 10358  015AA6  26DE               	addwf	postinc2,f,c
 10359  015AA8  5002               	movf	(btemp+1)^0,w,c
 10360  015AAA  22DE               	addwfc	postinc2,f,c
 10361  015AAC  0E00               	movlw	0
 10362  015AAE  22DE               	addwfc	postinc2,f,c
 10363  015AB0  22DE               	addwfc	postinc2,f,c
 10364                           
 10365                           ;main.c: 507:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 10366  015AB2  0EE0               	movlw	low STR_51
 10367  015AB4  6EE6               	movwf	postinc1,c
 10368  015AB6  0EFE               	movlw	high STR_51
 10369  015AB8  6EE6               	movwf	postinc1,c
 10370  015ABA  0E00               	movlw	0
 10371  015ABC  6EE6               	movwf	postinc1,c
 10372  015ABE  0E00               	movlw	0
 10373  015AC0  6EE6               	movwf	postinc1,c
 10374  015AC2  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 10375  015AC6  0060  F007  FFE6   	movff	btemp,postinc1
 10376  015ACC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10377  015AD2  0E04               	movlw	4
 10378  015AD4  6EE6               	movwf	postinc1,c
 10379  015AD6  ECAC  F0D4         	call	_sprintf	;wreg free
 10380                           
 10381                           ; BSR set to: 0
 10382                           ;main.c: 508:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10383  015ADA  0E01               	movlw	1
 10384  015ADC  6EE6               	movwf	postinc1,c
 10385  015ADE  ECBD  F0E8         	call	_get_raw_result	;wreg free
 10386  015AE2  0060  F007  FFE6   	movff	btemp,postinc1
 10387  015AE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10388  015AEE  0E00               	movlw	0
 10389  015AF0  6EE6               	movwf	postinc1,c
 10390  015AF2  ECBD  F0E8         	call	_get_raw_result	;wreg free
 10391  015AF6  0060  F007  FFE6   	movff	btemp,postinc1
 10392  015AFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10393  015B02  0EBA               	movlw	low STR_52
 10394  015B04  6EE6               	movwf	postinc1,c
 10395  015B06  0EFD               	movlw	high STR_52
 10396  015B08  6EE6               	movwf	postinc1,c
 10397  015B0A  0E00               	movlw	0
 10398  015B0C  6EE6               	movwf	postinc1,c
 10399  015B0E  0E01               	movlw	1
 10400  015B10  6EE6               	movwf	postinc1,c
 10401  015B12  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 10402  015B16  0060  F007  FFE6   	movff	btemp,postinc1
 10403  015B1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10404  015B22  0E08               	movlw	8
 10405  015B24  6EE6               	movwf	postinc1,c
 10406  015B26  ECAC  F0D4         	call	_sprintf	;wreg free
 10407                           
 10408                           ; BSR set to: 0
 10409                           ;main.c: 509:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 10410                           ;stkvar	_x @ sp[(-9)+8]
 10411  015B2A  0EFF               	movlw	-1
 10412  015B2C  50E3               	movf	plusw1,w,c
 10413  015B2E  6EE6               	movwf	postinc1,c
 10414  015B30  0E00               	movlw	0
 10415  015B32  6EE6               	movwf	postinc1,c
 10416  015B34  0E1F               	movlw	low STR_53
 10417  015B36  6EE6               	movwf	postinc1,c
 10418  015B38  0EFF               	movlw	high STR_53
 10419  015B3A  6EE6               	movwf	postinc1,c
 10420  015B3C  0E00               	movlw	0
 10421  015B3E  6EE6               	movwf	postinc1,c
 10422  015B40  0E02               	movlw	2
 10423  015B42  6EE6               	movwf	postinc1,c
 10424  015B44  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 10425  015B48  0060  F007  FFE6   	movff	btemp,postinc1
 10426  015B4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10427  015B54  0E06               	movlw	6
 10428  015B56  6EE6               	movwf	postinc1,c
 10429  015B58  ECAC  F0D4         	call	_sprintf	;wreg free
 10430                           
 10431                           ; BSR set to: 0
 10432                           ;main.c: 510:   update_lcd(0);
 10433  015B5C  0E00               	movlw	0
 10434  015B5E  6EE6               	movwf	postinc1,c
 10435  015B60  EC24  F0D4         	call	_update_lcd	;wreg free
 10436                           
 10437                           ;main.c: 511:   clear_adc_scan();
 10438  015B64  ECC6  F0E9         	call	_clear_adc_scan	;wreg free
 10439                           
 10440                           ; BSR set to: 0
 10441                           ;main.c: 512:   start_adc_scan();
 10442  015B68  ECD1  F0E0         	call	_start_adc_scan	;wreg free
 10443                           
 10444                           ;main.c: 513:   WaitMs(100);
 10445  015B6C  0E64               	movlw	100
 10446  015B6E  6EE6               	movwf	postinc1,c
 10447  015B70  0E00               	movlw	0
 10448  015B72  6EE6               	movwf	postinc1,c
 10449  015B74  EC2B  F0E5         	call	_WaitMs	;wreg free
 10450                           
 10451                           ;main.c: 514:  } while (++x < 64);
 10452                           ;stkvar	_x @ sp[(-9)+8]
 10453  015B78  0EFF               	movlw	-1
 10454  015B7A  2AE3               	incf	plusw1,f,c
 10455  015B7C  0EFF               	movlw	-1
 10456  015B7E  006F FF8C  F001    	movff	plusw1,btemp
 10457  015B84  0E3F               	movlw	63
 10458  015B86  6401               	cpfsgt	btemp^0,c
 10459  015B88  D770               	goto	l14195
 10460                           
 10461                           ;main.c: 515:  cb = cb >> 6;
 10462  015B8A  0E06               	movlw	6
 10463  015B8C  6E0C               	movwf	(btemp+11)^0,c
 10464                           
 10465                           ;stkvar	_cb @ sp[(-9)+4]
 10466  015B8E  50E1               	movf	fsr1l,w,c
 10467  015B90  0FFB               	addlw	-5
 10468  015B92  6ED9               	movwf	fsr2l,c
 10469  015B94  50E2               	movf	fsr1h,w,c
 10470  015B96  6EDA               	movwf	fsr2h,c
 10471  015B98  0EFF               	movlw	255
 10472  015B9A  22DA               	addwfc	fsr2h,f,c
 10473  015B9C  280C               	incf	(btemp+11)^0,w,c
 10474  015B9E  52DE               	movf	postinc2,f,c
 10475  015BA0  D007               	goto	u13520
 10476  015BA2                     u13525:
 10477  015BA2  52DE               	movf	postinc2,f,c
 10478  015BA4  52DE               	movf	postinc2,f,c
 10479  015BA6  90D8               	bcf	status,0,c
 10480  015BA8  32DD               	rrcf	postdec2,f,c
 10481  015BAA  32DD               	rrcf	postdec2,f,c
 10482  015BAC  32DD               	rrcf	postdec2,f,c
 10483  015BAE  32DE               	rrcf	postinc2,f,c
 10484  015BB0                     u13520:
 10485  015BB0  2EE8               	decfsz	wreg,f,c
 10486  015BB2  D7F7               	goto	u13525
 10487                           
 10488                           ;main.c: 516:  cp = cp >> 6;
 10489  015BB4  0E06               	movlw	6
 10490  015BB6  6E0C               	movwf	(btemp+11)^0,c
 10491                           
 10492                           ;stkvar	_cp @ sp[(-9)+0]
 10493  015BB8  50E1               	movf	fsr1l,w,c
 10494  015BBA  0FF7               	addlw	-9
 10495  015BBC  6ED9               	movwf	fsr2l,c
 10496  015BBE  50E2               	movf	fsr1h,w,c
 10497  015BC0  6EDA               	movwf	fsr2h,c
 10498  015BC2  0EFF               	movlw	255
 10499  015BC4  22DA               	addwfc	fsr2h,f,c
 10500  015BC6  280C               	incf	(btemp+11)^0,w,c
 10501  015BC8  52DE               	movf	postinc2,f,c
 10502  015BCA  D007               	goto	u13530
 10503  015BCC                     u13535:
 10504  015BCC  52DE               	movf	postinc2,f,c
 10505  015BCE  52DE               	movf	postinc2,f,c
 10506  015BD0  90D8               	bcf	status,0,c
 10507  015BD2  32DD               	rrcf	postdec2,f,c
 10508  015BD4  32DD               	rrcf	postdec2,f,c
 10509  015BD6  32DD               	rrcf	postdec2,f,c
 10510  015BD8  32DE               	rrcf	postinc2,f,c
 10511  015BDA                     u13530:
 10512  015BDA  2EE8               	decfsz	wreg,f,c
 10513  015BDC  D7F7               	goto	u13535
 10514                           
 10515                           ;main.c: 518:  if (cal_current_zero(0, cb, cp)) {
 10516                           ;stkvar	_cp @ sp[(-9)+0]
 10517  015BDE  0EF7               	movlw	-9
 10518  015BE0  006F FF8F FFE6     	movff	plusw1,postinc1
 10519  015BE6  006F FF8F FFE6     	movff	plusw1,postinc1
 10520                           
 10521                           ;stkvar	_cb @ sp[(-11)+4]
 10522  015BEC  0EF9               	movlw	-7
 10523  015BEE  006F FF8F FFE6     	movff	plusw1,postinc1
 10524  015BF4  006F FF8F FFE6     	movff	plusw1,postinc1
 10525  015BFA  0E00               	movlw	0
 10526  015BFC  6EE6               	movwf	postinc1,c
 10527  015BFE  EC57  F0DD         	call	_cal_current_zero	;wreg free
 10528  015C02  5001               	movf	btemp^0,w,c
 10529  015C04  B4D8               	btfsc	status,2,c
 10530  015C06  D075               	goto	l14233
 10531                           
 10532                           ;main.c: 519:   cal_current_zero(1, cb, cp);
 10533                           ;stkvar	_cp @ sp[(-9)+0]
 10534  015C08  0EF7               	movlw	-9
 10535  015C0A  006F FF8F FFE6     	movff	plusw1,postinc1
 10536  015C10  006F FF8F FFE6     	movff	plusw1,postinc1
 10537                           
 10538                           ;stkvar	_cb @ sp[(-11)+4]
 10539  015C16  0EF9               	movlw	-7
 10540  015C18  006F FF8F FFE6     	movff	plusw1,postinc1
 10541  015C1E  006F FF8F FFE6     	movff	plusw1,postinc1
 10542  015C24  0E01               	movlw	1
 10543  015C26  6EE6               	movwf	postinc1,c
 10544  015C28  EC57  F0DD         	call	_cal_current_zero	;wreg free
 10545                           
 10546                           ;main.c: 520:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
 10547  015C2C  0EB6               	movlw	low STR_46
 10548  015C2E  6EE6               	movwf	postinc1,c
 10549  015C30  0EFE               	movlw	high STR_46
 10550  015C32  6EE6               	movwf	postinc1,c
 10551  015C34  0E00               	movlw	0
 10552  015C36  6EE6               	movwf	postinc1,c
 10553  015C38  0E00               	movlw	0
 10554  015C3A  6EE6               	movwf	postinc1,c
 10555  015C3C  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 10556  015C40  0060  F007  FFE6   	movff	btemp,postinc1
 10557  015C46  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10558  015C4C  0E04               	movlw	4
 10559  015C4E  6EE6               	movwf	postinc1,c
 10560  015C50  ECAC  F0D4         	call	_sprintf	;wreg free
 10561                           
 10562                           ; BSR set to: 0
 10563                           ;main.c: 521:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", cb, cp);
 10564                           ;stkvar	_cp @ sp[(-9)+0]
 10565  015C54  0EF7               	movlw	-9
 10566  015C56  006F FF8F FFE6     	movff	plusw1,postinc1
 10567  015C5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10568  015C62  006F FF8F FFE6     	movff	plusw1,postinc1
 10569  015C68  006F FF8F FFE6     	movff	plusw1,postinc1
 10570                           
 10571                           ;stkvar	_cb @ sp[(-13)+4]
 10572  015C6E  0EF7               	movlw	-9
 10573  015C70  006F FF8F FFE6     	movff	plusw1,postinc1
 10574  015C76  006F FF8F FFE6     	movff	plusw1,postinc1
 10575  015C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 10576  015C82  006F FF8F FFE6     	movff	plusw1,postinc1
 10577  015C88  0EE4               	movlw	low STR_55
 10578  015C8A  6EE6               	movwf	postinc1,c
 10579  015C8C  0EFD               	movlw	high STR_55
 10580  015C8E  6EE6               	movwf	postinc1,c
 10581  015C90  0E00               	movlw	0
 10582  015C92  6EE6               	movwf	postinc1,c
 10583  015C94  0E01               	movlw	1
 10584  015C96  6EE6               	movwf	postinc1,c
 10585  015C98  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 10586  015C9C  0060  F007  FFE6   	movff	btemp,postinc1
 10587  015CA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10588  015CA8  0E0C               	movlw	12
 10589  015CAA  6EE6               	movwf	postinc1,c
 10590  015CAC  ECAC  F0D4         	call	_sprintf	;wreg free
 10591                           
 10592                           ; BSR set to: 0
 10593                           ;main.c: 522:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
 10594  015CB0  0E8C               	movlw	low STR_56
 10595  015CB2  6EE6               	movwf	postinc1,c
 10596  015CB4  0EFE               	movlw	high STR_56
 10597  015CB6  6EE6               	movwf	postinc1,c
 10598  015CB8  0E00               	movlw	0
 10599  015CBA  6EE6               	movwf	postinc1,c
 10600  015CBC  0E02               	movlw	2
 10601  015CBE  6EE6               	movwf	postinc1,c
 10602  015CC0  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 10603  015CC4  0060  F007  FFE6   	movff	btemp,postinc1
 10604  015CCA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10605  015CD0  0E04               	movlw	4
 10606  015CD2  6EE6               	movwf	postinc1,c
 10607  015CD4  ECAC  F0D4         	call	_sprintf	;wreg free
 10608                           
 10609                           ; BSR set to: 0
 10610                           ;main.c: 523:   update_lcd(0);
 10611  015CD8  0E00               	movlw	0
 10612  015CDA  6EE6               	movwf	postinc1,c
 10613  015CDC  EC24  F0D4         	call	_update_lcd	;wreg free
 10614                           
 10615                           ;main.c: 524:   WaitMs(2000);
 10616  015CE0  0ED0               	movlw	208
 10617  015CE2  6EE6               	movwf	postinc1,c
 10618  015CE4  0E07               	movlw	7
 10619  015CE6  6EE6               	movwf	postinc1,c
 10620  015CE8  EC2B  F0E5         	call	_WaitMs	;wreg free
 10621                           
 10622                           ;main.c: 525:   write_cal_data();
 10623  015CEC  EC31  F0D5         	call	_write_cal_data	;wreg free
 10624                           
 10625                           ;main.c: 526:  } else {
 10626  015CF0  D05A               	goto	l1408
 10627  015CF2                     l14233:
 10628                           
 10629                           ;main.c: 527:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
 10630  015CF2  0EB6               	movlw	low STR_46
 10631  015CF4  6EE6               	movwf	postinc1,c
 10632  015CF6  0EFE               	movlw	high STR_46
 10633  015CF8  6EE6               	movwf	postinc1,c
 10634  015CFA  0E00               	movlw	0
 10635  015CFC  6EE6               	movwf	postinc1,c
 10636  015CFE  0E00               	movlw	0
 10637  015D00  6EE6               	movwf	postinc1,c
 10638  015D02  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 10639  015D06  0060  F007  FFE6   	movff	btemp,postinc1
 10640  015D0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10641  015D12  0E04               	movlw	4
 10642  015D14  6EE6               	movwf	postinc1,c
 10643  015D16  ECAC  F0D4         	call	_sprintf	;wreg free
 10644                           
 10645                           ;main.c: 528:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10646  015D1A  0E01               	movlw	1
 10647  015D1C  6EE6               	movwf	postinc1,c
 10648  015D1E  ECBD  F0E8         	call	_get_raw_result	;wreg free
 10649  015D22  0060  F007  FFE6   	movff	btemp,postinc1
 10650  015D28  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10651  015D2E  0E00               	movlw	0
 10652  015D30  6EE6               	movwf	postinc1,c
 10653  015D32  ECBD  F0E8         	call	_get_raw_result	;wreg free
 10654  015D36  0060  F007  FFE6   	movff	btemp,postinc1
 10655  015D3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10656  015D42  0EE4               	movlw	low STR_55
 10657  015D44  6EE6               	movwf	postinc1,c
 10658  015D46  0EFD               	movlw	high STR_55
 10659  015D48  6EE6               	movwf	postinc1,c
 10660  015D4A  0E00               	movlw	0
 10661  015D4C  6EE6               	movwf	postinc1,c
 10662  015D4E  0E01               	movlw	1
 10663  015D50  6EE6               	movwf	postinc1,c
 10664  015D52  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 10665  015D56  0060  F007  FFE6   	movff	btemp,postinc1
 10666  015D5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10667  015D62  0E08               	movlw	8
 10668  015D64  6EE6               	movwf	postinc1,c
 10669  015D66  ECAC  F0D4         	call	_sprintf	;wreg free
 10670                           
 10671                           ;main.c: 529:   sprintf(get_vterm_ptr(2, 0), "Out Of Range        ");
 10672  015D6A  0E77               	movlw	low STR_59
 10673  015D6C  6EE6               	movwf	postinc1,c
 10674  015D6E  0EFE               	movlw	high STR_59
 10675  015D70  6EE6               	movwf	postinc1,c
 10676  015D72  0E00               	movlw	0
 10677  015D74  6EE6               	movwf	postinc1,c
 10678  015D76  0E02               	movlw	2
 10679  015D78  6EE6               	movwf	postinc1,c
 10680  015D7A  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 10681  015D7E  0060  F007  FFE6   	movff	btemp,postinc1
 10682  015D84  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10683  015D8A  0E04               	movlw	4
 10684  015D8C  6EE6               	movwf	postinc1,c
 10685  015D8E  ECAC  F0D4         	call	_sprintf	;wreg free
 10686                           
 10687                           ;main.c: 530:   update_lcd(0);
 10688  015D92  0E00               	movlw	0
 10689  015D94  6EE6               	movwf	postinc1,c
 10690  015D96  EC24  F0D4         	call	_update_lcd	;wreg free
 10691                           
 10692                           ;main.c: 531:   WaitMs(2000);
 10693  015D9A  0ED0               	movlw	208
 10694  015D9C  6EE6               	movwf	postinc1,c
 10695  015D9E  0E07               	movlw	7
 10696  015DA0  6EE6               	movwf	postinc1,c
 10697  015DA2  EC2B  F0E5         	call	_WaitMs	;wreg free
 10698  015DA6                     l1408:
 10699                           
 10700                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 10701  015DA6  0EF7               	movlw	247
 10702  015DA8  26E1               	addwf	fsr1l,f,c
 10703  015DAA  0EFF               	movlw	255
 10704  015DAC  22E2               	addwfc	fsr1h,f,c
 10705  015DAE  0012               	return		;funcret
 10706  015DB0                     __end_of_current_sensor_cal:
 10707                           	opt callstack 0
 10708                           
 10709 ;; *************** function _write_cal_data *****************
 10710 ;; Defined at:
 10711 ;;		line 387 in file "daq.c"
 10712 ;; Parameters:    Size  Location     Type
 10713 ;;		None
 10714 ;; Auto vars:     Size  Location     Type
 10715 ;;  x               2  [STACK] unsigned short 
 10716 ;;  y               2  [STACK] unsigned short 
 10717 ;;  r_cal_ptr       1  [STACK] PTR unsigned char 
 10718 ;;		 -> R(57), 
 10719 ;;  crcVal          1    0        unsigned char 
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  1  [STACK] void 
 10722 ;; Registers used:
 10723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10733 ;;Total ram usage:        0 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; Hardware stack levels required when called:   17
 10736 ;; This function calls:
 10737 ;;		_CRC_8BitDataWrite
 10738 ;;		_CRC_CalculatedResultGet
 10739 ;;		_CRC_Initialize
 10740 ;;		_CRC_IsBusy
 10741 ;;		_CRC_Start
 10742 ;;		_DATAEE_WriteByte
 10743 ;; This function is called by:
 10744 ;;		_current_sensor_cal
 10745 ;; This function uses a reentrant model
 10746 ;;
 10747                           
 10748                           	psect	text30
 10749  01AA62                     __ptext30:
 10750                           	opt callstack 0
 10751  01AA62                     _write_cal_data:
 10752                           	opt callstack 0
 10753                           
 10754                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10755  01AA62  0E05               	movlw	5
 10756  01AA64  26E1               	addwf	fsr1l,f,c
 10757  01AA66  0E00               	movlw	0
 10758  01AA68  22E2               	addwfc	fsr1h,f,c
 10759                           
 10760                           ;daq.c: 389:  uint16_t x = 0, y;
 10761                           ;stkvar	_x @ sp[(-5)+0]
 10762                           
 10763                           ;incstack = 0
 10764  01AA6A  0EFB               	movlw	-5
 10765  01AA6C  6AE3               	clrf	plusw1,c
 10766  01AA6E  0EFC               	movlw	-4
 10767  01AA70  6AE3               	clrf	plusw1,c
 10768                           
 10769                           ;daq.c: 390:  uint8_t *r_cal_ptr, crcVal;;daq.c: 392:  y = sizeof(R);
 10770  01AA72  0E39               	movlw	57
 10771  01AA74  6E0B               	movwf	(btemp+10)^0,c
 10772  01AA76  0E00               	movlw	0
 10773  01AA78  6E0C               	movwf	(btemp+11)^0,c
 10774                           
 10775                           ;stkvar	_y @ sp[(-5)+2]
 10776  01AA7A  0EFD               	movlw	-3
 10777  01AA7C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10778  01AA82  0EFE               	movlw	-2
 10779  01AA84  0060  F033  FFE3   	movff	btemp+11,plusw1
 10780                           
 10781                           ;daq.c: 393:  R.crc = 0x42;
 10782  01AA8A  0E42               	movlw	66
 10783  01AA8C  0100               	movlb	0	; () banked
 10784  01AA8E  6FE6               	movwf	(_R+56)& (0+255),b	;volatile
 10785                           
 10786                           ; BSR set to: 0
 10787                           ;daq.c: 394:  r_cal_ptr = (uint8_t*) & R;
 10788                           ;stkvar	_r_cal_ptr @ sp[(-5)+4]
 10789  01AA90  0EAE               	movlw	low _R
 10790  01AA92  6E01               	movwf	btemp^0,c
 10791  01AA94  0EFF               	movlw	-1
 10792  01AA96  0060  F007  FFE3   	movff	btemp,plusw1
 10793                           
 10794                           ; BSR set to: 0
 10795                           ;daq.c: 395:  R.checkmark = 0x1957;
 10796  01AA9C  0E19               	movlw	25
 10797  01AA9E  6FE5               	movwf	(_R+55)& (0+255),b	;volatile
 10798  01AAA0  0E57               	movlw	87
 10799  01AAA2  6FE4               	movwf	(_R+54)& (0+255),b	;volatile
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;daq.c: 397:  CRC_Initialize();
 10803  01AAA4  EC0E  F0DD         	call	_CRC_Initialize	;wreg free
 10804                           
 10805                           ; BSR set to: 0
 10806                           ;daq.c: 400:  CRC_Start();
 10807  01AAA8  ECC3  F0E9         	call	_CRC_Start	;wreg free
 10808  01AAAC                     l11359:
 10809                           
 10810                           ;daq.c: 403:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 10811                           ;stkvar	_x @ sp[(-5)+0]
 10812  01AAAC  0EFB               	movlw	-5
 10813  01AAAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 10814                           
 10815                           ;stkvar	_r_cal_ptr @ sp[(-5)+4]
 10816  01AAB4  0EFF               	movlw	-1
 10817  01AAB6  50E3               	movf	plusw1,w,c
 10818  01AAB8  240C               	addwf	(btemp+11)^0,w,c
 10819  01AABA  6ED9               	movwf	fsr2l,c
 10820  01AABC  6ADA               	clrf	fsr2h,c
 10821  01AABE  50DF               	movf	indf2,w,c
 10822  01AAC0  6EE6               	movwf	postinc1,c
 10823                           
 10824                           ;stkvar	_x @ sp[(-6)+0]
 10825  01AAC2  0EFA               	movlw	-6
 10826  01AAC4  006F FF8F FFE6     	movff	plusw1,postinc1
 10827  01AACA  006F FF8F FFE6     	movff	plusw1,postinc1
 10828  01AAD0  EC37  F0E0         	call	_DATAEE_WriteByte	;wreg free
 10829                           
 10830                           ;daq.c: 404:   CRC_8BitDataWrite(r_cal_ptr[x]);
 10831                           ;stkvar	_x @ sp[(-5)+0]
 10832  01AAD4  0EFB               	movlw	-5
 10833  01AAD6  006F FF8C  F00C    	movff	plusw1,btemp+11
 10834                           
 10835                           ;stkvar	_r_cal_ptr @ sp[(-5)+4]
 10836  01AADC  0EFF               	movlw	-1
 10837  01AADE  50E3               	movf	plusw1,w,c
 10838  01AAE0  240C               	addwf	(btemp+11)^0,w,c
 10839  01AAE2  6ED9               	movwf	fsr2l,c
 10840  01AAE4  6ADA               	clrf	fsr2h,c
 10841  01AAE6  50DF               	movf	indf2,w,c
 10842  01AAE8  6EE6               	movwf	postinc1,c
 10843  01AAEA  EC35  F0E9         	call	_CRC_8BitDataWrite	;wreg free
 10844  01AAEE                     l11363:
 10845  01AAEE  EC57  F0E9         	call	_CRC_IsBusy	;wreg free
 10846  01AAF2  5001               	movf	btemp^0,w,c
 10847  01AAF4  A4D8               	btfss	status,2,c
 10848  01AAF6  D7FB               	goto	l11363
 10849                           
 10850                           ;daq.c: 406:  } while (++x < y);
 10851                           ;stkvar	_y @ sp[(-5)+2]
 10852  01AAF8  0EFD               	movlw	-3
 10853  01AAFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 10854  01AB00  0EFE               	movlw	-2
 10855  01AB02  006F FF8C  F00C    	movff	plusw1,btemp+11
 10856                           
 10857                           ;stkvar	_x @ sp[(-5)+0]
 10858  01AB08  0EFB               	movlw	-5
 10859  01AB0A  50E3               	movf	plusw1,w,c
 10860  01AB0C  0F01               	addlw	1
 10861  01AB0E  6E01               	movwf	btemp^0,c
 10862  01AB10  0EFB               	movlw	-5
 10863  01AB12  0060  F007  FFE3   	movff	btemp,plusw1
 10864  01AB18  6A01               	clrf	btemp^0,c
 10865  01AB1A  0EFC               	movlw	-4
 10866  01AB1C  50E3               	movf	plusw1,w,c
 10867  01AB1E  2001               	addwfc	btemp^0,w,c
 10868  01AB20  6E01               	movwf	btemp^0,c
 10869  01AB22  0EFC               	movlw	-4
 10870  01AB24  0060  F007  FFE3   	movff	btemp,plusw1
 10871  01AB2A  0EFB               	movlw	-5
 10872  01AB2C  006F FF8C  F009    	movff	plusw1,btemp+8
 10873  01AB32  0EFC               	movlw	-4
 10874  01AB34  006F FF8C  F00A    	movff	plusw1,btemp+9
 10875  01AB3A  500B               	movf	(btemp+10)^0,w,c
 10876  01AB3C  5C09               	subwf	(btemp+8)^0,w,c
 10877  01AB3E  500C               	movf	(btemp+11)^0,w,c
 10878  01AB40  580A               	subwfb	(btemp+9)^0,w,c
 10879  01AB42  A0D8               	btfss	status,0,c
 10880  01AB44  D7B3               	goto	l11359
 10881                           
 10882                           ;daq.c: 408:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 10883  01AB46  0E00               	movlw	0
 10884  01AB48  6EE6               	movwf	postinc1,c
 10885  01AB4A  0E00               	movlw	0
 10886  01AB4C  6EE6               	movwf	postinc1,c
 10887  01AB4E  0E00               	movlw	0
 10888  01AB50  6EE6               	movwf	postinc1,c
 10889  01AB52  EC01  F0CC         	call	_CRC_CalculatedResultGet	;wreg free
 10890                           
 10891                           ; _write_cal_data: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10892  01AB56  0EFB               	movlw	251
 10893  01AB58  26E1               	addwf	fsr1l,f,c
 10894  01AB5A  0EFF               	movlw	255
 10895  01AB5C  22E2               	addwfc	fsr1h,f,c
 10896  01AB5E  0012               	return		;funcret
 10897  01AB60                     __end_of_write_cal_data:
 10898                           	opt callstack 0
 10899                           
 10900 ;; *************** function _DATAEE_WriteByte *****************
 10901 ;; Defined at:
 10902 ;;		line 172 in file "mcc_generated_files/memory.c"
 10903 ;; Parameters:    Size  Location     Type
 10904 ;;  bAdd            2  [STACK] unsigned short 
 10905 ;;  bData           1  [STACK] unsigned char 
 10906 ;; Auto vars:     Size  Location     Type
 10907 ;;  GIEBitValue     1  [STACK] unsigned char 
 10908 ;; Return value:  Size  Location     Type
 10909 ;;                  1  [STACK] void 
 10910 ;; Registers used:
 10911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 10912 ;; Tracked objects:
 10913 ;;		On entry : 0/39
 10914 ;;		On exit  : 0/0
 10915 ;;		Unchanged: 0/0
 10916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10921 ;;Total ram usage:        0 bytes
 10922 ;; Hardware stack levels used:    1
 10923 ;; Hardware stack levels required when called:   15
 10924 ;; This function calls:
 10925 ;;		Nothing
 10926 ;; This function is called by:
 10927 ;;		_write_cal_data
 10928 ;; This function uses a reentrant model
 10929 ;;
 10930                           
 10931                           	psect	text31
 10932  01C06E                     __ptext31:
 10933                           	opt callstack 0
 10934  01C06E                     _DATAEE_WriteByte:
 10935                           	opt callstack 0
 10936                           
 10937                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10938  01C06E  52E6               	movf	postinc1,f,c
 10939                           
 10940                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 10941                           
 10942                           ;incstack = 0
 10943  01C070  AED2               	btfss	210,7,c	;volatile
 10944  01C072  D003               	goto	u9760
 10945  01C074  6A0C               	clrf	(btemp+11)^0,c
 10946  01C076  2A0C               	incf	(btemp+11)^0,f,c
 10947  01C078  D001               	goto	u9768
 10948  01C07A                     u9760:
 10949  01C07A  6A0C               	clrf	(btemp+11)^0,c
 10950  01C07C                     u9768:
 10951                           
 10952                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 10953  01C07C  0EFF               	movlw	-1
 10954  01C07E  0060  F033  FFE3   	movff	btemp+11,plusw1
 10955                           
 10956                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 10957                           ;stkvar	_bAdd @ sp[(-1)+-2]
 10958  01C084  0EFE               	movlw	254
 10959  01C086  24E1               	addwf	fsr1l,w,c
 10960  01C088  6ED9               	movwf	fsr2l,c
 10961  01C08A  0EFF               	movlw	255
 10962  01C08C  20E2               	addwfc	fsr1h,w,c
 10963  01C08E  6EDA               	movwf	fsr2h,c
 10964  01C090  50DF               	movf	indf2,w,c
 10965  01C092  0B03               	andlw	3
 10966  01C094  0139               	movlb	57	; () banked
 10967  01C096  6FE1               	movwf	225,b	;volatile
 10968                           
 10969                           ; BSR set to: 57
 10970                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 10971                           ;stkvar	_bAdd @ sp[(-1)+-2]
 10972  01C098  0EFD               	movlw	-3
 10973  01C09A  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 10974                           
 10975                           ; BSR set to: 57
 10976                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 10977                           ;stkvar	_bData @ sp[(-1)+-3]
 10978  01C0A0  0EFC               	movlw	-4
 10979  01C0A2  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 10980                           
 10981                           ; BSR set to: 57
 10982                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 10983  01C0A8  0E3F               	movlw	-193
 10984  01C0AA  17E5               	andwf	229,f,b	;volsfr
 10985                           
 10986                           ; BSR set to: 57
 10987                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 10988  01C0AC  85E5               	bsf	229,2,b	;volsfr
 10989                           
 10990                           ; BSR set to: 57
 10991                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 10992  01C0AE  9ED2               	bcf	210,7,c	;volatile
 10993                           
 10994                           ; BSR set to: 57
 10995                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 10996  01C0B0  0E55               	movlw	85
 10997  01C0B2  6FE6               	movwf	230,b	;volsfr
 10998                           
 10999                           ; BSR set to: 57
 11000                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 11001  01C0B4  0EAA               	movlw	170
 11002  01C0B6  6FE6               	movwf	230,b	;volsfr
 11003                           
 11004                           ; BSR set to: 57
 11005                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 11006  01C0B8  83E5               	bsf	229,1,b	;volsfr
 11007  01C0BA                     l942:
 11008                           
 11009                           ; BSR set to: 57
 11010                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 11011  01C0BA  B3E5               	btfsc	229,1,b	;volsfr
 11012  01C0BC  D7FE               	goto	l942
 11013                           
 11014                           ; BSR set to: 57
 11015                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 11016  01C0BE  95E5               	bcf	229,2,b	;volsfr
 11017                           
 11018                           ; BSR set to: 57
 11019                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 11020                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 11021  01C0C0  0EFF               	movlw	-1
 11022  01C0C2  B0E3               	btfsc	plusw1,0,c
 11023  01C0C4  D002               	bra	u9785
 11024  01C0C6  9ED2               	bcf	210,7,c	;volatile
 11025  01C0C8  D001               	bra	u9786
 11026  01C0CA                     u9785:
 11027  01C0CA  8ED2               	bsf	210,7,c	;volatile
 11028  01C0CC                     u9786:
 11029                           
 11030                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 11031  01C0CC  52E5               	movf	postdec1,f,c
 11032  01C0CE  52E5               	movf	postdec1,f,c
 11033  01C0D0  52E5               	movf	postdec1,f,c
 11034  01C0D2  52E5               	movf	postdec1,f,c
 11035  01C0D4  0012               	return		;funcret
 11036  01C0D6                     __end_of_DATAEE_WriteByte:
 11037                           	opt callstack 0
 11038                           
 11039 ;; *************** function _CRC_Start *****************
 11040 ;; Defined at:
 11041 ;;		line 119 in file "mcc_generated_files/crc.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;		None
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;		None
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  1  [STACK] void 
 11048 ;; Registers used:
 11049 ;;		None
 11050 ;; Tracked objects:
 11051 ;;		On entry : 3F/0
 11052 ;;		On exit  : 3F/39
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11059 ;;Total ram usage:        0 bytes
 11060 ;; Hardware stack levels used:    1
 11061 ;; Hardware stack levels required when called:   15
 11062 ;; This function calls:
 11063 ;;		Nothing
 11064 ;; This function is called by:
 11065 ;;		_read_cal_data
 11066 ;;		_write_cal_data
 11067 ;; This function uses a reentrant model
 11068 ;;
 11069                           
 11070                           	psect	text32
 11071  01D386                     __ptext32:
 11072                           	opt callstack 0
 11073  01D386                     _CRC_Start:
 11074                           	opt callstack 14
 11075                           
 11076                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 11077                           
 11078                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11079                           ;incstack = 0
 11080  01D386  0139               	movlb	57	; () banked
 11081  01D388  8D68               	bsf	104,6,b	;volatile
 11082                           
 11083                           ; BSR set to: 57
 11084                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11085  01D38A  0012               	return		;funcret
 11086  01D38C                     __end_of_CRC_Start:
 11087                           	opt callstack 0
 11088                           
 11089 ;; *************** function _CRC_IsBusy *****************
 11090 ;; Defined at:
 11091 ;;		line 201 in file "mcc_generated_files/crc.c"
 11092 ;; Parameters:    Size  Location     Type
 11093 ;;		None
 11094 ;; Auto vars:     Size  Location     Type
 11095 ;;		None
 11096 ;; Return value:  Size  Location     Type
 11097 ;;                  1  [STACK] _Bool 
 11098 ;; Registers used:
 11099 ;;		btemp
 11100 ;; Tracked objects:
 11101 ;;		On entry : 0/39
 11102 ;;		On exit  : 0/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11109 ;;Total ram usage:        0 bytes
 11110 ;; Hardware stack levels used:    1
 11111 ;; Hardware stack levels required when called:   15
 11112 ;; This function calls:
 11113 ;;		Nothing
 11114 ;; This function is called by:
 11115 ;;		_write_cal_data
 11116 ;; This function uses a reentrant model
 11117 ;;
 11118                           
 11119                           	psect	text33
 11120  01D2AE                     __ptext33:
 11121                           	opt callstack 0
 11122  01D2AE                     _CRC_IsBusy:
 11123                           	opt callstack 13
 11124                           
 11125                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 11126                           
 11127                           ; BSR set to: 57
 11128                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11129                           ;incstack = 0
 11130  01D2AE  0139               	movlb	57	; () banked
 11131  01D2B0  AB68               	btfss	104,5,b	;volatile
 11132  01D2B2  D003               	goto	u10030
 11133  01D2B4  6A01               	clrf	btemp^0,c
 11134  01D2B6  2A01               	incf	btemp^0,f,c
 11135  01D2B8  0012               	return	
 11136  01D2BA                     u10030:
 11137  01D2BA  6A01               	clrf	btemp^0,c
 11138                           
 11139                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 11140  01D2BC  0012               	return		;funcret
 11141  01D2BE                     __end_of_CRC_IsBusy:
 11142                           	opt callstack 0
 11143                           
 11144 ;; *************** function _CRC_CalculatedResultGet *****************
 11145 ;; Defined at:
 11146 ;;		line 159 in file "mcc_generated_files/crc.c"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;  reverse         1  [STACK] _Bool 
 11149 ;;  xorValue        2  [STACK] unsigned short 
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;  result          2  [STACK] unsigned short 
 11152 ;;  mask            2  [STACK] unsigned short 
 11153 ;; Return value:  Size  Location     Type
 11154 ;;                  2  [STACK] unsigned short 
 11155 ;; Registers used:
 11156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 11157 ;; Tracked objects:
 11158 ;;		On entry : 0/39
 11159 ;;		On exit  : 0/0
 11160 ;;		Unchanged: 0/0
 11161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11166 ;;Total ram usage:        0 bytes
 11167 ;; Hardware stack levels used:    1
 11168 ;; Hardware stack levels required when called:   16
 11169 ;; This function calls:
 11170 ;;		_CRC_ReverseValue
 11171 ;; This function is called by:
 11172 ;;		_read_cal_data
 11173 ;;		_write_cal_data
 11174 ;; This function uses a reentrant model
 11175 ;;
 11176                           
 11177                           	psect	text34
 11178  019802                     __ptext34:
 11179                           	opt callstack 0
 11180  019802                     _CRC_CalculatedResultGet:
 11181                           	opt callstack 0
 11182                           
 11183                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11184  019802  52E6               	movf	postinc1,f,c
 11185  019804  52E6               	movf	postinc1,f,c
 11186  019806  52E6               	movf	postinc1,f,c
 11187  019808  52E6               	movf	postinc1,f,c
 11188                           
 11189                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 11190                           
 11191                           ;incstack = 0
 11192  01980A  0139               	movlb	57	; () banked
 11193  01980C  9D68               	bcf	104,6,b	;volatile
 11194                           
 11195                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 11196  01980E  9DA0               	bcf	160,6,b	;volatile
 11197                           
 11198                           ; BSR set to: 57
 11199                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 11200  019810  5169               	movf	105,w,b	;volatile
 11201  019812  0B0F               	andlw	15
 11202  019814  6E0C               	movwf	(btemp+11)^0,c
 11203  019816  3A0C               	swapf	(btemp+11)^0,f,c
 11204  019818  5169               	movf	105,w,b	;volatile
 11205  01981A  180C               	xorwf	(btemp+11)^0,w,c
 11206  01981C  0B0F               	andlw	-241
 11207  01981E  180C               	xorwf	(btemp+11)^0,w,c
 11208  019820  6F69               	movwf	105,b	;volatile
 11209                           
 11210                           ; BSR set to: 57
 11211                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 11212  019822  0E08               	movlw	8
 11213  019824  0100               	movlb	0	; () banked
 11214  019826  65AC               	cpfsgt	(_crcObj+1)& (0+255),b
 11215  019828  D003               	goto	l2324
 11216                           
 11217                           ; BSR set to: 0
 11218                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 11219  01982A  0139               	movlb	57	; () banked
 11220  01982C  6B61               	clrf	97,b	;volatile
 11221  01982E  D001               	goto	L9
 11222  019830                     l2324:
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 11226  019830  0139               	movlb	57	; () banked
 11227  019832                     L9:
 11228  019832  6B60               	clrf	96,b	;volatile
 11229                           
 11230                           ; BSR set to: 57
 11231                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 11232                           
 11233                           ;mcc_generated_files/crc.c: 176:      }
 11234  019834  8D68               	bsf	104,6,b	;volatile
 11235  019836                     l2326:
 11236                           
 11237                           ; BSR set to: 57
 11238  019836  ADA0               	btfss	160,6,b	;volatile
 11239  019838  D7FE               	goto	l2326
 11240                           
 11241                           ; BSR set to: 57
 11242                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 11243  01983A  9DA0               	bcf	160,6,b	;volatile
 11244                           
 11245                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 11246  01983C  9D68               	bcf	104,6,b	;volatile
 11247                           
 11248                           ; BSR set to: 57
 11249                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 11250  01983E  0060  F2AC  F00C   	movff	_crcObj,btemp+11
 11251  019844  0EFF               	movlw	255
 11252  019846  260C               	addwf	(btemp+11)^0,f,c
 11253  019848  3A0C               	swapf	(btemp+11)^0,f,c
 11254  01984A  5169               	movf	105,w,b	;volatile
 11255  01984C  180C               	xorwf	(btemp+11)^0,w,c
 11256  01984E  0B0F               	andlw	-241
 11257  019850  180C               	xorwf	(btemp+11)^0,w,c
 11258  019852  6F69               	movwf	105,b	;volatile
 11259                           
 11260                           ; BSR set to: 57
 11261                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 11262  019854  5162               	movf	98,w,b	;volatile
 11263  019856  006E F58C  F001    	movff	14691,btemp	;volatile
 11264  01985C  6A02               	clrf	(btemp+1)^0,c
 11265  01985E  0060  F004  F002   	movff	btemp,btemp+1
 11266  019864  6A01               	clrf	btemp^0,c
 11267  019866  1201               	iorwf	btemp^0,f,c
 11268  019868  0E00               	movlw	0
 11269  01986A  1202               	iorwf	(btemp+1)^0,f,c
 11270                           
 11271                           ;stkvar	_result @ sp[(-4)+0]
 11272  01986C  0EFC               	movlw	-4
 11273  01986E  0060  F007  FFE3   	movff	btemp,plusw1
 11274  019874  0EFD               	movlw	-3
 11275  019876  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11276                           
 11277                           ; BSR set to: 57
 11278                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 11279  01987C  0E10               	movlw	16
 11280  01987E  0100               	movlb	0	; () banked
 11281  019880  61AC               	cpfslt	(_crcObj+1)& (0+255),b
 11282  019882  D03A               	goto	l10817
 11283                           
 11284                           ; BSR set to: 0
 11285                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 11286  019884  0EFF               	movlw	255
 11287  019886  6E0B               	movwf	(btemp+10)^0,c
 11288  019888  0EFF               	movlw	255
 11289  01988A  6E0C               	movwf	(btemp+11)^0,c
 11290  01988C  0060  F2B0  F00A   	movff	_crcObj+1,btemp+9
 11291  019892  0E01               	movlw	1
 11292  019894  6E07               	movwf	(btemp+6)^0,c
 11293  019896  0E00               	movlw	0
 11294  019898  6E08               	movwf	(btemp+7)^0,c
 11295  01989A  2A0A               	incf	(btemp+9)^0,f,c
 11296  01989C  D003               	goto	u10014
 11297  01989E                     u10015:
 11298  01989E  90D8               	bcf	status,0,c
 11299  0198A0  3607               	rlcf	(btemp+6)^0,f,c
 11300  0198A2  3608               	rlcf	(btemp+7)^0,f,c
 11301  0198A4                     u10014:
 11302  0198A4  2E0A               	decfsz	(btemp+9)^0,f,c
 11303  0198A6  D7FB               	goto	u10015
 11304  0198A8  500B               	movf	(btemp+10)^0,w,c
 11305  0198AA  2607               	addwf	(btemp+6)^0,f,c
 11306  0198AC  500C               	movf	(btemp+11)^0,w,c
 11307  0198AE  2208               	addwfc	(btemp+7)^0,f,c
 11308                           
 11309                           ;stkvar	_mask @ sp[(-4)+2]
 11310  0198B0  0EFE               	movlw	-2
 11311  0198B2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 11312  0198B8  0EFF               	movlw	-1
 11313  0198BA  0060  F023  FFE3   	movff	btemp+7,plusw1
 11314                           
 11315                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 11316                           ;stkvar	_mask @ sp[(-4)+2]
 11317  0198C0  0EFE               	movlw	-2
 11318  0198C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 11319  0198C8  0EFF               	movlw	-1
 11320  0198CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 11321                           
 11322                           ;stkvar	_result @ sp[(-4)+0]
 11323  0198D0  0EFC               	movlw	-4
 11324  0198D2  006F FF8C  F001    	movff	plusw1,btemp
 11325  0198D8  500B               	movf	(btemp+10)^0,w,c
 11326  0198DA  1601               	andwf	btemp^0,f,c
 11327  0198DC  0EFC               	movlw	-4
 11328  0198DE  0060  F007  FFE3   	movff	btemp,plusw1
 11329  0198E4  0EFD               	movlw	-3
 11330  0198E6  006F FF8C  F001    	movff	plusw1,btemp
 11331  0198EC  500C               	movf	(btemp+11)^0,w,c
 11332  0198EE  1601               	andwf	btemp^0,f,c
 11333  0198F0  0EFD               	movlw	-3
 11334  0198F2  0060  F007  FFE3   	movff	btemp,plusw1
 11335  0198F8                     l10817:
 11336                           
 11337                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 11338                           ;stkvar	_reverse @ sp[(-4)+-1]
 11339  0198F8  0EFB               	movlw	-5
 11340  0198FA  50E3               	movf	plusw1,w,c
 11341  0198FC  B4D8               	btfsc	status,2,c
 11342  0198FE  D011               	goto	l10821
 11343                           
 11344                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 11345                           ;stkvar	_result @ sp[(-4)+0]
 11346  019900  0EFC               	movlw	-4
 11347  019902  006F FF8F FFE6     	movff	plusw1,postinc1
 11348  019908  006F FF8F FFE6     	movff	plusw1,postinc1
 11349  01990E  EC59  F0D8         	call	_CRC_ReverseValue	;wreg free
 11350                           
 11351                           ;stkvar	_result @ sp[(-4)+0]
 11352  019912  0EFC               	movlw	-4
 11353  019914  0060  F007  FFE3   	movff	btemp,plusw1
 11354  01991A  0EFD               	movlw	-3
 11355  01991C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11356  019922                     l10821:
 11357                           
 11358                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 11359                           ;stkvar	_xorValue @ sp[(-4)+-3]
 11360  019922  0EF9               	movlw	-7
 11361  019924  006F FF8C  F00B    	movff	plusw1,btemp+10
 11362  01992A  0EFA               	movlw	-6
 11363  01992C  006F FF8C  F00C    	movff	plusw1,btemp+11
 11364                           
 11365                           ;stkvar	_result @ sp[(-4)+0]
 11366  019932  0EFC               	movlw	-4
 11367  019934  006F FF8C  F001    	movff	plusw1,btemp
 11368  01993A  500B               	movf	(btemp+10)^0,w,c
 11369  01993C  1A01               	xorwf	btemp^0,f,c
 11370  01993E  0EFC               	movlw	-4
 11371  019940  0060  F007  FFE3   	movff	btemp,plusw1
 11372  019946  0EFD               	movlw	-3
 11373  019948  006F FF8C  F001    	movff	plusw1,btemp
 11374  01994E  500C               	movf	(btemp+11)^0,w,c
 11375  019950  1A01               	xorwf	btemp^0,f,c
 11376  019952  0EFD               	movlw	-3
 11377  019954  0060  F007  FFE3   	movff	btemp,plusw1
 11378                           
 11379                           ;mcc_generated_files/crc.c: 198:     return result;
 11380                           ;stkvar	_result @ sp[(-4)+0]
 11381  01995A  0EFC               	movlw	-4
 11382  01995C  006F FF8C  F001    	movff	plusw1,btemp
 11383  019962  0EFD               	movlw	-3
 11384  019964  006F FF8C  F002    	movff	plusw1,btemp+1
 11385                           
 11386                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 11387  01996A  0EF9               	movlw	249
 11388  01996C  26E1               	addwf	fsr1l,f,c
 11389  01996E  0EFF               	movlw	255
 11390  019970  22E2               	addwfc	fsr1h,f,c
 11391  019972  0012               	return		;funcret
 11392  019974                     __end_of_CRC_CalculatedResultGet:
 11393                           	opt callstack 0
 11394                           
 11395 ;; *************** function _CRC_ReverseValue *****************
 11396 ;; Defined at:
 11397 ;;		line 138 in file "mcc_generated_files/crc.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;  crc             2  [STACK] unsigned short 
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;  mask            2  [STACK] unsigned short 
 11402 ;;  reverse         2  [STACK] unsigned short 
 11403 ;; Return value:  Size  Location     Type
 11404 ;;                  2  [STACK] unsigned short 
 11405 ;; Registers used:
 11406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11407 ;; Tracked objects:
 11408 ;;		On entry : 0/0
 11409 ;;		On exit  : 0/0
 11410 ;;		Unchanged: 0/0
 11411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11416 ;;Total ram usage:        0 bytes
 11417 ;; Hardware stack levels used:    1
 11418 ;; Hardware stack levels required when called:   15
 11419 ;; This function calls:
 11420 ;;		Nothing
 11421 ;; This function is called by:
 11422 ;;		_CRC_CalculatedResultGet
 11423 ;; This function uses a reentrant model
 11424 ;;
 11425                           
 11426                           	psect	text35
 11427  01B0B2                     __ptext35:
 11428                           	opt callstack 0
 11429  01B0B2                     _CRC_ReverseValue:
 11430                           	opt callstack 0
 11431                           
 11432                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11433  01B0B2  52E6               	movf	postinc1,f,c
 11434  01B0B4  52E6               	movf	postinc1,f,c
 11435  01B0B6  52E6               	movf	postinc1,f,c
 11436  01B0B8  52E6               	movf	postinc1,f,c
 11437                           
 11438                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 11439                           
 11440                           ;incstack = 0
 11441  01B0BA  0E01               	movlw	1
 11442  01B0BC  6E0B               	movwf	(btemp+10)^0,c
 11443  01B0BE  0E00               	movlw	0
 11444  01B0C0  6E0C               	movwf	(btemp+11)^0,c
 11445                           
 11446                           ;stkvar	_mask @ sp[(-4)+0]
 11447  01B0C2  0EFC               	movlw	-4
 11448  01B0C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11449  01B0CA  0EFD               	movlw	-3
 11450  01B0CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 11451                           
 11452                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 11453  01B0D2  0060  F2B0  F00C   	movff	_crcObj+1,btemp+11
 11454  01B0D8  0EFF               	movlw	255
 11455  01B0DA  260C               	addwf	(btemp+11)^0,f,c
 11456                           
 11457                           ;stkvar	_mask @ sp[(-4)+0]
 11458  01B0DC  50E1               	movf	fsr1l,w,c
 11459  01B0DE  0FFC               	addlw	-4
 11460  01B0E0  6ED9               	movwf	fsr2l,c
 11461  01B0E2  50E2               	movf	fsr1h,w,c
 11462  01B0E4  6EDA               	movwf	fsr2h,c
 11463  01B0E6  0EFF               	movlw	255
 11464  01B0E8  22DA               	addwfc	fsr2h,f,c
 11465  01B0EA  280C               	incf	(btemp+11)^0,w,c
 11466  01B0EC  D003               	goto	u9710
 11467  01B0EE                     u9715:
 11468  01B0EE  90D8               	bcf	status,0,c
 11469  01B0F0  36DE               	rlcf	postinc2,f,c
 11470  01B0F2  36DD               	rlcf	postdec2,f,c
 11471  01B0F4                     u9710:
 11472  01B0F4  2EE8               	decfsz	wreg,f,c
 11473  01B0F6  D7FB               	goto	u9715
 11474                           
 11475                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 11476                           ;stkvar	_reverse @ sp[(-4)+2]
 11477  01B0F8  0EFE               	movlw	-2
 11478  01B0FA  6AE3               	clrf	plusw1,c
 11479  01B0FC  0EFF               	movlw	-1
 11480  01B0FE  6AE3               	clrf	plusw1,c
 11481                           
 11482                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11483  01B100  D029               	goto	l10517
 11484  01B102                     l10509:
 11485                           
 11486                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 11487                           ;stkvar	_crc @ sp[(-4)+-2]
 11488  01B102  0EFA               	movlw	-6
 11489  01B104  A0E3               	btfss	plusw1,0,c
 11490  01B106  D01C               	goto	l10513
 11491                           
 11492                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 11493                           ;stkvar	_mask @ sp[(-4)+0]
 11494  01B108  0EFC               	movlw	-4
 11495  01B10A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11496  01B110  0EFD               	movlw	-3
 11497  01B112  006F FF8C  F00C    	movff	plusw1,btemp+11
 11498                           
 11499                           ;stkvar	_reverse @ sp[(-4)+2]
 11500  01B118  0EFE               	movlw	-2
 11501  01B11A  006F FF8C  F001    	movff	plusw1,btemp
 11502  01B120  500B               	movf	(btemp+10)^0,w,c
 11503  01B122  1201               	iorwf	btemp^0,f,c
 11504  01B124  0EFE               	movlw	-2
 11505  01B126  0060  F007  FFE3   	movff	btemp,plusw1
 11506  01B12C  0EFF               	movlw	-1
 11507  01B12E  006F FF8C  F001    	movff	plusw1,btemp
 11508  01B134  500C               	movf	(btemp+11)^0,w,c
 11509  01B136  1201               	iorwf	btemp^0,f,c
 11510  01B138  0EFF               	movlw	-1
 11511  01B13A  0060  F007  FFE3   	movff	btemp,plusw1
 11512  01B140                     l10513:
 11513                           
 11514                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 11515                           ;stkvar	_mask @ sp[(-4)+0]
 11516  01B140  90D8               	bcf	status,0,c
 11517  01B142  0EFD               	movlw	-3
 11518  01B144  32E3               	rrcf	plusw1,f,c
 11519  01B146  0EFC               	movlw	-4
 11520  01B148  32E3               	rrcf	plusw1,f,c
 11521                           
 11522                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 11523                           ;stkvar	_crc @ sp[(-4)+-2]
 11524  01B14A  90D8               	bcf	status,0,c
 11525  01B14C  0EFB               	movlw	-5
 11526  01B14E  32E3               	rrcf	plusw1,f,c
 11527  01B150  0EFA               	movlw	-6
 11528  01B152  32E3               	rrcf	plusw1,f,c
 11529  01B154                     l10517:
 11530                           
 11531                           ;mcc_generated_files/crc.c: 147:     while(crc)
 11532                           ;stkvar	_crc @ sp[(-4)+-2]
 11533  01B154  0EFA               	movlw	-6
 11534  01B156  006F FF8C  F001    	movff	plusw1,btemp
 11535  01B15C  0EFB               	movlw	-5
 11536  01B15E  50E3               	movf	plusw1,w,c
 11537  01B160  1001               	iorwf	btemp^0,w,c
 11538  01B162  A4D8               	btfss	status,2,c
 11539  01B164  D7CE               	goto	l10509
 11540                           
 11541                           ;mcc_generated_files/crc.c: 156:     return reverse;
 11542                           ;stkvar	_reverse @ sp[(-4)+2]
 11543  01B166  0EFE               	movlw	-2
 11544  01B168  006F FF8C  F001    	movff	plusw1,btemp
 11545  01B16E  0EFF               	movlw	-1
 11546  01B170  006F FF8C  F002    	movff	plusw1,btemp+1
 11547                           
 11548                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 11549  01B176  0EFA               	movlw	250
 11550  01B178  26E1               	addwf	fsr1l,f,c
 11551  01B17A  0EFF               	movlw	255
 11552  01B17C  22E2               	addwfc	fsr1h,f,c
 11553  01B17E  0012               	return		;funcret
 11554  01B180                     __end_of_CRC_ReverseValue:
 11555                           	opt callstack 0
 11556                           
 11557 ;; *************** function _CRC_8BitDataWrite *****************
 11558 ;; Defined at:
 11559 ;;		line 125 in file "mcc_generated_files/crc.c"
 11560 ;; Parameters:    Size  Location     Type
 11561 ;;  data            1  [STACK] unsigned char 
 11562 ;; Auto vars:     Size  Location     Type
 11563 ;;		None
 11564 ;; Return value:  Size  Location     Type
 11565 ;;                  1  [STACK] _Bool 
 11566 ;; Registers used:
 11567 ;;		fsr1l, fsr1h
 11568 ;; Tracked objects:
 11569 ;;		On entry : 0/2
 11570 ;;		On exit  : 3F/39
 11571 ;;		Unchanged: 0/0
 11572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11577 ;;Total ram usage:        0 bytes
 11578 ;; Hardware stack levels used:    1
 11579 ;; Hardware stack levels required when called:   15
 11580 ;; This function calls:
 11581 ;;		Nothing
 11582 ;; This function is called by:
 11583 ;;		_read_cal_data
 11584 ;;		_write_cal_data
 11585 ;; This function uses a reentrant model
 11586 ;;
 11587                           
 11588                           	psect	text36
 11589  01D26A                     __ptext36:
 11590                           	opt callstack 0
 11591  01D26A                     _CRC_8BitDataWrite:
 11592                           	opt callstack 14
 11593                           
 11594                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 11595                           
 11596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11597                           ;incstack = 0
 11598  01D26A  0139               	movlb	57	; () banked
 11599  01D26C  B168               	btfsc	104,0,b	;volatile
 11600  01D26E  D004               	goto	l2313
 11601                           
 11602                           ; BSR set to: 57
 11603                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 11604                           ;stkvar	_data @ sp[(0)+-1]
 11605  01D270  0EFF               	movlw	-1
 11606  01D272  006F FF8F F960     	movff	plusw1,14688	;volatile
 11607  01D278                     l2313:
 11608                           
 11609                           ; BSR set to: 57
 11610                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 11611  01D278  52E5               	movf	postdec1,f,c
 11612  01D27A  0012               	return		;funcret
 11613  01D27C                     __end_of_CRC_8BitDataWrite:
 11614                           	opt callstack 0
 11615                           
 11616 ;; *************** function _start_adc_scan *****************
 11617 ;; Defined at:
 11618 ;;		line 65 in file "daq.c"
 11619 ;; Parameters:    Size  Location     Type
 11620 ;;		None
 11621 ;; Auto vars:     Size  Location     Type
 11622 ;;		None
 11623 ;; Return value:  Size  Location     Type
 11624 ;;                  1  [STACK] _Bool 
 11625 ;; Registers used:
 11626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 11627 ;; Tracked objects:
 11628 ;;		On entry : 0/0
 11629 ;;		On exit  : 1/0
 11630 ;;		Unchanged: 0/0
 11631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11636 ;;Total ram usage:        0 bytes
 11637 ;; Hardware stack levels used:    1
 11638 ;; Hardware stack levels required when called:   16
 11639 ;; This function calls:
 11640 ;;		_ADCC_DischargeSampleCapacitor
 11641 ;;		_ADCC_SetADIInterruptHandler
 11642 ;;		_ADCC_SetADTIInterruptHandler
 11643 ;;		_ADCC_StartConversion
 11644 ;; This function is called by:
 11645 ;;		_main
 11646 ;;		_current_sensor_cal
 11647 ;;		_update_adc_result
 11648 ;; This function uses a reentrant model
 11649 ;;
 11650                           
 11651                           	psect	text37
 11652  01C1A2                     __ptext37:
 11653                           	opt callstack 0
 11654  01C1A2                     _start_adc_scan:
 11655                           	opt callstack 14
 11656                           
 11657                           ;daq.c: 67:  if (R.done)
 11658                           
 11659                           ; BSR set to: 57
 11660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11661                           ;incstack = 0
 11662  01C1A2  0100               	movlb	0	; () banked
 11663  01C1A4  51E3               	movf	(_R+53)& (0+255),w,b	;volatile
 11664  01C1A6  A4D8               	btfss	status,2,c
 11665  01C1A8  0012               	return	
 11666                           
 11667                           ; BSR set to: 0
 11668                           ;daq.c: 70:  R.scan_index = 0;
 11669  01C1AA  6BE0               	clrf	(_R+50)& (0+255),b	;volatile
 11670                           
 11671                           ; BSR set to: 0
 11672                           ;daq.c: 71:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 11673  01C1AC  013A               	movlb	58	; () banked
 11674  01C1AE  5140               	movf	64,w,b	;volatile
 11675  01C1B0  006E F940  F001    	movff	14928,btemp	;volatile
 11676  01C1B6  6A02               	clrf	(btemp+1)^0,c
 11677  01C1B8  0060  F004  F002   	movff	btemp,btemp+1
 11678  01C1BE  6A01               	clrf	btemp^0,c
 11679  01C1C0  2601               	addwf	btemp^0,f,c
 11680  01C1C2  0E00               	movlw	0
 11681  01C1C4  2202               	addwfc	(btemp+1)^0,f,c
 11682  01C1C6  0E77               	movlw	119
 11683  01C1C8  1401               	andwf	btemp^0,w,c
 11684  01C1CA  0100               	movlb	0	; () banked
 11685  01C1CC  6FE1               	movwf	(_R+51)& (0+255),b	;volatile
 11686  01C1CE  0E3C               	movlw	60
 11687  01C1D0  1402               	andwf	(btemp+1)^0,w,c
 11688  01C1D2  6FE2               	movwf	(_R+52)& (0+255),b	;volatile
 11689                           
 11690                           ; BSR set to: 0
 11691                           ;daq.c: 72:  ADCC_SetADIInterruptHandler(adc_int_handler);
 11692  01C1D4  0EB2               	movlw	low _adc_int_handler
 11693  01C1D6  6EE6               	movwf	postinc1,c
 11694  01C1D8  0ED3               	movlw	high _adc_int_handler
 11695  01C1DA  6EE6               	movwf	postinc1,c
 11696  01C1DC  0E01               	movlw	low (_adc_int_handler shr (0+16))
 11697  01C1DE  6EE6               	movwf	postinc1,c
 11698  01C1E0  EC71  F0E7         	call	_ADCC_SetADIInterruptHandler	;wreg free
 11699                           
 11700                           ;daq.c: 73:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 11701  01C1E4  0E4C               	movlw	low _adc_int_t_handler
 11702  01C1E6  6EE6               	movwf	postinc1,c
 11703  01C1E8  0EBD               	movlw	high _adc_int_t_handler
 11704  01C1EA  6EE6               	movwf	postinc1,c
 11705  01C1EC  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
 11706  01C1EE  6EE6               	movwf	postinc1,c
 11707  01C1F0  EC5D  F0E7         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 11708                           
 11709                           ;daq.c: 74:  ADCC_DischargeSampleCapacitor();
 11710  01C1F4  ECB3  F0E9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 11711                           
 11712                           ; BSR set to: 62
 11713                           ;daq.c: 75:  ADCC_StartConversion(R.scan_index & 0xf);
 11714  01C1F8  0100               	movlb	0	; () banked
 11715  01C1FA  51E0               	movf	(_R+50)& (0+255),w,b	;volatile
 11716  01C1FC  0B0F               	andlw	15
 11717  01C1FE  6EE6               	movwf	postinc1,c
 11718  01C200  EC3E  F0E9         	call	_ADCC_StartConversion	;wreg free
 11719                           
 11720                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11721  01C204  0012               	return		;funcret
 11722  01C206                     __end_of_start_adc_scan:
 11723                           	opt callstack 0
 11724                           
 11725 ;; *************** function _ADCC_StartConversion *****************
 11726 ;; Defined at:
 11727 ;;		line 128 in file "mcc_generated_files/adcc.c"
 11728 ;; Parameters:    Size  Location     Type
 11729 ;;  channel         1  [STACK] enum E16136
 11730 ;; Auto vars:     Size  Location     Type
 11731 ;;		None
 11732 ;; Return value:  Size  Location     Type
 11733 ;;                  1  [STACK] void 
 11734 ;; Registers used:
 11735 ;;		fsr1l, fsr1h
 11736 ;; Tracked objects:
 11737 ;;		On entry : 3F/0
 11738 ;;		On exit  : 3F/3E
 11739 ;;		Unchanged: 0/0
 11740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11745 ;;Total ram usage:        0 bytes
 11746 ;; Hardware stack levels used:    1
 11747 ;; Hardware stack levels required when called:   15
 11748 ;; This function calls:
 11749 ;;		Nothing
 11750 ;; This function is called by:
 11751 ;;		_start_adc_scan
 11752 ;;		_adc_int_t_handler
 11753 ;; This function uses a reentrant model
 11754 ;;
 11755                           
 11756                           	psect	text38
 11757  01D27C                     __ptext38:
 11758                           	opt callstack 0
 11759  01D27C                     _ADCC_StartConversion:
 11760                           	opt callstack 0
 11761                           
 11762                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 11763                           ;stkvar	_channel @ sp[(0)+-1]
 11764                           
 11765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11766                           ;incstack = 0
 11767 ;; hardware stack exceeded
 11768  01D27C  0EFF               	movlw	-1
 11769  01D27E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 11770                           
 11771                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 11772  01D284  013E               	movlb	62	; () banked
 11773  01D286  8FF8               	bsf	248,7,b	;volatile
 11774                           
 11775                           ; BSR set to: 62
 11776                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 11777  01D288  81F8               	bsf	248,0,b	;volatile
 11778                           
 11779                           ; BSR set to: 62
 11780                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 11781  01D28A  52E5               	movf	postdec1,f,c
 11782  01D28C  0012               	return		;funcret
 11783  01D28E                     __end_of_ADCC_StartConversion:
 11784                           	opt callstack 0
 11785                           
 11786 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 11787 ;; Defined at:
 11788 ;;		line 189 in file "mcc_generated_files/adcc.c"
 11789 ;; Parameters:    Size  Location     Type
 11790 ;;		None
 11791 ;; Auto vars:     Size  Location     Type
 11792 ;;		None
 11793 ;; Return value:  Size  Location     Type
 11794 ;;                  1  [STACK] void 
 11795 ;; Registers used:
 11796 ;;		wreg, status,2
 11797 ;; Tracked objects:
 11798 ;;		On entry : 0/0
 11799 ;;		On exit  : 3F/3E
 11800 ;;		Unchanged: 0/0
 11801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11806 ;;Total ram usage:        0 bytes
 11807 ;; Hardware stack levels used:    1
 11808 ;; Hardware stack levels required when called:   15
 11809 ;; This function calls:
 11810 ;;		Nothing
 11811 ;; This function is called by:
 11812 ;;		_start_adc_scan
 11813 ;;		_adc_int_t_handler
 11814 ;; This function uses a reentrant model
 11815 ;;
 11816                           
 11817                           	psect	text39
 11818  01D366                     __ptext39:
 11819                           	opt callstack 0
 11820  01D366                     _ADCC_DischargeSampleCapacitor:
 11821                           	opt callstack 0
 11822                           
 11823                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 11824                           
 11825                           ; BSR set to: 62
 11826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11827                           ;incstack = 0
 11828 ;; hardware stack exceeded
 11829  01D366  0E3B               	movlw	59
 11830  01D368  013E               	movlb	62	; () banked
 11831  01D36A  6FF1               	movwf	241,b	;volatile
 11832                           
 11833                           ; BSR set to: 62
 11834                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 11835  01D36C  0012               	return		;funcret
 11836  01D36E                     __end_of_ADCC_DischargeSampleCapacitor:
 11837                           	opt callstack 0
 11838                           
 11839 ;; *************** function _spinners *****************
 11840 ;; Defined at:
 11841 ;;		line 146 in file "mbmc.c"
 11842 ;; Parameters:    Size  Location     Type
 11843 ;;  shape           1  [STACK] unsigned char 
 11844 ;;  reset           1  [STACK] const unsigned char 
 11845 ;; Auto vars:     Size  Location     Type
 11846 ;;  c               1  [STACK] unsigned char 
 11847 ;; Return value:  Size  Location     Type
 11848 ;;                  1  [STACK] unsigned char 
 11849 ;; Registers used:
 11850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11851 ;; Tracked objects:
 11852 ;;		On entry : 0/0
 11853 ;;		On exit  : 0/0
 11854 ;;		Unchanged: 0/0
 11855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11860 ;;Total ram usage:        0 bytes
 11861 ;; Hardware stack levels used:    1
 11862 ;; Hardware stack levels required when called:   16
 11863 ;; This function calls:
 11864 ;;		_strlen
 11865 ;; This function is called by:
 11866 ;;		_main
 11867 ;;		_current_sensor_cal
 11868 ;; This function uses a reentrant model
 11869 ;;
 11870                           
 11871                           	psect	text40
 11872  01AB60                     __ptext40:
 11873                           	opt callstack 0
 11874  01AB60                     _spinners:
 11875                           	opt callstack 0
 11876                           
 11877                           ; BSR set to: 62
 11878                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11879  01AB60  52E6               	movf	postinc1,f,c
 11880                           
 11881                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
 11882                           ;stkvar	_shape @ sp[(-1)+-1]
 11883                           
 11884                           ;incstack = 0
 11885  01AB62  0EFE               	movlw	-2
 11886  01AB64  006F FF8C  F001    	movff	plusw1,btemp
 11887  01AB6A  0E05               	movlw	5
 11888  01AB6C  6401               	cpfsgt	btemp^0,c
 11889  01AB6E  D002               	goto	l2041
 11890                           
 11891                           ;mbmc.c: 152:   shape = 0;
 11892                           ;stkvar	_shape @ sp[(-1)+-1]
 11893  01AB70  0EFE               	movlw	-2
 11894  01AB72  6AE3               	clrf	plusw1,c
 11895  01AB74                     l2041:
 11896                           
 11897                           ;mbmc.c: 153:  if (reset)
 11898                           ;stkvar	_reset @ sp[(-1)+-2]
 11899  01AB74  0EFD               	movlw	-3
 11900  01AB76  50E3               	movf	plusw1,w,c
 11901  01AB78  B4D8               	btfsc	status,2,c
 11902  01AB7A  D00C               	goto	l11279
 11903                           
 11904                           ;mbmc.c: 154:   s[shape] = 0;
 11905                           ;stkvar	_shape @ sp[(-1)+-1]
 11906  01AB7C  0EFE               	movlw	-2
 11907  01AB7E  50E3               	movf	plusw1,w,c
 11908  01AB80  6E0B               	movwf	(btemp+10)^0,c
 11909  01AB82  6A0C               	clrf	(btemp+11)^0,c
 11910  01AB84  0EE4               	movlw	low spinners@s
 11911  01AB86  240B               	addwf	(btemp+10)^0,w,c
 11912  01AB88  6ED9               	movwf	fsr2l,c
 11913  01AB8A  0E01               	movlw	high spinners@s
 11914  01AB8C  200C               	addwfc	(btemp+11)^0,w,c
 11915  01AB8E  6EDA               	movwf	fsr2h,c
 11916  01AB90  0E00               	movlw	0
 11917  01AB92  6EDF               	movwf	indf2,c
 11918  01AB94                     l11279:
 11919                           
 11920                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
 11921                           ;stkvar	_shape @ sp[(-1)+-1]
 11922  01AB94  0EFE               	movlw	-2
 11923  01AB96  50E3               	movf	plusw1,w,c
 11924  01AB98  0D14               	mullw	20
 11925  01AB9A  0E43               	movlw	low _spin
 11926  01AB9C  6E0B               	movwf	(btemp+10)^0,c
 11927  01AB9E  0EFA               	movlw	high _spin
 11928  01ABA0  6E0C               	movwf	(btemp+11)^0,c
 11929  01ABA2  50F3               	movf	243,w,c
 11930  01ABA4  260B               	addwf	(btemp+10)^0,f,c
 11931  01ABA6  50F4               	movf	244,w,c
 11932  01ABA8  220C               	addwfc	(btemp+11)^0,f,c
 11933                           
 11934                           ;stkvar	_shape @ sp[(-1)+-1]
 11935  01ABAA  0EFE               	movlw	-2
 11936  01ABAC  50E3               	movf	plusw1,w,c
 11937  01ABAE  6E09               	movwf	(btemp+8)^0,c
 11938  01ABB0  6A0A               	clrf	(btemp+9)^0,c
 11939  01ABB2  0EE4               	movlw	low spinners@s
 11940  01ABB4  2409               	addwf	(btemp+8)^0,w,c
 11941  01ABB6  6ED9               	movwf	fsr2l,c
 11942  01ABB8  0E01               	movlw	high spinners@s
 11943  01ABBA  200A               	addwfc	(btemp+9)^0,w,c
 11944  01ABBC  6EDA               	movwf	fsr2h,c
 11945  01ABBE  50DF               	movf	indf2,w,c
 11946  01ABC0  260B               	addwf	(btemp+10)^0,f,c
 11947  01ABC2  0E00               	movlw	0
 11948  01ABC4  220C               	addwfc	(btemp+11)^0,f,c
 11949  01ABC6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11950  01ABCC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11951  01ABD2                     	if	0	;tblptru may be non-zero
 11952  01ABD2                     	endif
 11953  01ABD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11954  01ABD2  0E00               	movlw	low (__mediumconst shr (0+16))
 11955  01ABD4  6EF8               	movwf	tblptru,c
 11956  01ABD6                     	endif
 11957                           
 11958                           ;stkvar	_c @ sp[(-1)+0]
 11959  01ABD6  0008               	tblrd		*
 11960  01ABD8  0EFF               	movlw	-1
 11961  01ABDA  006F FFD7 FFE3     	movff	tablat,plusw1
 11962                           
 11963                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
 11964                           ;stkvar	_shape @ sp[(-1)+-1]
 11965  01ABE0  0EFE               	movlw	-2
 11966  01ABE2  50E3               	movf	plusw1,w,c
 11967  01ABE4  0D14               	mullw	20
 11968  01ABE6  0E43               	movlw	low _spin
 11969  01ABE8  6E0B               	movwf	(btemp+10)^0,c
 11970  01ABEA  0EFA               	movlw	high _spin
 11971  01ABEC  6E0C               	movwf	(btemp+11)^0,c
 11972  01ABEE  50F3               	movf	243,w,c
 11973  01ABF0  260B               	addwf	(btemp+10)^0,f,c
 11974  01ABF2  50F4               	movf	244,w,c
 11975  01ABF4  220C               	addwfc	(btemp+11)^0,f,c
 11976  01ABF6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11977  01ABFC  0060  F033  FFE6   	movff	btemp+11,postinc1
 11978  01AC02  ECDF  F0DB         	call	_strlen	;wreg free
 11979                           
 11980                           ;stkvar	_shape @ sp[(-1)+-1]
 11981  01AC06  0EFE               	movlw	-2
 11982  01AC08  50E3               	movf	plusw1,w,c
 11983  01AC0A  6E0B               	movwf	(btemp+10)^0,c
 11984  01AC0C  6A0C               	clrf	(btemp+11)^0,c
 11985  01AC0E  0EE4               	movlw	low spinners@s
 11986  01AC10  240B               	addwf	(btemp+10)^0,w,c
 11987  01AC12  6ED9               	movwf	fsr2l,c
 11988  01AC14  0E01               	movlw	high spinners@s
 11989  01AC16  200C               	addwfc	(btemp+11)^0,w,c
 11990  01AC18  6EDA               	movwf	fsr2h,c
 11991  01AC1A  2ADF               	incf	indf2,f,c
 11992  01AC1C  50DF               	movf	indf2,w,c
 11993  01AC1E  6E0B               	movwf	(btemp+10)^0,c
 11994  01AC20  6A0C               	clrf	(btemp+11)^0,c
 11995  01AC22  5001               	movf	btemp^0,w,c
 11996  01AC24  5C0B               	subwf	(btemp+10)^0,w,c
 11997  01AC26  5002               	movf	(btemp+1)^0,w,c
 11998  01AC28  580C               	subwfb	(btemp+11)^0,w,c
 11999  01AC2A  A0D8               	btfss	status,0,c
 12000  01AC2C  D00C               	goto	l11285
 12001                           
 12002                           ;mbmc.c: 157:   s[shape] = 0;
 12003                           ;stkvar	_shape @ sp[(-1)+-1]
 12004  01AC2E  0EFE               	movlw	-2
 12005  01AC30  50E3               	movf	plusw1,w,c
 12006  01AC32  6E0B               	movwf	(btemp+10)^0,c
 12007  01AC34  6A0C               	clrf	(btemp+11)^0,c
 12008  01AC36  0EE4               	movlw	low spinners@s
 12009  01AC38  240B               	addwf	(btemp+10)^0,w,c
 12010  01AC3A  6ED9               	movwf	fsr2l,c
 12011  01AC3C  0E01               	movlw	high spinners@s
 12012  01AC3E  200C               	addwfc	(btemp+11)^0,w,c
 12013  01AC40  6EDA               	movwf	fsr2h,c
 12014  01AC42  0E00               	movlw	0
 12015  01AC44  6EDF               	movwf	indf2,c
 12016  01AC46                     l11285:
 12017                           
 12018                           ;mbmc.c: 158:  return c;
 12019                           ;stkvar	_c @ sp[(-1)+0]
 12020  01AC46  0EFF               	movlw	-1
 12021  01AC48  006F FF8C  F001    	movff	plusw1,btemp
 12022                           
 12023                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 12024  01AC4E  52E5               	movf	postdec1,f,c
 12025  01AC50  52E5               	movf	postdec1,f,c
 12026  01AC52  52E5               	movf	postdec1,f,c
 12027  01AC54  0012               	return		;funcret
 12028  01AC56                     __end_of_spinners:
 12029                           	opt callstack 0
 12030                           
 12031 ;; *************** function _get_switch *****************
 12032 ;; Defined at:
 12033 ;;		line 18 in file "dio.c"
 12034 ;; Parameters:    Size  Location     Type
 12035 ;;  i               1  [STACK] const unsigned char 
 12036 ;; Auto vars:     Size  Location     Type
 12037 ;;		None
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  1  [STACK] enum E17036
 12040 ;; Registers used:
 12041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 12042 ;; Tracked objects:
 12043 ;;		On entry : 0/0
 12044 ;;		On exit  : 0/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12051 ;;Total ram usage:        0 bytes
 12052 ;; Hardware stack levels used:    1
 12053 ;; Hardware stack levels required when called:   15
 12054 ;; This function calls:
 12055 ;;		Nothing
 12056 ;; This function is called by:
 12057 ;;		_main
 12058 ;;		_current_sensor_cal
 12059 ;;		_hid_input
 12060 ;; This function uses a reentrant model
 12061 ;;
 12062                           
 12063                           	psect	text41
 12064  01CC7C                     __ptext41:
 12065                           	opt callstack 0
 12066  01CC7C                     _get_switch:
 12067                           	opt callstack 13
 12068                           
 12069                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 12070                           ;stkvar	_i @ sp[(0)+-1]
 12071                           
 12072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12073                           ;incstack = 0
 12074  01CC7C  0EFF               	movlw	-1
 12075  01CC7E  006F FF8C  F001    	movff	plusw1,btemp
 12076  01CC84  0E05               	movlw	5
 12077  01CC86  6401               	cpfsgt	btemp^0,c
 12078  01CC88  D002               	goto	l10721
 12079                           
 12080                           ;dio.c: 21:   return SW_OFF;
 12081  01CC8A  0E00               	movlw	0
 12082  01CC8C  D00A               	goto	L10
 12083  01CC8E                     l10721:
 12084                           
 12085                           ;dio.c: 23:  return S.button[i].sw;
 12086                           ;stkvar	_i @ sp[(0)+-1]
 12087  01CC8E  0EFF               	movlw	-1
 12088  01CC90  50E3               	movf	plusw1,w,c
 12089  01CC92  0D05               	mullw	5
 12090  01CC94  0E00               	movlw	low _S
 12091  01CC96  24F3               	addwf	243,w,c
 12092  01CC98  6ED9               	movwf	fsr2l,c
 12093  01CC9A  0E02               	movlw	high _S
 12094  01CC9C  20F4               	addwfc	prodh,w,c
 12095  01CC9E  6EDA               	movwf	fsr2h,c
 12096  01CCA0  50DF               	movf	indf2,w,c
 12097  01CCA2                     L10:
 12098  01CCA2  6E01               	movwf	btemp^0,c
 12099                           
 12100                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 12101  01CCA4  52E5               	movf	postdec1,f,c
 12102  01CCA6  0012               	return		;funcret
 12103  01CCA8                     __end_of_get_switch:
 12104                           	opt callstack 0
 12105                           
 12106 ;; *************** function _clear_adc_scan *****************
 12107 ;; Defined at:
 12108 ;;		line 96 in file "daq.c"
 12109 ;; Parameters:    Size  Location     Type
 12110 ;;		None
 12111 ;; Auto vars:     Size  Location     Type
 12112 ;;		None
 12113 ;; Return value:  Size  Location     Type
 12114 ;;                  1  [STACK] void 
 12115 ;; Registers used:
 12116 ;;		None
 12117 ;; Tracked objects:
 12118 ;;		On entry : 0/0
 12119 ;;		On exit  : 3F/0
 12120 ;;		Unchanged: 0/0
 12121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12126 ;;Total ram usage:        0 bytes
 12127 ;; Hardware stack levels used:    1
 12128 ;; Hardware stack levels required when called:   15
 12129 ;; This function calls:
 12130 ;;		Nothing
 12131 ;; This function is called by:
 12132 ;;		_main
 12133 ;;		_current_sensor_cal
 12134 ;;		_update_adc_result
 12135 ;; This function uses a reentrant model
 12136 ;;
 12137                           
 12138                           	psect	text42
 12139  01D38C                     __ptext42:
 12140                           	opt callstack 0
 12141  01D38C                     _clear_adc_scan:
 12142                           	opt callstack 13
 12143                           
 12144                           ;daq.c: 98:  R.done = 0;
 12145                           
 12146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12147                           ;incstack = 0
 12148  01D38C  0100               	movlb	0	; () banked
 12149  01D38E  6BE3               	clrf	(_R+53)& (0+255),b	;volatile
 12150                           
 12151                           ; BSR set to: 0
 12152                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12153  01D390  0012               	return		;funcret
 12154  01D392                     __end_of_clear_adc_scan:
 12155                           	opt callstack 0
 12156                           
 12157 ;; *************** function _cal_current_zero *****************
 12158 ;; Defined at:
 12159 ;;		line 322 in file "daq.c"
 12160 ;; Parameters:    Size  Location     Type
 12161 ;;  mode            1  [STACK] _Bool 
 12162 ;;  cb              2  [STACK] short 
 12163 ;;  cp              2  [STACK] short 
 12164 ;; Auto vars:     Size  Location     Type
 12165 ;;		None
 12166 ;; Return value:  Size  Location     Type
 12167 ;;                  1  [STACK] _Bool 
 12168 ;; Registers used:
 12169 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 12170 ;; Tracked objects:
 12171 ;;		On entry : 0/0
 12172 ;;		On exit  : 0/0
 12173 ;;		Unchanged: 0/0
 12174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12179 ;;Total ram usage:        0 bytes
 12180 ;; Hardware stack levels used:    1
 12181 ;; Hardware stack levels required when called:   16
 12182 ;; This function calls:
 12183 ;;		_check_range
 12184 ;; This function is called by:
 12185 ;;		_current_sensor_cal
 12186 ;; This function uses a reentrant model
 12187 ;;
 12188                           
 12189                           	psect	text43
 12190  01BAAE                     __ptext43:
 12191                           	opt callstack 0
 12192  01BAAE                     _cal_current_zero:
 12193                           	opt callstack 13
 12194                           
 12195                           ;daq.c: 322: _Bool cal_current_zero(_Bool mode, int16_t cb, int16_t cp);daq.c: 323: {;da
      +                          q.c: 325:  if (!check_range(cb, 100, 4000))
 12196                           
 12197                           ; BSR set to: 0
 12198                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12199                           ;incstack = 0
 12200  01BAAE  0EA0               	movlw	160
 12201  01BAB0  6EE6               	movwf	postinc1,c
 12202  01BAB2  0E0F               	movlw	15
 12203  01BAB4  6EE6               	movwf	postinc1,c
 12204  01BAB6  0E64               	movlw	100
 12205  01BAB8  6EE6               	movwf	postinc1,c
 12206  01BABA  0E00               	movlw	0
 12207  01BABC  6EE6               	movwf	postinc1,c
 12208                           
 12209                           ;stkvar	_cb @ sp[(-4)+-3]
 12210  01BABE  0EF9               	movlw	-7
 12211  01BAC0  006F FF8F FFE6     	movff	plusw1,postinc1
 12212  01BAC6  006F FF8F FFE6     	movff	plusw1,postinc1
 12213  01BACC  EC66  F0DE         	call	_check_range	;wreg free
 12214  01BAD0  5001               	movf	btemp^0,w,c
 12215  01BAD2  A4D8               	btfss	status,2,c
 12216  01BAD4  D002               	goto	l11327
 12217  01BAD6                     u10230:
 12218                           
 12219                           ;daq.c: 326:   return 0;
 12220  01BAD6  0E00               	movlw	0
 12221  01BAD8  D019               	goto	L11
 12222  01BADA                     l11327:
 12223                           
 12224                           ;daq.c: 328:  if (!check_range(cp, 100, 4000))
 12225  01BADA  0EA0               	movlw	160
 12226  01BADC  6EE6               	movwf	postinc1,c
 12227  01BADE  0E0F               	movlw	15
 12228  01BAE0  6EE6               	movwf	postinc1,c
 12229  01BAE2  0E64               	movlw	100
 12230  01BAE4  6EE6               	movwf	postinc1,c
 12231  01BAE6  0E00               	movlw	0
 12232  01BAE8  6EE6               	movwf	postinc1,c
 12233                           
 12234                           ;stkvar	_cp @ sp[(-4)+-5]
 12235  01BAEA  0EF7               	movlw	-9
 12236  01BAEC  006F FF8F FFE6     	movff	plusw1,postinc1
 12237  01BAF2  006F FF8F FFE6     	movff	plusw1,postinc1
 12238  01BAF8  EC66  F0DE         	call	_check_range	;wreg free
 12239  01BAFC  5001               	movf	btemp^0,w,c
 12240  01BAFE  B4D8               	btfsc	status,2,c
 12241  01BB00  D7EA               	goto	u10230
 12242                           
 12243                           ;daq.c: 331:  if (!mode)
 12244                           ;stkvar	_mode @ sp[(0)+-1]
 12245  01BB02  0EFF               	movlw	-1
 12246  01BB04  50E3               	movf	plusw1,w,c
 12247  01BB06  A4D8               	btfss	status,2,c
 12248  01BB08  D003               	goto	l11339
 12249  01BB0A                     u10250:
 12250                           
 12251                           ;daq.c: 332:   return 1;
 12252  01BB0A  0E01               	movlw	1
 12253  01BB0C                     L11:
 12254  01BB0C  6E01               	movwf	btemp^0,c
 12255  01BB0E  D011               	goto	l1938
 12256  01BB10                     l11339:
 12257                           
 12258                           ;daq.c: 334:  R.n_offset[0] = cb;
 12259                           ;stkvar	_cb @ sp[(0)+-3]
 12260  01BB10  0EFD               	movlw	-3
 12261  01BB12  006F FF8C  F0D4    	movff	plusw1,_R+38	;volatile
 12262  01BB18  0EFE               	movlw	-2
 12263  01BB1A  006F FF8C  F0D5    	movff	plusw1,_R+39	;volatile
 12264                           
 12265                           ;daq.c: 335:  R.n_offset[1] = cp;
 12266                           ;stkvar	_cp @ sp[(0)+-5]
 12267  01BB20  0EFB               	movlw	-5
 12268  01BB22  006F FF8C  F0D6    	movff	plusw1,_R+40	;volatile
 12269  01BB28  0EFC               	movlw	-4
 12270  01BB2A  006F FF8C  F0D7    	movff	plusw1,_R+41	;volatile
 12271  01BB30  D7EC               	goto	u10250
 12272  01BB32                     l1938:
 12273                           
 12274                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 12275  01BB32  0EFB               	movlw	251
 12276  01BB34  26E1               	addwf	fsr1l,f,c
 12277  01BB36  0EFF               	movlw	255
 12278  01BB38  22E2               	addwfc	fsr1h,f,c
 12279  01BB3A  0012               	return		;funcret
 12280  01BB3C                     __end_of_cal_current_zero:
 12281                           	opt callstack 0
 12282                           
 12283 ;; *************** function _check_range *****************
 12284 ;; Defined at:
 12285 ;;		line 310 in file "daq.c"
 12286 ;; Parameters:    Size  Location     Type
 12287 ;;  value           2  [STACK] short 
 12288 ;;  window          2  [STACK] short 
 12289 ;;  standard        2  [STACK] short 
 12290 ;; Auto vars:     Size  Location     Type
 12291 ;;		None
 12292 ;; Return value:  Size  Location     Type
 12293 ;;                  1  [STACK] _Bool 
 12294 ;; Registers used:
 12295 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 12296 ;; Tracked objects:
 12297 ;;		On entry : 0/0
 12298 ;;		On exit  : 0/0
 12299 ;;		Unchanged: 0/0
 12300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12305 ;;Total ram usage:        0 bytes
 12306 ;; Hardware stack levels used:    1
 12307 ;; Hardware stack levels required when called:   15
 12308 ;; This function calls:
 12309 ;;		Nothing
 12310 ;; This function is called by:
 12311 ;;		_cal_current_zero
 12312 ;; This function uses a reentrant model
 12313 ;;
 12314                           
 12315                           	psect	text44
 12316  01BCCC                     __ptext44:
 12317                           	opt callstack 0
 12318  01BCCC                     _check_range:
 12319                           	opt callstack 13
 12320                           
 12321                           ;daq.c: 310: static _Bool check_range(int16_t value, int16_t window, int16_t standard);d
      +                          aq.c: 311: {;daq.c: 312:  if (value > (standard + window))
 12322                           ;stkvar	_value @ sp[(0)+-2]
 12323                           ;stkvar	_window @ sp[(0)+-4]
 12324                           ;stkvar	_standard @ sp[(0)+-6]
 12325                           
 12326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12327                           ;incstack = 0
 12328  01BCCC  0EFA               	movlw	-6
 12329  01BCCE  006F FF8C  F00B    	movff	plusw1,btemp+10
 12330  01BCD4  0EFB               	movlw	-5
 12331  01BCD6  006F FF8C  F00C    	movff	plusw1,btemp+11
 12332  01BCDC  0EFC               	movlw	-4
 12333  01BCDE  50E3               	movf	plusw1,w,c
 12334  01BCE0  260B               	addwf	(btemp+10)^0,f,c
 12335  01BCE2  0EFD               	movlw	-3
 12336  01BCE4  50E3               	movf	plusw1,w,c
 12337  01BCE6  220C               	addwfc	(btemp+11)^0,f,c
 12338  01BCE8  0EFE               	movlw	-2
 12339  01BCEA  50E3               	movf	plusw1,w,c
 12340  01BCEC  5C0B               	subwf	(btemp+10)^0,w,c
 12341  01BCEE  500C               	movf	(btemp+11)^0,w,c
 12342  01BCF0  0A80               	xorlw	128
 12343  01BCF2  6E01               	movwf	btemp^0,c
 12344  01BCF4  0EFF               	movlw	-1
 12345  01BCF6  50E3               	movf	plusw1,w,c
 12346  01BCF8  0A80               	xorlw	128
 12347  01BCFA  5801               	subwfb	btemp^0,w,c
 12348  01BCFC  B0D8               	btfsc	status,0,c
 12349  01BCFE  D002               	goto	l10779
 12350  01BD00                     u9950:
 12351                           
 12352                           ;daq.c: 313:   return 0;
 12353  01BD00  0E00               	movlw	0
 12354  01BD02  D01E               	goto	L12
 12355  01BD04                     l10779:
 12356                           
 12357                           ;daq.c: 314:  if (value < (standard - window))
 12358                           ;stkvar	_window @ sp[(0)+-4]
 12359                           ;stkvar	_standard @ sp[(0)+-6]
 12360  01BD04  0EFA               	movlw	-6
 12361  01BD06  006F FF8C  F00B    	movff	plusw1,btemp+10
 12362  01BD0C  0EFB               	movlw	-5
 12363  01BD0E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12364  01BD14  0EFC               	movlw	-4
 12365  01BD16  50E3               	movf	plusw1,w,c
 12366  01BD18  5E0B               	subwf	(btemp+10)^0,f,c
 12367  01BD1A  0EFD               	movlw	-3
 12368  01BD1C  50E3               	movf	plusw1,w,c
 12369  01BD1E  5A0C               	subwfb	(btemp+11)^0,f,c
 12370                           
 12371                           ;stkvar	_value @ sp[(0)+-2]
 12372  01BD20  0EFE               	movlw	-2
 12373  01BD22  006F FF8C  F001    	movff	plusw1,btemp
 12374  01BD28  500B               	movf	(btemp+10)^0,w,c
 12375  01BD2A  5C01               	subwf	btemp^0,w,c
 12376  01BD2C  0EFF               	movlw	-1
 12377  01BD2E  50E3               	movf	plusw1,w,c
 12378  01BD30  0A80               	xorlw	128
 12379  01BD32  6E01               	movwf	btemp^0,c
 12380  01BD34  500C               	movf	(btemp+11)^0,w,c
 12381  01BD36  0A80               	xorlw	128
 12382  01BD38  5801               	subwfb	btemp^0,w,c
 12383  01BD3A  A0D8               	btfss	status,0,c
 12384  01BD3C  D7E1               	goto	u9950
 12385                           
 12386                           ;daq.c: 316:  return 1;
 12387  01BD3E  0E01               	movlw	1
 12388  01BD40                     L12:
 12389  01BD40  6E01               	movwf	btemp^0,c
 12390                           
 12391                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 12392  01BD42  0EFA               	movlw	250
 12393  01BD44  26E1               	addwf	fsr1l,f,c
 12394  01BD46  0EFF               	movlw	255
 12395  01BD48  22E2               	addwfc	fsr1h,f,c
 12396  01BD4A  0012               	return		;funcret
 12397  01BD4C                     __end_of_check_range:
 12398                           	opt callstack 0
 12399                           
 12400 ;; *************** function _convert_adc_data *****************
 12401 ;; Defined at:
 12402 ;;		line 51 in file "mbmc.c"
 12403 ;; Parameters:    Size  Location     Type
 12404 ;;		None
 12405 ;; Auto vars:     Size  Location     Type
 12406 ;;  i               1  [STACK] unsigned char 
 12407 ;; Return value:  Size  Location     Type
 12408 ;;                  1  [STACK] void 
 12409 ;; Registers used:
 12410 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 12411 ;; Tracked objects:
 12412 ;;		On entry : 0/1
 12413 ;;		On exit  : 0/0
 12414 ;;		Unchanged: 0/0
 12415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12420 ;;Total ram usage:        0 bytes
 12421 ;; Hardware stack levels used:    1
 12422 ;; Hardware stack levels required when called:   18
 12423 ;; This function calls:
 12424 ;;		_conv_raw_result
 12425 ;;		_lp_filter
 12426 ;; This function is called by:
 12427 ;;		_main
 12428 ;; This function uses a reentrant model
 12429 ;;
 12430                           
 12431                           	psect	text45
 12432  01B2FE                     __ptext45:
 12433                           	opt callstack 0
 12434  01B2FE                     _convert_adc_data:
 12435                           	opt callstack 0
 12436                           
 12437                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12438  01B2FE  52E6               	movf	postinc1,f,c
 12439                           
 12440                           ;mbmc.c: 53:  uint8_t i = 0;
 12441                           ;stkvar	_i @ sp[(-1)+0]
 12442                           
 12443                           ;incstack = 0
 12444  01B300  0EFF               	movlw	-1
 12445  01B302  6AE3               	clrf	plusw1,c
 12446  01B304                     l12129:
 12447                           
 12448                           ;mbmc.c: 56:   if (V.calib) {
 12449  01B304  0101               	movlb	1	; () banked
 12450  01B306  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 12451  01B308  B4D8               	btfsc	status,2,c
 12452  01B30A  D01B               	goto	l12133
 12453                           
 12454                           ; BSR set to: 1
 12455                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 12456  01B30C  0E01               	movlw	1
 12457  01B30E  6EE6               	movwf	postinc1,c
 12458                           
 12459                           ;stkvar	_i @ sp[(-2)+0]
 12460  01B310  0EFE               	movlw	-2
 12461  01B312  50E3               	movf	plusw1,w,c
 12462  01B314  6EE6               	movwf	postinc1,c
 12463  01B316  0E01               	movlw	1
 12464  01B318  6EE6               	movwf	postinc1,c
 12465                           
 12466                           ;stkvar	_i @ sp[(-4)+0]
 12467  01B31A  0EFC               	movlw	-4
 12468  01B31C  50E3               	movf	plusw1,w,c
 12469  01B31E  6EE6               	movwf	postinc1,c
 12470  01B320  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 12471  01B324  0060  F007  FFE6   	movff	btemp,postinc1
 12472  01B32A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12473  01B330  0060  F00F  FFE6   	movff	btemp+2,postinc1
 12474  01B336  0060  F013  FFE6   	movff	btemp+3,postinc1
 12475  01B33C  EC2E  F0C7         	call	_lp_filter	;wreg free
 12476  01B340  D01A               	goto	L13
 12477  01B342                     l12133:
 12478                           
 12479                           ; BSR set to: 1
 12480                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 12481  01B342  0E00               	movlw	0
 12482  01B344  6EE6               	movwf	postinc1,c
 12483                           
 12484                           ;stkvar	_i @ sp[(-2)+0]
 12485  01B346  0EFE               	movlw	-2
 12486  01B348  50E3               	movf	plusw1,w,c
 12487  01B34A  6EE6               	movwf	postinc1,c
 12488  01B34C  0E00               	movlw	0
 12489  01B34E  6EE6               	movwf	postinc1,c
 12490                           
 12491                           ;stkvar	_i @ sp[(-4)+0]
 12492  01B350  0EFC               	movlw	-4
 12493  01B352  50E3               	movf	plusw1,w,c
 12494  01B354  6EE6               	movwf	postinc1,c
 12495  01B356  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 12496  01B35A  0060  F007  FFE6   	movff	btemp,postinc1
 12497  01B360  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12498  01B366  0060  F00F  FFE6   	movff	btemp+2,postinc1
 12499  01B36C  0060  F013  FFE6   	movff	btemp+3,postinc1
 12500  01B372  EC2E  F0C7         	call	_lp_filter	;wreg free
 12501  01B376                     L13:
 12502                           
 12503                           ;stkvar	_i @ sp[(-1)+0]
 12504  01B376  0EFF               	movlw	-1
 12505  01B378  50E3               	movf	plusw1,w,c
 12506  01B37A  0D04               	mullw	4
 12507  01B37C  0EFF               	movlw	low _C
 12508  01B37E  24F3               	addwf	243,w,c
 12509  01B380  6ED9               	movwf	fsr2l,c
 12510  01B382  0E07               	movlw	high _C
 12511  01B384  20F4               	addwfc	prodh,w,c
 12512  01B386  6EDA               	movwf	fsr2h,c
 12513  01B388  0060  F007  FFDE   	movff	btemp,postinc2
 12514  01B38E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 12515  01B394  0060  F00F  FFDE   	movff	btemp+2,postinc2
 12516  01B39A  0060  F013  FFDE   	movff	btemp+3,postinc2
 12517                           
 12518                           ;mbmc.c: 61:  } while (++i < 16);
 12519                           ;stkvar	_i @ sp[(-1)+0]
 12520  01B3A0  0EFF               	movlw	-1
 12521  01B3A2  2AE3               	incf	plusw1,f,c
 12522  01B3A4  0EFF               	movlw	-1
 12523  01B3A6  006F FF8C  F001    	movff	plusw1,btemp
 12524  01B3AC  0E0F               	movlw	15
 12525  01B3AE  6401               	cpfsgt	btemp^0,c
 12526  01B3B0  D7A9               	goto	l12129
 12527                           
 12528                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12529  01B3B2  52E5               	movf	postdec1,f,c
 12530  01B3B4  0012               	return		;funcret
 12531  01B3B6                     __end_of_convert_adc_data:
 12532                           	opt callstack 0
 12533                           
 12534 ;; *************** function _clear_hid_pflags *****************
 12535 ;; Defined at:
 12536 ;;		line 67 in file "hid.c"
 12537 ;; Parameters:    Size  Location     Type
 12538 ;;  h               2  [STACK] PTR struct H_data
 12539 ;;		 -> H(9), 
 12540 ;; Auto vars:     Size  Location     Type
 12541 ;;		None
 12542 ;; Return value:  Size  Location     Type
 12543 ;;                  1  [STACK] void 
 12544 ;; Registers used:
 12545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 12546 ;; Tracked objects:
 12547 ;;		On entry : 3E/0
 12548 ;;		On exit  : 0/0
 12549 ;;		Unchanged: 0/0
 12550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12555 ;;Total ram usage:        0 bytes
 12556 ;; Hardware stack levels used:    1
 12557 ;; Hardware stack levels required when called:   15
 12558 ;; This function calls:
 12559 ;;		Nothing
 12560 ;; This function is called by:
 12561 ;;		_main
 12562 ;; This function uses a reentrant model
 12563 ;;
 12564                           
 12565                           	psect	text46
 12566  01C0D6                     __ptext46:
 12567                           	opt callstack 0
 12568  01C0D6                     _clear_hid_pflags:
 12569                           	opt callstack 15
 12570                           
 12571                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 12572                           ;stkvar	_h @ sp[(0)+-2]
 12573                           
 12574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12575                           ;incstack = 0
 12576  01C0D6  0EFE               	movlw	-2
 12577  01C0D8  006F FF8C  F00B    	movff	plusw1,btemp+10
 12578  01C0DE  0EFF               	movlw	-1
 12579  01C0E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 12580  01C0E6  0E03               	movlw	3
 12581  01C0E8  240B               	addwf	(btemp+10)^0,w,c
 12582  01C0EA  6ED9               	movwf	fsr2l,c
 12583  01C0EC  0E00               	movlw	0
 12584  01C0EE  200C               	addwfc	(btemp+11)^0,w,c
 12585  01C0F0  6EDA               	movwf	fsr2h,c
 12586  01C0F2  0E00               	movlw	0
 12587  01C0F4  6EDF               	movwf	indf2,c
 12588                           
 12589                           ;hid.c: 70:  h->enter_p = SW_OFF;
 12590                           ;stkvar	_h @ sp[(0)+-2]
 12591  01C0F6  0EFE               	movlw	-2
 12592  01C0F8  006F FF8C  F00B    	movff	plusw1,btemp+10
 12593  01C0FE  0EFF               	movlw	-1
 12594  01C100  006F FF8C  F00C    	movff	plusw1,btemp+11
 12595  01C106  0E05               	movlw	5
 12596  01C108  240B               	addwf	(btemp+10)^0,w,c
 12597  01C10A  6ED9               	movwf	fsr2l,c
 12598  01C10C  0E00               	movlw	0
 12599  01C10E  200C               	addwfc	(btemp+11)^0,w,c
 12600  01C110  6EDA               	movwf	fsr2h,c
 12601  01C112  0E00               	movlw	0
 12602  01C114  6EDF               	movwf	indf2,c
 12603                           
 12604                           ;hid.c: 71:  h->calib_p = SW_OFF;
 12605                           ;stkvar	_h @ sp[(0)+-2]
 12606  01C116  0EFE               	movlw	-2
 12607  01C118  006F FF8C  F00B    	movff	plusw1,btemp+10
 12608  01C11E  0EFF               	movlw	-1
 12609  01C120  006F FF8C  F00C    	movff	plusw1,btemp+11
 12610  01C126  0E07               	movlw	7
 12611  01C128  240B               	addwf	(btemp+10)^0,w,c
 12612  01C12A  6ED9               	movwf	fsr2l,c
 12613  01C12C  0E00               	movlw	0
 12614  01C12E  200C               	addwfc	(btemp+11)^0,w,c
 12615  01C130  6EDA               	movwf	fsr2h,c
 12616  01C132  0E00               	movlw	0
 12617  01C134  6EDF               	movwf	indf2,c
 12618                           
 12619                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 12620  01C136  52E5               	movf	postdec1,f,c
 12621  01C138  52E5               	movf	postdec1,f,c
 12622  01C13A  0012               	return		;funcret
 12623  01C13C                     __end_of_clear_hid_pflags:
 12624                           	opt callstack 0
 12625                           
 12626 ;; *************** function _check_help *****************
 12627 ;; Defined at:
 12628 ;;		line 40 in file "mconfig.c"
 12629 ;; Parameters:    Size  Location     Type
 12630 ;;  flipper         1  [STACK] const _Bool 
 12631 ;; Auto vars:     Size  Location     Type
 12632 ;;  estatus         1    0        _Bool 
 12633 ;; Return value:  Size  Location     Type
 12634 ;;                  1  [STACK] _Bool 
 12635 ;; Registers used:
 12636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12637 ;; Tracked objects:
 12638 ;;		On entry : 3F/1
 12639 ;;		On exit  : 0/0
 12640 ;;		Unchanged: 0/0
 12641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12646 ;;Total ram usage:        0 bytes
 12647 ;; Hardware stack levels used:    1
 12648 ;; Hardware stack levels required when called:   28
 12649 ;; This function calls:
 12650 ;;		_StartTimer
 12651 ;;		_TimerDone
 12652 ;;		_display_help
 12653 ;;		_display_info
 12654 ;;		_get_vterm_ptr
 12655 ;;		_help_button
 12656 ;;		_mode_lamp_bright
 12657 ;;		_mode_lamp_dim
 12658 ;;		_set_display_info
 12659 ;;		_set_temp_display_help
 12660 ;;		_set_vterm
 12661 ;;		_sprintf
 12662 ;;		_update_lcd
 12663 ;;		_vterm_dump
 12664 ;; This function is called by:
 12665 ;;		_main
 12666 ;; This function uses a reentrant model
 12667 ;;
 12668                           
 12669                           	psect	text47
 12670  018A46                     __ptext47:
 12671                           	opt callstack 0
 12672  018A46                     _check_help:
 12673                           	opt callstack 2
 12674                           
 12675                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 12676                           
 12677                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12678                           ;incstack = 0
 12679  018A46  ECF3  F0E4         	call	_help_button	;wreg free
 12680  018A4A  5001               	movf	btemp^0,w,c
 12681  018A4C  B4D8               	btfsc	status,2,c
 12682  018A4E  D0D0               	goto	l14325
 12683  018A50  ECB7  F0E9         	call	_display_info	;wreg free
 12684  018A54  0401               	decf	btemp^0,w,c
 12685  018A56  B4D8               	btfsc	status,2,c
 12686  018A58  D0CB               	goto	l14325
 12687                           
 12688                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 12689  018A5A  0EDC               	movlw	220
 12690  018A5C  6EE6               	movwf	postinc1,c
 12691  018A5E  0E05               	movlw	5
 12692  018A60  6EE6               	movwf	postinc1,c
 12693  018A62  0E0B               	movlw	11
 12694  018A64  6EE6               	movwf	postinc1,c
 12695  018A66  EC3A  F0E4         	call	_StartTimer	;wreg free
 12696                           
 12697                           ;mconfig.c: 48:   if (V.debug)
 12698  018A6A  0101               	movlb	1	; () banked
 12699  018A6C  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
 12700                           
 12701                           ; BSR set to: 1
 12702                           ;mconfig.c: 49:    vterm_dump();
 12703  018A6E  EC59  F0D1         	call	_vterm_dump	;wreg free
 12704                           
 12705                           ;mconfig.c: 51:   set_vterm(1);
 12706  018A72  0E01               	movlw	1
 12707  018A74  6EE6               	movwf	postinc1,c
 12708  018A76  EC9F  F0E8         	call	_set_vterm	;wreg free
 12709                           
 12710                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 12711  018A7A  ECB7  F0E9         	call	_display_info	;wreg free
 12712  018A7E  5001               	movf	btemp^0,w,c
 12713  018A80  6EE6               	movwf	postinc1,c
 12714  018A82  EC5F  F0E9         	call	_set_temp_display_help	;wreg free
 12715                           
 12716                           ; BSR set to: 1
 12717                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 12718  018A86  0E01               	movlw	1
 12719  018A88  6EE6               	movwf	postinc1,c
 12720  018A8A  ECAE  F0E8         	call	_set_display_info	;wreg free
 12721                           
 12722                           ;mconfig.c: 54:   if (flipper) {
 12723                           ;stkvar	_flipper @ sp[(0)+-1]
 12724  018A8E  0EFF               	movlw	-1
 12725  018A90  50E3               	movf	plusw1,w,c
 12726  018A92  B4D8               	btfsc	status,2,c
 12727  018A94  D019               	goto	l14311
 12728                           
 12729                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 12730  018A96  0EB3               	movlw	low STR_62
 12731  018A98  6EE6               	movwf	postinc1,c
 12732  018A9A  0EFF               	movlw	high STR_62
 12733  018A9C  6EE6               	movwf	postinc1,c
 12734  018A9E  0E5D               	movlw	low STR_64
 12735  018AA0  6EE6               	movwf	postinc1,c
 12736  018AA2  0EFF               	movlw	high STR_64
 12737  018AA4  6EE6               	movwf	postinc1,c
 12738  018AA6  0E01               	movlw	1
 12739  018AA8  6EE6               	movwf	postinc1,c
 12740  018AAA  0E00               	movlw	0
 12741  018AAC  6EE6               	movwf	postinc1,c
 12742  018AAE  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 12743  018AB2  0060  F007  FFE6   	movff	btemp,postinc1
 12744  018AB8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12745  018ABE  0E06               	movlw	6
 12746  018AC0  6EE6               	movwf	postinc1,c
 12747  018AC2  ECAC  F0D4         	call	_sprintf	;wreg free
 12748                           
 12749                           ;mconfig.c: 56:   } else {
 12750  018AC6  D018               	goto	l1709
 12751  018AC8                     l14311:
 12752                           
 12753                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 12754  018AC8  0EC9               	movlw	low STR_63
 12755  018ACA  6EE6               	movwf	postinc1,c
 12756  018ACC  0EFF               	movlw	high STR_63
 12757  018ACE  6EE6               	movwf	postinc1,c
 12758  018AD0  0E5D               	movlw	low STR_64
 12759  018AD2  6EE6               	movwf	postinc1,c
 12760  018AD4  0EFF               	movlw	high STR_64
 12761  018AD6  6EE6               	movwf	postinc1,c
 12762  018AD8  0E01               	movlw	1
 12763  018ADA  6EE6               	movwf	postinc1,c
 12764  018ADC  0E00               	movlw	0
 12765  018ADE  6EE6               	movwf	postinc1,c
 12766  018AE0  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 12767  018AE4  0060  F007  FFE6   	movff	btemp,postinc1
 12768  018AEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12769  018AF0  0E06               	movlw	6
 12770  018AF2  6EE6               	movwf	postinc1,c
 12771  018AF4  ECAC  F0D4         	call	_sprintf	;wreg free
 12772  018AF8                     l1709:
 12773                           
 12774                           ; BSR set to: 0
 12775                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 12776  018AF8  0101               	movlb	1	; () banked
 12777  018AFA  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 12778  018AFC  32E8               	rrcf	wreg,f,c
 12779  018AFE  32E8               	rrcf	wreg,f,c
 12780  018B00  0B03               	andlw	3
 12781  018B02  0D24               	mullw	36
 12782  018B04  0E12               	movlw	18
 12783  018B06  26F3               	addwf	243,f,c
 12784  018B08  0E00               	movlw	0
 12785  018B0A  22F4               	addwfc	244,f,c
 12786  018B0C  0EB3               	movlw	low _T
 12787  018B0E  6E0B               	movwf	(btemp+10)^0,c
 12788  018B10  0EF9               	movlw	high _T
 12789  018B12  6E0C               	movwf	(btemp+11)^0,c
 12790  018B14  50F3               	movf	243,w,c
 12791  018B16  260B               	addwf	(btemp+10)^0,f,c
 12792  018B18  50F4               	movf	244,w,c
 12793  018B1A  220C               	addwfc	(btemp+11)^0,f,c
 12794  018B1C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12795  018B22  0060  F033  FFE6   	movff	btemp+11,postinc1
 12796  018B28  0EBF               	movlw	low STR_66
 12797  018B2A  6EE6               	movwf	postinc1,c
 12798  018B2C  0EFF               	movlw	high STR_66
 12799  018B2E  6EE6               	movwf	postinc1,c
 12800  018B30  0E01               	movlw	1
 12801  018B32  6EE6               	movwf	postinc1,c
 12802  018B34  0E01               	movlw	1
 12803  018B36  6EE6               	movwf	postinc1,c
 12804  018B38  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 12805  018B3C  0060  F007  FFE6   	movff	btemp,postinc1
 12806  018B42  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12807  018B48  0E06               	movlw	6
 12808  018B4A  6EE6               	movwf	postinc1,c
 12809  018B4C  ECAC  F0D4         	call	_sprintf	;wreg free
 12810                           
 12811                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 12812  018B50  0101               	movlb	1	; () banked
 12813  018B52  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 12814  018B54  32E8               	rrcf	wreg,f,c
 12815  018B56  32E8               	rrcf	wreg,f,c
 12816  018B58  0B03               	andlw	3
 12817  018B5A  0D24               	mullw	36
 12818  018B5C  0EB3               	movlw	low _T
 12819  018B5E  6E0B               	movwf	(btemp+10)^0,c
 12820  018B60  0EF9               	movlw	high _T
 12821  018B62  6E0C               	movwf	(btemp+11)^0,c
 12822  018B64  50F3               	movf	243,w,c
 12823  018B66  260B               	addwf	(btemp+10)^0,f,c
 12824  018B68  50F4               	movf	244,w,c
 12825  018B6A  220C               	addwfc	(btemp+11)^0,f,c
 12826  018B6C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12827  018B72  0060  F033  FFE6   	movff	btemp+11,postinc1
 12828  018B78  0EBF               	movlw	low STR_66
 12829  018B7A  6EE6               	movwf	postinc1,c
 12830  018B7C  0EFF               	movlw	high STR_66
 12831  018B7E  6EE6               	movwf	postinc1,c
 12832  018B80  0E01               	movlw	1
 12833  018B82  6EE6               	movwf	postinc1,c
 12834  018B84  0E02               	movlw	2
 12835  018B86  6EE6               	movwf	postinc1,c
 12836  018B88  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 12837  018B8C  0060  F007  FFE6   	movff	btemp,postinc1
 12838  018B92  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12839  018B98  0E06               	movlw	6
 12840  018B9A  6EE6               	movwf	postinc1,c
 12841  018B9C  ECAC  F0D4         	call	_sprintf	;wreg free
 12842                           
 12843                           ; BSR set to: 0
 12844                           ;mconfig.c: 61:   V.help_id++;
 12845  018BA0  EE20  F1A2         	lfsr	2,_V+155	;volatile
 12846  018BA4  38DF               	swapf	223,w,c
 12847  018BA6  6E0C               	movwf	(btemp+11)^0,c
 12848  018BA8  320C               	rrcf	(btemp+11)^0,f,c
 12849  018BAA  300C               	rrcf	(btemp+11)^0,w,c
 12850  018BAC  0B03               	andlw	3
 12851  018BAE  6E0C               	movwf	(btemp+11)^0,c
 12852  018BB0  2A0C               	incf	(btemp+11)^0,f,c
 12853  018BB2  3A0C               	swapf	(btemp+11)^0,f,c
 12854  018BB4  360C               	rlcf	(btemp+11)^0,f,c
 12855  018BB6  360C               	rlcf	(btemp+11)^0,f,c
 12856  018BB8  50DF               	movf	223,w,c
 12857  018BBA  180C               	xorwf	(btemp+11)^0,w,c
 12858  018BBC  0B3F               	andlw	-193
 12859  018BBE  180C               	xorwf	(btemp+11)^0,w,c
 12860  018BC0  6EDF               	movwf	223,c
 12861                           
 12862                           ; BSR set to: 0
 12863                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 12864  018BC2  0EB8               	movlw	184
 12865  018BC4  6EE6               	movwf	postinc1,c
 12866  018BC6  0E0B               	movlw	11
 12867  018BC8  6EE6               	movwf	postinc1,c
 12868  018BCA  0E09               	movlw	9
 12869  018BCC  6EE6               	movwf	postinc1,c
 12870  018BCE  EC3A  F0E4         	call	_StartTimer	;wreg free
 12871                           
 12872                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 12873  018BD2  0EB8               	movlw	184
 12874  018BD4  6EE6               	movwf	postinc1,c
 12875  018BD6  0E0B               	movlw	11
 12876  018BD8  6EE6               	movwf	postinc1,c
 12877  018BDA  0E07               	movlw	7
 12878  018BDC  6EE6               	movwf	postinc1,c
 12879  018BDE  EC3A  F0E4         	call	_StartTimer	;wreg free
 12880                           
 12881                           ;mconfig.c: 64:   mode_lamp_bright();
 12882  018BE2  EC76  F0E9         	call	_mode_lamp_bright	;wreg free
 12883                           
 12884                           ;mconfig.c: 65:   update_lcd(1);
 12885  018BE6  0E01               	movlw	1
 12886  018BE8  6EE6               	movwf	postinc1,c
 12887  018BEA  EC24  F0D4         	call	_update_lcd	;wreg free
 12888                           
 12889                           ;mconfig.c: 67:  } else {
 12890  018BEE  D032               	goto	l1710
 12891  018BF0                     l14325:
 12892                           
 12893                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 12894  018BF0  0E09               	movlw	9
 12895  018BF2  6EE6               	movwf	postinc1,c
 12896  018BF4  ECA9  F0E6         	call	_TimerDone	;wreg free
 12897  018BF8  5001               	movf	btemp^0,w,c
 12898  018BFA  B4D8               	btfsc	status,2,c
 12899  018BFC  D02B               	goto	l1710
 12900                           
 12901                           ;mconfig.c: 69:    set_vterm(0);
 12902  018BFE  0E00               	movlw	0
 12903  018C00  6EE6               	movwf	postinc1,c
 12904  018C02  EC9F  F0E8         	call	_set_vterm	;wreg free
 12905                           
 12906                           ;mconfig.c: 70:    V.help = 0;
 12907  018C06  0101               	movlb	1	; () banked
 12908  018C08  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 12909                           
 12910                           ; BSR set to: 1
 12911                           ;mconfig.c: 71:    set_display_info(display_help());
 12912  018C0A  ECBB  F0E9         	call	_display_help	;wreg free
 12913  018C0E  5001               	movf	btemp^0,w,c
 12914  018C10  6EE6               	movwf	postinc1,c
 12915  018C12  ECAE  F0E8         	call	_set_display_info	;wreg free
 12916                           
 12917                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 12918  018C16  0060  F673  FFE6   	movff	_V+149,postinc1
 12919  018C1C  0060  F677  FFE6   	movff	_V+150,postinc1
 12920  018C22  ECE7  F0E8         	call	_mode_lamp_dim	;wreg free
 12921                           
 12922                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 12923  018C26  0E0B               	movlw	11
 12924  018C28  6EE6               	movwf	postinc1,c
 12925  018C2A  ECA9  F0E6         	call	_TimerDone	;wreg free
 12926  018C2E  5001               	movf	btemp^0,w,c
 12927  018C30  B4D8               	btfsc	status,2,c
 12928  018C32  D010               	goto	l1710
 12929                           
 12930                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 12931  018C34  0101               	movlb	1	; () banked
 12932  018C36  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 12933  018C38  A4D8               	btfss	status,2,c
 12934  018C3A  D002               	goto	u13650
 12935  018C3C  0E01               	movlw	1
 12936  018C3E  D001               	goto	u13660
 12937  018C40                     u13650:
 12938  018C40  0E00               	movlw	0
 12939  018C42                     u13660:
 12940  018C42  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 12941                           
 12942                           ; BSR set to: 1
 12943                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 12944  018C44  0EDC               	movlw	220
 12945  018C46  6EE6               	movwf	postinc1,c
 12946  018C48  0E05               	movlw	5
 12947  018C4A  6EE6               	movwf	postinc1,c
 12948  018C4C  0E0B               	movlw	11
 12949  018C4E  6EE6               	movwf	postinc1,c
 12950  018C50  EC3A  F0E4         	call	_StartTimer	;wreg free
 12951  018C54                     l1710:
 12952                           
 12953                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 12954  018C54  52E5               	movf	postdec1,f,c
 12955  018C56  0012               	return		;funcret
 12956  018C58                     __end_of_check_help:
 12957                           	opt callstack 0
 12958                           
 12959 ;; *************** function _vterm_dump *****************
 12960 ;; Defined at:
 12961 ;;		line 121 in file "mconfig.c"
 12962 ;; Parameters:    Size  Location     Type
 12963 ;;		None
 12964 ;; Auto vars:     Size  Location     Type
 12965 ;;		None
 12966 ;; Return value:  Size  Location     Type
 12967 ;;                  1  [STACK] void 
 12968 ;; Registers used:
 12969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12970 ;; Tracked objects:
 12971 ;;		On entry : 3F/1
 12972 ;;		On exit  : 0/0
 12973 ;;		Unchanged: 0/0
 12974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12979 ;;Total ram usage:        0 bytes
 12980 ;; Hardware stack levels used:    1
 12981 ;; Hardware stack levels required when called:   27
 12982 ;; This function calls:
 12983 ;;		_WaitMs
 12984 ;;		_eaDogM_WriteStringAtPos
 12985 ;;		_get_vterm_ptr
 12986 ;;		_sprintf
 12987 ;;		_wait_lcd_done
 12988 ;; This function is called by:
 12989 ;;		_check_help
 12990 ;; This function uses a reentrant model
 12991 ;;
 12992                           
 12993                           	psect	text48
 12994  01A2B2                     __ptext48:
 12995                           	opt callstack 0
 12996  01A2B2                     _vterm_dump:
 12997                           	opt callstack 2
 12998                           
 12999                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 13000                           
 13001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13002                           ;incstack = 0
 13003  01A2B2  0E01               	movlw	1
 13004  01A2B4  6EE6               	movwf	postinc1,c
 13005  01A2B6  0E00               	movlw	0
 13006  01A2B8  6EE6               	movwf	postinc1,c
 13007  01A2BA  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 13008  01A2BE  0060  F007  FFE6   	movff	btemp,postinc1
 13009  01A2C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13010  01A2CA  0E00               	movlw	0
 13011  01A2CC  6EE6               	movwf	postinc1,c
 13012  01A2CE  0E00               	movlw	0
 13013  01A2D0  6EE6               	movwf	postinc1,c
 13014  01A2D2  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 13015  01A2D6  0060  F007  FFE6   	movff	btemp,postinc1
 13016  01A2DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13017  01A2E2  0EA4               	movlw	low STR_68
 13018  01A2E4  6EE6               	movwf	postinc1,c
 13019  01A2E6  0EFF               	movlw	high STR_68
 13020  01A2E8  6EE6               	movwf	postinc1,c
 13021  01A2EA  0E08               	movlw	low (_V+1)
 13022  01A2EC  6EE6               	movwf	postinc1,c
 13023  01A2EE  0E01               	movlw	high (_V+1)
 13024  01A2F0  6EE6               	movwf	postinc1,c
 13025  01A2F2  0E08               	movlw	8
 13026  01A2F4  6EE6               	movwf	postinc1,c
 13027  01A2F6  ECAC  F0D4         	call	_sprintf	;wreg free
 13028                           
 13029                           ; BSR set to: 0
 13030                           ;mconfig.c: 124:  wait_lcd_done();
 13031  01A2FA  EC2E  F0E8         	call	_wait_lcd_done	;wreg free
 13032                           
 13033                           ; BSR set to: 0
 13034                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 13035  01A2FE  0E08               	movlw	low (_V+1)
 13036  01A300  6EE6               	movwf	postinc1,c
 13037  01A302  0E01               	movlw	high (_V+1)
 13038  01A304  6EE6               	movwf	postinc1,c
 13039  01A306  0E00               	movlw	0
 13040  01A308  6EE6               	movwf	postinc1,c
 13041  01A30A  0E00               	movlw	0
 13042  01A30C  6EE6               	movwf	postinc1,c
 13043  01A30E  EC38  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13044                           
 13045                           ; BSR set to: 59
 13046                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 13047  01A312  0E01               	movlw	1
 13048  01A314  6EE6               	movwf	postinc1,c
 13049  01A316  0E01               	movlw	1
 13050  01A318  6EE6               	movwf	postinc1,c
 13051  01A31A  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 13052  01A31E  0060  F007  FFE6   	movff	btemp,postinc1
 13053  01A324  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13054  01A32A  0E00               	movlw	0
 13055  01A32C  6EE6               	movwf	postinc1,c
 13056  01A32E  0E01               	movlw	1
 13057  01A330  6EE6               	movwf	postinc1,c
 13058  01A332  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 13059  01A336  0060  F007  FFE6   	movff	btemp,postinc1
 13060  01A33C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13061  01A342  0EA4               	movlw	low STR_68
 13062  01A344  6EE6               	movwf	postinc1,c
 13063  01A346  0EFF               	movlw	high STR_68
 13064  01A348  6EE6               	movwf	postinc1,c
 13065  01A34A  0E08               	movlw	low (_V+1)
 13066  01A34C  6EE6               	movwf	postinc1,c
 13067  01A34E  0E01               	movlw	high (_V+1)
 13068  01A350  6EE6               	movwf	postinc1,c
 13069  01A352  0E08               	movlw	8
 13070  01A354  6EE6               	movwf	postinc1,c
 13071  01A356  ECAC  F0D4         	call	_sprintf	;wreg free
 13072                           
 13073                           ; BSR set to: 0
 13074                           ;mconfig.c: 127:  wait_lcd_done();
 13075  01A35A  EC2E  F0E8         	call	_wait_lcd_done	;wreg free
 13076                           
 13077                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 13078  01A35E  0E08               	movlw	low (_V+1)
 13079  01A360  6EE6               	movwf	postinc1,c
 13080  01A362  0E01               	movlw	high (_V+1)
 13081  01A364  6EE6               	movwf	postinc1,c
 13082  01A366  0E00               	movlw	0
 13083  01A368  6EE6               	movwf	postinc1,c
 13084  01A36A  0E01               	movlw	1
 13085  01A36C  6EE6               	movwf	postinc1,c
 13086  01A36E  EC38  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13087                           
 13088                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 13089  01A372  0E01               	movlw	1
 13090  01A374  6EE6               	movwf	postinc1,c
 13091  01A376  0E02               	movlw	2
 13092  01A378  6EE6               	movwf	postinc1,c
 13093  01A37A  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 13094  01A37E  0060  F007  FFE6   	movff	btemp,postinc1
 13095  01A384  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13096  01A38A  0E00               	movlw	0
 13097  01A38C  6EE6               	movwf	postinc1,c
 13098  01A38E  0E02               	movlw	2
 13099  01A390  6EE6               	movwf	postinc1,c
 13100  01A392  EC27  F0E6         	call	_get_vterm_ptr	;wreg free
 13101  01A396  0060  F007  FFE6   	movff	btemp,postinc1
 13102  01A39C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13103  01A3A2  0EA4               	movlw	low STR_68
 13104  01A3A4  6EE6               	movwf	postinc1,c
 13105  01A3A6  0EFF               	movlw	high STR_68
 13106  01A3A8  6EE6               	movwf	postinc1,c
 13107  01A3AA  0E08               	movlw	low (_V+1)
 13108  01A3AC  6EE6               	movwf	postinc1,c
 13109  01A3AE  0E01               	movlw	high (_V+1)
 13110  01A3B0  6EE6               	movwf	postinc1,c
 13111  01A3B2  0E08               	movlw	8
 13112  01A3B4  6EE6               	movwf	postinc1,c
 13113  01A3B6  ECAC  F0D4         	call	_sprintf	;wreg free
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;mconfig.c: 130:  wait_lcd_done();
 13117  01A3BA  EC2E  F0E8         	call	_wait_lcd_done	;wreg free
 13118                           
 13119                           ; BSR set to: 0
 13120                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 13121  01A3BE  0E08               	movlw	low (_V+1)
 13122  01A3C0  6EE6               	movwf	postinc1,c
 13123  01A3C2  0E01               	movlw	high (_V+1)
 13124  01A3C4  6EE6               	movwf	postinc1,c
 13125  01A3C6  0E00               	movlw	0
 13126  01A3C8  6EE6               	movwf	postinc1,c
 13127  01A3CA  0E02               	movlw	2
 13128  01A3CC  6EE6               	movwf	postinc1,c
 13129  01A3CE  EC38  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13130                           
 13131                           ; BSR set to: 59
 13132                           ;mconfig.c: 132:  WaitMs(3000);
 13133  01A3D2  0EB8               	movlw	184
 13134  01A3D4  6EE6               	movwf	postinc1,c
 13135  01A3D6  0E0B               	movlw	11
 13136  01A3D8  6EE6               	movwf	postinc1,c
 13137  01A3DA  EC2B  F0E5         	call	_WaitMs	;wreg free
 13138                           
 13139                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 13140  01A3DE  0012               	return		;funcret
 13141  01A3E0                     __end_of_vterm_dump:
 13142                           	opt callstack 0
 13143                           
 13144 ;; *************** function _sprintf *****************
 13145 ;; Defined at:
 13146 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 13147 ;; Parameters:    Size  Location     Type
 13148 ;;  s               2  [STACK] PTR unsigned char 
 13149 ;;		 -> D.lcd(480), D(482), port_data(512), V(192), 
 13150 ;;  fmt             2  [STACK] PTR const unsigned char 
 13151 ;;		 -> STR_81(127), STR_79(3), STR_78(3), STR_77(19), 
 13152 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 13153 ;;		 -> STR_72(19), STR_71(24), STR_70(15), STR_69(15), 
 13154 ;;		 -> STR_68(15), STR_67(10), STR_66(10), STR_65(19), 
 13155 ;;		 -> STR_64(19), STR_59(21), STR_58(21), STR_57(21), 
 13156 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 13157 ;;		 -> STR_52(21), STR_51(21), STR_50(20), STR_49(20), 
 13158 ;;		 -> STR_48(21), STR_47(21), STR_46(21), STR_45(22), 
 13159 ;;		 -> STR_44(22), STR_43(22), STR_42(23), STR_41(23), 
 13160 ;;		 -> STR_40(23), STR_39(29), STR_38(23), STR_37(23), 
 13161 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 13162 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 13163 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 13164 ;;		 -> STR_24(17), STR_23(16), STR_22(16), STR_21(26), 
 13165 ;;		 -> STR_20(26), STR_19(22), STR_18(21), STR_17(21), 
 13166 ;;		 -> STR_16(21), STR_15(21), STR_14(22), STR_13(22), 
 13167 ;;		 -> STR_12(22), STR_11(26), STR_10(21), STR_9(21), 
 13168 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 13169 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 13170 ;; Auto vars:     Size  Location     Type
 13171 ;;  f               6  [STACK] struct _IO_FILE
 13172 ;;  ap              2  [STACK] PTR void [1]
 13173 ;;		 -> ?_printf(2), ?_sprintf(2), 
 13174 ;;  ret             2    0        int 
 13175 ;; Return value:  Size  Location     Type
 13176 ;;                  2  [STACK] int 
 13177 ;; Registers used:
 13178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13179 ;; Tracked objects:
 13180 ;;		On entry : 0/2
 13181 ;;		On exit  : 3F/0
 13182 ;;		Unchanged: 0/0
 13183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13188 ;;Total ram usage:        0 bytes
 13189 ;; Hardware stack levels used:    1
 13190 ;; Hardware stack levels required when called:   23
 13191 ;; This function calls:
 13192 ;;		_vfprintf
 13193 ;; This function is called by:
 13194 ;;		_main
 13195 ;;		_current_sensor_cal
 13196 ;;		_check_help
 13197 ;;		_vterm_dump
 13198 ;;		_calc_bsoc
 13199 ;; This function uses a reentrant model
 13200 ;;
 13201                           
 13202                           	psect	text49
 13203  01A958                     __ptext49:
 13204                           	opt callstack 0
 13205  01A958                     _sprintf:
 13206                           	opt callstack 0
 13207                           
 13208                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13209  01A958  0E08               	movlw	8
 13210  01A95A  26E1               	addwf	fsr1l,f,c
 13211  01A95C  0E00               	movlw	0
 13212  01A95E  22E2               	addwfc	fsr1h,f,c
 13213                           
 13214                           ;incstack = 0
 13215 ;; hardware stack exceeded
 13216  01A960  0EFE               	movlw	254
 13217  01A962  6E0B               	movwf	(btemp+10)^0,c
 13218  01A964  0EFF               	movlw	255
 13219  01A966  6E0C               	movwf	(btemp+11)^0,c
 13220                           
 13221                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 13222  01A968  0EF5               	movlw	245
 13223  01A96A  24E1               	addwf	fsr1l,w,c
 13224  01A96C  6E09               	movwf	(btemp+8)^0,c
 13225  01A96E  0EFF               	movlw	255
 13226  01A970  20E2               	addwfc	fsr1h,w,c
 13227  01A972  6E0A               	movwf	(btemp+9)^0,c
 13228  01A974  500B               	movf	(btemp+10)^0,w,c
 13229  01A976  2609               	addwf	(btemp+8)^0,f,c
 13230  01A978  500C               	movf	(btemp+11)^0,w,c
 13231  01A97A  220A               	addwfc	(btemp+9)^0,f,c
 13232                           
 13233                           ;stkvar	_ap @ sp[(-8)+6]
 13234  01A97C  0EFF               	movlw	-1
 13235  01A97E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13236  01A984  0EFE               	movlw	-2
 13237  01A986  0060  F027  FFE3   	movff	btemp+8,plusw1
 13238                           
 13239                           ;stkvar	_s @ sp[(-8)+-3]
 13240  01A98C  0EF5               	movlw	-11
 13241  01A98E  006F FF8C  F00B    	movff	plusw1,btemp+10
 13242  01A994  0EF6               	movlw	-10
 13243  01A996  006F FF8C  F00C    	movff	plusw1,btemp+11
 13244                           
 13245                           ;stkvar	_f @ sp[(-8)+0]
 13246  01A99C  0EF9               	movlw	-7
 13247  01A99E  0060  F033  FFE3   	movff	btemp+11,plusw1
 13248  01A9A4  0EF8               	movlw	-8
 13249  01A9A6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13250                           
 13251                           ;stkvar	_f @ sp[(-8)+0]
 13252  01A9AC  0EFA               	movlw	250
 13253  01A9AE  24E1               	addwf	fsr1l,w,c
 13254  01A9B0  6ED9               	movwf	fsr2l,c
 13255  01A9B2  0EFF               	movlw	255
 13256  01A9B4  20E2               	addwfc	fsr1h,w,c
 13257  01A9B6  6EDA               	movwf	fsr2h,c
 13258  01A9B8  0E00               	movlw	0
 13259  01A9BA  6EDE               	movwf	postinc2,c
 13260  01A9BC  0E00               	movlw	0
 13261  01A9BE  6EDD               	movwf	postdec2,c
 13262                           
 13263                           ;stkvar	_f @ sp[(-8)+0]
 13264  01A9C0  0EFC               	movlw	252
 13265  01A9C2  24E1               	addwf	fsr1l,w,c
 13266  01A9C4  6ED9               	movwf	fsr2l,c
 13267  01A9C6  0EFF               	movlw	255
 13268  01A9C8  20E2               	addwfc	fsr1h,w,c
 13269  01A9CA  6EDA               	movwf	fsr2h,c
 13270  01A9CC  0E00               	movlw	0
 13271  01A9CE  6EDE               	movwf	postinc2,c
 13272  01A9D0  0E00               	movlw	0
 13273  01A9D2  6EDD               	movwf	postdec2,c
 13274                           
 13275                           ;stkvar	_ap @ sp[(-8)+6]
 13276  01A9D4  0EFE               	movlw	254
 13277  01A9D6  24E1               	addwf	fsr1l,w,c
 13278  01A9D8  6E01               	movwf	btemp^0,c
 13279  01A9DA  0EFF               	movlw	255
 13280  01A9DC  20E2               	addwfc	fsr1h,w,c
 13281  01A9DE  6E02               	movwf	(btemp+1)^0,c
 13282  01A9E0  0060  F007  FFE6   	movff	btemp,postinc1
 13283  01A9E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13284                           
 13285                           ;stkvar	_fmt @ sp[(-10)+-5]
 13286  01A9EC  0EF1               	movlw	-15
 13287  01A9EE  006F FF8F FFE6     	movff	plusw1,postinc1
 13288  01A9F4  006F FF8F FFE6     	movff	plusw1,postinc1
 13289                           
 13290                           ;stkvar	_f @ sp[(-12)+0]
 13291  01A9FA  0EF4               	movlw	244
 13292  01A9FC  24E1               	addwf	fsr1l,w,c
 13293  01A9FE  6E01               	movwf	btemp^0,c
 13294  01AA00  0EFF               	movlw	255
 13295  01AA02  20E2               	addwfc	fsr1h,w,c
 13296  01AA04  6E02               	movwf	(btemp+1)^0,c
 13297  01AA06  0060  F007  FFE6   	movff	btemp,postinc1
 13298  01AA0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13299  01AA12  EC8D  F0DA         	call	_vfprintf	;wreg free
 13300                           
 13301                           ; BSR set to: 0
 13302                           ;stkvar	_f @ sp[(-8)+0]
 13303  01AA16  0EFA               	movlw	250
 13304  01AA18  24E1               	addwf	fsr1l,w,c
 13305  01AA1A  6ED9               	movwf	fsr2l,c
 13306  01AA1C  0EFF               	movlw	255
 13307  01AA1E  20E2               	addwfc	fsr1h,w,c
 13308  01AA20  6EDA               	movwf	fsr2h,c
 13309  01AA22  006F FF78  F00B    	movff	postinc2,btemp+10
 13310  01AA28  006F FF74  F00C    	movff	postdec2,btemp+11
 13311                           
 13312                           ;stkvar	_s @ sp[(-8)+-3]
 13313  01AA2E  0EF5               	movlw	-11
 13314  01AA30  006F FF8C  F009    	movff	plusw1,btemp+8
 13315  01AA36  0EF6               	movlw	-10
 13316  01AA38  006F FF8C  F00A    	movff	plusw1,btemp+9
 13317  01AA3E  500B               	movf	(btemp+10)^0,w,c
 13318  01AA40  2409               	addwf	(btemp+8)^0,w,c
 13319  01AA42  6ED9               	movwf	fsr2l,c
 13320  01AA44  500C               	movf	(btemp+11)^0,w,c
 13321  01AA46  200A               	addwfc	(btemp+9)^0,w,c
 13322  01AA48  6EDA               	movwf	fsr2h,c
 13323  01AA4A  0E00               	movlw	0
 13324  01AA4C  6EDF               	movwf	indf2,c
 13325                           
 13326                           ; BSR set to: 0
 13327                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 13328  01AA4E  0EF8               	movlw	248
 13329  01AA50  26E1               	addwf	fsr1l,f,c
 13330  01AA52  0EFF               	movlw	255
 13331  01AA54  22E2               	addwfc	fsr1h,f,c
 13332  01AA56  52E5               	movf	postdec1,f,c
 13333  01AA58  50E7               	movf	indf1,w,c
 13334  01AA5A  5EE1               	subwf	fsr1l,f,c
 13335  01AA5C  0E00               	movlw	0
 13336  01AA5E  5AE2               	subwfb	fsr1h,f,c
 13337  01AA60  0012               	return		;funcret
 13338  01AA62                     __end_of_sprintf:
 13339                           	opt callstack 0
 13340                           
 13341 ;; *************** function _get_vterm_ptr *****************
 13342 ;; Defined at:
 13343 ;;		line 116 in file "mconfig.c"
 13344 ;; Parameters:    Size  Location     Type
 13345 ;;  line            1  [STACK] const unsigned char 
 13346 ;;  vterm           1  [STACK] const unsigned char 
 13347 ;; Auto vars:     Size  Location     Type
 13348 ;;		None
 13349 ;; Return value:  Size  Location     Type
 13350 ;;                  2  [STACK] PTR unsigned char 
 13351 ;; Registers used:
 13352 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 13353 ;; Tracked objects:
 13354 ;;		On entry : 0/2
 13355 ;;		On exit  : 0/0
 13356 ;;		Unchanged: 0/0
 13357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13362 ;;Total ram usage:        0 bytes
 13363 ;; Hardware stack levels used:    1
 13364 ;; Hardware stack levels required when called:   15
 13365 ;; This function calls:
 13366 ;;		Nothing
 13367 ;; This function is called by:
 13368 ;;		_main
 13369 ;;		_current_sensor_cal
 13370 ;;		_check_help
 13371 ;;		_vterm_dump
 13372 ;; This function uses a reentrant model
 13373 ;;
 13374                           
 13375                           	psect	text50
 13376  01CC4E                     __ptext50:
 13377                           	opt callstack 0
 13378  01CC4E                     _get_vterm_ptr:
 13379                           	opt callstack 15
 13380                           
 13381                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 13382                           ;stkvar	_vterm @ sp[(0)+-2]
 13383                           
 13384                           ; BSR set to: 0
 13385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13386                           ;incstack = 0
 13387  01CC4E  0EFE               	movlw	-2
 13388  01CC50  50E3               	movf	plusw1,w,c
 13389  01CC52  0B03               	andlw	3
 13390  01CC54  0D78               	mullw	120
 13391  01CC56  0E2A               	movlw	low _D
 13392  01CC58  6E01               	movwf	btemp^0,c
 13393  01CC5A  0E09               	movlw	high _D
 13394  01CC5C  6E02               	movwf	(btemp+1)^0,c
 13395  01CC5E  50F3               	movf	243,w,c
 13396  01CC60  2601               	addwf	btemp^0,f,c
 13397  01CC62  50F4               	movf	244,w,c
 13398  01CC64  2202               	addwfc	(btemp+1)^0,f,c
 13399                           
 13400                           ;stkvar	_line @ sp[(0)+-1]
 13401  01CC66  0EFF               	movlw	-1
 13402  01CC68  50E3               	movf	plusw1,w,c
 13403  01CC6A  0B03               	andlw	3
 13404  01CC6C  0D28               	mullw	40
 13405  01CC6E  50F3               	movf	243,w,c
 13406  01CC70  2601               	addwf	btemp^0,f,c
 13407  01CC72  50F4               	movf	244,w,c
 13408  01CC74  2202               	addwfc	(btemp+1)^0,f,c
 13409                           
 13410                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 13411  01CC76  52E5               	movf	postdec1,f,c
 13412  01CC78  52E5               	movf	postdec1,f,c
 13413  01CC7A  0012               	return		;funcret
 13414  01CC7C                     __end_of_get_vterm_ptr:
 13415                           	opt callstack 0
 13416                           
 13417 ;; *************** function _WaitMs *****************
 13418 ;; Defined at:
 13419 ;;		line 32 in file "timers.c"
 13420 ;; Parameters:    Size  Location     Type
 13421 ;;  numMilliseco    2  [STACK] const unsigned short 
 13422 ;; Auto vars:     Size  Location     Type
 13423 ;;		None
 13424 ;; Return value:  Size  Location     Type
 13425 ;;                  1  [STACK] void 
 13426 ;; Registers used:
 13427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 13428 ;; Tracked objects:
 13429 ;;		On entry : 0/1
 13430 ;;		On exit  : 0/0
 13431 ;;		Unchanged: 0/0
 13432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13437 ;;Total ram usage:        0 bytes
 13438 ;; Hardware stack levels used:    1
 13439 ;; Hardware stack levels required when called:   16
 13440 ;; This function calls:
 13441 ;;		_StartTimer
 13442 ;;		_TimerDone
 13443 ;; This function is called by:
 13444 ;;		_main
 13445 ;;		_current_sensor_cal
 13446 ;;		_vterm_dump
 13447 ;; This function uses a reentrant model
 13448 ;;
 13449                           
 13450                           	psect	text51
 13451  01CA56                     __ptext51:
 13452                           	opt callstack 0
 13453  01CA56                     _WaitMs:
 13454                           	opt callstack 13
 13455                           
 13456                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 13457                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 13458                           
 13459                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13460                           ;incstack = 0
 13461  01CA56  0EFE               	movlw	-2
 13462  01CA58  006F FF8F FFE6     	movff	plusw1,postinc1
 13463  01CA5E  006F FF8F FFE6     	movff	plusw1,postinc1
 13464  01CA64  0E00               	movlw	0
 13465  01CA66  6EE6               	movwf	postinc1,c
 13466  01CA68  EC3A  F0E4         	call	_StartTimer	;wreg free
 13467                           
 13468                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 13469  01CA6C  D005               	goto	l10667
 13470  01CA6E                     l1641:
 13471                           
 13472                           ;timers.c: 36:   __nop();
 13473  01CA6E  F000               	nop	
 13474                           
 13475                           ;timers.c: 37:   __nop();
 13476  01CA70  F000               	nop	
 13477                           
 13478                           ;timers.c: 38:   __nop();
 13479  01CA72  F000               	nop	
 13480                           
 13481                           ;timers.c: 39:   __nop();
 13482  01CA74  F000               	nop	
 13483  01CA76  0004               	clrwdt		;# 
 13484  01CA78                     l10667:
 13485                           
 13486                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 13487  01CA78  0E00               	movlw	0
 13488  01CA7A  6EE6               	movwf	postinc1,c
 13489  01CA7C  ECA9  F0E6         	call	_TimerDone	;wreg free
 13490  01CA80  5001               	movf	btemp^0,w,c
 13491  01CA82  B4D8               	btfsc	status,2,c
 13492  01CA84  D7F4               	goto	l1641
 13493                           
 13494                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 13495  01CA86  52E5               	movf	postdec1,f,c
 13496  01CA88  52E5               	movf	postdec1,f,c
 13497  01CA8A  0012               	return		;funcret
 13498  01CA8C                     __end_of_WaitMs:
 13499                           	opt callstack 0
 13500                           
 13501 ;; *************** function _update_lcd *****************
 13502 ;; Defined at:
 13503 ;;		line 85 in file "mconfig.c"
 13504 ;; Parameters:    Size  Location     Type
 13505 ;;  vterm           1  [STACK] unsigned char 
 13506 ;; Auto vars:     Size  Location     Type
 13507 ;;		None
 13508 ;; Return value:  Size  Location     Type
 13509 ;;                  1  [STACK] unsigned char 
 13510 ;; Registers used:
 13511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13512 ;; Tracked objects:
 13513 ;;		On entry : 0/0
 13514 ;;		On exit  : 0/0
 13515 ;;		Unchanged: 0/0
 13516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13521 ;;Total ram usage:        0 bytes
 13522 ;; Hardware stack levels used:    1
 13523 ;; Hardware stack levels required when called:   27
 13524 ;; This function calls:
 13525 ;;		_eaDogM_WriteStringAtPos
 13526 ;;		_wait_lcd_done
 13527 ;; This function is called by:
 13528 ;;		_main
 13529 ;;		_current_sensor_cal
 13530 ;;		_check_help
 13531 ;; This function uses a reentrant model
 13532 ;;
 13533                           
 13534                           	psect	text52
 13535  01A848                     __ptext52:
 13536                           	opt callstack 0
 13537  01A848                     _update_lcd:
 13538                           	opt callstack 3
 13539                           
 13540                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 13541                           ;stkvar	_vterm @ sp[(0)+-1]
 13542                           
 13543                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13544                           ;incstack = 0
 13545  01A848  0EFF               	movlw	-1
 13546  01A84A  006F FF8C  F001    	movff	plusw1,btemp
 13547  01A850  0E03               	movlw	3
 13548  01A852  1601               	andwf	btemp^0,f,c
 13549  01A854  0EFF               	movlw	-1
 13550  01A856  0060  F007  FFE3   	movff	btemp,plusw1
 13551                           
 13552                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 13553  01A85C  EE22  F30A         	lfsr	2,_D+480
 13554  01A860  A0DF               	btfss	indf2,0,c
 13555  01A862  D004               	goto	l13957
 13556                           
 13557                           ;stkvar	_vterm @ sp[(0)+-1]
 13558  01A864  0EFF               	movlw	-1
 13559  01A866  50E3               	movf	plusw1,w,c
 13560  01A868  B4D8               	btfsc	status,2,c
 13561  01A86A  D074               	goto	l1717
 13562  01A86C                     l13957:
 13563                           
 13564                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 13565                           ;stkvar	_vterm @ sp[(0)+-1]
 13566  01A86C  0EFF               	movlw	-1
 13567  01A86E  50E3               	movf	plusw1,w,c
 13568  01A870  0D78               	mullw	120
 13569  01A872  0E3E               	movlw	low (_D+20)
 13570  01A874  24F3               	addwf	243,w,c
 13571  01A876  6ED9               	movwf	fsr2l,c
 13572  01A878  0E09               	movlw	high (_D+20)
 13573  01A87A  20F4               	addwfc	prodh,w,c
 13574  01A87C  6EDA               	movwf	fsr2h,c
 13575  01A87E  0E00               	movlw	0
 13576  01A880  6EDF               	movwf	indf2,c
 13577                           
 13578                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 13579                           ;stkvar	_vterm @ sp[(0)+-1]
 13580  01A882  0EFF               	movlw	-1
 13581  01A884  50E3               	movf	plusw1,w,c
 13582  01A886  0D78               	mullw	120
 13583  01A888  0E66               	movlw	low (_D+60)
 13584  01A88A  24F3               	addwf	243,w,c
 13585  01A88C  6ED9               	movwf	fsr2l,c
 13586  01A88E  0E09               	movlw	high (_D+60)
 13587  01A890  20F4               	addwfc	prodh,w,c
 13588  01A892  6EDA               	movwf	fsr2h,c
 13589  01A894  0E00               	movlw	0
 13590  01A896  6EDF               	movwf	indf2,c
 13591                           
 13592                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 13593                           ;stkvar	_vterm @ sp[(0)+-1]
 13594  01A898  0EFF               	movlw	-1
 13595  01A89A  50E3               	movf	plusw1,w,c
 13596  01A89C  0D78               	mullw	120
 13597  01A89E  0E8E               	movlw	low (_D+100)
 13598  01A8A0  24F3               	addwf	243,w,c
 13599  01A8A2  6ED9               	movwf	fsr2l,c
 13600  01A8A4  0E09               	movlw	high (_D+100)
 13601  01A8A6  20F4               	addwfc	prodh,w,c
 13602  01A8A8  6EDA               	movwf	fsr2h,c
 13603  01A8AA  0E00               	movlw	0
 13604  01A8AC  6EDF               	movwf	indf2,c
 13605                           
 13606                           ;mconfig.c: 95:  wait_lcd_done();
 13607  01A8AE  EC2E  F0E8         	call	_wait_lcd_done	;wreg free
 13608                           
 13609                           ; BSR set to: 0
 13610                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 13611                           ;stkvar	_vterm @ sp[(0)+-1]
 13612  01A8B2  0EFF               	movlw	-1
 13613  01A8B4  50E3               	movf	plusw1,w,c
 13614  01A8B6  0D78               	mullw	120
 13615  01A8B8  0E2A               	movlw	low _D
 13616  01A8BA  6E0B               	movwf	(btemp+10)^0,c
 13617  01A8BC  0E09               	movlw	high _D
 13618  01A8BE  6E0C               	movwf	(btemp+11)^0,c
 13619  01A8C0  50F3               	movf	243,w,c
 13620  01A8C2  260B               	addwf	(btemp+10)^0,f,c
 13621  01A8C4  50F4               	movf	244,w,c
 13622  01A8C6  220C               	addwfc	(btemp+11)^0,f,c
 13623  01A8C8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13624  01A8CE  0060  F033  FFE6   	movff	btemp+11,postinc1
 13625  01A8D4  0E00               	movlw	0
 13626  01A8D6  6EE6               	movwf	postinc1,c
 13627  01A8D8  0E00               	movlw	0
 13628  01A8DA  6EE6               	movwf	postinc1,c
 13629  01A8DC  EC38  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13630                           
 13631                           ; BSR set to: 59
 13632                           ;mconfig.c: 97:  wait_lcd_done();
 13633  01A8E0  EC2E  F0E8         	call	_wait_lcd_done	;wreg free
 13634                           
 13635                           ; BSR set to: 0
 13636                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 13637                           ;stkvar	_vterm @ sp[(0)+-1]
 13638  01A8E4  0EFF               	movlw	-1
 13639  01A8E6  50E3               	movf	plusw1,w,c
 13640  01A8E8  0D78               	mullw	120
 13641  01A8EA  0E2A               	movlw	low _D
 13642  01A8EC  6E0B               	movwf	(btemp+10)^0,c
 13643  01A8EE  0E09               	movlw	high _D
 13644  01A8F0  6E0C               	movwf	(btemp+11)^0,c
 13645  01A8F2  0E28               	movlw	40
 13646  01A8F4  260B               	addwf	(btemp+10)^0,f,c
 13647  01A8F6  0E00               	movlw	0
 13648  01A8F8  220C               	addwfc	(btemp+11)^0,f,c
 13649  01A8FA  50F3               	movf	243,w,c
 13650  01A8FC  260B               	addwf	(btemp+10)^0,f,c
 13651  01A8FE  50F4               	movf	244,w,c
 13652  01A900  220C               	addwfc	(btemp+11)^0,f,c
 13653  01A902  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13654  01A908  0060  F033  FFE6   	movff	btemp+11,postinc1
 13655  01A90E  0E00               	movlw	0
 13656  01A910  6EE6               	movwf	postinc1,c
 13657  01A912  0E01               	movlw	1
 13658  01A914  6EE6               	movwf	postinc1,c
 13659  01A916  EC38  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13660                           
 13661                           ; BSR set to: 59
 13662                           ;mconfig.c: 99:  wait_lcd_done();
 13663  01A91A  EC2E  F0E8         	call	_wait_lcd_done	;wreg free
 13664                           
 13665                           ; BSR set to: 0
 13666                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 13667                           ;stkvar	_vterm @ sp[(0)+-1]
 13668  01A91E  0EFF               	movlw	-1
 13669  01A920  50E3               	movf	plusw1,w,c
 13670  01A922  0D78               	mullw	120
 13671  01A924  0E2A               	movlw	low _D
 13672  01A926  6E0B               	movwf	(btemp+10)^0,c
 13673  01A928  0E09               	movlw	high _D
 13674  01A92A  6E0C               	movwf	(btemp+11)^0,c
 13675  01A92C  0E50               	movlw	80
 13676  01A92E  260B               	addwf	(btemp+10)^0,f,c
 13677  01A930  0E00               	movlw	0
 13678  01A932  220C               	addwfc	(btemp+11)^0,f,c
 13679  01A934  50F3               	movf	243,w,c
 13680  01A936  260B               	addwf	(btemp+10)^0,f,c
 13681  01A938  50F4               	movf	244,w,c
 13682  01A93A  220C               	addwfc	(btemp+11)^0,f,c
 13683  01A93C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13684  01A942  0060  F033  FFE6   	movff	btemp+11,postinc1
 13685  01A948  0E00               	movlw	0
 13686  01A94A  6EE6               	movwf	postinc1,c
 13687  01A94C  0E02               	movlw	2
 13688  01A94E  6EE6               	movwf	postinc1,c
 13689  01A950  EC38  F0DB         	call	_eaDogM_WriteStringAtPos	;wreg free
 13690  01A954                     l1717:
 13691                           
 13692                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 13693  01A954  52E5               	movf	postdec1,f,c
 13694  01A956  0012               	return		;funcret
 13695  01A958                     __end_of_update_lcd:
 13696                           	opt callstack 0
 13697                           
 13698 ;; *************** function _eaDogM_WriteStringAtPos *****************
 13699 ;; Defined at:
 13700 ;;		line 195 in file "eadog.c"
 13701 ;; Parameters:    Size  Location     Type
 13702 ;;  r               1  [STACK] const unsigned char 
 13703 ;;  c               1  [STACK] const unsigned char 
 13704 ;;  strPtr          2  [STACK] PTR unsigned char 
 13705 ;;		 -> D.lcd(480), D(482), V(192), 
 13706 ;; Auto vars:     Size  Location     Type
 13707 ;;  row             1  [STACK] unsigned char 
 13708 ;; Return value:  Size  Location     Type
 13709 ;;                  1  [STACK] void 
 13710 ;; Registers used:
 13711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13712 ;; Tracked objects:
 13713 ;;		On entry : 3F/0
 13714 ;;		On exit  : 3F/3B
 13715 ;;		Unchanged: 0/0
 13716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13721 ;;Total ram usage:        0 bytes
 13722 ;; Hardware stack levels used:    1
 13723 ;; Hardware stack levels required when called:   26
 13724 ;; This function calls:
 13725 ;;		_eaDogM_WriteString
 13726 ;;		_send_lcd_cmd_dma
 13727 ;;		_send_lcd_data_dma
 13728 ;;		_wait_lcd_done
 13729 ;;		_wdtdelay
 13730 ;; This function is called by:
 13731 ;;		_update_lcd
 13732 ;;		_vterm_dump
 13733 ;; This function uses a reentrant model
 13734 ;;
 13735                           
 13736                           	psect	text53
 13737  01B670                     __ptext53:
 13738                           	opt callstack 0
 13739  01B670                     _eaDogM_WriteStringAtPos:
 13740                           	opt callstack 0
 13741                           
 13742                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13743  01B670  52E6               	movf	postinc1,f,c
 13744                           
 13745                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 13746                           
 13747                           ;incstack = 0
 13748  01B672  D014               	goto	l13933
 13749  01B674                     l13921:
 13750                           
 13751                           ;eadog.c: 201:   row = 0x40;
 13752                           ;stkvar	_row @ sp[(-1)+0]
 13753  01B674  0EFF               	movlw	-1
 13754  01B676  6AE3               	clrf	plusw1,c
 13755  01B678  8CE3               	bsf	plusw1,6,c
 13756                           
 13757                           ;eadog.c: 202:   break;
 13758  01B67A  D026               	goto	l13935
 13759  01B67C                     l13923:
 13760                           
 13761                           ;eadog.c: 204:   row = 0x14;
 13762                           ;stkvar	_row @ sp[(-1)+0]
 13763  01B67C  0EFF               	movlw	-1
 13764  01B67E  6AE3               	clrf	plusw1,c
 13765  01B680  84E3               	bsf	plusw1,2,c
 13766  01B682  88E3               	bsf	plusw1,4,c	;indir
 13767                           
 13768                           ;eadog.c: 205:   break;
 13769  01B684  D021               	goto	l13935
 13770  01B686                     l13925:
 13771                           
 13772                           ;eadog.c: 207:   row = 0x54;
 13773  01B686  0E54               	movlw	84
 13774  01B688  6E0C               	movwf	(btemp+11)^0,c
 13775                           
 13776                           ;stkvar	_row @ sp[(-1)+0]
 13777  01B68A  0EFF               	movlw	-1
 13778  01B68C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13779                           
 13780                           ;eadog.c: 208:   break;
 13781  01B692  D01A               	goto	l13935
 13782  01B694                     l13927:
 13783                           
 13784                           ;eadog.c: 210:   row = 0x1;
 13785                           ;stkvar	_row @ sp[(-1)+0]
 13786  01B694  0EFF               	movlw	-1
 13787  01B696  6AE3               	clrf	plusw1,c
 13788  01B698  2AE3               	incf	plusw1,f,c
 13789                           
 13790                           ;eadog.c: 211:   break;
 13791  01B69A  D016               	goto	l13935
 13792  01B69C                     l13933:
 13793                           
 13794                           ;stkvar	_r @ sp[(-1)+-1]
 13795  01B69C  0EFE               	movlw	-2
 13796  01B69E  50E3               	movf	plusw1,w,c
 13797  01B6A0  6E0B               	movwf	(btemp+10)^0,c
 13798  01B6A2  6A0C               	clrf	(btemp+11)^0,c
 13799                           
 13800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13801                           ; Switch size 1, requested type "simple"
 13802                           ; Number of cases is 1, Range of values is 0 to 0
 13803                           ; switch strategies available:
 13804                           ; Name         Instructions Cycles
 13805                           ; simple_byte            4     3 (average)
 13806                           ;	Chosen strategy is simple_byte
 13807  01B6A4  500C               	movf	(btemp+11)^0,w,c
 13808  01B6A6  0A00               	xorlw	0	; case 0
 13809  01B6A8  A4D8               	btfss	status,2,c
 13810  01B6AA  D7E4               	goto	l13921
 13811                           
 13812                           ; Switch size 1, requested type "simple"
 13813                           ; Number of cases is 4, Range of values is 0 to 3
 13814                           ; switch strategies available:
 13815                           ; Name         Instructions Cycles
 13816                           ; simple_byte           13     7 (average)
 13817                           ;	Chosen strategy is simple_byte
 13818  01B6AC  500B               	movf	(btemp+10)^0,w,c
 13819  01B6AE  0A00               	xorlw	0	; case 0
 13820  01B6B0  B4D8               	btfsc	status,2,c
 13821  01B6B2  D7E0               	goto	l13921
 13822  01B6B4  0A01               	xorlw	1	; case 1
 13823  01B6B6  B4D8               	btfsc	status,2,c
 13824  01B6B8  D7E1               	goto	l13923
 13825  01B6BA  0A03               	xorlw	3	; case 2
 13826  01B6BC  B4D8               	btfsc	status,2,c
 13827  01B6BE  D7E3               	goto	l13925
 13828  01B6C0  0A01               	xorlw	1	; case 3
 13829  01B6C2  B4D8               	btfsc	status,2,c
 13830  01B6C4  D7E7               	goto	l13927
 13831  01B6C6  D7D6               	goto	l13921
 13832  01B6C8                     l13935:
 13833                           
 13834                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 13835  01B6C8  0E45               	movlw	69
 13836  01B6CA  6EE6               	movwf	postinc1,c
 13837  01B6CC  EC90  F0E8         	call	_send_lcd_cmd_dma	;wreg free
 13838                           
 13839                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 13840                           ;stkvar	_c @ sp[(-1)+-2]
 13841  01B6D0  0EFD               	movlw	-3
 13842  01B6D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 13843                           
 13844                           ;stkvar	_row @ sp[(-1)+0]
 13845  01B6D8  0EFF               	movlw	-1
 13846  01B6DA  50E3               	movf	plusw1,w,c
 13847  01B6DC  240C               	addwf	(btemp+11)^0,w,c
 13848  01B6DE  6EE6               	movwf	postinc1,c
 13849  01B6E0  ECBC  F0E2         	call	_send_lcd_data_dma	;wreg free
 13850                           
 13851                           ; BSR set to: 59
 13852                           ;eadog.c: 218:  wait_lcd_done();
 13853  01B6E4  EC2E  F0E8         	call	_wait_lcd_done	;wreg free
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;eadog.c: 219:  wdtdelay(8);
 13857  01B6E8  0E08               	movlw	8
 13858  01B6EA  6EE6               	movwf	postinc1,c
 13859  01B6EC  0E00               	movlw	0
 13860  01B6EE  6EE6               	movwf	postinc1,c
 13861  01B6F0  0E00               	movlw	0
 13862  01B6F2  6EE6               	movwf	postinc1,c
 13863  01B6F4  0E00               	movlw	0
 13864  01B6F6  6EE6               	movwf	postinc1,c
 13865  01B6F8  ECC2  F0E1         	call	_wdtdelay	;wreg free
 13866                           
 13867                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 13868                           ;stkvar	_strPtr @ sp[(-1)+-4]
 13869  01B6FC  0EFB               	movlw	-5
 13870  01B6FE  006F FF8F FFE6     	movff	plusw1,postinc1
 13871  01B704  006F FF8F FFE6     	movff	plusw1,postinc1
 13872  01B70A  EC8C  F0DB         	call	_eaDogM_WriteString	;wreg free
 13873                           
 13874                           ; BSR set to: 59
 13875                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 13876  01B70E  0EFB               	movlw	251
 13877  01B710  26E1               	addwf	fsr1l,f,c
 13878  01B712  0EFF               	movlw	255
 13879  01B714  22E2               	addwfc	fsr1h,f,c
 13880  01B716  0012               	return		;funcret
 13881  01B718                     __end_of_eaDogM_WriteStringAtPos:
 13882                           	opt callstack 0
 13883                           
 13884 ;; *************** function _send_lcd_cmd_dma *****************
 13885 ;; Defined at:
 13886 ;;		line 171 in file "eadog.c"
 13887 ;; Parameters:    Size  Location     Type
 13888 ;;  strPtr          1  [STACK] const unsigned char 
 13889 ;; Auto vars:     Size  Location     Type
 13890 ;;		None
 13891 ;; Return value:  Size  Location     Type
 13892 ;;                  1  [STACK] void 
 13893 ;; Registers used:
 13894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13895 ;; Tracked objects:
 13896 ;;		On entry : 0/3D
 13897 ;;		On exit  : 3F/0
 13898 ;;		Unchanged: 0/0
 13899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13904 ;;Total ram usage:        0 bytes
 13905 ;; Hardware stack levels used:    1
 13906 ;; Hardware stack levels required when called:   25
 13907 ;; This function calls:
 13908 ;;		_send_lcd_data_dma
 13909 ;;		_wait_lcd_done
 13910 ;; This function is called by:
 13911 ;;		_eaDogM_WriteStringAtPos
 13912 ;;		_eaDogM_WriteCommand
 13913 ;; This function uses a reentrant model
 13914 ;;
 13915                           
 13916                           	psect	text54
 13917  01D120                     __ptext54:
 13918                           	opt callstack 0
 13919  01D120                     _send_lcd_cmd_dma:
 13920                           	opt callstack 3
 13921                           
 13922                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 13923                           
 13924                           ; BSR set to: 59
 13925                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13926                           ;incstack = 0
 13927  01D120  0EFE               	movlw	254
 13928  01D122  6EE6               	movwf	postinc1,c
 13929  01D124  ECBC  F0E2         	call	_send_lcd_data_dma	;wreg free
 13930                           
 13931                           ; BSR set to: 59
 13932                           ;eadog.c: 174:  wait_lcd_done();
 13933  01D128  EC2E  F0E8         	call	_wait_lcd_done	;wreg free
 13934                           
 13935                           ; BSR set to: 0
 13936                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 13937                           ;stkvar	_strPtr @ sp[(0)+-1]
 13938  01D12C  0EFF               	movlw	-1
 13939  01D12E  50E3               	movf	plusw1,w,c
 13940  01D130  6EE6               	movwf	postinc1,c
 13941  01D132  ECBC  F0E2         	call	_send_lcd_data_dma	;wreg free
 13942                           
 13943                           ;eadog.c: 176:  wait_lcd_done();
 13944  01D136  EC2E  F0E8         	call	_wait_lcd_done	;wreg free
 13945                           
 13946                           ; BSR set to: 0
 13947                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 13948  01D13A  52E5               	movf	postdec1,f,c
 13949  01D13C  0012               	return		;funcret
 13950  01D13E                     __end_of_send_lcd_cmd_dma:
 13951                           	opt callstack 0
 13952                           
 13953 ;; *************** function _wait_lcd_done *****************
 13954 ;; Defined at:
 13955 ;;		line 444 in file "eadog.c"
 13956 ;; Parameters:    Size  Location     Type
 13957 ;;		None
 13958 ;; Auto vars:     Size  Location     Type
 13959 ;;		None
 13960 ;; Return value:  Size  Location     Type
 13961 ;;                  1  [STACK] void 
 13962 ;; Registers used:
 13963 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 13964 ;; Tracked objects:
 13965 ;;		On entry : 0/1
 13966 ;;		On exit  : 3F/0
 13967 ;;		Unchanged: 0/0
 13968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13973 ;;Total ram usage:        0 bytes
 13974 ;; Hardware stack levels used:    1
 13975 ;; Hardware stack levels required when called:   16
 13976 ;; This function calls:
 13977 ;;		_wdtdelay
 13978 ;; This function is called by:
 13979 ;;		_main
 13980 ;;		_send_lcd_cmd_dma
 13981 ;;		_eaDogM_WriteStringAtPos
 13982 ;;		_update_lcd
 13983 ;;		_vterm_dump
 13984 ;; This function uses a reentrant model
 13985 ;;
 13986                           
 13987                           	psect	text55
 13988  01D05C                     __ptext55:
 13989                           	opt callstack 0
 13990  01D05C                     _wait_lcd_done:
 13991                           	opt callstack 14
 13992                           
 13993                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 13994                           
 13995                           ; BSR set to: 0
 13996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13997                           ;incstack = 0
 13998  01D05C  0101               	movlb	1	; () banked
 13999  01D05E  B7D0               	btfsc	_spi_link& (0+255),3,b	;volatile
 14000  01D060  D7FD               	goto	_wait_lcd_done
 14001  01D062                     u9130:
 14002  01D062  013D               	movlb	61	; () banked
 14003  01D064  AB17               	btfss	23,5,b	;volatile
 14004  01D066  D7FD               	goto	u9130
 14005                           
 14006                           ; BSR set to: 61
 14007                           ;eadog.c: 448:  wdtdelay(50);
 14008  01D068  0E32               	movlw	50
 14009  01D06A  6EE6               	movwf	postinc1,c
 14010  01D06C  0E00               	movlw	0
 14011  01D06E  6EE6               	movwf	postinc1,c
 14012  01D070  0E00               	movlw	0
 14013  01D072  6EE6               	movwf	postinc1,c
 14014  01D074  0E00               	movlw	0
 14015  01D076  6EE6               	movwf	postinc1,c
 14016  01D078  ECC2  F0E1         	call	_wdtdelay	;wreg free
 14017                           
 14018                           ; BSR set to: 0
 14019                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 14020  01D07C  0012               	return		;funcret
 14021  01D07E                     __end_of_wait_lcd_done:
 14022                           	opt callstack 0
 14023                           
 14024 ;; *************** function _wdtdelay *****************
 14025 ;; Defined at:
 14026 ;;		line 23 in file "eadog.c"
 14027 ;; Parameters:    Size  Location     Type
 14028 ;;  delay           4  [STACK] const unsigned long 
 14029 ;; Auto vars:     Size  Location     Type
 14030 ;;		None
 14031 ;; Return value:  Size  Location     Type
 14032 ;;                  1  [STACK] void 
 14033 ;; Registers used:
 14034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 14035 ;; Tracked objects:
 14036 ;;		On entry : 2/3D
 14037 ;;		On exit  : 3F/0
 14038 ;;		Unchanged: 0/0
 14039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14044 ;;Total ram usage:        0 bytes
 14045 ;; Hardware stack levels used:    1
 14046 ;; Hardware stack levels required when called:   15
 14047 ;; This function calls:
 14048 ;;		Nothing
 14049 ;; This function is called by:
 14050 ;;		_init_display
 14051 ;;		_send_lcd_data
 14052 ;;		_send_lcd_cmd
 14053 ;;		_send_lcd_cmd_long
 14054 ;;		_eaDogM_WriteStringAtPos
 14055 ;;		_wait_lcd_done
 14056 ;; This function uses a reentrant model
 14057 ;;
 14058                           
 14059                           	psect	text56
 14060  01C384                     __ptext56:
 14061                           	opt callstack 0
 14062  01C384                     _wdtdelay:
 14063                           	opt callstack 14
 14064                           
 14065                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 14066                           
 14067                           ; BSR set to: 0
 14068                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14069                           ;incstack = 0
 14070  01C384  0100               	movlb	0	; () banked
 14071  01C386  6B74               	clrf	wdtdelay@dcount& (0+255),b
 14072  01C388  6B75               	clrf	(wdtdelay@dcount+1)& (0+255),b
 14073  01C38A  6B76               	clrf	(wdtdelay@dcount+2)& (0+255),b
 14074  01C38C  6B77               	clrf	(wdtdelay@dcount+3)& (0+255),b
 14075  01C38E                     l1494:
 14076                           
 14077                           ; BSR set to: 0
 14078                           ;eadog.c: 28:   __nop();
 14079  01C38E  F000               	nop	
 14080  01C390  0004               	clrwdt		;# 
 14081                           
 14082                           ;eadog.c: 30:  };
 14083  01C392  0E01               	movlw	1
 14084  01C394  0100               	movlb	0	; () banked
 14085  01C396  2774               	addwf	wdtdelay@dcount& (0+255),f,b
 14086  01C398  0E00               	movlw	0
 14087  01C39A  2375               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 14088  01C39C  2376               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 14089  01C39E  2377               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 14090                           
 14091                           ; BSR set to: 0
 14092                           ;stkvar	_delay @ sp[(0)+-4]
 14093  01C3A0  0EFC               	movlw	-4
 14094  01C3A2  006F FF8C  F001    	movff	plusw1,btemp
 14095  01C3A8  5174               	movf	wdtdelay@dcount& (0+255),w,b
 14096  01C3AA  5C01               	subwf	btemp^0,w,c
 14097  01C3AC  0EFD               	movlw	-3
 14098  01C3AE  006F FF8C  F001    	movff	plusw1,btemp
 14099  01C3B4  5175               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 14100  01C3B6  5801               	subwfb	btemp^0,w,c
 14101  01C3B8  0EFE               	movlw	-2
 14102  01C3BA  006F FF8C  F001    	movff	plusw1,btemp
 14103  01C3C0  5176               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 14104  01C3C2  5801               	subwfb	btemp^0,w,c
 14105  01C3C4  0EFF               	movlw	-1
 14106  01C3C6  006F FF8C  F001    	movff	plusw1,btemp
 14107  01C3CC  5177               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 14108  01C3CE  5801               	subwfb	btemp^0,w,c
 14109  01C3D0  B0D8               	btfsc	status,0,c
 14110  01C3D2  D7DD               	goto	l1494
 14111                           
 14112                           ; BSR set to: 0
 14113                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 14114  01C3D4  52E5               	movf	postdec1,f,c
 14115  01C3D6  52E5               	movf	postdec1,f,c
 14116  01C3D8  52E5               	movf	postdec1,f,c
 14117  01C3DA  52E5               	movf	postdec1,f,c
 14118  01C3DC  0012               	return		;funcret
 14119  01C3DE                     __end_of_wdtdelay:
 14120                           	opt callstack 0
 14121                           
 14122 ;; *************** function _send_lcd_data_dma *****************
 14123 ;; Defined at:
 14124 ;;		line 182 in file "eadog.c"
 14125 ;; Parameters:    Size  Location     Type
 14126 ;;  strPtr          1  [STACK] const unsigned char 
 14127 ;; Auto vars:     Size  Location     Type
 14128 ;;		None
 14129 ;; Return value:  Size  Location     Type
 14130 ;;                  1  [STACK] void 
 14131 ;; Registers used:
 14132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14133 ;; Tracked objects:
 14134 ;;		On entry : 0/0
 14135 ;;		On exit  : 3F/3B
 14136 ;;		Unchanged: 0/0
 14137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14142 ;;Total ram usage:        0 bytes
 14143 ;; Hardware stack levels used:    1
 14144 ;; Hardware stack levels required when called:   24
 14145 ;; This function calls:
 14146 ;;		_printf
 14147 ;;		_ringBufS_flush
 14148 ;;		_start_lcd
 14149 ;;		_wait_lcd_set
 14150 ;; This function is called by:
 14151 ;;		_send_lcd_cmd_dma
 14152 ;;		_eaDogM_WriteStringAtPos
 14153 ;; This function uses a reentrant model
 14154 ;;
 14155                           
 14156                           	psect	text57
 14157  01C578                     __ptext57:
 14158                           	opt callstack 0
 14159  01C578                     _send_lcd_data_dma:
 14160                           	opt callstack 4
 14161                           
 14162                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 14163                           
 14164                           ; BSR set to: 0
 14165                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14166                           ;incstack = 0
 14167  01C578  ECC9  F0E9         	call	_wait_lcd_set	;wreg free
 14168                           
 14169                           ; BSR set to: 1
 14170                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 14171  01C57C  0E00               	movlw	0
 14172  01C57E  6EE6               	movwf	postinc1,c
 14173  01C580  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 14174  01C586  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 14175  01C58C  EC7C  F0DC         	call	_ringBufS_flush	;wreg free
 14176  01C590  94BC               	bcf	188,2,c	;volatile
 14177                           
 14178                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 14179  01C592  013B               	movlb	59	; () banked
 14180  01C594  9FFC               	bcf	252,7,b	;volatile
 14181                           
 14182                           ; BSR set to: 59
 14183                           ;eadog.c: 189:  DMA1SSZ = 1;
 14184  01C596  0E00               	movlw	0
 14185  01C598  6FF8               	movwf	248,b	;volatile
 14186  01C59A  0E01               	movlw	1
 14187  01C59C  6FF7               	movwf	247,b	;volatile
 14188                           
 14189                           ; BSR set to: 59
 14190                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 14191  01C59E  8FFC               	bsf	252,7,b	;volatile
 14192                           
 14193                           ; BSR set to: 59
 14194                           ;eadog.c: 191:  printf("%c", strPtr);
 14195                           ;stkvar	_strPtr @ sp[(0)+-1]
 14196  01C5A0  0EFF               	movlw	-1
 14197  01C5A2  50E3               	movf	plusw1,w,c
 14198  01C5A4  6EE6               	movwf	postinc1,c
 14199  01C5A6  0E00               	movlw	0
 14200  01C5A8  6EE6               	movwf	postinc1,c
 14201  01C5AA  0EF9               	movlw	low STR_61
 14202  01C5AC  6EE6               	movwf	postinc1,c
 14203  01C5AE  0EFF               	movlw	high STR_61
 14204  01C5B0  6EE6               	movwf	postinc1,c
 14205  01C5B2  0E04               	movlw	4
 14206  01C5B4  6EE6               	movwf	postinc1,c
 14207  01C5B6  EC03  F0E1         	call	_printf	;wreg free
 14208                           
 14209                           ; BSR set to: 0
 14210                           ;eadog.c: 192:  start_lcd();
 14211  01C5BA  ECCC  F0E9         	call	_start_lcd	;wreg free
 14212                           
 14213                           ; BSR set to: 59
 14214                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 14215  01C5BE  52E5               	movf	postdec1,f,c
 14216  01C5C0  0012               	return		;funcret
 14217  01C5C2                     __end_of_send_lcd_data_dma:
 14218                           	opt callstack 0
 14219                           
 14220 ;; *************** function _eaDogM_WriteString *****************
 14221 ;; Defined at:
 14222 ;;		line 151 in file "eadog.c"
 14223 ;; Parameters:    Size  Location     Type
 14224 ;;  strPtr          2  [STACK] PTR unsigned char 
 14225 ;;		 -> D.lcd(480), D(482), V(192), 
 14226 ;; Auto vars:     Size  Location     Type
 14227 ;;		None
 14228 ;; Return value:  Size  Location     Type
 14229 ;;                  1  [STACK] void 
 14230 ;; Registers used:
 14231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14232 ;; Tracked objects:
 14233 ;;		On entry : 3F/0
 14234 ;;		On exit  : 3F/3B
 14235 ;;		Unchanged: 0/0
 14236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14241 ;;Total ram usage:        0 bytes
 14242 ;; Hardware stack levels used:    1
 14243 ;; Hardware stack levels required when called:   24
 14244 ;; This function calls:
 14245 ;;		_printf
 14246 ;;		_ringBufS_flush
 14247 ;;		_start_lcd
 14248 ;;		_strlen
 14249 ;;		_wait_lcd_set
 14250 ;; This function is called by:
 14251 ;;		_eaDogM_WriteStringAtPos
 14252 ;; This function uses a reentrant model
 14253 ;;
 14254                           
 14255                           	psect	text58
 14256  01B718                     __ptext58:
 14257                           	opt callstack 0
 14258  01B718                     _eaDogM_WriteString:
 14259                           	opt callstack 4
 14260                           
 14261                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 14262                           
 14263                           ; BSR set to: 59
 14264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14265                           ;incstack = 0
 14266  01B718  ECC9  F0E9         	call	_wait_lcd_set	;wreg free
 14267                           
 14268                           ; BSR set to: 1
 14269                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 14270  01B71C  0E00               	movlw	0
 14271  01B71E  6EE6               	movwf	postinc1,c
 14272  01B720  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 14273  01B726  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 14274  01B72C  EC7C  F0DC         	call	_ringBufS_flush	;wreg free
 14275  01B730  94BC               	bcf	188,2,c	;volatile
 14276                           
 14277                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 14278                           ;stkvar	_strPtr @ sp[(0)+-2]
 14279  01B732  0EFE               	movlw	-2
 14280  01B734  006F FF8F FFE6     	movff	plusw1,postinc1
 14281  01B73A  006F FF8F FFE6     	movff	plusw1,postinc1
 14282  01B740  ECDF  F0DB         	call	_strlen	;wreg free
 14283  01B744  5002               	movf	(btemp+1)^0,w,c
 14284  01B746  E104               	bnz	u13200
 14285  01B748  0E41               	movlw	65
 14286  01B74A  5C01               	subwf	btemp^0,w,c
 14287  01B74C  A0D8               	btfss	status,0,c
 14288  01B74E  D010               	goto	l13877
 14289  01B750                     u13200:
 14290                           
 14291                           ;stkvar	_strPtr @ sp[(0)+-2]
 14292  01B750  0EFE               	movlw	-2
 14293  01B752  006F FF8C  F00B    	movff	plusw1,btemp+10
 14294  01B758  0EFF               	movlw	-1
 14295  01B75A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14296  01B760  0E40               	movlw	64
 14297  01B762  240B               	addwf	(btemp+10)^0,w,c
 14298  01B764  6ED9               	movwf	fsr2l,c
 14299  01B766  0E00               	movlw	0
 14300  01B768  200C               	addwfc	(btemp+11)^0,w,c
 14301  01B76A  6EDA               	movwf	fsr2h,c
 14302  01B76C  0E00               	movlw	0
 14303  01B76E  6EDF               	movwf	indf2,c
 14304  01B770                     l13877:
 14305                           
 14306                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 14307  01B770  013B               	movlb	59	; () banked
 14308  01B772  9FFC               	bcf	252,7,b	;volatile
 14309                           
 14310                           ; BSR set to: 59
 14311                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 14312                           ;stkvar	_strPtr @ sp[(0)+-2]
 14313  01B774  0EFE               	movlw	-2
 14314  01B776  006F FF8F FFE6     	movff	plusw1,postinc1
 14315  01B77C  006F FF8F FFE6     	movff	plusw1,postinc1
 14316  01B782  ECDF  F0DB         	call	_strlen	;wreg free
 14317  01B786  0060  F007  FBF7   	movff	btemp,15351	;volatile
 14318  01B78C  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 14319                           
 14320                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 14321  01B792  013B               	movlb	59	; () banked
 14322  01B794  8FFC               	bsf	252,7,b	;volatile
 14323                           
 14324                           ; BSR set to: 59
 14325                           ;eadog.c: 161:  printf("%s", strPtr);
 14326                           ;stkvar	_strPtr @ sp[(0)+-2]
 14327  01B796  0EFE               	movlw	-2
 14328  01B798  006F FF8F FFE6     	movff	plusw1,postinc1
 14329  01B79E  006F FF8F FFE6     	movff	plusw1,postinc1
 14330  01B7A4  0EFC               	movlw	low STR_60
 14331  01B7A6  6EE6               	movwf	postinc1,c
 14332  01B7A8  0EFF               	movlw	high STR_60
 14333  01B7AA  6EE6               	movwf	postinc1,c
 14334  01B7AC  0E04               	movlw	4
 14335  01B7AE  6EE6               	movwf	postinc1,c
 14336  01B7B0  EC03  F0E1         	call	_printf	;wreg free
 14337                           
 14338                           ; BSR set to: 0
 14339                           ;eadog.c: 162:  start_lcd();
 14340  01B7B4  ECCC  F0E9         	call	_start_lcd	;wreg free
 14341                           
 14342                           ; BSR set to: 59
 14343                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 14344  01B7B8  52E5               	movf	postdec1,f,c
 14345  01B7BA  52E5               	movf	postdec1,f,c
 14346  01B7BC  0012               	return		;funcret
 14347  01B7BE                     __end_of_eaDogM_WriteString:
 14348                           	opt callstack 0
 14349                           
 14350 ;; *************** function _wait_lcd_set *****************
 14351 ;; Defined at:
 14352 ;;		line 434 in file "eadog.c"
 14353 ;; Parameters:    Size  Location     Type
 14354 ;;		None
 14355 ;; Auto vars:     Size  Location     Type
 14356 ;;		None
 14357 ;; Return value:  Size  Location     Type
 14358 ;;                  1  [STACK] void 
 14359 ;; Registers used:
 14360 ;;		None
 14361 ;; Tracked objects:
 14362 ;;		On entry : 0/0
 14363 ;;		On exit  : 3F/1
 14364 ;;		Unchanged: 0/0
 14365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14370 ;;Total ram usage:        0 bytes
 14371 ;; Hardware stack levels used:    1
 14372 ;; Hardware stack levels required when called:   15
 14373 ;; This function calls:
 14374 ;;		Nothing
 14375 ;; This function is called by:
 14376 ;;		_eaDogM_WriteString
 14377 ;;		_send_lcd_data_dma
 14378 ;; This function uses a reentrant model
 14379 ;;
 14380                           
 14381                           	psect	text59
 14382  01D392                     __ptext59:
 14383                           	opt callstack 0
 14384  01D392                     _wait_lcd_set:
 14385                           	opt callstack 12
 14386                           
 14387                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 14388                           
 14389                           ; BSR set to: 59
 14390                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14391                           ;incstack = 0
 14392  01D392  0101               	movlb	1	; () banked
 14393  01D394  87D0               	bsf	_spi_link& (0+255),3,b	;volatile
 14394                           
 14395                           ; BSR set to: 1
 14396                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 14397  01D396  0012               	return		;funcret
 14398  01D398                     __end_of_wait_lcd_set:
 14399                           	opt callstack 0
 14400                           
 14401 ;; *************** function _start_lcd *****************
 14402 ;; Defined at:
 14403 ;;		line 429 in file "eadog.c"
 14404 ;; Parameters:    Size  Location     Type
 14405 ;;		None
 14406 ;; Auto vars:     Size  Location     Type
 14407 ;;		None
 14408 ;; Return value:  Size  Location     Type
 14409 ;;                  1  [STACK] void 
 14410 ;; Registers used:
 14411 ;;		None
 14412 ;; Tracked objects:
 14413 ;;		On entry : 3F/0
 14414 ;;		On exit  : 3F/3B
 14415 ;;		Unchanged: 0/0
 14416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14421 ;;Total ram usage:        0 bytes
 14422 ;; Hardware stack levels used:    1
 14423 ;; Hardware stack levels required when called:   15
 14424 ;; This function calls:
 14425 ;;		Nothing
 14426 ;; This function is called by:
 14427 ;;		_eaDogM_WriteString
 14428 ;;		_send_lcd_data_dma
 14429 ;; This function uses a reentrant model
 14430 ;;
 14431                           
 14432                           	psect	text60
 14433  01D398                     __ptext60:
 14434                           	opt callstack 0
 14435  01D398                     _start_lcd:
 14436                           	opt callstack 12
 14437                           
 14438                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 14439                           
 14440                           ; BSR set to: 1
 14441                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14442                           ;incstack = 0
 14443  01D398  013B               	movlb	59	; () banked
 14444  01D39A  8DFC               	bsf	252,6,b	;volatile
 14445                           
 14446                           ; BSR set to: 59
 14447                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 14448  01D39C  0012               	return		;funcret
 14449  01D39E                     __end_of_start_lcd:
 14450                           	opt callstack 0
 14451                           
 14452 ;; *************** function _ringBufS_flush *****************
 14453 ;; Defined at:
 14454 ;;		line 76 in file "ringbufs.c"
 14455 ;; Parameters:    Size  Location     Type
 14456 ;;  _this           2  [STACK] PTR struct ringBufS_t
 14457 ;;		 -> ring_buf1(67), 
 14458 ;;  clearBuffer     1  [STACK] const char 
 14459 ;; Auto vars:     Size  Location     Type
 14460 ;;		None
 14461 ;; Return value:  Size  Location     Type
 14462 ;;                  1  [STACK] void 
 14463 ;; Registers used:
 14464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 14465 ;; Tracked objects:
 14466 ;;		On entry : 3F/1
 14467 ;;		On exit  : 0/0
 14468 ;;		Unchanged: 0/0
 14469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14474 ;;Total ram usage:        0 bytes
 14475 ;; Hardware stack levels used:    1
 14476 ;; Hardware stack levels required when called:   16
 14477 ;; This function calls:
 14478 ;;		_memset
 14479 ;; This function is called by:
 14480 ;;		_eaDogM_WriteString
 14481 ;;		_send_lcd_data_dma
 14482 ;; This function uses a reentrant model
 14483 ;;
 14484                           
 14485                           	psect	text61
 14486  01B8F8                     __ptext61:
 14487                           	opt callstack 0
 14488  01B8F8                     _ringBufS_flush:
 14489                           	opt callstack 11
 14490                           
 14491                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 14492                           ;stkvar	__this @ sp[(0)+-2]
 14493                           
 14494                           ; BSR set to: 59
 14495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14496                           ;incstack = 0
 14497  01B8F8  0EFE               	movlw	-2
 14498  01B8FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 14499  01B900  0EFF               	movlw	-1
 14500  01B902  006F FF8C  F00C    	movff	plusw1,btemp+11
 14501  01B908  0E42               	movlw	66
 14502  01B90A  240B               	addwf	(btemp+10)^0,w,c
 14503  01B90C  6ED9               	movwf	fsr2l,c
 14504  01B90E  0E00               	movlw	0
 14505  01B910  200C               	addwfc	(btemp+11)^0,w,c
 14506  01B912  6EDA               	movwf	fsr2h,c
 14507  01B914  0E00               	movlw	0
 14508  01B916  6EDF               	movwf	indf2,c
 14509                           
 14510                           ;ringbufs.c: 79:  _this->head = 0;
 14511                           ;stkvar	__this @ sp[(0)+-2]
 14512  01B918  0EFE               	movlw	-2
 14513  01B91A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14514  01B920  0EFF               	movlw	-1
 14515  01B922  006F FF8C  F00C    	movff	plusw1,btemp+11
 14516  01B928  0E40               	movlw	64
 14517  01B92A  240B               	addwf	(btemp+10)^0,w,c
 14518  01B92C  6ED9               	movwf	fsr2l,c
 14519  01B92E  0E00               	movlw	0
 14520  01B930  200C               	addwfc	(btemp+11)^0,w,c
 14521  01B932  6EDA               	movwf	fsr2h,c
 14522  01B934  0E00               	movlw	0
 14523  01B936  6EDF               	movwf	indf2,c
 14524                           
 14525                           ;ringbufs.c: 80:  _this->tail = 0;
 14526                           ;stkvar	__this @ sp[(0)+-2]
 14527  01B938  0EFE               	movlw	-2
 14528  01B93A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14529  01B940  0EFF               	movlw	-1
 14530  01B942  006F FF8C  F00C    	movff	plusw1,btemp+11
 14531  01B948  0E41               	movlw	65
 14532  01B94A  240B               	addwf	(btemp+10)^0,w,c
 14533  01B94C  6ED9               	movwf	fsr2l,c
 14534  01B94E  0E00               	movlw	0
 14535  01B950  200C               	addwfc	(btemp+11)^0,w,c
 14536  01B952  6EDA               	movwf	fsr2h,c
 14537  01B954  0E00               	movlw	0
 14538  01B956  6EDF               	movwf	indf2,c
 14539                           
 14540                           ;ringbufs.c: 81:  if (clearBuffer) {
 14541                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 14542  01B958  0EFD               	movlw	-3
 14543  01B95A  50E3               	movf	plusw1,w,c
 14544  01B95C  B4D8               	btfsc	status,2,c
 14545  01B95E  D011               	goto	l1626
 14546                           
 14547                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 14548  01B960  0E40               	movlw	64
 14549  01B962  6EE6               	movwf	postinc1,c
 14550  01B964  0E00               	movlw	0
 14551  01B966  6EE6               	movwf	postinc1,c
 14552  01B968  0E00               	movlw	0
 14553  01B96A  6EE6               	movwf	postinc1,c
 14554  01B96C  0E00               	movlw	0
 14555  01B96E  6EE6               	movwf	postinc1,c
 14556                           
 14557                           ;stkvar	__this @ sp[(-4)+-2]
 14558  01B970  0EFA               	movlw	-6
 14559  01B972  006F FF8F FFE6     	movff	plusw1,postinc1
 14560  01B978  006F FF8F FFE6     	movff	plusw1,postinc1
 14561  01B97E  EC07  F0BA         	call	_memset	;wreg free
 14562  01B982                     l1626:
 14563                           
 14564                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 14565  01B982  52E5               	movf	postdec1,f,c
 14566  01B984  52E5               	movf	postdec1,f,c
 14567  01B986  52E5               	movf	postdec1,f,c
 14568  01B988  0012               	return		;funcret
 14569  01B98A                     __end_of_ringBufS_flush:
 14570                           	opt callstack 0
 14571                           
 14572 ;; *************** function _memset *****************
 14573 ;; Defined at:
 14574 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 14575 ;; Parameters:    Size  Location     Type
 14576 ;;  dest            2  [STACK] PTR void 
 14577 ;;		 -> ring_buf2(67), ring_buf1(67), 
 14578 ;;  c               2  [STACK] int 
 14579 ;;  n               2  [STACK] unsigned int 
 14580 ;; Auto vars:     Size  Location     Type
 14581 ;;  s               2  [STACK] PTR unsigned char 
 14582 ;;		 -> ring_buf2(67), ring_buf1(67), 
 14583 ;;  k               2  [STACK] unsigned int 
 14584 ;; Return value:  Size  Location     Type
 14585 ;;                  2  [STACK] PTR void 
 14586 ;; Registers used:
 14587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 14588 ;; Tracked objects:
 14589 ;;		On entry : 0/1
 14590 ;;		On exit  : 0/0
 14591 ;;		Unchanged: 0/0
 14592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14597 ;;Total ram usage:        0 bytes
 14598 ;; Hardware stack levels used:    1
 14599 ;; Hardware stack levels required when called:   15
 14600 ;; This function calls:
 14601 ;;		Nothing
 14602 ;; This function is called by:
 14603 ;;		_ringBufS_init
 14604 ;;		_ringBufS_flush
 14605 ;; This function uses a reentrant model
 14606 ;;
 14607                           
 14608                           	psect	text62
 14609  01740E                     __ptext62:
 14610                           	opt callstack 0
 14611  01740E                     _memset:
 14612                           	opt callstack 0
 14613                           
 14614                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14615  01740E  52E6               	movf	postinc1,f,c
 14616  017410  52E6               	movf	postinc1,f,c
 14617  017412  52E6               	movf	postinc1,f,c
 14618  017414  52E6               	movf	postinc1,f,c
 14619                           
 14620                           ;stkvar	_dest @ sp[(-4)+-2]
 14621                           
 14622                           ;incstack = 0
 14623  017416  0EFA               	movlw	-6
 14624  017418  006F FF8C  F00B    	movff	plusw1,btemp+10
 14625  01741E  0EFB               	movlw	-5
 14626  017420  006F FF8C  F00C    	movff	plusw1,btemp+11
 14627                           
 14628                           ;stkvar	_s @ sp[(-4)+0]
 14629  017426  0EFD               	movlw	-3
 14630  017428  0060  F033  FFE3   	movff	btemp+11,plusw1
 14631  01742E  0EFC               	movlw	-4
 14632  017430  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14633                           
 14634                           ;stkvar	_n @ sp[(-4)+-6]
 14635  017436  0EF6               	movlw	-10
 14636  017438  006F FF8C  F001    	movff	plusw1,btemp
 14637  01743E  0EF7               	movlw	-9
 14638  017440  50E3               	movf	plusw1,w,c
 14639  017442  1001               	iorwf	btemp^0,w,c
 14640  017444  B4D8               	btfsc	status,2,c
 14641  017446  D154               	goto	u11750
 14642                           
 14643                           ;stkvar	_c @ sp[(-4)+-4]
 14644                           ;stkvar	_s @ sp[(-4)+0]
 14645  017448  0EFC               	movlw	-4
 14646  01744A  006F FF8F FFD9     	movff	plusw1,fsr2l
 14647  017450  0EFD               	movlw	-3
 14648  017452  006F FF8F FFDA     	movff	plusw1,fsr2h
 14649  017458  0EF8               	movlw	-8
 14650  01745A  006F FF8F FFDF     	movff	plusw1,indf2
 14651                           
 14652                           ;stkvar	_c @ sp[(-4)+-4]
 14653                           ;stkvar	_n @ sp[(-4)+-6]
 14654                           ;stkvar	_s @ sp[(-4)+0]
 14655  017460  0EFC               	movlw	-4
 14656  017462  006F FF8C  F00B    	movff	plusw1,btemp+10
 14657  017468  0EFD               	movlw	-3
 14658  01746A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14659  017470  0EF6               	movlw	-10
 14660  017472  50E3               	movf	plusw1,w,c
 14661  017474  260B               	addwf	(btemp+10)^0,f,c
 14662  017476  0EF7               	movlw	-9
 14663  017478  50E3               	movf	plusw1,w,c
 14664  01747A  220C               	addwfc	(btemp+11)^0,f,c
 14665  01747C  0EFF               	movlw	255
 14666  01747E  240B               	addwf	(btemp+10)^0,w,c
 14667  017480  6ED9               	movwf	fsr2l,c
 14668  017482  0EFF               	movlw	255
 14669  017484  200C               	addwfc	(btemp+11)^0,w,c
 14670  017486  6EDA               	movwf	fsr2h,c
 14671  017488  0EF8               	movlw	-8
 14672  01748A  006F FF8F FFDF     	movff	plusw1,indf2
 14673                           
 14674                           ;stkvar	_n @ sp[(-4)+-6]
 14675  017490  0EF7               	movlw	-9
 14676  017492  50E3               	movf	plusw1,w,c
 14677  017494  E108               	bnz	l13029
 14678  017496  0EF6               	movlw	-10
 14679  017498  006F FF8C  F001    	movff	plusw1,btemp
 14680  01749E  0E03               	movlw	3
 14681  0174A0  5E01               	subwf	btemp^0,f,c
 14682  0174A2  A0D8               	btfss	status,0,c
 14683  0174A4  D125               	goto	u11750
 14684  0174A6                     l13029:
 14685                           
 14686                           ;stkvar	_c @ sp[(-4)+-4]
 14687                           ;stkvar	_s @ sp[(-4)+0]
 14688  0174A6  0EFC               	movlw	-4
 14689  0174A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 14690  0174AE  0EFD               	movlw	-3
 14691  0174B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 14692  0174B6  0E01               	movlw	1
 14693  0174B8  240B               	addwf	(btemp+10)^0,w,c
 14694  0174BA  6ED9               	movwf	fsr2l,c
 14695  0174BC  0E00               	movlw	0
 14696  0174BE  200C               	addwfc	(btemp+11)^0,w,c
 14697  0174C0  6EDA               	movwf	fsr2h,c
 14698  0174C2  0EF8               	movlw	-8
 14699  0174C4  006F FF8F FFDF     	movff	plusw1,indf2
 14700                           
 14701                           ;stkvar	_c @ sp[(-4)+-4]
 14702                           ;stkvar	_s @ sp[(-4)+0]
 14703  0174CA  0EFC               	movlw	-4
 14704  0174CC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14705  0174D2  0EFD               	movlw	-3
 14706  0174D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14707  0174DA  0E02               	movlw	2
 14708  0174DC  240B               	addwf	(btemp+10)^0,w,c
 14709  0174DE  6ED9               	movwf	fsr2l,c
 14710  0174E0  0E00               	movlw	0
 14711  0174E2  200C               	addwfc	(btemp+11)^0,w,c
 14712  0174E4  6EDA               	movwf	fsr2h,c
 14713  0174E6  0EF8               	movlw	-8
 14714  0174E8  006F FF8F FFDF     	movff	plusw1,indf2
 14715                           
 14716                           ;stkvar	_c @ sp[(-4)+-4]
 14717                           ;stkvar	_n @ sp[(-4)+-6]
 14718                           ;stkvar	_s @ sp[(-4)+0]
 14719  0174EE  0EFC               	movlw	-4
 14720  0174F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 14721  0174F6  0EFD               	movlw	-3
 14722  0174F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 14723  0174FE  0EF6               	movlw	-10
 14724  017500  50E3               	movf	plusw1,w,c
 14725  017502  260B               	addwf	(btemp+10)^0,f,c
 14726  017504  0EF7               	movlw	-9
 14727  017506  50E3               	movf	plusw1,w,c
 14728  017508  220C               	addwfc	(btemp+11)^0,f,c
 14729  01750A  0EFE               	movlw	254
 14730  01750C  240B               	addwf	(btemp+10)^0,w,c
 14731  01750E  6ED9               	movwf	fsr2l,c
 14732  017510  0EFF               	movlw	255
 14733  017512  200C               	addwfc	(btemp+11)^0,w,c
 14734  017514  6EDA               	movwf	fsr2h,c
 14735  017516  0EF8               	movlw	-8
 14736  017518  006F FF8F FFDF     	movff	plusw1,indf2
 14737                           
 14738                           ;stkvar	_c @ sp[(-4)+-4]
 14739                           ;stkvar	_n @ sp[(-4)+-6]
 14740                           ;stkvar	_s @ sp[(-4)+0]
 14741  01751E  0EFC               	movlw	-4
 14742  017520  006F FF8C  F00B    	movff	plusw1,btemp+10
 14743  017526  0EFD               	movlw	-3
 14744  017528  006F FF8C  F00C    	movff	plusw1,btemp+11
 14745  01752E  0EF6               	movlw	-10
 14746  017530  50E3               	movf	plusw1,w,c
 14747  017532  260B               	addwf	(btemp+10)^0,f,c
 14748  017534  0EF7               	movlw	-9
 14749  017536  50E3               	movf	plusw1,w,c
 14750  017538  220C               	addwfc	(btemp+11)^0,f,c
 14751  01753A  0EFD               	movlw	253
 14752  01753C  240B               	addwf	(btemp+10)^0,w,c
 14753  01753E  6ED9               	movwf	fsr2l,c
 14754  017540  0EFF               	movlw	255
 14755  017542  200C               	addwfc	(btemp+11)^0,w,c
 14756  017544  6EDA               	movwf	fsr2h,c
 14757  017546  0EF8               	movlw	-8
 14758  017548  006F FF8F FFDF     	movff	plusw1,indf2
 14759                           
 14760                           ;stkvar	_n @ sp[(-4)+-6]
 14761  01754E  0EF7               	movlw	-9
 14762  017550  50E3               	movf	plusw1,w,c
 14763  017552  E108               	bnz	l13035
 14764  017554  0EF6               	movlw	-10
 14765  017556  006F FF8C  F001    	movff	plusw1,btemp
 14766  01755C  0E07               	movlw	7
 14767  01755E  5E01               	subwf	btemp^0,f,c
 14768  017560  A0D8               	btfss	status,0,c
 14769  017562  D0C6               	goto	u11750
 14770  017564                     l13035:
 14771                           
 14772                           ;stkvar	_c @ sp[(-4)+-4]
 14773                           ;stkvar	_s @ sp[(-4)+0]
 14774  017564  0EFC               	movlw	-4
 14775  017566  006F FF8C  F00B    	movff	plusw1,btemp+10
 14776  01756C  0EFD               	movlw	-3
 14777  01756E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14778  017574  0E03               	movlw	3
 14779  017576  240B               	addwf	(btemp+10)^0,w,c
 14780  017578  6ED9               	movwf	fsr2l,c
 14781  01757A  0E00               	movlw	0
 14782  01757C  200C               	addwfc	(btemp+11)^0,w,c
 14783  01757E  6EDA               	movwf	fsr2h,c
 14784  017580  0EF8               	movlw	-8
 14785  017582  006F FF8F FFDF     	movff	plusw1,indf2
 14786                           
 14787                           ;stkvar	_c @ sp[(-4)+-4]
 14788                           ;stkvar	_n @ sp[(-4)+-6]
 14789                           ;stkvar	_s @ sp[(-4)+0]
 14790  017588  0EFC               	movlw	-4
 14791  01758A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14792  017590  0EFD               	movlw	-3
 14793  017592  006F FF8C  F00C    	movff	plusw1,btemp+11
 14794  017598  0EF6               	movlw	-10
 14795  01759A  50E3               	movf	plusw1,w,c
 14796  01759C  260B               	addwf	(btemp+10)^0,f,c
 14797  01759E  0EF7               	movlw	-9
 14798  0175A0  50E3               	movf	plusw1,w,c
 14799  0175A2  220C               	addwfc	(btemp+11)^0,f,c
 14800  0175A4  0EFC               	movlw	252
 14801  0175A6  240B               	addwf	(btemp+10)^0,w,c
 14802  0175A8  6ED9               	movwf	fsr2l,c
 14803  0175AA  0EFF               	movlw	255
 14804  0175AC  200C               	addwfc	(btemp+11)^0,w,c
 14805  0175AE  6EDA               	movwf	fsr2h,c
 14806  0175B0  0EF8               	movlw	-8
 14807  0175B2  006F FF8F FFDF     	movff	plusw1,indf2
 14808                           
 14809                           ;stkvar	_n @ sp[(-4)+-6]
 14810  0175B8  0EF7               	movlw	-9
 14811  0175BA  50E3               	movf	plusw1,w,c
 14812  0175BC  E108               	bnz	l13041
 14813  0175BE  0EF6               	movlw	-10
 14814  0175C0  006F FF8C  F001    	movff	plusw1,btemp
 14815  0175C6  0E09               	movlw	9
 14816  0175C8  5E01               	subwf	btemp^0,f,c
 14817  0175CA  A0D8               	btfss	status,0,c
 14818  0175CC  D091               	goto	u11750
 14819  0175CE                     l13041:
 14820                           
 14821                           ;stkvar	_s @ sp[(-4)+0]
 14822  0175CE  0EFC               	movlw	-4
 14823  0175D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 14824  0175D6  1E0B               	comf	(btemp+10)^0,f,c
 14825  0175D8  0EFD               	movlw	-3
 14826  0175DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 14827  0175E0  1E0C               	comf	(btemp+11)^0,f,c
 14828  0175E2  2A0B               	incf	(btemp+10)^0,f,c
 14829  0175E4  B4D8               	btfsc	status,2,c
 14830  0175E6  2A0C               	incf	(btemp+11)^0,f,c
 14831  0175E8  0E03               	movlw	3
 14832  0175EA  160B               	andwf	(btemp+10)^0,f,c
 14833  0175EC  0E00               	movlw	0
 14834  0175EE  160C               	andwf	(btemp+11)^0,f,c
 14835                           
 14836                           ;stkvar	_k @ sp[(-4)+2]
 14837  0175F0  0EFE               	movlw	-2
 14838  0175F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14839  0175F8  0EFF               	movlw	-1
 14840  0175FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14841                           
 14842                           ;stkvar	_k @ sp[(-4)+2]
 14843                           ;stkvar	_s @ sp[(-4)+0]
 14844  017600  0EFC               	movlw	-4
 14845  017602  50E3               	movf	plusw1,w,c
 14846  017604  6E01               	movwf	btemp^0,c
 14847  017606  0EFE               	movlw	-2
 14848  017608  50E3               	movf	plusw1,w,c
 14849  01760A  2601               	addwf	btemp^0,f,c
 14850  01760C  0EFC               	movlw	-4
 14851  01760E  0060  F007  FFE3   	movff	btemp,plusw1
 14852  017614  0EFD               	movlw	-3
 14853  017616  50E3               	movf	plusw1,w,c
 14854  017618  6E01               	movwf	btemp^0,c
 14855  01761A  0EFF               	movlw	-1
 14856  01761C  50E3               	movf	plusw1,w,c
 14857  01761E  2201               	addwfc	btemp^0,f,c
 14858  017620  0EFD               	movlw	-3
 14859  017622  0060  F007  FFE3   	movff	btemp,plusw1
 14860                           
 14861                           ;stkvar	_k @ sp[(-4)+2]
 14862                           ;stkvar	_n @ sp[(-4)+-6]
 14863  017628  0EF6               	movlw	-10
 14864  01762A  50E3               	movf	plusw1,w,c
 14865  01762C  6E01               	movwf	btemp^0,c
 14866  01762E  0EFE               	movlw	-2
 14867  017630  50E3               	movf	plusw1,w,c
 14868  017632  5E01               	subwf	btemp^0,f,c
 14869  017634  0EF6               	movlw	-10
 14870  017636  0060  F007  FFE3   	movff	btemp,plusw1
 14871  01763C  0EF7               	movlw	-9
 14872  01763E  50E3               	movf	plusw1,w,c
 14873  017640  6E01               	movwf	btemp^0,c
 14874  017642  0EFF               	movlw	-1
 14875  017644  50E3               	movf	plusw1,w,c
 14876  017646  5A01               	subwfb	btemp^0,f,c
 14877  017648  0EF7               	movlw	-9
 14878  01764A  0060  F007  FFE3   	movff	btemp,plusw1
 14879  017650  0EFC               	movlw	252
 14880  017652  6E0B               	movwf	(btemp+10)^0,c
 14881  017654  0EFF               	movlw	255
 14882  017656  6E0C               	movwf	(btemp+11)^0,c
 14883                           
 14884                           ;stkvar	_n @ sp[(-4)+-6]
 14885  017658  0EF6               	movlw	-10
 14886  01765A  006F FF8C  F001    	movff	plusw1,btemp
 14887  017660  500B               	movf	(btemp+10)^0,w,c
 14888  017662  1601               	andwf	btemp^0,f,c
 14889  017664  0EF6               	movlw	-10
 14890  017666  0060  F007  FFE3   	movff	btemp,plusw1
 14891  01766C  0EF7               	movlw	-9
 14892  01766E  006F FF8C  F001    	movff	plusw1,btemp
 14893  017674  500C               	movf	(btemp+11)^0,w,c
 14894  017676  1601               	andwf	btemp^0,f,c
 14895  017678  0EF7               	movlw	-9
 14896  01767A  D02E               	goto	L14
 14897  01767C                     l13049:
 14898                           
 14899                           ;stkvar	_c @ sp[(-4)+-4]
 14900                           ;stkvar	_s @ sp[(-4)+0]
 14901  01767C  0EFC               	movlw	-4
 14902  01767E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14903  017684  0EFD               	movlw	-3
 14904  017686  006F FF8F FFDA     	movff	plusw1,fsr2h
 14905  01768C  0EF8               	movlw	-8
 14906  01768E  006F FF8F FFDF     	movff	plusw1,indf2
 14907                           
 14908                           ;stkvar	_n @ sp[(-4)+-6]
 14909  017694  0EF6               	movlw	-10
 14910  017696  006F FF8C  F001    	movff	plusw1,btemp
 14911  01769C  0E01               	movlw	1
 14912  01769E  5E01               	subwf	btemp^0,f,c
 14913  0176A0  0EF6               	movlw	-10
 14914  0176A2  0060  F007  FFE3   	movff	btemp,plusw1
 14915  0176A8  0EF7               	movlw	-9
 14916  0176AA  006F FF8C  F001    	movff	plusw1,btemp
 14917  0176B0  0E00               	movlw	0
 14918  0176B2  5A01               	subwfb	btemp^0,f,c
 14919  0176B4  0EF7               	movlw	-9
 14920  0176B6  0060  F007  FFE3   	movff	btemp,plusw1
 14921                           
 14922                           ;stkvar	_s @ sp[(-4)+0]
 14923  0176BC  0EFC               	movlw	-4
 14924  0176BE  50E3               	movf	plusw1,w,c
 14925  0176C0  0F01               	addlw	1
 14926  0176C2  6E01               	movwf	btemp^0,c
 14927  0176C4  0EFC               	movlw	-4
 14928  0176C6  0060  F007  FFE3   	movff	btemp,plusw1
 14929  0176CC  6A01               	clrf	btemp^0,c
 14930  0176CE  0EFD               	movlw	-3
 14931  0176D0  50E3               	movf	plusw1,w,c
 14932  0176D2  2001               	addwfc	btemp^0,w,c
 14933  0176D4  6E01               	movwf	btemp^0,c
 14934  0176D6  0EFD               	movlw	-3
 14935  0176D8                     L14:
 14936  0176D8  0060  F007  FFE3   	movff	btemp,plusw1
 14937                           
 14938                           ;stkvar	_n @ sp[(-4)+-6]
 14939  0176DE  0EF6               	movlw	-10
 14940  0176E0  006F FF8C  F001    	movff	plusw1,btemp
 14941  0176E6  0EF7               	movlw	-9
 14942  0176E8  50E3               	movf	plusw1,w,c
 14943  0176EA  1001               	iorwf	btemp^0,w,c
 14944  0176EC  A4D8               	btfss	status,2,c
 14945  0176EE  D7C6               	goto	l13049
 14946  0176F0                     u11750:
 14947                           
 14948                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 14949  0176F0  0EF6               	movlw	246
 14950  0176F2  26E1               	addwf	fsr1l,f,c
 14951  0176F4  0EFF               	movlw	255
 14952  0176F6  22E2               	addwfc	fsr1h,f,c
 14953  0176F8  0012               	return		;funcret
 14954  0176FA                     __end_of_memset:
 14955                           	opt callstack 0
 14956                           
 14957 ;; *************** function _printf *****************
 14958 ;; Defined at:
 14959 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 14960 ;; Parameters:    Size  Location     Type
 14961 ;;  fmt             2  [STACK] PTR const unsigned char 
 14962 ;;		 -> STR_61(3), STR_60(3), 
 14963 ;; Auto vars:     Size  Location     Type
 14964 ;;  ap              2  [STACK] PTR void [1]
 14965 ;;		 -> ?_printf(2), ?_sprintf(2), 
 14966 ;;  ret             2    0        int 
 14967 ;; Return value:  Size  Location     Type
 14968 ;;                  2  [STACK] int 
 14969 ;; Registers used:
 14970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14971 ;; Tracked objects:
 14972 ;;		On entry : 3F/3B
 14973 ;;		On exit  : 3F/0
 14974 ;;		Unchanged: 0/0
 14975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14980 ;;Total ram usage:        0 bytes
 14981 ;; Hardware stack levels used:    1
 14982 ;; Hardware stack levels required when called:   23
 14983 ;; This function calls:
 14984 ;;		_vfprintf
 14985 ;; This function is called by:
 14986 ;;		_eaDogM_WriteString
 14987 ;;		_send_lcd_data_dma
 14988 ;; This function uses a reentrant model
 14989 ;;
 14990                           
 14991                           	psect	text63
 14992  01C206                     __ptext63:
 14993                           	opt callstack 0
 14994  01C206                     _printf:
 14995                           	opt callstack 0
 14996                           
 14997                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14998  01C206  52E6               	movf	postinc1,f,c
 14999  01C208  52E6               	movf	postinc1,f,c
 15000                           
 15001                           ;stkvar	?_printf @ sp[(-2)+-3]
 15002                           
 15003                           ;incstack = 0
 15004  01C20A  0EFB               	movlw	251
 15005  01C20C  24E1               	addwf	fsr1l,w,c
 15006  01C20E  6E0B               	movwf	(btemp+10)^0,c
 15007  01C210  0EFF               	movlw	255
 15008  01C212  20E2               	addwfc	fsr1h,w,c
 15009  01C214  6E0C               	movwf	(btemp+11)^0,c
 15010                           
 15011                           ;stkvar	_ap @ sp[(-2)+0]
 15012  01C216  0EFF               	movlw	-1
 15013  01C218  0060  F033  FFE3   	movff	btemp+11,plusw1
 15014  01C21E  0EFE               	movlw	-2
 15015  01C220  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15016                           
 15017                           ;stkvar	_ap @ sp[(-2)+0]
 15018  01C226  0EFE               	movlw	254
 15019  01C228  24E1               	addwf	fsr1l,w,c
 15020  01C22A  6E01               	movwf	btemp^0,c
 15021  01C22C  0EFF               	movlw	255
 15022  01C22E  20E2               	addwfc	fsr1h,w,c
 15023  01C230  6E02               	movwf	(btemp+1)^0,c
 15024  01C232  0060  F007  FFE6   	movff	btemp,postinc1
 15025  01C238  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15026                           
 15027                           ;stkvar	_fmt @ sp[(-4)+-3]
 15028  01C23E  0EF9               	movlw	-7
 15029  01C240  006F FF8F FFE6     	movff	plusw1,postinc1
 15030  01C246  006F FF8F FFE6     	movff	plusw1,postinc1
 15031  01C24C  0E00               	movlw	0
 15032  01C24E  6EE6               	movwf	postinc1,c
 15033  01C250  0E00               	movlw	0
 15034  01C252  6EE6               	movwf	postinc1,c
 15035  01C254  EC8D  F0DA         	call	_vfprintf	;wreg free
 15036                           
 15037                           ; BSR set to: 0
 15038                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 15039  01C258  52E5               	movf	postdec1,f,c
 15040  01C25A  52E5               	movf	postdec1,f,c
 15041  01C25C  52E5               	movf	postdec1,f,c
 15042  01C25E  50E7               	movf	indf1,w,c
 15043  01C260  5EE1               	subwf	fsr1l,f,c
 15044  01C262  0E00               	movlw	0
 15045  01C264  5AE2               	subwfb	fsr1h,f,c
 15046  01C266  0012               	return		;funcret
 15047  01C268                     __end_of_printf:
 15048                           	opt callstack 0
 15049                           
 15050 ;; *************** function _vfprintf *****************
 15051 ;; Defined at:
 15052 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15053 ;; Parameters:    Size  Location     Type
 15054 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15055 ;;		 -> f(6), NULL(0), 
 15056 ;;  fmt             2  [STACK] PTR const unsigned char 
 15057 ;;		 -> STR_81(127), STR_79(3), STR_78(3), STR_77(19), 
 15058 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 15059 ;;		 -> STR_72(19), STR_71(24), STR_70(15), STR_69(15), 
 15060 ;;		 -> STR_68(15), STR_67(10), STR_66(10), STR_65(19), 
 15061 ;;		 -> STR_64(19), STR_61(3), STR_60(3), STR_59(21), 
 15062 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 15063 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 15064 ;;		 -> STR_50(20), STR_49(20), STR_48(21), STR_47(21), 
 15065 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 15066 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 15067 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 15068 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 15069 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15070 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 15071 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 15072 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 15073 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 15074 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 15075 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15076 ;;		 -> STR_1(21), 
 15077 ;;  ap              2  [STACK] PTR PTR void 
 15078 ;;		 -> ap(2), ap(2), 
 15079 ;; Auto vars:     Size  Location     Type
 15080 ;;  cfmt            2  [STACK] PTR unsigned char 
 15081 ;;		 -> STR_81(127), STR_79(3), STR_78(3), STR_77(19), 
 15082 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 15083 ;;		 -> STR_72(19), STR_71(24), STR_70(15), STR_69(15), 
 15084 ;;		 -> STR_68(15), STR_67(10), STR_66(10), STR_65(19), 
 15085 ;;		 -> STR_64(19), STR_61(3), STR_60(3), STR_59(21), 
 15086 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 15087 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 15088 ;;		 -> STR_50(20), STR_49(20), STR_48(21), STR_47(21), 
 15089 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 15090 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 15091 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 15092 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 15093 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15094 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 15095 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 15096 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 15097 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 15098 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 15099 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15100 ;;		 -> STR_1(21), 
 15101 ;; Return value:  Size  Location     Type
 15102 ;;                  2  [STACK] int 
 15103 ;; Registers used:
 15104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15105 ;; Tracked objects:
 15106 ;;		On entry : 0/2
 15107 ;;		On exit  : 3F/0
 15108 ;;		Unchanged: 0/0
 15109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15114 ;;Total ram usage:        0 bytes
 15115 ;; Hardware stack levels used:    1
 15116 ;; Hardware stack levels required when called:   22
 15117 ;; This function calls:
 15118 ;;		_vfpfcnvrt
 15119 ;; This function is called by:
 15120 ;;		_sprintf
 15121 ;;		_printf
 15122 ;; This function uses a reentrant model
 15123 ;;
 15124                           
 15125                           	psect	text64
 15126  01B51A                     __ptext64:
 15127                           	opt callstack 0
 15128  01B51A                     _vfprintf:
 15129                           	opt callstack 0
 15130                           
 15131                           ; BSR set to: 0
 15132                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15133  01B51A  52E6               	movf	postinc1,f,c
 15134  01B51C  52E6               	movf	postinc1,f,c
 15135                           
 15136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 15137                           ;stkvar	_fmt @ sp[(-2)+-4]
 15138                           
 15139                           ;incstack = 0
 15140 ;; hardware stack exceeded
 15141  01B51E  0EFA               	movlw	-6
 15142  01B520  006F FF8C  F00B    	movff	plusw1,btemp+10
 15143  01B526  0EFB               	movlw	-5
 15144  01B528  006F FF8C  F00C    	movff	plusw1,btemp+11
 15145                           
 15146                           ;stkvar	_cfmt @ sp[(-2)+0]
 15147  01B52E  0EFF               	movlw	-1
 15148  01B530  0060  F033  FFE3   	movff	btemp+11,plusw1
 15149  01B536  0EFE               	movlw	-2
 15150  01B538  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15151                           
 15152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 15153  01B53E  0100               	movlb	0	; () banked
 15154  01B540  6B96               	clrf	_nout& (0+255),b
 15155  01B542  6B97               	clrf	(_nout+1)& (0+255),b
 15156                           
 15157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 15158  01B544  D021               	goto	l13899
 15159  01B546                     l13897:
 15160                           
 15161                           ; BSR set to: 0
 15162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 15163                           ;stkvar	_ap @ sp[(-2)+-6]
 15164  01B546  0EF8               	movlw	-8
 15165  01B548  006F FF8F FFE6     	movff	plusw1,postinc1
 15166  01B54E  006F FF8F FFE6     	movff	plusw1,postinc1
 15167                           
 15168                           ;stkvar	_cfmt @ sp[(-4)+0]
 15169  01B554  0EFC               	movlw	252
 15170  01B556  24E1               	addwf	fsr1l,w,c
 15171  01B558  6E01               	movwf	btemp^0,c
 15172  01B55A  0EFF               	movlw	255
 15173  01B55C  20E2               	addwfc	fsr1h,w,c
 15174  01B55E  6E02               	movwf	(btemp+1)^0,c
 15175  01B560  0060  F007  FFE6   	movff	btemp,postinc1
 15176  01B566  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15177                           
 15178                           ;stkvar	_fp @ sp[(-6)+-2]
 15179  01B56C  0EF8               	movlw	-8
 15180  01B56E  006F FF8F FFE6     	movff	plusw1,postinc1
 15181  01B574  006F FF8F FFE6     	movff	plusw1,postinc1
 15182  01B57A  EC61  F092         	call	_vfpfcnvrt	;wreg free
 15183  01B57E  5001               	movf	btemp^0,w,c
 15184  01B580  0100               	movlb	0	; () banked
 15185  01B582  2796               	addwf	_nout& (0+255),f,b
 15186  01B584  5002               	movf	(btemp+1)^0,w,c
 15187  01B586  2397               	addwfc	(_nout+1)& (0+255),f,b
 15188  01B588                     l13899:
 15189                           
 15190                           ; BSR set to: 0
 15191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 15192                           ;stkvar	_cfmt @ sp[(-2)+0]
 15193  01B588  50E1               	movf	fsr1l,w,c
 15194  01B58A  0FFE               	addlw	-2
 15195  01B58C  6ED9               	movwf	fsr2l,c
 15196  01B58E  50E2               	movf	fsr1h,w,c
 15197  01B590  6EDA               	movwf	fsr2h,c
 15198  01B592  0EFF               	movlw	255
 15199  01B594  22DA               	addwfc	fsr2h,f,c
 15200  01B596  006F FF7B FFF6     	movff	postinc2,tblptrl
 15201  01B59C  006F FF77 FFF7     	movff	postdec2,tblptrh
 15202  01B5A2                     	if	0	;tblptru may be non-zero
 15203  01B5A2                     	endif
 15204  01B5A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15205  01B5A2  0E00               	movlw	low (__mediumconst shr (0+16))
 15206  01B5A4  6EF8               	movwf	tblptru,c
 15207  01B5A6                     	endif
 15208  01B5A6  0008               	tblrd		*
 15209  01B5A8  50F5               	movf	tablat,w,c
 15210  01B5AA  0900               	iorlw	0
 15211  01B5AC  A4D8               	btfss	status,2,c
 15212  01B5AE  D7CB               	goto	l13897
 15213                           
 15214                           ; BSR set to: 0
 15215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 15216  01B5B0  0060  F258  F001   	movff	_nout,btemp
 15217  01B5B6  0060  F25C  F002   	movff	_nout+1,btemp+1
 15218                           
 15219                           ; BSR set to: 0
 15220                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 15221  01B5BC  0EF8               	movlw	248
 15222  01B5BE  26E1               	addwf	fsr1l,f,c
 15223  01B5C0  0EFF               	movlw	255
 15224  01B5C2  22E2               	addwfc	fsr1h,f,c
 15225  01B5C4  0012               	return		;funcret
 15226  01B5C6                     __end_of_vfprintf:
 15227                           	opt callstack 0
 15228                           
 15229 ;; *************** function _vfpfcnvrt *****************
 15230 ;; Defined at:
 15231 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15232 ;; Parameters:    Size  Location     Type
 15233 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15234 ;;		 -> f(6), NULL(0), 
 15235 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 15236 ;;		 -> cfmt(2), 
 15237 ;;  ap              2  [STACK] PTR PTR void 
 15238 ;;		 -> ap(2), ap(2), 
 15239 ;; Auto vars:     Size  Location     Type
 15240 ;;  llu             8  [STACK] unsigned long long 
 15241 ;;  ll              8  [STACK] long long 
 15242 ;;  f               4  [STACK] long long 
 15243 ;;  ct              3  [STACK] unsigned char [3]
 15244 ;;  vp              3    0        PTR void 
 15245 ;;  cp              2  [STACK] PTR unsigned char 
 15246 ;;		 -> ?_printf(2), ?_sprintf(2), STR_63(9), STR_62(12), 
 15247 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 15248 ;;		 -> V(192), 
 15249 ;;  i               2    0        int 
 15250 ;;  done            2    0        int 
 15251 ;;  c               1  [STACK] unsigned char 
 15252 ;; Return value:  Size  Location     Type
 15253 ;;                  2  [STACK] int 
 15254 ;; Registers used:
 15255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 15256 ;; Tracked objects:
 15257 ;;		On entry : 0/0
 15258 ;;		On exit  : 0/0
 15259 ;;		Unchanged: 0/0
 15260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15265 ;;Total ram usage:        0 bytes
 15266 ;; Hardware stack levels used:    1
 15267 ;; Hardware stack levels required when called:   21
 15268 ;; This function calls:
 15269 ;;		_atoi
 15270 ;;		_ctoa
 15271 ;;		_dtoa
 15272 ;;		_efgtoa
 15273 ;;		_fputc
 15274 ;;		_isdigit
 15275 ;;		_isupper
 15276 ;;		_stoa
 15277 ;;		_strncmp
 15278 ;;		_tolower
 15279 ;;		_utoa
 15280 ;;		_xtoa
 15281 ;; This function is called by:
 15282 ;;		_vfprintf
 15283 ;; This function uses a reentrant model
 15284 ;;
 15285                           
 15286                           	psect	text65
 15287  0124C2                     __ptext65:
 15288                           	opt callstack 0
 15289  0124C2                     _vfpfcnvrt:
 15290                           	opt callstack 0
 15291                           
 15292                           ; BSR set to: 0
 15293                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15294  0124C2  0E20               	movlw	32
 15295  0124C4  26E1               	addwf	fsr1l,f,c
 15296  0124C6  0E00               	movlw	0
 15297  0124C8  22E2               	addwfc	fsr1h,f,c
 15298                           
 15299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 15300                           ;stkvar	_fmt @ sp[(-32)+-4]
 15301                           
 15302                           ;incstack = 0
 15303 ;; hardware stack exceeded
 15304  0124CA  0EDC               	movlw	-36
 15305  0124CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15306  0124D2  0EDD               	movlw	-35
 15307  0124D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15308  0124DA  006F FF7B FFF6     	movff	postinc2,tblptrl
 15309  0124E0  006F FF77 FFF7     	movff	postdec2,tblptrh
 15310  0124E6                     	if	0	;tblptru may be non-zero
 15311  0124E6                     	endif
 15312  0124E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15313  0124E6  0E00               	movlw	low (__mediumconst shr (0+16))
 15314  0124E8  6EF8               	movwf	tblptru,c
 15315  0124EA                     	endif
 15316  0124EA  0008               	tblrd		*
 15317  0124EC  50F5               	movf	tablat,w,c
 15318  0124EE  0A25               	xorlw	37
 15319  0124F0  A4D8               	btfss	status,2,c
 15320  0124F2  EF08  F09A         	goto	l13859
 15321                           
 15322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 15323                           ;stkvar	_fmt @ sp[(-32)+-4]
 15324  0124F6  0EDC               	movlw	-36
 15325  0124F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15326  0124FE  0EDD               	movlw	-35
 15327  012500  006F FF8F FFDA     	movff	plusw1,fsr2h
 15328  012506  2ADE               	incf	postinc2,f,c
 15329  012508  0E00               	movlw	0
 15330  01250A  22DD               	addwfc	postdec2,f,c
 15331                           
 15332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 15333  01250C  6A3A               	clrf	_width^0,c
 15334  01250E  6A3B               	clrf	(_width+1)^0,c
 15335  012510  6A3E               	clrf	_flags^0,c
 15336  012512  6A3F               	clrf	(_flags+1)^0,c
 15337                           
 15338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 15339  012514  683C               	setf	_prec^0,c
 15340  012516  683D               	setf	(_prec+1)^0,c
 15341                           
 15342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 15343                           ;stkvar	_fmt @ sp[(-32)+-4]
 15344  012518  0EDC               	movlw	-36
 15345  01251A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15346  012520  0EDD               	movlw	-35
 15347  012522  006F FF8F FFDA     	movff	plusw1,fsr2h
 15348  012528  006F FF7B FFF6     	movff	postinc2,tblptrl
 15349  01252E  006F FF77 FFF7     	movff	postdec2,tblptrh
 15350  012534                     	if	0	;tblptru may be non-zero
 15351  012534                     	endif
 15352  012534                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15353  012534  0E00               	movlw	low (__mediumconst shr (0+16))
 15354  012536  6EF8               	movwf	tblptru,c
 15355  012538                     	endif
 15356  012538  0008               	tblrd		*
 15357  01253A  50F5               	movf	tablat,w,c
 15358  01253C  0A2A               	xorlw	42
 15359  01253E  A4D8               	btfss	status,2,c
 15360  012540  D031               	goto	l13677
 15361                           
 15362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 15363                           ;stkvar	_fmt @ sp[(-32)+-4]
 15364  012542  0EDC               	movlw	-36
 15365  012544  006F FF8F FFD9     	movff	plusw1,fsr2l
 15366  01254A  0EDD               	movlw	-35
 15367  01254C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15368  012552  2ADE               	incf	postinc2,f,c
 15369  012554  0E00               	movlw	0
 15370  012556  22DD               	addwfc	postdec2,f,c
 15371                           
 15372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 15373                           ;stkvar	_ap @ sp[(-32)+-6]
 15374  012558  0EDA               	movlw	-38
 15375  01255A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15376  012560  0EDB               	movlw	-37
 15377  012562  006F FF8F FFDA     	movff	plusw1,fsr2h
 15378  012568  0E02               	movlw	2
 15379  01256A  5EDE               	subwf	postinc2,f,c
 15380  01256C  0E00               	movlw	0
 15381  01256E  5ADD               	subwfb	postdec2,f,c
 15382  012570  006F FF78  F00B    	movff	postinc2,btemp+10
 15383  012576  006F FF74  F00C    	movff	postdec2,btemp+11
 15384  01257C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15385  012582  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15386  012588  006F FF78  F03A    	movff	postinc2,_width
 15387  01258E  006F FF74  F03B    	movff	postdec2,_width+1
 15388                           
 15389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 15390  012594  AE3B               	btfss	(_width+1)^0,7,c
 15391  012596  D066               	goto	u12940
 15392                           
 15393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 15394  012598  803E               	bsf	_flags^0,0,c
 15395                           
 15396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 15397  01259A  6C3A               	negf	_width^0,c
 15398  01259C  1E3B               	comf	(_width+1)^0,f,c
 15399  01259E  B0D8               	btfsc	status,0,c
 15400  0125A0  2A3B               	incf	(_width+1)^0,f,c
 15401  0125A2  D060               	goto	u12940
 15402  0125A4                     l13677:
 15403                           
 15404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 15405                           ;stkvar	_fmt @ sp[(-32)+-4]
 15406  0125A4  0EDC               	movlw	-36
 15407  0125A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 15408  0125AC  0EDD               	movlw	-35
 15409  0125AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 15410  0125B4  006F FF78  F00B    	movff	postinc2,btemp+10
 15411  0125BA  006F FF74  F00C    	movff	postdec2,btemp+11
 15412  0125C0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15413  0125C6  0060  F033  FFE6   	movff	btemp+11,postinc1
 15414  0125CC  EC88  F0BF         	call	_atoi	;wreg free
 15415  0125D0  0060  F004  F03A   	movff	btemp,_width
 15416  0125D6  0060  F008  F03B   	movff	btemp+1,_width+1
 15417                           
 15418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15419  0125DC  D00B               	goto	l13681
 15420  0125DE                     l13679:
 15421                           
 15422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 15423                           ;stkvar	_fmt @ sp[(-32)+-4]
 15424  0125DE  0EDC               	movlw	-36
 15425  0125E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15426  0125E6  0EDD               	movlw	-35
 15427  0125E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15428  0125EE  2ADE               	incf	postinc2,f,c
 15429  0125F0  0E00               	movlw	0
 15430  0125F2  22DD               	addwfc	postdec2,f,c
 15431  0125F4                     l13681:
 15432  0125F4  0ED0               	movlw	208
 15433  0125F6  6E0B               	movwf	(btemp+10)^0,c
 15434  0125F8  0EFF               	movlw	255
 15435  0125FA  6E0C               	movwf	(btemp+11)^0,c
 15436                           
 15437                           ;stkvar	_fmt @ sp[(-32)+-4]
 15438  0125FC  0EDC               	movlw	-36
 15439  0125FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15440  012604  0EDD               	movlw	-35
 15441  012606  006F FF8F FFDA     	movff	plusw1,fsr2h
 15442  01260C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15443  012612  006F FF77 FFF7     	movff	postdec2,tblptrh
 15444  012618                     	if	0	;tblptru may be non-zero
 15445  012618                     	endif
 15446  012618                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15447  012618  0E00               	movlw	low (__mediumconst shr (0+16))
 15448  01261A  6EF8               	movwf	tblptru,c
 15449  01261C                     	endif
 15450  01261C  0008               	tblrd		*
 15451  01261E  50F5               	movf	tablat,w,c
 15452  012620  6E09               	movwf	(btemp+8)^0,c
 15453  012622  6A0A               	clrf	(btemp+9)^0,c
 15454  012624  500B               	movf	(btemp+10)^0,w,c
 15455  012626  2609               	addwf	(btemp+8)^0,f,c
 15456  012628  500C               	movf	(btemp+11)^0,w,c
 15457  01262A  220A               	addwfc	(btemp+9)^0,f,c
 15458  01262C  500A               	movf	(btemp+9)^0,w,c
 15459  01262E  E106               	bnz	u12920
 15460  012630  0E0A               	movlw	10
 15461  012632  5C09               	subwf	(btemp+8)^0,w,c
 15462  012634  B0D8               	btfsc	status,0,c
 15463  012636  D002               	goto	u12920
 15464  012638  0E01               	movlw	1
 15465  01263A  D001               	goto	u12930
 15466  01263C                     u12920:
 15467  01263C  0E00               	movlw	0
 15468  01263E                     u12930:
 15469  01263E  6E0B               	movwf	(btemp+10)^0,c
 15470  012640  6A0C               	clrf	(btemp+11)^0,c
 15471                           
 15472                           ;stkvar	_vfpfcnvrt$6219 @ sp[(-32)+4]
 15473  012642  0EE4               	movlw	-28
 15474  012644  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15475  01264A  0EE5               	movlw	-27
 15476  01264C  0060  F033  FFE3   	movff	btemp+11,plusw1
 15477                           
 15478                           ;stkvar	_vfpfcnvrt$6219 @ sp[(-32)+4]
 15479  012652  0EE4               	movlw	-28
 15480  012654  006F FF8C  F001    	movff	plusw1,btemp
 15481  01265A  0EE5               	movlw	-27
 15482  01265C  50E3               	movf	plusw1,w,c
 15483  01265E  1001               	iorwf	btemp^0,w,c
 15484  012660  A4D8               	btfss	status,2,c
 15485  012662  D7BD               	goto	l13679
 15486  012664                     u12940:
 15487                           
 15488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 15489                           ;stkvar	_fmt @ sp[(-32)+-4]
 15490  012664  0EDC               	movlw	-36
 15491  012666  006F FF8F FFD9     	movff	plusw1,fsr2l
 15492  01266C  0EDD               	movlw	-35
 15493  01266E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15494  012674  006F FF7B FFF6     	movff	postinc2,tblptrl
 15495  01267A  006F FF77 FFF7     	movff	postdec2,tblptrh
 15496  012680                     	if	0	;tblptru may be non-zero
 15497  012680                     	endif
 15498  012680                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15499  012680  0E00               	movlw	low (__mediumconst shr (0+16))
 15500  012682  6EF8               	movwf	tblptru,c
 15501  012684                     	endif
 15502  012684  0008               	tblrd		*
 15503  012686  50F5               	movf	tablat,w,c
 15504  012688  0A2E               	xorlw	46
 15505  01268A  A4D8               	btfss	status,2,c
 15506  01268C  D0AC               	goto	u12990
 15507                           
 15508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 15509  01268E  6A3C               	clrf	_prec^0,c
 15510  012690  6A3D               	clrf	(_prec+1)^0,c
 15511                           
 15512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 15513                           ;stkvar	_fmt @ sp[(-32)+-4]
 15514  012692  0EDC               	movlw	-36
 15515  012694  006F FF8F FFD9     	movff	plusw1,fsr2l
 15516  01269A  0EDD               	movlw	-35
 15517  01269C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15518  0126A2  2ADE               	incf	postinc2,f,c
 15519  0126A4  0E00               	movlw	0
 15520  0126A6  22DD               	addwfc	postdec2,f,c
 15521                           
 15522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 15523                           ;stkvar	_fmt @ sp[(-32)+-4]
 15524  0126A8  0EDC               	movlw	-36
 15525  0126AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15526  0126B0  0EDD               	movlw	-35
 15527  0126B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15528  0126B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 15529  0126BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 15530  0126C4                     	if	0	;tblptru may be non-zero
 15531  0126C4                     	endif
 15532  0126C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15533  0126C4  0E00               	movlw	low (__mediumconst shr (0+16))
 15534  0126C6  6EF8               	movwf	tblptru,c
 15535  0126C8                     	endif
 15536  0126C8  0008               	tblrd		*
 15537  0126CA  50F5               	movf	tablat,w,c
 15538  0126CC  0A2A               	xorlw	42
 15539  0126CE  A4D8               	btfss	status,2,c
 15540  0126D0  D02A               	goto	l13699
 15541                           
 15542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 15543                           ;stkvar	_fmt @ sp[(-32)+-4]
 15544  0126D2  0EDC               	movlw	-36
 15545  0126D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 15546  0126DA  0EDD               	movlw	-35
 15547  0126DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 15548  0126E2  2ADE               	incf	postinc2,f,c
 15549  0126E4  0E00               	movlw	0
 15550  0126E6  22DD               	addwfc	postdec2,f,c
 15551                           
 15552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 15553                           ;stkvar	_ap @ sp[(-32)+-6]
 15554  0126E8  0EDA               	movlw	-38
 15555  0126EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15556  0126F0  0EDB               	movlw	-37
 15557  0126F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15558  0126F8  0E02               	movlw	2
 15559  0126FA  5EDE               	subwf	postinc2,f,c
 15560  0126FC  0E00               	movlw	0
 15561  0126FE  5ADD               	subwfb	postdec2,f,c
 15562  012700  006F FF78  F00B    	movff	postinc2,btemp+10
 15563  012706  006F FF74  F00C    	movff	postdec2,btemp+11
 15564  01270C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15565  012712  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15566  012718  006F FF78  F03C    	movff	postinc2,_prec
 15567  01271E  006F FF74  F03D    	movff	postdec2,_prec+1
 15568                           
 15569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 15570  012724  D060               	goto	u12990
 15571  012726                     l13699:
 15572                           
 15573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 15574                           ;stkvar	_fmt @ sp[(-32)+-4]
 15575  012726  0EDC               	movlw	-36
 15576  012728  006F FF8F FFD9     	movff	plusw1,fsr2l
 15577  01272E  0EDD               	movlw	-35
 15578  012730  006F FF8F FFDA     	movff	plusw1,fsr2h
 15579  012736  006F FF78  F00B    	movff	postinc2,btemp+10
 15580  01273C  006F FF74  F00C    	movff	postdec2,btemp+11
 15581  012742  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15582  012748  0060  F033  FFE6   	movff	btemp+11,postinc1
 15583  01274E  EC88  F0BF         	call	_atoi	;wreg free
 15584  012752  0060  F004  F03C   	movff	btemp,_prec
 15585  012758  0060  F008  F03D   	movff	btemp+1,_prec+1
 15586                           
 15587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15588  01275E  D00B               	goto	l13703
 15589  012760                     l13701:
 15590                           
 15591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 15592                           ;stkvar	_fmt @ sp[(-32)+-4]
 15593  012760  0EDC               	movlw	-36
 15594  012762  006F FF8F FFD9     	movff	plusw1,fsr2l
 15595  012768  0EDD               	movlw	-35
 15596  01276A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15597  012770  2ADE               	incf	postinc2,f,c
 15598  012772  0E00               	movlw	0
 15599  012774  22DD               	addwfc	postdec2,f,c
 15600  012776                     l13703:
 15601  012776  0ED0               	movlw	208
 15602  012778  6E0B               	movwf	(btemp+10)^0,c
 15603  01277A  0EFF               	movlw	255
 15604  01277C  6E0C               	movwf	(btemp+11)^0,c
 15605                           
 15606                           ;stkvar	_fmt @ sp[(-32)+-4]
 15607  01277E  0EDC               	movlw	-36
 15608  012780  006F FF8F FFD9     	movff	plusw1,fsr2l
 15609  012786  0EDD               	movlw	-35
 15610  012788  006F FF8F FFDA     	movff	plusw1,fsr2h
 15611  01278E  006F FF7B FFF6     	movff	postinc2,tblptrl
 15612  012794  006F FF77 FFF7     	movff	postdec2,tblptrh
 15613  01279A                     	if	0	;tblptru may be non-zero
 15614  01279A                     	endif
 15615  01279A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15616  01279A  0E00               	movlw	low (__mediumconst shr (0+16))
 15617  01279C  6EF8               	movwf	tblptru,c
 15618  01279E                     	endif
 15619  01279E  0008               	tblrd		*
 15620  0127A0  50F5               	movf	tablat,w,c
 15621  0127A2  6E09               	movwf	(btemp+8)^0,c
 15622  0127A4  6A0A               	clrf	(btemp+9)^0,c
 15623  0127A6  500B               	movf	(btemp+10)^0,w,c
 15624  0127A8  2609               	addwf	(btemp+8)^0,f,c
 15625  0127AA  500C               	movf	(btemp+11)^0,w,c
 15626  0127AC  220A               	addwfc	(btemp+9)^0,f,c
 15627  0127AE  500A               	movf	(btemp+9)^0,w,c
 15628  0127B0  E106               	bnz	u12970
 15629  0127B2  0E0A               	movlw	10
 15630  0127B4  5C09               	subwf	(btemp+8)^0,w,c
 15631  0127B6  B0D8               	btfsc	status,0,c
 15632  0127B8  D002               	goto	u12970
 15633  0127BA  0E01               	movlw	1
 15634  0127BC  D001               	goto	u12980
 15635  0127BE                     u12970:
 15636  0127BE  0E00               	movlw	0
 15637  0127C0                     u12980:
 15638  0127C0  6E0B               	movwf	(btemp+10)^0,c
 15639  0127C2  6A0C               	clrf	(btemp+11)^0,c
 15640                           
 15641                           ;stkvar	_vfpfcnvrt$6220 @ sp[(-32)+0]
 15642  0127C4  0EE0               	movlw	-32
 15643  0127C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15644  0127CC  0EE1               	movlw	-31
 15645  0127CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15646                           
 15647                           ;stkvar	_vfpfcnvrt$6220 @ sp[(-32)+0]
 15648  0127D4  0EE0               	movlw	-32
 15649  0127D6  006F FF8C  F001    	movff	plusw1,btemp
 15650  0127DC  0EE1               	movlw	-31
 15651  0127DE  50E3               	movf	plusw1,w,c
 15652  0127E0  1001               	iorwf	btemp^0,w,c
 15653  0127E2  A4D8               	btfss	status,2,c
 15654  0127E4  D7BD               	goto	l13701
 15655  0127E6                     u12990:
 15656                           
 15657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 15658                           ;stkvar	_fmt @ sp[(-32)+-4]
 15659  0127E6  0EDC               	movlw	-36
 15660  0127E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15661  0127EE  0EDD               	movlw	-35
 15662  0127F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 15663  0127F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 15664  0127FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 15665  012802                     	if	0	;tblptru may be non-zero
 15666  012802                     	endif
 15667  012802                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15668  012802  0E00               	movlw	low (__mediumconst shr (0+16))
 15669  012804  6EF8               	movwf	tblptru,c
 15670  012806                     	endif
 15671  012806  0008               	tblrd		*
 15672  012808  50F5               	movf	tablat,w,c
 15673  01280A  6EE6               	movwf	postinc1,c
 15674  01280C  0E00               	movlw	0
 15675  01280E  6EE6               	movwf	postinc1,c
 15676  012810  EC24  F0DE         	call	_tolower	;wreg free
 15677                           
 15678                           ;stkvar	_ct @ sp[(-32)+26]
 15679  012814  0EFA               	movlw	-6
 15680  012816  0060  F007  FFE3   	movff	btemp,plusw1
 15681                           
 15682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 15683                           ;stkvar	_ct @ sp[(-32)+26]
 15684  01281C  0EFA               	movlw	-6
 15685  01281E  50E3               	movf	plusw1,w,c
 15686  012820  B4D8               	btfsc	status,2,c
 15687  012822  D05B               	goto	l13719
 15688                           
 15689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 15690                           ;stkvar	_ct @ sp[(-32)+26]
 15691  012824  0EFB               	movlw	251
 15692  012826  24E1               	addwf	fsr1l,w,c
 15693  012828  6ED9               	movwf	fsr2l,c
 15694  01282A  0EFF               	movlw	255
 15695  01282C  20E2               	addwfc	fsr1h,w,c
 15696  01282E  6EDA               	movwf	fsr2h,c
 15697                           
 15698                           ;stkvar	_fmt @ sp[(-32)+-4]
 15699  012830  0EDC               	movlw	-36
 15700  012832  006F FF8F FFE9     	movff	plusw1,fsr0l
 15701  012838  0EDD               	movlw	-35
 15702  01283A  006F FF8F FFEA     	movff	plusw1,fsr0h
 15703  012840  006F FFB8  F00B    	movff	postinc0,btemp+10
 15704  012846  006F FFB4  F00C    	movff	postdec0,btemp+11
 15705  01284C  0E01               	movlw	1
 15706  01284E  260B               	addwf	(btemp+10)^0,f,c
 15707  012850  0E00               	movlw	0
 15708  012852  220C               	addwfc	(btemp+11)^0,f,c
 15709  012854  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15710  01285A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15711  012860                     	if	0	;tblptru may be non-zero
 15712  012860                     	endif
 15713  012860                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15714  012860  0E00               	movlw	low (__mediumconst shr (0+16))
 15715  012862  6EF8               	movwf	tblptru,c
 15716  012864                     	endif
 15717  012864  0008               	tblrd		*
 15718  012866  50F5               	movf	tablat,w,c
 15719  012868  6EE6               	movwf	postinc1,c
 15720  01286A  0E00               	movlw	0
 15721  01286C  6EE6               	movwf	postinc1,c
 15722  01286E  EC24  F0DE         	call	_tolower	;wreg free
 15723  012872  5001               	movf	btemp^0,w,c
 15724  012874  6EDF               	movwf	indf2,c
 15725                           
 15726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 15727                           ;stkvar	_ct @ sp[(-32)+26]
 15728  012876  0EFB               	movlw	251
 15729  012878  24E1               	addwf	fsr1l,w,c
 15730  01287A  6ED9               	movwf	fsr2l,c
 15731  01287C  0EFF               	movlw	255
 15732  01287E  20E2               	addwfc	fsr1h,w,c
 15733  012880  6EDA               	movwf	fsr2h,c
 15734  012882  50DF               	movf	indf2,w,c
 15735  012884  B4D8               	btfsc	status,2,c
 15736  012886  D029               	goto	l13719
 15737                           
 15738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 15739                           ;stkvar	_ct @ sp[(-32)+26]
 15740  012888  0EFC               	movlw	252
 15741  01288A  24E1               	addwf	fsr1l,w,c
 15742  01288C  6ED9               	movwf	fsr2l,c
 15743  01288E  0EFF               	movlw	255
 15744  012890  20E2               	addwfc	fsr1h,w,c
 15745  012892  6EDA               	movwf	fsr2h,c
 15746                           
 15747                           ;stkvar	_fmt @ sp[(-32)+-4]
 15748  012894  0EDC               	movlw	-36
 15749  012896  006F FF8F FFE9     	movff	plusw1,fsr0l
 15750  01289C  0EDD               	movlw	-35
 15751  01289E  006F FF8F FFEA     	movff	plusw1,fsr0h
 15752  0128A4  006F FFB8  F00B    	movff	postinc0,btemp+10
 15753  0128AA  006F FFB4  F00C    	movff	postdec0,btemp+11
 15754  0128B0  0E02               	movlw	2
 15755  0128B2  260B               	addwf	(btemp+10)^0,f,c
 15756  0128B4  0E00               	movlw	0
 15757  0128B6  220C               	addwfc	(btemp+11)^0,f,c
 15758  0128B8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15759  0128BE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15760  0128C4                     	if	0	;tblptru may be non-zero
 15761  0128C4                     	endif
 15762  0128C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15763  0128C4  0E00               	movlw	low (__mediumconst shr (0+16))
 15764  0128C6  6EF8               	movwf	tblptru,c
 15765  0128C8                     	endif
 15766  0128C8  0008               	tblrd		*
 15767  0128CA  50F5               	movf	tablat,w,c
 15768  0128CC  6EE6               	movwf	postinc1,c
 15769  0128CE  0E00               	movlw	0
 15770  0128D0  6EE6               	movwf	postinc1,c
 15771  0128D2  EC24  F0DE         	call	_tolower	;wreg free
 15772  0128D6  5001               	movf	btemp^0,w,c
 15773  0128D8  6EDF               	movwf	indf2,c
 15774  0128DA                     l13719:
 15775                           
 15776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 15777                           ;stkvar	_fmt @ sp[(-32)+-4]
 15778  0128DA  0EDC               	movlw	-36
 15779  0128DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15780  0128E2  0EDD               	movlw	-35
 15781  0128E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15782  0128EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 15783  0128F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 15784  0128F6                     	if	0	;tblptru may be non-zero
 15785  0128F6                     	endif
 15786  0128F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15787  0128F6  0E00               	movlw	low (__mediumconst shr (0+16))
 15788  0128F8  6EF8               	movwf	tblptru,c
 15789  0128FA                     	endif
 15790  0128FA  0008               	tblrd		*
 15791  0128FC  50F5               	movf	tablat,w,c
 15792  0128FE  0A63               	xorlw	99
 15793  012900  A4D8               	btfss	status,2,c
 15794  012902  D037               	goto	l13729
 15795                           
 15796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 15797                           ;stkvar	_fmt @ sp[(-32)+-4]
 15798  012904  0EDC               	movlw	-36
 15799  012906  006F FF8F FFD9     	movff	plusw1,fsr2l
 15800  01290C  0EDD               	movlw	-35
 15801  01290E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15802  012914  2ADE               	incf	postinc2,f,c
 15803  012916  0E00               	movlw	0
 15804  012918  22DD               	addwfc	postdec2,f,c
 15805                           
 15806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 15807                           ;stkvar	_ap @ sp[(-32)+-6]
 15808  01291A  0EDA               	movlw	-38
 15809  01291C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15810  012922  0EDB               	movlw	-37
 15811  012924  006F FF8F FFDA     	movff	plusw1,fsr2h
 15812  01292A  0E02               	movlw	2
 15813  01292C  5EDE               	subwf	postinc2,f,c
 15814  01292E  0E00               	movlw	0
 15815  012930  5ADD               	subwfb	postdec2,f,c
 15816  012932  006F FF78  F00B    	movff	postinc2,btemp+10
 15817  012938  006F FF74  F00C    	movff	postdec2,btemp+11
 15818  01293E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15819  012944  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15820  01294A  50DF               	movf	indf2,w,c
 15821  01294C  6E0C               	movwf	(btemp+11)^0,c
 15822                           
 15823                           ;stkvar	_c @ sp[(-32)+31]
 15824  01294E  0EFF               	movlw	-1
 15825  012950  0060  F033  FFE3   	movff	btemp+11,plusw1
 15826                           
 15827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 15828                           ;stkvar	_c @ sp[(-32)+31]
 15829  012956  0EFF               	movlw	-1
 15830  012958  50E3               	movf	plusw1,w,c
 15831  01295A  6EE6               	movwf	postinc1,c
 15832                           
 15833                           ;stkvar	_fp @ sp[(-33)+-2]
 15834  01295C  0EDD               	movlw	-35
 15835  01295E  006F FF8F FFE6     	movff	plusw1,postinc1
 15836  012964  006F FF8F FFE6     	movff	plusw1,postinc1
 15837  01296A  EC9E  F0DD         	call	_ctoa	;wreg free
 15838  01296E  EF32  F09A         	goto	l2623
 15839  012972                     l13729:
 15840                           
 15841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 15842                           ;stkvar	_fmt @ sp[(-32)+-4]
 15843  012972  0EDC               	movlw	-36
 15844  012974  006F FF8F FFD9     	movff	plusw1,fsr2l
 15845  01297A  0EDD               	movlw	-35
 15846  01297C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15847  012982  006F FF7B FFF6     	movff	postinc2,tblptrl
 15848  012988  006F FF77 FFF7     	movff	postdec2,tblptrh
 15849  01298E                     	if	0	;tblptru may be non-zero
 15850  01298E                     	endif
 15851  01298E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15852  01298E  0E00               	movlw	low (__mediumconst shr (0+16))
 15853  012990  6EF8               	movwf	tblptru,c
 15854  012992                     	endif
 15855  012992  0008               	tblrd		*
 15856  012994  50F5               	movf	tablat,w,c
 15857  012996  0A64               	xorlw	100
 15858  012998  B4D8               	btfsc	status,2,c
 15859  01299A  D015               	goto	u13040
 15860                           
 15861                           ;stkvar	_fmt @ sp[(-32)+-4]
 15862  01299C  0EDC               	movlw	-36
 15863  01299E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15864  0129A4  0EDD               	movlw	-35
 15865  0129A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15866  0129AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 15867  0129B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 15868  0129B8                     	if	0	;tblptru may be non-zero
 15869  0129B8                     	endif
 15870  0129B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15871  0129B8  0E00               	movlw	low (__mediumconst shr (0+16))
 15872  0129BA  6EF8               	movwf	tblptru,c
 15873  0129BC                     	endif
 15874  0129BC  0008               	tblrd		*
 15875  0129BE  50F5               	movf	tablat,w,c
 15876  0129C0  0A69               	xorlw	105
 15877  0129C2  A4D8               	btfss	status,2,c
 15878  0129C4  D076               	goto	l13741
 15879  0129C6                     u13040:
 15880                           
 15881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 15882                           ;stkvar	_fmt @ sp[(-32)+-4]
 15883  0129C6  0EDC               	movlw	-36
 15884  0129C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15885  0129CE  0EDD               	movlw	-35
 15886  0129D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 15887  0129D6  2ADE               	incf	postinc2,f,c
 15888  0129D8  0E00               	movlw	0
 15889  0129DA  22DD               	addwfc	postdec2,f,c
 15890                           
 15891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 15892                           ;stkvar	_ap @ sp[(-32)+-6]
 15893  0129DC  0EDA               	movlw	-38
 15894  0129DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15895  0129E4  0EDB               	movlw	-37
 15896  0129E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15897  0129EC  0E02               	movlw	2
 15898  0129EE  5EDE               	subwf	postinc2,f,c
 15899  0129F0  0E00               	movlw	0
 15900  0129F2  5ADD               	subwfb	postdec2,f,c
 15901  0129F4  006F FF78  F00B    	movff	postinc2,btemp+10
 15902  0129FA  006F FF74  F00C    	movff	postdec2,btemp+11
 15903  012A00  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15904  012A06  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15905  012A0C  006F FF78  F00B    	movff	postinc2,btemp+10
 15906  012A12  006F FF74  F00C    	movff	postdec2,btemp+11
 15907                           
 15908                           ;stkvar	_ll @ sp[(-32)+14]
 15909  012A18  0EEE               	movlw	-18
 15910  012A1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15911  012A20  0EEF               	movlw	-17
 15912  012A22  0060  F033  FFE3   	movff	btemp+11,plusw1
 15913  012A28  6A01               	clrf	btemp^0,c
 15914  012A2A  BEE3               	btfsc	plusw1,7,c
 15915  012A2C  6801               	setf	btemp^0,c
 15916  012A2E  0EF0               	movlw	-16
 15917  012A30  0060  F007  FFE3   	movff	btemp,plusw1
 15918  012A36  0EF1               	movlw	-15
 15919  012A38  0060  F007  FFE3   	movff	btemp,plusw1
 15920  012A3E  0EF2               	movlw	-14
 15921  012A40  0060  F007  FFE3   	movff	btemp,plusw1
 15922  012A46  0EF3               	movlw	-13
 15923  012A48  0060  F007  FFE3   	movff	btemp,plusw1
 15924  012A4E  0EF4               	movlw	-12
 15925  012A50  0060  F007  FFE3   	movff	btemp,plusw1
 15926  012A56  0EF5               	movlw	-11
 15927  012A58  0060  F007  FFE3   	movff	btemp,plusw1
 15928  012A5E                     l13737:
 15929                           
 15930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 15931                           ;stkvar	_ll @ sp[(-32)+14]
 15932  012A5E  50E1               	movf	fsr1l,w,c
 15933  012A60  0FEE               	addlw	-18
 15934  012A62  6ED9               	movwf	fsr2l,c
 15935  012A64  50E2               	movf	fsr1h,w,c
 15936  012A66  6EDA               	movwf	fsr2h,c
 15937  012A68  0EFF               	movlw	255
 15938  012A6A  22DA               	addwfc	fsr2h,f,c
 15939  012A6C  006F FF7B FFE6     	movff	postinc2,postinc1
 15940  012A72  006F FF7B FFE6     	movff	postinc2,postinc1
 15941  012A78  006F FF7B FFE6     	movff	postinc2,postinc1
 15942  012A7E  006F FF7B FFE6     	movff	postinc2,postinc1
 15943  012A84  006F FF7B FFE6     	movff	postinc2,postinc1
 15944  012A8A  006F FF7B FFE6     	movff	postinc2,postinc1
 15945  012A90  006F FF7B FFE6     	movff	postinc2,postinc1
 15946  012A96  006F FF7B FFE6     	movff	postinc2,postinc1
 15947                           
 15948                           ;stkvar	_fp @ sp[(-40)+-2]
 15949  012A9C  0ED6               	movlw	-42
 15950  012A9E  006F FF8F FFE6     	movff	plusw1,postinc1
 15951  012AA4  006F FF8F FFE6     	movff	plusw1,postinc1
 15952  012AAA  ECD8  F0AE         	call	_dtoa	;wreg free
 15953  012AAE  EF32  F09A         	goto	l2623
 15954  012AB2                     l13741:
 15955                           
 15956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 15957  012AB2  0E02               	movlw	2
 15958  012AB4  6EE6               	movwf	postinc1,c
 15959  012AB6  0E00               	movlw	0
 15960  012AB8  6EE6               	movwf	postinc1,c
 15961  012ABA  0EEA               	movlw	low STR_90
 15962  012ABC  6EE6               	movwf	postinc1,c
 15963  012ABE  0EFF               	movlw	high STR_90
 15964  012AC0  6EE6               	movwf	postinc1,c
 15965                           
 15966                           ;stkvar	_fmt @ sp[(-36)+-4]
 15967  012AC2  0ED8               	movlw	-40
 15968  012AC4  006F FF8F FFD9     	movff	plusw1,fsr2l
 15969  012ACA  0ED9               	movlw	-39
 15970  012ACC  006F FF8F FFDA     	movff	plusw1,fsr2h
 15971  012AD2  006F FF78  F00B    	movff	postinc2,btemp+10
 15972  012AD8  006F FF74  F00C    	movff	postdec2,btemp+11
 15973  012ADE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15974  012AE4  0060  F033  FFE6   	movff	btemp+11,postinc1
 15975  012AEA  EC05  F0C3         	call	_strncmp	;wreg free
 15976  012AEE  5001               	movf	btemp^0,w,c
 15977  012AF0  1002               	iorwf	(btemp+1)^0,w,c
 15978  012AF2  B4D8               	btfsc	status,2,c
 15979  012AF4  D022               	goto	u13060
 15980  012AF6  0E02               	movlw	2
 15981  012AF8  6EE6               	movwf	postinc1,c
 15982  012AFA  0E00               	movlw	0
 15983  012AFC  6EE6               	movwf	postinc1,c
 15984  012AFE  0EF0               	movlw	low STR_94
 15985  012B00  6EE6               	movwf	postinc1,c
 15986  012B02  0EFF               	movlw	high STR_94
 15987  012B04  6EE6               	movwf	postinc1,c
 15988                           
 15989                           ;stkvar	_fmt @ sp[(-36)+-4]
 15990  012B06  0ED8               	movlw	-40
 15991  012B08  006F FF8F FFD9     	movff	plusw1,fsr2l
 15992  012B0E  0ED9               	movlw	-39
 15993  012B10  006F FF8F FFDA     	movff	plusw1,fsr2h
 15994  012B16  006F FF78  F00B    	movff	postinc2,btemp+10
 15995  012B1C  006F FF74  F00C    	movff	postdec2,btemp+11
 15996  012B22  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15997  012B28  0060  F033  FFE6   	movff	btemp+11,postinc1
 15998  012B2E  EC05  F0C3         	call	_strncmp	;wreg free
 15999  012B32  5001               	movf	btemp^0,w,c
 16000  012B34  1002               	iorwf	(btemp+1)^0,w,c
 16001  012B36  A4D8               	btfss	status,2,c
 16002  012B38  D069               	goto	l13753
 16003  012B3A                     u13060:
 16004                           
 16005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 16006                           ;stkvar	_fmt @ sp[(-32)+-4]
 16007  012B3A  0EDC               	movlw	-36
 16008  012B3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16009  012B42  0EDD               	movlw	-35
 16010  012B44  006F FF8F FFDA     	movff	plusw1,fsr2h
 16011  012B4A  0E02               	movlw	2
 16012  012B4C  26DE               	addwf	postinc2,f,c
 16013  012B4E  0E00               	movlw	0
 16014  012B50  22DD               	addwfc	postdec2,f,c
 16015                           
 16016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 16017                           ;stkvar	_ap @ sp[(-32)+-6]
 16018  012B52  0EDA               	movlw	-38
 16019  012B54  006F FF8F FFD9     	movff	plusw1,fsr2l
 16020  012B5A  0EDB               	movlw	-37
 16021  012B5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16022  012B62  0E04               	movlw	4
 16023  012B64  5EDE               	subwf	postinc2,f,c
 16024  012B66  0E00               	movlw	0
 16025  012B68  5ADD               	subwfb	postdec2,f,c
 16026  012B6A  006F FF78  F00B    	movff	postinc2,btemp+10
 16027  012B70  006F FF74  F00C    	movff	postdec2,btemp+11
 16028  012B76  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16029  012B7C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16030  012B82  006F FF78  F009    	movff	postinc2,btemp+8
 16031  012B88  006F FF78  F00A    	movff	postinc2,btemp+9
 16032  012B8E  006F FF78  F00B    	movff	postinc2,btemp+10
 16033  012B94  006F FF78  F00C    	movff	postinc2,btemp+11
 16034  012B9A  0060  F024  F011   	movff	btemp+8,btemp+16
 16035  012BA0  0060  F028  F012   	movff	btemp+9,btemp+17
 16036  012BA6  0060  F02C  F013   	movff	btemp+10,btemp+18
 16037  012BAC  0060  F030  F014   	movff	btemp+11,btemp+19
 16038  012BB2  6A15               	clrf	(btemp+20)^0,c
 16039  012BB4  BE14               	btfsc	(btemp+19)^0,7,c
 16040  012BB6  6815               	setf	(btemp+20)^0,c
 16041  012BB8  0060  F054  F016   	movff	btemp+20,btemp+21
 16042  012BBE  0060  F054  F017   	movff	btemp+20,btemp+22
 16043  012BC4  0060  F054  F018   	movff	btemp+20,btemp+23
 16044                           
 16045                           ;stkvar	_ll @ sp[(-32)+14]
 16046  012BCA  0EEE               	movlw	-18
 16047  012BCC  0060  F047  FFE3   	movff	btemp+16,plusw1
 16048  012BD2  0EEF               	movlw	-17
 16049  012BD4  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16050  012BDA  0EF0               	movlw	-16
 16051  012BDC  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16052  012BE2  0EF1               	movlw	-15
 16053  012BE4  0060  F053  FFE3   	movff	btemp+19,plusw1
 16054  012BEA  0EF2               	movlw	-14
 16055  012BEC  0060  F057  FFE3   	movff	btemp+20,plusw1
 16056  012BF2  0EF3               	movlw	-13
 16057  012BF4  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16058  012BFA  0EF4               	movlw	-12
 16059  012BFC  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16060  012C02  0EF5               	movlw	-11
 16061  012C04  0060  F063  FFE3   	movff	btemp+23,plusw1
 16062  012C0A  D729               	goto	l13737
 16063  012C0C                     l13753:
 16064                           
 16065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 16066                           ;stkvar	_ct @ sp[(-32)+26]
 16067  012C0C  0EFA               	movlw	-6
 16068  012C0E  006F FF8C  F001    	movff	plusw1,btemp
 16069  012C14  0E66               	movlw	102
 16070  012C16  1801               	xorwf	btemp^0,w,c
 16071  012C18  A4D8               	btfss	status,2,c
 16072  012C1A  D06E               	goto	l13765
 16073                           
 16074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 16075                           ;stkvar	_fmt @ sp[(-32)+-4]
 16076  012C1C  0EDC               	movlw	-36
 16077  012C1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16078  012C24  0EDD               	movlw	-35
 16079  012C26  006F FF8F FFDA     	movff	plusw1,fsr2h
 16080  012C2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16081  012C32  006F FF77 FFF7     	movff	postdec2,tblptrh
 16082  012C38                     	if	0	;tblptru may be non-zero
 16083  012C38                     	endif
 16084  012C38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16085  012C38  0E00               	movlw	low (__mediumconst shr (0+16))
 16086  012C3A  6EF8               	movwf	tblptru,c
 16087  012C3C                     	endif
 16088                           
 16089                           ;stkvar	_c @ sp[(-32)+31]
 16090  012C3C  0008               	tblrd		*
 16091  012C3E  0EFF               	movlw	-1
 16092  012C40  006F FFD7 FFE3     	movff	tablat,plusw1
 16093                           
 16094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 16095                           ;stkvar	_fmt @ sp[(-32)+-4]
 16096  012C46  0EDC               	movlw	-36
 16097  012C48  006F FF8F FFD9     	movff	plusw1,fsr2l
 16098  012C4E  0EDD               	movlw	-35
 16099  012C50  006F FF8F FFDA     	movff	plusw1,fsr2h
 16100  012C56  2ADE               	incf	postinc2,f,c
 16101  012C58  0E00               	movlw	0
 16102  012C5A  22DD               	addwfc	postdec2,f,c
 16103                           
 16104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 16105                           ;stkvar	_ap @ sp[(-32)+-6]
 16106  012C5C  0EDA               	movlw	-38
 16107  012C5E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16108  012C64  0EDB               	movlw	-37
 16109  012C66  006F FF8F FFDA     	movff	plusw1,fsr2h
 16110  012C6C  0E04               	movlw	4
 16111  012C6E  5EDE               	subwf	postinc2,f,c
 16112  012C70  0E00               	movlw	0
 16113  012C72  5ADD               	subwfb	postdec2,f,c
 16114  012C74  006F FF78  F00B    	movff	postinc2,btemp+10
 16115  012C7A  006F FF74  F00C    	movff	postdec2,btemp+11
 16116  012C80  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16117  012C86  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16118  012C8C  006F FF78  F009    	movff	postinc2,btemp+8
 16119  012C92  006F FF78  F00A    	movff	postinc2,btemp+9
 16120  012C98  006F FF78  F00B    	movff	postinc2,btemp+10
 16121  012C9E  006F FF78  F00C    	movff	postinc2,btemp+11
 16122                           
 16123                           ;stkvar	_f @ sp[(-32)+22]
 16124  012CA4  0EF6               	movlw	-10
 16125  012CA6  0060  F027  FFE3   	movff	btemp+8,plusw1
 16126  012CAC  0EF7               	movlw	-9
 16127  012CAE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16128  012CB4  0EF8               	movlw	-8
 16129  012CB6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16130  012CBC  0EF9               	movlw	-7
 16131  012CBE  0060  F033  FFE3   	movff	btemp+11,plusw1
 16132  012CC4                     l13761:
 16133                           
 16134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 16135                           ;stkvar	_c @ sp[(-32)+31]
 16136  012CC4  0EFF               	movlw	-1
 16137  012CC6  50E3               	movf	plusw1,w,c
 16138  012CC8  6EE6               	movwf	postinc1,c
 16139                           
 16140                           ;stkvar	_f @ sp[(-33)+22]
 16141  012CCA  0EF5               	movlw	-11
 16142  012CCC  006F FF8F FFE6     	movff	plusw1,postinc1
 16143  012CD2  006F FF8F FFE6     	movff	plusw1,postinc1
 16144  012CD8  006F FF8F FFE6     	movff	plusw1,postinc1
 16145  012CDE  006F FF8F FFE6     	movff	plusw1,postinc1
 16146                           
 16147                           ;stkvar	_fp @ sp[(-37)+-2]
 16148  012CE4  0ED9               	movlw	-39
 16149  012CE6  006F FF8F FFE6     	movff	plusw1,postinc1
 16150  012CEC  006F FF8F FFE6     	movff	plusw1,postinc1
 16151  012CF2  EC3F  F089         	call	_efgtoa	;wreg free
 16152  012CF6  D3B6               	goto	l2623
 16153  012CF8                     l13765:
 16154                           
 16155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 16156  012CF8  0E02               	movlw	2
 16157  012CFA  6EE6               	movwf	postinc1,c
 16158  012CFC  0E00               	movlw	0
 16159  012CFE  6EE6               	movwf	postinc1,c
 16160  012D00  0EED               	movlw	low STR_99
 16161  012D02  6EE6               	movwf	postinc1,c
 16162  012D04  0EFF               	movlw	high STR_99
 16163  012D06  6EE6               	movwf	postinc1,c
 16164                           
 16165                           ;stkvar	_ct @ sp[(-36)+26]
 16166  012D08  0EF6               	movlw	246
 16167  012D0A  24E1               	addwf	fsr1l,w,c
 16168  012D0C  6E01               	movwf	btemp^0,c
 16169  012D0E  0EFF               	movlw	255
 16170  012D10  20E2               	addwfc	fsr1h,w,c
 16171  012D12  6E02               	movwf	(btemp+1)^0,c
 16172  012D14  0060  F007  FFE6   	movff	btemp,postinc1
 16173  012D1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16174  012D20  EC05  F0C3         	call	_strncmp	;wreg free
 16175  012D24  5001               	movf	btemp^0,w,c
 16176  012D26  1002               	iorwf	(btemp+1)^0,w,c
 16177  012D28  A4D8               	btfss	status,2,c
 16178  012D2A  D096               	goto	l13785
 16179                           
 16180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 16181                           ;stkvar	_fmt @ sp[(-32)+-4]
 16182  012D2C  0EDC               	movlw	-36
 16183  012D2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16184  012D34  0EDD               	movlw	-35
 16185  012D36  006F FF8F FFDA     	movff	plusw1,fsr2h
 16186  012D3C  006F FF78  F00B    	movff	postinc2,btemp+10
 16187  012D42  006F FF74  F00C    	movff	postdec2,btemp+11
 16188  012D48  0E01               	movlw	1
 16189  012D4A  260B               	addwf	(btemp+10)^0,f,c
 16190  012D4C  0E00               	movlw	0
 16191  012D4E  220C               	addwfc	(btemp+11)^0,f,c
 16192  012D50  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16193  012D56  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16194  012D5C                     	if	0	;tblptru may be non-zero
 16195  012D5C                     	endif
 16196  012D5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16197  012D5C  0E00               	movlw	low (__mediumconst shr (0+16))
 16198  012D5E  6EF8               	movwf	tblptru,c
 16199  012D60                     	endif
 16200                           
 16201                           ;stkvar	_c @ sp[(-32)+31]
 16202  012D60  0008               	tblrd		*
 16203  012D62  0EFF               	movlw	-1
 16204  012D64  006F FFD7 FFE3     	movff	tablat,plusw1
 16205  012D6A  0EBF               	movlw	191
 16206  012D6C  6E0B               	movwf	(btemp+10)^0,c
 16207  012D6E  0EFF               	movlw	255
 16208  012D70  6E0C               	movwf	(btemp+11)^0,c
 16209                           
 16210                           ;stkvar	_fmt @ sp[(-32)+-4]
 16211  012D72  0EDC               	movlw	-36
 16212  012D74  006F FF8F FFD9     	movff	plusw1,fsr2l
 16213  012D7A  0EDD               	movlw	-35
 16214  012D7C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16215  012D82  006F FF7B FFF6     	movff	postinc2,tblptrl
 16216  012D88  006F FF77 FFF7     	movff	postdec2,tblptrh
 16217  012D8E                     	if	0	;tblptru may be non-zero
 16218  012D8E                     	endif
 16219  012D8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16220  012D8E  0E00               	movlw	low (__mediumconst shr (0+16))
 16221  012D90  6EF8               	movwf	tblptru,c
 16222  012D92                     	endif
 16223  012D92  0008               	tblrd		*
 16224  012D94  50F5               	movf	tablat,w,c
 16225  012D96  6E09               	movwf	(btemp+8)^0,c
 16226  012D98  6A0A               	clrf	(btemp+9)^0,c
 16227  012D9A  500B               	movf	(btemp+10)^0,w,c
 16228  012D9C  2609               	addwf	(btemp+8)^0,f,c
 16229  012D9E  500C               	movf	(btemp+11)^0,w,c
 16230  012DA0  220A               	addwfc	(btemp+9)^0,f,c
 16231  012DA2  500A               	movf	(btemp+9)^0,w,c
 16232  012DA4  E106               	bnz	u13090
 16233  012DA6  0E1A               	movlw	26
 16234  012DA8  5C09               	subwf	(btemp+8)^0,w,c
 16235  012DAA  B0D8               	btfsc	status,0,c
 16236  012DAC  D002               	goto	u13090
 16237  012DAE  0E01               	movlw	1
 16238  012DB0  D001               	goto	u13100
 16239  012DB2                     u13090:
 16240  012DB2  0E00               	movlw	0
 16241  012DB4                     u13100:
 16242  012DB4  6E0B               	movwf	(btemp+10)^0,c
 16243  012DB6  6A0C               	clrf	(btemp+11)^0,c
 16244                           
 16245                           ;stkvar	_vfpfcnvrt$6231 @ sp[(-32)+2]
 16246  012DB8  0EE2               	movlw	-30
 16247  012DBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16248  012DC0  0EE3               	movlw	-29
 16249  012DC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16250                           
 16251                           ;stkvar	_vfpfcnvrt$6231 @ sp[(-32)+2]
 16252  012DC8  0EE2               	movlw	-30
 16253  012DCA  006F FF8C  F001    	movff	plusw1,btemp
 16254  012DD0  0EE3               	movlw	-29
 16255  012DD2  50E3               	movf	plusw1,w,c
 16256  012DD4  1001               	iorwf	btemp^0,w,c
 16257                           
 16258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 16259                           ;stkvar	_ap @ sp[(-32)+-6]
 16260                           
 16261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 16262                           
 16263                           ;stkvar	_f @ sp[(-32)+22]
 16264                           
 16265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 16266                           ;stkvar	_ap @ sp[(-32)+-6]
 16267  012DD6  0EDA               	movlw	-38
 16268  012DD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16269  012DDE  0EDB               	movlw	-37
 16270  012DE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16271  012DE6  0E04               	movlw	4
 16272  012DE8  5EDE               	subwf	postinc2,f,c
 16273  012DEA  0E00               	movlw	0
 16274  012DEC  5ADD               	subwfb	postdec2,f,c
 16275  012DEE  006F FF78  F00B    	movff	postinc2,btemp+10
 16276  012DF4  006F FF74  F00C    	movff	postdec2,btemp+11
 16277  012DFA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16278  012E00  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16279  012E06  006F FF78  F009    	movff	postinc2,btemp+8
 16280  012E0C  006F FF78  F00A    	movff	postinc2,btemp+9
 16281  012E12  006F FF78  F00B    	movff	postinc2,btemp+10
 16282  012E18  006F FF78  F00C    	movff	postinc2,btemp+11
 16283                           
 16284                           ;stkvar	_f @ sp[(-32)+22]
 16285  012E1E  0EF6               	movlw	-10
 16286  012E20  0060  F027  FFE3   	movff	btemp+8,plusw1
 16287  012E26  0EF7               	movlw	-9
 16288  012E28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16289  012E2E  0EF8               	movlw	-8
 16290  012E30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16291  012E36  0EF9               	movlw	-7
 16292  012E38  0060  F033  FFE3   	movff	btemp+11,plusw1
 16293                           
 16294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 16295                           ;stkvar	_fmt @ sp[(-32)+-4]
 16296  012E3E  0EDC               	movlw	-36
 16297  012E40  006F FF8F FFD9     	movff	plusw1,fsr2l
 16298  012E46  0EDD               	movlw	-35
 16299  012E48  006F FF8F FFDA     	movff	plusw1,fsr2h
 16300  012E4E  0E02               	movlw	2
 16301  012E50  26DE               	addwf	postinc2,f,c
 16302  012E52  0E00               	movlw	0
 16303  012E54  22DD               	addwfc	postdec2,f,c
 16304  012E56  D736               	goto	l13761
 16305  012E58                     l13785:
 16306                           
 16307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 16308                           ;stkvar	_fmt @ sp[(-32)+-4]
 16309  012E58  0EDC               	movlw	-36
 16310  012E5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16311  012E60  0EDD               	movlw	-35
 16312  012E62  006F FF8F FFDA     	movff	plusw1,fsr2h
 16313  012E68  006F FF7B FFF6     	movff	postinc2,tblptrl
 16314  012E6E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16315  012E74                     	if	0	;tblptru may be non-zero
 16316  012E74                     	endif
 16317  012E74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16318  012E74  0E00               	movlw	low (__mediumconst shr (0+16))
 16319  012E76  6EF8               	movwf	tblptru,c
 16320  012E78                     	endif
 16321  012E78  0008               	tblrd		*
 16322  012E7A  50F5               	movf	tablat,w,c
 16323  012E7C  0A73               	xorlw	115
 16324  012E7E  A4D8               	btfss	status,2,c
 16325  012E80  D042               	goto	l13795
 16326                           
 16327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 16328                           ;stkvar	_fmt @ sp[(-32)+-4]
 16329  012E82  0EDC               	movlw	-36
 16330  012E84  006F FF8F FFD9     	movff	plusw1,fsr2l
 16331  012E8A  0EDD               	movlw	-35
 16332  012E8C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16333  012E92  2ADE               	incf	postinc2,f,c
 16334  012E94  0E00               	movlw	0
 16335  012E96  22DD               	addwfc	postdec2,f,c
 16336                           
 16337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 16338                           ;stkvar	_ap @ sp[(-32)+-6]
 16339  012E98  0EDA               	movlw	-38
 16340  012E9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16341  012EA0  0EDB               	movlw	-37
 16342  012EA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16343  012EA8  0E02               	movlw	2
 16344  012EAA  5EDE               	subwf	postinc2,f,c
 16345  012EAC  0E00               	movlw	0
 16346  012EAE  5ADD               	subwfb	postdec2,f,c
 16347  012EB0  006F FF78  F00B    	movff	postinc2,btemp+10
 16348  012EB6  006F FF74  F00C    	movff	postdec2,btemp+11
 16349  012EBC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16350  012EC2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16351  012EC8  006F FF78  F00B    	movff	postinc2,btemp+10
 16352  012ECE  006F FF74  F00C    	movff	postdec2,btemp+11
 16353                           
 16354                           ;stkvar	_cp @ sp[(-32)+29]
 16355  012ED4  0EFE               	movlw	-2
 16356  012ED6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16357  012EDC  0EFD               	movlw	-3
 16358  012EDE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16359                           
 16360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 16361                           ;stkvar	_cp @ sp[(-32)+29]
 16362  012EE4  0EFD               	movlw	-3
 16363  012EE6  006F FF8F FFE6     	movff	plusw1,postinc1
 16364  012EEC  006F FF8F FFE6     	movff	plusw1,postinc1
 16365                           
 16366                           ;stkvar	_fp @ sp[(-34)+-2]
 16367  012EF2  0EDC               	movlw	-36
 16368  012EF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16369  012EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 16370  012F00  ECE9  F0BC         	call	_stoa	;wreg free
 16371  012F04  D2AF               	goto	l2623
 16372  012F06                     l13795:
 16373                           
 16374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 16375                           ;stkvar	_fmt @ sp[(-32)+-4]
 16376  012F06  0EDC               	movlw	-36
 16377  012F08  006F FF8F FFD9     	movff	plusw1,fsr2l
 16378  012F0E  0EDD               	movlw	-35
 16379  012F10  006F FF8F FFDA     	movff	plusw1,fsr2h
 16380  012F16  006F FF7B FFF6     	movff	postinc2,tblptrl
 16381  012F1C  006F FF77 FFF7     	movff	postdec2,tblptrh
 16382  012F22                     	if	0	;tblptru may be non-zero
 16383  012F22                     	endif
 16384  012F22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16385  012F22  0E00               	movlw	low (__mediumconst shr (0+16))
 16386  012F24  6EF8               	movwf	tblptru,c
 16387  012F26                     	endif
 16388  012F26  0008               	tblrd		*
 16389  012F28  50F5               	movf	tablat,w,c
 16390  012F2A  0A75               	xorlw	117
 16391  012F2C  A4D8               	btfss	status,2,c
 16392  012F2E  D07C               	goto	l13805
 16393                           
 16394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 16395                           ;stkvar	_fmt @ sp[(-32)+-4]
 16396  012F30  0EDC               	movlw	-36
 16397  012F32  006F FF8F FFD9     	movff	plusw1,fsr2l
 16398  012F38  0EDD               	movlw	-35
 16399  012F3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16400  012F40  2ADE               	incf	postinc2,f,c
 16401  012F42  0E00               	movlw	0
 16402  012F44  22DD               	addwfc	postdec2,f,c
 16403                           
 16404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 16405                           ;stkvar	_ap @ sp[(-32)+-6]
 16406  012F46  0EDA               	movlw	-38
 16407  012F48  006F FF8F FFD9     	movff	plusw1,fsr2l
 16408  012F4E  0EDB               	movlw	-37
 16409  012F50  006F FF8F FFDA     	movff	plusw1,fsr2h
 16410  012F56  0E02               	movlw	2
 16411  012F58  5EDE               	subwf	postinc2,f,c
 16412  012F5A  0E00               	movlw	0
 16413  012F5C  5ADD               	subwfb	postdec2,f,c
 16414  012F5E  006F FF78  F00B    	movff	postinc2,btemp+10
 16415  012F64  006F FF74  F00C    	movff	postdec2,btemp+11
 16416  012F6A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16417  012F70  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16418  012F76  006F FF78  F00B    	movff	postinc2,btemp+10
 16419  012F7C  006F FF74  F00C    	movff	postdec2,btemp+11
 16420  012F82  500B               	movf	(btemp+10)^0,w,c
 16421  012F84  6E11               	movwf	(btemp+16)^0,c
 16422  012F86  500C               	movf	(btemp+11)^0,w,c
 16423  012F88  6E12               	movwf	(btemp+17)^0,c
 16424  012F8A  6A13               	clrf	(btemp+18)^0,c
 16425  012F8C  6A14               	clrf	(btemp+19)^0,c
 16426  012F8E  6A15               	clrf	(btemp+20)^0,c
 16427  012F90  6A16               	clrf	(btemp+21)^0,c
 16428  012F92  6A17               	clrf	(btemp+22)^0,c
 16429  012F94  6A18               	clrf	(btemp+23)^0,c
 16430                           
 16431                           ;stkvar	_llu @ sp[(-32)+6]
 16432  012F96  0EE6               	movlw	-26
 16433  012F98  0060  F047  FFE3   	movff	btemp+16,plusw1
 16434  012F9E  0EE7               	movlw	-25
 16435  012FA0  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16436  012FA6  0EE8               	movlw	-24
 16437  012FA8  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16438  012FAE  0EE9               	movlw	-23
 16439  012FB0  0060  F053  FFE3   	movff	btemp+19,plusw1
 16440  012FB6  0EEA               	movlw	-22
 16441  012FB8  0060  F057  FFE3   	movff	btemp+20,plusw1
 16442  012FBE  0EEB               	movlw	-21
 16443  012FC0  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16444  012FC6  0EEC               	movlw	-20
 16445  012FC8  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16446  012FCE  0EED               	movlw	-19
 16447  012FD0  0060  F063  FFE3   	movff	btemp+23,plusw1
 16448                           
 16449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 16450                           ;stkvar	_llu @ sp[(-32)+6]
 16451  012FD6  50E1               	movf	fsr1l,w,c
 16452  012FD8  0FE6               	addlw	-26
 16453  012FDA  6ED9               	movwf	fsr2l,c
 16454  012FDC  50E2               	movf	fsr1h,w,c
 16455  012FDE  6EDA               	movwf	fsr2h,c
 16456  012FE0  0EFF               	movlw	255
 16457  012FE2  22DA               	addwfc	fsr2h,f,c
 16458  012FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 16459  012FEA  006F FF7B FFE6     	movff	postinc2,postinc1
 16460  012FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 16461  012FF6  006F FF7B FFE6     	movff	postinc2,postinc1
 16462  012FFC  006F FF7B FFE6     	movff	postinc2,postinc1
 16463  013002  006F FF7B FFE6     	movff	postinc2,postinc1
 16464  013008  006F FF7B FFE6     	movff	postinc2,postinc1
 16465  01300E  006F FF7B FFE6     	movff	postinc2,postinc1
 16466                           
 16467                           ;stkvar	_fp @ sp[(-40)+-2]
 16468  013014  0ED6               	movlw	-42
 16469  013016  006F FF8F FFE6     	movff	plusw1,postinc1
 16470  01301C  006F FF8F FFE6     	movff	plusw1,postinc1
 16471  013022  ECD1  F0B6         	call	_utoa	;wreg free
 16472  013026  D21E               	goto	l2623
 16473  013028                     l13805:
 16474                           
 16475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 16476  013028  0E02               	movlw	2
 16477  01302A  6EE6               	movwf	postinc1,c
 16478  01302C  0E00               	movlw	0
 16479  01302E  6EE6               	movwf	postinc1,c
 16480  013030  0EF3               	movlw	low STR_104
 16481  013032  6EE6               	movwf	postinc1,c
 16482  013034  0EFF               	movlw	high STR_104
 16483  013036  6EE6               	movwf	postinc1,c
 16484                           
 16485                           ;stkvar	_fmt @ sp[(-36)+-4]
 16486  013038  0ED8               	movlw	-40
 16487  01303A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16488  013040  0ED9               	movlw	-39
 16489  013042  006F FF8F FFDA     	movff	plusw1,fsr2h
 16490  013048  006F FF78  F00B    	movff	postinc2,btemp+10
 16491  01304E  006F FF74  F00C    	movff	postdec2,btemp+11
 16492  013054  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16493  01305A  0060  F033  FFE6   	movff	btemp+11,postinc1
 16494  013060  EC05  F0C3         	call	_strncmp	;wreg free
 16495  013064  5001               	movf	btemp^0,w,c
 16496  013066  1002               	iorwf	(btemp+1)^0,w,c
 16497  013068  A4D8               	btfss	status,2,c
 16498  01306A  D039               	goto	l13815
 16499                           
 16500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 16501                           ;stkvar	_fmt @ sp[(-32)+-4]
 16502  01306C  0EDC               	movlw	-36
 16503  01306E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16504  013074  0EDD               	movlw	-35
 16505  013076  006F FF8F FFDA     	movff	plusw1,fsr2h
 16506  01307C  0E02               	movlw	2
 16507  01307E  26DE               	addwf	postinc2,f,c
 16508  013080  0E00               	movlw	0
 16509  013082  22DD               	addwfc	postdec2,f,c
 16510                           
 16511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 16512                           ;stkvar	_ap @ sp[(-32)+-6]
 16513  013084  0EDA               	movlw	-38
 16514  013086  006F FF8F FFD9     	movff	plusw1,fsr2l
 16515  01308C  0EDB               	movlw	-37
 16516  01308E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16517  013094  0E04               	movlw	4
 16518  013096  5EDE               	subwf	postinc2,f,c
 16519  013098  0E00               	movlw	0
 16520  01309A  5ADD               	subwfb	postdec2,f,c
 16521  01309C  006F FF78  F00B    	movff	postinc2,btemp+10
 16522  0130A2  006F FF74  F00C    	movff	postdec2,btemp+11
 16523  0130A8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16524  0130AE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16525  0130B4  006F FF78  F009    	movff	postinc2,btemp+8
 16526  0130BA  006F FF78  F00A    	movff	postinc2,btemp+9
 16527  0130C0  006F FF78  F00B    	movff	postinc2,btemp+10
 16528  0130C6  006F FF78  F00C    	movff	postinc2,btemp+11
 16529  0130CC  5009               	movf	(btemp+8)^0,w,c
 16530  0130CE  6E11               	movwf	(btemp+16)^0,c
 16531  0130D0  500A               	movf	(btemp+9)^0,w,c
 16532  0130D2  6E12               	movwf	(btemp+17)^0,c
 16533  0130D4  500B               	movf	(btemp+10)^0,w,c
 16534  0130D6  6E13               	movwf	(btemp+18)^0,c
 16535  0130D8  500C               	movf	(btemp+11)^0,w,c
 16536  0130DA  6E14               	movwf	(btemp+19)^0,c
 16537  0130DC  D758               	goto	L15
 16538  0130DE                     l13815:
 16539                           
 16540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 16541                           ;stkvar	_fmt @ sp[(-32)+-4]
 16542  0130DE  0EDC               	movlw	-36
 16543  0130E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16544  0130E6  0EDD               	movlw	-35
 16545  0130E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16546  0130EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 16547  0130F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 16548  0130FA                     	if	0	;tblptru may be non-zero
 16549  0130FA                     	endif
 16550  0130FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16551  0130FA  0E00               	movlw	low (__mediumconst shr (0+16))
 16552  0130FC  6EF8               	movwf	tblptru,c
 16553  0130FE                     	endif
 16554  0130FE  0008               	tblrd		*
 16555  013100  50F5               	movf	tablat,w,c
 16556  013102  0A78               	xorlw	120
 16557  013104  B4D8               	btfsc	status,2,c
 16558  013106  D015               	goto	u13160
 16559                           
 16560                           ;stkvar	_fmt @ sp[(-32)+-4]
 16561  013108  0EDC               	movlw	-36
 16562  01310A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16563  013110  0EDD               	movlw	-35
 16564  013112  006F FF8F FFDA     	movff	plusw1,fsr2h
 16565  013118  006F FF7B FFF6     	movff	postinc2,tblptrl
 16566  01311E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16567  013124                     	if	0	;tblptru may be non-zero
 16568  013124                     	endif
 16569  013124                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16570  013124  0E00               	movlw	low (__mediumconst shr (0+16))
 16571  013126  6EF8               	movwf	tblptru,c
 16572  013128                     	endif
 16573  013128  0008               	tblrd		*
 16574  01312A  50F5               	movf	tablat,w,c
 16575  01312C  0A58               	xorlw	88
 16576  01312E  A4D8               	btfss	status,2,c
 16577  013130  D094               	goto	l13829
 16578  013132                     u13160:
 16579                           
 16580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 16581                           ;stkvar	_fmt @ sp[(-32)+-4]
 16582  013132  0EDC               	movlw	-36
 16583  013134  006F FF8F FFD9     	movff	plusw1,fsr2l
 16584  01313A  0EDD               	movlw	-35
 16585  01313C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16586  013142  006F FF7B FFF6     	movff	postinc2,tblptrl
 16587  013148  006F FF77 FFF7     	movff	postdec2,tblptrh
 16588  01314E                     	if	0	;tblptru may be non-zero
 16589  01314E                     	endif
 16590  01314E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16591  01314E  0E00               	movlw	low (__mediumconst shr (0+16))
 16592  013150  6EF8               	movwf	tblptru,c
 16593  013152                     	endif
 16594                           
 16595                           ;stkvar	_c @ sp[(-32)+31]
 16596  013152  0008               	tblrd		*
 16597  013154  0EFF               	movlw	-1
 16598  013156  006F FFD7 FFE3     	movff	tablat,plusw1
 16599                           
 16600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 16601                           ;stkvar	_fmt @ sp[(-32)+-4]
 16602  01315C  0EDC               	movlw	-36
 16603  01315E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16604  013164  0EDD               	movlw	-35
 16605  013166  006F FF8F FFDA     	movff	plusw1,fsr2h
 16606  01316C  2ADE               	incf	postinc2,f,c
 16607  01316E  0E00               	movlw	0
 16608  013170  22DD               	addwfc	postdec2,f,c
 16609                           
 16610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 16611                           ;stkvar	_ap @ sp[(-32)+-6]
 16612  013172  0EDA               	movlw	-38
 16613  013174  006F FF8F FFD9     	movff	plusw1,fsr2l
 16614  01317A  0EDB               	movlw	-37
 16615  01317C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16616  013182  0E02               	movlw	2
 16617  013184  5EDE               	subwf	postinc2,f,c
 16618  013186  0E00               	movlw	0
 16619  013188  5ADD               	subwfb	postdec2,f,c
 16620  01318A  006F FF78  F00B    	movff	postinc2,btemp+10
 16621  013190  006F FF74  F00C    	movff	postdec2,btemp+11
 16622  013196  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16623  01319C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16624  0131A2  006F FF78  F00B    	movff	postinc2,btemp+10
 16625  0131A8  006F FF74  F00C    	movff	postdec2,btemp+11
 16626  0131AE  500B               	movf	(btemp+10)^0,w,c
 16627  0131B0  6E11               	movwf	(btemp+16)^0,c
 16628  0131B2  500C               	movf	(btemp+11)^0,w,c
 16629  0131B4  6E12               	movwf	(btemp+17)^0,c
 16630  0131B6  6A13               	clrf	(btemp+18)^0,c
 16631  0131B8  6A14               	clrf	(btemp+19)^0,c
 16632  0131BA  6A15               	clrf	(btemp+20)^0,c
 16633  0131BC  6A16               	clrf	(btemp+21)^0,c
 16634  0131BE  6A17               	clrf	(btemp+22)^0,c
 16635  0131C0  6A18               	clrf	(btemp+23)^0,c
 16636                           
 16637                           ;stkvar	_llu @ sp[(-32)+6]
 16638  0131C2  0EE6               	movlw	-26
 16639  0131C4  0060  F047  FFE3   	movff	btemp+16,plusw1
 16640  0131CA  0EE7               	movlw	-25
 16641  0131CC  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16642  0131D2  0EE8               	movlw	-24
 16643  0131D4  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16644  0131DA  0EE9               	movlw	-23
 16645  0131DC  0060  F053  FFE3   	movff	btemp+19,plusw1
 16646  0131E2  0EEA               	movlw	-22
 16647  0131E4  0060  F057  FFE3   	movff	btemp+20,plusw1
 16648  0131EA  0EEB               	movlw	-21
 16649  0131EC  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16650  0131F2  0EEC               	movlw	-20
 16651  0131F4  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16652  0131FA  0EED               	movlw	-19
 16653  0131FC  0060  F063  FFE3   	movff	btemp+23,plusw1
 16654                           
 16655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 16656                           ;stkvar	_c @ sp[(-32)+31]
 16657  013202  0EFF               	movlw	-1
 16658  013204  50E3               	movf	plusw1,w,c
 16659  013206  6EE6               	movwf	postinc1,c
 16660                           
 16661                           ;stkvar	_llu @ sp[(-33)+6]
 16662  013208  50E1               	movf	fsr1l,w,c
 16663  01320A  0FE5               	addlw	-27
 16664  01320C  6ED9               	movwf	fsr2l,c
 16665  01320E  50E2               	movf	fsr1h,w,c
 16666  013210  6EDA               	movwf	fsr2h,c
 16667  013212  0EFF               	movlw	255
 16668  013214  22DA               	addwfc	fsr2h,f,c
 16669  013216  006F FF7B FFE6     	movff	postinc2,postinc1
 16670  01321C  006F FF7B FFE6     	movff	postinc2,postinc1
 16671  013222  006F FF7B FFE6     	movff	postinc2,postinc1
 16672  013228  006F FF7B FFE6     	movff	postinc2,postinc1
 16673  01322E  006F FF7B FFE6     	movff	postinc2,postinc1
 16674  013234  006F FF7B FFE6     	movff	postinc2,postinc1
 16675  01323A  006F FF7B FFE6     	movff	postinc2,postinc1
 16676  013240  006F FF7B FFE6     	movff	postinc2,postinc1
 16677                           
 16678                           ;stkvar	_fp @ sp[(-41)+-2]
 16679  013246  0ED5               	movlw	-43
 16680  013248  006F FF8F FFE6     	movff	plusw1,postinc1
 16681  01324E  006F FF8F FFE6     	movff	plusw1,postinc1
 16682  013254  EC3E  F0B3         	call	_xtoa	;wreg free
 16683  013258  D105               	goto	l2623
 16684  01325A                     l13829:
 16685                           
 16686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 16687  01325A  0E02               	movlw	2
 16688  01325C  6EE6               	movwf	postinc1,c
 16689  01325E  0E00               	movlw	0
 16690  013260  6EE6               	movwf	postinc1,c
 16691  013262  0EF6               	movlw	low STR_109
 16692  013264  6EE6               	movwf	postinc1,c
 16693  013266  0EFF               	movlw	high STR_109
 16694  013268  6EE6               	movwf	postinc1,c
 16695                           
 16696                           ;stkvar	_fmt @ sp[(-36)+-4]
 16697  01326A  0ED8               	movlw	-40
 16698  01326C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16699  013272  0ED9               	movlw	-39
 16700  013274  006F FF8F FFDA     	movff	plusw1,fsr2h
 16701  01327A  006F FF78  F00B    	movff	postinc2,btemp+10
 16702  013280  006F FF74  F00C    	movff	postdec2,btemp+11
 16703  013286  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16704  01328C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16705  013292  EC05  F0C3         	call	_strncmp	;wreg free
 16706  013296  5001               	movf	btemp^0,w,c
 16707  013298  1002               	iorwf	(btemp+1)^0,w,c
 16708  01329A  B4D8               	btfsc	status,2,c
 16709  01329C  D022               	goto	u13180
 16710  01329E  0E02               	movlw	2
 16711  0132A0  6EE6               	movwf	postinc1,c
 16712  0132A2  0E00               	movlw	0
 16713  0132A4  6EE6               	movwf	postinc1,c
 16714  0132A6  0EE7               	movlw	low STR_113
 16715  0132A8  6EE6               	movwf	postinc1,c
 16716  0132AA  0EFF               	movlw	high STR_113
 16717  0132AC  6EE6               	movwf	postinc1,c
 16718                           
 16719                           ;stkvar	_fmt @ sp[(-36)+-4]
 16720  0132AE  0ED8               	movlw	-40
 16721  0132B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16722  0132B6  0ED9               	movlw	-39
 16723  0132B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16724  0132BE  006F FF78  F00B    	movff	postinc2,btemp+10
 16725  0132C4  006F FF74  F00C    	movff	postdec2,btemp+11
 16726  0132CA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16727  0132D0  0060  F033  FFE6   	movff	btemp+11,postinc1
 16728  0132D6  EC05  F0C3         	call	_strncmp	;wreg free
 16729  0132DA  5001               	movf	btemp^0,w,c
 16730  0132DC  1002               	iorwf	(btemp+1)^0,w,c
 16731  0132DE  A4D8               	btfss	status,2,c
 16732  0132E0  D058               	goto	l13843
 16733  0132E2                     u13180:
 16734                           
 16735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 16736                           ;stkvar	_fmt @ sp[(-32)+-4]
 16737  0132E2  0EDC               	movlw	-36
 16738  0132E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 16739  0132EA  0EDD               	movlw	-35
 16740  0132EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 16741  0132F2  006F FF78  F00B    	movff	postinc2,btemp+10
 16742  0132F8  006F FF74  F00C    	movff	postdec2,btemp+11
 16743  0132FE  0E01               	movlw	1
 16744  013300  260B               	addwf	(btemp+10)^0,f,c
 16745  013302  0E00               	movlw	0
 16746  013304  220C               	addwfc	(btemp+11)^0,f,c
 16747  013306  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 16748  01330C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 16749  013312                     	if	0	;tblptru may be non-zero
 16750  013312                     	endif
 16751  013312                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16752  013312  0E00               	movlw	low (__mediumconst shr (0+16))
 16753  013314  6EF8               	movwf	tblptru,c
 16754  013316                     	endif
 16755                           
 16756                           ;stkvar	_c @ sp[(-32)+31]
 16757  013316  0008               	tblrd		*
 16758  013318  0EFF               	movlw	-1
 16759  01331A  006F FFD7 FFE3     	movff	tablat,plusw1
 16760                           
 16761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 16762                           ;stkvar	_fmt @ sp[(-32)+-4]
 16763  013320  0EDC               	movlw	-36
 16764  013322  006F FF8F FFD9     	movff	plusw1,fsr2l
 16765  013328  0EDD               	movlw	-35
 16766  01332A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16767  013330  0E02               	movlw	2
 16768  013332  26DE               	addwf	postinc2,f,c
 16769  013334  0E00               	movlw	0
 16770  013336  22DD               	addwfc	postdec2,f,c
 16771                           
 16772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 16773                           ;stkvar	_ap @ sp[(-32)+-6]
 16774  013338  0EDA               	movlw	-38
 16775  01333A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16776  013340  0EDB               	movlw	-37
 16777  013342  006F FF8F FFDA     	movff	plusw1,fsr2h
 16778  013348  0E04               	movlw	4
 16779  01334A  5EDE               	subwf	postinc2,f,c
 16780  01334C  0E00               	movlw	0
 16781  01334E  5ADD               	subwfb	postdec2,f,c
 16782  013350  006F FF78  F00B    	movff	postinc2,btemp+10
 16783  013356  006F FF74  F00C    	movff	postdec2,btemp+11
 16784  01335C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16785  013362  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16786  013368  006F FF78  F009    	movff	postinc2,btemp+8
 16787  01336E  006F FF78  F00A    	movff	postinc2,btemp+9
 16788  013374  006F FF78  F00B    	movff	postinc2,btemp+10
 16789  01337A  006F FF78  F00C    	movff	postinc2,btemp+11
 16790  013380  5009               	movf	(btemp+8)^0,w,c
 16791  013382  6E11               	movwf	(btemp+16)^0,c
 16792  013384  500A               	movf	(btemp+9)^0,w,c
 16793  013386  6E12               	movwf	(btemp+17)^0,c
 16794  013388  500B               	movf	(btemp+10)^0,w,c
 16795  01338A  6E13               	movwf	(btemp+18)^0,c
 16796  01338C  500C               	movf	(btemp+11)^0,w,c
 16797  01338E  6E14               	movwf	(btemp+19)^0,c
 16798  013390  D714               	goto	L16
 16799  013392                     l13843:
 16800                           
 16801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 16802                           ;stkvar	_fmt @ sp[(-32)+-4]
 16803  013392  0EDC               	movlw	-36
 16804  013394  006F FF8F FFD9     	movff	plusw1,fsr2l
 16805  01339A  0EDD               	movlw	-35
 16806  01339C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16807  0133A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 16808  0133A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 16809  0133AE                     	if	0	;tblptru may be non-zero
 16810  0133AE                     	endif
 16811  0133AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16812  0133AE  0E00               	movlw	low (__mediumconst shr (0+16))
 16813  0133B0  6EF8               	movwf	tblptru,c
 16814  0133B2                     	endif
 16815  0133B2  0008               	tblrd		*
 16816  0133B4  50F5               	movf	tablat,w,c
 16817  0133B6  0A25               	xorlw	37
 16818  0133B8  A4D8               	btfss	status,2,c
 16819  0133BA  D01A               	goto	l13853
 16820                           
 16821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 16822                           ;stkvar	_fmt @ sp[(-32)+-4]
 16823  0133BC  0EDC               	movlw	-36
 16824  0133BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 16825  0133C4  0EDD               	movlw	-35
 16826  0133C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 16827  0133CC  2ADE               	incf	postinc2,f,c
 16828  0133CE  0E00               	movlw	0
 16829  0133D0  22DD               	addwfc	postdec2,f,c
 16830                           
 16831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 16832                           ;stkvar	_fp @ sp[(-32)+-2]
 16833  0133D2  0EDE               	movlw	-34
 16834  0133D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16835  0133DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16836  0133E0  0E25               	movlw	37
 16837  0133E2  6EE6               	movwf	postinc1,c
 16838  0133E4  0E00               	movlw	0
 16839  0133E6  6EE6               	movwf	postinc1,c
 16840  0133E8  ECF0  F0D1         	call	_fputc	;wreg free
 16841  0133EC                     l13849:
 16842                           
 16843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 16844  0133EC  0E01               	movlw	1
 16845  0133EE  D00C               	goto	L17
 16846  0133F0                     l13853:
 16847                           
 16848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 16849                           ;stkvar	_fmt @ sp[(-32)+-4]
 16850  0133F0  0EDC               	movlw	-36
 16851  0133F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16852  0133F8  0EDD               	movlw	-35
 16853  0133FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16854  013400  2ADE               	incf	postinc2,f,c
 16855  013402  0E00               	movlw	0
 16856  013404  22DD               	addwfc	postdec2,f,c
 16857                           
 16858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 16859  013406  0E00               	movlw	0
 16860  013408                     L17:
 16861  013408  6E01               	movwf	btemp^0,c
 16862  01340A  0E00               	movlw	0
 16863  01340C  6E02               	movwf	(btemp+1)^0,c
 16864  01340E  D02A               	goto	l2623
 16865  013410                     l13859:
 16866                           
 16867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 16868                           ;stkvar	_fp @ sp[(-32)+-2]
 16869  013410  0EDE               	movlw	-34
 16870  013412  006F FF8F FFE6     	movff	plusw1,postinc1
 16871  013418  006F FF8F FFE6     	movff	plusw1,postinc1
 16872                           
 16873                           ;stkvar	_fmt @ sp[(-34)+-4]
 16874  01341E  0EDA               	movlw	-38
 16875  013420  006F FF8F FFD9     	movff	plusw1,fsr2l
 16876  013426  0EDB               	movlw	-37
 16877  013428  006F FF8F FFDA     	movff	plusw1,fsr2h
 16878  01342E  006F FF7B FFF6     	movff	postinc2,tblptrl
 16879  013434  006F FF77 FFF7     	movff	postdec2,tblptrh
 16880  01343A                     	if	0	;tblptru may be non-zero
 16881  01343A                     	endif
 16882  01343A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16883  01343A  0E00               	movlw	low (__mediumconst shr (0+16))
 16884  01343C  6EF8               	movwf	tblptru,c
 16885  01343E                     	endif
 16886  01343E  0008               	tblrd		*
 16887  013440  50F5               	movf	tablat,w,c
 16888  013442  6EE6               	movwf	postinc1,c
 16889  013444  0E00               	movlw	0
 16890  013446  6EE6               	movwf	postinc1,c
 16891  013448  ECF0  F0D1         	call	_fputc	;wreg free
 16892                           
 16893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 16894                           ;stkvar	_fmt @ sp[(-32)+-4]
 16895  01344C  0EDC               	movlw	-36
 16896  01344E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16897  013454  0EDD               	movlw	-35
 16898  013456  006F FF8F FFDA     	movff	plusw1,fsr2h
 16899  01345C  2ADE               	incf	postinc2,f,c
 16900  01345E  0E00               	movlw	0
 16901  013460  22DD               	addwfc	postdec2,f,c
 16902  013462  D7C4               	goto	l13849
 16903  013464                     l2623:
 16904                           
 16905                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 16906  013464  0EDA               	movlw	218
 16907  013466  26E1               	addwf	fsr1l,f,c
 16908  013468  0EFF               	movlw	255
 16909  01346A  22E2               	addwfc	fsr1h,f,c
 16910  01346C  0012               	return		;funcret
 16911  01346E                     __end_of_vfpfcnvrt:
 16912                           	opt callstack 0
 16913                           
 16914 ;; *************** function _xtoa *****************
 16915 ;; Defined at:
 16916 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16917 ;; Parameters:    Size  Location     Type
 16918 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16919 ;;		 -> f(6), NULL(0), 
 16920 ;;  d               8  [STACK] unsigned long long 
 16921 ;;  x               1  [STACK] unsigned char 
 16922 ;; Auto vars:     Size  Location     Type
 16923 ;;  n               8  [STACK] unsigned long long 
 16924 ;;  c               2  [STACK] int 
 16925 ;;  i               2  [STACK] int 
 16926 ;;  w               2  [STACK] int 
 16927 ;;  p               2  [STACK] int 
 16928 ;; Return value:  Size  Location     Type
 16929 ;;                  2  [STACK] int 
 16930 ;; Registers used:
 16931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16932 ;; Tracked objects:
 16933 ;;		On entry : 0/0
 16934 ;;		On exit  : 0/0
 16935 ;;		Unchanged: 0/0
 16936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16941 ;;Total ram usage:        0 bytes
 16942 ;; Hardware stack levels used:    1
 16943 ;; Hardware stack levels required when called:   20
 16944 ;; This function calls:
 16945 ;;		_isalpha
 16946 ;;		_isupper
 16947 ;;		_pad
 16948 ;;		_toupper
 16949 ;; This function is called by:
 16950 ;;		_vfpfcnvrt
 16951 ;; This function uses a reentrant model
 16952 ;;
 16953                           
 16954                           	psect	text66
 16955  01667C                     __ptext66:
 16956                           	opt callstack 0
 16957  01667C                     _xtoa:
 16958                           	opt callstack 0
 16959                           
 16960                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16961  01667C  0E14               	movlw	20
 16962  01667E  26E1               	addwf	fsr1l,f,c
 16963  016680  0E00               	movlw	0
 16964  016682  22E2               	addwfc	fsr1h,f,c
 16965                           
 16966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 16967                           
 16968                           ;incstack = 0
 16969 ;; hardware stack exceeded
 16970  016684  AE3D               	btfss	(_prec+1)^0,7,c
 16971                           
 16972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 16973  016686  923E               	bcf	_flags^0,1,c
 16974                           
 16975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 16976  016688  BE3D               	btfsc	(_prec+1)^0,7,c
 16977  01668A  D005               	goto	u12720
 16978  01668C  503D               	movf	(_prec+1)^0,w,c
 16979  01668E  E110               	bnz	l13579
 16980  016690  043C               	decf	_prec^0,w,c
 16981  016692  B0D8               	btfsc	status,0,c
 16982  016694  D00D               	goto	l13579
 16983  016696                     u12720:
 16984  016696  0E01               	movlw	1
 16985  016698  6E0B               	movwf	(btemp+10)^0,c
 16986  01669A  0E00               	movlw	0
 16987  01669C  6E0C               	movwf	(btemp+11)^0,c
 16988                           
 16989                           ;stkvar	_p @ sp[(-20)+18]
 16990  01669E  0EFE               	movlw	-2
 16991  0166A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16992  0166A6  0EFF               	movlw	-1
 16993  0166A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 16994  0166AE  D008               	goto	l2573
 16995  0166B0                     l13579:
 16996                           
 16997                           ;stkvar	_p @ sp[(-20)+18]
 16998  0166B0  0EFE               	movlw	-2
 16999  0166B2  0060  F0F3  FFE3   	movff	_prec,plusw1
 17000  0166B8  0EFF               	movlw	-1
 17001  0166BA  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17002  0166C0                     l2573:
 17003                           
 17004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 17005                           ;stkvar	_w @ sp[(-20)+16]
 17006  0166C0  0EFC               	movlw	-4
 17007  0166C2  0060  F0EB  FFE3   	movff	_width,plusw1
 17008  0166C8  0EFD               	movlw	-3
 17009  0166CA  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17010                           
 17011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 17012  0166D0  A83E               	btfss	_flags^0,4,c
 17013  0166D2  D00B               	goto	l13585
 17014                           
 17015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 17016                           ;stkvar	_w @ sp[(-20)+16]
 17017  0166D4  50E1               	movf	fsr1l,w,c
 17018  0166D6  0FFC               	addlw	-4
 17019  0166D8  6ED9               	movwf	fsr2l,c
 17020  0166DA  50E2               	movf	fsr1h,w,c
 17021  0166DC  6EDA               	movwf	fsr2h,c
 17022  0166DE  0EFF               	movlw	255
 17023  0166E0  22DA               	addwfc	fsr2h,f,c
 17024  0166E2  0EFE               	movlw	254
 17025  0166E4  26DE               	addwf	postinc2,f,c
 17026  0166E6  0EFF               	movlw	255
 17027  0166E8  22DD               	addwfc	postdec2,f,c
 17028  0166EA                     l13585:
 17029                           
 17030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 17031                           ;stkvar	_d @ sp[(-20)+-10]
 17032  0166EA  0EE2               	movlw	226
 17033  0166EC  24E1               	addwf	fsr1l,w,c
 17034  0166EE  6ED9               	movwf	fsr2l,c
 17035  0166F0  0EFF               	movlw	255
 17036  0166F2  20E2               	addwfc	fsr1h,w,c
 17037  0166F4  6EDA               	movwf	fsr2h,c
 17038                           
 17039                           ;stkvar	_n @ sp[(-20)+4]
 17040  0166F6  0E08               	movlw	8
 17041  0166F8  6E01               	movwf	btemp^0,c
 17042  0166FA  0EF0               	movlw	-16
 17043  0166FC                     us1274999:
 17044  0166FC  006F FF7B FFE3     	movff	postinc2,plusw1
 17045  016702  28E8               	incf	wreg,w,c
 17046  016704  2E01               	decfsz	btemp^0,f,c
 17047  016706  D7FA               	bra	us1274999
 17048                           
 17049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 17050  016708  0E4F               	movlw	79
 17051  01670A  6E0B               	movwf	(btemp+10)^0,c
 17052  01670C  0E00               	movlw	0
 17053  01670E  6E0C               	movwf	(btemp+11)^0,c
 17054                           
 17055                           ;stkvar	_i @ sp[(-20)+14]
 17056  016710  0EFA               	movlw	-6
 17057  016712  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17058  016718  0EFB               	movlw	-5
 17059  01671A  0060  F033  FFE3   	movff	btemp+11,plusw1
 17060                           
 17061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 17062  016720  0102               	movlb	2	; () banked
 17063  016722  6B92               	clrf	(_dbuf+79)& (0+255),b
 17064                           
 17065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17066  016724  D0EE               	goto	l13623
 17067  016726                     l13591:
 17068                           
 17069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 17070                           ;stkvar	_i @ sp[(-20)+14]
 17071  016726  50E1               	movf	fsr1l,w,c
 17072  016728  0FFA               	addlw	-6
 17073  01672A  6ED9               	movwf	fsr2l,c
 17074  01672C  50E2               	movf	fsr1h,w,c
 17075  01672E  6EDA               	movwf	fsr2h,c
 17076  016730  0EFF               	movlw	255
 17077  016732  22DA               	addwfc	fsr2h,f,c
 17078  016734  06DE               	decf	postinc2,f,c
 17079  016736  0E00               	movlw	0
 17080  016738  5ADD               	subwfb	postdec2,f,c
 17081                           
 17082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 17083                           ;stkvar	_n @ sp[(-20)+4]
 17084  01673A  0EF0               	movlw	-16
 17085  01673C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17086  016742  0EF1               	movlw	-15
 17087  016744  006F FF8C  F00C    	movff	plusw1,btemp+11
 17088  01674A  0E0F               	movlw	15
 17089  01674C  160B               	andwf	(btemp+10)^0,f,c
 17090  01674E  0E00               	movlw	0
 17091  016750  160C               	andwf	(btemp+11)^0,f,c
 17092                           
 17093                           ;stkvar	_c @ sp[(-20)+12]
 17094  016752  0EF8               	movlw	-8
 17095  016754  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17096  01675A  0EF9               	movlw	-7
 17097  01675C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17098                           
 17099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 17100                           ;stkvar	_c @ sp[(-20)+12]
 17101  016762  0EF9               	movlw	-7
 17102  016764  BEE3               	btfsc	plusw1,7,c
 17103  016766  D00F               	goto	l13599
 17104  016768  0EF9               	movlw	-7
 17105  01676A  50E3               	movf	plusw1,w,c
 17106  01676C  E108               	bnz	u12750
 17107  01676E  0EF8               	movlw	-8
 17108  016770  006F FF8C  F001    	movff	plusw1,btemp
 17109  016776  0E0A               	movlw	10
 17110  016778  5E01               	subwf	btemp^0,f,c
 17111  01677A  A0D8               	btfss	status,0,c
 17112  01677C  D004               	goto	l13599
 17113  01677E                     u12750:
 17114                           
 17115                           ;stkvar	_c @ sp[(-20)+12]
 17116  01677E  0EF8               	movlw	-8
 17117  016780  50E3               	movf	plusw1,w,c
 17118  016782  0F57               	addlw	87
 17119  016784  D003               	goto	L18
 17120  016786                     l13599:
 17121                           
 17122                           ;stkvar	_c @ sp[(-20)+12]
 17123  016786  0EF8               	movlw	-8
 17124  016788  50E3               	movf	plusw1,w,c
 17125  01678A  0F30               	addlw	48
 17126  01678C                     L18:
 17127  01678C  6E0B               	movwf	(btemp+10)^0,c
 17128  01678E  0EF9               	movlw	-7
 17129  016790  006F FF8C  F00C    	movff	plusw1,btemp+11
 17130  016796  0E00               	movlw	0
 17131  016798  220C               	addwfc	(btemp+11)^0,f,c
 17132                           
 17133                           ;stkvar	_c @ sp[(-20)+12]
 17134  01679A  0EF8               	movlw	-8
 17135  01679C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17136  0167A2  0EF9               	movlw	-7
 17137  0167A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17138  0167AA  0EBF               	movlw	191
 17139  0167AC  6E0B               	movwf	(btemp+10)^0,c
 17140  0167AE  0EFF               	movlw	255
 17141  0167B0  6E0C               	movwf	(btemp+11)^0,c
 17142                           
 17143                           ;stkvar	_x @ sp[(-20)+-11]
 17144  0167B2  0EE1               	movlw	-31
 17145  0167B4  50E3               	movf	plusw1,w,c
 17146  0167B6  6E09               	movwf	(btemp+8)^0,c
 17147  0167B8  6A0A               	clrf	(btemp+9)^0,c
 17148  0167BA  500B               	movf	(btemp+10)^0,w,c
 17149  0167BC  2609               	addwf	(btemp+8)^0,f,c
 17150  0167BE  500C               	movf	(btemp+11)^0,w,c
 17151  0167C0  220A               	addwfc	(btemp+9)^0,f,c
 17152  0167C2  500A               	movf	(btemp+9)^0,w,c
 17153  0167C4  E106               	bnz	u12760
 17154  0167C6  0E1A               	movlw	26
 17155  0167C8  5C09               	subwf	(btemp+8)^0,w,c
 17156  0167CA  B0D8               	btfsc	status,0,c
 17157  0167CC  D002               	goto	u12760
 17158  0167CE  0E01               	movlw	1
 17159  0167D0  D001               	goto	u12770
 17160  0167D2                     u12760:
 17161  0167D2  0E00               	movlw	0
 17162  0167D4                     u12770:
 17163  0167D4  6E0B               	movwf	(btemp+10)^0,c
 17164  0167D6  6A0C               	clrf	(btemp+11)^0,c
 17165                           
 17166                           ;stkvar	_xtoa$6204 @ sp[(-20)+2]
 17167  0167D8  0EEE               	movlw	-18
 17168  0167DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17169  0167E0  0EEF               	movlw	-17
 17170  0167E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17171                           
 17172                           ;stkvar	_xtoa$6204 @ sp[(-20)+2]
 17173  0167E8  0EEE               	movlw	-18
 17174  0167EA  006F FF8C  F001    	movff	plusw1,btemp
 17175  0167F0  0EEF               	movlw	-17
 17176  0167F2  50E3               	movf	plusw1,w,c
 17177  0167F4  1001               	iorwf	btemp^0,w,c
 17178  0167F6  B4D8               	btfsc	status,2,c
 17179  0167F8  D041               	goto	l13615
 17180  0167FA  0E9F               	movlw	159
 17181  0167FC  6E0B               	movwf	(btemp+10)^0,c
 17182  0167FE  0EFF               	movlw	255
 17183  016800  6E0C               	movwf	(btemp+11)^0,c
 17184                           
 17185                           ;stkvar	_c @ sp[(-20)+12]
 17186  016802  0EF8               	movlw	-8
 17187  016804  006F FF8C  F009    	movff	plusw1,btemp+8
 17188  01680A  0EF9               	movlw	-7
 17189  01680C  006F FF8C  F00A    	movff	plusw1,btemp+9
 17190  016812  0E20               	movlw	32
 17191  016814  1209               	iorwf	(btemp+8)^0,f,c
 17192  016816  0E00               	movlw	0
 17193  016818  120A               	iorwf	(btemp+9)^0,f,c
 17194  01681A  500B               	movf	(btemp+10)^0,w,c
 17195  01681C  2609               	addwf	(btemp+8)^0,f,c
 17196  01681E  500C               	movf	(btemp+11)^0,w,c
 17197  016820  220A               	addwfc	(btemp+9)^0,f,c
 17198  016822  500A               	movf	(btemp+9)^0,w,c
 17199  016824  E106               	bnz	u12790
 17200  016826  0E1A               	movlw	26
 17201  016828  5C09               	subwf	(btemp+8)^0,w,c
 17202  01682A  B0D8               	btfsc	status,0,c
 17203  01682C  D002               	goto	u12790
 17204  01682E  0E01               	movlw	1
 17205  016830  D001               	goto	u12800
 17206  016832                     u12790:
 17207  016832  0E00               	movlw	0
 17208  016834                     u12800:
 17209  016834  6E0B               	movwf	(btemp+10)^0,c
 17210  016836  6A0C               	clrf	(btemp+11)^0,c
 17211                           
 17212                           ;stkvar	_xtoa$6205 @ sp[(-20)+0]
 17213  016838  0EEC               	movlw	-20
 17214  01683A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17215  016840  0EED               	movlw	-19
 17216  016842  0060  F033  FFE3   	movff	btemp+11,plusw1
 17217                           
 17218                           ;stkvar	_xtoa$6205 @ sp[(-20)+0]
 17219  016848  0EEC               	movlw	-20
 17220  01684A  006F FF8C  F001    	movff	plusw1,btemp
 17221  016850  0EED               	movlw	-19
 17222  016852  50E3               	movf	plusw1,w,c
 17223  016854  1001               	iorwf	btemp^0,w,c
 17224  016856  B4D8               	btfsc	status,2,c
 17225  016858  D011               	goto	l13615
 17226                           
 17227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 17228                           ;stkvar	_c @ sp[(-20)+12]
 17229  01685A  0EF8               	movlw	-8
 17230  01685C  006F FF8F FFE6     	movff	plusw1,postinc1
 17231  016862  006F FF8F FFE6     	movff	plusw1,postinc1
 17232  016868  ECE2  F0DD         	call	_toupper	;wreg free
 17233                           
 17234                           ;stkvar	_c @ sp[(-20)+12]
 17235  01686C  0EF8               	movlw	-8
 17236  01686E  0060  F007  FFE3   	movff	btemp,plusw1
 17237  016874  0EF9               	movlw	-7
 17238  016876  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17239  01687C                     l13615:
 17240                           
 17241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 17242                           ;stkvar	_c @ sp[(-20)+12]
 17243                           ;stkvar	_i @ sp[(-20)+14]
 17244  01687C  0EFA               	movlw	-6
 17245  01687E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17246  016884  0EFB               	movlw	-5
 17247  016886  006F FF8C  F00C    	movff	plusw1,btemp+11
 17248  01688C  0E43               	movlw	low _dbuf
 17249  01688E  240B               	addwf	(btemp+10)^0,w,c
 17250  016890  6ED9               	movwf	fsr2l,c
 17251  016892  0E02               	movlw	high _dbuf
 17252  016894  200C               	addwfc	(btemp+11)^0,w,c
 17253  016896  6EDA               	movwf	fsr2h,c
 17254  016898  0EF8               	movlw	-8
 17255  01689A  006F FF8F FFDF     	movff	plusw1,indf2
 17256                           
 17257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 17258                           ;stkvar	_p @ sp[(-20)+18]
 17259  0168A0  50E1               	movf	fsr1l,w,c
 17260  0168A2  0FFE               	addlw	-2
 17261  0168A4  6ED9               	movwf	fsr2l,c
 17262  0168A6  50E2               	movf	fsr1h,w,c
 17263  0168A8  6EDA               	movwf	fsr2h,c
 17264  0168AA  0EFF               	movlw	255
 17265  0168AC  22DA               	addwfc	fsr2h,f,c
 17266  0168AE  06DE               	decf	postinc2,f,c
 17267  0168B0  0E00               	movlw	0
 17268  0168B2  5ADD               	subwfb	postdec2,f,c
 17269                           
 17270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 17271                           ;stkvar	_w @ sp[(-20)+16]
 17272  0168B4  50E1               	movf	fsr1l,w,c
 17273  0168B6  0FFC               	addlw	-4
 17274  0168B8  6ED9               	movwf	fsr2l,c
 17275  0168BA  50E2               	movf	fsr1h,w,c
 17276  0168BC  6EDA               	movwf	fsr2h,c
 17277  0168BE  0EFF               	movlw	255
 17278  0168C0  22DA               	addwfc	fsr2h,f,c
 17279  0168C2  06DE               	decf	postinc2,f,c
 17280  0168C4  0E00               	movlw	0
 17281  0168C6  5ADD               	subwfb	postdec2,f,c
 17282                           
 17283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 17284  0168C8  0E04               	movlw	4
 17285  0168CA  6E0C               	movwf	(btemp+11)^0,c
 17286                           
 17287                           ;stkvar	_n @ sp[(-20)+4]
 17288  0168CC  50E1               	movf	fsr1l,w,c
 17289  0168CE  0FF0               	addlw	-16
 17290  0168D0  6ED9               	movwf	fsr2l,c
 17291  0168D2  50E2               	movf	fsr1h,w,c
 17292  0168D4  6EDA               	movwf	fsr2h,c
 17293  0168D6  0EFF               	movlw	255
 17294  0168D8  22DA               	addwfc	fsr2h,f,c
 17295  0168DA  280C               	incf	(btemp+11)^0,w,c
 17296  0168DC  52DE               	movf	postinc2,f,c
 17297  0168DE  D00F               	goto	u12820
 17298  0168E0                     u12825:
 17299  0168E0  52DE               	movf	postinc2,f,c
 17300  0168E2  52DE               	movf	postinc2,f,c
 17301  0168E4  52DE               	movf	postinc2,f,c
 17302  0168E6  52DE               	movf	postinc2,f,c
 17303  0168E8  52DE               	movf	postinc2,f,c
 17304  0168EA  52DE               	movf	postinc2,f,c
 17305  0168EC  90D8               	bcf	status,0,c
 17306  0168EE  32DD               	rrcf	postdec2,f,c
 17307  0168F0  32DD               	rrcf	postdec2,f,c
 17308  0168F2  32DD               	rrcf	postdec2,f,c
 17309  0168F4  32DD               	rrcf	postdec2,f,c
 17310  0168F6  32DD               	rrcf	postdec2,f,c
 17311  0168F8  32DD               	rrcf	postdec2,f,c
 17312  0168FA  32DD               	rrcf	postdec2,f,c
 17313  0168FC  32DE               	rrcf	postinc2,f,c
 17314  0168FE                     u12820:
 17315  0168FE  2EE8               	decfsz	wreg,f,c
 17316  016900  D7EF               	goto	u12825
 17317  016902                     l13623:
 17318                           
 17319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17320                           ;stkvar	_i @ sp[(-20)+14]
 17321  016902  0EFB               	movlw	-5
 17322  016904  BEE3               	btfsc	plusw1,7,c
 17323  016906  D03A               	goto	u12870
 17324  016908  0EFB               	movlw	-5
 17325  01690A  50E3               	movf	plusw1,w,c
 17326  01690C  E108               	bnz	u12830
 17327  01690E  0EFA               	movlw	-6
 17328  016910  006F FF8C  F001    	movff	plusw1,btemp
 17329  016916  0E02               	movlw	2
 17330  016918  5E01               	subwf	btemp^0,f,c
 17331  01691A  A0D8               	btfss	status,0,c
 17332  01691C  D02F               	goto	u12870
 17333  01691E                     u12830:
 17334                           
 17335                           ;stkvar	_n @ sp[(-20)+4]
 17336  01691E  0EF0               	movlw	-16
 17337  016920  50E3               	movf	plusw1,w,c
 17338  016922  E115               	bnz	u12841
 17339  016924  0EF1               	movlw	-15
 17340  016926  50E3               	movf	plusw1,w,c
 17341  016928  E112               	bnz	u12841
 17342  01692A  0EF2               	movlw	-14
 17343  01692C  50E3               	movf	plusw1,w,c
 17344  01692E  E10F               	bnz	u12841
 17345  016930  0EF3               	movlw	-13
 17346  016932  50E3               	movf	plusw1,w,c
 17347  016934  E10C               	bnz	u12841
 17348  016936  0EF4               	movlw	-12
 17349  016938  50E3               	movf	plusw1,w,c
 17350  01693A  E109               	bnz	u12841
 17351  01693C  0EF5               	movlw	-11
 17352  01693E  50E3               	movf	plusw1,w,c
 17353  016940  E106               	bnz	u12841
 17354  016942  0EF6               	movlw	-10
 17355  016944  50E3               	movf	plusw1,w,c
 17356  016946  E103               	bnz	u12841
 17357  016948  0EF7               	movlw	-9
 17358  01694A  50E3               	movf	plusw1,w,c
 17359  01694C  A4D8               	btfss	status,2,c
 17360  01694E                     u12841:
 17361  01694E  D6EB               	goto	l13591
 17362                           
 17363                           ;stkvar	_p @ sp[(-20)+18]
 17364  016950  0EFF               	movlw	-1
 17365  016952  BEE3               	btfsc	plusw1,7,c
 17366  016954  D007               	goto	u12850
 17367  016956  0EFF               	movlw	-1
 17368  016958  50E3               	movf	plusw1,w,c
 17369  01695A  E103               	bnz	u12851
 17370  01695C  0EFE               	movlw	-2
 17371  01695E  04E3               	decf	plusw1,w,c
 17372  016960  B0D8               	btfsc	status,0,c
 17373  016962                     u12851:
 17374  016962  D6E1               	goto	l13591
 17375  016964                     u12850:
 17376                           
 17377                           ;stkvar	_w @ sp[(-20)+16]
 17378  016964  0EFD               	movlw	-3
 17379  016966  BEE3               	btfsc	plusw1,7,c
 17380  016968  D009               	goto	u12870
 17381  01696A  0EFD               	movlw	-3
 17382  01696C  50E3               	movf	plusw1,w,c
 17383  01696E  E104               	bnz	u12860
 17384  016970  0EFC               	movlw	-4
 17385  016972  04E3               	decf	plusw1,w,c
 17386  016974  A0D8               	btfss	status,0,c
 17387  016976  D002               	goto	u12870
 17388  016978                     u12860:
 17389  016978  B23E               	btfsc	_flags^0,1,c
 17390  01697A  D6D5               	goto	l13591
 17391  01697C                     u12870:
 17392                           
 17393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 17394  01697C  A83E               	btfss	_flags^0,4,c
 17395  01697E  D036               	goto	l13639
 17396                           
 17397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 17398                           ;stkvar	_i @ sp[(-20)+14]
 17399  016980  50E1               	movf	fsr1l,w,c
 17400  016982  0FFA               	addlw	-6
 17401  016984  6ED9               	movwf	fsr2l,c
 17402  016986  50E2               	movf	fsr1h,w,c
 17403  016988  6EDA               	movwf	fsr2h,c
 17404  01698A  0EFF               	movlw	255
 17405  01698C  22DA               	addwfc	fsr2h,f,c
 17406  01698E  06DE               	decf	postinc2,f,c
 17407  016990  0E00               	movlw	0
 17408  016992  5ADD               	subwfb	postdec2,f,c
 17409                           
 17410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 17411                           ;stkvar	_x @ sp[(-20)+-11]
 17412                           ;stkvar	_i @ sp[(-20)+14]
 17413  016994  0EFA               	movlw	-6
 17414  016996  006F FF8C  F00B    	movff	plusw1,btemp+10
 17415  01699C  0EFB               	movlw	-5
 17416  01699E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17417  0169A4  0E43               	movlw	low _dbuf
 17418  0169A6  240B               	addwf	(btemp+10)^0,w,c
 17419  0169A8  6ED9               	movwf	fsr2l,c
 17420  0169AA  0E02               	movlw	high _dbuf
 17421  0169AC  200C               	addwfc	(btemp+11)^0,w,c
 17422  0169AE  6EDA               	movwf	fsr2h,c
 17423  0169B0  0EE1               	movlw	-31
 17424  0169B2  006F FF8F FFDF     	movff	plusw1,indf2
 17425                           
 17426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 17427                           ;stkvar	_i @ sp[(-20)+14]
 17428  0169B8  50E1               	movf	fsr1l,w,c
 17429  0169BA  0FFA               	addlw	-6
 17430  0169BC  6ED9               	movwf	fsr2l,c
 17431  0169BE  50E2               	movf	fsr1h,w,c
 17432  0169C0  6EDA               	movwf	fsr2h,c
 17433  0169C2  0EFF               	movlw	255
 17434  0169C4  22DA               	addwfc	fsr2h,f,c
 17435  0169C6  06DE               	decf	postinc2,f,c
 17436  0169C8  0E00               	movlw	0
 17437  0169CA  5ADD               	subwfb	postdec2,f,c
 17438                           
 17439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 17440                           ;stkvar	_i @ sp[(-20)+14]
 17441  0169CC  0EFA               	movlw	-6
 17442  0169CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 17443  0169D4  0EFB               	movlw	-5
 17444  0169D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 17445  0169DC  0E43               	movlw	low _dbuf
 17446  0169DE  240B               	addwf	(btemp+10)^0,w,c
 17447  0169E0  6ED9               	movwf	fsr2l,c
 17448  0169E2  0E02               	movlw	high _dbuf
 17449  0169E4  200C               	addwfc	(btemp+11)^0,w,c
 17450  0169E6  6EDA               	movwf	fsr2h,c
 17451  0169E8  0E30               	movlw	48
 17452  0169EA  6EDF               	movwf	indf2,c
 17453  0169EC                     l13639:
 17454                           
 17455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 17456                           ;stkvar	_w @ sp[(-20)+16]
 17457  0169EC  0EFC               	movlw	-4
 17458  0169EE  006F FF8F FFE6     	movff	plusw1,postinc1
 17459  0169F4  006F FF8F FFE6     	movff	plusw1,postinc1
 17460                           
 17461                           ;stkvar	_i @ sp[(-22)+14]
 17462  0169FA  0E43               	movlw	low _dbuf
 17463  0169FC  6E0B               	movwf	(btemp+10)^0,c
 17464  0169FE  0E02               	movlw	high _dbuf
 17465  016A00  6E0C               	movwf	(btemp+11)^0,c
 17466  016A02  0EF8               	movlw	-8
 17467  016A04  50E3               	movf	plusw1,w,c
 17468  016A06  260B               	addwf	(btemp+10)^0,f,c
 17469  016A08  0EF9               	movlw	-7
 17470  016A0A  50E3               	movf	plusw1,w,c
 17471  016A0C  220C               	addwfc	(btemp+11)^0,f,c
 17472  016A0E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17473  016A14  0060  F033  FFE6   	movff	btemp+11,postinc1
 17474                           
 17475                           ;stkvar	_fp @ sp[(-24)+-2]
 17476  016A1A  0EE6               	movlw	-26
 17477  016A1C  006F FF8F FFE6     	movff	plusw1,postinc1
 17478  016A22  006F FF8F FFE6     	movff	plusw1,postinc1
 17479  016A28  EC9A  F0D3         	call	_pad	;wreg free
 17480                           
 17481                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 17482  016A2C  0EE1               	movlw	225
 17483  016A2E  26E1               	addwf	fsr1l,f,c
 17484  016A30  0EFF               	movlw	255
 17485  016A32  22E2               	addwfc	fsr1h,f,c
 17486  016A34  0012               	return		;funcret
 17487  016A36                     __end_of_xtoa:
 17488                           	opt callstack 0
 17489                           
 17490 ;; *************** function _toupper *****************
 17491 ;; Defined at:
 17492 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 17493 ;; Parameters:    Size  Location     Type
 17494 ;;  c               2  [STACK] int 
 17495 ;; Auto vars:     Size  Location     Type
 17496 ;;		None
 17497 ;; Return value:  Size  Location     Type
 17498 ;;                  2  [STACK] int 
 17499 ;; Registers used:
 17500 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17501 ;; Tracked objects:
 17502 ;;		On entry : 0/2
 17503 ;;		On exit  : 0/0
 17504 ;;		Unchanged: 0/0
 17505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17510 ;;Total ram usage:        0 bytes
 17511 ;; Hardware stack levels used:    1
 17512 ;; Hardware stack levels required when called:   16
 17513 ;; This function calls:
 17514 ;;		_islower
 17515 ;; This function is called by:
 17516 ;;		_xtoa
 17517 ;; This function uses a reentrant model
 17518 ;;
 17519                           
 17520                           	psect	text67
 17521  01BBC4                     __ptext67:
 17522                           	opt callstack 0
 17523  01BBC4                     _toupper:
 17524                           	opt callstack 0
 17525                           
 17526                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17527  01BBC4  52E6               	movf	postinc1,f,c
 17528  01BBC6  52E6               	movf	postinc1,f,c
 17529                           
 17530                           ;stkvar	_c @ sp[(-2)+-2]
 17531                           
 17532                           ;incstack = 0
 17533 ;; hardware stack exceeded
 17534  01BBC8  0EFC               	movlw	-4
 17535  01BBCA  50E3               	movf	plusw1,w,c
 17536  01BBCC  0F9F               	addlw	159
 17537  01BBCE  6E0B               	movwf	(btemp+10)^0,c
 17538  01BBD0  0EFD               	movlw	-3
 17539  01BBD2  006F FF8C  F00C    	movff	plusw1,btemp+11
 17540  01BBD8  0EFF               	movlw	255
 17541  01BBDA  220C               	addwfc	(btemp+11)^0,f,c
 17542  01BBDC  500C               	movf	(btemp+11)^0,w,c
 17543  01BBDE  E106               	bnz	u6710
 17544  01BBE0  0E1A               	movlw	26
 17545  01BBE2  5C0B               	subwf	(btemp+10)^0,w,c
 17546  01BBE4  B0D8               	btfsc	status,0,c
 17547  01BBE6  D002               	goto	u6710
 17548  01BBE8  0E01               	movlw	1
 17549  01BBEA  D001               	goto	u6720
 17550  01BBEC                     u6710:
 17551  01BBEC  0E00               	movlw	0
 17552  01BBEE                     u6720:
 17553  01BBEE  6E0B               	movwf	(btemp+10)^0,c
 17554  01BBF0  6A0C               	clrf	(btemp+11)^0,c
 17555                           
 17556                           ;stkvar	_toupper$7011 @ sp[(-2)+0]
 17557  01BBF2  0EFE               	movlw	-2
 17558  01BBF4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17559  01BBFA  0EFF               	movlw	-1
 17560  01BBFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17561                           
 17562                           ;stkvar	_toupper$7011 @ sp[(-2)+0]
 17563  01BC02  0EFE               	movlw	-2
 17564  01BC04  006F FF8C  F001    	movff	plusw1,btemp
 17565  01BC0A  0EFF               	movlw	-1
 17566  01BC0C  50E3               	movf	plusw1,w,c
 17567  01BC0E  1001               	iorwf	btemp^0,w,c
 17568  01BC10  B4D8               	btfsc	status,2,c
 17569  01BC12  D00D               	goto	l8823
 17570                           
 17571                           ;stkvar	_c @ sp[(-2)+-2]
 17572  01BC14  0EFC               	movlw	-4
 17573  01BC16  006F FF8C  F001    	movff	plusw1,btemp
 17574  01BC1C  0EFD               	movlw	-3
 17575  01BC1E  006F FF8C  F002    	movff	plusw1,btemp+1
 17576  01BC24  0E5F               	movlw	95
 17577  01BC26  1601               	andwf	btemp^0,f,c
 17578  01BC28  0E00               	movlw	0
 17579  01BC2A  1602               	andwf	(btemp+1)^0,f,c
 17580  01BC2C  D008               	goto	l3740
 17581  01BC2E                     l8823:
 17582                           
 17583                           ;stkvar	_c @ sp[(-2)+-2]
 17584  01BC2E  0EFC               	movlw	-4
 17585  01BC30  006F FF8C  F001    	movff	plusw1,btemp
 17586  01BC36  0EFD               	movlw	-3
 17587  01BC38  006F FF8C  F002    	movff	plusw1,btemp+1
 17588  01BC3E                     l3740:
 17589                           
 17590                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17591  01BC3E  52E5               	movf	postdec1,f,c
 17592  01BC40  52E5               	movf	postdec1,f,c
 17593  01BC42  52E5               	movf	postdec1,f,c
 17594  01BC44  52E5               	movf	postdec1,f,c
 17595  01BC46  0012               	return		;funcret
 17596  01BC48                     __end_of_toupper:
 17597                           	opt callstack 0
 17598                           
 17599 ;; *************** function _islower *****************
 17600 ;; Defined at:
 17601 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 17602 ;; Parameters:    Size  Location     Type
 17603 ;;  c               2  [STACK] int 
 17604 ;; Auto vars:     Size  Location     Type
 17605 ;;		None
 17606 ;; Return value:  Size  Location     Type
 17607 ;;                  2  [STACK] int 
 17608 ;; Registers used:
 17609 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17610 ;; Tracked objects:
 17611 ;;		On entry : 0/0
 17612 ;;		On exit  : 0/0
 17613 ;;		Unchanged: 0/0
 17614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17619 ;;Total ram usage:        0 bytes
 17620 ;; Hardware stack levels used:    1
 17621 ;; Hardware stack levels required when called:   15
 17622 ;; This function calls:
 17623 ;;		Nothing
 17624 ;; This function is called by:
 17625 ;;		_toupper
 17626 ;; This function uses a reentrant model
 17627 ;;
 17628                           
 17629                           	psect	text68
 17630  01CBBE                     __ptext68:
 17631                           	opt callstack 0
 17632  01CBBE                     _islower:
 17633                           	opt callstack 0
 17634                           
 17635                           ;stkvar	_c @ sp[(0)+-2]
 17636                           
 17637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17638                           ;incstack = 0
 17639 ;; hardware stack exceeded
 17640  01CBBE  0EFE               	movlw	-2
 17641  01CBC0  50E3               	movf	plusw1,w,c
 17642  01CBC2  0F9F               	addlw	159
 17643  01CBC4  6E0B               	movwf	(btemp+10)^0,c
 17644  01CBC6  0EFF               	movlw	-1
 17645  01CBC8  006F FF8C  F00C    	movff	plusw1,btemp+11
 17646  01CBCE  0EFF               	movlw	255
 17647  01CBD0  220C               	addwfc	(btemp+11)^0,f,c
 17648  01CBD2  500C               	movf	(btemp+11)^0,w,c
 17649  01CBD4  E106               	bnz	u6350
 17650  01CBD6  0E1A               	movlw	26
 17651  01CBD8  5C0B               	subwf	(btemp+10)^0,w,c
 17652  01CBDA  B0D8               	btfsc	status,0,c
 17653  01CBDC  D002               	goto	u6350
 17654  01CBDE  0E01               	movlw	1
 17655  01CBE0  D001               	goto	u6360
 17656  01CBE2                     u6350:
 17657  01CBE2  0E00               	movlw	0
 17658  01CBE4                     u6360:
 17659  01CBE4  6E01               	movwf	btemp^0,c
 17660  01CBE6  6A02               	clrf	(btemp+1)^0,c
 17661                           
 17662                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17663  01CBE8  52E5               	movf	postdec1,f,c
 17664  01CBEA  52E5               	movf	postdec1,f,c
 17665  01CBEC  0012               	return		;funcret
 17666  01CBEE                     __end_of_islower:
 17667                           	opt callstack 0
 17668                           
 17669 ;; *************** function _isalpha *****************
 17670 ;; Defined at:
 17671 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 17672 ;; Parameters:    Size  Location     Type
 17673 ;;  c               2  [STACK] int 
 17674 ;; Auto vars:     Size  Location     Type
 17675 ;;		None
 17676 ;; Return value:  Size  Location     Type
 17677 ;;                  2  [STACK] int 
 17678 ;; Registers used:
 17679 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 17680 ;; Tracked objects:
 17681 ;;		On entry : 0/0
 17682 ;;		On exit  : 0/0
 17683 ;;		Unchanged: 0/0
 17684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17689 ;;Total ram usage:        0 bytes
 17690 ;; Hardware stack levels used:    1
 17691 ;; Hardware stack levels required when called:   15
 17692 ;; This function calls:
 17693 ;;		Nothing
 17694 ;; This function is called by:
 17695 ;;		_xtoa
 17696 ;; This function uses a reentrant model
 17697 ;;
 17698                           
 17699                           	psect	text69
 17700  01C76E                     __ptext69:
 17701                           	opt callstack 0
 17702  01C76E                     _isalpha:
 17703                           	opt callstack 0
 17704                           
 17705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17706                           ;incstack = 0
 17707 ;; hardware stack exceeded
 17708  01C76E  0E9F               	movlw	159
 17709  01C770  6E0B               	movwf	(btemp+10)^0,c
 17710  01C772  0EFF               	movlw	255
 17711  01C774  6E0C               	movwf	(btemp+11)^0,c
 17712                           
 17713                           ;stkvar	_c @ sp[(0)+-2]
 17714  01C776  0EFE               	movlw	-2
 17715  01C778  006F FF8C  F009    	movff	plusw1,btemp+8
 17716  01C77E  0EFF               	movlw	-1
 17717  01C780  006F FF8C  F00A    	movff	plusw1,btemp+9
 17718  01C786  0E20               	movlw	32
 17719  01C788  1209               	iorwf	(btemp+8)^0,f,c
 17720  01C78A  0E00               	movlw	0
 17721  01C78C  120A               	iorwf	(btemp+9)^0,f,c
 17722  01C78E  500B               	movf	(btemp+10)^0,w,c
 17723  01C790  2609               	addwf	(btemp+8)^0,f,c
 17724  01C792  500C               	movf	(btemp+11)^0,w,c
 17725  01C794  220A               	addwfc	(btemp+9)^0,f,c
 17726  01C796  500A               	movf	(btemp+9)^0,w,c
 17727  01C798  E106               	bnz	u6690
 17728  01C79A  0E1A               	movlw	26
 17729  01C79C  5C09               	subwf	(btemp+8)^0,w,c
 17730  01C79E  B0D8               	btfsc	status,0,c
 17731  01C7A0  D002               	goto	u6690
 17732  01C7A2  0E01               	movlw	1
 17733  01C7A4  D001               	goto	u6700
 17734  01C7A6                     u6690:
 17735  01C7A6  0E00               	movlw	0
 17736  01C7A8                     u6700:
 17737  01C7A8  6E01               	movwf	btemp^0,c
 17738  01C7AA  6A02               	clrf	(btemp+1)^0,c
 17739                           
 17740                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17741  01C7AC  52E5               	movf	postdec1,f,c
 17742  01C7AE  52E5               	movf	postdec1,f,c
 17743  01C7B0  0012               	return		;funcret
 17744  01C7B2                     __end_of_isalpha:
 17745                           	opt callstack 0
 17746                           
 17747 ;; *************** function _utoa *****************
 17748 ;; Defined at:
 17749 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17750 ;; Parameters:    Size  Location     Type
 17751 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17752 ;;		 -> f(6), NULL(0), 
 17753 ;;  d               8  [STACK] unsigned long long 
 17754 ;; Auto vars:     Size  Location     Type
 17755 ;;  n               8  [STACK] unsigned long long 
 17756 ;;  i               2  [STACK] int 
 17757 ;;  w               2  [STACK] int 
 17758 ;;  p               2  [STACK] int 
 17759 ;; Return value:  Size  Location     Type
 17760 ;;                  2  [STACK] int 
 17761 ;; Registers used:
 17762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17763 ;; Tracked objects:
 17764 ;;		On entry : 0/0
 17765 ;;		On exit  : 0/0
 17766 ;;		Unchanged: 0/0
 17767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17772 ;;Total ram usage:        0 bytes
 17773 ;; Hardware stack levels used:    1
 17774 ;; Hardware stack levels required when called:   20
 17775 ;; This function calls:
 17776 ;;		___lodiv
 17777 ;;		___lomod
 17778 ;;		_pad
 17779 ;; This function is called by:
 17780 ;;		_vfpfcnvrt
 17781 ;; This function uses a reentrant model
 17782 ;;
 17783                           
 17784                           	psect	text70
 17785  016DA2                     __ptext70:
 17786                           	opt callstack 0
 17787  016DA2                     _utoa:
 17788                           	opt callstack 0
 17789                           
 17790                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17791  016DA2  0E0E               	movlw	14
 17792  016DA4  26E1               	addwf	fsr1l,f,c
 17793  016DA6  0E00               	movlw	0
 17794  016DA8  22E2               	addwfc	fsr1h,f,c
 17795                           
 17796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 17797                           
 17798                           ;incstack = 0
 17799 ;; hardware stack exceeded
 17800  016DAA  AE3D               	btfss	(_prec+1)^0,7,c
 17801                           
 17802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 17803  016DAC  923E               	bcf	_flags^0,1,c
 17804                           
 17805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 17806  016DAE  BE3D               	btfsc	(_prec+1)^0,7,c
 17807  016DB0  D005               	goto	u12640
 17808  016DB2  503D               	movf	(_prec+1)^0,w,c
 17809  016DB4  E110               	bnz	l13539
 17810  016DB6  043C               	decf	_prec^0,w,c
 17811  016DB8  B0D8               	btfsc	status,0,c
 17812  016DBA  D00D               	goto	l13539
 17813  016DBC                     u12640:
 17814  016DBC  0E01               	movlw	1
 17815  016DBE  6E0B               	movwf	(btemp+10)^0,c
 17816  016DC0  0E00               	movlw	0
 17817  016DC2  6E0C               	movwf	(btemp+11)^0,c
 17818                           
 17819                           ;stkvar	_p @ sp[(-14)+12]
 17820  016DC4  0EFE               	movlw	-2
 17821  016DC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17822  016DCC  0EFF               	movlw	-1
 17823  016DCE  0060  F033  FFE3   	movff	btemp+11,plusw1
 17824  016DD4  D008               	goto	l2558
 17825  016DD6                     l13539:
 17826                           
 17827                           ;stkvar	_p @ sp[(-14)+12]
 17828  016DD6  0EFE               	movlw	-2
 17829  016DD8  0060  F0F3  FFE3   	movff	_prec,plusw1
 17830  016DDE  0EFF               	movlw	-1
 17831  016DE0  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17832  016DE6                     l2558:
 17833                           
 17834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 17835                           ;stkvar	_w @ sp[(-14)+10]
 17836  016DE6  0EFC               	movlw	-4
 17837  016DE8  0060  F0EB  FFE3   	movff	_width,plusw1
 17838  016DEE  0EFD               	movlw	-3
 17839  016DF0  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17840                           
 17841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 17842                           ;stkvar	_d @ sp[(-14)+-10]
 17843  016DF6  0EE8               	movlw	232
 17844  016DF8  24E1               	addwf	fsr1l,w,c
 17845  016DFA  6ED9               	movwf	fsr2l,c
 17846  016DFC  0EFF               	movlw	255
 17847  016DFE  20E2               	addwfc	fsr1h,w,c
 17848  016E00  6EDA               	movwf	fsr2h,c
 17849                           
 17850                           ;stkvar	_n @ sp[(-14)+0]
 17851  016E02  0E08               	movlw	8
 17852  016E04  6E01               	movwf	btemp^0,c
 17853  016E06  0EF2               	movlw	-14
 17854  016E08                     us1265999:
 17855  016E08  006F FF7B FFE3     	movff	postinc2,plusw1
 17856  016E0E  28E8               	incf	wreg,w,c
 17857  016E10  2E01               	decfsz	btemp^0,f,c
 17858  016E12  D7FA               	bra	us1265999
 17859                           
 17860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 17861  016E14  0E4F               	movlw	79
 17862  016E16  6E0B               	movwf	(btemp+10)^0,c
 17863  016E18  0E00               	movlw	0
 17864  016E1A  6E0C               	movwf	(btemp+11)^0,c
 17865                           
 17866                           ;stkvar	_i @ sp[(-14)+8]
 17867  016E1C  0EFA               	movlw	-6
 17868  016E1E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17869  016E24  0EFB               	movlw	-5
 17870  016E26  0060  F033  FFE3   	movff	btemp+11,plusw1
 17871                           
 17872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 17873  016E2C  0102               	movlb	2	; () banked
 17874  016E2E  6B92               	clrf	(_dbuf+79)& (0+255),b
 17875                           
 17876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 17877  016E30  D0FB               	goto	l13557
 17878  016E32                     l13547:
 17879                           
 17880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 17881                           ;stkvar	_i @ sp[(-14)+8]
 17882  016E32  50E1               	movf	fsr1l,w,c
 17883  016E34  0FFA               	addlw	-6
 17884  016E36  6ED9               	movwf	fsr2l,c
 17885  016E38  50E2               	movf	fsr1h,w,c
 17886  016E3A  6EDA               	movwf	fsr2h,c
 17887  016E3C  0EFF               	movlw	255
 17888  016E3E  22DA               	addwfc	fsr2h,f,c
 17889  016E40  06DE               	decf	postinc2,f,c
 17890  016E42  0E00               	movlw	0
 17891  016E44  5ADD               	subwfb	postdec2,f,c
 17892                           
 17893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 17894  016E46  0E0A               	movlw	10
 17895  016E48  6EE6               	movwf	postinc1,c
 17896  016E4A  0E00               	movlw	0
 17897  016E4C  6EE6               	movwf	postinc1,c
 17898  016E4E  0E00               	movlw	0
 17899  016E50  6EE6               	movwf	postinc1,c
 17900  016E52  0E00               	movlw	0
 17901  016E54  6EE6               	movwf	postinc1,c
 17902  016E56  0E00               	movlw	0
 17903  016E58  6EE6               	movwf	postinc1,c
 17904  016E5A  0E00               	movlw	0
 17905  016E5C  6EE6               	movwf	postinc1,c
 17906  016E5E  0E00               	movlw	0
 17907  016E60  6EE6               	movwf	postinc1,c
 17908  016E62  0E00               	movlw	0
 17909  016E64  6EE6               	movwf	postinc1,c
 17910                           
 17911                           ;stkvar	_n @ sp[(-22)+0]
 17912  016E66  50E1               	movf	fsr1l,w,c
 17913  016E68  0FEA               	addlw	-22
 17914  016E6A  6ED9               	movwf	fsr2l,c
 17915  016E6C  50E2               	movf	fsr1h,w,c
 17916  016E6E  6EDA               	movwf	fsr2h,c
 17917  016E70  0EFF               	movlw	255
 17918  016E72  22DA               	addwfc	fsr2h,f,c
 17919  016E74  006F FF7B FFE6     	movff	postinc2,postinc1
 17920  016E7A  006F FF7B FFE6     	movff	postinc2,postinc1
 17921  016E80  006F FF7B FFE6     	movff	postinc2,postinc1
 17922  016E86  006F FF7B FFE6     	movff	postinc2,postinc1
 17923  016E8C  006F FF7B FFE6     	movff	postinc2,postinc1
 17924  016E92  006F FF7B FFE6     	movff	postinc2,postinc1
 17925  016E98  006F FF7B FFE6     	movff	postinc2,postinc1
 17926  016E9E  006F FF7B FFE6     	movff	postinc2,postinc1
 17927  016EA4  EC1D  F0D0         	call	___lomod	;wreg free
 17928  016EA8  52E5               	movf	postdec1,f,c
 17929  016EAA  006F FF9C  F018    	movff	indf1,btemp+23
 17930  016EB0  52E5               	movf	postdec1,f,c
 17931  016EB2  006F FF9C  F017    	movff	indf1,btemp+22
 17932  016EB8  52E5               	movf	postdec1,f,c
 17933  016EBA  006F FF9C  F016    	movff	indf1,btemp+21
 17934  016EC0  52E5               	movf	postdec1,f,c
 17935  016EC2  006F FF9C  F015    	movff	indf1,btemp+20
 17936  016EC8  52E5               	movf	postdec1,f,c
 17937  016ECA  006F FF9C  F014    	movff	indf1,btemp+19
 17938  016ED0  52E5               	movf	postdec1,f,c
 17939  016ED2  006F FF9C  F013    	movff	indf1,btemp+18
 17940  016ED8  52E5               	movf	postdec1,f,c
 17941  016EDA  006F FF9C  F012    	movff	indf1,btemp+17
 17942  016EE0  52E5               	movf	postdec1,f,c
 17943  016EE2  006F FF9C  F011    	movff	indf1,btemp+16
 17944  016EE8  0EF8               	movlw	248
 17945  016EEA  26E1               	addwf	fsr1l,f,c
 17946  016EEC  0EFF               	movlw	255
 17947  016EEE  22E2               	addwfc	fsr1h,f,c
 17948  016EF0  0E30               	movlw	48
 17949  016EF2  2611               	addwf	(btemp+16)^0,f,c
 17950                           
 17951                           ;stkvar	_i @ sp[(-14)+8]
 17952  016EF4  0EFA               	movlw	-6
 17953  016EF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 17954  016EFC  0EFB               	movlw	-5
 17955  016EFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 17956  016F04  0E43               	movlw	low _dbuf
 17957  016F06  240B               	addwf	(btemp+10)^0,w,c
 17958  016F08  6ED9               	movwf	fsr2l,c
 17959  016F0A  0E02               	movlw	high _dbuf
 17960  016F0C  200C               	addwfc	(btemp+11)^0,w,c
 17961  016F0E  6EDA               	movwf	fsr2h,c
 17962  016F10  0060  F047  FFDF   	movff	btemp+16,indf2
 17963                           
 17964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 17965                           ;stkvar	_p @ sp[(-14)+12]
 17966  016F16  50E1               	movf	fsr1l,w,c
 17967  016F18  0FFE               	addlw	-2
 17968  016F1A  6ED9               	movwf	fsr2l,c
 17969  016F1C  50E2               	movf	fsr1h,w,c
 17970  016F1E  6EDA               	movwf	fsr2h,c
 17971  016F20  0EFF               	movlw	255
 17972  016F22  22DA               	addwfc	fsr2h,f,c
 17973  016F24  06DE               	decf	postinc2,f,c
 17974  016F26  0E00               	movlw	0
 17975  016F28  5ADD               	subwfb	postdec2,f,c
 17976                           
 17977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 17978                           ;stkvar	_w @ sp[(-14)+10]
 17979  016F2A  50E1               	movf	fsr1l,w,c
 17980  016F2C  0FFC               	addlw	-4
 17981  016F2E  6ED9               	movwf	fsr2l,c
 17982  016F30  50E2               	movf	fsr1h,w,c
 17983  016F32  6EDA               	movwf	fsr2h,c
 17984  016F34  0EFF               	movlw	255
 17985  016F36  22DA               	addwfc	fsr2h,f,c
 17986  016F38  06DE               	decf	postinc2,f,c
 17987  016F3A  0E00               	movlw	0
 17988  016F3C  5ADD               	subwfb	postdec2,f,c
 17989                           
 17990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 17991  016F3E  0E0A               	movlw	10
 17992  016F40  6EE6               	movwf	postinc1,c
 17993  016F42  0E00               	movlw	0
 17994  016F44  6EE6               	movwf	postinc1,c
 17995  016F46  0E00               	movlw	0
 17996  016F48  6EE6               	movwf	postinc1,c
 17997  016F4A  0E00               	movlw	0
 17998  016F4C  6EE6               	movwf	postinc1,c
 17999  016F4E  0E00               	movlw	0
 18000  016F50  6EE6               	movwf	postinc1,c
 18001  016F52  0E00               	movlw	0
 18002  016F54  6EE6               	movwf	postinc1,c
 18003  016F56  0E00               	movlw	0
 18004  016F58  6EE6               	movwf	postinc1,c
 18005  016F5A  0E00               	movlw	0
 18006  016F5C  6EE6               	movwf	postinc1,c
 18007                           
 18008                           ;stkvar	_n @ sp[(-22)+0]
 18009  016F5E  50E1               	movf	fsr1l,w,c
 18010  016F60  0FEA               	addlw	-22
 18011  016F62  6ED9               	movwf	fsr2l,c
 18012  016F64  50E2               	movf	fsr1h,w,c
 18013  016F66  6EDA               	movwf	fsr2h,c
 18014  016F68  0EFF               	movlw	255
 18015  016F6A  22DA               	addwfc	fsr2h,f,c
 18016  016F6C  006F FF7B FFE6     	movff	postinc2,postinc1
 18017  016F72  006F FF7B FFE6     	movff	postinc2,postinc1
 18018  016F78  006F FF7B FFE6     	movff	postinc2,postinc1
 18019  016F7E  006F FF7B FFE6     	movff	postinc2,postinc1
 18020  016F84  006F FF7B FFE6     	movff	postinc2,postinc1
 18021  016F8A  006F FF7B FFE6     	movff	postinc2,postinc1
 18022  016F90  006F FF7B FFE6     	movff	postinc2,postinc1
 18023  016F96  006F FF7B FFE6     	movff	postinc2,postinc1
 18024  016F9C  EC41  F0CB         	call	___lodiv	;wreg free
 18025  016FA0  52E5               	movf	postdec1,f,c
 18026  016FA2  006F FF9C  F018    	movff	indf1,btemp+23
 18027  016FA8  52E5               	movf	postdec1,f,c
 18028  016FAA  006F FF9C  F017    	movff	indf1,btemp+22
 18029  016FB0  52E5               	movf	postdec1,f,c
 18030  016FB2  006F FF9C  F016    	movff	indf1,btemp+21
 18031  016FB8  52E5               	movf	postdec1,f,c
 18032  016FBA  006F FF9C  F015    	movff	indf1,btemp+20
 18033  016FC0  52E5               	movf	postdec1,f,c
 18034  016FC2  006F FF9C  F014    	movff	indf1,btemp+19
 18035  016FC8  52E5               	movf	postdec1,f,c
 18036  016FCA  006F FF9C  F013    	movff	indf1,btemp+18
 18037  016FD0  52E5               	movf	postdec1,f,c
 18038  016FD2  006F FF9C  F012    	movff	indf1,btemp+17
 18039  016FD8  52E5               	movf	postdec1,f,c
 18040  016FDA  006F FF9C  F011    	movff	indf1,btemp+16
 18041  016FE0  0EF8               	movlw	248
 18042  016FE2  26E1               	addwf	fsr1l,f,c
 18043  016FE4  0EFF               	movlw	255
 18044  016FE6  22E2               	addwfc	fsr1h,f,c
 18045                           
 18046                           ;stkvar	_n @ sp[(-14)+0]
 18047  016FE8  0EF2               	movlw	-14
 18048  016FEA  0060  F047  FFE3   	movff	btemp+16,plusw1
 18049  016FF0  0EF3               	movlw	-13
 18050  016FF2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 18051  016FF8  0EF4               	movlw	-12
 18052  016FFA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 18053  017000  0EF5               	movlw	-11
 18054  017002  0060  F053  FFE3   	movff	btemp+19,plusw1
 18055  017008  0EF6               	movlw	-10
 18056  01700A  0060  F057  FFE3   	movff	btemp+20,plusw1
 18057  017010  0EF7               	movlw	-9
 18058  017012  0060  F05B  FFE3   	movff	btemp+21,plusw1
 18059  017018  0EF8               	movlw	-8
 18060  01701A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 18061  017020  0EF9               	movlw	-7
 18062  017022  0060  F063  FFE3   	movff	btemp+23,plusw1
 18063  017028                     l13557:
 18064                           
 18065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 18066                           ;stkvar	_i @ sp[(-14)+8]
 18067  017028  0EFA               	movlw	-6
 18068  01702A  006F FF8C  F001    	movff	plusw1,btemp
 18069  017030  0EFB               	movlw	-5
 18070  017032  50E3               	movf	plusw1,w,c
 18071  017034  1001               	iorwf	btemp^0,w,c
 18072  017036  B4D8               	btfsc	status,2,c
 18073  017038  D02F               	goto	u12700
 18074                           
 18075                           ;stkvar	_n @ sp[(-14)+0]
 18076  01703A  0EF2               	movlw	-14
 18077  01703C  50E3               	movf	plusw1,w,c
 18078  01703E  E115               	bnz	u12671
 18079  017040  0EF3               	movlw	-13
 18080  017042  50E3               	movf	plusw1,w,c
 18081  017044  E112               	bnz	u12671
 18082  017046  0EF4               	movlw	-12
 18083  017048  50E3               	movf	plusw1,w,c
 18084  01704A  E10F               	bnz	u12671
 18085  01704C  0EF5               	movlw	-11
 18086  01704E  50E3               	movf	plusw1,w,c
 18087  017050  E10C               	bnz	u12671
 18088  017052  0EF6               	movlw	-10
 18089  017054  50E3               	movf	plusw1,w,c
 18090  017056  E109               	bnz	u12671
 18091  017058  0EF7               	movlw	-9
 18092  01705A  50E3               	movf	plusw1,w,c
 18093  01705C  E106               	bnz	u12671
 18094  01705E  0EF8               	movlw	-8
 18095  017060  50E3               	movf	plusw1,w,c
 18096  017062  E103               	bnz	u12671
 18097  017064  0EF9               	movlw	-7
 18098  017066  50E3               	movf	plusw1,w,c
 18099  017068  A4D8               	btfss	status,2,c
 18100  01706A                     u12671:
 18101  01706A  D6E3               	goto	l13547
 18102                           
 18103                           ;stkvar	_p @ sp[(-14)+12]
 18104  01706C  0EFF               	movlw	-1
 18105  01706E  BEE3               	btfsc	plusw1,7,c
 18106  017070  D007               	goto	u12680
 18107  017072  0EFF               	movlw	-1
 18108  017074  50E3               	movf	plusw1,w,c
 18109  017076  E103               	bnz	u12681
 18110  017078  0EFE               	movlw	-2
 18111  01707A  04E3               	decf	plusw1,w,c
 18112  01707C  B0D8               	btfsc	status,0,c
 18113  01707E                     u12681:
 18114  01707E  D6D9               	goto	l13547
 18115  017080                     u12680:
 18116                           
 18117                           ;stkvar	_w @ sp[(-14)+10]
 18118  017080  0EFD               	movlw	-3
 18119  017082  BEE3               	btfsc	plusw1,7,c
 18120  017084  D009               	goto	u12700
 18121  017086  0EFD               	movlw	-3
 18122  017088  50E3               	movf	plusw1,w,c
 18123  01708A  E104               	bnz	u12690
 18124  01708C  0EFC               	movlw	-4
 18125  01708E  04E3               	decf	plusw1,w,c
 18126  017090  A0D8               	btfss	status,0,c
 18127  017092  D002               	goto	u12700
 18128  017094                     u12690:
 18129  017094  B23E               	btfsc	_flags^0,1,c
 18130  017096  D6CD               	goto	l13547
 18131  017098                     u12700:
 18132                           
 18133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 18134                           ;stkvar	_w @ sp[(-14)+10]
 18135  017098  0EFC               	movlw	-4
 18136  01709A  006F FF8F FFE6     	movff	plusw1,postinc1
 18137  0170A0  006F FF8F FFE6     	movff	plusw1,postinc1
 18138                           
 18139                           ;stkvar	_i @ sp[(-16)+8]
 18140  0170A6  0E43               	movlw	low _dbuf
 18141  0170A8  6E0B               	movwf	(btemp+10)^0,c
 18142  0170AA  0E02               	movlw	high _dbuf
 18143  0170AC  6E0C               	movwf	(btemp+11)^0,c
 18144  0170AE  0EF8               	movlw	-8
 18145  0170B0  50E3               	movf	plusw1,w,c
 18146  0170B2  260B               	addwf	(btemp+10)^0,f,c
 18147  0170B4  0EF9               	movlw	-7
 18148  0170B6  50E3               	movf	plusw1,w,c
 18149  0170B8  220C               	addwfc	(btemp+11)^0,f,c
 18150  0170BA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18151  0170C0  0060  F033  FFE6   	movff	btemp+11,postinc1
 18152                           
 18153                           ;stkvar	_fp @ sp[(-18)+-2]
 18154  0170C6  0EEC               	movlw	-20
 18155  0170C8  006F FF8F FFE6     	movff	plusw1,postinc1
 18156  0170CE  006F FF8F FFE6     	movff	plusw1,postinc1
 18157  0170D4  EC9A  F0D3         	call	_pad	;wreg free
 18158                           
 18159                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18160  0170D8  0EE8               	movlw	232
 18161  0170DA  26E1               	addwf	fsr1l,f,c
 18162  0170DC  0EFF               	movlw	255
 18163  0170DE  22E2               	addwfc	fsr1h,f,c
 18164  0170E0  0012               	return		;funcret
 18165  0170E2                     __end_of_utoa:
 18166                           	opt callstack 0
 18167                           
 18168 ;; *************** function ___lomod *****************
 18169 ;; Defined at:
 18170 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 18171 ;; Parameters:    Size  Location     Type
 18172 ;;  dividend        8  [STACK] unsigned long long 
 18173 ;;  divisor         8  [STACK] unsigned long long 
 18174 ;; Auto vars:     Size  Location     Type
 18175 ;;  counter         1  [STACK] unsigned char 
 18176 ;; Return value:  Size  Location     Type
 18177 ;;                  8  [STACK] unsigned long long 
 18178 ;; Registers used:
 18179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18180 ;; Tracked objects:
 18181 ;;		On entry : 0/2
 18182 ;;		On exit  : 0/0
 18183 ;;		Unchanged: 0/0
 18184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18189 ;;Total ram usage:        0 bytes
 18190 ;; Hardware stack levels used:    1
 18191 ;; Hardware stack levels required when called:   15
 18192 ;; This function calls:
 18193 ;;		Nothing
 18194 ;; This function is called by:
 18195 ;;		_utoa
 18196 ;; This function uses a reentrant model
 18197 ;;
 18198                           
 18199                           	psect	text71
 18200  01A03A                     __ptext71:
 18201                           	opt callstack 0
 18202  01A03A                     ___lomod:
 18203                           	opt callstack 0
 18204                           
 18205                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18206  01A03A  52E6               	movf	postinc1,f,c
 18207                           
 18208                           ;stkvar	_divisor @ sp[(-1)+-16]
 18209                           
 18210                           ;incstack = 0
 18211 ;; hardware stack exceeded
 18212  01A03C  0EEF               	movlw	-17
 18213  01A03E  50E3               	movf	plusw1,w,c
 18214  01A040  E116               	bnz	u7840
 18215  01A042  0EF0               	movlw	-16
 18216  01A044  50E3               	movf	plusw1,w,c
 18217  01A046  E113               	bnz	u7840
 18218  01A048  0EF1               	movlw	-15
 18219  01A04A  50E3               	movf	plusw1,w,c
 18220  01A04C  E110               	bnz	u7840
 18221  01A04E  0EF2               	movlw	-14
 18222  01A050  50E3               	movf	plusw1,w,c
 18223  01A052  E10D               	bnz	u7840
 18224  01A054  0EF3               	movlw	-13
 18225  01A056  50E3               	movf	plusw1,w,c
 18226  01A058  E10A               	bnz	u7840
 18227  01A05A  0EF4               	movlw	-12
 18228  01A05C  50E3               	movf	plusw1,w,c
 18229  01A05E  E107               	bnz	u7840
 18230  01A060  0EF5               	movlw	-11
 18231  01A062  50E3               	movf	plusw1,w,c
 18232  01A064  E104               	bnz	u7840
 18233  01A066  0EF6               	movlw	-10
 18234  01A068  50E3               	movf	plusw1,w,c
 18235  01A06A  B4D8               	btfsc	status,2,c
 18236  01A06C  D075               	goto	u7870
 18237  01A06E                     u7840:
 18238                           
 18239                           ;stkvar	_counter @ sp[(-1)+0]
 18240  01A06E  0EFF               	movlw	-1
 18241  01A070  6AE3               	clrf	plusw1,c
 18242  01A072  D012               	goto	L19
 18243  01A074                     l9433:
 18244                           
 18245                           ;stkvar	_divisor @ sp[(-1)+-16]
 18246  01A074  90D8               	bcf	status,0,c
 18247  01A076  0EEF               	movlw	-17
 18248  01A078  36E3               	rlcf	plusw1,f,c
 18249  01A07A  0EF0               	movlw	-16
 18250  01A07C  36E3               	rlcf	plusw1,f,c
 18251  01A07E  0EF1               	movlw	-15
 18252  01A080  36E3               	rlcf	plusw1,f,c
 18253  01A082  0EF2               	movlw	-14
 18254  01A084  36E3               	rlcf	plusw1,f,c
 18255  01A086  0EF3               	movlw	-13
 18256  01A088  36E3               	rlcf	plusw1,f,c
 18257  01A08A  0EF4               	movlw	-12
 18258  01A08C  36E3               	rlcf	plusw1,f,c
 18259  01A08E  0EF5               	movlw	-11
 18260  01A090  36E3               	rlcf	plusw1,f,c
 18261  01A092  0EF6               	movlw	-10
 18262  01A094  36E3               	rlcf	plusw1,f,c
 18263                           
 18264                           ;stkvar	_counter @ sp[(-1)+0]
 18265  01A096  0EFF               	movlw	-1
 18266  01A098                     L19:
 18267  01A098  2AE3               	incf	plusw1,f,c
 18268                           
 18269                           ;stkvar	_divisor @ sp[(-1)+-16]
 18270  01A09A  0EF6               	movlw	-10
 18271  01A09C  AEE3               	btfss	plusw1,7,c
 18272  01A09E  D7EA               	goto	l9433
 18273  01A0A0                     u7850:
 18274                           
 18275                           ;stkvar	_divisor @ sp[(-1)+-16]
 18276                           ;stkvar	_dividend @ sp[(-1)+-8]
 18277  01A0A0  50E1               	movf	fsr1l,w,c
 18278  01A0A2  0FF7               	addlw	-9
 18279  01A0A4  6ED9               	movwf	fsr2l,c
 18280  01A0A6  50E2               	movf	fsr1h,w,c
 18281  01A0A8  6EDA               	movwf	fsr2h,c
 18282  01A0AA  0EFF               	movlw	255
 18283  01A0AC  22DA               	addwfc	fsr2h,f,c
 18284  01A0AE  0EEF               	movlw	-17
 18285  01A0B0  50E3               	movf	plusw1,w,c
 18286  01A0B2  5CDE               	subwf	postinc2,w,c
 18287  01A0B4  0EF0               	movlw	-16
 18288  01A0B6  50E3               	movf	plusw1,w,c
 18289  01A0B8  58DE               	subwfb	postinc2,w,c
 18290  01A0BA  0EF1               	movlw	-15
 18291  01A0BC  50E3               	movf	plusw1,w,c
 18292  01A0BE  58DE               	subwfb	postinc2,w,c
 18293  01A0C0  0EF2               	movlw	-14
 18294  01A0C2  50E3               	movf	plusw1,w,c
 18295  01A0C4  58DE               	subwfb	postinc2,w,c
 18296  01A0C6  0EF3               	movlw	-13
 18297  01A0C8  50E3               	movf	plusw1,w,c
 18298  01A0CA  58DE               	subwfb	postinc2,w,c
 18299  01A0CC  0EF4               	movlw	-12
 18300  01A0CE  50E3               	movf	plusw1,w,c
 18301  01A0D0  58DE               	subwfb	postinc2,w,c
 18302  01A0D2  0EF5               	movlw	-11
 18303  01A0D4  50E3               	movf	plusw1,w,c
 18304  01A0D6  58DE               	subwfb	postinc2,w,c
 18305  01A0D8  0EF6               	movlw	-10
 18306  01A0DA  50E3               	movf	plusw1,w,c
 18307  01A0DC  58DE               	subwfb	postinc2,w,c
 18308  01A0DE  A0D8               	btfss	status,0,c
 18309  01A0E0  D01F               	goto	l9441
 18310                           
 18311                           ;stkvar	_divisor @ sp[(-1)+-16]
 18312                           ;stkvar	_dividend @ sp[(-1)+-8]
 18313  01A0E2  50E1               	movf	fsr1l,w,c
 18314  01A0E4  0FF7               	addlw	-9
 18315  01A0E6  6ED9               	movwf	fsr2l,c
 18316  01A0E8  50E2               	movf	fsr1h,w,c
 18317  01A0EA  6EDA               	movwf	fsr2h,c
 18318  01A0EC  0EFF               	movlw	255
 18319  01A0EE  22DA               	addwfc	fsr2h,f,c
 18320  01A0F0  0EEF               	movlw	-17
 18321  01A0F2  50E3               	movf	plusw1,w,c
 18322  01A0F4  5EDE               	subwf	postinc2,f,c
 18323  01A0F6  0EF0               	movlw	-16
 18324  01A0F8  50E3               	movf	plusw1,w,c
 18325  01A0FA  5ADE               	subwfb	postinc2,f,c
 18326  01A0FC  0EF1               	movlw	-15
 18327  01A0FE  50E3               	movf	plusw1,w,c
 18328  01A100  5ADE               	subwfb	postinc2,f,c
 18329  01A102  0EF2               	movlw	-14
 18330  01A104  50E3               	movf	plusw1,w,c
 18331  01A106  5ADE               	subwfb	postinc2,f,c
 18332  01A108  0EF3               	movlw	-13
 18333  01A10A  50E3               	movf	plusw1,w,c
 18334  01A10C  5ADE               	subwfb	postinc2,f,c
 18335  01A10E  0EF4               	movlw	-12
 18336  01A110  50E3               	movf	plusw1,w,c
 18337  01A112  5ADE               	subwfb	postinc2,f,c
 18338  01A114  0EF5               	movlw	-11
 18339  01A116  50E3               	movf	plusw1,w,c
 18340  01A118  5ADE               	subwfb	postinc2,f,c
 18341  01A11A  0EF6               	movlw	-10
 18342  01A11C  50E3               	movf	plusw1,w,c
 18343  01A11E  5ADE               	subwfb	postinc2,f,c
 18344  01A120                     l9441:
 18345                           
 18346                           ;stkvar	_divisor @ sp[(-1)+-16]
 18347  01A120  90D8               	bcf	status,0,c
 18348  01A122  0EF6               	movlw	-10
 18349  01A124  32E3               	rrcf	plusw1,f,c
 18350  01A126  0EF5               	movlw	-11
 18351  01A128  32E3               	rrcf	plusw1,f,c
 18352  01A12A  0EF4               	movlw	-12
 18353  01A12C  32E3               	rrcf	plusw1,f,c
 18354  01A12E  0EF3               	movlw	-13
 18355  01A130  32E3               	rrcf	plusw1,f,c
 18356  01A132  0EF2               	movlw	-14
 18357  01A134  32E3               	rrcf	plusw1,f,c
 18358  01A136  0EF1               	movlw	-15
 18359  01A138  32E3               	rrcf	plusw1,f,c
 18360  01A13A  0EF0               	movlw	-16
 18361  01A13C  32E3               	rrcf	plusw1,f,c
 18362  01A13E  0EEF               	movlw	-17
 18363  01A140  32E3               	rrcf	plusw1,f,c
 18364                           
 18365                           ;stkvar	_counter @ sp[(-1)+0]
 18366  01A142  0EFF               	movlw	-1
 18367  01A144  50E3               	movf	plusw1,w,c
 18368  01A146  6E01               	movwf	btemp^0,c
 18369  01A148  0E01               	movlw	1
 18370  01A14A  5E01               	subwf	btemp^0,f,c
 18371  01A14C  0EFF               	movlw	-1
 18372  01A14E  0060  F007  FFE3   	movff	btemp,plusw1
 18373  01A154  A4D8               	btfss	status,2,c
 18374  01A156  D7A4               	goto	u7850
 18375  01A158                     u7870:
 18376                           
 18377                           ;stkvar	_dividend @ sp[(-1)+-8]
 18378  01A158  0EF7               	movlw	247
 18379  01A15A  24E1               	addwf	fsr1l,w,c
 18380  01A15C  6ED9               	movwf	fsr2l,c
 18381  01A15E  0EFF               	movlw	255
 18382  01A160  20E2               	addwfc	fsr1h,w,c
 18383  01A162  6EDA               	movwf	fsr2h,c
 18384                           
 18385                           ;stkvar	?___lomod @ sp[(-1)+-8]
 18386  01A164  0E08               	movlw	8
 18387  01A166  6E01               	movwf	btemp^0,c
 18388  01A168  0EF7               	movlw	-9
 18389  01A16A                     us788999:
 18390  01A16A  006F FF7B FFE3     	movff	postinc2,plusw1
 18391  01A170  28E8               	incf	wreg,w,c
 18392  01A172  2E01               	decfsz	btemp^0,f,c
 18393  01A174  D7FA               	bra	us788999
 18394                           
 18395                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18396  01A176  52E5               	movf	postdec1,f,c
 18397  01A178  0012               	return		;funcret
 18398  01A17A                     __end_of___lomod:
 18399                           	opt callstack 0
 18400                           
 18401 ;; *************** function ___lodiv *****************
 18402 ;; Defined at:
 18403 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 18404 ;; Parameters:    Size  Location     Type
 18405 ;;  dividend        8  [STACK] unsigned long long 
 18406 ;;  divisor         8  [STACK] unsigned long long 
 18407 ;; Auto vars:     Size  Location     Type
 18408 ;;  quotient        8  [STACK] unsigned long long 
 18409 ;;  counter         1  [STACK] unsigned char 
 18410 ;; Return value:  Size  Location     Type
 18411 ;;                  8  [STACK] unsigned long long 
 18412 ;; Registers used:
 18413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18414 ;; Tracked objects:
 18415 ;;		On entry : 0/2
 18416 ;;		On exit  : 0/0
 18417 ;;		Unchanged: 0/0
 18418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18423 ;;Total ram usage:        0 bytes
 18424 ;; Hardware stack levels used:    1
 18425 ;; Hardware stack levels required when called:   15
 18426 ;; This function calls:
 18427 ;;		Nothing
 18428 ;; This function is called by:
 18429 ;;		_utoa
 18430 ;; This function uses a reentrant model
 18431 ;;
 18432                           
 18433                           	psect	text72
 18434  019682                     __ptext72:
 18435                           	opt callstack 0
 18436  019682                     ___lodiv:
 18437                           	opt callstack 0
 18438                           
 18439                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18440  019682  0E09               	movlw	9
 18441  019684  26E1               	addwf	fsr1l,f,c
 18442  019686  0E00               	movlw	0
 18443  019688  22E2               	addwfc	fsr1h,f,c
 18444                           
 18445                           ;stkvar	_quotient @ sp[(-9)+0]
 18446                           
 18447                           ;incstack = 0
 18448 ;; hardware stack exceeded
 18449  01968A  0E07               	movlw	7
 18450  01968C  6E01               	movwf	btemp^0,c
 18451  01968E  0EF7               	movlw	-9
 18452  019690                     u7781:
 18453  019690  6AE3               	clrf	plusw1,c
 18454  019692  2AE8               	incf	wreg,f,c
 18455  019694  0601               	decf	btemp^0,f,c
 18456  019696  E2FC               	bc	u7781
 18457                           
 18458                           ;stkvar	_divisor @ sp[(-9)+-16]
 18459  019698  0EE7               	movlw	-25
 18460  01969A  50E3               	movf	plusw1,w,c
 18461  01969C  E116               	bnz	u7790
 18462  01969E  0EE8               	movlw	-24
 18463  0196A0  50E3               	movf	plusw1,w,c
 18464  0196A2  E113               	bnz	u7790
 18465  0196A4  0EE9               	movlw	-23
 18466  0196A6  50E3               	movf	plusw1,w,c
 18467  0196A8  E110               	bnz	u7790
 18468  0196AA  0EEA               	movlw	-22
 18469  0196AC  50E3               	movf	plusw1,w,c
 18470  0196AE  E10D               	bnz	u7790
 18471  0196B0  0EEB               	movlw	-21
 18472  0196B2  50E3               	movf	plusw1,w,c
 18473  0196B4  E10A               	bnz	u7790
 18474  0196B6  0EEC               	movlw	-20
 18475  0196B8  50E3               	movf	plusw1,w,c
 18476  0196BA  E107               	bnz	u7790
 18477  0196BC  0EED               	movlw	-19
 18478  0196BE  50E3               	movf	plusw1,w,c
 18479  0196C0  E104               	bnz	u7790
 18480  0196C2  0EEE               	movlw	-18
 18481  0196C4  50E3               	movf	plusw1,w,c
 18482  0196C6  B4D8               	btfsc	status,2,c
 18483  0196C8  D088               	goto	u7820
 18484  0196CA                     u7790:
 18485                           
 18486                           ;stkvar	_counter @ sp[(-9)+8]
 18487  0196CA  0EFF               	movlw	-1
 18488  0196CC  6AE3               	clrf	plusw1,c
 18489  0196CE  D012               	goto	L20
 18490  0196D0                     l9409:
 18491                           
 18492                           ;stkvar	_divisor @ sp[(-9)+-16]
 18493  0196D0  90D8               	bcf	status,0,c
 18494  0196D2  0EE7               	movlw	-25
 18495  0196D4  36E3               	rlcf	plusw1,f,c
 18496  0196D6  0EE8               	movlw	-24
 18497  0196D8  36E3               	rlcf	plusw1,f,c
 18498  0196DA  0EE9               	movlw	-23
 18499  0196DC  36E3               	rlcf	plusw1,f,c
 18500  0196DE  0EEA               	movlw	-22
 18501  0196E0  36E3               	rlcf	plusw1,f,c
 18502  0196E2  0EEB               	movlw	-21
 18503  0196E4  36E3               	rlcf	plusw1,f,c
 18504  0196E6  0EEC               	movlw	-20
 18505  0196E8  36E3               	rlcf	plusw1,f,c
 18506  0196EA  0EED               	movlw	-19
 18507  0196EC  36E3               	rlcf	plusw1,f,c
 18508  0196EE  0EEE               	movlw	-18
 18509  0196F0  36E3               	rlcf	plusw1,f,c
 18510                           
 18511                           ;stkvar	_counter @ sp[(-9)+8]
 18512  0196F2  0EFF               	movlw	-1
 18513  0196F4                     L20:
 18514  0196F4  2AE3               	incf	plusw1,f,c
 18515                           
 18516                           ;stkvar	_divisor @ sp[(-9)+-16]
 18517  0196F6  0EEE               	movlw	-18
 18518  0196F8  AEE3               	btfss	plusw1,7,c
 18519  0196FA  D7EA               	goto	l9409
 18520  0196FC                     u7800:
 18521                           
 18522                           ;stkvar	_quotient @ sp[(-9)+0]
 18523  0196FC  90D8               	bcf	status,0,c
 18524  0196FE  0EF7               	movlw	-9
 18525  019700  36E3               	rlcf	plusw1,f,c
 18526  019702  0EF8               	movlw	-8
 18527  019704  36E3               	rlcf	plusw1,f,c
 18528  019706  0EF9               	movlw	-7
 18529  019708  36E3               	rlcf	plusw1,f,c
 18530  01970A  0EFA               	movlw	-6
 18531  01970C  36E3               	rlcf	plusw1,f,c
 18532  01970E  0EFB               	movlw	-5
 18533  019710  36E3               	rlcf	plusw1,f,c
 18534  019712  0EFC               	movlw	-4
 18535  019714  36E3               	rlcf	plusw1,f,c
 18536  019716  0EFD               	movlw	-3
 18537  019718  36E3               	rlcf	plusw1,f,c
 18538  01971A  0EFE               	movlw	-2
 18539  01971C  36E3               	rlcf	plusw1,f,c
 18540                           
 18541                           ;stkvar	_divisor @ sp[(-9)+-16]
 18542                           ;stkvar	_dividend @ sp[(-9)+-8]
 18543  01971E  50E1               	movf	fsr1l,w,c
 18544  019720  0FEF               	addlw	-17
 18545  019722  6ED9               	movwf	fsr2l,c
 18546  019724  50E2               	movf	fsr1h,w,c
 18547  019726  6EDA               	movwf	fsr2h,c
 18548  019728  0EFF               	movlw	255
 18549  01972A  22DA               	addwfc	fsr2h,f,c
 18550  01972C  0EE7               	movlw	-25
 18551  01972E  50E3               	movf	plusw1,w,c
 18552  019730  5CDE               	subwf	postinc2,w,c
 18553  019732  0EE8               	movlw	-24
 18554  019734  50E3               	movf	plusw1,w,c
 18555  019736  58DE               	subwfb	postinc2,w,c
 18556  019738  0EE9               	movlw	-23
 18557  01973A  50E3               	movf	plusw1,w,c
 18558  01973C  58DE               	subwfb	postinc2,w,c
 18559  01973E  0EEA               	movlw	-22
 18560  019740  50E3               	movf	plusw1,w,c
 18561  019742  58DE               	subwfb	postinc2,w,c
 18562  019744  0EEB               	movlw	-21
 18563  019746  50E3               	movf	plusw1,w,c
 18564  019748  58DE               	subwfb	postinc2,w,c
 18565  01974A  0EEC               	movlw	-20
 18566  01974C  50E3               	movf	plusw1,w,c
 18567  01974E  58DE               	subwfb	postinc2,w,c
 18568  019750  0EED               	movlw	-19
 18569  019752  50E3               	movf	plusw1,w,c
 18570  019754  58DE               	subwfb	postinc2,w,c
 18571  019756  0EEE               	movlw	-18
 18572  019758  50E3               	movf	plusw1,w,c
 18573  01975A  58DE               	subwfb	postinc2,w,c
 18574  01975C  A0D8               	btfss	status,0,c
 18575  01975E  D021               	goto	l9421
 18576                           
 18577                           ;stkvar	_divisor @ sp[(-9)+-16]
 18578                           ;stkvar	_dividend @ sp[(-9)+-8]
 18579  019760  50E1               	movf	fsr1l,w,c
 18580  019762  0FEF               	addlw	-17
 18581  019764  6ED9               	movwf	fsr2l,c
 18582  019766  50E2               	movf	fsr1h,w,c
 18583  019768  6EDA               	movwf	fsr2h,c
 18584  01976A  0EFF               	movlw	255
 18585  01976C  22DA               	addwfc	fsr2h,f,c
 18586  01976E  0EE7               	movlw	-25
 18587  019770  50E3               	movf	plusw1,w,c
 18588  019772  5EDE               	subwf	postinc2,f,c
 18589  019774  0EE8               	movlw	-24
 18590  019776  50E3               	movf	plusw1,w,c
 18591  019778  5ADE               	subwfb	postinc2,f,c
 18592  01977A  0EE9               	movlw	-23
 18593  01977C  50E3               	movf	plusw1,w,c
 18594  01977E  5ADE               	subwfb	postinc2,f,c
 18595  019780  0EEA               	movlw	-22
 18596  019782  50E3               	movf	plusw1,w,c
 18597  019784  5ADE               	subwfb	postinc2,f,c
 18598  019786  0EEB               	movlw	-21
 18599  019788  50E3               	movf	plusw1,w,c
 18600  01978A  5ADE               	subwfb	postinc2,f,c
 18601  01978C  0EEC               	movlw	-20
 18602  01978E  50E3               	movf	plusw1,w,c
 18603  019790  5ADE               	subwfb	postinc2,f,c
 18604  019792  0EED               	movlw	-19
 18605  019794  50E3               	movf	plusw1,w,c
 18606  019796  5ADE               	subwfb	postinc2,f,c
 18607  019798  0EEE               	movlw	-18
 18608  01979A  50E3               	movf	plusw1,w,c
 18609  01979C  5ADE               	subwfb	postinc2,f,c
 18610                           
 18611                           ;stkvar	_quotient @ sp[(-9)+0]
 18612  01979E  0EF7               	movlw	-9
 18613  0197A0  80E3               	bsf	plusw1,0,c
 18614  0197A2                     l9421:
 18615                           
 18616                           ;stkvar	_divisor @ sp[(-9)+-16]
 18617  0197A2  90D8               	bcf	status,0,c
 18618  0197A4  0EEE               	movlw	-18
 18619  0197A6  32E3               	rrcf	plusw1,f,c
 18620  0197A8  0EED               	movlw	-19
 18621  0197AA  32E3               	rrcf	plusw1,f,c
 18622  0197AC  0EEC               	movlw	-20
 18623  0197AE  32E3               	rrcf	plusw1,f,c
 18624  0197B0  0EEB               	movlw	-21
 18625  0197B2  32E3               	rrcf	plusw1,f,c
 18626  0197B4  0EEA               	movlw	-22
 18627  0197B6  32E3               	rrcf	plusw1,f,c
 18628  0197B8  0EE9               	movlw	-23
 18629  0197BA  32E3               	rrcf	plusw1,f,c
 18630  0197BC  0EE8               	movlw	-24
 18631  0197BE  32E3               	rrcf	plusw1,f,c
 18632  0197C0  0EE7               	movlw	-25
 18633  0197C2  32E3               	rrcf	plusw1,f,c
 18634                           
 18635                           ;stkvar	_counter @ sp[(-9)+8]
 18636  0197C4  0EFF               	movlw	-1
 18637  0197C6  50E3               	movf	plusw1,w,c
 18638  0197C8  6E01               	movwf	btemp^0,c
 18639  0197CA  0E01               	movlw	1
 18640  0197CC  5E01               	subwf	btemp^0,f,c
 18641  0197CE  0EFF               	movlw	-1
 18642  0197D0  0060  F007  FFE3   	movff	btemp,plusw1
 18643  0197D6  A4D8               	btfss	status,2,c
 18644  0197D8  D791               	goto	u7800
 18645  0197DA                     u7820:
 18646                           
 18647                           ;stkvar	_quotient @ sp[(-9)+0]
 18648  0197DA  0EF7               	movlw	247
 18649  0197DC  24E1               	addwf	fsr1l,w,c
 18650  0197DE  6ED9               	movwf	fsr2l,c
 18651  0197E0  0EFF               	movlw	255
 18652  0197E2  20E2               	addwfc	fsr1h,w,c
 18653  0197E4  6EDA               	movwf	fsr2h,c
 18654                           
 18655                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 18656  0197E6  0E08               	movlw	8
 18657  0197E8  6E01               	movwf	btemp^0,c
 18658  0197EA  0EEF               	movlw	-17
 18659  0197EC                     us783999:
 18660  0197EC  006F FF7B FFE3     	movff	postinc2,plusw1
 18661  0197F2  28E8               	incf	wreg,w,c
 18662  0197F4  2E01               	decfsz	btemp^0,f,c
 18663  0197F6  D7FA               	bra	us783999
 18664                           
 18665                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18666  0197F8  0EF7               	movlw	247
 18667  0197FA  26E1               	addwf	fsr1l,f,c
 18668  0197FC  0EFF               	movlw	255
 18669  0197FE  22E2               	addwfc	fsr1h,f,c
 18670  019800  0012               	return		;funcret
 18671  019802                     __end_of___lodiv:
 18672                           	opt callstack 0
 18673                           
 18674 ;; *************** function _strncmp *****************
 18675 ;; Defined at:
 18676 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 18677 ;; Parameters:    Size  Location     Type
 18678 ;;  _l              2  [STACK] PTR const unsigned char 
 18679 ;;		 -> ct(3), STR_81(127), STR_79(3), STR_78(3), 
 18680 ;;		 -> STR_77(19), STR_76(19), STR_75(19), STR_74(19), 
 18681 ;;		 -> STR_73(19), STR_72(19), STR_71(24), STR_70(15), 
 18682 ;;		 -> STR_69(15), STR_68(15), STR_67(10), STR_66(10), 
 18683 ;;		 -> STR_65(19), STR_64(19), STR_61(3), STR_60(3), 
 18684 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 18685 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 18686 ;;		 -> STR_51(21), STR_50(20), STR_49(20), STR_48(21), 
 18687 ;;		 -> STR_47(21), STR_46(21), STR_45(22), STR_44(22), 
 18688 ;;		 -> STR_43(22), STR_42(23), STR_41(23), STR_40(23), 
 18689 ;;		 -> STR_39(29), STR_38(23), STR_37(23), STR_36(22), 
 18690 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 18691 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 18692 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(17), 
 18693 ;;		 -> STR_23(16), STR_22(16), STR_21(26), STR_20(26), 
 18694 ;;		 -> STR_19(22), STR_18(21), STR_17(21), STR_16(21), 
 18695 ;;		 -> STR_15(21), STR_14(22), STR_13(22), STR_12(22), 
 18696 ;;		 -> STR_11(26), STR_10(21), STR_9(21), STR_8(21), 
 18697 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 18698 ;;		 -> STR_2(21), STR_1(21), 
 18699 ;;  _r              2  [STACK] PTR const unsigned char 
 18700 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_101(3), 
 18701 ;;		 -> STR_96(3), STR_92(3), 
 18702 ;;  n               2  [STACK] unsigned int 
 18703 ;; Auto vars:     Size  Location     Type
 18704 ;;  r               2  [STACK] PTR const unsigned char 
 18705 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_101(3), 
 18706 ;;		 -> STR_96(3), STR_92(3), 
 18707 ;;  l               2  [STACK] PTR const unsigned char 
 18708 ;;		 -> ct(3), STR_81(127), STR_79(3), STR_78(3), 
 18709 ;;		 -> STR_77(19), STR_76(19), STR_75(19), STR_74(19), 
 18710 ;;		 -> STR_73(19), STR_72(19), STR_71(24), STR_70(15), 
 18711 ;;		 -> STR_69(15), STR_68(15), STR_67(10), STR_66(10), 
 18712 ;;		 -> STR_65(19), STR_64(19), STR_61(3), STR_60(3), 
 18713 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 18714 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 18715 ;;		 -> STR_51(21), STR_50(20), STR_49(20), STR_48(21), 
 18716 ;;		 -> STR_47(21), STR_46(21), STR_45(22), STR_44(22), 
 18717 ;;		 -> STR_43(22), STR_42(23), STR_41(23), STR_40(23), 
 18718 ;;		 -> STR_39(29), STR_38(23), STR_37(23), STR_36(22), 
 18719 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 18720 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 18721 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(17), 
 18722 ;;		 -> STR_23(16), STR_22(16), STR_21(26), STR_20(26), 
 18723 ;;		 -> STR_19(22), STR_18(21), STR_17(21), STR_16(21), 
 18724 ;;		 -> STR_15(21), STR_14(22), STR_13(22), STR_12(22), 
 18725 ;;		 -> STR_11(26), STR_10(21), STR_9(21), STR_8(21), 
 18726 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 18727 ;;		 -> STR_2(21), STR_1(21), 
 18728 ;; Return value:  Size  Location     Type
 18729 ;;                  2  [STACK] int 
 18730 ;; Registers used:
 18731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 18732 ;; Tracked objects:
 18733 ;;		On entry : 0/0
 18734 ;;		On exit  : 0/0
 18735 ;;		Unchanged: 0/0
 18736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18741 ;;Total ram usage:        0 bytes
 18742 ;; Hardware stack levels used:    1
 18743 ;; Hardware stack levels required when called:   15
 18744 ;; This function calls:
 18745 ;;		Nothing
 18746 ;; This function is called by:
 18747 ;;		_vfpfcnvrt
 18748 ;; This function uses a reentrant model
 18749 ;;
 18750                           
 18751                           	psect	text73
 18752  01860A                     __ptext73:
 18753                           	opt callstack 0
 18754  01860A                     _strncmp:
 18755                           	opt callstack 0
 18756                           
 18757                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18758  01860A  52E6               	movf	postinc1,f,c
 18759  01860C  52E6               	movf	postinc1,f,c
 18760  01860E  52E6               	movf	postinc1,f,c
 18761  018610  52E6               	movf	postinc1,f,c
 18762                           
 18763                           ;stkvar	__l @ sp[(-4)+-2]
 18764                           
 18765                           ;incstack = 0
 18766 ;; hardware stack exceeded
 18767  018612  0EFA               	movlw	-6
 18768  018614  006F FF8C  F00B    	movff	plusw1,btemp+10
 18769  01861A  0EFB               	movlw	-5
 18770  01861C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18771                           
 18772                           ;stkvar	_l @ sp[(-4)+2]
 18773  018622  0EFF               	movlw	-1
 18774  018624  0060  F033  FFE3   	movff	btemp+11,plusw1
 18775  01862A  0EFE               	movlw	-2
 18776  01862C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18777                           
 18778                           ;stkvar	__r @ sp[(-4)+-4]
 18779  018632  0EF8               	movlw	-8
 18780  018634  006F FF8C  F00B    	movff	plusw1,btemp+10
 18781  01863A  0EF9               	movlw	-7
 18782  01863C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18783                           
 18784                           ;stkvar	_r @ sp[(-4)+0]
 18785  018642  0EFD               	movlw	-3
 18786  018644  0060  F033  FFE3   	movff	btemp+11,plusw1
 18787  01864A  0EFC               	movlw	-4
 18788  01864C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18789                           
 18790                           ;stkvar	_n @ sp[(-4)+-6]
 18791  018652  0EF6               	movlw	-10
 18792  018654  006F FF8C  F001    	movff	plusw1,btemp
 18793  01865A  0E01               	movlw	1
 18794  01865C  5E01               	subwf	btemp^0,f,c
 18795  01865E  0EF6               	movlw	-10
 18796  018660  0060  F007  FFE3   	movff	btemp,plusw1
 18797  018666  0EF7               	movlw	-9
 18798  018668  006F FF8C  F001    	movff	plusw1,btemp
 18799  01866E  0E00               	movlw	0
 18800  018670  5A01               	subwfb	btemp^0,f,c
 18801  018672  0EF7               	movlw	-9
 18802  018674  0060  F007  FFE3   	movff	btemp,plusw1
 18803  01867A  0EF6               	movlw	-10
 18804  01867C  28E3               	incf	plusw1,w,c
 18805  01867E  E13F               	bnz	l10091
 18806  018680  0EF7               	movlw	-9
 18807  018682  28E3               	incf	plusw1,w,c
 18808  018684  A4D8               	btfss	status,2,c
 18809  018686  D03B               	goto	l10091
 18810  018688  0E00               	movlw	0
 18811  01868A  6E01               	movwf	btemp^0,c
 18812  01868C  0E00               	movlw	0
 18813  01868E  6E02               	movwf	(btemp+1)^0,c
 18814  018690  D0C7               	goto	l3712
 18815  018692                     l10089:
 18816                           
 18817                           ;stkvar	_l @ sp[(-4)+2]
 18818  018692  0EFE               	movlw	-2
 18819  018694  50E3               	movf	plusw1,w,c
 18820  018696  0F01               	addlw	1
 18821  018698  6E01               	movwf	btemp^0,c
 18822  01869A  0EFE               	movlw	-2
 18823  01869C  0060  F007  FFE3   	movff	btemp,plusw1
 18824  0186A2  6A01               	clrf	btemp^0,c
 18825  0186A4  0EFF               	movlw	-1
 18826  0186A6  50E3               	movf	plusw1,w,c
 18827  0186A8  2001               	addwfc	btemp^0,w,c
 18828  0186AA  6E01               	movwf	btemp^0,c
 18829  0186AC  0EFF               	movlw	-1
 18830  0186AE  0060  F007  FFE3   	movff	btemp,plusw1
 18831                           
 18832                           ;stkvar	_r @ sp[(-4)+0]
 18833  0186B4  0EFC               	movlw	-4
 18834  0186B6  50E3               	movf	plusw1,w,c
 18835  0186B8  0F01               	addlw	1
 18836  0186BA  6E01               	movwf	btemp^0,c
 18837  0186BC  0EFC               	movlw	-4
 18838  0186BE  0060  F007  FFE3   	movff	btemp,plusw1
 18839  0186C4  6A01               	clrf	btemp^0,c
 18840  0186C6  0EFD               	movlw	-3
 18841  0186C8  50E3               	movf	plusw1,w,c
 18842  0186CA  2001               	addwfc	btemp^0,w,c
 18843  0186CC  6E01               	movwf	btemp^0,c
 18844  0186CE  0EFD               	movlw	-3
 18845  0186D0  0060  F007  FFE3   	movff	btemp,plusw1
 18846                           
 18847                           ;stkvar	_n @ sp[(-4)+-6]
 18848  0186D6  0EF6               	movlw	-10
 18849  0186D8  006F FF8C  F001    	movff	plusw1,btemp
 18850  0186DE  0E01               	movlw	1
 18851  0186E0  5E01               	subwf	btemp^0,f,c
 18852  0186E2  0EF6               	movlw	-10
 18853  0186E4  0060  F007  FFE3   	movff	btemp,plusw1
 18854  0186EA  0EF7               	movlw	-9
 18855  0186EC  006F FF8C  F001    	movff	plusw1,btemp
 18856  0186F2  0E00               	movlw	0
 18857  0186F4  5A01               	subwfb	btemp^0,f,c
 18858  0186F6  0EF7               	movlw	-9
 18859  0186F8  0060  F007  FFE3   	movff	btemp,plusw1
 18860  0186FE                     l10091:
 18861                           
 18862                           ;stkvar	_l @ sp[(-4)+2]
 18863  0186FE  0EFE               	movlw	-2
 18864  018700  006F FF8F FFF6     	movff	plusw1,tblptrl
 18865  018706  0EFF               	movlw	-1
 18866  018708  006F FF8F FFF7     	movff	plusw1,tblptrh
 18867  01870E  0E00               	movlw	low (__mediumconst shr (0+16))
 18868  018710  6EF8               	movwf	tblptru,c
 18869  018712  0E1F               	movlw	(high __ramtop+-1)
 18870  018714  64F7               	cpfsgt	tblptrh,c
 18871  018716  D003               	bra	u9077
 18872  018718  0008               	tblrd		*
 18873  01871A  50F5               	movf	tablat,w,c
 18874  01871C  D007               	bra	u9070
 18875  01871E                     u9077:
 18876  01871E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18877  018724  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18878  01872A  50EF               	movf	indf0,w,c
 18879  01872C                     u9070:
 18880  01872C  0900               	iorlw	0
 18881  01872E  B4D8               	btfsc	status,2,c
 18882  018730  D04A               	goto	u9110
 18883                           
 18884                           ;stkvar	_r @ sp[(-4)+0]
 18885  018732  50E1               	movf	fsr1l,w,c
 18886  018734  0FFC               	addlw	-4
 18887  018736  6ED9               	movwf	fsr2l,c
 18888  018738  50E2               	movf	fsr1h,w,c
 18889  01873A  6EDA               	movwf	fsr2h,c
 18890  01873C  0EFF               	movlw	255
 18891  01873E  22DA               	addwfc	fsr2h,f,c
 18892  018740  006F FF7B FFF6     	movff	postinc2,tblptrl
 18893  018746  006F FF77 FFF7     	movff	postdec2,tblptrh
 18894  01874C                     	if	0	;tblptru may be non-zero
 18895  01874C                     	endif
 18896  01874C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18897  01874C  0E00               	movlw	low (__mediumconst shr (0+16))
 18898  01874E  6EF8               	movwf	tblptru,c
 18899  018750                     	endif
 18900  018750  0008               	tblrd		*
 18901  018752  50F5               	movf	tablat,w,c
 18902  018754  0900               	iorlw	0
 18903  018756  B4D8               	btfsc	status,2,c
 18904  018758  D036               	goto	u9110
 18905                           
 18906                           ;stkvar	_n @ sp[(-4)+-6]
 18907  01875A  0EF6               	movlw	-10
 18908  01875C  006F FF8C  F001    	movff	plusw1,btemp
 18909  018762  0EF7               	movlw	-9
 18910  018764  50E3               	movf	plusw1,w,c
 18911  018766  1001               	iorwf	btemp^0,w,c
 18912  018768  B4D8               	btfsc	status,2,c
 18913  01876A  D02D               	goto	u9110
 18914                           
 18915                           ;stkvar	_r @ sp[(-4)+0]
 18916  01876C  50E1               	movf	fsr1l,w,c
 18917  01876E  0FFC               	addlw	-4
 18918  018770  6ED9               	movwf	fsr2l,c
 18919  018772  50E2               	movf	fsr1h,w,c
 18920  018774  6EDA               	movwf	fsr2h,c
 18921  018776  0EFF               	movlw	255
 18922  018778  22DA               	addwfc	fsr2h,f,c
 18923  01877A  006F FF7B FFF6     	movff	postinc2,tblptrl
 18924  018780  006F FF77 FFF7     	movff	postdec2,tblptrh
 18925  018786                     	if	0	;tblptru may be non-zero
 18926  018786                     	endif
 18927  018786                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18928  018786  0E00               	movlw	low (__mediumconst shr (0+16))
 18929  018788  6EF8               	movwf	tblptru,c
 18930  01878A                     	endif
 18931  01878A  0008               	tblrd		*
 18932  01878C  006F FFD4  F00C    	movff	tablat,btemp+11
 18933                           
 18934                           ;stkvar	_l @ sp[(-4)+2]
 18935  018792  0EFE               	movlw	-2
 18936  018794  006F FF8F FFF6     	movff	plusw1,tblptrl
 18937  01879A  0EFF               	movlw	-1
 18938  01879C  006F FF8F FFF7     	movff	plusw1,tblptrh
 18939  0187A2  0E00               	movlw	low (__mediumconst shr (0+16))
 18940  0187A4  6EF8               	movwf	tblptru,c
 18941  0187A6  0E1F               	movlw	(high __ramtop+-1)
 18942  0187A8  64F7               	cpfsgt	tblptrh,c
 18943  0187AA  D003               	bra	u9117
 18944  0187AC  0008               	tblrd		*
 18945  0187AE  50F5               	movf	tablat,w,c
 18946  0187B0  D007               	bra	u9115
 18947  0187B2                     u9117:
 18948  0187B2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18949  0187B8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18950  0187BE  50EF               	movf	indf0,w,c
 18951  0187C0                     u9115:
 18952  0187C0  180C               	xorwf	(btemp+11)^0,w,c
 18953  0187C2  B4D8               	btfsc	status,2,c
 18954  0187C4  D766               	goto	l10089
 18955  0187C6                     u9110:
 18956                           
 18957                           ;stkvar	_l @ sp[(-4)+2]
 18958  0187C6  0EFE               	movlw	-2
 18959  0187C8  006F FF8F FFF6     	movff	plusw1,tblptrl
 18960  0187CE  0EFF               	movlw	-1
 18961  0187D0  006F FF8F FFF7     	movff	plusw1,tblptrh
 18962  0187D6  0E00               	movlw	low (__mediumconst shr (0+16))
 18963  0187D8  6EF8               	movwf	tblptru,c
 18964  0187DA  0E1F               	movlw	(high __ramtop+-1)
 18965  0187DC  64F7               	cpfsgt	tblptrh,c
 18966  0187DE  D003               	bra	u9127
 18967  0187E0  0008               	tblrd		*
 18968  0187E2  50F5               	movf	tablat,w,c
 18969  0187E4  D007               	bra	u9120
 18970  0187E6                     u9127:
 18971  0187E6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18972  0187EC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18973  0187F2  50EF               	movf	indf0,w,c
 18974  0187F4                     u9120:
 18975  0187F4  6E01               	movwf	btemp^0,c
 18976  0187F6  6A02               	clrf	(btemp+1)^0,c
 18977                           
 18978                           ;stkvar	_r @ sp[(-4)+0]
 18979  0187F8  50E1               	movf	fsr1l,w,c
 18980  0187FA  0FFC               	addlw	-4
 18981  0187FC  6ED9               	movwf	fsr2l,c
 18982  0187FE  50E2               	movf	fsr1h,w,c
 18983  018800  6EDA               	movwf	fsr2h,c
 18984  018802  0EFF               	movlw	255
 18985  018804  22DA               	addwfc	fsr2h,f,c
 18986  018806  006F FF7B FFF6     	movff	postinc2,tblptrl
 18987  01880C  006F FF77 FFF7     	movff	postdec2,tblptrh
 18988  018812                     	if	0	;tblptru may be non-zero
 18989  018812                     	endif
 18990  018812                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18991  018812  0E00               	movlw	low (__mediumconst shr (0+16))
 18992  018814  6EF8               	movwf	tblptru,c
 18993  018816                     	endif
 18994  018816  0008               	tblrd		*
 18995  018818  50F5               	movf	tablat,w,c
 18996  01881A  5E01               	subwf	btemp^0,f,c
 18997  01881C  0E00               	movlw	0
 18998  01881E  5A02               	subwfb	(btemp+1)^0,f,c
 18999  018820                     l3712:
 19000                           
 19001                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 19002  018820  0EF6               	movlw	246
 19003  018822  26E1               	addwf	fsr1l,f,c
 19004  018824  0EFF               	movlw	255
 19005  018826  22E2               	addwfc	fsr1h,f,c
 19006  018828  0012               	return		;funcret
 19007  01882A                     __end_of_strncmp:
 19008                           	opt callstack 0
 19009                           
 19010 ;; *************** function _stoa *****************
 19011 ;; Defined at:
 19012 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19013 ;; Parameters:    Size  Location     Type
 19014 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19015 ;;		 -> f(6), NULL(0), 
 19016 ;;  s               2  [STACK] PTR unsigned char 
 19017 ;;		 -> ?_printf(2), ?_sprintf(2), STR_63(9), STR_62(12), 
 19018 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 19019 ;;		 -> V(192), 
 19020 ;; Auto vars:     Size  Location     Type
 19021 ;;  nuls            7  [STACK] unsigned char [7]
 19022 ;;  l               2  [STACK] int 
 19023 ;;  p               2  [STACK] int 
 19024 ;;  cp              2  [STACK] PTR unsigned char 
 19025 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_63(9), 
 19026 ;;		 -> STR_62(12), D.lcd(480), D(482), T(144), 
 19027 ;;		 -> STR_3(5), V(192), 
 19028 ;;  w               2  [STACK] int 
 19029 ;;  i               2  [STACK] int 
 19030 ;; Return value:  Size  Location     Type
 19031 ;;                  2  [STACK] int 
 19032 ;; Registers used:
 19033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19034 ;; Tracked objects:
 19035 ;;		On entry : 0/0
 19036 ;;		On exit  : 0/0
 19037 ;;		Unchanged: 0/0
 19038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19043 ;;Total ram usage:        0 bytes
 19044 ;; Hardware stack levels used:    1
 19045 ;; Hardware stack levels required when called:   18
 19046 ;; This function calls:
 19047 ;;		_fputc
 19048 ;;		_strlen
 19049 ;; This function is called by:
 19050 ;;		_vfpfcnvrt
 19051 ;; This function uses a reentrant model
 19052 ;;
 19053                           
 19054                           	psect	text74
 19055  0179D2                     __ptext74:
 19056                           	opt callstack 0
 19057  0179D2                     _stoa:
 19058                           	opt callstack 0
 19059                           
 19060                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19061  0179D2  0E11               	movlw	17
 19062  0179D4  26E1               	addwf	fsr1l,f,c
 19063  0179D6  0E00               	movlw	0
 19064  0179D8  22E2               	addwfc	fsr1h,f,c
 19065                           
 19066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 19067                           
 19068                           ;incstack = 0
 19069 ;; hardware stack exceeded
 19070  0179DA  EE20  F100         	lfsr	2,stoa@F1166
 19071                           
 19072                           ;stkvar	_nuls @ sp[(-17)+0]
 19073  0179DE  0E07               	movlw	7
 19074  0179E0  6E01               	movwf	btemp^0,c
 19075  0179E2  0EEF               	movlw	-17
 19076  0179E4                     us1253999:
 19077  0179E4  006F FF7B FFE3     	movff	postinc2,plusw1
 19078  0179EA  28E8               	incf	wreg,w,c
 19079  0179EC  2E01               	decfsz	btemp^0,f,c
 19080  0179EE  D7FA               	bra	us1253999
 19081                           
 19082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 19083                           ;stkvar	_s @ sp[(-17)+-4]
 19084  0179F0  0EEB               	movlw	-21
 19085  0179F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 19086  0179F8  0EEC               	movlw	-20
 19087  0179FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19088                           
 19089                           ;stkvar	_cp @ sp[(-17)+11]
 19090  017A00  0EFB               	movlw	-5
 19091  017A02  0060  F033  FFE3   	movff	btemp+11,plusw1
 19092  017A08  0EFA               	movlw	-6
 19093  017A0A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19094                           
 19095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 19096                           ;stkvar	_cp @ sp[(-17)+11]
 19097  017A10  0EFA               	movlw	-6
 19098  017A12  006F FF8C  F001    	movff	plusw1,btemp
 19099  017A18  0EFB               	movlw	-5
 19100  017A1A  50E3               	movf	plusw1,w,c
 19101  017A1C  1001               	iorwf	btemp^0,w,c
 19102  017A1E  A4D8               	btfss	status,2,c
 19103  017A20  D00E               	goto	l13487
 19104                           
 19105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 19106                           ;stkvar	_nuls @ sp[(-17)+0]
 19107  017A22  0EEF               	movlw	239
 19108  017A24  24E1               	addwf	fsr1l,w,c
 19109  017A26  6E0B               	movwf	(btemp+10)^0,c
 19110  017A28  0EFF               	movlw	255
 19111  017A2A  20E2               	addwfc	fsr1h,w,c
 19112  017A2C  6E0C               	movwf	(btemp+11)^0,c
 19113                           
 19114                           ;stkvar	_cp @ sp[(-17)+11]
 19115  017A2E  0EFB               	movlw	-5
 19116  017A30  0060  F033  FFE3   	movff	btemp+11,plusw1
 19117  017A36  0EFA               	movlw	-6
 19118  017A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19119  017A3E                     l13487:
 19120                           
 19121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 19122                           ;stkvar	_cp @ sp[(-17)+11]
 19123  017A3E  0EFA               	movlw	-6
 19124  017A40  006F FF8F FFE6     	movff	plusw1,postinc1
 19125  017A46  006F FF8F FFE6     	movff	plusw1,postinc1
 19126  017A4C  ECDF  F0DB         	call	_strlen	;wreg free
 19127                           
 19128                           ;stkvar	_l @ sp[(-17)+7]
 19129  017A50  0EF6               	movlw	-10
 19130  017A52  0060  F007  FFE3   	movff	btemp,plusw1
 19131  017A58  0EF7               	movlw	-9
 19132  017A5A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19133                           
 19134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 19135                           ;stkvar	_p @ sp[(-17)+9]
 19136  017A60  0EF8               	movlw	-8
 19137  017A62  0060  F0F3  FFE3   	movff	_prec,plusw1
 19138  017A68  0EF9               	movlw	-7
 19139  017A6A  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 19140                           
 19141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 19142                           ;stkvar	_p @ sp[(-17)+9]
 19143  017A70  0EF9               	movlw	-7
 19144  017A72  BEE3               	btfsc	plusw1,7,c
 19145  017A74  D023               	goto	l2537
 19146                           
 19147                           ;stkvar	_l @ sp[(-17)+7]
 19148                           ;stkvar	_p @ sp[(-17)+9]
 19149  017A76  50E1               	movf	fsr1l,w,c
 19150  017A78  0FF8               	addlw	-8
 19151  017A7A  6ED9               	movwf	fsr2l,c
 19152  017A7C  50E2               	movf	fsr1h,w,c
 19153  017A7E  6EDA               	movwf	fsr2h,c
 19154  017A80  0EFF               	movlw	255
 19155  017A82  22DA               	addwfc	fsr2h,f,c
 19156  017A84  0EF6               	movlw	-10
 19157  017A86  50E3               	movf	plusw1,w,c
 19158  017A88  5CDE               	subwf	postinc2,w,c
 19159  017A8A  50DE               	movf	postinc2,w,c
 19160  017A8C  0A80               	xorlw	128
 19161  017A8E  6E01               	movwf	btemp^0,c
 19162  017A90  0EF7               	movlw	-9
 19163  017A92  50E3               	movf	plusw1,w,c
 19164  017A94  0A80               	xorlw	128
 19165  017A96  5801               	subwfb	btemp^0,w,c
 19166  017A98  B0D8               	btfsc	status,0,c
 19167  017A9A  D010               	goto	l2537
 19168                           
 19169                           ;stkvar	_p @ sp[(-17)+9]
 19170                           ;stkvar	_l @ sp[(-17)+7]
 19171  017A9C  0EF8               	movlw	-8
 19172  017A9E  006F FF8C  F001    	movff	plusw1,btemp
 19173  017AA4  0EF6               	movlw	-10
 19174  017AA6  0060  F007  FFE3   	movff	btemp,plusw1
 19175  017AAC  0EF9               	movlw	-7
 19176  017AAE  006F FF8C  F001    	movff	plusw1,btemp
 19177  017AB4  0EF7               	movlw	-9
 19178  017AB6  0060  F007  FFE3   	movff	btemp,plusw1
 19179  017ABC                     l2537:
 19180                           
 19181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 19182                           ;stkvar	_l @ sp[(-17)+7]
 19183                           ;stkvar	_p @ sp[(-17)+9]
 19184  017ABC  0EF6               	movlw	-10
 19185  017ABE  006F FF8C  F001    	movff	plusw1,btemp
 19186  017AC4  0EF8               	movlw	-8
 19187  017AC6  0060  F007  FFE3   	movff	btemp,plusw1
 19188  017ACC  0EF7               	movlw	-9
 19189  017ACE  006F FF8C  F001    	movff	plusw1,btemp
 19190  017AD4  0EF9               	movlw	-7
 19191  017AD6  0060  F007  FFE3   	movff	btemp,plusw1
 19192                           
 19193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 19194                           ;stkvar	_w @ sp[(-17)+13]
 19195  017ADC  0EFC               	movlw	-4
 19196  017ADE  0060  F0EB  FFE3   	movff	_width,plusw1
 19197  017AE4  0EFD               	movlw	-3
 19198  017AE6  0060  F0EF  FFE3   	movff	_width+1,plusw1
 19199                           
 19200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 19201  017AEC  A03E               	btfss	_flags^0,0,c
 19202  017AEE  D01F               	goto	l13507
 19203  017AF0  D031               	goto	u12580
 19204  017AF2                     l13503:
 19205                           
 19206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 19207                           ;stkvar	_fp @ sp[(-17)+-2]
 19208  017AF2  0EED               	movlw	-19
 19209  017AF4  006F FF8F FFE6     	movff	plusw1,postinc1
 19210  017AFA  006F FF8F FFE6     	movff	plusw1,postinc1
 19211  017B00  0E20               	movlw	32
 19212  017B02  6EE6               	movwf	postinc1,c
 19213  017B04  0E00               	movlw	0
 19214  017B06  6EE6               	movwf	postinc1,c
 19215  017B08  ECF0  F0D1         	call	_fputc	;wreg free
 19216                           
 19217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 19218                           ;stkvar	_l @ sp[(-17)+7]
 19219  017B0C  0EF6               	movlw	-10
 19220  017B0E  50E3               	movf	plusw1,w,c
 19221  017B10  0F01               	addlw	1
 19222  017B12  6E01               	movwf	btemp^0,c
 19223  017B14  0EF6               	movlw	-10
 19224  017B16  0060  F007  FFE3   	movff	btemp,plusw1
 19225  017B1C  6A01               	clrf	btemp^0,c
 19226  017B1E  0EF7               	movlw	-9
 19227  017B20  50E3               	movf	plusw1,w,c
 19228  017B22  2001               	addwfc	btemp^0,w,c
 19229  017B24  6E01               	movwf	btemp^0,c
 19230  017B26  0EF7               	movlw	-9
 19231  017B28  0060  F007  FFE3   	movff	btemp,plusw1
 19232  017B2E                     l13507:
 19233                           
 19234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 19235                           ;stkvar	_w @ sp[(-17)+13]
 19236                           ;stkvar	_l @ sp[(-17)+7]
 19237  017B2E  50E1               	movf	fsr1l,w,c
 19238  017B30  0FF6               	addlw	-10
 19239  017B32  6ED9               	movwf	fsr2l,c
 19240  017B34  50E2               	movf	fsr1h,w,c
 19241  017B36  6EDA               	movwf	fsr2h,c
 19242  017B38  0EFF               	movlw	255
 19243  017B3A  22DA               	addwfc	fsr2h,f,c
 19244  017B3C  0EFC               	movlw	-4
 19245  017B3E  50E3               	movf	plusw1,w,c
 19246  017B40  5CDE               	subwf	postinc2,w,c
 19247  017B42  50DE               	movf	postinc2,w,c
 19248  017B44  0A80               	xorlw	128
 19249  017B46  6E01               	movwf	btemp^0,c
 19250  017B48  0EFD               	movlw	-3
 19251  017B4A  50E3               	movf	plusw1,w,c
 19252  017B4C  0A80               	xorlw	128
 19253  017B4E  5801               	subwfb	btemp^0,w,c
 19254  017B50  A0D8               	btfss	status,0,c
 19255  017B52  D7CF               	goto	l13503
 19256  017B54                     u12580:
 19257                           
 19258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 19259                           ;stkvar	_i @ sp[(-17)+15]
 19260  017B54  0EFE               	movlw	-2
 19261  017B56  6AE3               	clrf	plusw1,c
 19262  017B58  0EFF               	movlw	-1
 19263  017B5A  6AE3               	clrf	plusw1,c
 19264                           
 19265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 19266  017B5C  D045               	goto	l13517
 19267  017B5E                     l13511:
 19268                           
 19269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 19270                           ;stkvar	_fp @ sp[(-17)+-2]
 19271  017B5E  0EED               	movlw	-19
 19272  017B60  006F FF8F FFE6     	movff	plusw1,postinc1
 19273  017B66  006F FF8F FFE6     	movff	plusw1,postinc1
 19274                           
 19275                           ;stkvar	_cp @ sp[(-19)+11]
 19276  017B6C  0EF8               	movlw	-8
 19277  017B6E  006F FF8F FFF6     	movff	plusw1,tblptrl
 19278  017B74  0EF9               	movlw	-7
 19279  017B76  006F FF8F FFF7     	movff	plusw1,tblptrh
 19280  017B7C  0E00               	movlw	low (__mediumconst shr (0+16))
 19281  017B7E  6EF8               	movwf	tblptru,c
 19282  017B80  0E1F               	movlw	(high __ramtop+-1)
 19283  017B82  64F7               	cpfsgt	tblptrh,c
 19284  017B84  D003               	bra	u12597
 19285  017B86  0008               	tblrd		*
 19286  017B88  50F5               	movf	tablat,w,c
 19287  017B8A  D007               	bra	u12590
 19288  017B8C                     u12597:
 19289  017B8C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19290  017B92  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19291  017B98  50EF               	movf	indf0,w,c
 19292  017B9A                     u12590:
 19293  017B9A  6EE6               	movwf	postinc1,c
 19294  017B9C  0E00               	movlw	0
 19295  017B9E  6EE6               	movwf	postinc1,c
 19296  017BA0  ECF0  F0D1         	call	_fputc	;wreg free
 19297                           
 19298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 19299                           ;stkvar	_cp @ sp[(-17)+11]
 19300  017BA4  0EFA               	movlw	-6
 19301  017BA6  50E3               	movf	plusw1,w,c
 19302  017BA8  0F01               	addlw	1
 19303  017BAA  6E01               	movwf	btemp^0,c
 19304  017BAC  0EFA               	movlw	-6
 19305  017BAE  0060  F007  FFE3   	movff	btemp,plusw1
 19306  017BB4  6A01               	clrf	btemp^0,c
 19307  017BB6  0EFB               	movlw	-5
 19308  017BB8  50E3               	movf	plusw1,w,c
 19309  017BBA  2001               	addwfc	btemp^0,w,c
 19310  017BBC  6E01               	movwf	btemp^0,c
 19311  017BBE  0EFB               	movlw	-5
 19312  017BC0  0060  F007  FFE3   	movff	btemp,plusw1
 19313                           
 19314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 19315                           ;stkvar	_i @ sp[(-17)+15]
 19316  017BC6  0EFE               	movlw	-2
 19317  017BC8  50E3               	movf	plusw1,w,c
 19318  017BCA  0F01               	addlw	1
 19319  017BCC  6E01               	movwf	btemp^0,c
 19320  017BCE  0EFE               	movlw	-2
 19321  017BD0  0060  F007  FFE3   	movff	btemp,plusw1
 19322  017BD6  6A01               	clrf	btemp^0,c
 19323  017BD8  0EFF               	movlw	-1
 19324  017BDA  50E3               	movf	plusw1,w,c
 19325  017BDC  2001               	addwfc	btemp^0,w,c
 19326  017BDE  6E01               	movwf	btemp^0,c
 19327  017BE0  0EFF               	movlw	-1
 19328  017BE2  0060  F007  FFE3   	movff	btemp,plusw1
 19329  017BE8                     l13517:
 19330                           
 19331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 19332                           ;stkvar	_p @ sp[(-17)+9]
 19333                           ;stkvar	_i @ sp[(-17)+15]
 19334  017BE8  50E1               	movf	fsr1l,w,c
 19335  017BEA  0FFE               	addlw	-2
 19336  017BEC  6ED9               	movwf	fsr2l,c
 19337  017BEE  50E2               	movf	fsr1h,w,c
 19338  017BF0  6EDA               	movwf	fsr2h,c
 19339  017BF2  0EFF               	movlw	255
 19340  017BF4  22DA               	addwfc	fsr2h,f,c
 19341  017BF6  0EF8               	movlw	-8
 19342  017BF8  50E3               	movf	plusw1,w,c
 19343  017BFA  5CDE               	subwf	postinc2,w,c
 19344  017BFC  50DE               	movf	postinc2,w,c
 19345  017BFE  0A80               	xorlw	128
 19346  017C00  6E01               	movwf	btemp^0,c
 19347  017C02  0EF9               	movlw	-7
 19348  017C04  50E3               	movf	plusw1,w,c
 19349  017C06  0A80               	xorlw	128
 19350  017C08  5801               	subwfb	btemp^0,w,c
 19351  017C0A  A0D8               	btfss	status,0,c
 19352  017C0C  D7A8               	goto	l13511
 19353                           
 19354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 19355  017C0E  B03E               	btfsc	_flags^0,0,c
 19356  017C10  D01F               	goto	l13525
 19357  017C12  D031               	goto	u12620
 19358  017C14                     l13521:
 19359                           
 19360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 19361                           ;stkvar	_fp @ sp[(-17)+-2]
 19362  017C14  0EED               	movlw	-19
 19363  017C16  006F FF8F FFE6     	movff	plusw1,postinc1
 19364  017C1C  006F FF8F FFE6     	movff	plusw1,postinc1
 19365  017C22  0E20               	movlw	32
 19366  017C24  6EE6               	movwf	postinc1,c
 19367  017C26  0E00               	movlw	0
 19368  017C28  6EE6               	movwf	postinc1,c
 19369  017C2A  ECF0  F0D1         	call	_fputc	;wreg free
 19370                           
 19371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 19372                           ;stkvar	_l @ sp[(-17)+7]
 19373  017C2E  0EF6               	movlw	-10
 19374  017C30  50E3               	movf	plusw1,w,c
 19375  017C32  0F01               	addlw	1
 19376  017C34  6E01               	movwf	btemp^0,c
 19377  017C36  0EF6               	movlw	-10
 19378  017C38  0060  F007  FFE3   	movff	btemp,plusw1
 19379  017C3E  6A01               	clrf	btemp^0,c
 19380  017C40  0EF7               	movlw	-9
 19381  017C42  50E3               	movf	plusw1,w,c
 19382  017C44  2001               	addwfc	btemp^0,w,c
 19383  017C46  6E01               	movwf	btemp^0,c
 19384  017C48  0EF7               	movlw	-9
 19385  017C4A  0060  F007  FFE3   	movff	btemp,plusw1
 19386  017C50                     l13525:
 19387                           
 19388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 19389                           ;stkvar	_w @ sp[(-17)+13]
 19390                           ;stkvar	_l @ sp[(-17)+7]
 19391  017C50  50E1               	movf	fsr1l,w,c
 19392  017C52  0FF6               	addlw	-10
 19393  017C54  6ED9               	movwf	fsr2l,c
 19394  017C56  50E2               	movf	fsr1h,w,c
 19395  017C58  6EDA               	movwf	fsr2h,c
 19396  017C5A  0EFF               	movlw	255
 19397  017C5C  22DA               	addwfc	fsr2h,f,c
 19398  017C5E  0EFC               	movlw	-4
 19399  017C60  50E3               	movf	plusw1,w,c
 19400  017C62  5CDE               	subwf	postinc2,w,c
 19401  017C64  50DE               	movf	postinc2,w,c
 19402  017C66  0A80               	xorlw	128
 19403  017C68  6E01               	movwf	btemp^0,c
 19404  017C6A  0EFD               	movlw	-3
 19405  017C6C  50E3               	movf	plusw1,w,c
 19406  017C6E  0A80               	xorlw	128
 19407  017C70  5801               	subwfb	btemp^0,w,c
 19408  017C72  A0D8               	btfss	status,0,c
 19409  017C74  D7CF               	goto	l13521
 19410  017C76                     u12620:
 19411                           
 19412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 19413                           ;stkvar	_l @ sp[(-17)+7]
 19414  017C76  0EF6               	movlw	-10
 19415  017C78  006F FF8C  F001    	movff	plusw1,btemp
 19416  017C7E  0EF7               	movlw	-9
 19417  017C80  006F FF8C  F002    	movff	plusw1,btemp+1
 19418                           
 19419                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19420  017C86  0EEB               	movlw	235
 19421  017C88  26E1               	addwf	fsr1l,f,c
 19422  017C8A  0EFF               	movlw	255
 19423  017C8C  22E2               	addwfc	fsr1h,f,c
 19424  017C8E  0012               	return		;funcret
 19425  017C90                     __end_of_stoa:
 19426                           	opt callstack 0
 19427                           
 19428 ;; *************** function _efgtoa *****************
 19429 ;; Defined at:
 19430 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19431 ;; Parameters:    Size  Location     Type
 19432 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19433 ;;		 -> f(6), NULL(0), 
 19434 ;;  f               4  [STACK] PTR struct _IO_FILE
 19435 ;;  c               1  [STACK] unsigned char 
 19436 ;; Auto vars:     Size  Location     Type
 19437 ;;  u               4  [STACK] unsigned char 
 19438 ;;  g               4  [STACK] unsigned char 
 19439 ;;  l               4  [STACK] unsigned char 
 19440 ;;  h               4  [STACK] unsigned char 
 19441 ;;  ou              4  [STACK] unsigned char 
 19442 ;;  n               2  [STACK] int 
 19443 ;;  e               2  [STACK] int 
 19444 ;;  i               2  [STACK] int 
 19445 ;;  w               2  [STACK] int 
 19446 ;;  p               2  [STACK] int 
 19447 ;;  sign            2  [STACK] int 
 19448 ;;  d               2  [STACK] int 
 19449 ;;  ne              2  [STACK] int 
 19450 ;;  m               2  [STACK] int 
 19451 ;;  pp              2  [STACK] int 
 19452 ;;  t               2  [STACK] int 
 19453 ;;  mode            1  [STACK] unsigned char 
 19454 ;;  nmode           1  [STACK] unsigned char 
 19455 ;; Return value:  Size  Location     Type
 19456 ;;                  2  [STACK] int 
 19457 ;; Registers used:
 19458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 19459 ;; Tracked objects:
 19460 ;;		On entry : 0/0
 19461 ;;		On exit  : 0/0
 19462 ;;		Unchanged: 0/0
 19463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19468 ;;Total ram usage:        0 bytes
 19469 ;; Hardware stack levels used:    1
 19470 ;; Hardware stack levels required when called:   20
 19471 ;; This function calls:
 19472 ;;		___awdiv
 19473 ;;		___awmod
 19474 ;;		___fladd
 19475 ;;		___fldiv
 19476 ;;		___fleq
 19477 ;;		___flge
 19478 ;;		___flmul
 19479 ;;		___flneg
 19480 ;;		___flsub
 19481 ;;		___fltol
 19482 ;;		___fpclassifyf
 19483 ;;		_floorf
 19484 ;;		_isupper
 19485 ;;		_pad
 19486 ;;		_strcpy
 19487 ;;		_tolower
 19488 ;; This function is called by:
 19489 ;;		_vfpfcnvrt
 19490 ;; This function uses a reentrant model
 19491 ;;
 19492                           
 19493                           	psect	text75
 19494  01127E                     __ptext75:
 19495                           	opt callstack 0
 19496  01127E                     _efgtoa:
 19497                           	opt callstack 0
 19498                           
 19499                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19500  01127E  0E38               	movlw	56
 19501  011280  26E1               	addwf	fsr1l,f,c
 19502  011282  0E00               	movlw	0
 19503  011284  22E2               	addwfc	fsr1h,f,c
 19504                           
 19505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 19506                           ;stkvar	_sign @ sp[(-56)+42]
 19507                           
 19508                           ;incstack = 0
 19509 ;; hardware stack exceeded
 19510  011286  0EF2               	movlw	-14
 19511  011288  6AE3               	clrf	plusw1,c
 19512  01128A  0EF3               	movlw	-13
 19513  01128C  6AE3               	clrf	plusw1,c
 19514                           
 19515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 19516                           ;stkvar	_f @ sp[(-56)+-6]
 19517  01128E  0EC2               	movlw	-62
 19518  011290  006F FF8C  F009    	movff	plusw1,btemp+8
 19519  011296  0EC3               	movlw	-61
 19520  011298  006F FF8C  F00A    	movff	plusw1,btemp+9
 19521  01129E  0EC4               	movlw	-60
 19522  0112A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 19523  0112A6  0EC5               	movlw	-59
 19524  0112A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 19525                           
 19526                           ;stkvar	_g @ sp[(-56)+16]
 19527  0112AE  0ED8               	movlw	-40
 19528  0112B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 19529  0112B6  0ED9               	movlw	-39
 19530  0112B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19531  0112BE  0EDA               	movlw	-38
 19532  0112C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19533  0112C6  0EDB               	movlw	-37
 19534  0112C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 19535                           
 19536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 19537                           ;stkvar	_g @ sp[(-56)+16]
 19538  0112CE  0EDB               	movlw	-37
 19539  0112D0  AEE3               	btfss	plusw1,7,c
 19540  0112D2  D02B               	goto	l13185
 19541                           
 19542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 19543  0112D4  0E01               	movlw	1
 19544  0112D6  6E0B               	movwf	(btemp+10)^0,c
 19545  0112D8  0E00               	movlw	0
 19546  0112DA  6E0C               	movwf	(btemp+11)^0,c
 19547                           
 19548                           ;stkvar	_sign @ sp[(-56)+42]
 19549  0112DC  0EF2               	movlw	-14
 19550  0112DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19551  0112E4  0EF3               	movlw	-13
 19552  0112E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 19553                           
 19554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 19555                           ;stkvar	_g @ sp[(-56)+16]
 19556  0112EC  0ED8               	movlw	-40
 19557  0112EE  006F FF8F FFE6     	movff	plusw1,postinc1
 19558  0112F4  006F FF8F FFE6     	movff	plusw1,postinc1
 19559  0112FA  006F FF8F FFE6     	movff	plusw1,postinc1
 19560  011300  006F FF8F FFE6     	movff	plusw1,postinc1
 19561  011306  ECE1  F0E2         	call	___flneg	;wreg free
 19562                           
 19563                           ;stkvar	_g @ sp[(-56)+16]
 19564  01130A  0ED8               	movlw	-40
 19565  01130C  0060  F007  FFE3   	movff	btemp,plusw1
 19566  011312  0ED9               	movlw	-39
 19567  011314  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19568  01131A  0EDA               	movlw	-38
 19569  01131C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19570  011322  0EDB               	movlw	-37
 19571  011324  0060  F013  FFE3   	movff	btemp+3,plusw1
 19572  01132A                     l13185:
 19573                           
 19574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 19575                           ;stkvar	_n @ sp[(-56)+32]
 19576  01132A  0EE8               	movlw	-24
 19577  01132C  6AE3               	clrf	plusw1,c
 19578  01132E  0EE9               	movlw	-23
 19579  011330  6AE3               	clrf	plusw1,c
 19580                           
 19581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 19582                           ;stkvar	_w @ sp[(-56)+38]
 19583  011332  0EEE               	movlw	-18
 19584  011334  0060  F0EB  FFE3   	movff	_width,plusw1
 19585  01133A  0EEF               	movlw	-17
 19586  01133C  0060  F0EF  FFE3   	movff	_width+1,plusw1
 19587                           
 19588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 19589                           ;stkvar	_sign @ sp[(-56)+42]
 19590  011342  0EF2               	movlw	-14
 19591  011344  006F FF8C  F001    	movff	plusw1,btemp
 19592  01134A  0EF3               	movlw	-13
 19593  01134C  50E3               	movf	plusw1,w,c
 19594  01134E  1001               	iorwf	btemp^0,w,c
 19595  011350  A4D8               	btfss	status,2,c
 19596  011352  D002               	goto	u12030
 19597  011354  A43E               	btfss	_flags^0,2,c
 19598  011356  D036               	goto	l13205
 19599  011358                     u12030:
 19600                           
 19601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 19602                           ;stkvar	_sign @ sp[(-56)+42]
 19603  011358  0EF2               	movlw	-14
 19604  01135A  006F FF8C  F001    	movff	plusw1,btemp
 19605  011360  0EF3               	movlw	-13
 19606  011362  50E3               	movf	plusw1,w,c
 19607  011364  1001               	iorwf	btemp^0,w,c
 19608  011366  A4D8               	btfss	status,2,c
 19609  011368  D002               	goto	l13197
 19610  01136A  0E2B               	movlw	43
 19611  01136C  D001               	goto	L21
 19612  01136E                     l13197:
 19613  01136E  0E2D               	movlw	45
 19614  011370                     L21:
 19615  011370  6E0B               	movwf	(btemp+10)^0,c
 19616  011372  0E00               	movlw	0
 19617  011374  6E0C               	movwf	(btemp+11)^0,c
 19618                           
 19619                           ;stkvar	_efgtoa$6166 @ sp[(-56)+10]
 19620  011376  0ED2               	movlw	-46
 19621  011378  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19622  01137E  0ED3               	movlw	-45
 19623  011380  0060  F033  FFE3   	movff	btemp+11,plusw1
 19624                           
 19625                           ;stkvar	_efgtoa$6166 @ sp[(-56)+10]
 19626  011386  0ED2               	movlw	-46
 19627  011388  006F FF8C  F243    	movff	plusw1,_dbuf
 19628                           
 19629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 19630                           ;stkvar	_n @ sp[(-56)+32]
 19631  01138E  0EE8               	movlw	-24
 19632  011390  50E3               	movf	plusw1,w,c
 19633  011392  0F01               	addlw	1
 19634  011394  6E01               	movwf	btemp^0,c
 19635  011396  0EE8               	movlw	-24
 19636  011398  0060  F007  FFE3   	movff	btemp,plusw1
 19637  01139E  6A01               	clrf	btemp^0,c
 19638  0113A0  0EE9               	movlw	-23
 19639  0113A2  50E3               	movf	plusw1,w,c
 19640  0113A4  2001               	addwfc	btemp^0,w,c
 19641  0113A6  6E01               	movwf	btemp^0,c
 19642  0113A8  0EE9               	movlw	-23
 19643  0113AA  0060  F007  FFE3   	movff	btemp,plusw1
 19644                           
 19645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 19646                           ;stkvar	_w @ sp[(-56)+38]
 19647  0113B0  50E1               	movf	fsr1l,w,c
 19648  0113B2  0FEE               	addlw	-18
 19649  0113B4  6ED9               	movwf	fsr2l,c
 19650  0113B6  50E2               	movf	fsr1h,w,c
 19651  0113B8  6EDA               	movwf	fsr2h,c
 19652  0113BA  0EFF               	movlw	255
 19653  0113BC  22DA               	addwfc	fsr2h,f,c
 19654  0113BE  06DE               	decf	postinc2,f,c
 19655  0113C0  0E00               	movlw	0
 19656  0113C2  5ADD               	subwfb	postdec2,f,c
 19657  0113C4                     l13205:
 19658                           
 19659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 19660                           ;stkvar	_g @ sp[(-56)+16]
 19661  0113C4  0ED8               	movlw	-40
 19662  0113C6  006F FF8F FFE6     	movff	plusw1,postinc1
 19663  0113CC  006F FF8F FFE6     	movff	plusw1,postinc1
 19664  0113D2  006F FF8F FFE6     	movff	plusw1,postinc1
 19665  0113D8  006F FF8F FFE6     	movff	plusw1,postinc1
 19666  0113DE  ECB3  F0C9         	call	___fpclassifyf	;wreg free
 19667  0113E2  0401               	decf	btemp^0,w,c
 19668  0113E4  1002               	iorwf	(btemp+1)^0,w,c
 19669  0113E6  A4D8               	btfss	status,2,c
 19670  0113E8  D076               	goto	l13223
 19671  0113EA  0EBF               	movlw	191
 19672  0113EC  6E0B               	movwf	(btemp+10)^0,c
 19673  0113EE  0EFF               	movlw	255
 19674  0113F0  6E0C               	movwf	(btemp+11)^0,c
 19675                           
 19676                           ;stkvar	_c @ sp[(-56)+-7]
 19677  0113F2  0EC1               	movlw	-63
 19678  0113F4  50E3               	movf	plusw1,w,c
 19679  0113F6  6E09               	movwf	(btemp+8)^0,c
 19680  0113F8  6A0A               	clrf	(btemp+9)^0,c
 19681  0113FA  500B               	movf	(btemp+10)^0,w,c
 19682  0113FC  2609               	addwf	(btemp+8)^0,f,c
 19683  0113FE  500C               	movf	(btemp+11)^0,w,c
 19684  011400  220A               	addwfc	(btemp+9)^0,f,c
 19685  011402  500A               	movf	(btemp+9)^0,w,c
 19686  011404  E106               	bnz	u12060
 19687  011406  0E1A               	movlw	26
 19688  011408  5C09               	subwf	(btemp+8)^0,w,c
 19689  01140A  B0D8               	btfsc	status,0,c
 19690  01140C  D002               	goto	u12060
 19691  01140E  0E01               	movlw	1
 19692  011410  D001               	goto	u12070
 19693  011412                     u12060:
 19694  011412  0E00               	movlw	0
 19695  011414                     u12070:
 19696  011414  6E0B               	movwf	(btemp+10)^0,c
 19697  011416  6A0C               	clrf	(btemp+11)^0,c
 19698                           
 19699                           ;stkvar	_efgtoa$6167 @ sp[(-56)+8]
 19700  011418  0ED0               	movlw	-48
 19701  01141A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19702  011420  0ED1               	movlw	-47
 19703  011422  0060  F033  FFE3   	movff	btemp+11,plusw1
 19704                           
 19705                           ;stkvar	_efgtoa$6167 @ sp[(-56)+8]
 19706  011428  0ED0               	movlw	-48
 19707  01142A  006F FF8C  F001    	movff	plusw1,btemp
 19708  011430  0ED1               	movlw	-47
 19709  011432  50E3               	movf	plusw1,w,c
 19710  011434  1001               	iorwf	btemp^0,w,c
 19711  011436  B4D8               	btfsc	status,2,c
 19712  011438  D017               	goto	l13215
 19713                           
 19714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 19715  01143A  0ED7               	movlw	low STR_82
 19716  01143C  6EE6               	movwf	postinc1,c
 19717  01143E  0EFF               	movlw	high STR_82
 19718  011440  6EE6               	movwf	postinc1,c
 19719                           
 19720                           ;stkvar	_n @ sp[(-58)+32]
 19721  011442  0E43               	movlw	low _dbuf
 19722  011444  6E0B               	movwf	(btemp+10)^0,c
 19723  011446  0E02               	movlw	high _dbuf
 19724  011448  6E0C               	movwf	(btemp+11)^0,c
 19725  01144A  0EE6               	movlw	-26
 19726  01144C  50E3               	movf	plusw1,w,c
 19727  01144E  260B               	addwf	(btemp+10)^0,f,c
 19728  011450  0EE7               	movlw	-25
 19729  011452  50E3               	movf	plusw1,w,c
 19730  011454  220C               	addwfc	(btemp+11)^0,f,c
 19731  011456  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19732  01145C  0060  F033  FFE6   	movff	btemp+11,postinc1
 19733  011462  EC87  F0D7         	call	_strcpy	;wreg free
 19734                           
 19735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 19736  011466  D016               	goto	l13217
 19737  011468                     l13215:
 19738                           
 19739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 19740  011468  0EDF               	movlw	low STR_83
 19741  01146A  6EE6               	movwf	postinc1,c
 19742  01146C  0EFF               	movlw	high STR_83
 19743  01146E  6EE6               	movwf	postinc1,c
 19744                           
 19745                           ;stkvar	_n @ sp[(-58)+32]
 19746  011470  0E43               	movlw	low _dbuf
 19747  011472  6E0B               	movwf	(btemp+10)^0,c
 19748  011474  0E02               	movlw	high _dbuf
 19749  011476  6E0C               	movwf	(btemp+11)^0,c
 19750  011478  0EE6               	movlw	-26
 19751  01147A  50E3               	movf	plusw1,w,c
 19752  01147C  260B               	addwf	(btemp+10)^0,f,c
 19753  01147E  0EE7               	movlw	-25
 19754  011480  50E3               	movf	plusw1,w,c
 19755  011482  220C               	addwfc	(btemp+11)^0,f,c
 19756  011484  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19757  01148A  0060  F033  FFE6   	movff	btemp+11,postinc1
 19758  011490  EC87  F0D7         	call	_strcpy	;wreg free
 19759  011494                     l13217:
 19760                           
 19761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 19762                           ;stkvar	_w @ sp[(-56)+38]
 19763  011494  50E1               	movf	fsr1l,w,c
 19764  011496  0FEE               	addlw	-18
 19765  011498  6ED9               	movwf	fsr2l,c
 19766  01149A  50E2               	movf	fsr1h,w,c
 19767  01149C  6EDA               	movwf	fsr2h,c
 19768  01149E  0EFF               	movlw	255
 19769  0114A0  22DA               	addwfc	fsr2h,f,c
 19770  0114A2  0EFD               	movlw	253
 19771  0114A4  26DE               	addwf	postinc2,f,c
 19772  0114A6  0EFF               	movlw	255
 19773  0114A8  22DD               	addwfc	postdec2,f,c
 19774  0114AA                     l13219:
 19775                           
 19776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 19777                           ;stkvar	_w @ sp[(-56)+38]
 19778  0114AA  0EEE               	movlw	-18
 19779  0114AC  006F FF8F FFE6     	movff	plusw1,postinc1
 19780  0114B2  006F FF8F FFE6     	movff	plusw1,postinc1
 19781  0114B8  0E43               	movlw	low _dbuf
 19782  0114BA  6EE6               	movwf	postinc1,c
 19783  0114BC  0E02               	movlw	high _dbuf
 19784  0114BE  6EE6               	movwf	postinc1,c
 19785                           
 19786                           ;stkvar	_fp @ sp[(-60)+-2]
 19787  0114C0  0EC2               	movlw	-62
 19788  0114C2  006F FF8F FFE6     	movff	plusw1,postinc1
 19789  0114C8  006F FF8F FFE6     	movff	plusw1,postinc1
 19790  0114CE  EC9A  F0D3         	call	_pad	;wreg free
 19791  0114D2  EF5C  F092         	goto	l2455
 19792  0114D6                     l13223:
 19793                           
 19794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 19795                           ;stkvar	_g @ sp[(-56)+16]
 19796  0114D6  0ED8               	movlw	-40
 19797  0114D8  006F FF8F FFE6     	movff	plusw1,postinc1
 19798  0114DE  006F FF8F FFE6     	movff	plusw1,postinc1
 19799  0114E4  006F FF8F FFE6     	movff	plusw1,postinc1
 19800  0114EA  006F FF8F FFE6     	movff	plusw1,postinc1
 19801  0114F0  ECB3  F0C9         	call	___fpclassifyf	;wreg free
 19802  0114F4  5001               	movf	btemp^0,w,c
 19803  0114F6  1002               	iorwf	(btemp+1)^0,w,c
 19804  0114F8  A4D8               	btfss	status,2,c
 19805  0114FA  D056               	goto	l13241
 19806  0114FC  0EBF               	movlw	191
 19807  0114FE  6E0B               	movwf	(btemp+10)^0,c
 19808  011500  0EFF               	movlw	255
 19809  011502  6E0C               	movwf	(btemp+11)^0,c
 19810                           
 19811                           ;stkvar	_c @ sp[(-56)+-7]
 19812  011504  0EC1               	movlw	-63
 19813  011506  50E3               	movf	plusw1,w,c
 19814  011508  6E09               	movwf	(btemp+8)^0,c
 19815  01150A  6A0A               	clrf	(btemp+9)^0,c
 19816  01150C  500B               	movf	(btemp+10)^0,w,c
 19817  01150E  2609               	addwf	(btemp+8)^0,f,c
 19818  011510  500C               	movf	(btemp+11)^0,w,c
 19819  011512  220A               	addwfc	(btemp+9)^0,f,c
 19820  011514  500A               	movf	(btemp+9)^0,w,c
 19821  011516  E106               	bnz	u12100
 19822  011518  0E1A               	movlw	26
 19823  01151A  5C09               	subwf	(btemp+8)^0,w,c
 19824  01151C  B0D8               	btfsc	status,0,c
 19825  01151E  D002               	goto	u12100
 19826  011520  0E01               	movlw	1
 19827  011522  D001               	goto	u12110
 19828  011524                     u12100:
 19829  011524  0E00               	movlw	0
 19830  011526                     u12110:
 19831  011526  6E0B               	movwf	(btemp+10)^0,c
 19832  011528  6A0C               	clrf	(btemp+11)^0,c
 19833                           
 19834                           ;stkvar	_efgtoa$6171 @ sp[(-56)+6]
 19835  01152A  0ECE               	movlw	-50
 19836  01152C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19837  011532  0ECF               	movlw	-49
 19838  011534  0060  F033  FFE3   	movff	btemp+11,plusw1
 19839                           
 19840                           ;stkvar	_efgtoa$6171 @ sp[(-56)+6]
 19841  01153A  0ECE               	movlw	-50
 19842  01153C  006F FF8C  F001    	movff	plusw1,btemp
 19843  011542  0ECF               	movlw	-49
 19844  011544  50E3               	movf	plusw1,w,c
 19845  011546  1001               	iorwf	btemp^0,w,c
 19846  011548  B4D8               	btfsc	status,2,c
 19847  01154A  D017               	goto	l13233
 19848                           
 19849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 19850  01154C  0EDB               	movlw	low STR_86
 19851  01154E  6EE6               	movwf	postinc1,c
 19852  011550  0EFF               	movlw	high STR_86
 19853  011552  6EE6               	movwf	postinc1,c
 19854                           
 19855                           ;stkvar	_n @ sp[(-58)+32]
 19856  011554  0E43               	movlw	low _dbuf
 19857  011556  6E0B               	movwf	(btemp+10)^0,c
 19858  011558  0E02               	movlw	high _dbuf
 19859  01155A  6E0C               	movwf	(btemp+11)^0,c
 19860  01155C  0EE6               	movlw	-26
 19861  01155E  50E3               	movf	plusw1,w,c
 19862  011560  260B               	addwf	(btemp+10)^0,f,c
 19863  011562  0EE7               	movlw	-25
 19864  011564  50E3               	movf	plusw1,w,c
 19865  011566  220C               	addwfc	(btemp+11)^0,f,c
 19866  011568  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19867  01156E  0060  F033  FFE6   	movff	btemp+11,postinc1
 19868  011574  EC87  F0D7         	call	_strcpy	;wreg free
 19869                           
 19870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 19871  011578  D78D               	goto	l13217
 19872  01157A                     l13233:
 19873                           
 19874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 19875  01157A  0EE3               	movlw	low STR_87
 19876  01157C  6EE6               	movwf	postinc1,c
 19877  01157E  0EFF               	movlw	high STR_87
 19878  011580  6EE6               	movwf	postinc1,c
 19879                           
 19880                           ;stkvar	_n @ sp[(-58)+32]
 19881  011582  0E43               	movlw	low _dbuf
 19882  011584  6E0B               	movwf	(btemp+10)^0,c
 19883  011586  0E02               	movlw	high _dbuf
 19884  011588  6E0C               	movwf	(btemp+11)^0,c
 19885  01158A  0EE6               	movlw	-26
 19886  01158C  50E3               	movf	plusw1,w,c
 19887  01158E  260B               	addwf	(btemp+10)^0,f,c
 19888  011590  0EE7               	movlw	-25
 19889  011592  50E3               	movf	plusw1,w,c
 19890  011594  220C               	addwfc	(btemp+11)^0,f,c
 19891  011596  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19892  01159C  0060  F033  FFE6   	movff	btemp+11,postinc1
 19893  0115A2  EC87  F0D7         	call	_strcpy	;wreg free
 19894  0115A6  D776               	goto	l13217
 19895  0115A8                     l13241:
 19896                           
 19897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 19898  0115A8  0E00               	movlw	0
 19899  0115AA  6E09               	movwf	(btemp+8)^0,c
 19900  0115AC  0E00               	movlw	0
 19901  0115AE  6E0A               	movwf	(btemp+9)^0,c
 19902  0115B0  0E80               	movlw	128
 19903  0115B2  6E0B               	movwf	(btemp+10)^0,c
 19904  0115B4  0E3F               	movlw	63
 19905  0115B6  6E0C               	movwf	(btemp+11)^0,c
 19906                           
 19907                           ;stkvar	_u @ sp[(-56)+12]
 19908  0115B8  0ED4               	movlw	-44
 19909  0115BA  0060  F027  FFE3   	movff	btemp+8,plusw1
 19910  0115C0  0ED5               	movlw	-43
 19911  0115C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19912  0115C8  0ED6               	movlw	-42
 19913  0115CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19914  0115D0  0ED7               	movlw	-41
 19915  0115D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 19916                           
 19917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 19918                           ;stkvar	_e @ sp[(-56)+34]
 19919  0115D8  0EEA               	movlw	-22
 19920  0115DA  6AE3               	clrf	plusw1,c
 19921  0115DC  0EEB               	movlw	-21
 19922  0115DE  6AE3               	clrf	plusw1,c
 19923                           
 19924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 19925  0115E0  0E00               	movlw	0
 19926  0115E2  6EE6               	movwf	postinc1,c
 19927  0115E4  0E00               	movlw	0
 19928  0115E6  6EE6               	movwf	postinc1,c
 19929  0115E8  0E00               	movlw	0
 19930  0115EA  6EE6               	movwf	postinc1,c
 19931  0115EC  0E00               	movlw	0
 19932  0115EE  6EE6               	movwf	postinc1,c
 19933                           
 19934                           ;stkvar	_g @ sp[(-60)+16]
 19935  0115F0  0ED4               	movlw	-44
 19936  0115F2  006F FF8F FFE6     	movff	plusw1,postinc1
 19937  0115F8  006F FF8F FFE6     	movff	plusw1,postinc1
 19938  0115FE  006F FF8F FFE6     	movff	plusw1,postinc1
 19939  011604  006F FF8F FFE6     	movff	plusw1,postinc1
 19940  01160A  ECC0  F0D8         	call	___fleq	;wreg free
 19941  01160E  A001               	btfss	btemp& (0+255),0,c
 19942  011610  D039               	goto	l13253
 19943  011612  D0BC               	goto	u12150
 19944  011614                     l13249:
 19945                           
 19946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 19947  011614  0E00               	movlw	0
 19948  011616  6EE6               	movwf	postinc1,c
 19949  011618  0E00               	movlw	0
 19950  01161A  6EE6               	movwf	postinc1,c
 19951  01161C  0E20               	movlw	32
 19952  01161E  6EE6               	movwf	postinc1,c
 19953  011620  0E41               	movlw	65
 19954  011622  6EE6               	movwf	postinc1,c
 19955                           
 19956                           ;stkvar	_u @ sp[(-60)+12]
 19957  011624  0ED0               	movlw	-48
 19958  011626  006F FF8F FFE6     	movff	plusw1,postinc1
 19959  01162C  006F FF8F FFE6     	movff	plusw1,postinc1
 19960  011632  006F FF8F FFE6     	movff	plusw1,postinc1
 19961  011638  006F FF8F FFE6     	movff	plusw1,postinc1
 19962  01163E  EC6E  F09F         	call	___flmul	;wreg free
 19963                           
 19964                           ;stkvar	_u @ sp[(-56)+12]
 19965  011642  0ED4               	movlw	-44
 19966  011644  0060  F007  FFE3   	movff	btemp,plusw1
 19967  01164A  0ED5               	movlw	-43
 19968  01164C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19969  011652  0ED6               	movlw	-42
 19970  011654  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19971  01165A  0ED7               	movlw	-41
 19972  01165C  0060  F013  FFE3   	movff	btemp+3,plusw1
 19973                           
 19974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 19975                           ;stkvar	_e @ sp[(-56)+34]
 19976  011662  0EEA               	movlw	-22
 19977  011664  50E3               	movf	plusw1,w,c
 19978  011666  0F01               	addlw	1
 19979  011668  6E01               	movwf	btemp^0,c
 19980  01166A  0EEA               	movlw	-22
 19981  01166C  0060  F007  FFE3   	movff	btemp,plusw1
 19982  011672  6A01               	clrf	btemp^0,c
 19983  011674  0EEB               	movlw	-21
 19984  011676  50E3               	movf	plusw1,w,c
 19985  011678  2001               	addwfc	btemp^0,w,c
 19986  01167A  6E01               	movwf	btemp^0,c
 19987  01167C  0EEB               	movlw	-21
 19988  01167E  0060  F007  FFE3   	movff	btemp,plusw1
 19989  011684                     l13253:
 19990                           
 19991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 19992  011684  0E00               	movlw	0
 19993  011686  6EE6               	movwf	postinc1,c
 19994  011688  0E00               	movlw	0
 19995  01168A  6EE6               	movwf	postinc1,c
 19996  01168C  0E20               	movlw	32
 19997  01168E  6EE6               	movwf	postinc1,c
 19998  011690  0E41               	movlw	65
 19999  011692  6EE6               	movwf	postinc1,c
 20000                           
 20001                           ;stkvar	_u @ sp[(-60)+12]
 20002  011694  0ED0               	movlw	-48
 20003  011696  006F FF8F FFE6     	movff	plusw1,postinc1
 20004  01169C  006F FF8F FFE6     	movff	plusw1,postinc1
 20005  0116A2  006F FF8F FFE6     	movff	plusw1,postinc1
 20006  0116A8  006F FF8F FFE6     	movff	plusw1,postinc1
 20007  0116AE  EC6E  F09F         	call	___flmul	;wreg free
 20008  0116B2  0060  F007  FFE6   	movff	btemp,postinc1
 20009  0116B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20010  0116BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20011  0116C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 20012                           
 20013                           ;stkvar	_g @ sp[(-60)+16]
 20014  0116CA  0ED4               	movlw	-44
 20015  0116CC  006F FF8F FFE6     	movff	plusw1,postinc1
 20016  0116D2  006F FF8F FFE6     	movff	plusw1,postinc1
 20017  0116D8  006F FF8F FFE6     	movff	plusw1,postinc1
 20018  0116DE  006F FF8F FFE6     	movff	plusw1,postinc1
 20019  0116E4  EC73  F0CD         	call	___flge	;wreg free
 20020  0116E8  A001               	btfss	btemp& (0+255),0,c
 20021  0116EA  D032               	goto	l13259
 20022  0116EC  D793               	goto	l13249
 20023  0116EE                     l13255:
 20024                           
 20025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 20026  0116EE  0E00               	movlw	0
 20027  0116F0  6EE6               	movwf	postinc1,c
 20028  0116F2  0E00               	movlw	0
 20029  0116F4  6EE6               	movwf	postinc1,c
 20030  0116F6  0E20               	movlw	32
 20031  0116F8  6EE6               	movwf	postinc1,c
 20032  0116FA  0E41               	movlw	65
 20033  0116FC  6EE6               	movwf	postinc1,c
 20034                           
 20035                           ;stkvar	_u @ sp[(-60)+12]
 20036  0116FE  0ED0               	movlw	-48
 20037  011700  006F FF8F FFE6     	movff	plusw1,postinc1
 20038  011706  006F FF8F FFE6     	movff	plusw1,postinc1
 20039  01170C  006F FF8F FFE6     	movff	plusw1,postinc1
 20040  011712  006F FF8F FFE6     	movff	plusw1,postinc1
 20041  011718  EC61  F0A7         	call	___fldiv	;wreg free
 20042                           
 20043                           ;stkvar	_u @ sp[(-56)+12]
 20044  01171C  0ED4               	movlw	-44
 20045  01171E  0060  F007  FFE3   	movff	btemp,plusw1
 20046  011724  0ED5               	movlw	-43
 20047  011726  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20048  01172C  0ED6               	movlw	-42
 20049  01172E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20050  011734  0ED7               	movlw	-41
 20051  011736  0060  F013  FFE3   	movff	btemp+3,plusw1
 20052                           
 20053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 20054                           ;stkvar	_e @ sp[(-56)+34]
 20055  01173C  50E1               	movf	fsr1l,w,c
 20056  01173E  0FEA               	addlw	-22
 20057  011740  6ED9               	movwf	fsr2l,c
 20058  011742  50E2               	movf	fsr1h,w,c
 20059  011744  6EDA               	movwf	fsr2h,c
 20060  011746  0EFF               	movlw	255
 20061  011748  22DA               	addwfc	fsr2h,f,c
 20062  01174A  06DE               	decf	postinc2,f,c
 20063  01174C  0E00               	movlw	0
 20064  01174E  5ADD               	subwfb	postdec2,f,c
 20065  011750                     l13259:
 20066                           
 20067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 20068                           ;stkvar	_u @ sp[(-56)+12]
 20069  011750  0ED4               	movlw	-44
 20070  011752  006F FF8F FFE6     	movff	plusw1,postinc1
 20071  011758  006F FF8F FFE6     	movff	plusw1,postinc1
 20072  01175E  006F FF8F FFE6     	movff	plusw1,postinc1
 20073  011764  006F FF8F FFE6     	movff	plusw1,postinc1
 20074                           
 20075                           ;stkvar	_g @ sp[(-60)+16]
 20076  01176A  0ED4               	movlw	-44
 20077  01176C  006F FF8F FFE6     	movff	plusw1,postinc1
 20078  011772  006F FF8F FFE6     	movff	plusw1,postinc1
 20079  011778  006F FF8F FFE6     	movff	plusw1,postinc1
 20080  01177E  006F FF8F FFE6     	movff	plusw1,postinc1
 20081  011784  EC73  F0CD         	call	___flge	;wreg free
 20082  011788  A001               	btfss	btemp& (0+255),0,c
 20083  01178A  D7B1               	goto	l13255
 20084  01178C                     u12150:
 20085                           
 20086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 20087                           ;stkvar	_c @ sp[(-56)+-7]
 20088  01178C  0EC1               	movlw	-63
 20089  01178E  50E3               	movf	plusw1,w,c
 20090  011790  6EE6               	movwf	postinc1,c
 20091  011792  0E00               	movlw	0
 20092  011794  6EE6               	movwf	postinc1,c
 20093  011796  EC24  F0DE         	call	_tolower	;wreg free
 20094                           
 20095                           ;stkvar	_mode @ sp[(-56)+54]
 20096  01179A  0EFE               	movlw	-2
 20097  01179C  0060  F007  FFE3   	movff	btemp,plusw1
 20098                           
 20099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 20100                           ;stkvar	_mode @ sp[(-56)+54]
 20101                           ;stkvar	_nmode @ sp[(-56)+55]
 20102  0117A2  0EFE               	movlw	-2
 20103  0117A4  006F FF8C  F001    	movff	plusw1,btemp
 20104  0117AA  0EFF               	movlw	-1
 20105  0117AC  0060  F007  FFE3   	movff	btemp,plusw1
 20106                           
 20107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 20108                           ;stkvar	_mode @ sp[(-56)+54]
 20109  0117B2  0EFE               	movlw	-2
 20110  0117B4  006F FF8C  F001    	movff	plusw1,btemp
 20111  0117BA  0E67               	movlw	103
 20112  0117BC  1801               	xorwf	btemp^0,w,c
 20113  0117BE  A4D8               	btfss	status,2,c
 20114  0117C0  D025               	goto	l13277
 20115                           
 20116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 20117  0117C2  503C               	movf	_prec^0,w,c
 20118  0117C4  103D               	iorwf	(_prec+1)^0,w,c
 20119  0117C6  A4D8               	btfss	status,2,c
 20120  0117C8  D004               	goto	l13271
 20121                           
 20122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 20123  0117CA  0E00               	movlw	0
 20124  0117CC  6E3D               	movwf	(_prec+1)^0,c
 20125  0117CE  0E01               	movlw	1
 20126  0117D0  6E3C               	movwf	_prec^0,c
 20127  0117D2                     l13271:
 20128                           
 20129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 20130  0117D2  BE3D               	btfsc	(_prec+1)^0,7,c
 20131  0117D4  D005               	goto	u12180
 20132  0117D6  503D               	movf	(_prec+1)^0,w,c
 20133  0117D8  E110               	bnz	l13275
 20134  0117DA  043C               	decf	_prec^0,w,c
 20135  0117DC  B0D8               	btfsc	status,0,c
 20136  0117DE  D00D               	goto	l13275
 20137  0117E0                     u12180:
 20138  0117E0  0E06               	movlw	6
 20139  0117E2  6E0B               	movwf	(btemp+10)^0,c
 20140  0117E4  0E00               	movlw	0
 20141  0117E6  6E0C               	movwf	(btemp+11)^0,c
 20142                           
 20143                           ;stkvar	_p @ sp[(-56)+40]
 20144  0117E8  0EF0               	movlw	-16
 20145  0117EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20146  0117F0  0EF1               	movlw	-15
 20147  0117F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 20148  0117F8  D00C               	goto	l13283
 20149  0117FA                     l13275:
 20150                           
 20151                           ;stkvar	_p @ sp[(-56)+40]
 20152  0117FA  0EF0               	movlw	-16
 20153  0117FC  0060  F0F3  FFE3   	movff	_prec,plusw1
 20154  011802  0EF1               	movlw	-15
 20155  011804  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20156  01180A  D003               	goto	l13283
 20157  01180C                     l13277:
 20158                           
 20159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 20160  01180C  AE3D               	btfss	(_prec+1)^0,7,c
 20161  01180E  D7F5               	goto	l13275
 20162  011810  D7E7               	goto	u12180
 20163  011812                     l13283:
 20164                           
 20165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 20166                           ;stkvar	_mode @ sp[(-56)+54]
 20167  011812  0EFE               	movlw	-2
 20168  011814  006F FF8C  F001    	movff	plusw1,btemp
 20169  01181A  0E67               	movlw	103
 20170  01181C  1801               	xorwf	btemp^0,w,c
 20171  01181E  A4D8               	btfss	status,2,c
 20172  011820  D02F               	goto	l13293
 20173                           
 20174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 20175                           ;stkvar	_e @ sp[(-56)+34]
 20176  011822  0EEB               	movlw	-21
 20177  011824  AEE3               	btfss	plusw1,7,c
 20178  011826  D00E               	goto	u12210
 20179  011828  0EEA               	movlw	-22
 20180  01182A  006F FF8C  F001    	movff	plusw1,btemp
 20181  011830  0EFC               	movlw	252
 20182  011832  5E01               	subwf	btemp^0,f,c
 20183  011834  0EEB               	movlw	-21
 20184  011836  006F FF8C  F001    	movff	plusw1,btemp
 20185  01183C  0EFF               	movlw	255
 20186  01183E  5A01               	subwfb	btemp^0,f,c
 20187  011840  A0D8               	btfss	status,0,c
 20188  011842  D018               	goto	l13291
 20189  011844                     u12210:
 20190                           
 20191                           ;stkvar	_e @ sp[(-56)+34]
 20192                           ;stkvar	_p @ sp[(-56)+40]
 20193  011844  0EF0               	movlw	-16
 20194  011846  50E3               	movf	plusw1,w,c
 20195  011848  0FFF               	addlw	255
 20196  01184A  6E0B               	movwf	(btemp+10)^0,c
 20197  01184C  0EF1               	movlw	-15
 20198  01184E  006F FF8C  F00C    	movff	plusw1,btemp+11
 20199  011854  0EFF               	movlw	255
 20200  011856  220C               	addwfc	(btemp+11)^0,f,c
 20201  011858  0EEA               	movlw	-22
 20202  01185A  50E3               	movf	plusw1,w,c
 20203  01185C  5C0B               	subwf	(btemp+10)^0,w,c
 20204  01185E  500C               	movf	(btemp+11)^0,w,c
 20205  011860  0A80               	xorlw	128
 20206  011862  6E01               	movwf	btemp^0,c
 20207  011864  0EEB               	movlw	-21
 20208  011866  50E3               	movf	plusw1,w,c
 20209  011868  0A80               	xorlw	128
 20210  01186A  5801               	subwfb	btemp^0,w,c
 20211  01186C  A0D8               	btfss	status,0,c
 20212  01186E  D002               	goto	l13291
 20213                           
 20214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 20215  011870  0E66               	movlw	102
 20216  011872  D001               	goto	L22
 20217  011874                     l13291:
 20218                           
 20219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 20220  011874  0E65               	movlw	101
 20221  011876                     L22:
 20222  011876  6E0C               	movwf	(btemp+11)^0,c
 20223                           
 20224                           ;stkvar	_nmode @ sp[(-56)+55]
 20225  011878  0EFF               	movlw	-1
 20226  01187A  0060  F033  FFE3   	movff	btemp+11,plusw1
 20227  011880                     l13293:
 20228                           
 20229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 20230                           ;stkvar	_p @ sp[(-56)+40]
 20231                           ;stkvar	_m @ sp[(-56)+48]
 20232  011880  0EF0               	movlw	-16
 20233  011882  006F FF8C  F001    	movff	plusw1,btemp
 20234  011888  0EF8               	movlw	-8
 20235  01188A  0060  F007  FFE3   	movff	btemp,plusw1
 20236  011890  0EF1               	movlw	-15
 20237  011892  006F FF8C  F001    	movff	plusw1,btemp
 20238  011898  0EF9               	movlw	-7
 20239  01189A  0060  F007  FFE3   	movff	btemp,plusw1
 20240                           
 20241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 20242                           ;stkvar	_mode @ sp[(-56)+54]
 20243  0118A0  0EFE               	movlw	-2
 20244  0118A2  006F FF8C  F001    	movff	plusw1,btemp
 20245  0118A8  0E67               	movlw	103
 20246  0118AA  1801               	xorwf	btemp^0,w,c
 20247  0118AC  A4D8               	btfss	status,2,c
 20248  0118AE  D00B               	goto	u12250
 20249                           
 20250                           ;stkvar	_nmode @ sp[(-56)+55]
 20251  0118B0  0EFF               	movlw	-1
 20252  0118B2  006F FF8C  F001    	movff	plusw1,btemp
 20253  0118B8  0E66               	movlw	102
 20254  0118BA  1801               	xorwf	btemp^0,w,c
 20255  0118BC  A4D8               	btfss	status,2,c
 20256  0118BE  D014               	goto	l2484
 20257                           
 20258                           ;stkvar	_e @ sp[(-56)+34]
 20259  0118C0  0EEB               	movlw	-21
 20260  0118C2  AEE3               	btfss	plusw1,7,c
 20261  0118C4  D011               	goto	l2484
 20262  0118C6                     u12250:
 20263                           
 20264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 20265                           ;stkvar	_m @ sp[(-56)+48]
 20266  0118C6  0EF8               	movlw	-8
 20267  0118C8  50E3               	movf	plusw1,w,c
 20268  0118CA  0F01               	addlw	1
 20269  0118CC  6E01               	movwf	btemp^0,c
 20270  0118CE  0EF8               	movlw	-8
 20271  0118D0  0060  F007  FFE3   	movff	btemp,plusw1
 20272  0118D6  6A01               	clrf	btemp^0,c
 20273  0118D8  0EF9               	movlw	-7
 20274  0118DA  50E3               	movf	plusw1,w,c
 20275  0118DC  2001               	addwfc	btemp^0,w,c
 20276  0118DE  6E01               	movwf	btemp^0,c
 20277  0118E0  0EF9               	movlw	-7
 20278  0118E2  0060  F007  FFE3   	movff	btemp,plusw1
 20279  0118E8                     l2484:
 20280                           
 20281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 20282                           ;stkvar	_nmode @ sp[(-56)+55]
 20283  0118E8  0EFF               	movlw	-1
 20284  0118EA  006F FF8C  F001    	movff	plusw1,btemp
 20285  0118F0  0E66               	movlw	102
 20286  0118F2  1801               	xorwf	btemp^0,w,c
 20287  0118F4  A4D8               	btfss	status,2,c
 20288  0118F6  D03B               	goto	l13313
 20289                           
 20290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 20291                           ;stkvar	_e @ sp[(-56)+34]
 20292  0118F8  0EEB               	movlw	-21
 20293  0118FA  AEE3               	btfss	plusw1,7,c
 20294  0118FC  D01C               	goto	l13309
 20295                           
 20296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 20297  0118FE  0E00               	movlw	0
 20298  011900  6E09               	movwf	(btemp+8)^0,c
 20299  011902  0E00               	movlw	0
 20300  011904  6E0A               	movwf	(btemp+9)^0,c
 20301  011906  0E80               	movlw	128
 20302  011908  6E0B               	movwf	(btemp+10)^0,c
 20303  01190A  0E3F               	movlw	63
 20304  01190C  6E0C               	movwf	(btemp+11)^0,c
 20305                           
 20306                           ;stkvar	_u @ sp[(-56)+12]
 20307  01190E  0ED4               	movlw	-44
 20308  011910  0060  F027  FFE3   	movff	btemp+8,plusw1
 20309  011916  0ED5               	movlw	-43
 20310  011918  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20311  01191E  0ED6               	movlw	-42
 20312  011920  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20313  011926  0ED7               	movlw	-41
 20314  011928  0060  F033  FFE3   	movff	btemp+11,plusw1
 20315                           
 20316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 20317                           ;stkvar	_e @ sp[(-56)+34]
 20318  01192E  0EEA               	movlw	-22
 20319  011930  6AE3               	clrf	plusw1,c
 20320  011932  0EEB               	movlw	-21
 20321  011934  6AE3               	clrf	plusw1,c
 20322  011936                     l13309:
 20323                           
 20324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 20325                           ;stkvar	_mode @ sp[(-56)+54]
 20326  011936  0EFE               	movlw	-2
 20327  011938  006F FF8C  F001    	movff	plusw1,btemp
 20328  01193E  0E67               	movlw	103
 20329  011940  1801               	xorwf	btemp^0,w,c
 20330  011942  B4D8               	btfsc	status,2,c
 20331  011944  D014               	goto	l13313
 20332                           
 20333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 20334                           ;stkvar	_e @ sp[(-56)+34]
 20335                           ;stkvar	_m @ sp[(-56)+48]
 20336  011946  0EF8               	movlw	-8
 20337  011948  50E3               	movf	plusw1,w,c
 20338  01194A  6E01               	movwf	btemp^0,c
 20339  01194C  0EEA               	movlw	-22
 20340  01194E  50E3               	movf	plusw1,w,c
 20341  011950  2601               	addwf	btemp^0,f,c
 20342  011952  0EF8               	movlw	-8
 20343  011954  0060  F007  FFE3   	movff	btemp,plusw1
 20344  01195A  0EF9               	movlw	-7
 20345  01195C  50E3               	movf	plusw1,w,c
 20346  01195E  6E01               	movwf	btemp^0,c
 20347  011960  0EEB               	movlw	-21
 20348  011962  50E3               	movf	plusw1,w,c
 20349  011964  2201               	addwfc	btemp^0,f,c
 20350  011966  0EF9               	movlw	-7
 20351  011968  0060  F007  FFE3   	movff	btemp,plusw1
 20352  01196E                     l13313:
 20353                           
 20354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 20355                           ;stkvar	_i @ sp[(-56)+36]
 20356  01196E  0EEC               	movlw	-20
 20357  011970  6AE3               	clrf	plusw1,c
 20358  011972  0EED               	movlw	-19
 20359  011974  6AE3               	clrf	plusw1,c
 20360                           
 20361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 20362                           ;stkvar	_g @ sp[(-56)+16]
 20363  011976  0ED8               	movlw	-40
 20364  011978  006F FF8C  F009    	movff	plusw1,btemp+8
 20365  01197E  0ED9               	movlw	-39
 20366  011980  006F FF8C  F00A    	movff	plusw1,btemp+9
 20367  011986  0EDA               	movlw	-38
 20368  011988  006F FF8C  F00B    	movff	plusw1,btemp+10
 20369  01198E  0EDB               	movlw	-37
 20370  011990  006F FF8C  F00C    	movff	plusw1,btemp+11
 20371                           
 20372                           ;stkvar	_h @ sp[(-56)+24]
 20373  011996  0EE0               	movlw	-32
 20374  011998  0060  F027  FFE3   	movff	btemp+8,plusw1
 20375  01199E  0EE1               	movlw	-31
 20376  0119A0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20377  0119A6  0EE2               	movlw	-30
 20378  0119A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20379  0119AE  0EE3               	movlw	-29
 20380  0119B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20381                           
 20382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 20383                           ;stkvar	_u @ sp[(-56)+12]
 20384  0119B6  0ED4               	movlw	-44
 20385  0119B8  006F FF8C  F009    	movff	plusw1,btemp+8
 20386  0119BE  0ED5               	movlw	-43
 20387  0119C0  006F FF8C  F00A    	movff	plusw1,btemp+9
 20388  0119C6  0ED6               	movlw	-42
 20389  0119C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 20390  0119CE  0ED7               	movlw	-41
 20391  0119D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 20392                           
 20393                           ;stkvar	_ou @ sp[(-56)+28]
 20394  0119D6  0EE4               	movlw	-28
 20395  0119D8  0060  F027  FFE3   	movff	btemp+8,plusw1
 20396  0119DE  0EE5               	movlw	-27
 20397  0119E0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20398  0119E6  0EE6               	movlw	-26
 20399  0119E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20400  0119EE  0EE7               	movlw	-25
 20401  0119F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20402                           
 20403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 20404  0119F6  D0D6               	goto	l13329
 20405  0119F8                     l13319:
 20406                           
 20407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 20408                           ;stkvar	_u @ sp[(-56)+12]
 20409  0119F8  0ED4               	movlw	-44
 20410  0119FA  006F FF8F FFE6     	movff	plusw1,postinc1
 20411  011A00  006F FF8F FFE6     	movff	plusw1,postinc1
 20412  011A06  006F FF8F FFE6     	movff	plusw1,postinc1
 20413  011A0C  006F FF8F FFE6     	movff	plusw1,postinc1
 20414                           
 20415                           ;stkvar	_h @ sp[(-60)+24]
 20416  011A12  0EDC               	movlw	-36
 20417  011A14  006F FF8F FFE6     	movff	plusw1,postinc1
 20418  011A1A  006F FF8F FFE6     	movff	plusw1,postinc1
 20419  011A20  006F FF8F FFE6     	movff	plusw1,postinc1
 20420  011A26  006F FF8F FFE6     	movff	plusw1,postinc1
 20421  011A2C  EC61  F0A7         	call	___fldiv	;wreg free
 20422  011A30  0060  F007  FFE6   	movff	btemp,postinc1
 20423  011A36  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20424  011A3C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20425  011A42  0060  F013  FFE6   	movff	btemp+3,postinc1
 20426  011A48  EC1B  F0B5         	call	_floorf	;wreg free
 20427                           
 20428                           ;stkvar	_l @ sp[(-56)+20]
 20429  011A4C  0EDC               	movlw	-36
 20430  011A4E  0060  F007  FFE3   	movff	btemp,plusw1
 20431  011A54  0EDD               	movlw	-35
 20432  011A56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20433  011A5C  0EDE               	movlw	-34
 20434  011A5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20435  011A64  0EDF               	movlw	-33
 20436  011A66  0060  F013  FFE3   	movff	btemp+3,plusw1
 20437                           
 20438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 20439                           ;stkvar	_l @ sp[(-56)+20]
 20440  011A6C  0EDC               	movlw	-36
 20441  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 20442  011A74  006F FF8F FFE6     	movff	plusw1,postinc1
 20443  011A7A  006F FF8F FFE6     	movff	plusw1,postinc1
 20444  011A80  006F FF8F FFE6     	movff	plusw1,postinc1
 20445  011A86  ECBA  F0CC         	call	___fltol	;wreg free
 20446  011A8A  0060  F004  F00B   	movff	btemp,btemp+10
 20447  011A90  0060  F008  F00C   	movff	btemp+1,btemp+11
 20448                           
 20449                           ;stkvar	_d @ sp[(-56)+44]
 20450  011A96  0EF4               	movlw	-12
 20451  011A98  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20452  011A9E  0EF5               	movlw	-11
 20453  011AA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20454                           
 20455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 20456                           ;stkvar	_u @ sp[(-56)+12]
 20457  011AA6  0ED4               	movlw	-44
 20458  011AA8  006F FF8F FFE6     	movff	plusw1,postinc1
 20459  011AAE  006F FF8F FFE6     	movff	plusw1,postinc1
 20460  011AB4  006F FF8F FFE6     	movff	plusw1,postinc1
 20461  011ABA  006F FF8F FFE6     	movff	plusw1,postinc1
 20462                           
 20463                           ;stkvar	_l @ sp[(-60)+20]
 20464  011AC0  0ED8               	movlw	-40
 20465  011AC2  006F FF8F FFE6     	movff	plusw1,postinc1
 20466  011AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 20467  011ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 20468  011AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 20469  011ADA  EC6E  F09F         	call	___flmul	;wreg free
 20470  011ADE  0060  F007  FFE6   	movff	btemp,postinc1
 20471  011AE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20472  011AEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20473  011AF0  0060  F013  FFE6   	movff	btemp+3,postinc1
 20474                           
 20475                           ;stkvar	_h @ sp[(-60)+24]
 20476  011AF6  0EDC               	movlw	-36
 20477  011AF8  006F FF8F FFE6     	movff	plusw1,postinc1
 20478  011AFE  006F FF8F FFE6     	movff	plusw1,postinc1
 20479  011B04  006F FF8F FFE6     	movff	plusw1,postinc1
 20480  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
 20481  011B10  EC94  F0E3         	call	___flsub	;wreg free
 20482                           
 20483                           ;stkvar	_h @ sp[(-56)+24]
 20484  011B14  0EE0               	movlw	-32
 20485  011B16  0060  F007  FFE3   	movff	btemp,plusw1
 20486  011B1C  0EE1               	movlw	-31
 20487  011B1E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20488  011B24  0EE2               	movlw	-30
 20489  011B26  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20490  011B2C  0EE3               	movlw	-29
 20491  011B2E  0060  F013  FFE3   	movff	btemp+3,plusw1
 20492                           
 20493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 20494  011B34  0E00               	movlw	0
 20495  011B36  6EE6               	movwf	postinc1,c
 20496  011B38  0E00               	movlw	0
 20497  011B3A  6EE6               	movwf	postinc1,c
 20498  011B3C  0E20               	movlw	32
 20499  011B3E  6EE6               	movwf	postinc1,c
 20500  011B40  0E41               	movlw	65
 20501  011B42  6EE6               	movwf	postinc1,c
 20502                           
 20503                           ;stkvar	_u @ sp[(-60)+12]
 20504  011B44  0ED0               	movlw	-48
 20505  011B46  006F FF8F FFE6     	movff	plusw1,postinc1
 20506  011B4C  006F FF8F FFE6     	movff	plusw1,postinc1
 20507  011B52  006F FF8F FFE6     	movff	plusw1,postinc1
 20508  011B58  006F FF8F FFE6     	movff	plusw1,postinc1
 20509  011B5E  EC61  F0A7         	call	___fldiv	;wreg free
 20510                           
 20511                           ;stkvar	_u @ sp[(-56)+12]
 20512  011B62  0ED4               	movlw	-44
 20513  011B64  0060  F007  FFE3   	movff	btemp,plusw1
 20514  011B6A  0ED5               	movlw	-43
 20515  011B6C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20516  011B72  0ED6               	movlw	-42
 20517  011B74  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20518  011B7A  0ED7               	movlw	-41
 20519  011B7C  0060  F013  FFE3   	movff	btemp+3,plusw1
 20520                           
 20521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 20522                           ;stkvar	_i @ sp[(-56)+36]
 20523  011B82  0EEC               	movlw	-20
 20524  011B84  50E3               	movf	plusw1,w,c
 20525  011B86  0F01               	addlw	1
 20526  011B88  6E01               	movwf	btemp^0,c
 20527  011B8A  0EEC               	movlw	-20
 20528  011B8C  0060  F007  FFE3   	movff	btemp,plusw1
 20529  011B92  6A01               	clrf	btemp^0,c
 20530  011B94  0EED               	movlw	-19
 20531  011B96  50E3               	movf	plusw1,w,c
 20532  011B98  2001               	addwfc	btemp^0,w,c
 20533  011B9A  6E01               	movwf	btemp^0,c
 20534  011B9C  0EED               	movlw	-19
 20535  011B9E  0060  F007  FFE3   	movff	btemp,plusw1
 20536  011BA4                     l13329:
 20537                           
 20538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 20539                           ;stkvar	_m @ sp[(-56)+48]
 20540                           ;stkvar	_i @ sp[(-56)+36]
 20541  011BA4  50E1               	movf	fsr1l,w,c
 20542  011BA6  0FEC               	addlw	-20
 20543  011BA8  6ED9               	movwf	fsr2l,c
 20544  011BAA  50E2               	movf	fsr1h,w,c
 20545  011BAC  6EDA               	movwf	fsr2h,c
 20546  011BAE  0EFF               	movlw	255
 20547  011BB0  22DA               	addwfc	fsr2h,f,c
 20548  011BB2  0EF8               	movlw	-8
 20549  011BB4  50E3               	movf	plusw1,w,c
 20550  011BB6  5CDE               	subwf	postinc2,w,c
 20551  011BB8  50DE               	movf	postinc2,w,c
 20552  011BBA  0A80               	xorlw	128
 20553  011BBC  6E01               	movwf	btemp^0,c
 20554  011BBE  0EF9               	movlw	-7
 20555  011BC0  50E3               	movf	plusw1,w,c
 20556  011BC2  0A80               	xorlw	128
 20557  011BC4  5801               	subwfb	btemp^0,w,c
 20558  011BC6  A0D8               	btfss	status,0,c
 20559  011BC8  D717               	goto	l13319
 20560                           
 20561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 20562  011BCA  0E00               	movlw	0
 20563  011BCC  6EE6               	movwf	postinc1,c
 20564  011BCE  0E00               	movlw	0
 20565  011BD0  6EE6               	movwf	postinc1,c
 20566  011BD2  0EA0               	movlw	160
 20567  011BD4  6EE6               	movwf	postinc1,c
 20568  011BD6  0E40               	movlw	64
 20569  011BD8  6EE6               	movwf	postinc1,c
 20570                           
 20571                           ;stkvar	_u @ sp[(-60)+12]
 20572  011BDA  0ED0               	movlw	-48
 20573  011BDC  006F FF8F FFE6     	movff	plusw1,postinc1
 20574  011BE2  006F FF8F FFE6     	movff	plusw1,postinc1
 20575  011BE8  006F FF8F FFE6     	movff	plusw1,postinc1
 20576  011BEE  006F FF8F FFE6     	movff	plusw1,postinc1
 20577  011BF4  EC6E  F09F         	call	___flmul	;wreg free
 20578                           
 20579                           ;stkvar	_l @ sp[(-56)+20]
 20580  011BF8  0EDC               	movlw	-36
 20581  011BFA  0060  F007  FFE3   	movff	btemp,plusw1
 20582  011C00  0EDD               	movlw	-35
 20583  011C02  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20584  011C08  0EDE               	movlw	-34
 20585  011C0A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20586  011C10  0EDF               	movlw	-33
 20587  011C12  0060  F013  FFE3   	movff	btemp+3,plusw1
 20588                           
 20589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 20590                           ;stkvar	_l @ sp[(-56)+20]
 20591  011C18  0EDC               	movlw	-36
 20592  011C1A  006F FF8F FFE6     	movff	plusw1,postinc1
 20593  011C20  006F FF8F FFE6     	movff	plusw1,postinc1
 20594  011C26  006F FF8F FFE6     	movff	plusw1,postinc1
 20595  011C2C  006F FF8F FFE6     	movff	plusw1,postinc1
 20596                           
 20597                           ;stkvar	_h @ sp[(-60)+24]
 20598  011C32  0EDC               	movlw	-36
 20599  011C34  006F FF8F FFE6     	movff	plusw1,postinc1
 20600  011C3A  006F FF8F FFE6     	movff	plusw1,postinc1
 20601  011C40  006F FF8F FFE6     	movff	plusw1,postinc1
 20602  011C46  006F FF8F FFE6     	movff	plusw1,postinc1
 20603  011C4C  EC73  F0CD         	call	___flge	;wreg free
 20604  011C50  A001               	btfss	btemp& (0+255),0,c
 20605  011C52  D021               	goto	u12320
 20606                           
 20607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 20608                           ;stkvar	_l @ sp[(-56)+20]
 20609                           
 20610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 20611                           
 20612                           ;stkvar	_l @ sp[(-56)+20]
 20613                           
 20614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 20615  011C54  0EDC               	movlw	-36
 20616  011C56  006F FF8F FFE6     	movff	plusw1,postinc1
 20617  011C5C  006F FF8F FFE6     	movff	plusw1,postinc1
 20618  011C62  006F FF8F FFE6     	movff	plusw1,postinc1
 20619  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
 20620                           
 20621                           ;stkvar	_h @ sp[(-60)+24]
 20622  011C6E  0EDC               	movlw	-36
 20623  011C70  006F FF8F FFE6     	movff	plusw1,postinc1
 20624  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 20625  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 20626  011C82  006F FF8F FFE6     	movff	plusw1,postinc1
 20627  011C88  ECC0  F0D8         	call	___fleq	;wreg free
 20628  011C8C  A001               	btfss	btemp& (0+255),0,c
 20629  011C8E  D01B               	goto	l13343
 20630                           
 20631                           ;stkvar	_d @ sp[(-56)+44]
 20632  011C90  0EF4               	movlw	-12
 20633  011C92  B0E3               	btfsc	plusw1,0,c
 20634  011C94  D018               	goto	l13343
 20635  011C96                     u12320:
 20636                           
 20637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 20638  011C96  0E00               	movlw	0
 20639  011C98  6E09               	movwf	(btemp+8)^0,c
 20640  011C9A  0E00               	movlw	0
 20641  011C9C  6E0A               	movwf	(btemp+9)^0,c
 20642  011C9E  0E00               	movlw	0
 20643  011CA0  6E0B               	movwf	(btemp+10)^0,c
 20644  011CA2  0E00               	movlw	0
 20645  011CA4  6E0C               	movwf	(btemp+11)^0,c
 20646                           
 20647                           ;stkvar	_l @ sp[(-56)+20]
 20648  011CA6  0EDC               	movlw	-36
 20649  011CA8  0060  F027  FFE3   	movff	btemp+8,plusw1
 20650  011CAE  0EDD               	movlw	-35
 20651  011CB0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20652  011CB6  0EDE               	movlw	-34
 20653  011CB8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20654  011CBE  0EDF               	movlw	-33
 20655  011CC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20656  011CC6                     l13343:
 20657                           
 20658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 20659                           ;stkvar	_l @ sp[(-56)+20]
 20660  011CC6  0EDC               	movlw	-36
 20661  011CC8  006F FF8F FFE6     	movff	plusw1,postinc1
 20662  011CCE  006F FF8F FFE6     	movff	plusw1,postinc1
 20663  011CD4  006F FF8F FFE6     	movff	plusw1,postinc1
 20664  011CDA  006F FF8F FFE6     	movff	plusw1,postinc1
 20665                           
 20666                           ;stkvar	_g @ sp[(-60)+16]
 20667  011CE0  0ED4               	movlw	-44
 20668  011CE2  006F FF8F FFE6     	movff	plusw1,postinc1
 20669  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 20670  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 20671  011CF4  006F FF8F FFE6     	movff	plusw1,postinc1
 20672  011CFA  EC83  F0A3         	call	___fladd	;wreg free
 20673                           
 20674                           ;stkvar	_h @ sp[(-56)+24]
 20675  011CFE  0EE0               	movlw	-32
 20676  011D00  0060  F007  FFE3   	movff	btemp,plusw1
 20677  011D06  0EE1               	movlw	-31
 20678  011D08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20679  011D0E  0EE2               	movlw	-30
 20680  011D10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20681  011D16  0EE3               	movlw	-29
 20682  011D18  0060  F013  FFE3   	movff	btemp+3,plusw1
 20683                           
 20684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 20685                           ;stkvar	_ou @ sp[(-56)+28]
 20686  011D1E  0EE4               	movlw	-28
 20687  011D20  006F FF8C  F009    	movff	plusw1,btemp+8
 20688  011D26  0EE5               	movlw	-27
 20689  011D28  006F FF8C  F00A    	movff	plusw1,btemp+9
 20690  011D2E  0EE6               	movlw	-26
 20691  011D30  006F FF8C  F00B    	movff	plusw1,btemp+10
 20692  011D36  0EE7               	movlw	-25
 20693  011D38  006F FF8C  F00C    	movff	plusw1,btemp+11
 20694                           
 20695                           ;stkvar	_u @ sp[(-56)+12]
 20696  011D3E  0ED4               	movlw	-44
 20697  011D40  0060  F027  FFE3   	movff	btemp+8,plusw1
 20698  011D46  0ED5               	movlw	-43
 20699  011D48  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20700  011D4E  0ED6               	movlw	-42
 20701  011D50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20702  011D56  0ED7               	movlw	-41
 20703  011D58  0060  F033  FFE3   	movff	btemp+11,plusw1
 20704                           
 20705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 20706                           ;stkvar	_nmode @ sp[(-56)+55]
 20707  011D5E  0EFF               	movlw	-1
 20708  011D60  006F FF8C  F001    	movff	plusw1,btemp
 20709  011D66  0E65               	movlw	101
 20710  011D68  1801               	xorwf	btemp^0,w,c
 20711  011D6A  B4D8               	btfsc	status,2,c
 20712  011D6C  D011               	goto	l13351
 20713                           
 20714                           ;stkvar	_e @ sp[(-56)+34]
 20715                           ;stkvar	_ne @ sp[(-56)+46]
 20716  011D6E  0EEA               	movlw	-22
 20717  011D70  006F FF8C  F001    	movff	plusw1,btemp
 20718  011D76  0EF6               	movlw	-10
 20719  011D78  0060  F007  FFE3   	movff	btemp,plusw1
 20720  011D7E  0EEB               	movlw	-21
 20721  011D80  006F FF8C  F001    	movff	plusw1,btemp
 20722  011D86  0EF7               	movlw	-9
 20723  011D88  0060  F007  FFE3   	movff	btemp,plusw1
 20724  011D8E  D004               	goto	l2499
 20725  011D90                     l13351:
 20726                           
 20727                           ;stkvar	_ne @ sp[(-56)+46]
 20728  011D90  0EF6               	movlw	-10
 20729  011D92  6AE3               	clrf	plusw1,c
 20730  011D94  0EF7               	movlw	-9
 20731  011D96  6AE3               	clrf	plusw1,c
 20732  011D98                     l2499:
 20733                           
 20734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 20735                           ;stkvar	_pp @ sp[(-56)+50]
 20736  011D98  0EFA               	movlw	-6
 20737  011D9A  6AE3               	clrf	plusw1,c
 20738  011D9C  0EFB               	movlw	-5
 20739  011D9E  6AE3               	clrf	plusw1,c
 20740                           
 20741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 20742                           ;stkvar	_t @ sp[(-56)+52]
 20743  011DA0  0EFC               	movlw	-4
 20744  011DA2  6AE3               	clrf	plusw1,c
 20745  011DA4  0EFD               	movlw	-3
 20746  011DA6  6AE3               	clrf	plusw1,c
 20747                           
 20748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 20749                           ;stkvar	_i @ sp[(-56)+36]
 20750  011DA8  0EEC               	movlw	-20
 20751  011DAA  6AE3               	clrf	plusw1,c
 20752  011DAC  0EED               	movlw	-19
 20753  011DAE  6AE3               	clrf	plusw1,c
 20754                           
 20755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 20756  011DB0  D1B7               	goto	l13403
 20757  011DB2                     l13353:
 20758                           
 20759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 20760                           ;stkvar	_u @ sp[(-56)+12]
 20761  011DB2  0ED4               	movlw	-44
 20762  011DB4  006F FF8F FFE6     	movff	plusw1,postinc1
 20763  011DBA  006F FF8F FFE6     	movff	plusw1,postinc1
 20764  011DC0  006F FF8F FFE6     	movff	plusw1,postinc1
 20765  011DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 20766                           
 20767                           ;stkvar	_h @ sp[(-60)+24]
 20768  011DCC  0EDC               	movlw	-36
 20769  011DCE  006F FF8F FFE6     	movff	plusw1,postinc1
 20770  011DD4  006F FF8F FFE6     	movff	plusw1,postinc1
 20771  011DDA  006F FF8F FFE6     	movff	plusw1,postinc1
 20772  011DE0  006F FF8F FFE6     	movff	plusw1,postinc1
 20773  011DE6  EC61  F0A7         	call	___fldiv	;wreg free
 20774  011DEA  0060  F007  FFE6   	movff	btemp,postinc1
 20775  011DF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20776  011DF6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20777  011DFC  0060  F013  FFE6   	movff	btemp+3,postinc1
 20778  011E02  EC1B  F0B5         	call	_floorf	;wreg free
 20779                           
 20780                           ;stkvar	_l @ sp[(-56)+20]
 20781  011E06  0EDC               	movlw	-36
 20782  011E08  0060  F007  FFE3   	movff	btemp,plusw1
 20783  011E0E  0EDD               	movlw	-35
 20784  011E10  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20785  011E16  0EDE               	movlw	-34
 20786  011E18  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20787  011E1E  0EDF               	movlw	-33
 20788  011E20  0060  F013  FFE3   	movff	btemp+3,plusw1
 20789                           
 20790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 20791                           ;stkvar	_l @ sp[(-56)+20]
 20792  011E26  0EDC               	movlw	-36
 20793  011E28  006F FF8F FFE6     	movff	plusw1,postinc1
 20794  011E2E  006F FF8F FFE6     	movff	plusw1,postinc1
 20795  011E34  006F FF8F FFE6     	movff	plusw1,postinc1
 20796  011E3A  006F FF8F FFE6     	movff	plusw1,postinc1
 20797  011E40  ECBA  F0CC         	call	___fltol	;wreg free
 20798  011E44  0060  F004  F00B   	movff	btemp,btemp+10
 20799  011E4A  0060  F008  F00C   	movff	btemp+1,btemp+11
 20800                           
 20801                           ;stkvar	_d @ sp[(-56)+44]
 20802  011E50  0EF4               	movlw	-12
 20803  011E52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20804  011E58  0EF5               	movlw	-11
 20805  011E5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 20806                           
 20807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 20808  011E60  B83E               	btfsc	_flags^0,4,c
 20809  011E62  D026               	goto	l13367
 20810                           
 20811                           ;stkvar	_d @ sp[(-56)+44]
 20812  011E64  0EF4               	movlw	-12
 20813  011E66  006F FF8C  F001    	movff	plusw1,btemp
 20814  011E6C  0EF5               	movlw	-11
 20815  011E6E  50E3               	movf	plusw1,w,c
 20816  011E70  1001               	iorwf	btemp^0,w,c
 20817  011E72  A4D8               	btfss	status,2,c
 20818  011E74  D01D               	goto	l13367
 20819                           
 20820                           ;stkvar	_mode @ sp[(-56)+54]
 20821  011E76  0EFE               	movlw	-2
 20822  011E78  006F FF8C  F001    	movff	plusw1,btemp
 20823  011E7E  0E67               	movlw	103
 20824  011E80  1801               	xorwf	btemp^0,w,c
 20825  011E82  A4D8               	btfss	status,2,c
 20826  011E84  D015               	goto	l13367
 20827                           
 20828                           ;stkvar	_ne @ sp[(-56)+46]
 20829  011E86  0EF7               	movlw	-9
 20830  011E88  AEE3               	btfss	plusw1,7,c
 20831  011E8A  D012               	goto	l13367
 20832                           
 20833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 20834                           ;stkvar	_t @ sp[(-56)+52]
 20835  011E8C  0EFC               	movlw	-4
 20836  011E8E  50E3               	movf	plusw1,w,c
 20837  011E90  0F01               	addlw	1
 20838  011E92  6E01               	movwf	btemp^0,c
 20839  011E94  0EFC               	movlw	-4
 20840  011E96  0060  F007  FFE3   	movff	btemp,plusw1
 20841  011E9C  6A01               	clrf	btemp^0,c
 20842  011E9E  0EFD               	movlw	-3
 20843  011EA0  50E3               	movf	plusw1,w,c
 20844  011EA2  2001               	addwfc	btemp^0,w,c
 20845  011EA4  6E01               	movwf	btemp^0,c
 20846  011EA6  0EFD               	movlw	-3
 20847  011EA8  0060  F007  FFE3   	movff	btemp,plusw1
 20848                           
 20849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 20850  011EAE  D0AF               	goto	l13395
 20851  011EB0                     l13367:
 20852                           
 20853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 20854                           ;stkvar	_pp @ sp[(-56)+50]
 20855  011EB0  0EFA               	movlw	-6
 20856  011EB2  006F FF8C  F001    	movff	plusw1,btemp
 20857  011EB8  0EFB               	movlw	-5
 20858  011EBA  50E3               	movf	plusw1,w,c
 20859  011EBC  1001               	iorwf	btemp^0,w,c
 20860  011EBE  A4D8               	btfss	status,2,c
 20861  011EC0  D070               	goto	l13387
 20862                           
 20863                           ;stkvar	_ne @ sp[(-56)+46]
 20864  011EC2  0EF7               	movlw	-9
 20865  011EC4  AEE3               	btfss	plusw1,7,c
 20866  011EC6  D06D               	goto	l13387
 20867                           
 20868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 20869                           ;stkvar	_n @ sp[(-56)+32]
 20870  011EC8  0EE8               	movlw	-24
 20871  011ECA  006F FF8C  F00B    	movff	plusw1,btemp+10
 20872  011ED0  0EE9               	movlw	-23
 20873  011ED2  006F FF8C  F00C    	movff	plusw1,btemp+11
 20874  011ED8  0E43               	movlw	low _dbuf
 20875  011EDA  240B               	addwf	(btemp+10)^0,w,c
 20876  011EDC  6ED9               	movwf	fsr2l,c
 20877  011EDE  0E02               	movlw	high _dbuf
 20878  011EE0  200C               	addwfc	(btemp+11)^0,w,c
 20879  011EE2  6EDA               	movwf	fsr2h,c
 20880  011EE4  0E2E               	movlw	46
 20881  011EE6  6EDF               	movwf	indf2,c
 20882                           
 20883                           ;stkvar	_n @ sp[(-56)+32]
 20884  011EE8  0EE8               	movlw	-24
 20885  011EEA  50E3               	movf	plusw1,w,c
 20886  011EEC  0F01               	addlw	1
 20887  011EEE  6E01               	movwf	btemp^0,c
 20888  011EF0  0EE8               	movlw	-24
 20889  011EF2  0060  F007  FFE3   	movff	btemp,plusw1
 20890  011EF8  6A01               	clrf	btemp^0,c
 20891  011EFA  0EE9               	movlw	-23
 20892  011EFC  50E3               	movf	plusw1,w,c
 20893  011EFE  2001               	addwfc	btemp^0,w,c
 20894  011F00  6E01               	movwf	btemp^0,c
 20895  011F02  0EE9               	movlw	-23
 20896  011F04  0060  F007  FFE3   	movff	btemp,plusw1
 20897                           
 20898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 20899                           ;stkvar	_w @ sp[(-56)+38]
 20900  011F0A  50E1               	movf	fsr1l,w,c
 20901  011F0C  0FEE               	addlw	-18
 20902  011F0E  6ED9               	movwf	fsr2l,c
 20903  011F10  50E2               	movf	fsr1h,w,c
 20904  011F12  6EDA               	movwf	fsr2h,c
 20905  011F14  0EFF               	movlw	255
 20906  011F16  22DA               	addwfc	fsr2h,f,c
 20907  011F18  06DE               	decf	postinc2,f,c
 20908  011F1A  0E00               	movlw	0
 20909  011F1C  5ADD               	subwfb	postdec2,f,c
 20910                           
 20911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 20912  011F1E  0E01               	movlw	1
 20913  011F20  6E0B               	movwf	(btemp+10)^0,c
 20914  011F22  0E00               	movlw	0
 20915  011F24  6E0C               	movwf	(btemp+11)^0,c
 20916                           
 20917                           ;stkvar	_pp @ sp[(-56)+50]
 20918  011F26  0EFA               	movlw	-6
 20919  011F28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20920  011F2E  0EFB               	movlw	-5
 20921  011F30  0060  F033  FFE3   	movff	btemp+11,plusw1
 20922  011F36  D035               	goto	l13387
 20923  011F38                     l13379:
 20924                           
 20925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 20926                           ;stkvar	_n @ sp[(-56)+32]
 20927  011F38  0EE8               	movlw	-24
 20928  011F3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 20929  011F40  0EE9               	movlw	-23
 20930  011F42  006F FF8C  F00C    	movff	plusw1,btemp+11
 20931  011F48  0E43               	movlw	low _dbuf
 20932  011F4A  240B               	addwf	(btemp+10)^0,w,c
 20933  011F4C  6ED9               	movwf	fsr2l,c
 20934  011F4E  0E02               	movlw	high _dbuf
 20935  011F50  200C               	addwfc	(btemp+11)^0,w,c
 20936  011F52  6EDA               	movwf	fsr2h,c
 20937  011F54  0E30               	movlw	48
 20938  011F56  6EDF               	movwf	indf2,c
 20939                           
 20940                           ;stkvar	_n @ sp[(-56)+32]
 20941  011F58  0EE8               	movlw	-24
 20942  011F5A  50E3               	movf	plusw1,w,c
 20943  011F5C  0F01               	addlw	1
 20944  011F5E  6E01               	movwf	btemp^0,c
 20945  011F60  0EE8               	movlw	-24
 20946  011F62  0060  F007  FFE3   	movff	btemp,plusw1
 20947  011F68  6A01               	clrf	btemp^0,c
 20948  011F6A  0EE9               	movlw	-23
 20949  011F6C  50E3               	movf	plusw1,w,c
 20950  011F6E  2001               	addwfc	btemp^0,w,c
 20951  011F70  6E01               	movwf	btemp^0,c
 20952  011F72  0EE9               	movlw	-23
 20953  011F74  0060  F007  FFE3   	movff	btemp,plusw1
 20954                           
 20955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 20956                           ;stkvar	_w @ sp[(-56)+38]
 20957  011F7A  50E1               	movf	fsr1l,w,c
 20958  011F7C  0FEE               	addlw	-18
 20959  011F7E  6ED9               	movwf	fsr2l,c
 20960  011F80  50E2               	movf	fsr1h,w,c
 20961  011F82  6EDA               	movwf	fsr2h,c
 20962  011F84  0EFF               	movlw	255
 20963  011F86  22DA               	addwfc	fsr2h,f,c
 20964  011F88  06DE               	decf	postinc2,f,c
 20965  011F8A  0E00               	movlw	0
 20966  011F8C  5ADD               	subwfb	postdec2,f,c
 20967                           
 20968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 20969                           ;stkvar	_t @ sp[(-56)+52]
 20970  011F8E  50E1               	movf	fsr1l,w,c
 20971  011F90  0FFC               	addlw	-4
 20972  011F92  6ED9               	movwf	fsr2l,c
 20973  011F94  50E2               	movf	fsr1h,w,c
 20974  011F96  6EDA               	movwf	fsr2h,c
 20975  011F98  0EFF               	movlw	255
 20976  011F9A  22DA               	addwfc	fsr2h,f,c
 20977  011F9C  06DE               	decf	postinc2,f,c
 20978  011F9E  0E00               	movlw	0
 20979  011FA0  5ADD               	subwfb	postdec2,f,c
 20980  011FA2                     l13387:
 20981                           
 20982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 20983                           ;stkvar	_t @ sp[(-56)+52]
 20984  011FA2  0EFC               	movlw	-4
 20985  011FA4  006F FF8C  F001    	movff	plusw1,btemp
 20986  011FAA  0EFD               	movlw	-3
 20987  011FAC  50E3               	movf	plusw1,w,c
 20988  011FAE  1001               	iorwf	btemp^0,w,c
 20989  011FB0  A4D8               	btfss	status,2,c
 20990  011FB2  D7C2               	goto	l13379
 20991                           
 20992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 20993                           ;stkvar	_n @ sp[(-56)+32]
 20994  011FB4  0EE8               	movlw	-24
 20995  011FB6  006F FF8C  F00B    	movff	plusw1,btemp+10
 20996  011FBC  0EE9               	movlw	-23
 20997  011FBE  006F FF8C  F00C    	movff	plusw1,btemp+11
 20998  011FC4  0E43               	movlw	low _dbuf
 20999  011FC6  240B               	addwf	(btemp+10)^0,w,c
 21000  011FC8  6ED9               	movwf	fsr2l,c
 21001  011FCA  0E02               	movlw	high _dbuf
 21002  011FCC  200C               	addwfc	(btemp+11)^0,w,c
 21003  011FCE  6EDA               	movwf	fsr2h,c
 21004                           
 21005                           ;stkvar	_d @ sp[(-56)+44]
 21006  011FD0  0EF4               	movlw	-12
 21007  011FD2  50E3               	movf	plusw1,w,c
 21008  011FD4  0F30               	addlw	48
 21009  011FD6  6EDF               	movwf	indf2,c
 21010                           
 21011                           ;stkvar	_n @ sp[(-56)+32]
 21012  011FD8  0EE8               	movlw	-24
 21013  011FDA  50E3               	movf	plusw1,w,c
 21014  011FDC  0F01               	addlw	1
 21015  011FDE  6E01               	movwf	btemp^0,c
 21016  011FE0  0EE8               	movlw	-24
 21017  011FE2  0060  F007  FFE3   	movff	btemp,plusw1
 21018  011FE8  6A01               	clrf	btemp^0,c
 21019  011FEA  0EE9               	movlw	-23
 21020  011FEC  50E3               	movf	plusw1,w,c
 21021  011FEE  2001               	addwfc	btemp^0,w,c
 21022  011FF0  6E01               	movwf	btemp^0,c
 21023  011FF2  0EE9               	movlw	-23
 21024  011FF4  0060  F007  FFE3   	movff	btemp,plusw1
 21025                           
 21026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 21027                           ;stkvar	_w @ sp[(-56)+38]
 21028  011FFA  50E1               	movf	fsr1l,w,c
 21029  011FFC  0FEE               	addlw	-18
 21030  011FFE  6ED9               	movwf	fsr2l,c
 21031  012000  50E2               	movf	fsr1h,w,c
 21032  012002  6EDA               	movwf	fsr2h,c
 21033  012004  0EFF               	movlw	255
 21034  012006  22DA               	addwfc	fsr2h,f,c
 21035  012008  06DE               	decf	postinc2,f,c
 21036  01200A  0E00               	movlw	0
 21037  01200C  5ADD               	subwfb	postdec2,f,c
 21038  01200E                     l13395:
 21039                           
 21040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 21041                           ;stkvar	_u @ sp[(-56)+12]
 21042  01200E  0ED4               	movlw	-44
 21043  012010  006F FF8F FFE6     	movff	plusw1,postinc1
 21044  012016  006F FF8F FFE6     	movff	plusw1,postinc1
 21045  01201C  006F FF8F FFE6     	movff	plusw1,postinc1
 21046  012022  006F FF8F FFE6     	movff	plusw1,postinc1
 21047                           
 21048                           ;stkvar	_l @ sp[(-60)+20]
 21049  012028  0ED8               	movlw	-40
 21050  01202A  006F FF8F FFE6     	movff	plusw1,postinc1
 21051  012030  006F FF8F FFE6     	movff	plusw1,postinc1
 21052  012036  006F FF8F FFE6     	movff	plusw1,postinc1
 21053  01203C  006F FF8F FFE6     	movff	plusw1,postinc1
 21054  012042  EC6E  F09F         	call	___flmul	;wreg free
 21055  012046  0060  F007  FFE6   	movff	btemp,postinc1
 21056  01204C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21057  012052  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21058  012058  0060  F013  FFE6   	movff	btemp+3,postinc1
 21059                           
 21060                           ;stkvar	_h @ sp[(-60)+24]
 21061  01205E  0EDC               	movlw	-36
 21062  012060  006F FF8F FFE6     	movff	plusw1,postinc1
 21063  012066  006F FF8F FFE6     	movff	plusw1,postinc1
 21064  01206C  006F FF8F FFE6     	movff	plusw1,postinc1
 21065  012072  006F FF8F FFE6     	movff	plusw1,postinc1
 21066  012078  EC94  F0E3         	call	___flsub	;wreg free
 21067                           
 21068                           ;stkvar	_h @ sp[(-56)+24]
 21069  01207C  0EE0               	movlw	-32
 21070  01207E  0060  F007  FFE3   	movff	btemp,plusw1
 21071  012084  0EE1               	movlw	-31
 21072  012086  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21073  01208C  0EE2               	movlw	-30
 21074  01208E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21075  012094  0EE3               	movlw	-29
 21076  012096  0060  F013  FFE3   	movff	btemp+3,plusw1
 21077                           
 21078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 21079  01209C  0E00               	movlw	0
 21080  01209E  6EE6               	movwf	postinc1,c
 21081  0120A0  0E00               	movlw	0
 21082  0120A2  6EE6               	movwf	postinc1,c
 21083  0120A4  0E20               	movlw	32
 21084  0120A6  6EE6               	movwf	postinc1,c
 21085  0120A8  0E41               	movlw	65
 21086  0120AA  6EE6               	movwf	postinc1,c
 21087                           
 21088                           ;stkvar	_u @ sp[(-60)+12]
 21089  0120AC  0ED0               	movlw	-48
 21090  0120AE  006F FF8F FFE6     	movff	plusw1,postinc1
 21091  0120B4  006F FF8F FFE6     	movff	plusw1,postinc1
 21092  0120BA  006F FF8F FFE6     	movff	plusw1,postinc1
 21093  0120C0  006F FF8F FFE6     	movff	plusw1,postinc1
 21094  0120C6  EC61  F0A7         	call	___fldiv	;wreg free
 21095                           
 21096                           ;stkvar	_u @ sp[(-56)+12]
 21097  0120CA  0ED4               	movlw	-44
 21098  0120CC  0060  F007  FFE3   	movff	btemp,plusw1
 21099  0120D2  0ED5               	movlw	-43
 21100  0120D4  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21101  0120DA  0ED6               	movlw	-42
 21102  0120DC  0060  F00F  FFE3   	movff	btemp+2,plusw1
 21103  0120E2  0ED7               	movlw	-41
 21104  0120E4  0060  F013  FFE3   	movff	btemp+3,plusw1
 21105                           
 21106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 21107                           ;stkvar	_ne @ sp[(-56)+46]
 21108  0120EA  50E1               	movf	fsr1l,w,c
 21109  0120EC  0FF6               	addlw	-10
 21110  0120EE  6ED9               	movwf	fsr2l,c
 21111  0120F0  50E2               	movf	fsr1h,w,c
 21112  0120F2  6EDA               	movwf	fsr2h,c
 21113  0120F4  0EFF               	movlw	255
 21114  0120F6  22DA               	addwfc	fsr2h,f,c
 21115  0120F8  06DE               	decf	postinc2,f,c
 21116  0120FA  0E00               	movlw	0
 21117  0120FC  5ADD               	subwfb	postdec2,f,c
 21118                           
 21119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 21120                           ;stkvar	_i @ sp[(-56)+36]
 21121  0120FE  0EEC               	movlw	-20
 21122  012100  50E3               	movf	plusw1,w,c
 21123  012102  0F01               	addlw	1
 21124  012104  6E01               	movwf	btemp^0,c
 21125  012106  0EEC               	movlw	-20
 21126  012108  0060  F007  FFE3   	movff	btemp,plusw1
 21127  01210E  6A01               	clrf	btemp^0,c
 21128  012110  0EED               	movlw	-19
 21129  012112  50E3               	movf	plusw1,w,c
 21130  012114  2001               	addwfc	btemp^0,w,c
 21131  012116  6E01               	movwf	btemp^0,c
 21132  012118  0EED               	movlw	-19
 21133  01211A  0060  F007  FFE3   	movff	btemp,plusw1
 21134  012120                     l13403:
 21135                           
 21136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 21137                           ;stkvar	_m @ sp[(-56)+48]
 21138                           ;stkvar	_i @ sp[(-56)+36]
 21139  012120  50E1               	movf	fsr1l,w,c
 21140  012122  0FEC               	addlw	-20
 21141  012124  6ED9               	movwf	fsr2l,c
 21142  012126  50E2               	movf	fsr1h,w,c
 21143  012128  6EDA               	movwf	fsr2h,c
 21144  01212A  0EFF               	movlw	255
 21145  01212C  22DA               	addwfc	fsr2h,f,c
 21146  01212E  0EF8               	movlw	-8
 21147  012130  50E3               	movf	plusw1,w,c
 21148  012132  5CDE               	subwf	postinc2,w,c
 21149  012134  50DE               	movf	postinc2,w,c
 21150  012136  0A80               	xorlw	128
 21151  012138  6E01               	movwf	btemp^0,c
 21152  01213A  0EF9               	movlw	-7
 21153  01213C  50E3               	movf	plusw1,w,c
 21154  01213E  0A80               	xorlw	128
 21155  012140  5801               	subwfb	btemp^0,w,c
 21156  012142  B0D8               	btfsc	status,0,c
 21157  012144  D00E               	goto	u12420
 21158                           
 21159                           ;stkvar	_n @ sp[(-56)+32]
 21160  012146  0EE9               	movlw	-23
 21161  012148  BEE3               	btfsc	plusw1,7,c
 21162  01214A  D633               	goto	l13353
 21163  01214C  0EE9               	movlw	-23
 21164  01214E  50E3               	movf	plusw1,w,c
 21165  012150  E108               	bnz	u12420
 21166  012152  0EE8               	movlw	-24
 21167  012154  006F FF8C  F001    	movff	plusw1,btemp
 21168  01215A  0E4B               	movlw	75
 21169  01215C  5E01               	subwf	btemp^0,f,c
 21170  01215E  A0D8               	btfss	status,0,c
 21171  012160  D628               	goto	l13353
 21172  012162                     u12420:
 21173                           
 21174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 21175                           ;stkvar	_pp @ sp[(-56)+50]
 21176  012162  0EFA               	movlw	-6
 21177  012164  006F FF8C  F001    	movff	plusw1,btemp
 21178  01216A  0EFB               	movlw	-5
 21179  01216C  50E3               	movf	plusw1,w,c
 21180  01216E  1001               	iorwf	btemp^0,w,c
 21181  012170  B4D8               	btfsc	status,2,c
 21182  012172  A83E               	btfss	_flags^0,4,c
 21183  012174  D021               	goto	l13415
 21184                           
 21185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 21186                           ;stkvar	_n @ sp[(-56)+32]
 21187  012176  0EE8               	movlw	-24
 21188  012178  006F FF8C  F00B    	movff	plusw1,btemp+10
 21189  01217E  0EE9               	movlw	-23
 21190  012180  006F FF8C  F00C    	movff	plusw1,btemp+11
 21191  012186  0E43               	movlw	low _dbuf
 21192  012188  240B               	addwf	(btemp+10)^0,w,c
 21193  01218A  6ED9               	movwf	fsr2l,c
 21194  01218C  0E02               	movlw	high _dbuf
 21195  01218E  200C               	addwfc	(btemp+11)^0,w,c
 21196  012190  6EDA               	movwf	fsr2h,c
 21197  012192  0E2E               	movlw	46
 21198  012194  6EDF               	movwf	indf2,c
 21199                           
 21200                           ;stkvar	_n @ sp[(-56)+32]
 21201  012196  0EE8               	movlw	-24
 21202  012198  50E3               	movf	plusw1,w,c
 21203  01219A  0F01               	addlw	1
 21204  01219C  6E01               	movwf	btemp^0,c
 21205  01219E  0EE8               	movlw	-24
 21206  0121A0  0060  F007  FFE3   	movff	btemp,plusw1
 21207  0121A6  6A01               	clrf	btemp^0,c
 21208  0121A8  0EE9               	movlw	-23
 21209  0121AA  50E3               	movf	plusw1,w,c
 21210  0121AC  2001               	addwfc	btemp^0,w,c
 21211  0121AE  6E01               	movwf	btemp^0,c
 21212  0121B0  0EE9               	movlw	-23
 21213  0121B2  0060  F007  FFE3   	movff	btemp,plusw1
 21214  0121B8                     l13415:
 21215                           
 21216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 21217                           ;stkvar	_n @ sp[(-56)+32]
 21218  0121B8  0EE8               	movlw	-24
 21219  0121BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 21220  0121C0  0EE9               	movlw	-23
 21221  0121C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 21222  0121C8  0E43               	movlw	low _dbuf
 21223  0121CA  240B               	addwf	(btemp+10)^0,w,c
 21224  0121CC  6ED9               	movwf	fsr2l,c
 21225  0121CE  0E02               	movlw	high _dbuf
 21226  0121D0  200C               	addwfc	(btemp+11)^0,w,c
 21227  0121D2  6EDA               	movwf	fsr2h,c
 21228  0121D4  0E00               	movlw	0
 21229  0121D6  6EDF               	movwf	indf2,c
 21230                           
 21231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 21232                           ;stkvar	_nmode @ sp[(-56)+55]
 21233  0121D8  0EFF               	movlw	-1
 21234  0121DA  006F FF8C  F001    	movff	plusw1,btemp
 21235  0121E0  0E65               	movlw	101
 21236  0121E2  1801               	xorwf	btemp^0,w,c
 21237  0121E4  A4D8               	btfss	status,2,c
 21238  0121E6  EF55  F08A         	goto	l13219
 21239                           
 21240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 21241  0121EA  0E4F               	movlw	79
 21242  0121EC  6E0B               	movwf	(btemp+10)^0,c
 21243  0121EE  0E00               	movlw	0
 21244  0121F0  6E0C               	movwf	(btemp+11)^0,c
 21245                           
 21246                           ;stkvar	_i @ sp[(-56)+36]
 21247  0121F2  0EEC               	movlw	-20
 21248  0121F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21249  0121FA  0EED               	movlw	-19
 21250  0121FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 21251                           
 21252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 21253                           ;stkvar	_i @ sp[(-56)+36]
 21254  012202  0EEC               	movlw	-20
 21255  012204  006F FF8C  F00B    	movff	plusw1,btemp+10
 21256  01220A  0EED               	movlw	-19
 21257  01220C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21258  012212  0E43               	movlw	low _dbuf
 21259  012214  240B               	addwf	(btemp+10)^0,w,c
 21260  012216  6ED9               	movwf	fsr2l,c
 21261  012218  0E02               	movlw	high _dbuf
 21262  01221A  200C               	addwfc	(btemp+11)^0,w,c
 21263  01221C  6EDA               	movwf	fsr2h,c
 21264  01221E  0E00               	movlw	0
 21265  012220  6EDF               	movwf	indf2,c
 21266                           
 21267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 21268                           ;stkvar	_sign @ sp[(-56)+42]
 21269  012222  0EF2               	movlw	-14
 21270  012224  6AE3               	clrf	plusw1,c
 21271  012226  0EF3               	movlw	-13
 21272  012228  6AE3               	clrf	plusw1,c
 21273                           
 21274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 21275                           ;stkvar	_e @ sp[(-56)+34]
 21276  01222A  0EEB               	movlw	-21
 21277  01222C  AEE3               	btfss	plusw1,7,c
 21278  01222E  D012               	goto	l13429
 21279                           
 21280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 21281  012230  0E01               	movlw	1
 21282  012232  6E0B               	movwf	(btemp+10)^0,c
 21283  012234  0E00               	movlw	0
 21284  012236  6E0C               	movwf	(btemp+11)^0,c
 21285                           
 21286                           ;stkvar	_sign @ sp[(-56)+42]
 21287  012238  0EF2               	movlw	-14
 21288  01223A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21289  012240  0EF3               	movlw	-13
 21290  012242  0060  F033  FFE3   	movff	btemp+11,plusw1
 21291                           
 21292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 21293                           ;stkvar	_e @ sp[(-56)+34]
 21294                           ;stkvar	_e @ sp[(-56)+34]
 21295  012248  0EEA               	movlw	-22
 21296  01224A  6CE3               	negf	plusw1,c
 21297  01224C  0EEB               	movlw	-21
 21298  01224E  1EE3               	comf	plusw1,f,c
 21299  012250  B0D8               	btfsc	status,0,c
 21300  012252  2AE3               	incf	plusw1,f,c
 21301  012254                     l13429:
 21302                           
 21303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 21304  012254  0E02               	movlw	2
 21305  012256  6E0B               	movwf	(btemp+10)^0,c
 21306  012258  0E00               	movlw	0
 21307  01225A  6E0C               	movwf	(btemp+11)^0,c
 21308                           
 21309                           ;stkvar	_p @ sp[(-56)+40]
 21310  01225C  0EF0               	movlw	-16
 21311  01225E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21312  012264  0EF1               	movlw	-15
 21313  012266  0060  F033  FFE3   	movff	btemp+11,plusw1
 21314                           
 21315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 21316  01226C  D051               	goto	l13441
 21317  01226E                     l13431:
 21318                           
 21319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 21320                           ;stkvar	_i @ sp[(-56)+36]
 21321  01226E  50E1               	movf	fsr1l,w,c
 21322  012270  0FEC               	addlw	-20
 21323  012272  6ED9               	movwf	fsr2l,c
 21324  012274  50E2               	movf	fsr1h,w,c
 21325  012276  6EDA               	movwf	fsr2h,c
 21326  012278  0EFF               	movlw	255
 21327  01227A  22DA               	addwfc	fsr2h,f,c
 21328  01227C  06DE               	decf	postinc2,f,c
 21329  01227E  0E00               	movlw	0
 21330  012280  5ADD               	subwfb	postdec2,f,c
 21331                           
 21332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 21333                           ;stkvar	_i @ sp[(-56)+36]
 21334  012282  0EEC               	movlw	-20
 21335  012284  006F FF8C  F00B    	movff	plusw1,btemp+10
 21336  01228A  0EED               	movlw	-19
 21337  01228C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21338  012292  0E43               	movlw	low _dbuf
 21339  012294  240B               	addwf	(btemp+10)^0,w,c
 21340  012296  6ED9               	movwf	fsr2l,c
 21341  012298  0E02               	movlw	high _dbuf
 21342  01229A  200C               	addwfc	(btemp+11)^0,w,c
 21343  01229C  6EDA               	movwf	fsr2h,c
 21344  01229E  0E0A               	movlw	10
 21345  0122A0  6EE6               	movwf	postinc1,c
 21346  0122A2  0E00               	movlw	0
 21347  0122A4  6EE6               	movwf	postinc1,c
 21348                           
 21349                           ;stkvar	_e @ sp[(-58)+34]
 21350  0122A6  0EE8               	movlw	-24
 21351  0122A8  006F FF8F FFE6     	movff	plusw1,postinc1
 21352  0122AE  006F FF8F FFE6     	movff	plusw1,postinc1
 21353  0122B4  EC0E  F0D3         	call	___awmod	;wreg free
 21354  0122B8  5001               	movf	btemp^0,w,c
 21355  0122BA  0F30               	addlw	48
 21356  0122BC  6EDF               	movwf	indf2,c
 21357                           
 21358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 21359  0122BE  0E0A               	movlw	10
 21360  0122C0  6EE6               	movwf	postinc1,c
 21361  0122C2  0E00               	movlw	0
 21362  0122C4  6EE6               	movwf	postinc1,c
 21363                           
 21364                           ;stkvar	_e @ sp[(-58)+34]
 21365  0122C6  0EE8               	movlw	-24
 21366  0122C8  006F FF8F FFE6     	movff	plusw1,postinc1
 21367  0122CE  006F FF8F FFE6     	movff	plusw1,postinc1
 21368  0122D4  ECD5  F0CE         	call	___awdiv	;wreg free
 21369                           
 21370                           ;stkvar	_e @ sp[(-56)+34]
 21371  0122D8  0EEA               	movlw	-22
 21372  0122DA  0060  F007  FFE3   	movff	btemp,plusw1
 21373  0122E0  0EEB               	movlw	-21
 21374  0122E2  0060  F00B  FFE3   	movff	btemp+1,plusw1
 21375                           
 21376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 21377                           ;stkvar	_p @ sp[(-56)+40]
 21378  0122E8  50E1               	movf	fsr1l,w,c
 21379  0122EA  0FF0               	addlw	-16
 21380  0122EC  6ED9               	movwf	fsr2l,c
 21381  0122EE  50E2               	movf	fsr1h,w,c
 21382  0122F0  6EDA               	movwf	fsr2h,c
 21383  0122F2  0EFF               	movlw	255
 21384  0122F4  22DA               	addwfc	fsr2h,f,c
 21385  0122F6  06DE               	decf	postinc2,f,c
 21386  0122F8  0E00               	movlw	0
 21387  0122FA  5ADD               	subwfb	postdec2,f,c
 21388                           
 21389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 21390                           ;stkvar	_w @ sp[(-56)+38]
 21391  0122FC  50E1               	movf	fsr1l,w,c
 21392  0122FE  0FEE               	addlw	-18
 21393  012300  6ED9               	movwf	fsr2l,c
 21394  012302  50E2               	movf	fsr1h,w,c
 21395  012304  6EDA               	movwf	fsr2h,c
 21396  012306  0EFF               	movlw	255
 21397  012308  22DA               	addwfc	fsr2h,f,c
 21398  01230A  06DE               	decf	postinc2,f,c
 21399  01230C  0E00               	movlw	0
 21400  01230E  5ADD               	subwfb	postdec2,f,c
 21401  012310                     l13441:
 21402                           
 21403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 21404                           ;stkvar	_e @ sp[(-56)+34]
 21405  012310  0EEA               	movlw	-22
 21406  012312  006F FF8C  F001    	movff	plusw1,btemp
 21407  012318  0EEB               	movlw	-21
 21408  01231A  50E3               	movf	plusw1,w,c
 21409  01231C  1001               	iorwf	btemp^0,w,c
 21410  01231E  A4D8               	btfss	status,2,c
 21411  012320  D7A6               	goto	l13431
 21412                           
 21413                           ;stkvar	_p @ sp[(-56)+40]
 21414  012322  0EF1               	movlw	-15
 21415  012324  BEE3               	btfsc	plusw1,7,c
 21416  012326  D007               	goto	u12480
 21417  012328  0EF1               	movlw	-15
 21418  01232A  50E3               	movf	plusw1,w,c
 21419  01232C  E1A0               	bnz	l13431
 21420  01232E  0EF0               	movlw	-16
 21421  012330  04E3               	decf	plusw1,w,c
 21422  012332  B0D8               	btfsc	status,0,c
 21423  012334  D79C               	goto	l13431
 21424  012336                     u12480:
 21425                           
 21426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 21427                           ;stkvar	_i @ sp[(-56)+36]
 21428  012336  50E1               	movf	fsr1l,w,c
 21429  012338  0FEC               	addlw	-20
 21430  01233A  6ED9               	movwf	fsr2l,c
 21431  01233C  50E2               	movf	fsr1h,w,c
 21432  01233E  6EDA               	movwf	fsr2h,c
 21433  012340  0EFF               	movlw	255
 21434  012342  22DA               	addwfc	fsr2h,f,c
 21435  012344  06DE               	decf	postinc2,f,c
 21436  012346  0E00               	movlw	0
 21437  012348  5ADD               	subwfb	postdec2,f,c
 21438                           
 21439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 21440                           ;stkvar	_sign @ sp[(-56)+42]
 21441  01234A  0EF2               	movlw	-14
 21442  01234C  006F FF8C  F001    	movff	plusw1,btemp
 21443  012352  0EF3               	movlw	-13
 21444  012354  50E3               	movf	plusw1,w,c
 21445  012356  1001               	iorwf	btemp^0,w,c
 21446  012358  A4D8               	btfss	status,2,c
 21447  01235A  D002               	goto	l13451
 21448  01235C  0E2B               	movlw	43
 21449  01235E  D001               	goto	L23
 21450  012360                     l13451:
 21451  012360  0E2D               	movlw	45
 21452  012362                     L23:
 21453  012362  6E0B               	movwf	(btemp+10)^0,c
 21454  012364  0E00               	movlw	0
 21455  012366  6E0C               	movwf	(btemp+11)^0,c
 21456                           
 21457                           ;stkvar	_efgtoa$6175 @ sp[(-56)+4]
 21458  012368  0ECC               	movlw	-52
 21459  01236A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21460  012370  0ECD               	movlw	-51
 21461  012372  0060  F033  FFE3   	movff	btemp+11,plusw1
 21462                           
 21463                           ;stkvar	_efgtoa$6175 @ sp[(-56)+4]
 21464                           ;stkvar	_i @ sp[(-56)+36]
 21465  012378  0EEC               	movlw	-20
 21466  01237A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21467  012380  0EED               	movlw	-19
 21468  012382  006F FF8C  F00C    	movff	plusw1,btemp+11
 21469  012388  0E43               	movlw	low _dbuf
 21470  01238A  240B               	addwf	(btemp+10)^0,w,c
 21471  01238C  6ED9               	movwf	fsr2l,c
 21472  01238E  0E02               	movlw	high _dbuf
 21473  012390  200C               	addwfc	(btemp+11)^0,w,c
 21474  012392  6EDA               	movwf	fsr2h,c
 21475  012394  0ECC               	movlw	-52
 21476  012396  006F FF8F FFDF     	movff	plusw1,indf2
 21477                           
 21478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 21479                           ;stkvar	_w @ sp[(-56)+38]
 21480  01239C  50E1               	movf	fsr1l,w,c
 21481  01239E  0FEE               	addlw	-18
 21482  0123A0  6ED9               	movwf	fsr2l,c
 21483  0123A2  50E2               	movf	fsr1h,w,c
 21484  0123A4  6EDA               	movwf	fsr2h,c
 21485  0123A6  0EFF               	movlw	255
 21486  0123A8  22DA               	addwfc	fsr2h,f,c
 21487  0123AA  06DE               	decf	postinc2,f,c
 21488  0123AC  0E00               	movlw	0
 21489  0123AE  5ADD               	subwfb	postdec2,f,c
 21490                           
 21491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 21492                           ;stkvar	_i @ sp[(-56)+36]
 21493  0123B0  50E1               	movf	fsr1l,w,c
 21494  0123B2  0FEC               	addlw	-20
 21495  0123B4  6ED9               	movwf	fsr2l,c
 21496  0123B6  50E2               	movf	fsr1h,w,c
 21497  0123B8  6EDA               	movwf	fsr2h,c
 21498  0123BA  0EFF               	movlw	255
 21499  0123BC  22DA               	addwfc	fsr2h,f,c
 21500  0123BE  06DE               	decf	postinc2,f,c
 21501  0123C0  0E00               	movlw	0
 21502  0123C2  5ADD               	subwfb	postdec2,f,c
 21503  0123C4  0EBF               	movlw	191
 21504  0123C6  6E0B               	movwf	(btemp+10)^0,c
 21505  0123C8  0EFF               	movlw	255
 21506  0123CA  6E0C               	movwf	(btemp+11)^0,c
 21507                           
 21508                           ;stkvar	_c @ sp[(-56)+-7]
 21509  0123CC  0EC1               	movlw	-63
 21510  0123CE  50E3               	movf	plusw1,w,c
 21511  0123D0  6E09               	movwf	(btemp+8)^0,c
 21512  0123D2  6A0A               	clrf	(btemp+9)^0,c
 21513  0123D4  500B               	movf	(btemp+10)^0,w,c
 21514  0123D6  2609               	addwf	(btemp+8)^0,f,c
 21515  0123D8  500C               	movf	(btemp+11)^0,w,c
 21516  0123DA  220A               	addwfc	(btemp+9)^0,f,c
 21517  0123DC  500A               	movf	(btemp+9)^0,w,c
 21518  0123DE  E106               	bnz	u12500
 21519  0123E0  0E1A               	movlw	26
 21520  0123E2  5C09               	subwf	(btemp+8)^0,w,c
 21521  0123E4  B0D8               	btfsc	status,0,c
 21522  0123E6  D002               	goto	u12500
 21523  0123E8  0E01               	movlw	1
 21524  0123EA  D001               	goto	u12510
 21525  0123EC                     u12500:
 21526  0123EC  0E00               	movlw	0
 21527  0123EE                     u12510:
 21528  0123EE  6E0B               	movwf	(btemp+10)^0,c
 21529  0123F0  6A0C               	clrf	(btemp+11)^0,c
 21530                           
 21531                           ;stkvar	_efgtoa$6177 @ sp[(-56)+0]
 21532  0123F2  0EC8               	movlw	-56
 21533  0123F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21534  0123FA  0EC9               	movlw	-55
 21535  0123FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 21536                           
 21537                           ;stkvar	_efgtoa$6177 @ sp[(-56)+0]
 21538  012402  0EC8               	movlw	-56
 21539  012404  006F FF8C  F001    	movff	plusw1,btemp
 21540  01240A  0EC9               	movlw	-55
 21541  01240C  50E3               	movf	plusw1,w,c
 21542  01240E  1001               	iorwf	btemp^0,w,c
 21543  012410  A4D8               	btfss	status,2,c
 21544  012412  D002               	goto	l13467
 21545  012414  0E65               	movlw	101
 21546  012416  D001               	goto	L24
 21547  012418                     l13467:
 21548  012418  0E45               	movlw	69
 21549  01241A                     L24:
 21550  01241A  6E0B               	movwf	(btemp+10)^0,c
 21551  01241C  0E00               	movlw	0
 21552  01241E  6E0C               	movwf	(btemp+11)^0,c
 21553                           
 21554                           ;stkvar	_efgtoa$6176 @ sp[(-56)+2]
 21555  012420  0ECA               	movlw	-54
 21556  012422  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21557  012428  0ECB               	movlw	-53
 21558  01242A  0060  F033  FFE3   	movff	btemp+11,plusw1
 21559                           
 21560                           ;stkvar	_efgtoa$6176 @ sp[(-56)+2]
 21561                           ;stkvar	_i @ sp[(-56)+36]
 21562  012430  0EEC               	movlw	-20
 21563  012432  006F FF8C  F00B    	movff	plusw1,btemp+10
 21564  012438  0EED               	movlw	-19
 21565  01243A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21566  012440  0E43               	movlw	low _dbuf
 21567  012442  240B               	addwf	(btemp+10)^0,w,c
 21568  012444  6ED9               	movwf	fsr2l,c
 21569  012446  0E02               	movlw	high _dbuf
 21570  012448  200C               	addwfc	(btemp+11)^0,w,c
 21571  01244A  6EDA               	movwf	fsr2h,c
 21572  01244C  0ECA               	movlw	-54
 21573  01244E  006F FF8F FFDF     	movff	plusw1,indf2
 21574                           
 21575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 21576                           ;stkvar	_w @ sp[(-56)+38]
 21577  012454  50E1               	movf	fsr1l,w,c
 21578  012456  0FEE               	addlw	-18
 21579  012458  6ED9               	movwf	fsr2l,c
 21580  01245A  50E2               	movf	fsr1h,w,c
 21581  01245C  6EDA               	movwf	fsr2h,c
 21582  01245E  0EFF               	movlw	255
 21583  012460  22DA               	addwfc	fsr2h,f,c
 21584  012462  06DE               	decf	postinc2,f,c
 21585  012464  0E00               	movlw	0
 21586  012466  5ADD               	subwfb	postdec2,f,c
 21587                           
 21588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 21589                           ;stkvar	_i @ sp[(-56)+36]
 21590  012468  0EEC               	movlw	-20
 21591  01246A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21592  012470  0EED               	movlw	-19
 21593  012472  006F FF8C  F00C    	movff	plusw1,btemp+11
 21594  012478  0E43               	movlw	low _dbuf
 21595  01247A  240B               	addwf	(btemp+10)^0,w,c
 21596  01247C  6E09               	movwf	(btemp+8)^0,c
 21597  01247E  0E02               	movlw	high _dbuf
 21598  012480  200C               	addwfc	(btemp+11)^0,w,c
 21599  012482  6E0A               	movwf	(btemp+9)^0,c
 21600  012484  0060  F027  FFE6   	movff	btemp+8,postinc1
 21601  01248A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 21602                           
 21603                           ;stkvar	_n @ sp[(-58)+32]
 21604  012490  0E43               	movlw	low _dbuf
 21605  012492  6E0B               	movwf	(btemp+10)^0,c
 21606  012494  0E02               	movlw	high _dbuf
 21607  012496  6E0C               	movwf	(btemp+11)^0,c
 21608  012498  0EE6               	movlw	-26
 21609  01249A  50E3               	movf	plusw1,w,c
 21610  01249C  260B               	addwf	(btemp+10)^0,f,c
 21611  01249E  0EE7               	movlw	-25
 21612  0124A0  50E3               	movf	plusw1,w,c
 21613  0124A2  220C               	addwfc	(btemp+11)^0,f,c
 21614  0124A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21615  0124AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 21616  0124B0  EC87  F0D7         	call	_strcpy	;wreg free
 21617  0124B4  EF55  F08A         	goto	l13219
 21618  0124B8                     l2455:
 21619                           
 21620                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 21621  0124B8  0EC1               	movlw	193
 21622  0124BA  26E1               	addwf	fsr1l,f,c
 21623  0124BC  0EFF               	movlw	255
 21624  0124BE  22E2               	addwfc	fsr1h,f,c
 21625  0124C0  0012               	return		;funcret
 21626  0124C2                     __end_of_efgtoa:
 21627                           	opt callstack 0
 21628                           
 21629 ;; *************** function _tolower *****************
 21630 ;; Defined at:
 21631 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 21632 ;; Parameters:    Size  Location     Type
 21633 ;;  c               2  [STACK] int 
 21634 ;; Auto vars:     Size  Location     Type
 21635 ;;		None
 21636 ;; Return value:  Size  Location     Type
 21637 ;;                  2  [STACK] int 
 21638 ;; Registers used:
 21639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 21640 ;; Tracked objects:
 21641 ;;		On entry : 0/0
 21642 ;;		On exit  : 0/0
 21643 ;;		Unchanged: 0/0
 21644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21649 ;;Total ram usage:        0 bytes
 21650 ;; Hardware stack levels used:    1
 21651 ;; Hardware stack levels required when called:   16
 21652 ;; This function calls:
 21653 ;;		_isupper
 21654 ;; This function is called by:
 21655 ;;		_efgtoa
 21656 ;;		_vfpfcnvrt
 21657 ;; This function uses a reentrant model
 21658 ;;
 21659                           
 21660                           	psect	text76
 21661  01BC48                     __ptext76:
 21662                           	opt callstack 0
 21663  01BC48                     _tolower:
 21664                           	opt callstack 0
 21665                           
 21666                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21667  01BC48  52E6               	movf	postinc1,f,c
 21668  01BC4A  52E6               	movf	postinc1,f,c
 21669                           
 21670                           ;stkvar	_c @ sp[(-2)+-2]
 21671                           
 21672                           ;incstack = 0
 21673 ;; hardware stack exceeded
 21674  01BC4C  0EFC               	movlw	-4
 21675  01BC4E  50E3               	movf	plusw1,w,c
 21676  01BC50  0FBF               	addlw	191
 21677  01BC52  6E0B               	movwf	(btemp+10)^0,c
 21678  01BC54  0EFD               	movlw	-3
 21679  01BC56  006F FF8C  F00C    	movff	plusw1,btemp+11
 21680  01BC5C  0EFF               	movlw	255
 21681  01BC5E  220C               	addwfc	(btemp+11)^0,f,c
 21682  01BC60  500C               	movf	(btemp+11)^0,w,c
 21683  01BC62  E106               	bnz	u6560
 21684  01BC64  0E1A               	movlw	26
 21685  01BC66  5C0B               	subwf	(btemp+10)^0,w,c
 21686  01BC68  B0D8               	btfsc	status,0,c
 21687  01BC6A  D002               	goto	u6560
 21688  01BC6C  0E01               	movlw	1
 21689  01BC6E  D001               	goto	u6570
 21690  01BC70                     u6560:
 21691  01BC70  0E00               	movlw	0
 21692  01BC72                     u6570:
 21693  01BC72  6E0B               	movwf	(btemp+10)^0,c
 21694  01BC74  6A0C               	clrf	(btemp+11)^0,c
 21695                           
 21696                           ;stkvar	_tolower$6996 @ sp[(-2)+0]
 21697  01BC76  0EFE               	movlw	-2
 21698  01BC78  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21699  01BC7E  0EFF               	movlw	-1
 21700  01BC80  0060  F033  FFE3   	movff	btemp+11,plusw1
 21701                           
 21702                           ;stkvar	_tolower$6996 @ sp[(-2)+0]
 21703  01BC86  0EFE               	movlw	-2
 21704  01BC88  006F FF8C  F001    	movff	plusw1,btemp
 21705  01BC8E  0EFF               	movlw	-1
 21706  01BC90  50E3               	movf	plusw1,w,c
 21707  01BC92  1001               	iorwf	btemp^0,w,c
 21708  01BC94  B4D8               	btfsc	status,2,c
 21709  01BC96  D00D               	goto	l8767
 21710                           
 21711                           ;stkvar	_c @ sp[(-2)+-2]
 21712  01BC98  0EFC               	movlw	-4
 21713  01BC9A  006F FF8C  F001    	movff	plusw1,btemp
 21714  01BCA0  0EFD               	movlw	-3
 21715  01BCA2  006F FF8C  F002    	movff	plusw1,btemp+1
 21716  01BCA8  0E20               	movlw	32
 21717  01BCAA  1201               	iorwf	btemp^0,f,c
 21718  01BCAC  0E00               	movlw	0
 21719  01BCAE  1202               	iorwf	(btemp+1)^0,f,c
 21720  01BCB0  D008               	goto	l3727
 21721  01BCB2                     l8767:
 21722                           
 21723                           ;stkvar	_c @ sp[(-2)+-2]
 21724  01BCB2  0EFC               	movlw	-4
 21725  01BCB4  006F FF8C  F001    	movff	plusw1,btemp
 21726  01BCBA  0EFD               	movlw	-3
 21727  01BCBC  006F FF8C  F002    	movff	plusw1,btemp+1
 21728  01BCC2                     l3727:
 21729                           
 21730                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21731  01BCC2  52E5               	movf	postdec1,f,c
 21732  01BCC4  52E5               	movf	postdec1,f,c
 21733  01BCC6  52E5               	movf	postdec1,f,c
 21734  01BCC8  52E5               	movf	postdec1,f,c
 21735  01BCCA  0012               	return		;funcret
 21736  01BCCC                     __end_of_tolower:
 21737                           	opt callstack 0
 21738                           
 21739 ;; *************** function _isupper *****************
 21740 ;; Defined at:
 21741 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 21742 ;; Parameters:    Size  Location     Type
 21743 ;;  c               2  [STACK] int 
 21744 ;; Auto vars:     Size  Location     Type
 21745 ;;		None
 21746 ;; Return value:  Size  Location     Type
 21747 ;;                  2  [STACK] int 
 21748 ;; Registers used:
 21749 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21750 ;; Tracked objects:
 21751 ;;		On entry : 0/0
 21752 ;;		On exit  : 0/0
 21753 ;;		Unchanged: 0/0
 21754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21759 ;;Total ram usage:        0 bytes
 21760 ;; Hardware stack levels used:    1
 21761 ;; Hardware stack levels required when called:   15
 21762 ;; This function calls:
 21763 ;;		Nothing
 21764 ;; This function is called by:
 21765 ;;		_efgtoa
 21766 ;;		_xtoa
 21767 ;;		_vfpfcnvrt
 21768 ;;		_tolower
 21769 ;; This function uses a reentrant model
 21770 ;;
 21771                           
 21772                           	psect	text77
 21773  01CBEE                     __ptext77:
 21774                           	opt callstack 0
 21775  01CBEE                     _isupper:
 21776                           	opt callstack 0
 21777                           
 21778                           ;stkvar	_c @ sp[(0)+-2]
 21779                           
 21780                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21781                           ;incstack = 0
 21782 ;; hardware stack exceeded
 21783  01CBEE  0EFE               	movlw	-2
 21784  01CBF0  50E3               	movf	plusw1,w,c
 21785  01CBF2  0FBF               	addlw	191
 21786  01CBF4  6E0B               	movwf	(btemp+10)^0,c
 21787  01CBF6  0EFF               	movlw	-1
 21788  01CBF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 21789  01CBFE  0EFF               	movlw	255
 21790  01CC00  220C               	addwfc	(btemp+11)^0,f,c
 21791  01CC02  500C               	movf	(btemp+11)^0,w,c
 21792  01CC04  E106               	bnz	u5910
 21793  01CC06  0E1A               	movlw	26
 21794  01CC08  5C0B               	subwf	(btemp+10)^0,w,c
 21795  01CC0A  B0D8               	btfsc	status,0,c
 21796  01CC0C  D002               	goto	u5910
 21797  01CC0E  0E01               	movlw	1
 21798  01CC10  D001               	goto	u5920
 21799  01CC12                     u5910:
 21800  01CC12  0E00               	movlw	0
 21801  01CC14                     u5920:
 21802  01CC14  6E01               	movwf	btemp^0,c
 21803  01CC16  6A02               	clrf	(btemp+1)^0,c
 21804                           
 21805                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21806  01CC18  52E5               	movf	postdec1,f,c
 21807  01CC1A  52E5               	movf	postdec1,f,c
 21808  01CC1C  0012               	return		;funcret
 21809  01CC1E                     __end_of_isupper:
 21810                           	opt callstack 0
 21811                           
 21812 ;; *************** function _strcpy *****************
 21813 ;; Defined at:
 21814 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 21815 ;; Parameters:    Size  Location     Type
 21816 ;;  dest            2  [STACK] PTR unsigned char 
 21817 ;;		 -> dbuf(80), 
 21818 ;;  src             2  [STACK] PTR const unsigned char 
 21819 ;;		 -> STR_87(4), STR_86(4), STR_83(4), STR_82(4), 
 21820 ;;		 -> dbuf(80), 
 21821 ;; Auto vars:     Size  Location     Type
 21822 ;;  d               2  [STACK] PTR unsigned char 
 21823 ;;		 -> dbuf(80), 
 21824 ;;  s               2  [STACK] PTR const unsigned char 
 21825 ;;		 -> STR_87(4), STR_86(4), STR_83(4), STR_82(4), 
 21826 ;;		 -> dbuf(80), 
 21827 ;; Return value:  Size  Location     Type
 21828 ;;                  2  [STACK] PTR unsigned char 
 21829 ;; Registers used:
 21830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 21831 ;; Tracked objects:
 21832 ;;		On entry : 0/0
 21833 ;;		On exit  : 0/0
 21834 ;;		Unchanged: 0/0
 21835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21840 ;;Total ram usage:        0 bytes
 21841 ;; Hardware stack levels used:    1
 21842 ;; Hardware stack levels required when called:   15
 21843 ;; This function calls:
 21844 ;;		Nothing
 21845 ;; This function is called by:
 21846 ;;		_efgtoa
 21847 ;; This function uses a reentrant model
 21848 ;;
 21849                           
 21850                           	psect	text78
 21851  01AF0E                     __ptext78:
 21852                           	opt callstack 0
 21853  01AF0E                     _strcpy:
 21854                           	opt callstack 0
 21855                           
 21856                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21857  01AF0E  52E6               	movf	postinc1,f,c
 21858  01AF10  52E6               	movf	postinc1,f,c
 21859  01AF12  52E6               	movf	postinc1,f,c
 21860  01AF14  52E6               	movf	postinc1,f,c
 21861                           
 21862                           ;stkvar	_src @ sp[(-4)+-4]
 21863                           
 21864                           ;incstack = 0
 21865 ;; hardware stack exceeded
 21866  01AF16  0EF8               	movlw	-8
 21867  01AF18  006F FF8C  F00B    	movff	plusw1,btemp+10
 21868  01AF1E  0EF9               	movlw	-7
 21869  01AF20  006F FF8C  F00C    	movff	plusw1,btemp+11
 21870                           
 21871                           ;stkvar	_s @ sp[(-4)+2]
 21872  01AF26  0EFF               	movlw	-1
 21873  01AF28  0060  F033  FFE3   	movff	btemp+11,plusw1
 21874  01AF2E  0EFE               	movlw	-2
 21875  01AF30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21876                           
 21877                           ;stkvar	_dest @ sp[(-4)+-2]
 21878  01AF36  0EFA               	movlw	-6
 21879  01AF38  006F FF8C  F00B    	movff	plusw1,btemp+10
 21880  01AF3E  0EFB               	movlw	-5
 21881  01AF40  006F FF8C  F00C    	movff	plusw1,btemp+11
 21882                           
 21883                           ;stkvar	_d @ sp[(-4)+0]
 21884  01AF46  0EFD               	movlw	-3
 21885  01AF48  0060  F033  FFE3   	movff	btemp+11,plusw1
 21886  01AF4E  0EFC               	movlw	-4
 21887  01AF50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21888  01AF56                     l13081:
 21889                           
 21890                           ;stkvar	_s @ sp[(-4)+2]
 21891  01AF56  50E1               	movf	fsr1l,w,c
 21892  01AF58  0FFE               	addlw	-2
 21893  01AF5A  6ED9               	movwf	fsr2l,c
 21894  01AF5C  50E2               	movf	fsr1h,w,c
 21895  01AF5E  6EDA               	movwf	fsr2h,c
 21896  01AF60  0EFF               	movlw	255
 21897  01AF62  22DA               	addwfc	fsr2h,f,c
 21898  01AF64  006F FF7C  F00B    	movff	indf2,btemp+10
 21899  01AF6A  0E01               	movlw	1
 21900  01AF6C  26DE               	addwf	postinc2,f,c
 21901  01AF6E  006F FF7C  F00C    	movff	indf2,btemp+11
 21902  01AF74  0E00               	movlw	0
 21903  01AF76  22DD               	addwfc	postdec2,f,c
 21904  01AF78  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 21905  01AF7E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 21906  01AF84  0E00               	movlw	low (__mediumconst shr (0+16))
 21907  01AF86  6EF8               	movwf	tblptru,c
 21908                           
 21909                           ;stkvar	_d @ sp[(-4)+0]
 21910  01AF88  50E1               	movf	fsr1l,w,c
 21911  01AF8A  0FFC               	addlw	-4
 21912  01AF8C  6ED9               	movwf	fsr2l,c
 21913  01AF8E  50E2               	movf	fsr1h,w,c
 21914  01AF90  6EDA               	movwf	fsr2h,c
 21915  01AF92  0EFF               	movlw	255
 21916  01AF94  22DA               	addwfc	fsr2h,f,c
 21917  01AF96  006F FF7C  F00B    	movff	indf2,btemp+10
 21918  01AF9C  0E01               	movlw	1
 21919  01AF9E  26DE               	addwf	postinc2,f,c
 21920  01AFA0  006F FF7C  F00C    	movff	indf2,btemp+11
 21921  01AFA6  0E00               	movlw	0
 21922  01AFA8  22DD               	addwfc	postdec2,f,c
 21923  01AFAA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 21924  01AFB0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 21925  01AFB6  0E1F               	movlw	(high __ramtop+-1)
 21926  01AFB8  64F7               	cpfsgt	tblptrh,c
 21927  01AFBA  D003               	bra	u11807
 21928  01AFBC  0008               	tblrd		*
 21929  01AFBE  50F5               	movf	tablat,w,c
 21930  01AFC0  D007               	bra	u11800
 21931  01AFC2                     u11807:
 21932  01AFC2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21933  01AFC8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21934  01AFCE  50EF               	movf	indf0,w,c
 21935  01AFD0                     u11800:
 21936  01AFD0  6EDF               	movwf	indf2,c
 21937  01AFD2  50DF               	movf	indf2,w,c
 21938  01AFD4  A4D8               	btfss	status,2,c
 21939  01AFD6  D7BF               	goto	l13081
 21940                           
 21941                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 21942  01AFD8  0EF8               	movlw	248
 21943  01AFDA  26E1               	addwf	fsr1l,f,c
 21944  01AFDC  0EFF               	movlw	255
 21945  01AFDE  22E2               	addwfc	fsr1h,f,c
 21946  01AFE0  0012               	return		;funcret
 21947  01AFE2                     __end_of_strcpy:
 21948                           	opt callstack 0
 21949                           
 21950 ;; *************** function _floorf *****************
 21951 ;; Defined at:
 21952 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 21953 ;; Parameters:    Size  Location     Type
 21954 ;;  x               4  [STACK] float 
 21955 ;; Auto vars:     Size  Location     Type
 21956 ;;  u               4  [STACK] struct .
 21957 ;;  m               4  [STACK] unsigned long 
 21958 ;;  e               2  [STACK] int 
 21959 ;; Return value:  Size  Location     Type
 21960 ;;                  4  [STACK] float 
 21961 ;; Registers used:
 21962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 21963 ;; Tracked objects:
 21964 ;;		On entry : 0/0
 21965 ;;		On exit  : 0/0
 21966 ;;		Unchanged: 0/0
 21967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21972 ;;Total ram usage:        0 bytes
 21973 ;; Hardware stack levels used:    1
 21974 ;; Hardware stack levels required when called:   15
 21975 ;; This function calls:
 21976 ;;		Nothing
 21977 ;; This function is called by:
 21978 ;;		_efgtoa
 21979 ;; This function uses a reentrant model
 21980 ;;
 21981                           
 21982                           	psect	text79
 21983  016A36                     __ptext79:
 21984                           	opt callstack 0
 21985  016A36                     _floorf:
 21986                           	opt callstack 0
 21987                           
 21988                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 21989  016A36  0E0A               	movlw	10
 21990  016A38  26E1               	addwf	fsr1l,f,c
 21991  016A3A  0E00               	movlw	0
 21992  016A3C  22E2               	addwfc	fsr1h,f,c
 21993                           
 21994                           ;incstack = 0
 21995 ;; hardware stack exceeded
 21996  016A3E  0060  F7A8  F009   	movff	floorf@F524,btemp+8
 21997  016A44  0060  F7AC  F00A   	movff	floorf@F524+1,btemp+9
 21998  016A4A  0060  F7B0  F00B   	movff	floorf@F524+2,btemp+10
 21999  016A50  0060  F7B4  F00C   	movff	floorf@F524+3,btemp+11
 22000                           
 22001                           ;stkvar	_u @ sp[(-10)+0]
 22002  016A56  0EF6               	movlw	-10
 22003  016A58  0060  F027  FFE3   	movff	btemp+8,plusw1
 22004  016A5E  0EF7               	movlw	-9
 22005  016A60  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22006  016A66  0EF8               	movlw	-8
 22007  016A68  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22008  016A6E  0EF9               	movlw	-7
 22009  016A70  0060  F033  FFE3   	movff	btemp+11,plusw1
 22010                           
 22011                           ;stkvar	_x @ sp[(-10)+-4]
 22012  016A76  0EF2               	movlw	-14
 22013  016A78  006F FF8C  F009    	movff	plusw1,btemp+8
 22014  016A7E  0EF3               	movlw	-13
 22015  016A80  006F FF8C  F00A    	movff	plusw1,btemp+9
 22016  016A86  0EF4               	movlw	-12
 22017  016A88  006F FF8C  F00B    	movff	plusw1,btemp+10
 22018  016A8E  0EF5               	movlw	-11
 22019  016A90  006F FF8C  F00C    	movff	plusw1,btemp+11
 22020                           
 22021                           ;stkvar	_u @ sp[(-10)+0]
 22022  016A96  0EF6               	movlw	-10
 22023  016A98  0060  F027  FFE3   	movff	btemp+8,plusw1
 22024  016A9E  0EF7               	movlw	-9
 22025  016AA0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22026  016AA6  0EF8               	movlw	-8
 22027  016AA8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22028  016AAE  0EF9               	movlw	-7
 22029  016AB0  0060  F033  FFE3   	movff	btemp+11,plusw1
 22030  016AB6  0E81               	movlw	129
 22031  016AB8  6E0B               	movwf	(btemp+10)^0,c
 22032  016ABA  0EFF               	movlw	255
 22033  016ABC  6E0C               	movwf	(btemp+11)^0,c
 22034                           
 22035                           ;stkvar	_u @ sp[(-10)+0]
 22036  016ABE  0EF6               	movlw	-10
 22037  016AC0  006F FF8C  F005    	movff	plusw1,btemp+4
 22038  016AC6  0EF7               	movlw	-9
 22039  016AC8  006F FF8C  F006    	movff	plusw1,btemp+5
 22040  016ACE  0EF8               	movlw	-8
 22041  016AD0  006F FF8C  F007    	movff	plusw1,btemp+6
 22042  016AD6  0EF9               	movlw	-7
 22043  016AD8  006F FF8C  F008    	movff	plusw1,btemp+7
 22044  016ADE  0E18               	movlw	24
 22045  016AE0  D005               	goto	u6590
 22046  016AE2                     u6595:
 22047  016AE2  90D8               	bcf	status,0,c
 22048  016AE4  3208               	rrcf	(btemp+7)^0,f,c
 22049  016AE6  3207               	rrcf	(btemp+6)^0,f,c
 22050  016AE8  3206               	rrcf	(btemp+5)^0,f,c
 22051  016AEA  3205               	rrcf	(btemp+4)^0,f,c
 22052  016AEC                     u6590:
 22053  016AEC  2EE8               	decfsz	wreg,f,c
 22054  016AEE  D7F9               	goto	u6595
 22055  016AF0  0060  F014  F009   	movff	btemp+4,btemp+8
 22056  016AF6  0060  F018  F00A   	movff	btemp+5,btemp+9
 22057  016AFC  0EFF               	movlw	255
 22058  016AFE  1609               	andwf	(btemp+8)^0,f,c
 22059  016B00  0E00               	movlw	0
 22060  016B02  160A               	andwf	(btemp+9)^0,f,c
 22061  016B04  500B               	movf	(btemp+10)^0,w,c
 22062  016B06  2609               	addwf	(btemp+8)^0,f,c
 22063  016B08  500C               	movf	(btemp+11)^0,w,c
 22064  016B0A  220A               	addwfc	(btemp+9)^0,f,c
 22065                           
 22066                           ;stkvar	_e @ sp[(-10)+8]
 22067  016B0C  0EFE               	movlw	-2
 22068  016B0E  0060  F027  FFE3   	movff	btemp+8,plusw1
 22069  016B14  0EFF               	movlw	-1
 22070  016B16  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22071                           
 22072                           ;stkvar	_e @ sp[(-10)+8]
 22073  016B1C  0EFF               	movlw	-1
 22074  016B1E  BEE3               	btfsc	plusw1,7,c
 22075  016B20  D019               	goto	l8781
 22076  016B22  0EFF               	movlw	-1
 22077  016B24  50E3               	movf	plusw1,w,c
 22078  016B26  E108               	bnz	u6600
 22079  016B28  0EFE               	movlw	-2
 22080  016B2A  006F FF8C  F001    	movff	plusw1,btemp
 22081  016B30  0E17               	movlw	23
 22082  016B32  5E01               	subwf	btemp^0,f,c
 22083  016B34  A0D8               	btfss	status,0,c
 22084  016B36  D00E               	goto	l8781
 22085  016B38                     u6600:
 22086                           
 22087                           ;stkvar	_x @ sp[(-10)+-4]
 22088  016B38  0EF2               	movlw	-14
 22089  016B3A  006F FF8C  F001    	movff	plusw1,btemp
 22090  016B40  0EF3               	movlw	-13
 22091  016B42  006F FF8C  F002    	movff	plusw1,btemp+1
 22092  016B48  0EF4               	movlw	-12
 22093  016B4A  006F FF8C  F003    	movff	plusw1,btemp+2
 22094  016B50  0EF5               	movlw	-11
 22095  016B52  D11F               	goto	L25
 22096  016B54                     l8781:
 22097                           
 22098                           ;stkvar	_e @ sp[(-10)+8]
 22099  016B54  0EFF               	movlw	-1
 22100  016B56  BEE3               	btfsc	plusw1,7,c
 22101  016B58  D0B4               	goto	l8797
 22102                           
 22103                           ;stkvar	_e @ sp[(-10)+8]
 22104  016B5A  0EFE               	movlw	-2
 22105  016B5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22106  016B62  0EFF               	movlw	255
 22107  016B64  6E05               	movwf	(btemp+4)^0,c
 22108  016B66  0EFF               	movlw	255
 22109  016B68  6E06               	movwf	(btemp+5)^0,c
 22110  016B6A  0E7F               	movlw	127
 22111  016B6C  6E07               	movwf	(btemp+6)^0,c
 22112  016B6E  0E00               	movlw	0
 22113  016B70  6E08               	movwf	(btemp+7)^0,c
 22114  016B72                     u6625:
 22115  016B72  660C               	tstfsz	(btemp+11)^0,c
 22116  016B74  D001               	goto	u6626
 22117  016B76  D007               	goto	u6627
 22118  016B78                     u6626:
 22119  016B78  3408               	rlcf	(btemp+7)^0,w,c
 22120  016B7A  3208               	rrcf	(btemp+7)^0,f,c
 22121  016B7C  3207               	rrcf	(btemp+6)^0,f,c
 22122  016B7E  3206               	rrcf	(btemp+5)^0,f,c
 22123  016B80  3205               	rrcf	(btemp+4)^0,f,c
 22124  016B82  2E0C               	decfsz	(btemp+11)^0,f,c
 22125  016B84  D7F6               	goto	u6625
 22126  016B86                     u6627:
 22127                           
 22128                           ;stkvar	_m @ sp[(-10)+4]
 22129  016B86  0EFA               	movlw	-6
 22130  016B88  0060  F017  FFE3   	movff	btemp+4,plusw1
 22131  016B8E  0EFB               	movlw	-5
 22132  016B90  0060  F01B  FFE3   	movff	btemp+5,plusw1
 22133  016B96  0EFC               	movlw	-4
 22134  016B98  0060  F01F  FFE3   	movff	btemp+6,plusw1
 22135  016B9E  0EFD               	movlw	-3
 22136  016BA0  0060  F023  FFE3   	movff	btemp+7,plusw1
 22137                           
 22138                           ;stkvar	_m @ sp[(-10)+4]
 22139                           ;stkvar	_u @ sp[(-10)+0]
 22140  016BA6  0EF6               	movlw	-10
 22141  016BA8  006F FF8C  F009    	movff	plusw1,btemp+8
 22142  016BAE  0EF7               	movlw	-9
 22143  016BB0  006F FF8C  F00A    	movff	plusw1,btemp+9
 22144  016BB6  0EF8               	movlw	-8
 22145  016BB8  006F FF8C  F00B    	movff	plusw1,btemp+10
 22146  016BBE  0EF9               	movlw	-7
 22147  016BC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22148  016BC6  0EFA               	movlw	-6
 22149  016BC8  50E3               	movf	plusw1,w,c
 22150  016BCA  1609               	andwf	(btemp+8)^0,f,c
 22151  016BCC  0EFB               	movlw	-5
 22152  016BCE  50E3               	movf	plusw1,w,c
 22153  016BD0  160A               	andwf	(btemp+9)^0,f,c
 22154  016BD2  0EFC               	movlw	-4
 22155  016BD4  50E3               	movf	plusw1,w,c
 22156  016BD6  160B               	andwf	(btemp+10)^0,f,c
 22157  016BD8  0EFD               	movlw	-3
 22158  016BDA  50E3               	movf	plusw1,w,c
 22159  016BDC  160C               	andwf	(btemp+11)^0,f,c
 22160  016BDE  5009               	movf	(btemp+8)^0,w,c
 22161  016BE0  100A               	iorwf	(btemp+9)^0,w,c
 22162  016BE2  100B               	iorwf	(btemp+10)^0,w,c
 22163  016BE4  100C               	iorwf	(btemp+11)^0,w,c
 22164  016BE6  B4D8               	btfsc	status,2,c
 22165  016BE8  D7A7               	goto	u6600
 22166                           
 22167                           ;stkvar	_u @ sp[(-10)+0]
 22168  016BEA  0EF6               	movlw	-10
 22169  016BEC  006F FF8C  F009    	movff	plusw1,btemp+8
 22170  016BF2  0EF7               	movlw	-9
 22171  016BF4  006F FF8C  F00A    	movff	plusw1,btemp+9
 22172  016BFA  0EF8               	movlw	-8
 22173  016BFC  006F FF8C  F00B    	movff	plusw1,btemp+10
 22174  016C02  0EF9               	movlw	-7
 22175  016C04  006F FF8C  F00C    	movff	plusw1,btemp+11
 22176  016C0A  0E20               	movlw	32
 22177  016C0C  D005               	goto	u6640
 22178  016C0E                     u6645:
 22179  016C0E  90D8               	bcf	status,0,c
 22180  016C10  320C               	rrcf	(btemp+11)^0,f,c
 22181  016C12  320B               	rrcf	(btemp+10)^0,f,c
 22182  016C14  320A               	rrcf	(btemp+9)^0,f,c
 22183  016C16  3209               	rrcf	(btemp+8)^0,f,c
 22184  016C18                     u6640:
 22185  016C18  2EE8               	decfsz	wreg,f,c
 22186  016C1A  D7F9               	goto	u6645
 22187  016C1C  5009               	movf	(btemp+8)^0,w,c
 22188  016C1E  B4D8               	btfsc	status,2,c
 22189  016C20  D028               	goto	l8795
 22190                           
 22191                           ;stkvar	_m @ sp[(-10)+4]
 22192                           ;stkvar	_u @ sp[(-10)+0]
 22193  016C22  0EF6               	movlw	-10
 22194  016C24  50E3               	movf	plusw1,w,c
 22195  016C26  6E01               	movwf	btemp^0,c
 22196  016C28  0EFA               	movlw	-6
 22197  016C2A  50E3               	movf	plusw1,w,c
 22198  016C2C  2601               	addwf	btemp^0,f,c
 22199  016C2E  0EF6               	movlw	-10
 22200  016C30  0060  F007  FFE3   	movff	btemp,plusw1
 22201  016C36  0EF7               	movlw	-9
 22202  016C38  50E3               	movf	plusw1,w,c
 22203  016C3A  6E01               	movwf	btemp^0,c
 22204  016C3C  0EFB               	movlw	-5
 22205  016C3E  50E3               	movf	plusw1,w,c
 22206  016C40  2201               	addwfc	btemp^0,f,c
 22207  016C42  0EF7               	movlw	-9
 22208  016C44  0060  F007  FFE3   	movff	btemp,plusw1
 22209  016C4A  0EF8               	movlw	-8
 22210  016C4C  50E3               	movf	plusw1,w,c
 22211  016C4E  6E01               	movwf	btemp^0,c
 22212  016C50  0EFC               	movlw	-4
 22213  016C52  50E3               	movf	plusw1,w,c
 22214  016C54  2201               	addwfc	btemp^0,f,c
 22215  016C56  0EF8               	movlw	-8
 22216  016C58  0060  F007  FFE3   	movff	btemp,plusw1
 22217  016C5E  0EF9               	movlw	-7
 22218  016C60  50E3               	movf	plusw1,w,c
 22219  016C62  6E01               	movwf	btemp^0,c
 22220  016C64  0EFD               	movlw	-3
 22221  016C66  50E3               	movf	plusw1,w,c
 22222  016C68  2201               	addwfc	btemp^0,f,c
 22223  016C6A  0EF9               	movlw	-7
 22224  016C6C  0060  F007  FFE3   	movff	btemp,plusw1
 22225  016C72                     l8795:
 22226                           
 22227                           ;stkvar	_m @ sp[(-10)+4]
 22228  016C72  0EFA               	movlw	-6
 22229  016C74  006F FF8C  F009    	movff	plusw1,btemp+8
 22230  016C7A  0EFB               	movlw	-5
 22231  016C7C  006F FF8C  F00A    	movff	plusw1,btemp+9
 22232  016C82  0EFC               	movlw	-4
 22233  016C84  006F FF8C  F00B    	movff	plusw1,btemp+10
 22234  016C8A  0EFD               	movlw	-3
 22235  016C8C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22236  016C92  1C09               	comf	(btemp+8)^0,w,c
 22237  016C94  6E05               	movwf	(btemp+4)^0,c
 22238  016C96  1C0A               	comf	(btemp+9)^0,w,c
 22239  016C98  6E06               	movwf	(btemp+5)^0,c
 22240  016C9A  1C0B               	comf	(btemp+10)^0,w,c
 22241  016C9C  6E07               	movwf	(btemp+6)^0,c
 22242  016C9E  1C0C               	comf	(btemp+11)^0,w,c
 22243  016CA0  6E08               	movwf	(btemp+7)^0,c
 22244                           
 22245                           ;stkvar	_u @ sp[(-10)+0]
 22246  016CA2  50E1               	movf	fsr1l,w,c
 22247  016CA4  0FF6               	addlw	-10
 22248  016CA6  6ED9               	movwf	fsr2l,c
 22249  016CA8  50E2               	movf	fsr1h,w,c
 22250  016CAA  6EDA               	movwf	fsr2h,c
 22251  016CAC  0EFF               	movlw	255
 22252  016CAE  22DA               	addwfc	fsr2h,f,c
 22253  016CB0  5005               	movf	(btemp+4)^0,w,c
 22254  016CB2  16DE               	andwf	postinc2,f,c
 22255  016CB4  5006               	movf	(btemp+5)^0,w,c
 22256  016CB6  16DE               	andwf	postinc2,f,c
 22257  016CB8  5007               	movf	(btemp+6)^0,w,c
 22258  016CBA  16DE               	andwf	postinc2,f,c
 22259  016CBC  5008               	movf	(btemp+7)^0,w,c
 22260  016CBE  16DE               	andwf	postinc2,f,c
 22261  016CC0  D05B               	goto	l8805
 22262  016CC2                     l8797:
 22263                           
 22264                           ;stkvar	_u @ sp[(-10)+0]
 22265  016CC2  0EF6               	movlw	-10
 22266  016CC4  006F FF8C  F009    	movff	plusw1,btemp+8
 22267  016CCA  0EF7               	movlw	-9
 22268  016CCC  006F FF8C  F00A    	movff	plusw1,btemp+9
 22269  016CD2  0EF8               	movlw	-8
 22270  016CD4  006F FF8C  F00B    	movff	plusw1,btemp+10
 22271  016CDA  0EF9               	movlw	-7
 22272  016CDC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22273  016CE2  0E20               	movlw	32
 22274  016CE4  D005               	goto	u6660
 22275  016CE6                     u6665:
 22276  016CE6  90D8               	bcf	status,0,c
 22277  016CE8  320C               	rrcf	(btemp+11)^0,f,c
 22278  016CEA  320B               	rrcf	(btemp+10)^0,f,c
 22279  016CEC  320A               	rrcf	(btemp+9)^0,f,c
 22280  016CEE  3209               	rrcf	(btemp+8)^0,f,c
 22281  016CF0                     u6660:
 22282  016CF0  2EE8               	decfsz	wreg,f,c
 22283  016CF2  D7F9               	goto	u6665
 22284  016CF4  6609               	tstfsz	(btemp+8)^0,c
 22285  016CF6  D009               	goto	l8801
 22286                           
 22287                           ;stkvar	_u @ sp[(-10)+0]
 22288  016CF8  0EF6               	movlw	-10
 22289  016CFA  6AE3               	clrf	plusw1,c
 22290  016CFC  0EF7               	movlw	-9
 22291  016CFE  6AE3               	clrf	plusw1,c
 22292  016D00  0EF8               	movlw	-8
 22293  016D02  6AE3               	clrf	plusw1,c
 22294  016D04  0EF9               	movlw	-7
 22295  016D06  6AE3               	clrf	plusw1,c
 22296  016D08  D037               	goto	l8805
 22297  016D0A                     l8801:
 22298                           
 22299                           ;stkvar	_u @ sp[(-10)+0]
 22300  016D0A  0EF6               	movlw	-10
 22301  016D0C  006F FF8C  F009    	movff	plusw1,btemp+8
 22302  016D12  0EF7               	movlw	-9
 22303  016D14  006F FF8C  F00A    	movff	plusw1,btemp+9
 22304  016D1A  0EF8               	movlw	-8
 22305  016D1C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22306  016D22  0EF9               	movlw	-7
 22307  016D24  006F FF8C  F00C    	movff	plusw1,btemp+11
 22308  016D2A  90D8               	bcf	status,0,c
 22309  016D2C  3409               	rlcf	(btemp+8)^0,w,c
 22310  016D2E  6E05               	movwf	(btemp+4)^0,c
 22311  016D30  340A               	rlcf	(btemp+9)^0,w,c
 22312  016D32  6E06               	movwf	(btemp+5)^0,c
 22313  016D34  340B               	rlcf	(btemp+10)^0,w,c
 22314  016D36  6E07               	movwf	(btemp+6)^0,c
 22315  016D38  340C               	rlcf	(btemp+11)^0,w,c
 22316  016D3A  6E08               	movwf	(btemp+7)^0,c
 22317  016D3C  5005               	movf	(btemp+4)^0,w,c
 22318  016D3E  1006               	iorwf	(btemp+5)^0,w,c
 22319  016D40  1007               	iorwf	(btemp+6)^0,w,c
 22320  016D42  1008               	iorwf	(btemp+7)^0,w,c
 22321  016D44  B4D8               	btfsc	status,2,c
 22322  016D46  D018               	goto	l8805
 22323  016D48  0E00               	movlw	0
 22324  016D4A  6E09               	movwf	(btemp+8)^0,c
 22325  016D4C  0E00               	movlw	0
 22326  016D4E  6E0A               	movwf	(btemp+9)^0,c
 22327  016D50  0E80               	movlw	128
 22328  016D52  6E0B               	movwf	(btemp+10)^0,c
 22329  016D54  0EBF               	movlw	191
 22330  016D56  6E0C               	movwf	(btemp+11)^0,c
 22331                           
 22332                           ;stkvar	_u @ sp[(-10)+0]
 22333  016D58  0EF6               	movlw	-10
 22334  016D5A  0060  F027  FFE3   	movff	btemp+8,plusw1
 22335  016D60  0EF7               	movlw	-9
 22336  016D62  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22337  016D68  0EF8               	movlw	-8
 22338  016D6A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22339  016D70  0EF9               	movlw	-7
 22340  016D72  0060  F033  FFE3   	movff	btemp+11,plusw1
 22341  016D78                     l8805:
 22342                           
 22343                           ;stkvar	_u @ sp[(-10)+0]
 22344  016D78  0EF6               	movlw	-10
 22345  016D7A  006F FF8C  F001    	movff	plusw1,btemp
 22346  016D80  0EF7               	movlw	-9
 22347  016D82  006F FF8C  F002    	movff	plusw1,btemp+1
 22348  016D88  0EF8               	movlw	-8
 22349  016D8A  006F FF8C  F003    	movff	plusw1,btemp+2
 22350  016D90  0EF9               	movlw	-7
 22351  016D92                     L25:
 22352  016D92  006F FF8C  F004    	movff	plusw1,btemp+3
 22353                           
 22354                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22355  016D98  0EF2               	movlw	242
 22356  016D9A  26E1               	addwf	fsr1l,f,c
 22357  016D9C  0EFF               	movlw	255
 22358  016D9E  22E2               	addwfc	fsr1h,f,c
 22359  016DA0  0012               	return		;funcret
 22360  016DA2                     __end_of_floorf:
 22361                           	opt callstack 0
 22362                           
 22363 ;; *************** function ___fpclassifyf *****************
 22364 ;; Defined at:
 22365 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 22366 ;; Parameters:    Size  Location     Type
 22367 ;;  x               4  [STACK] float 
 22368 ;; Auto vars:     Size  Location     Type
 22369 ;;  u               4  [STACK] struct .
 22370 ;;  e               2  [STACK] int 
 22371 ;; Return value:  Size  Location     Type
 22372 ;;                  2  [STACK] int 
 22373 ;; Registers used:
 22374 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 22375 ;; Tracked objects:
 22376 ;;		On entry : 0/0
 22377 ;;		On exit  : 0/0
 22378 ;;		Unchanged: 0/0
 22379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22384 ;;Total ram usage:        0 bytes
 22385 ;; Hardware stack levels used:    1
 22386 ;; Hardware stack levels required when called:   15
 22387 ;; This function calls:
 22388 ;;		Nothing
 22389 ;; This function is called by:
 22390 ;;		_efgtoa
 22391 ;; This function uses a reentrant model
 22392 ;;
 22393                           
 22394                           	psect	text80
 22395  019366                     __ptext80:
 22396                           	opt callstack 0
 22397  019366                     ___fpclassifyf:
 22398                           	opt callstack 0
 22399                           
 22400                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22401  019366  0E06               	movlw	6
 22402  019368  26E1               	addwf	fsr1l,f,c
 22403  01936A  0E00               	movlw	0
 22404  01936C  22E2               	addwfc	fsr1h,f,c
 22405                           
 22406                           ;incstack = 0
 22407 ;; hardware stack exceeded
 22408  01936E  0060  F180  F009   	movff	___fpclassifyf@F463,btemp+8
 22409  019374  0060  F184  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 22410  01937A  0060  F188  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 22411  019380  0060  F18C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 22412                           
 22413                           ;stkvar	_u @ sp[(-6)+0]
 22414  019386  0EFA               	movlw	-6
 22415  019388  0060  F027  FFE3   	movff	btemp+8,plusw1
 22416  01938E  0EFB               	movlw	-5
 22417  019390  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22418  019396  0EFC               	movlw	-4
 22419  019398  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22420  01939E  0EFD               	movlw	-3
 22421  0193A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 22422                           
 22423                           ;stkvar	_x @ sp[(-6)+-4]
 22424  0193A6  0EF6               	movlw	-10
 22425  0193A8  006F FF8C  F009    	movff	plusw1,btemp+8
 22426  0193AE  0EF7               	movlw	-9
 22427  0193B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 22428  0193B6  0EF8               	movlw	-8
 22429  0193B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 22430  0193BE  0EF9               	movlw	-7
 22431  0193C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22432                           
 22433                           ;stkvar	_u @ sp[(-6)+0]
 22434  0193C6  0EFA               	movlw	-6
 22435  0193C8  0060  F027  FFE3   	movff	btemp+8,plusw1
 22436  0193CE  0EFB               	movlw	-5
 22437  0193D0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22438  0193D6  0EFC               	movlw	-4
 22439  0193D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22440  0193DE  0EFD               	movlw	-3
 22441  0193E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 22442                           
 22443                           ;stkvar	_u @ sp[(-6)+0]
 22444  0193E6  0EFA               	movlw	-6
 22445  0193E8  006F FF8C  F009    	movff	plusw1,btemp+8
 22446  0193EE  0EFB               	movlw	-5
 22447  0193F0  006F FF8C  F00A    	movff	plusw1,btemp+9
 22448  0193F6  0EFC               	movlw	-4
 22449  0193F8  006F FF8C  F00B    	movff	plusw1,btemp+10
 22450  0193FE  0EFD               	movlw	-3
 22451  019400  006F FF8C  F00C    	movff	plusw1,btemp+11
 22452  019406  0E18               	movlw	24
 22453  019408  D005               	goto	u6470
 22454  01940A                     u6475:
 22455  01940A  90D8               	bcf	status,0,c
 22456  01940C  320C               	rrcf	(btemp+11)^0,f,c
 22457  01940E  320B               	rrcf	(btemp+10)^0,f,c
 22458  019410  320A               	rrcf	(btemp+9)^0,f,c
 22459  019412  3209               	rrcf	(btemp+8)^0,f,c
 22460  019414                     u6470:
 22461  019414  2EE8               	decfsz	wreg,f,c
 22462  019416  D7F9               	goto	u6475
 22463  019418  0060  F024  F007   	movff	btemp+8,btemp+6
 22464  01941E  0060  F028  F008   	movff	btemp+9,btemp+7
 22465  019424  0EFF               	movlw	255
 22466  019426  1607               	andwf	(btemp+6)^0,f,c
 22467  019428  0E00               	movlw	0
 22468  01942A  1608               	andwf	(btemp+7)^0,f,c
 22469                           
 22470                           ;stkvar	_e @ sp[(-6)+4]
 22471  01942C  0EFE               	movlw	-2
 22472  01942E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 22473  019434  0EFF               	movlw	-1
 22474  019436  0060  F023  FFE3   	movff	btemp+7,plusw1
 22475                           
 22476                           ;stkvar	_e @ sp[(-6)+4]
 22477  01943C  0EFE               	movlw	-2
 22478  01943E  006F FF8C  F001    	movff	plusw1,btemp
 22479  019444  0EFF               	movlw	-1
 22480  019446  50E3               	movf	plusw1,w,c
 22481  019448  1001               	iorwf	btemp^0,w,c
 22482  01944A  A4D8               	btfss	status,2,c
 22483  01944C  D023               	goto	l8743
 22484                           
 22485                           ;stkvar	_u @ sp[(-6)+0]
 22486  01944E  0EFA               	movlw	-6
 22487  019450  006F FF8C  F009    	movff	plusw1,btemp+8
 22488  019456  0EFB               	movlw	-5
 22489  019458  006F FF8C  F00A    	movff	plusw1,btemp+9
 22490  01945E  0EFC               	movlw	-4
 22491  019460  006F FF8C  F00B    	movff	plusw1,btemp+10
 22492  019466  0EFD               	movlw	-3
 22493  019468  006F FF8C  F00C    	movff	plusw1,btemp+11
 22494  01946E  90D8               	bcf	status,0,c
 22495  019470  3409               	rlcf	(btemp+8)^0,w,c
 22496  019472  6E05               	movwf	(btemp+4)^0,c
 22497  019474  340A               	rlcf	(btemp+9)^0,w,c
 22498  019476  6E06               	movwf	(btemp+5)^0,c
 22499  019478  340B               	rlcf	(btemp+10)^0,w,c
 22500  01947A  6E07               	movwf	(btemp+6)^0,c
 22501  01947C  340C               	rlcf	(btemp+11)^0,w,c
 22502  01947E  6E08               	movwf	(btemp+7)^0,c
 22503  019480  5005               	movf	(btemp+4)^0,w,c
 22504  019482  1006               	iorwf	(btemp+5)^0,w,c
 22505  019484  1007               	iorwf	(btemp+6)^0,w,c
 22506  019486  1008               	iorwf	(btemp+7)^0,w,c
 22507  019488  A4D8               	btfss	status,2,c
 22508  01948A  D002               	goto	l8739
 22509  01948C  0E02               	movlw	2
 22510  01948E  D02E               	goto	L26
 22511  019490                     l8739:
 22512  019490  0E03               	movlw	3
 22513  019492  D02C               	goto	L26
 22514  019494                     l8743:
 22515                           
 22516                           ;stkvar	_e @ sp[(-6)+4]
 22517  019494  0EFE               	movlw	-2
 22518  019496  28E3               	incf	plusw1,w,c
 22519  019498  E128               	bnz	l8749
 22520  01949A  0EFF               	movlw	-1
 22521  01949C  50E3               	movf	plusw1,w,c
 22522  01949E  A4D8               	btfss	status,2,c
 22523  0194A0  D024               	goto	l8749
 22524                           
 22525                           ;stkvar	_u @ sp[(-6)+0]
 22526  0194A2  0EFA               	movlw	-6
 22527  0194A4  006F FF8C  F009    	movff	plusw1,btemp+8
 22528  0194AA  0EFB               	movlw	-5
 22529  0194AC  006F FF8C  F00A    	movff	plusw1,btemp+9
 22530  0194B2  0EFC               	movlw	-4
 22531  0194B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 22532  0194BA  0EFD               	movlw	-3
 22533  0194BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22534  0194C2  0E09               	movlw	9
 22535  0194C4                     u6515:
 22536  0194C4  90D8               	bcf	status,0,c
 22537  0194C6  3609               	rlcf	(btemp+8)^0,f,c
 22538  0194C8  360A               	rlcf	(btemp+9)^0,f,c
 22539  0194CA  360B               	rlcf	(btemp+10)^0,f,c
 22540  0194CC  360C               	rlcf	(btemp+11)^0,f,c
 22541  0194CE  2EE8               	decfsz	wreg,f,c
 22542  0194D0  D7F9               	goto	u6515
 22543  0194D2  5009               	movf	(btemp+8)^0,w,c
 22544  0194D4  100A               	iorwf	(btemp+9)^0,w,c
 22545  0194D6  100B               	iorwf	(btemp+10)^0,w,c
 22546  0194D8  100C               	iorwf	(btemp+11)^0,w,c
 22547  0194DA  A4D8               	btfss	status,2,c
 22548  0194DC  D002               	goto	u6520
 22549  0194DE  0E01               	movlw	1
 22550  0194E0  D001               	goto	u6530
 22551  0194E2                     u6520:
 22552  0194E2  0E00               	movlw	0
 22553  0194E4                     u6530:
 22554  0194E4  6E01               	movwf	btemp^0,c
 22555  0194E6  6A02               	clrf	(btemp+1)^0,c
 22556  0194E8  D004               	goto	l3337
 22557  0194EA                     l8749:
 22558  0194EA  0E04               	movlw	4
 22559  0194EC                     L26:
 22560  0194EC  6E01               	movwf	btemp^0,c
 22561  0194EE  0E00               	movlw	0
 22562  0194F0  6E02               	movwf	(btemp+1)^0,c
 22563  0194F2                     l3337:
 22564                           
 22565                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 22566  0194F2  0EF6               	movlw	246
 22567  0194F4  26E1               	addwf	fsr1l,f,c
 22568  0194F6  0EFF               	movlw	255
 22569  0194F8  22E2               	addwfc	fsr1h,f,c
 22570  0194FA  0012               	return		;funcret
 22571  0194FC                     __end_of___fpclassifyf:
 22572                           	opt callstack 0
 22573                           
 22574 ;; *************** function ___fltol *****************
 22575 ;; Defined at:
 22576 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 22577 ;; Parameters:    Size  Location     Type
 22578 ;;  f1              4  [STACK] int 
 22579 ;; Auto vars:     Size  Location     Type
 22580 ;;  exp1            1  [STACK] unsigned char 
 22581 ;;  sign1           1  [STACK] unsigned char 
 22582 ;; Return value:  Size  Location     Type
 22583 ;;                  4  [STACK] long 
 22584 ;; Registers used:
 22585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 22586 ;; Tracked objects:
 22587 ;;		On entry : 0/0
 22588 ;;		On exit  : 0/0
 22589 ;;		Unchanged: 0/0
 22590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22595 ;;Total ram usage:        0 bytes
 22596 ;; Hardware stack levels used:    1
 22597 ;; Hardware stack levels required when called:   15
 22598 ;; This function calls:
 22599 ;;		Nothing
 22600 ;; This function is called by:
 22601 ;;		_main
 22602 ;;		_convert_dac_raw
 22603 ;;		_calc_bsoc
 22604 ;;		_init_bsoc
 22605 ;;		_efgtoa
 22606 ;; This function uses a reentrant model
 22607 ;;
 22608                           
 22609                           	psect	text81
 22610  019974                     __ptext81:
 22611                           	opt callstack 0
 22612  019974                     ___fltol:
 22613                           	opt callstack 0
 22614                           
 22615                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22616  019974  52E6               	movf	postinc1,f,c
 22617  019976  52E6               	movf	postinc1,f,c
 22618                           
 22619                           ;stkvar	_f1 @ sp[(-2)+-4]
 22620                           
 22621                           ;incstack = 0
 22622 ;; hardware stack exceeded
 22623  019978  0EFA               	movlw	-6
 22624  01997A  006F FF8C  F009    	movff	plusw1,btemp+8
 22625  019980  0EFB               	movlw	-5
 22626  019982  006F FF8C  F00A    	movff	plusw1,btemp+9
 22627  019988  0EFC               	movlw	-4
 22628  01998A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22629  019990  0EFD               	movlw	-3
 22630  019992  006F FF8C  F00C    	movff	plusw1,btemp+11
 22631  019998  0E18               	movlw	24
 22632  01999A  D005               	goto	u7680
 22633  01999C                     u7685:
 22634  01999C  90D8               	bcf	status,0,c
 22635  01999E  320C               	rrcf	(btemp+11)^0,f,c
 22636  0199A0  320B               	rrcf	(btemp+10)^0,f,c
 22637  0199A2  320A               	rrcf	(btemp+9)^0,f,c
 22638  0199A4  3209               	rrcf	(btemp+8)^0,f,c
 22639  0199A6                     u7680:
 22640  0199A6  2EE8               	decfsz	wreg,f,c
 22641  0199A8  D7F9               	goto	u7685
 22642                           
 22643                           ;stkvar	_exp1 @ sp[(-2)+0]
 22644  0199AA  0EFE               	movlw	-2
 22645  0199AC  0060  F027  FFE3   	movff	btemp+8,plusw1
 22646  0199B2  0EFE               	movlw	-2
 22647  0199B4  50E3               	movf	plusw1,w,c
 22648  0199B6  A4D8               	btfss	status,2,c
 22649  0199B8  D006               	goto	l9369
 22650  0199BA                     u7690:
 22651  0199BA  0E00               	movlw	0
 22652  0199BC  6E01               	movwf	btemp^0,c
 22653  0199BE  6A02               	clrf	(btemp+1)^0,c
 22654  0199C0  6A03               	clrf	(btemp+2)^0,c
 22655  0199C2  6A04               	clrf	(btemp+3)^0,c
 22656  0199C4  D08B               	goto	l2953
 22657  0199C6                     l9369:
 22658                           
 22659                           ;stkvar	_f1 @ sp[(-2)+-4]
 22660  0199C6  0EFA               	movlw	-6
 22661  0199C8  006F FF8C  F009    	movff	plusw1,btemp+8
 22662  0199CE  0EFB               	movlw	-5
 22663  0199D0  006F FF8C  F00A    	movff	plusw1,btemp+9
 22664  0199D6  0EFC               	movlw	-4
 22665  0199D8  006F FF8C  F00B    	movff	plusw1,btemp+10
 22666  0199DE  0EFD               	movlw	-3
 22667  0199E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22668  0199E6  0E20               	movlw	32
 22669  0199E8  D005               	goto	u7700
 22670  0199EA                     u7705:
 22671  0199EA  90D8               	bcf	status,0,c
 22672  0199EC  320C               	rrcf	(btemp+11)^0,f,c
 22673  0199EE  320B               	rrcf	(btemp+10)^0,f,c
 22674  0199F0  320A               	rrcf	(btemp+9)^0,f,c
 22675  0199F2  3209               	rrcf	(btemp+8)^0,f,c
 22676  0199F4                     u7700:
 22677  0199F4  2EE8               	decfsz	wreg,f,c
 22678  0199F6  D7F9               	goto	u7705
 22679                           
 22680                           ;stkvar	_sign1 @ sp[(-2)+1]
 22681  0199F8  0EFF               	movlw	-1
 22682  0199FA  0060  F027  FFE3   	movff	btemp+8,plusw1
 22683                           
 22684                           ;stkvar	_f1 @ sp[(-2)+-4]
 22685  019A00  0EFC               	movlw	-4
 22686  019A02  8EE3               	bsf	plusw1,7,c
 22687                           
 22688                           ;stkvar	_f1 @ sp[(-2)+-4]
 22689  019A04  50E1               	movf	fsr1l,w,c
 22690  019A06  0FFA               	addlw	-6
 22691  019A08  6ED9               	movwf	fsr2l,c
 22692  019A0A  50E2               	movf	fsr1h,w,c
 22693  019A0C  6EDA               	movwf	fsr2h,c
 22694  019A0E  0EFF               	movlw	255
 22695  019A10  22DA               	addwfc	fsr2h,f,c
 22696  019A12  0EFF               	movlw	255
 22697  019A14  16DE               	andwf	postinc2,f,c
 22698  019A16  0EFF               	movlw	255
 22699  019A18  16DE               	andwf	postinc2,f,c
 22700  019A1A  0EFF               	movlw	255
 22701  019A1C  16DE               	andwf	postinc2,f,c
 22702  019A1E  0E00               	movlw	0
 22703  019A20  16DE               	andwf	postinc2,f,c
 22704                           
 22705                           ;stkvar	_exp1 @ sp[(-2)+0]
 22706  019A22  0EFE               	movlw	-2
 22707  019A24  006F FF8C  F001    	movff	plusw1,btemp
 22708  019A2A  0E96               	movlw	150
 22709  019A2C  5E01               	subwf	btemp^0,f,c
 22710  019A2E  0EFE               	movlw	-2
 22711  019A30  0060  F007  FFE3   	movff	btemp,plusw1
 22712                           
 22713                           ;stkvar	_exp1 @ sp[(-2)+0]
 22714  019A36  0EFE               	movlw	-2
 22715  019A38  AEE3               	btfss	plusw1,7,c
 22716  019A3A  D014               	goto	l9387
 22717                           
 22718                           ;stkvar	_exp1 @ sp[(-2)+0]
 22719  019A3C  0EFE               	movlw	-2
 22720  019A3E  50E3               	movf	plusw1,w,c
 22721  019A40  0A80               	xorlw	128
 22722  019A42  0F97               	addlw	151
 22723  019A44  A0D8               	btfss	status,0,c
 22724  019A46  D7B9               	goto	u7690
 22725  019A48                     l9385:
 22726                           
 22727                           ;stkvar	_f1 @ sp[(-2)+-4]
 22728  019A48  90D8               	bcf	status,0,c
 22729  019A4A  0EFD               	movlw	-3
 22730  019A4C  32E3               	rrcf	plusw1,f,c
 22731  019A4E  0EFC               	movlw	-4
 22732  019A50  32E3               	rrcf	plusw1,f,c
 22733  019A52  0EFB               	movlw	-5
 22734  019A54  32E3               	rrcf	plusw1,f,c
 22735  019A56  0EFA               	movlw	-6
 22736  019A58  32E3               	rrcf	plusw1,f,c
 22737                           
 22738                           ;stkvar	_exp1 @ sp[(-2)+0]
 22739  019A5A  0EFE               	movlw	-2
 22740  019A5C  2AE3               	incf	plusw1,f,c
 22741  019A5E  B4D8               	btfsc	status,2,c
 22742  019A60  D018               	goto	u7750
 22743  019A62  D7F2               	goto	l9385
 22744  019A64                     l9387:
 22745                           
 22746                           ;stkvar	_exp1 @ sp[(-2)+0]
 22747  019A64  0EFE               	movlw	-2
 22748  019A66  006F FF8C  F001    	movff	plusw1,btemp
 22749  019A6C  0E1F               	movlw	31
 22750  019A6E  6401               	cpfsgt	btemp^0,c
 22751  019A70  D00C               	goto	l9395
 22752  019A72  D7A3               	goto	u7690
 22753  019A74                     l9393:
 22754                           
 22755                           ;stkvar	_f1 @ sp[(-2)+-4]
 22756  019A74  90D8               	bcf	status,0,c
 22757  019A76  0EFA               	movlw	-6
 22758  019A78  36E3               	rlcf	plusw1,f,c
 22759  019A7A  0EFB               	movlw	-5
 22760  019A7C  36E3               	rlcf	plusw1,f,c
 22761  019A7E  0EFC               	movlw	-4
 22762  019A80  36E3               	rlcf	plusw1,f,c
 22763  019A82  0EFD               	movlw	-3
 22764  019A84  36E3               	rlcf	plusw1,f,c
 22765                           
 22766                           ;stkvar	_exp1 @ sp[(-2)+0]
 22767  019A86  0EFE               	movlw	-2
 22768  019A88  06E3               	decf	plusw1,f,c
 22769  019A8A                     l9395:
 22770                           
 22771                           ;stkvar	_exp1 @ sp[(-2)+0]
 22772  019A8A  0EFE               	movlw	-2
 22773  019A8C  50E3               	movf	plusw1,w,c
 22774  019A8E  A4D8               	btfss	status,2,c
 22775  019A90  D7F1               	goto	l9393
 22776  019A92                     u7750:
 22777                           
 22778                           ;stkvar	_sign1 @ sp[(-2)+1]
 22779  019A92  0EFF               	movlw	-1
 22780  019A94  50E3               	movf	plusw1,w,c
 22781  019A96  B4D8               	btfsc	status,2,c
 22782  019A98  D011               	goto	u7770
 22783                           
 22784                           ;stkvar	_f1 @ sp[(-2)+-4]
 22785                           ;stkvar	_f1 @ sp[(-2)+-4]
 22786  019A9A  0EFA               	movlw	-6
 22787  019A9C  6CE3               	negf	plusw1,c
 22788  019A9E  0EFB               	movlw	-5
 22789  019AA0  1EE3               	comf	plusw1,f,c
 22790  019AA2  0EFC               	movlw	-4
 22791  019AA4  1EE3               	comf	plusw1,f,c
 22792  019AA6  0EFD               	movlw	-3
 22793  019AA8  1EE3               	comf	plusw1,f,c
 22794  019AAA  E308               	bnc	u7770
 22795  019AAC  0EFB               	movlw	-5
 22796  019AAE  2AE3               	incf	plusw1,f,c
 22797  019AB0  E305               	bnc	u7770
 22798  019AB2  0EFC               	movlw	-4
 22799  019AB4  2AE3               	incf	plusw1,f,c
 22800  019AB6  E302               	bnc	u7770
 22801  019AB8  0EFD               	movlw	-3
 22802  019ABA  2AE3               	incf	plusw1,f,c
 22803  019ABC                     u7770:
 22804                           
 22805                           ;stkvar	_f1 @ sp[(-2)+-4]
 22806  019ABC  0EFA               	movlw	-6
 22807  019ABE  006F FF8C  F001    	movff	plusw1,btemp
 22808  019AC4  0EFB               	movlw	-5
 22809  019AC6  006F FF8C  F002    	movff	plusw1,btemp+1
 22810  019ACC  0EFC               	movlw	-4
 22811  019ACE  006F FF8C  F003    	movff	plusw1,btemp+2
 22812  019AD4  0EFD               	movlw	-3
 22813  019AD6  006F FF8C  F004    	movff	plusw1,btemp+3
 22814  019ADC                     l2953:
 22815                           
 22816                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22817  019ADC  0EFA               	movlw	250
 22818  019ADE  26E1               	addwf	fsr1l,f,c
 22819  019AE0  0EFF               	movlw	255
 22820  019AE2  22E2               	addwfc	fsr1h,f,c
 22821  019AE4  0012               	return		;funcret
 22822  019AE6                     __end_of___fltol:
 22823                           	opt callstack 0
 22824                           
 22825 ;; *************** function ___flneg *****************
 22826 ;; Defined at:
 22827 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 22828 ;; Parameters:    Size  Location     Type
 22829 ;;  f1              4  [STACK] long 
 22830 ;; Auto vars:     Size  Location     Type
 22831 ;;		None
 22832 ;; Return value:  Size  Location     Type
 22833 ;;                  4  [STACK] long 
 22834 ;; Registers used:
 22835 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 22836 ;; Tracked objects:
 22837 ;;		On entry : 0/0
 22838 ;;		On exit  : 0/0
 22839 ;;		Unchanged: 0/0
 22840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22845 ;;Total ram usage:        0 bytes
 22846 ;; Hardware stack levels used:    1
 22847 ;; Hardware stack levels required when called:   15
 22848 ;; This function calls:
 22849 ;;		Nothing
 22850 ;; This function is called by:
 22851 ;;		_calc_bsoc
 22852 ;;		_efgtoa
 22853 ;; This function uses a reentrant model
 22854 ;;
 22855                           
 22856                           	psect	text82
 22857  01C5C2                     __ptext82:
 22858                           	opt callstack 0
 22859  01C5C2                     ___flneg:
 22860                           	opt callstack 0
 22861                           
 22862                           ;stkvar	_f1 @ sp[(0)+-4]
 22863                           
 22864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22865                           ;incstack = 0
 22866 ;; hardware stack exceeded
 22867  01C5C2  0EFC               	movlw	-4
 22868  01C5C4  50E3               	movf	plusw1,w,c
 22869  01C5C6  E10A               	bnz	u7670
 22870  01C5C8  0EFD               	movlw	-3
 22871  01C5CA  50E3               	movf	plusw1,w,c
 22872  01C5CC  E107               	bnz	u7670
 22873  01C5CE  0EFE               	movlw	-2
 22874  01C5D0  50E3               	movf	plusw1,w,c
 22875  01C5D2  E104               	bnz	u7670
 22876  01C5D4  0EFF               	movlw	-1
 22877  01C5D6  50E3               	movf	plusw1,w,c
 22878  01C5D8  B4D8               	btfsc	status,2,c
 22879  01C5DA  D002               	goto	l9359
 22880  01C5DC                     u7670:
 22881                           
 22882                           ;stkvar	_f1 @ sp[(0)+-4]
 22883  01C5DC  0EFF               	movlw	-1
 22884  01C5DE  7EE3               	btg	plusw1,7,c
 22885  01C5E0                     l9359:
 22886                           
 22887                           ;stkvar	_f1 @ sp[(0)+-4]
 22888  01C5E0  0EFC               	movlw	-4
 22889  01C5E2  006F FF8C  F001    	movff	plusw1,btemp
 22890  01C5E8  0EFD               	movlw	-3
 22891  01C5EA  006F FF8C  F002    	movff	plusw1,btemp+1
 22892  01C5F0  0EFE               	movlw	-2
 22893  01C5F2  006F FF8C  F003    	movff	plusw1,btemp+2
 22894  01C5F8  0EFF               	movlw	-1
 22895  01C5FA  006F FF8C  F004    	movff	plusw1,btemp+3
 22896                           
 22897                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22898  01C600  52E5               	movf	postdec1,f,c
 22899  01C602  52E5               	movf	postdec1,f,c
 22900  01C604  52E5               	movf	postdec1,f,c
 22901  01C606  52E5               	movf	postdec1,f,c
 22902  01C608  0012               	return		;funcret
 22903  01C60A                     __end_of___flneg:
 22904                           	opt callstack 0
 22905                           
 22906 ;; *************** function ___fleq *****************
 22907 ;; Defined at:
 22908 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 22909 ;; Parameters:    Size  Location     Type
 22910 ;;  ff1             4  [STACK] long 
 22911 ;;  ff2             4  [STACK] long 
 22912 ;; Auto vars:     Size  Location     Type
 22913 ;;		None
 22914 ;; Return value:  Size  Location     Type
 22915 ;;		None               void
 22916 ;; Registers used:
 22917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22918 ;; Tracked objects:
 22919 ;;		On entry : 0/0
 22920 ;;		On exit  : 0/0
 22921 ;;		Unchanged: 0/0
 22922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22927 ;;Total ram usage:        0 bytes
 22928 ;; Hardware stack levels used:    1
 22929 ;; Hardware stack levels required when called:   15
 22930 ;; This function calls:
 22931 ;;		Nothing
 22932 ;; This function is called by:
 22933 ;;		_efgtoa
 22934 ;; This function uses a reentrant model
 22935 ;;
 22936                           
 22937                           	psect	text83
 22938  01B180                     __ptext83:
 22939                           	opt callstack 0
 22940  01B180                     ___fleq:
 22941                           	opt callstack 0
 22942                           
 22943                           ;stkvar	_ff1 @ sp[(0)+-4]
 22944                           
 22945                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22946                           ;incstack = 0
 22947 ;; hardware stack exceeded
 22948  01B180  50E1               	movf	fsr1l,w,c
 22949  01B182  0FFC               	addlw	-4
 22950  01B184  6ED9               	movwf	fsr2l,c
 22951  01B186  50E2               	movf	fsr1h,w,c
 22952  01B188  6EDA               	movwf	fsr2h,c
 22953  01B18A  0EFF               	movlw	255
 22954  01B18C  22DA               	addwfc	fsr2h,f,c
 22955  01B18E  0E00               	movlw	0
 22956  01B190  14DE               	andwf	postinc2,w,c
 22957  01B192  6E09               	movwf	(btemp+8)^0,c
 22958  01B194  0E00               	movlw	0
 22959  01B196  14DE               	andwf	postinc2,w,c
 22960  01B198  6E0A               	movwf	(btemp+9)^0,c
 22961  01B19A  0E80               	movlw	128
 22962  01B19C  14DE               	andwf	postinc2,w,c
 22963  01B19E  6E0B               	movwf	(btemp+10)^0,c
 22964  01B1A0  0E7F               	movlw	127
 22965  01B1A2  14DE               	andwf	postinc2,w,c
 22966  01B1A4  6E0C               	movwf	(btemp+11)^0,c
 22967  01B1A6  5009               	movf	(btemp+8)^0,w,c
 22968  01B1A8  100A               	iorwf	(btemp+9)^0,w,c
 22969  01B1AA  100B               	iorwf	(btemp+10)^0,w,c
 22970  01B1AC  100C               	iorwf	(btemp+11)^0,w,c
 22971  01B1AE  A4D8               	btfss	status,2,c
 22972  01B1B0  D008               	goto	l9317
 22973                           
 22974                           ;stkvar	_ff1 @ sp[(0)+-4]
 22975  01B1B2  0EFC               	movlw	-4
 22976  01B1B4  6AE3               	clrf	plusw1,c
 22977  01B1B6  0EFD               	movlw	-3
 22978  01B1B8  6AE3               	clrf	plusw1,c
 22979  01B1BA  0EFE               	movlw	-2
 22980  01B1BC  6AE3               	clrf	plusw1,c
 22981  01B1BE  0EFF               	movlw	-1
 22982  01B1C0  6AE3               	clrf	plusw1,c
 22983  01B1C2                     l9317:
 22984                           
 22985                           ;stkvar	_ff2 @ sp[(0)+-8]
 22986  01B1C2  50E1               	movf	fsr1l,w,c
 22987  01B1C4  0FF8               	addlw	-8
 22988  01B1C6  6ED9               	movwf	fsr2l,c
 22989  01B1C8  50E2               	movf	fsr1h,w,c
 22990  01B1CA  6EDA               	movwf	fsr2h,c
 22991  01B1CC  0EFF               	movlw	255
 22992  01B1CE  22DA               	addwfc	fsr2h,f,c
 22993  01B1D0  0E00               	movlw	0
 22994  01B1D2  14DE               	andwf	postinc2,w,c
 22995  01B1D4  6E09               	movwf	(btemp+8)^0,c
 22996  01B1D6  0E00               	movlw	0
 22997  01B1D8  14DE               	andwf	postinc2,w,c
 22998  01B1DA  6E0A               	movwf	(btemp+9)^0,c
 22999  01B1DC  0E80               	movlw	128
 23000  01B1DE  14DE               	andwf	postinc2,w,c
 23001  01B1E0  6E0B               	movwf	(btemp+10)^0,c
 23002  01B1E2  0E7F               	movlw	127
 23003  01B1E4  14DE               	andwf	postinc2,w,c
 23004  01B1E6  6E0C               	movwf	(btemp+11)^0,c
 23005  01B1E8  5009               	movf	(btemp+8)^0,w,c
 23006  01B1EA  100A               	iorwf	(btemp+9)^0,w,c
 23007  01B1EC  100B               	iorwf	(btemp+10)^0,w,c
 23008  01B1EE  100C               	iorwf	(btemp+11)^0,w,c
 23009  01B1F0  A4D8               	btfss	status,2,c
 23010  01B1F2  D008               	goto	l9321
 23011                           
 23012                           ;stkvar	_ff2 @ sp[(0)+-8]
 23013  01B1F4  0EF8               	movlw	-8
 23014  01B1F6  6AE3               	clrf	plusw1,c
 23015  01B1F8  0EF9               	movlw	-7
 23016  01B1FA  6AE3               	clrf	plusw1,c
 23017  01B1FC  0EFA               	movlw	-6
 23018  01B1FE  6AE3               	clrf	plusw1,c
 23019  01B200  0EFB               	movlw	-5
 23020  01B202  6AE3               	clrf	plusw1,c
 23021  01B204                     l9321:
 23022                           
 23023                           ;stkvar	_ff2 @ sp[(0)+-8]
 23024                           ;stkvar	_ff1 @ sp[(0)+-4]
 23025  01B204  50E1               	movf	fsr1l,w,c
 23026  01B206  0FFC               	addlw	-4
 23027  01B208  6ED9               	movwf	fsr2l,c
 23028  01B20A  50E2               	movf	fsr1h,w,c
 23029  01B20C  6EDA               	movwf	fsr2h,c
 23030  01B20E  0EFF               	movlw	255
 23031  01B210  22DA               	addwfc	fsr2h,f,c
 23032  01B212  0EF8               	movlw	-8
 23033  01B214  50E3               	movf	plusw1,w,c
 23034  01B216  18DE               	xorwf	postinc2,w,c
 23035  01B218  E10D               	bnz	u7610
 23036  01B21A  0EF9               	movlw	-7
 23037  01B21C  50E3               	movf	plusw1,w,c
 23038  01B21E  18DE               	xorwf	postinc2,w,c
 23039  01B220  E109               	bnz	u7610
 23040  01B222  0EFA               	movlw	-6
 23041  01B224  50E3               	movf	plusw1,w,c
 23042  01B226  18DE               	xorwf	postinc2,w,c
 23043  01B228  E105               	bnz	u7610
 23044  01B22A  0EFB               	movlw	-5
 23045  01B22C  50E3               	movf	plusw1,w,c
 23046  01B22E  18DE               	xorwf	postinc2,w,c
 23047  01B230  B4D8               	btfsc	status,2,c
 23048  01B232  D002               	goto	l9325
 23049  01B234                     u7610:
 23050  01B234  9001               	bcf	btemp& (0+255),0,c
 23051  01B236  D001               	goto	l2915
 23052  01B238                     l9325:
 23053  01B238  8001               	bsf	btemp& (0+255),0,c
 23054  01B23A                     l2915:
 23055                           
 23056                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 23057  01B23A  0EF8               	movlw	248
 23058  01B23C  26E1               	addwf	fsr1l,f,c
 23059  01B23E  0EFF               	movlw	255
 23060  01B240  22E2               	addwfc	fsr1h,f,c
 23061  01B242  0012               	return		;funcret
 23062  01B244                     __end_of___fleq:
 23063                           	opt callstack 0
 23064                           
 23065 ;; *************** function ___awmod *****************
 23066 ;; Defined at:
 23067 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 23068 ;; Parameters:    Size  Location     Type
 23069 ;;  dividend        2  [STACK] int 
 23070 ;;  divisor         2  [STACK] int 
 23071 ;; Auto vars:     Size  Location     Type
 23072 ;;  sign            1  [STACK] unsigned char 
 23073 ;;  counter         1  [STACK] unsigned char 
 23074 ;; Return value:  Size  Location     Type
 23075 ;;                  2  [STACK] int 
 23076 ;; Registers used:
 23077 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 23078 ;; Tracked objects:
 23079 ;;		On entry : 0/0
 23080 ;;		On exit  : 0/0
 23081 ;;		Unchanged: 0/0
 23082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23087 ;;Total ram usage:        0 bytes
 23088 ;; Hardware stack levels used:    1
 23089 ;; Hardware stack levels required when called:   15
 23090 ;; This function calls:
 23091 ;;		Nothing
 23092 ;; This function is called by:
 23093 ;;		_efgtoa
 23094 ;; This function uses a reentrant model
 23095 ;;
 23096                           
 23097                           	psect	text84
 23098  01A61C                     __ptext84:
 23099                           	opt callstack 0
 23100  01A61C                     ___awmod:
 23101                           	opt callstack 0
 23102                           
 23103                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23104  01A61C  52E6               	movf	postinc1,f,c
 23105  01A61E  52E6               	movf	postinc1,f,c
 23106                           
 23107                           ;stkvar	_sign @ sp[(-2)+0]
 23108                           
 23109                           ;incstack = 0
 23110 ;; hardware stack exceeded
 23111  01A620  0EFE               	movlw	-2
 23112  01A622  6AE3               	clrf	plusw1,c
 23113                           
 23114                           ;stkvar	_dividend @ sp[(-2)+-2]
 23115  01A624  0EFD               	movlw	-3
 23116  01A626  AEE3               	btfss	plusw1,7,c
 23117  01A628  D009               	goto	l9283
 23118                           
 23119                           ;stkvar	_dividend @ sp[(-2)+-2]
 23120                           ;stkvar	_dividend @ sp[(-2)+-2]
 23121  01A62A  0EFC               	movlw	-4
 23122  01A62C  6CE3               	negf	plusw1,c
 23123  01A62E  0EFD               	movlw	-3
 23124  01A630  1EE3               	comf	plusw1,f,c
 23125  01A632  B0D8               	btfsc	status,0,c
 23126  01A634  2AE3               	incf	plusw1,f,c
 23127                           
 23128                           ;stkvar	_sign @ sp[(-2)+0]
 23129  01A636  0EFE               	movlw	-2
 23130  01A638  6AE3               	clrf	plusw1,c
 23131  01A63A  2AE3               	incf	plusw1,f,c
 23132  01A63C                     l9283:
 23133                           
 23134                           ;stkvar	_divisor @ sp[(-2)+-4]
 23135  01A63C  0EFB               	movlw	-5
 23136  01A63E  AEE3               	btfss	plusw1,7,c
 23137  01A640  D006               	goto	l9287
 23138                           
 23139                           ;stkvar	_divisor @ sp[(-2)+-4]
 23140                           ;stkvar	_divisor @ sp[(-2)+-4]
 23141  01A642  0EFA               	movlw	-6
 23142  01A644  6CE3               	negf	plusw1,c
 23143  01A646  0EFB               	movlw	-5
 23144  01A648  1EE3               	comf	plusw1,f,c
 23145  01A64A  B0D8               	btfsc	status,0,c
 23146  01A64C  2AE3               	incf	plusw1,f,c
 23147  01A64E                     l9287:
 23148                           
 23149                           ;stkvar	_divisor @ sp[(-2)+-4]
 23150  01A64E  0EFA               	movlw	-6
 23151  01A650  006F FF8C  F001    	movff	plusw1,btemp
 23152  01A656  0EFB               	movlw	-5
 23153  01A658  50E3               	movf	plusw1,w,c
 23154  01A65A  1001               	iorwf	btemp^0,w,c
 23155  01A65C  B4D8               	btfsc	status,2,c
 23156  01A65E  D053               	goto	u7570
 23157                           
 23158                           ;stkvar	_counter @ sp[(-2)+1]
 23159  01A660  0EFF               	movlw	-1
 23160  01A662  6AE3               	clrf	plusw1,c
 23161  01A664  D012               	goto	L27
 23162  01A666                     l9291:
 23163                           
 23164                           ;stkvar	_divisor @ sp[(-2)+-4]
 23165  01A666  0EFA               	movlw	-6
 23166  01A668  50E3               	movf	plusw1,w,c
 23167  01A66A  90D8               	bcf	status,0,c
 23168  01A66C  34E8               	rlcf	wreg,w,c
 23169  01A66E  6E01               	movwf	btemp^0,c
 23170  01A670  0EFA               	movlw	-6
 23171  01A672  0060  F007  FFE3   	movff	btemp,plusw1
 23172  01A678  0EFB               	movlw	-5
 23173  01A67A  50E3               	movf	plusw1,w,c
 23174  01A67C  34E8               	rlcf	wreg,w,c
 23175  01A67E  6E01               	movwf	btemp^0,c
 23176  01A680  0EFB               	movlw	-5
 23177  01A682  0060  F007  FFE3   	movff	btemp,plusw1
 23178                           
 23179                           ;stkvar	_counter @ sp[(-2)+1]
 23180  01A688  0EFF               	movlw	-1
 23181  01A68A                     L27:
 23182  01A68A  2AE3               	incf	plusw1,f,c
 23183                           
 23184                           ;stkvar	_divisor @ sp[(-2)+-4]
 23185  01A68C  0EFB               	movlw	-5
 23186  01A68E  AEE3               	btfss	plusw1,7,c
 23187  01A690  D7EA               	goto	l9291
 23188  01A692                     u7550:
 23189                           
 23190                           ;stkvar	_divisor @ sp[(-2)+-4]
 23191  01A692  0EFA               	movlw	-6
 23192  01A694  006F FF8C  F00B    	movff	plusw1,btemp+10
 23193  01A69A  0EFB               	movlw	-5
 23194  01A69C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23195                           
 23196                           ;stkvar	_dividend @ sp[(-2)+-2]
 23197  01A6A2  0EFC               	movlw	-4
 23198  01A6A4  006F FF8C  F009    	movff	plusw1,btemp+8
 23199  01A6AA  0EFD               	movlw	-3
 23200  01A6AC  006F FF8C  F00A    	movff	plusw1,btemp+9
 23201  01A6B2  500B               	movf	(btemp+10)^0,w,c
 23202  01A6B4  5C09               	subwf	(btemp+8)^0,w,c
 23203  01A6B6  500C               	movf	(btemp+11)^0,w,c
 23204  01A6B8  580A               	subwfb	(btemp+9)^0,w,c
 23205  01A6BA  A0D8               	btfss	status,0,c
 23206  01A6BC  D014               	goto	l9301
 23207                           
 23208                           ;stkvar	_divisor @ sp[(-2)+-4]
 23209                           ;stkvar	_dividend @ sp[(-2)+-2]
 23210  01A6BE  0EFC               	movlw	-4
 23211  01A6C0  50E3               	movf	plusw1,w,c
 23212  01A6C2  6E01               	movwf	btemp^0,c
 23213  01A6C4  0EFA               	movlw	-6
 23214  01A6C6  50E3               	movf	plusw1,w,c
 23215  01A6C8  5E01               	subwf	btemp^0,f,c
 23216  01A6CA  0EFC               	movlw	-4
 23217  01A6CC  0060  F007  FFE3   	movff	btemp,plusw1
 23218  01A6D2  0EFD               	movlw	-3
 23219  01A6D4  50E3               	movf	plusw1,w,c
 23220  01A6D6  6E01               	movwf	btemp^0,c
 23221  01A6D8  0EFB               	movlw	-5
 23222  01A6DA  50E3               	movf	plusw1,w,c
 23223  01A6DC  5A01               	subwfb	btemp^0,f,c
 23224  01A6DE  0EFD               	movlw	-3
 23225  01A6E0  0060  F007  FFE3   	movff	btemp,plusw1
 23226  01A6E6                     l9301:
 23227                           
 23228                           ;stkvar	_divisor @ sp[(-2)+-4]
 23229  01A6E6  90D8               	bcf	status,0,c
 23230  01A6E8  0EFB               	movlw	-5
 23231  01A6EA  32E3               	rrcf	plusw1,f,c
 23232  01A6EC  0EFA               	movlw	-6
 23233  01A6EE  32E3               	rrcf	plusw1,f,c
 23234                           
 23235                           ;stkvar	_counter @ sp[(-2)+1]
 23236  01A6F0  0EFF               	movlw	-1
 23237  01A6F2  50E3               	movf	plusw1,w,c
 23238  01A6F4  6E01               	movwf	btemp^0,c
 23239  01A6F6  0E01               	movlw	1
 23240  01A6F8  5E01               	subwf	btemp^0,f,c
 23241  01A6FA  0EFF               	movlw	-1
 23242  01A6FC  0060  F007  FFE3   	movff	btemp,plusw1
 23243  01A702  A4D8               	btfss	status,2,c
 23244  01A704  D7C6               	goto	u7550
 23245  01A706                     u7570:
 23246                           
 23247                           ;stkvar	_sign @ sp[(-2)+0]
 23248  01A706  0EFE               	movlw	-2
 23249  01A708  50E3               	movf	plusw1,w,c
 23250  01A70A  B4D8               	btfsc	status,2,c
 23251  01A70C  D006               	goto	l9309
 23252                           
 23253                           ;stkvar	_dividend @ sp[(-2)+-2]
 23254                           ;stkvar	_dividend @ sp[(-2)+-2]
 23255  01A70E  0EFC               	movlw	-4
 23256  01A710  6CE3               	negf	plusw1,c
 23257  01A712  0EFD               	movlw	-3
 23258  01A714  1EE3               	comf	plusw1,f,c
 23259  01A716  B0D8               	btfsc	status,0,c
 23260  01A718  2AE3               	incf	plusw1,f,c
 23261  01A71A                     l9309:
 23262                           
 23263                           ;stkvar	_dividend @ sp[(-2)+-2]
 23264  01A71A  0EFC               	movlw	-4
 23265  01A71C  006F FF8C  F001    	movff	plusw1,btemp
 23266  01A722  0EFD               	movlw	-3
 23267  01A724  006F FF8C  F002    	movff	plusw1,btemp+1
 23268                           
 23269                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23270  01A72A  0EFA               	movlw	250
 23271  01A72C  26E1               	addwf	fsr1l,f,c
 23272  01A72E  0EFF               	movlw	255
 23273  01A730  22E2               	addwfc	fsr1h,f,c
 23274  01A732  0012               	return		;funcret
 23275  01A734                     __end_of___awmod:
 23276                           	opt callstack 0
 23277                           
 23278 ;; *************** function ___awdiv *****************
 23279 ;; Defined at:
 23280 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 23281 ;; Parameters:    Size  Location     Type
 23282 ;;  dividend        2  [STACK] int 
 23283 ;;  divisor         2  [STACK] int 
 23284 ;; Auto vars:     Size  Location     Type
 23285 ;;  quotient        2  [STACK] int 
 23286 ;;  sign            1  [STACK] unsigned char 
 23287 ;;  counter         1  [STACK] unsigned char 
 23288 ;; Return value:  Size  Location     Type
 23289 ;;                  2  [STACK] int 
 23290 ;; Registers used:
 23291 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 23292 ;; Tracked objects:
 23293 ;;		On entry : 0/0
 23294 ;;		On exit  : 0/0
 23295 ;;		Unchanged: 0/0
 23296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23301 ;;Total ram usage:        0 bytes
 23302 ;; Hardware stack levels used:    1
 23303 ;; Hardware stack levels required when called:   15
 23304 ;; This function calls:
 23305 ;;		Nothing
 23306 ;; This function is called by:
 23307 ;;		_efgtoa
 23308 ;; This function uses a reentrant model
 23309 ;;
 23310                           
 23311                           	psect	text85
 23312  019DAA                     __ptext85:
 23313                           	opt callstack 0
 23314  019DAA                     ___awdiv:
 23315                           	opt callstack 0
 23316                           
 23317                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23318  019DAA  52E6               	movf	postinc1,f,c
 23319  019DAC  52E6               	movf	postinc1,f,c
 23320  019DAE  52E6               	movf	postinc1,f,c
 23321  019DB0  52E6               	movf	postinc1,f,c
 23322                           
 23323                           ;stkvar	_sign @ sp[(-4)+2]
 23324                           
 23325                           ;incstack = 0
 23326 ;; hardware stack exceeded
 23327  019DB2  0EFE               	movlw	-2
 23328  019DB4  6AE3               	clrf	plusw1,c
 23329                           
 23330                           ;stkvar	_divisor @ sp[(-4)+-4]
 23331  019DB6  0EF9               	movlw	-7
 23332  019DB8  AEE3               	btfss	plusw1,7,c
 23333  019DBA  D009               	goto	l9237
 23334                           
 23335                           ;stkvar	_divisor @ sp[(-4)+-4]
 23336                           ;stkvar	_divisor @ sp[(-4)+-4]
 23337  019DBC  0EF8               	movlw	-8
 23338  019DBE  6CE3               	negf	plusw1,c
 23339  019DC0  0EF9               	movlw	-7
 23340  019DC2  1EE3               	comf	plusw1,f,c
 23341  019DC4  B0D8               	btfsc	status,0,c
 23342  019DC6  2AE3               	incf	plusw1,f,c
 23343                           
 23344                           ;stkvar	_sign @ sp[(-4)+2]
 23345  019DC8  0EFE               	movlw	-2
 23346  019DCA  6AE3               	clrf	plusw1,c
 23347  019DCC  2AE3               	incf	plusw1,f,c
 23348  019DCE                     l9237:
 23349                           
 23350                           ;stkvar	_dividend @ sp[(-4)+-2]
 23351  019DCE  0EFB               	movlw	-5
 23352  019DD0  AEE3               	btfss	plusw1,7,c
 23353  019DD2  D008               	goto	l9243
 23354                           
 23355                           ;stkvar	_dividend @ sp[(-4)+-2]
 23356                           ;stkvar	_dividend @ sp[(-4)+-2]
 23357  019DD4  0EFA               	movlw	-6
 23358  019DD6  6CE3               	negf	plusw1,c
 23359  019DD8  0EFB               	movlw	-5
 23360  019DDA  1EE3               	comf	plusw1,f,c
 23361  019DDC  B0D8               	btfsc	status,0,c
 23362  019DDE  2AE3               	incf	plusw1,f,c
 23363                           
 23364                           ;stkvar	_sign @ sp[(-4)+2]
 23365  019DE0  0EFE               	movlw	-2
 23366  019DE2  70E3               	btg	plusw1,0,c
 23367  019DE4                     l9243:
 23368                           
 23369                           ;stkvar	_quotient @ sp[(-4)+0]
 23370  019DE4  0EFC               	movlw	-4
 23371  019DE6  6AE3               	clrf	plusw1,c
 23372  019DE8  0EFD               	movlw	-3
 23373  019DEA  6AE3               	clrf	plusw1,c
 23374                           
 23375                           ;stkvar	_divisor @ sp[(-4)+-4]
 23376  019DEC  0EF8               	movlw	-8
 23377  019DEE  006F FF8C  F001    	movff	plusw1,btemp
 23378  019DF4  0EF9               	movlw	-7
 23379  019DF6  50E3               	movf	plusw1,w,c
 23380  019DF8  1001               	iorwf	btemp^0,w,c
 23381  019DFA  B4D8               	btfsc	status,2,c
 23382  019DFC  D066               	goto	u7500
 23383                           
 23384                           ;stkvar	_counter @ sp[(-4)+3]
 23385  019DFE  0EFF               	movlw	-1
 23386  019E00  6AE3               	clrf	plusw1,c
 23387  019E02  D012               	goto	L28
 23388  019E04                     l9249:
 23389                           
 23390                           ;stkvar	_divisor @ sp[(-4)+-4]
 23391  019E04  0EF8               	movlw	-8
 23392  019E06  50E3               	movf	plusw1,w,c
 23393  019E08  90D8               	bcf	status,0,c
 23394  019E0A  34E8               	rlcf	wreg,w,c
 23395  019E0C  6E01               	movwf	btemp^0,c
 23396  019E0E  0EF8               	movlw	-8
 23397  019E10  0060  F007  FFE3   	movff	btemp,plusw1
 23398  019E16  0EF9               	movlw	-7
 23399  019E18  50E3               	movf	plusw1,w,c
 23400  019E1A  34E8               	rlcf	wreg,w,c
 23401  019E1C  6E01               	movwf	btemp^0,c
 23402  019E1E  0EF9               	movlw	-7
 23403  019E20  0060  F007  FFE3   	movff	btemp,plusw1
 23404                           
 23405                           ;stkvar	_counter @ sp[(-4)+3]
 23406  019E26  0EFF               	movlw	-1
 23407  019E28                     L28:
 23408  019E28  2AE3               	incf	plusw1,f,c
 23409                           
 23410                           ;stkvar	_divisor @ sp[(-4)+-4]
 23411  019E2A  0EF9               	movlw	-7
 23412  019E2C  AEE3               	btfss	plusw1,7,c
 23413  019E2E  D7EA               	goto	l9249
 23414  019E30                     u7480:
 23415                           
 23416                           ;stkvar	_quotient @ sp[(-4)+0]
 23417  019E30  0EFC               	movlw	-4
 23418  019E32  50E3               	movf	plusw1,w,c
 23419  019E34  90D8               	bcf	status,0,c
 23420  019E36  34E8               	rlcf	wreg,w,c
 23421  019E38  6E01               	movwf	btemp^0,c
 23422  019E3A  0EFC               	movlw	-4
 23423  019E3C  0060  F007  FFE3   	movff	btemp,plusw1
 23424  019E42  0EFD               	movlw	-3
 23425  019E44  50E3               	movf	plusw1,w,c
 23426  019E46  34E8               	rlcf	wreg,w,c
 23427  019E48  6E01               	movwf	btemp^0,c
 23428  019E4A  0EFD               	movlw	-3
 23429  019E4C  0060  F007  FFE3   	movff	btemp,plusw1
 23430                           
 23431                           ;stkvar	_divisor @ sp[(-4)+-4]
 23432  019E52  0EF8               	movlw	-8
 23433  019E54  006F FF8C  F00B    	movff	plusw1,btemp+10
 23434  019E5A  0EF9               	movlw	-7
 23435  019E5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23436                           
 23437                           ;stkvar	_dividend @ sp[(-4)+-2]
 23438  019E62  0EFA               	movlw	-6
 23439  019E64  006F FF8C  F009    	movff	plusw1,btemp+8
 23440  019E6A  0EFB               	movlw	-5
 23441  019E6C  006F FF8C  F00A    	movff	plusw1,btemp+9
 23442  019E72  500B               	movf	(btemp+10)^0,w,c
 23443  019E74  5C09               	subwf	(btemp+8)^0,w,c
 23444  019E76  500C               	movf	(btemp+11)^0,w,c
 23445  019E78  580A               	subwfb	(btemp+9)^0,w,c
 23446  019E7A  A0D8               	btfss	status,0,c
 23447  019E7C  D016               	goto	l9263
 23448                           
 23449                           ;stkvar	_divisor @ sp[(-4)+-4]
 23450                           ;stkvar	_dividend @ sp[(-4)+-2]
 23451  019E7E  0EFA               	movlw	-6
 23452  019E80  50E3               	movf	plusw1,w,c
 23453  019E82  6E01               	movwf	btemp^0,c
 23454  019E84  0EF8               	movlw	-8
 23455  019E86  50E3               	movf	plusw1,w,c
 23456  019E88  5E01               	subwf	btemp^0,f,c
 23457  019E8A  0EFA               	movlw	-6
 23458  019E8C  0060  F007  FFE3   	movff	btemp,plusw1
 23459  019E92  0EFB               	movlw	-5
 23460  019E94  50E3               	movf	plusw1,w,c
 23461  019E96  6E01               	movwf	btemp^0,c
 23462  019E98  0EF9               	movlw	-7
 23463  019E9A  50E3               	movf	plusw1,w,c
 23464  019E9C  5A01               	subwfb	btemp^0,f,c
 23465  019E9E  0EFB               	movlw	-5
 23466  019EA0  0060  F007  FFE3   	movff	btemp,plusw1
 23467                           
 23468                           ;stkvar	_quotient @ sp[(-4)+0]
 23469  019EA6  0EFC               	movlw	-4
 23470  019EA8  80E3               	bsf	plusw1,0,c
 23471  019EAA                     l9263:
 23472                           
 23473                           ;stkvar	_divisor @ sp[(-4)+-4]
 23474  019EAA  90D8               	bcf	status,0,c
 23475  019EAC  0EF9               	movlw	-7
 23476  019EAE  32E3               	rrcf	plusw1,f,c
 23477  019EB0  0EF8               	movlw	-8
 23478  019EB2  32E3               	rrcf	plusw1,f,c
 23479                           
 23480                           ;stkvar	_counter @ sp[(-4)+3]
 23481  019EB4  0EFF               	movlw	-1
 23482  019EB6  50E3               	movf	plusw1,w,c
 23483  019EB8  6E01               	movwf	btemp^0,c
 23484  019EBA  0E01               	movlw	1
 23485  019EBC  5E01               	subwf	btemp^0,f,c
 23486  019EBE  0EFF               	movlw	-1
 23487  019EC0  0060  F007  FFE3   	movff	btemp,plusw1
 23488  019EC6  A4D8               	btfss	status,2,c
 23489  019EC8  D7B3               	goto	u7480
 23490  019ECA                     u7500:
 23491                           
 23492                           ;stkvar	_sign @ sp[(-4)+2]
 23493  019ECA  0EFE               	movlw	-2
 23494  019ECC  50E3               	movf	plusw1,w,c
 23495  019ECE  B4D8               	btfsc	status,2,c
 23496  019ED0  D006               	goto	l9271
 23497                           
 23498                           ;stkvar	_quotient @ sp[(-4)+0]
 23499                           ;stkvar	_quotient @ sp[(-4)+0]
 23500  019ED2  0EFC               	movlw	-4
 23501  019ED4  6CE3               	negf	plusw1,c
 23502  019ED6  0EFD               	movlw	-3
 23503  019ED8  1EE3               	comf	plusw1,f,c
 23504  019EDA  B0D8               	btfsc	status,0,c
 23505  019EDC  2AE3               	incf	plusw1,f,c
 23506  019EDE                     l9271:
 23507                           
 23508                           ;stkvar	_quotient @ sp[(-4)+0]
 23509  019EDE  0EFC               	movlw	-4
 23510  019EE0  006F FF8C  F001    	movff	plusw1,btemp
 23511  019EE6  0EFD               	movlw	-3
 23512  019EE8  006F FF8C  F002    	movff	plusw1,btemp+1
 23513                           
 23514                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 23515  019EEE  0EF8               	movlw	248
 23516  019EF0  26E1               	addwf	fsr1l,f,c
 23517  019EF2  0EFF               	movlw	255
 23518  019EF4  22E2               	addwfc	fsr1h,f,c
 23519  019EF6  0012               	return		;funcret
 23520  019EF8                     __end_of___awdiv:
 23521                           	opt callstack 0
 23522                           
 23523 ;; *************** function _dtoa *****************
 23524 ;; Defined at:
 23525 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 23526 ;; Parameters:    Size  Location     Type
 23527 ;;  fp              2  [STACK] PTR struct _IO_FILE
 23528 ;;		 -> f(6), NULL(0), 
 23529 ;;  d               8  [STACK] long long 
 23530 ;; Auto vars:     Size  Location     Type
 23531 ;;  n               8  [STACK] long long 
 23532 ;;  i               2  [STACK] int 
 23533 ;;  s               2  [STACK] int 
 23534 ;;  w               2  [STACK] int 
 23535 ;;  p               2  [STACK] int 
 23536 ;; Return value:  Size  Location     Type
 23537 ;;                  2  [STACK] int 
 23538 ;; Registers used:
 23539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 23540 ;; Tracked objects:
 23541 ;;		On entry : 0/0
 23542 ;;		On exit  : 0/0
 23543 ;;		Unchanged: 0/0
 23544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23549 ;;Total ram usage:        0 bytes
 23550 ;; Hardware stack levels used:    1
 23551 ;; Hardware stack levels required when called:   20
 23552 ;; This function calls:
 23553 ;;		___aodiv
 23554 ;;		___aomod
 23555 ;;		_abs
 23556 ;;		_pad
 23557 ;; This function is called by:
 23558 ;;		_vfpfcnvrt
 23559 ;; This function uses a reentrant model
 23560 ;;
 23561                           
 23562                           	psect	text86
 23563  015DB0                     __ptext86:
 23564                           	opt callstack 0
 23565  015DB0                     _dtoa:
 23566                           	opt callstack 0
 23567                           
 23568                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 23569  015DB0  0E12               	movlw	18
 23570  015DB2  26E1               	addwf	fsr1l,f,c
 23571  015DB4  0E00               	movlw	0
 23572  015DB6  22E2               	addwfc	fsr1h,f,c
 23573                           
 23574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 23575                           ;stkvar	_d @ sp[(-18)+-10]
 23576                           
 23577                           ;incstack = 0
 23578 ;; hardware stack exceeded
 23579  015DB8  0EE4               	movlw	228
 23580  015DBA  24E1               	addwf	fsr1l,w,c
 23581  015DBC  6ED9               	movwf	fsr2l,c
 23582  015DBE  0EFF               	movlw	255
 23583  015DC0  20E2               	addwfc	fsr1h,w,c
 23584  015DC2  6EDA               	movwf	fsr2h,c
 23585                           
 23586                           ;stkvar	_n @ sp[(-18)+2]
 23587  015DC4  0E08               	movlw	8
 23588  015DC6  6E01               	movwf	btemp^0,c
 23589  015DC8  0EF0               	movlw	-16
 23590  015DCA                     us1184999:
 23591  015DCA  006F FF7B FFE3     	movff	postinc2,plusw1
 23592  015DD0  28E8               	incf	wreg,w,c
 23593  015DD2  2E01               	decfsz	btemp^0,f,c
 23594  015DD4  D7FA               	bra	us1184999
 23595                           
 23596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 23597                           ;stkvar	_n @ sp[(-18)+2]
 23598  015DD6  0EF7               	movlw	-9
 23599  015DD8  AEE3               	btfss	plusw1,7,c
 23600  015DDA  D002               	goto	u11850
 23601  015DDC  0E01               	movlw	1
 23602  015DDE  D001               	goto	u11860
 23603  015DE0                     u11850:
 23604  015DE0  0E00               	movlw	0
 23605  015DE2                     u11860:
 23606  015DE2  6E0B               	movwf	(btemp+10)^0,c
 23607  015DE4  6A0C               	clrf	(btemp+11)^0,c
 23608                           
 23609                           ;stkvar	_s @ sp[(-18)+12]
 23610  015DE6  0EFA               	movlw	-6
 23611  015DE8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23612  015DEE  0EFB               	movlw	-5
 23613  015DF0  0060  F033  FFE3   	movff	btemp+11,plusw1
 23614                           
 23615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 23616                           ;stkvar	_s @ sp[(-18)+12]
 23617  015DF6  0EFA               	movlw	-6
 23618  015DF8  006F FF8C  F001    	movff	plusw1,btemp
 23619  015DFE  0EFB               	movlw	-5
 23620  015E00  50E3               	movf	plusw1,w,c
 23621  015E02  1001               	iorwf	btemp^0,w,c
 23622  015E04  B4D8               	btfsc	status,2,c
 23623  015E06  D025               	goto	u11880
 23624                           
 23625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 23626                           ;stkvar	_n @ sp[(-18)+2]
 23627                           ;stkvar	_n @ sp[(-18)+2]
 23628  015E08  0EF0               	movlw	-16
 23629  015E0A  6CE3               	negf	plusw1,c
 23630  015E0C  0EF1               	movlw	-15
 23631  015E0E  1EE3               	comf	plusw1,f,c
 23632  015E10  0EF2               	movlw	-14
 23633  015E12  1EE3               	comf	plusw1,f,c
 23634  015E14  0EF3               	movlw	-13
 23635  015E16  1EE3               	comf	plusw1,f,c
 23636  015E18  0EF4               	movlw	-12
 23637  015E1A  1EE3               	comf	plusw1,f,c
 23638  015E1C  0EF5               	movlw	-11
 23639  015E1E  1EE3               	comf	plusw1,f,c
 23640  015E20  0EF6               	movlw	-10
 23641  015E22  1EE3               	comf	plusw1,f,c
 23642  015E24  0EF7               	movlw	-9
 23643  015E26  1EE3               	comf	plusw1,f,c
 23644  015E28  E314               	bnc	u11880
 23645  015E2A  0EF1               	movlw	-15
 23646  015E2C  2AE3               	incf	plusw1,f,c
 23647  015E2E  E311               	bnc	u11880
 23648  015E30  0EF2               	movlw	-14
 23649  015E32  2AE3               	incf	plusw1,f,c
 23650  015E34  E30E               	bnc	u11880
 23651  015E36  0EF3               	movlw	-13
 23652  015E38  2AE3               	incf	plusw1,f,c
 23653  015E3A  E30B               	bnc	u11880
 23654  015E3C  0EF4               	movlw	-12
 23655  015E3E  2AE3               	incf	plusw1,f,c
 23656  015E40  E308               	bnc	u11880
 23657  015E42  0EF5               	movlw	-11
 23658  015E44  2AE3               	incf	plusw1,f,c
 23659  015E46  E305               	bnc	u11880
 23660  015E48  0EF6               	movlw	-10
 23661  015E4A  2AE3               	incf	plusw1,f,c
 23662  015E4C  E302               	bnc	u11880
 23663  015E4E  0EF7               	movlw	-9
 23664  015E50  2AE3               	incf	plusw1,f,c
 23665  015E52                     u11880:
 23666                           
 23667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 23668  015E52  AE3D               	btfss	(_prec+1)^0,7,c
 23669                           
 23670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 23671  015E54  923E               	bcf	_flags^0,1,c
 23672                           
 23673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 23674  015E56  BE3D               	btfsc	(_prec+1)^0,7,c
 23675  015E58  D005               	goto	u11900
 23676  015E5A  503D               	movf	(_prec+1)^0,w,c
 23677  015E5C  E110               	bnz	l13125
 23678  015E5E  043C               	decf	_prec^0,w,c
 23679  015E60  B0D8               	btfsc	status,0,c
 23680  015E62  D00D               	goto	l13125
 23681  015E64                     u11900:
 23682  015E64  0E01               	movlw	1
 23683  015E66  6E0B               	movwf	(btemp+10)^0,c
 23684  015E68  0E00               	movlw	0
 23685  015E6A  6E0C               	movwf	(btemp+11)^0,c
 23686                           
 23687                           ;stkvar	_p @ sp[(-18)+16]
 23688  015E6C  0EFE               	movlw	-2
 23689  015E6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23690  015E74  0EFF               	movlw	-1
 23691  015E76  0060  F033  FFE3   	movff	btemp+11,plusw1
 23692  015E7C  D008               	goto	l2419
 23693  015E7E                     l13125:
 23694                           
 23695                           ;stkvar	_p @ sp[(-18)+16]
 23696  015E7E  0EFE               	movlw	-2
 23697  015E80  0060  F0F3  FFE3   	movff	_prec,plusw1
 23698  015E86  0EFF               	movlw	-1
 23699  015E88  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 23700  015E8E                     l2419:
 23701                           
 23702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 23703                           ;stkvar	_w @ sp[(-18)+14]
 23704  015E8E  0EFC               	movlw	-4
 23705  015E90  0060  F0EB  FFE3   	movff	_width,plusw1
 23706  015E96  0EFD               	movlw	-3
 23707  015E98  0060  F0EF  FFE3   	movff	_width+1,plusw1
 23708                           
 23709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 23710                           ;stkvar	_s @ sp[(-18)+12]
 23711  015E9E  0EFA               	movlw	-6
 23712  015EA0  006F FF8C  F001    	movff	plusw1,btemp
 23713  015EA6  0EFB               	movlw	-5
 23714  015EA8  50E3               	movf	plusw1,w,c
 23715  015EAA  1001               	iorwf	btemp^0,w,c
 23716  015EAC  A4D8               	btfss	status,2,c
 23717  015EAE  D002               	goto	u11920
 23718  015EB0  A43E               	btfss	_flags^0,2,c
 23719  015EB2  D00A               	goto	l13133
 23720  015EB4                     u11920:
 23721                           
 23722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 23723                           ;stkvar	_w @ sp[(-18)+14]
 23724  015EB4  50E1               	movf	fsr1l,w,c
 23725  015EB6  0FFC               	addlw	-4
 23726  015EB8  6ED9               	movwf	fsr2l,c
 23727  015EBA  50E2               	movf	fsr1h,w,c
 23728  015EBC  6EDA               	movwf	fsr2h,c
 23729  015EBE  0EFF               	movlw	255
 23730  015EC0  22DA               	addwfc	fsr2h,f,c
 23731  015EC2  06DE               	decf	postinc2,f,c
 23732  015EC4  0E00               	movlw	0
 23733  015EC6  5ADD               	subwfb	postdec2,f,c
 23734  015EC8                     l13133:
 23735                           
 23736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 23737  015EC8  0E4F               	movlw	79
 23738  015ECA  6E0B               	movwf	(btemp+10)^0,c
 23739  015ECC  0E00               	movlw	0
 23740  015ECE  6E0C               	movwf	(btemp+11)^0,c
 23741                           
 23742                           ;stkvar	_i @ sp[(-18)+10]
 23743  015ED0  0EF8               	movlw	-8
 23744  015ED2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23745  015ED8  0EF9               	movlw	-7
 23746  015EDA  0060  F033  FFE3   	movff	btemp+11,plusw1
 23747                           
 23748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 23749  015EE0  0102               	movlb	2	; () banked
 23750  015EE2  6B92               	clrf	(_dbuf+79)& (0+255),b
 23751                           
 23752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 23753  015EE4  D109               	goto	l13147
 23754  015EE6                     l13137:
 23755                           
 23756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 23757                           ;stkvar	_i @ sp[(-18)+10]
 23758  015EE6  50E1               	movf	fsr1l,w,c
 23759  015EE8  0FF8               	addlw	-8
 23760  015EEA  6ED9               	movwf	fsr2l,c
 23761  015EEC  50E2               	movf	fsr1h,w,c
 23762  015EEE  6EDA               	movwf	fsr2h,c
 23763  015EF0  0EFF               	movlw	255
 23764  015EF2  22DA               	addwfc	fsr2h,f,c
 23765  015EF4  06DE               	decf	postinc2,f,c
 23766  015EF6  0E00               	movlw	0
 23767  015EF8  5ADD               	subwfb	postdec2,f,c
 23768                           
 23769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 23770  015EFA  0E0A               	movlw	10
 23771  015EFC  6EE6               	movwf	postinc1,c
 23772  015EFE  0E00               	movlw	0
 23773  015F00  6EE6               	movwf	postinc1,c
 23774  015F02  0E00               	movlw	0
 23775  015F04  6EE6               	movwf	postinc1,c
 23776  015F06  0E00               	movlw	0
 23777  015F08  6EE6               	movwf	postinc1,c
 23778  015F0A  0E00               	movlw	0
 23779  015F0C  6EE6               	movwf	postinc1,c
 23780  015F0E  0E00               	movlw	0
 23781  015F10  6EE6               	movwf	postinc1,c
 23782  015F12  0E00               	movlw	0
 23783  015F14  6EE6               	movwf	postinc1,c
 23784  015F16  0E00               	movlw	0
 23785  015F18  6EE6               	movwf	postinc1,c
 23786                           
 23787                           ;stkvar	_n @ sp[(-26)+2]
 23788  015F1A  50E1               	movf	fsr1l,w,c
 23789  015F1C  0FE8               	addlw	-24
 23790  015F1E  6ED9               	movwf	fsr2l,c
 23791  015F20  50E2               	movf	fsr1h,w,c
 23792  015F22  6EDA               	movwf	fsr2h,c
 23793  015F24  0EFF               	movlw	255
 23794  015F26  22DA               	addwfc	fsr2h,f,c
 23795  015F28  006F FF7B FFE6     	movff	postinc2,postinc1
 23796  015F2E  006F FF7B FFE6     	movff	postinc2,postinc1
 23797  015F34  006F FF7B FFE6     	movff	postinc2,postinc1
 23798  015F3A  006F FF7B FFE6     	movff	postinc2,postinc1
 23799  015F40  006F FF7B FFE6     	movff	postinc2,postinc1
 23800  015F46  006F FF7B FFE6     	movff	postinc2,postinc1
 23801  015F4C  006F FF7B FFE6     	movff	postinc2,postinc1
 23802  015F52  006F FF7B FFE6     	movff	postinc2,postinc1
 23803  015F58  ECE5  F0C1         	call	___aomod	;wreg free
 23804  015F5C  52E5               	movf	postdec1,f,c
 23805  015F5E  006F FF9C  F018    	movff	indf1,btemp+23
 23806  015F64  52E5               	movf	postdec1,f,c
 23807  015F66  006F FF9C  F017    	movff	indf1,btemp+22
 23808  015F6C  52E5               	movf	postdec1,f,c
 23809  015F6E  006F FF9C  F016    	movff	indf1,btemp+21
 23810  015F74  52E5               	movf	postdec1,f,c
 23811  015F76  006F FF9C  F015    	movff	indf1,btemp+20
 23812  015F7C  52E5               	movf	postdec1,f,c
 23813  015F7E  006F FF9C  F014    	movff	indf1,btemp+19
 23814  015F84  52E5               	movf	postdec1,f,c
 23815  015F86  006F FF9C  F013    	movff	indf1,btemp+18
 23816  015F8C  52E5               	movf	postdec1,f,c
 23817  015F8E  006F FF9C  F012    	movff	indf1,btemp+17
 23818  015F94  52E5               	movf	postdec1,f,c
 23819  015F96  006F FF9C  F011    	movff	indf1,btemp+16
 23820  015F9C  0EF8               	movlw	248
 23821  015F9E  26E1               	addwf	fsr1l,f,c
 23822  015FA0  0EFF               	movlw	255
 23823  015FA2  22E2               	addwfc	fsr1h,f,c
 23824  015FA4  0060  F044  F00B   	movff	btemp+16,btemp+10
 23825  015FAA  0060  F048  F00C   	movff	btemp+17,btemp+11
 23826  015FB0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23827  015FB6  0060  F033  FFE6   	movff	btemp+11,postinc1
 23828  015FBC  EC71  F0E3         	call	_abs	;wreg free
 23829  015FC0  0E30               	movlw	48
 23830  015FC2  2601               	addwf	btemp^0,f,c
 23831                           
 23832                           ;stkvar	_i @ sp[(-18)+10]
 23833  015FC4  0EF8               	movlw	-8
 23834  015FC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 23835  015FCC  0EF9               	movlw	-7
 23836  015FCE  006F FF8C  F00C    	movff	plusw1,btemp+11
 23837  015FD4  0E43               	movlw	low _dbuf
 23838  015FD6  240B               	addwf	(btemp+10)^0,w,c
 23839  015FD8  6ED9               	movwf	fsr2l,c
 23840  015FDA  0E02               	movlw	high _dbuf
 23841  015FDC  200C               	addwfc	(btemp+11)^0,w,c
 23842  015FDE  6EDA               	movwf	fsr2h,c
 23843  015FE0  0060  F007  FFDF   	movff	btemp,indf2
 23844                           
 23845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 23846                           ;stkvar	_p @ sp[(-18)+16]
 23847  015FE6  50E1               	movf	fsr1l,w,c
 23848  015FE8  0FFE               	addlw	-2
 23849  015FEA  6ED9               	movwf	fsr2l,c
 23850  015FEC  50E2               	movf	fsr1h,w,c
 23851  015FEE  6EDA               	movwf	fsr2h,c
 23852  015FF0  0EFF               	movlw	255
 23853  015FF2  22DA               	addwfc	fsr2h,f,c
 23854  015FF4  06DE               	decf	postinc2,f,c
 23855  015FF6  0E00               	movlw	0
 23856  015FF8  5ADD               	subwfb	postdec2,f,c
 23857                           
 23858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 23859                           ;stkvar	_w @ sp[(-18)+14]
 23860  015FFA  50E1               	movf	fsr1l,w,c
 23861  015FFC  0FFC               	addlw	-4
 23862  015FFE  6ED9               	movwf	fsr2l,c
 23863  016000  50E2               	movf	fsr1h,w,c
 23864  016002  6EDA               	movwf	fsr2h,c
 23865  016004  0EFF               	movlw	255
 23866  016006  22DA               	addwfc	fsr2h,f,c
 23867  016008  06DE               	decf	postinc2,f,c
 23868  01600A  0E00               	movlw	0
 23869  01600C  5ADD               	subwfb	postdec2,f,c
 23870                           
 23871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 23872  01600E  0E0A               	movlw	10
 23873  016010  6EE6               	movwf	postinc1,c
 23874  016012  0E00               	movlw	0
 23875  016014  6EE6               	movwf	postinc1,c
 23876  016016  0E00               	movlw	0
 23877  016018  6EE6               	movwf	postinc1,c
 23878  01601A  0E00               	movlw	0
 23879  01601C  6EE6               	movwf	postinc1,c
 23880  01601E  0E00               	movlw	0
 23881  016020  6EE6               	movwf	postinc1,c
 23882  016022  0E00               	movlw	0
 23883  016024  6EE6               	movwf	postinc1,c
 23884  016026  0E00               	movlw	0
 23885  016028  6EE6               	movwf	postinc1,c
 23886  01602A  0E00               	movlw	0
 23887  01602C  6EE6               	movwf	postinc1,c
 23888                           
 23889                           ;stkvar	_n @ sp[(-26)+2]
 23890  01602E  50E1               	movf	fsr1l,w,c
 23891  016030  0FE8               	addlw	-24
 23892  016032  6ED9               	movwf	fsr2l,c
 23893  016034  50E2               	movf	fsr1h,w,c
 23894  016036  6EDA               	movwf	fsr2h,c
 23895  016038  0EFF               	movlw	255
 23896  01603A  22DA               	addwfc	fsr2h,f,c
 23897  01603C  006F FF7B FFE6     	movff	postinc2,postinc1
 23898  016042  006F FF7B FFE6     	movff	postinc2,postinc1
 23899  016048  006F FF7B FFE6     	movff	postinc2,postinc1
 23900  01604E  006F FF7B FFE6     	movff	postinc2,postinc1
 23901  016054  006F FF7B FFE6     	movff	postinc2,postinc1
 23902  01605A  006F FF7B FFE6     	movff	postinc2,postinc1
 23903  016060  006F FF7B FFE6     	movff	postinc2,postinc1
 23904  016066  006F FF7B FFE6     	movff	postinc2,postinc1
 23905  01606C  EC48  F0BE         	call	___aodiv	;wreg free
 23906  016070  52E5               	movf	postdec1,f,c
 23907  016072  006F FF9C  F018    	movff	indf1,btemp+23
 23908  016078  52E5               	movf	postdec1,f,c
 23909  01607A  006F FF9C  F017    	movff	indf1,btemp+22
 23910  016080  52E5               	movf	postdec1,f,c
 23911  016082  006F FF9C  F016    	movff	indf1,btemp+21
 23912  016088  52E5               	movf	postdec1,f,c
 23913  01608A  006F FF9C  F015    	movff	indf1,btemp+20
 23914  016090  52E5               	movf	postdec1,f,c
 23915  016092  006F FF9C  F014    	movff	indf1,btemp+19
 23916  016098  52E5               	movf	postdec1,f,c
 23917  01609A  006F FF9C  F013    	movff	indf1,btemp+18
 23918  0160A0  52E5               	movf	postdec1,f,c
 23919  0160A2  006F FF9C  F012    	movff	indf1,btemp+17
 23920  0160A8  52E5               	movf	postdec1,f,c
 23921  0160AA  006F FF9C  F011    	movff	indf1,btemp+16
 23922  0160B0  0EF8               	movlw	248
 23923  0160B2  26E1               	addwf	fsr1l,f,c
 23924  0160B4  0EFF               	movlw	255
 23925  0160B6  22E2               	addwfc	fsr1h,f,c
 23926                           
 23927                           ;stkvar	_n @ sp[(-18)+2]
 23928  0160B8  0EF0               	movlw	-16
 23929  0160BA  0060  F047  FFE3   	movff	btemp+16,plusw1
 23930  0160C0  0EF1               	movlw	-15
 23931  0160C2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 23932  0160C8  0EF2               	movlw	-14
 23933  0160CA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 23934  0160D0  0EF3               	movlw	-13
 23935  0160D2  0060  F053  FFE3   	movff	btemp+19,plusw1
 23936  0160D8  0EF4               	movlw	-12
 23937  0160DA  0060  F057  FFE3   	movff	btemp+20,plusw1
 23938  0160E0  0EF5               	movlw	-11
 23939  0160E2  0060  F05B  FFE3   	movff	btemp+21,plusw1
 23940  0160E8  0EF6               	movlw	-10
 23941  0160EA  0060  F05F  FFE3   	movff	btemp+22,plusw1
 23942  0160F0  0EF7               	movlw	-9
 23943  0160F2  0060  F063  FFE3   	movff	btemp+23,plusw1
 23944  0160F8                     l13147:
 23945                           
 23946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 23947                           ;stkvar	_i @ sp[(-18)+10]
 23948  0160F8  0EF9               	movlw	-7
 23949  0160FA  BEE3               	btfsc	plusw1,7,c
 23950  0160FC  D036               	goto	u11970
 23951  0160FE  0EF9               	movlw	-7
 23952  016100  50E3               	movf	plusw1,w,c
 23953  016102  E104               	bnz	u11930
 23954  016104  0EF8               	movlw	-8
 23955  016106  04E3               	decf	plusw1,w,c
 23956  016108  A0D8               	btfss	status,0,c
 23957  01610A  D02F               	goto	u11970
 23958  01610C                     u11930:
 23959                           
 23960                           ;stkvar	_n @ sp[(-18)+2]
 23961  01610C  0EF0               	movlw	-16
 23962  01610E  50E3               	movf	plusw1,w,c
 23963  016110  E115               	bnz	u11941
 23964  016112  0EF1               	movlw	-15
 23965  016114  50E3               	movf	plusw1,w,c
 23966  016116  E112               	bnz	u11941
 23967  016118  0EF2               	movlw	-14
 23968  01611A  50E3               	movf	plusw1,w,c
 23969  01611C  E10F               	bnz	u11941
 23970  01611E  0EF3               	movlw	-13
 23971  016120  50E3               	movf	plusw1,w,c
 23972  016122  E10C               	bnz	u11941
 23973  016124  0EF4               	movlw	-12
 23974  016126  50E3               	movf	plusw1,w,c
 23975  016128  E109               	bnz	u11941
 23976  01612A  0EF5               	movlw	-11
 23977  01612C  50E3               	movf	plusw1,w,c
 23978  01612E  E106               	bnz	u11941
 23979  016130  0EF6               	movlw	-10
 23980  016132  50E3               	movf	plusw1,w,c
 23981  016134  E103               	bnz	u11941
 23982  016136  0EF7               	movlw	-9
 23983  016138  50E3               	movf	plusw1,w,c
 23984  01613A  A4D8               	btfss	status,2,c
 23985  01613C                     u11941:
 23986  01613C  D6D4               	goto	l13137
 23987                           
 23988                           ;stkvar	_p @ sp[(-18)+16]
 23989  01613E  0EFF               	movlw	-1
 23990  016140  BEE3               	btfsc	plusw1,7,c
 23991  016142  D007               	goto	u11950
 23992  016144  0EFF               	movlw	-1
 23993  016146  50E3               	movf	plusw1,w,c
 23994  016148  E103               	bnz	u11951
 23995  01614A  0EFE               	movlw	-2
 23996  01614C  04E3               	decf	plusw1,w,c
 23997  01614E  B0D8               	btfsc	status,0,c
 23998  016150                     u11951:
 23999  016150  D6CA               	goto	l13137
 24000  016152                     u11950:
 24001                           
 24002                           ;stkvar	_w @ sp[(-18)+14]
 24003  016152  0EFD               	movlw	-3
 24004  016154  BEE3               	btfsc	plusw1,7,c
 24005  016156  D009               	goto	u11970
 24006  016158  0EFD               	movlw	-3
 24007  01615A  50E3               	movf	plusw1,w,c
 24008  01615C  E104               	bnz	u11960
 24009  01615E  0EFC               	movlw	-4
 24010  016160  04E3               	decf	plusw1,w,c
 24011  016162  A0D8               	btfss	status,0,c
 24012  016164  D002               	goto	u11970
 24013  016166                     u11960:
 24014  016166  B23E               	btfsc	_flags^0,1,c
 24015  016168  D6BE               	goto	l13137
 24016  01616A                     u11970:
 24017                           
 24018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 24019                           ;stkvar	_s @ sp[(-18)+12]
 24020  01616A  0EFA               	movlw	-6
 24021  01616C  006F FF8C  F001    	movff	plusw1,btemp
 24022  016172  0EFB               	movlw	-5
 24023  016174  50E3               	movf	plusw1,w,c
 24024  016176  1001               	iorwf	btemp^0,w,c
 24025  016178  A4D8               	btfss	status,2,c
 24026  01617A  D002               	goto	u11990
 24027  01617C  A43E               	btfss	_flags^0,2,c
 24028  01617E  D033               	goto	l13171
 24029  016180                     u11990:
 24030                           
 24031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 24032                           ;stkvar	_i @ sp[(-18)+10]
 24033  016180  50E1               	movf	fsr1l,w,c
 24034  016182  0FF8               	addlw	-8
 24035  016184  6ED9               	movwf	fsr2l,c
 24036  016186  50E2               	movf	fsr1h,w,c
 24037  016188  6EDA               	movwf	fsr2h,c
 24038  01618A  0EFF               	movlw	255
 24039  01618C  22DA               	addwfc	fsr2h,f,c
 24040  01618E  06DE               	decf	postinc2,f,c
 24041  016190  0E00               	movlw	0
 24042  016192  5ADD               	subwfb	postdec2,f,c
 24043                           
 24044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 24045                           ;stkvar	_s @ sp[(-18)+12]
 24046  016194  0EFA               	movlw	-6
 24047  016196  006F FF8C  F001    	movff	plusw1,btemp
 24048  01619C  0EFB               	movlw	-5
 24049  01619E  50E3               	movf	plusw1,w,c
 24050  0161A0  1001               	iorwf	btemp^0,w,c
 24051  0161A2  A4D8               	btfss	status,2,c
 24052  0161A4  D002               	goto	l13167
 24053  0161A6  0E2B               	movlw	43
 24054  0161A8  D001               	goto	L29
 24055  0161AA                     l13167:
 24056  0161AA  0E2D               	movlw	45
 24057  0161AC                     L29:
 24058  0161AC  6E0B               	movwf	(btemp+10)^0,c
 24059  0161AE  0E00               	movlw	0
 24060  0161B0  6E0C               	movwf	(btemp+11)^0,c
 24061                           
 24062                           ;stkvar	_dtoa$6143 @ sp[(-18)+0]
 24063  0161B2  0EEE               	movlw	-18
 24064  0161B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24065  0161BA  0EEF               	movlw	-17
 24066  0161BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 24067                           
 24068                           ;stkvar	_dtoa$6143 @ sp[(-18)+0]
 24069                           ;stkvar	_i @ sp[(-18)+10]
 24070  0161C2  0EF8               	movlw	-8
 24071  0161C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 24072  0161CA  0EF9               	movlw	-7
 24073  0161CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24074  0161D2  0E43               	movlw	low _dbuf
 24075  0161D4  240B               	addwf	(btemp+10)^0,w,c
 24076  0161D6  6ED9               	movwf	fsr2l,c
 24077  0161D8  0E02               	movlw	high _dbuf
 24078  0161DA  200C               	addwfc	(btemp+11)^0,w,c
 24079  0161DC  6EDA               	movwf	fsr2h,c
 24080  0161DE  0EEE               	movlw	-18
 24081  0161E0  006F FF8F FFDF     	movff	plusw1,indf2
 24082  0161E6                     l13171:
 24083                           
 24084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 24085                           ;stkvar	_w @ sp[(-18)+14]
 24086  0161E6  0EFC               	movlw	-4
 24087  0161E8  006F FF8F FFE6     	movff	plusw1,postinc1
 24088  0161EE  006F FF8F FFE6     	movff	plusw1,postinc1
 24089                           
 24090                           ;stkvar	_i @ sp[(-20)+10]
 24091  0161F4  0E43               	movlw	low _dbuf
 24092  0161F6  6E0B               	movwf	(btemp+10)^0,c
 24093  0161F8  0E02               	movlw	high _dbuf
 24094  0161FA  6E0C               	movwf	(btemp+11)^0,c
 24095  0161FC  0EF6               	movlw	-10
 24096  0161FE  50E3               	movf	plusw1,w,c
 24097  016200  260B               	addwf	(btemp+10)^0,f,c
 24098  016202  0EF7               	movlw	-9
 24099  016204  50E3               	movf	plusw1,w,c
 24100  016206  220C               	addwfc	(btemp+11)^0,f,c
 24101  016208  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24102  01620E  0060  F033  FFE6   	movff	btemp+11,postinc1
 24103                           
 24104                           ;stkvar	_fp @ sp[(-22)+-2]
 24105  016214  0EE8               	movlw	-24
 24106  016216  006F FF8F FFE6     	movff	plusw1,postinc1
 24107  01621C  006F FF8F FFE6     	movff	plusw1,postinc1
 24108  016222  EC9A  F0D3         	call	_pad	;wreg free
 24109                           
 24110                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 24111  016226  0EE4               	movlw	228
 24112  016228  26E1               	addwf	fsr1l,f,c
 24113  01622A  0EFF               	movlw	255
 24114  01622C  22E2               	addwfc	fsr1h,f,c
 24115  01622E  0012               	return		;funcret
 24116  016230                     __end_of_dtoa:
 24117                           	opt callstack 0
 24118                           
 24119 ;; *************** function _abs *****************
 24120 ;; Defined at:
 24121 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 24122 ;; Parameters:    Size  Location     Type
 24123 ;;  a               2  [STACK] int 
 24124 ;; Auto vars:     Size  Location     Type
 24125 ;;		None
 24126 ;; Return value:  Size  Location     Type
 24127 ;;                  2  [STACK] int 
 24128 ;; Registers used:
 24129 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 24130 ;; Tracked objects:
 24131 ;;		On entry : 0/2
 24132 ;;		On exit  : 0/0
 24133 ;;		Unchanged: 0/0
 24134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24139 ;;Total ram usage:        0 bytes
 24140 ;; Hardware stack levels used:    1
 24141 ;; Hardware stack levels required when called:   15
 24142 ;; This function calls:
 24143 ;;		Nothing
 24144 ;; This function is called by:
 24145 ;;		_dtoa
 24146 ;; This function uses a reentrant model
 24147 ;;
 24148                           
 24149                           	psect	text87
 24150  01C6E2                     __ptext87:
 24151                           	opt callstack 0
 24152  01C6E2                     _abs:
 24153                           	opt callstack 0
 24154                           
 24155                           ;stkvar	_a @ sp[(0)+-2]
 24156                           
 24157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24158                           ;incstack = 0
 24159 ;; hardware stack exceeded
 24160  01C6E2  0EFF               	movlw	-1
 24161  01C6E4  BEE3               	btfsc	plusw1,7,c
 24162  01C6E6  D007               	goto	u6460
 24163  01C6E8  0EFF               	movlw	-1
 24164  01C6EA  50E3               	movf	plusw1,w,c
 24165  01C6EC  E112               	bnz	l8725
 24166  01C6EE  0EFE               	movlw	-2
 24167  01C6F0  04E3               	decf	plusw1,w,c
 24168  01C6F2  B0D8               	btfsc	status,0,c
 24169  01C6F4  D00E               	goto	l8725
 24170  01C6F6                     u6460:
 24171                           
 24172                           ;stkvar	_a @ sp[(0)+-2]
 24173  01C6F6  0EFE               	movlw	-2
 24174  01C6F8  006F FF8C  F001    	movff	plusw1,btemp
 24175  01C6FE  1E01               	comf	btemp^0,f,c
 24176  01C700  0EFF               	movlw	-1
 24177  01C702  006F FF8C  F002    	movff	plusw1,btemp+1
 24178  01C708  1E02               	comf	(btemp+1)^0,f,c
 24179  01C70A  2A01               	incf	btemp^0,f,c
 24180  01C70C  B4D8               	btfsc	status,2,c
 24181  01C70E  2A02               	incf	(btemp+1)^0,f,c
 24182  01C710  D008               	goto	l3345
 24183  01C712                     l8725:
 24184                           
 24185                           ;stkvar	_a @ sp[(0)+-2]
 24186  01C712  0EFE               	movlw	-2
 24187  01C714  006F FF8C  F001    	movff	plusw1,btemp
 24188  01C71A  0EFF               	movlw	-1
 24189  01C71C  006F FF8C  F002    	movff	plusw1,btemp+1
 24190  01C722                     l3345:
 24191                           
 24192                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 24193  01C722  52E5               	movf	postdec1,f,c
 24194  01C724  52E5               	movf	postdec1,f,c
 24195  01C726  0012               	return		;funcret
 24196  01C728                     __end_of_abs:
 24197                           	opt callstack 0
 24198                           
 24199 ;; *************** function ___aomod *****************
 24200 ;; Defined at:
 24201 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 24202 ;; Parameters:    Size  Location     Type
 24203 ;;  dividend        8  [STACK] long long 
 24204 ;;  divisor         8  [STACK] long long 
 24205 ;; Auto vars:     Size  Location     Type
 24206 ;;  sign            1  [STACK] unsigned char 
 24207 ;;  counter         1  [STACK] unsigned char 
 24208 ;; Return value:  Size  Location     Type
 24209 ;;                  8  [STACK] long long 
 24210 ;; Registers used:
 24211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 24212 ;; Tracked objects:
 24213 ;;		On entry : 0/2
 24214 ;;		On exit  : 0/0
 24215 ;;		Unchanged: 0/0
 24216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24221 ;;Total ram usage:        0 bytes
 24222 ;; Hardware stack levels used:    1
 24223 ;; Hardware stack levels required when called:   15
 24224 ;; This function calls:
 24225 ;;		Nothing
 24226 ;; This function is called by:
 24227 ;;		_dtoa
 24228 ;; This function uses a reentrant model
 24229 ;;
 24230                           
 24231                           	psect	text88
 24232  0183CA                     __ptext88:
 24233                           	opt callstack 0
 24234  0183CA                     ___aomod:
 24235                           	opt callstack 0
 24236                           
 24237                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 24238  0183CA  52E6               	movf	postinc1,f,c
 24239  0183CC  52E6               	movf	postinc1,f,c
 24240                           
 24241                           ;stkvar	_sign @ sp[(-2)+0]
 24242                           
 24243                           ;incstack = 0
 24244 ;; hardware stack exceeded
 24245  0183CE  0EFE               	movlw	-2
 24246  0183D0  6AE3               	clrf	plusw1,c
 24247                           
 24248                           ;stkvar	_dividend @ sp[(-2)+-8]
 24249  0183D2  0EFD               	movlw	-3
 24250  0183D4  AEE3               	btfss	plusw1,7,c
 24251  0183D6  D028               	goto	l8883
 24252                           
 24253                           ;stkvar	_dividend @ sp[(-2)+-8]
 24254                           ;stkvar	_dividend @ sp[(-2)+-8]
 24255  0183D8  0EF6               	movlw	-10
 24256  0183DA  6CE3               	negf	plusw1,c
 24257  0183DC  0EF7               	movlw	-9
 24258  0183DE  1EE3               	comf	plusw1,f,c
 24259  0183E0  0EF8               	movlw	-8
 24260  0183E2  1EE3               	comf	plusw1,f,c
 24261  0183E4  0EF9               	movlw	-7
 24262  0183E6  1EE3               	comf	plusw1,f,c
 24263  0183E8  0EFA               	movlw	-6
 24264  0183EA  1EE3               	comf	plusw1,f,c
 24265  0183EC  0EFB               	movlw	-5
 24266  0183EE  1EE3               	comf	plusw1,f,c
 24267  0183F0  0EFC               	movlw	-4
 24268  0183F2  1EE3               	comf	plusw1,f,c
 24269  0183F4  0EFD               	movlw	-3
 24270  0183F6  1EE3               	comf	plusw1,f,c
 24271  0183F8  E314               	bnc	u6890
 24272  0183FA  0EF7               	movlw	-9
 24273  0183FC  2AE3               	incf	plusw1,f,c
 24274  0183FE  E311               	bnc	u6890
 24275  018400  0EF8               	movlw	-8
 24276  018402  2AE3               	incf	plusw1,f,c
 24277  018404  E30E               	bnc	u6890
 24278  018406  0EF9               	movlw	-7
 24279  018408  2AE3               	incf	plusw1,f,c
 24280  01840A  E30B               	bnc	u6890
 24281  01840C  0EFA               	movlw	-6
 24282  01840E  2AE3               	incf	plusw1,f,c
 24283  018410  E308               	bnc	u6890
 24284  018412  0EFB               	movlw	-5
 24285  018414  2AE3               	incf	plusw1,f,c
 24286  018416  E305               	bnc	u6890
 24287  018418  0EFC               	movlw	-4
 24288  01841A  2AE3               	incf	plusw1,f,c
 24289  01841C  E302               	bnc	u6890
 24290  01841E  0EFD               	movlw	-3
 24291  018420  2AE3               	incf	plusw1,f,c
 24292  018422                     u6890:
 24293                           
 24294                           ;stkvar	_sign @ sp[(-2)+0]
 24295  018422  0EFE               	movlw	-2
 24296  018424  6AE3               	clrf	plusw1,c
 24297  018426  2AE3               	incf	plusw1,f,c
 24298  018428                     l8883:
 24299                           
 24300                           ;stkvar	_divisor @ sp[(-2)+-16]
 24301  018428  0EF5               	movlw	-11
 24302  01842A  AEE3               	btfss	plusw1,7,c
 24303  01842C  D025               	goto	u6910
 24304                           
 24305                           ;stkvar	_divisor @ sp[(-2)+-16]
 24306                           ;stkvar	_divisor @ sp[(-2)+-16]
 24307  01842E  0EEE               	movlw	-18
 24308  018430  6CE3               	negf	plusw1,c
 24309  018432  0EEF               	movlw	-17
 24310  018434  1EE3               	comf	plusw1,f,c
 24311  018436  0EF0               	movlw	-16
 24312  018438  1EE3               	comf	plusw1,f,c
 24313  01843A  0EF1               	movlw	-15
 24314  01843C  1EE3               	comf	plusw1,f,c
 24315  01843E  0EF2               	movlw	-14
 24316  018440  1EE3               	comf	plusw1,f,c
 24317  018442  0EF3               	movlw	-13
 24318  018444  1EE3               	comf	plusw1,f,c
 24319  018446  0EF4               	movlw	-12
 24320  018448  1EE3               	comf	plusw1,f,c
 24321  01844A  0EF5               	movlw	-11
 24322  01844C  1EE3               	comf	plusw1,f,c
 24323  01844E  E314               	bnc	u6910
 24324  018450  0EEF               	movlw	-17
 24325  018452  2AE3               	incf	plusw1,f,c
 24326  018454  E311               	bnc	u6910
 24327  018456  0EF0               	movlw	-16
 24328  018458  2AE3               	incf	plusw1,f,c
 24329  01845A  E30E               	bnc	u6910
 24330  01845C  0EF1               	movlw	-15
 24331  01845E  2AE3               	incf	plusw1,f,c
 24332  018460  E30B               	bnc	u6910
 24333  018462  0EF2               	movlw	-14
 24334  018464  2AE3               	incf	plusw1,f,c
 24335  018466  E308               	bnc	u6910
 24336  018468  0EF3               	movlw	-13
 24337  01846A  2AE3               	incf	plusw1,f,c
 24338  01846C  E305               	bnc	u6910
 24339  01846E  0EF4               	movlw	-12
 24340  018470  2AE3               	incf	plusw1,f,c
 24341  018472  E302               	bnc	u6910
 24342  018474  0EF5               	movlw	-11
 24343  018476  2AE3               	incf	plusw1,f,c
 24344  018478                     u6910:
 24345                           
 24346                           ;stkvar	_divisor @ sp[(-2)+-16]
 24347  018478  0EEE               	movlw	-18
 24348  01847A  50E3               	movf	plusw1,w,c
 24349  01847C  E116               	bnz	u6920
 24350  01847E  0EEF               	movlw	-17
 24351  018480  50E3               	movf	plusw1,w,c
 24352  018482  E113               	bnz	u6920
 24353  018484  0EF0               	movlw	-16
 24354  018486  50E3               	movf	plusw1,w,c
 24355  018488  E110               	bnz	u6920
 24356  01848A  0EF1               	movlw	-15
 24357  01848C  50E3               	movf	plusw1,w,c
 24358  01848E  E10D               	bnz	u6920
 24359  018490  0EF2               	movlw	-14
 24360  018492  50E3               	movf	plusw1,w,c
 24361  018494  E10A               	bnz	u6920
 24362  018496  0EF3               	movlw	-13
 24363  018498  50E3               	movf	plusw1,w,c
 24364  01849A  E107               	bnz	u6920
 24365  01849C  0EF4               	movlw	-12
 24366  01849E  50E3               	movf	plusw1,w,c
 24367  0184A0  E104               	bnz	u6920
 24368  0184A2  0EF5               	movlw	-11
 24369  0184A4  50E3               	movf	plusw1,w,c
 24370  0184A6  B4D8               	btfsc	status,2,c
 24371  0184A8  D075               	goto	u6950
 24372  0184AA                     u6920:
 24373                           
 24374                           ;stkvar	_counter @ sp[(-2)+1]
 24375  0184AA  0EFF               	movlw	-1
 24376  0184AC  6AE3               	clrf	plusw1,c
 24377  0184AE  D012               	goto	L30
 24378  0184B0                     l8891:
 24379                           
 24380                           ;stkvar	_divisor @ sp[(-2)+-16]
 24381  0184B0  90D8               	bcf	status,0,c
 24382  0184B2  0EEE               	movlw	-18
 24383  0184B4  36E3               	rlcf	plusw1,f,c
 24384  0184B6  0EEF               	movlw	-17
 24385  0184B8  36E3               	rlcf	plusw1,f,c
 24386  0184BA  0EF0               	movlw	-16
 24387  0184BC  36E3               	rlcf	plusw1,f,c
 24388  0184BE  0EF1               	movlw	-15
 24389  0184C0  36E3               	rlcf	plusw1,f,c
 24390  0184C2  0EF2               	movlw	-14
 24391  0184C4  36E3               	rlcf	plusw1,f,c
 24392  0184C6  0EF3               	movlw	-13
 24393  0184C8  36E3               	rlcf	plusw1,f,c
 24394  0184CA  0EF4               	movlw	-12
 24395  0184CC  36E3               	rlcf	plusw1,f,c
 24396  0184CE  0EF5               	movlw	-11
 24397  0184D0  36E3               	rlcf	plusw1,f,c
 24398                           
 24399                           ;stkvar	_counter @ sp[(-2)+1]
 24400  0184D2  0EFF               	movlw	-1
 24401  0184D4                     L30:
 24402  0184D4  2AE3               	incf	plusw1,f,c
 24403                           
 24404                           ;stkvar	_divisor @ sp[(-2)+-16]
 24405  0184D6  0EF5               	movlw	-11
 24406  0184D8  AEE3               	btfss	plusw1,7,c
 24407  0184DA  D7EA               	goto	l8891
 24408  0184DC                     u6930:
 24409                           
 24410                           ;stkvar	_divisor @ sp[(-2)+-16]
 24411                           ;stkvar	_dividend @ sp[(-2)+-8]
 24412  0184DC  50E1               	movf	fsr1l,w,c
 24413  0184DE  0FF6               	addlw	-10
 24414  0184E0  6ED9               	movwf	fsr2l,c
 24415  0184E2  50E2               	movf	fsr1h,w,c
 24416  0184E4  6EDA               	movwf	fsr2h,c
 24417  0184E6  0EFF               	movlw	255
 24418  0184E8  22DA               	addwfc	fsr2h,f,c
 24419  0184EA  0EEE               	movlw	-18
 24420  0184EC  50E3               	movf	plusw1,w,c
 24421  0184EE  5CDE               	subwf	postinc2,w,c
 24422  0184F0  0EEF               	movlw	-17
 24423  0184F2  50E3               	movf	plusw1,w,c
 24424  0184F4  58DE               	subwfb	postinc2,w,c
 24425  0184F6  0EF0               	movlw	-16
 24426  0184F8  50E3               	movf	plusw1,w,c
 24427  0184FA  58DE               	subwfb	postinc2,w,c
 24428  0184FC  0EF1               	movlw	-15
 24429  0184FE  50E3               	movf	plusw1,w,c
 24430  018500  58DE               	subwfb	postinc2,w,c
 24431  018502  0EF2               	movlw	-14
 24432  018504  50E3               	movf	plusw1,w,c
 24433  018506  58DE               	subwfb	postinc2,w,c
 24434  018508  0EF3               	movlw	-13
 24435  01850A  50E3               	movf	plusw1,w,c
 24436  01850C  58DE               	subwfb	postinc2,w,c
 24437  01850E  0EF4               	movlw	-12
 24438  018510  50E3               	movf	plusw1,w,c
 24439  018512  58DE               	subwfb	postinc2,w,c
 24440  018514  0EF5               	movlw	-11
 24441  018516  50E3               	movf	plusw1,w,c
 24442  018518  58DE               	subwfb	postinc2,w,c
 24443  01851A  A0D8               	btfss	status,0,c
 24444  01851C  D01F               	goto	l8899
 24445                           
 24446                           ;stkvar	_divisor @ sp[(-2)+-16]
 24447                           ;stkvar	_dividend @ sp[(-2)+-8]
 24448  01851E  50E1               	movf	fsr1l,w,c
 24449  018520  0FF6               	addlw	-10
 24450  018522  6ED9               	movwf	fsr2l,c
 24451  018524  50E2               	movf	fsr1h,w,c
 24452  018526  6EDA               	movwf	fsr2h,c
 24453  018528  0EFF               	movlw	255
 24454  01852A  22DA               	addwfc	fsr2h,f,c
 24455  01852C  0EEE               	movlw	-18
 24456  01852E  50E3               	movf	plusw1,w,c
 24457  018530  5EDE               	subwf	postinc2,f,c
 24458  018532  0EEF               	movlw	-17
 24459  018534  50E3               	movf	plusw1,w,c
 24460  018536  5ADE               	subwfb	postinc2,f,c
 24461  018538  0EF0               	movlw	-16
 24462  01853A  50E3               	movf	plusw1,w,c
 24463  01853C  5ADE               	subwfb	postinc2,f,c
 24464  01853E  0EF1               	movlw	-15
 24465  018540  50E3               	movf	plusw1,w,c
 24466  018542  5ADE               	subwfb	postinc2,f,c
 24467  018544  0EF2               	movlw	-14
 24468  018546  50E3               	movf	plusw1,w,c
 24469  018548  5ADE               	subwfb	postinc2,f,c
 24470  01854A  0EF3               	movlw	-13
 24471  01854C  50E3               	movf	plusw1,w,c
 24472  01854E  5ADE               	subwfb	postinc2,f,c
 24473  018550  0EF4               	movlw	-12
 24474  018552  50E3               	movf	plusw1,w,c
 24475  018554  5ADE               	subwfb	postinc2,f,c
 24476  018556  0EF5               	movlw	-11
 24477  018558  50E3               	movf	plusw1,w,c
 24478  01855A  5ADE               	subwfb	postinc2,f,c
 24479  01855C                     l8899:
 24480                           
 24481                           ;stkvar	_divisor @ sp[(-2)+-16]
 24482  01855C  90D8               	bcf	status,0,c
 24483  01855E  0EF5               	movlw	-11
 24484  018560  32E3               	rrcf	plusw1,f,c
 24485  018562  0EF4               	movlw	-12
 24486  018564  32E3               	rrcf	plusw1,f,c
 24487  018566  0EF3               	movlw	-13
 24488  018568  32E3               	rrcf	plusw1,f,c
 24489  01856A  0EF2               	movlw	-14
 24490  01856C  32E3               	rrcf	plusw1,f,c
 24491  01856E  0EF1               	movlw	-15
 24492  018570  32E3               	rrcf	plusw1,f,c
 24493  018572  0EF0               	movlw	-16
 24494  018574  32E3               	rrcf	plusw1,f,c
 24495  018576  0EEF               	movlw	-17
 24496  018578  32E3               	rrcf	plusw1,f,c
 24497  01857A  0EEE               	movlw	-18
 24498  01857C  32E3               	rrcf	plusw1,f,c
 24499                           
 24500                           ;stkvar	_counter @ sp[(-2)+1]
 24501  01857E  0EFF               	movlw	-1
 24502  018580  50E3               	movf	plusw1,w,c
 24503  018582  6E01               	movwf	btemp^0,c
 24504  018584  0E01               	movlw	1
 24505  018586  5E01               	subwf	btemp^0,f,c
 24506  018588  0EFF               	movlw	-1
 24507  01858A  0060  F007  FFE3   	movff	btemp,plusw1
 24508  018590  A4D8               	btfss	status,2,c
 24509  018592  D7A4               	goto	u6930
 24510  018594                     u6950:
 24511                           
 24512                           ;stkvar	_sign @ sp[(-2)+0]
 24513  018594  0EFE               	movlw	-2
 24514  018596  50E3               	movf	plusw1,w,c
 24515  018598  B4D8               	btfsc	status,2,c
 24516  01859A  D025               	goto	u6970
 24517                           
 24518                           ;stkvar	_dividend @ sp[(-2)+-8]
 24519                           ;stkvar	_dividend @ sp[(-2)+-8]
 24520  01859C  0EF6               	movlw	-10
 24521  01859E  6CE3               	negf	plusw1,c
 24522  0185A0  0EF7               	movlw	-9
 24523  0185A2  1EE3               	comf	plusw1,f,c
 24524  0185A4  0EF8               	movlw	-8
 24525  0185A6  1EE3               	comf	plusw1,f,c
 24526  0185A8  0EF9               	movlw	-7
 24527  0185AA  1EE3               	comf	plusw1,f,c
 24528  0185AC  0EFA               	movlw	-6
 24529  0185AE  1EE3               	comf	plusw1,f,c
 24530  0185B0  0EFB               	movlw	-5
 24531  0185B2  1EE3               	comf	plusw1,f,c
 24532  0185B4  0EFC               	movlw	-4
 24533  0185B6  1EE3               	comf	plusw1,f,c
 24534  0185B8  0EFD               	movlw	-3
 24535  0185BA  1EE3               	comf	plusw1,f,c
 24536  0185BC  E314               	bnc	u6970
 24537  0185BE  0EF7               	movlw	-9
 24538  0185C0  2AE3               	incf	plusw1,f,c
 24539  0185C2  E311               	bnc	u6970
 24540  0185C4  0EF8               	movlw	-8
 24541  0185C6  2AE3               	incf	plusw1,f,c
 24542  0185C8  E30E               	bnc	u6970
 24543  0185CA  0EF9               	movlw	-7
 24544  0185CC  2AE3               	incf	plusw1,f,c
 24545  0185CE  E30B               	bnc	u6970
 24546  0185D0  0EFA               	movlw	-6
 24547  0185D2  2AE3               	incf	plusw1,f,c
 24548  0185D4  E308               	bnc	u6970
 24549  0185D6  0EFB               	movlw	-5
 24550  0185D8  2AE3               	incf	plusw1,f,c
 24551  0185DA  E305               	bnc	u6970
 24552  0185DC  0EFC               	movlw	-4
 24553  0185DE  2AE3               	incf	plusw1,f,c
 24554  0185E0  E302               	bnc	u6970
 24555  0185E2  0EFD               	movlw	-3
 24556  0185E4  2AE3               	incf	plusw1,f,c
 24557  0185E6                     u6970:
 24558                           
 24559                           ;stkvar	_dividend @ sp[(-2)+-8]
 24560  0185E6  0EF6               	movlw	246
 24561  0185E8  24E1               	addwf	fsr1l,w,c
 24562  0185EA  6ED9               	movwf	fsr2l,c
 24563  0185EC  0EFF               	movlw	255
 24564  0185EE  20E2               	addwfc	fsr1h,w,c
 24565  0185F0  6EDA               	movwf	fsr2h,c
 24566                           
 24567                           ;stkvar	?___aomod @ sp[(-2)+-8]
 24568  0185F2  0E08               	movlw	8
 24569  0185F4  6E01               	movwf	btemp^0,c
 24570  0185F6  0EF6               	movlw	-10
 24571  0185F8                     us698999:
 24572  0185F8  006F FF7B FFE3     	movff	postinc2,plusw1
 24573  0185FE  28E8               	incf	wreg,w,c
 24574  018600  2E01               	decfsz	btemp^0,f,c
 24575  018602  D7FA               	bra	us698999
 24576                           
 24577                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 24578  018604  52E5               	movf	postdec1,f,c
 24579  018606  52E5               	movf	postdec1,f,c
 24580  018608  0012               	return		;funcret
 24581  01860A                     __end_of___aomod:
 24582                           	opt callstack 0
 24583                           
 24584 ;; *************** function ___aodiv *****************
 24585 ;; Defined at:
 24586 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 24587 ;; Parameters:    Size  Location     Type
 24588 ;;  dividend        8  [STACK] long long 
 24589 ;;  divisor         8  [STACK] long long 
 24590 ;; Auto vars:     Size  Location     Type
 24591 ;;  quotient        8  [STACK] long long 
 24592 ;;  sign            1  [STACK] unsigned char 
 24593 ;;  counter         1  [STACK] unsigned char 
 24594 ;; Return value:  Size  Location     Type
 24595 ;;                  8  [STACK] long long 
 24596 ;; Registers used:
 24597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 24598 ;; Tracked objects:
 24599 ;;		On entry : 0/2
 24600 ;;		On exit  : 0/0
 24601 ;;		Unchanged: 0/0
 24602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24607 ;;Total ram usage:        0 bytes
 24608 ;; Hardware stack levels used:    1
 24609 ;; Hardware stack levels required when called:   15
 24610 ;; This function calls:
 24611 ;;		Nothing
 24612 ;; This function is called by:
 24613 ;;		_dtoa
 24614 ;; This function uses a reentrant model
 24615 ;;
 24616                           
 24617                           	psect	text89
 24618  017C90                     __ptext89:
 24619                           	opt callstack 0
 24620  017C90                     ___aodiv:
 24621                           	opt callstack 0
 24622                           
 24623                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 24624  017C90  0E0A               	movlw	10
 24625  017C92  26E1               	addwf	fsr1l,f,c
 24626  017C94  0E00               	movlw	0
 24627  017C96  22E2               	addwfc	fsr1h,f,c
 24628                           
 24629                           ;stkvar	_sign @ sp[(-10)+8]
 24630                           
 24631                           ;incstack = 0
 24632 ;; hardware stack exceeded
 24633  017C98  0EFE               	movlw	-2
 24634  017C9A  6AE3               	clrf	plusw1,c
 24635                           
 24636                           ;stkvar	_divisor @ sp[(-10)+-16]
 24637  017C9C  0EED               	movlw	-19
 24638  017C9E  AEE3               	btfss	plusw1,7,c
 24639  017CA0  D028               	goto	l8839
 24640                           
 24641                           ;stkvar	_divisor @ sp[(-10)+-16]
 24642                           ;stkvar	_divisor @ sp[(-10)+-16]
 24643  017CA2  0EE6               	movlw	-26
 24644  017CA4  6CE3               	negf	plusw1,c
 24645  017CA6  0EE7               	movlw	-25
 24646  017CA8  1EE3               	comf	plusw1,f,c
 24647  017CAA  0EE8               	movlw	-24
 24648  017CAC  1EE3               	comf	plusw1,f,c
 24649  017CAE  0EE9               	movlw	-23
 24650  017CB0  1EE3               	comf	plusw1,f,c
 24651  017CB2  0EEA               	movlw	-22
 24652  017CB4  1EE3               	comf	plusw1,f,c
 24653  017CB6  0EEB               	movlw	-21
 24654  017CB8  1EE3               	comf	plusw1,f,c
 24655  017CBA  0EEC               	movlw	-20
 24656  017CBC  1EE3               	comf	plusw1,f,c
 24657  017CBE  0EED               	movlw	-19
 24658  017CC0  1EE3               	comf	plusw1,f,c
 24659  017CC2  E314               	bnc	u6770
 24660  017CC4  0EE7               	movlw	-25
 24661  017CC6  2AE3               	incf	plusw1,f,c
 24662  017CC8  E311               	bnc	u6770
 24663  017CCA  0EE8               	movlw	-24
 24664  017CCC  2AE3               	incf	plusw1,f,c
 24665  017CCE  E30E               	bnc	u6770
 24666  017CD0  0EE9               	movlw	-23
 24667  017CD2  2AE3               	incf	plusw1,f,c
 24668  017CD4  E30B               	bnc	u6770
 24669  017CD6  0EEA               	movlw	-22
 24670  017CD8  2AE3               	incf	plusw1,f,c
 24671  017CDA  E308               	bnc	u6770
 24672  017CDC  0EEB               	movlw	-21
 24673  017CDE  2AE3               	incf	plusw1,f,c
 24674  017CE0  E305               	bnc	u6770
 24675  017CE2  0EEC               	movlw	-20
 24676  017CE4  2AE3               	incf	plusw1,f,c
 24677  017CE6  E302               	bnc	u6770
 24678  017CE8  0EED               	movlw	-19
 24679  017CEA  2AE3               	incf	plusw1,f,c
 24680  017CEC                     u6770:
 24681                           
 24682                           ;stkvar	_sign @ sp[(-10)+8]
 24683  017CEC  0EFE               	movlw	-2
 24684  017CEE  6AE3               	clrf	plusw1,c
 24685  017CF0  2AE3               	incf	plusw1,f,c
 24686  017CF2                     l8839:
 24687                           
 24688                           ;stkvar	_dividend @ sp[(-10)+-8]
 24689  017CF2  0EF5               	movlw	-11
 24690  017CF4  AEE3               	btfss	plusw1,7,c
 24691  017CF6  D027               	goto	l8845
 24692                           
 24693                           ;stkvar	_dividend @ sp[(-10)+-8]
 24694                           ;stkvar	_dividend @ sp[(-10)+-8]
 24695  017CF8  0EEE               	movlw	-18
 24696  017CFA  6CE3               	negf	plusw1,c
 24697  017CFC  0EEF               	movlw	-17
 24698  017CFE  1EE3               	comf	plusw1,f,c
 24699  017D00  0EF0               	movlw	-16
 24700  017D02  1EE3               	comf	plusw1,f,c
 24701  017D04  0EF1               	movlw	-15
 24702  017D06  1EE3               	comf	plusw1,f,c
 24703  017D08  0EF2               	movlw	-14
 24704  017D0A  1EE3               	comf	plusw1,f,c
 24705  017D0C  0EF3               	movlw	-13
 24706  017D0E  1EE3               	comf	plusw1,f,c
 24707  017D10  0EF4               	movlw	-12
 24708  017D12  1EE3               	comf	plusw1,f,c
 24709  017D14  0EF5               	movlw	-11
 24710  017D16  1EE3               	comf	plusw1,f,c
 24711  017D18  E314               	bnc	u6790
 24712  017D1A  0EEF               	movlw	-17
 24713  017D1C  2AE3               	incf	plusw1,f,c
 24714  017D1E  E311               	bnc	u6790
 24715  017D20  0EF0               	movlw	-16
 24716  017D22  2AE3               	incf	plusw1,f,c
 24717  017D24  E30E               	bnc	u6790
 24718  017D26  0EF1               	movlw	-15
 24719  017D28  2AE3               	incf	plusw1,f,c
 24720  017D2A  E30B               	bnc	u6790
 24721  017D2C  0EF2               	movlw	-14
 24722  017D2E  2AE3               	incf	plusw1,f,c
 24723  017D30  E308               	bnc	u6790
 24724  017D32  0EF3               	movlw	-13
 24725  017D34  2AE3               	incf	plusw1,f,c
 24726  017D36  E305               	bnc	u6790
 24727  017D38  0EF4               	movlw	-12
 24728  017D3A  2AE3               	incf	plusw1,f,c
 24729  017D3C  E302               	bnc	u6790
 24730  017D3E  0EF5               	movlw	-11
 24731  017D40  2AE3               	incf	plusw1,f,c
 24732  017D42                     u6790:
 24733                           
 24734                           ;stkvar	_sign @ sp[(-10)+8]
 24735  017D42  0EFE               	movlw	-2
 24736  017D44  70E3               	btg	plusw1,0,c
 24737  017D46                     l8845:
 24738                           
 24739                           ;stkvar	_quotient @ sp[(-10)+0]
 24740  017D46  0E07               	movlw	7
 24741  017D48  6E01               	movwf	btemp^0,c
 24742  017D4A  0EF6               	movlw	-10
 24743  017D4C                     u6801:
 24744  017D4C  6AE3               	clrf	plusw1,c
 24745  017D4E  2AE8               	incf	wreg,f,c
 24746  017D50  0601               	decf	btemp^0,f,c
 24747  017D52  E2FC               	bc	u6801
 24748                           
 24749                           ;stkvar	_divisor @ sp[(-10)+-16]
 24750  017D54  0EE6               	movlw	-26
 24751  017D56  50E3               	movf	plusw1,w,c
 24752  017D58  E116               	bnz	u6810
 24753  017D5A  0EE7               	movlw	-25
 24754  017D5C  50E3               	movf	plusw1,w,c
 24755  017D5E  E113               	bnz	u6810
 24756  017D60  0EE8               	movlw	-24
 24757  017D62  50E3               	movf	plusw1,w,c
 24758  017D64  E110               	bnz	u6810
 24759  017D66  0EE9               	movlw	-23
 24760  017D68  50E3               	movf	plusw1,w,c
 24761  017D6A  E10D               	bnz	u6810
 24762  017D6C  0EEA               	movlw	-22
 24763  017D6E  50E3               	movf	plusw1,w,c
 24764  017D70  E10A               	bnz	u6810
 24765  017D72  0EEB               	movlw	-21
 24766  017D74  50E3               	movf	plusw1,w,c
 24767  017D76  E107               	bnz	u6810
 24768  017D78  0EEC               	movlw	-20
 24769  017D7A  50E3               	movf	plusw1,w,c
 24770  017D7C  E104               	bnz	u6810
 24771  017D7E  0EED               	movlw	-19
 24772  017D80  50E3               	movf	plusw1,w,c
 24773  017D82  B4D8               	btfsc	status,2,c
 24774  017D84  D088               	goto	u6840
 24775  017D86                     u6810:
 24776                           
 24777                           ;stkvar	_counter @ sp[(-10)+9]
 24778  017D86  0EFF               	movlw	-1
 24779  017D88  6AE3               	clrf	plusw1,c
 24780  017D8A  D012               	goto	L31
 24781  017D8C                     l8851:
 24782                           
 24783                           ;stkvar	_divisor @ sp[(-10)+-16]
 24784  017D8C  90D8               	bcf	status,0,c
 24785  017D8E  0EE6               	movlw	-26
 24786  017D90  36E3               	rlcf	plusw1,f,c
 24787  017D92  0EE7               	movlw	-25
 24788  017D94  36E3               	rlcf	plusw1,f,c
 24789  017D96  0EE8               	movlw	-24
 24790  017D98  36E3               	rlcf	plusw1,f,c
 24791  017D9A  0EE9               	movlw	-23
 24792  017D9C  36E3               	rlcf	plusw1,f,c
 24793  017D9E  0EEA               	movlw	-22
 24794  017DA0  36E3               	rlcf	plusw1,f,c
 24795  017DA2  0EEB               	movlw	-21
 24796  017DA4  36E3               	rlcf	plusw1,f,c
 24797  017DA6  0EEC               	movlw	-20
 24798  017DA8  36E3               	rlcf	plusw1,f,c
 24799  017DAA  0EED               	movlw	-19
 24800  017DAC  36E3               	rlcf	plusw1,f,c
 24801                           
 24802                           ;stkvar	_counter @ sp[(-10)+9]
 24803  017DAE  0EFF               	movlw	-1
 24804  017DB0                     L31:
 24805  017DB0  2AE3               	incf	plusw1,f,c
 24806                           
 24807                           ;stkvar	_divisor @ sp[(-10)+-16]
 24808  017DB2  0EED               	movlw	-19
 24809  017DB4  AEE3               	btfss	plusw1,7,c
 24810  017DB6  D7EA               	goto	l8851
 24811  017DB8                     u6820:
 24812                           
 24813                           ;stkvar	_quotient @ sp[(-10)+0]
 24814  017DB8  90D8               	bcf	status,0,c
 24815  017DBA  0EF6               	movlw	-10
 24816  017DBC  36E3               	rlcf	plusw1,f,c
 24817  017DBE  0EF7               	movlw	-9
 24818  017DC0  36E3               	rlcf	plusw1,f,c
 24819  017DC2  0EF8               	movlw	-8
 24820  017DC4  36E3               	rlcf	plusw1,f,c
 24821  017DC6  0EF9               	movlw	-7
 24822  017DC8  36E3               	rlcf	plusw1,f,c
 24823  017DCA  0EFA               	movlw	-6
 24824  017DCC  36E3               	rlcf	plusw1,f,c
 24825  017DCE  0EFB               	movlw	-5
 24826  017DD0  36E3               	rlcf	plusw1,f,c
 24827  017DD2  0EFC               	movlw	-4
 24828  017DD4  36E3               	rlcf	plusw1,f,c
 24829  017DD6  0EFD               	movlw	-3
 24830  017DD8  36E3               	rlcf	plusw1,f,c
 24831                           
 24832                           ;stkvar	_divisor @ sp[(-10)+-16]
 24833                           ;stkvar	_dividend @ sp[(-10)+-8]
 24834  017DDA  50E1               	movf	fsr1l,w,c
 24835  017DDC  0FEE               	addlw	-18
 24836  017DDE  6ED9               	movwf	fsr2l,c
 24837  017DE0  50E2               	movf	fsr1h,w,c
 24838  017DE2  6EDA               	movwf	fsr2h,c
 24839  017DE4  0EFF               	movlw	255
 24840  017DE6  22DA               	addwfc	fsr2h,f,c
 24841  017DE8  0EE6               	movlw	-26
 24842  017DEA  50E3               	movf	plusw1,w,c
 24843  017DEC  5CDE               	subwf	postinc2,w,c
 24844  017DEE  0EE7               	movlw	-25
 24845  017DF0  50E3               	movf	plusw1,w,c
 24846  017DF2  58DE               	subwfb	postinc2,w,c
 24847  017DF4  0EE8               	movlw	-24
 24848  017DF6  50E3               	movf	plusw1,w,c
 24849  017DF8  58DE               	subwfb	postinc2,w,c
 24850  017DFA  0EE9               	movlw	-23
 24851  017DFC  50E3               	movf	plusw1,w,c
 24852  017DFE  58DE               	subwfb	postinc2,w,c
 24853  017E00  0EEA               	movlw	-22
 24854  017E02  50E3               	movf	plusw1,w,c
 24855  017E04  58DE               	subwfb	postinc2,w,c
 24856  017E06  0EEB               	movlw	-21
 24857  017E08  50E3               	movf	plusw1,w,c
 24858  017E0A  58DE               	subwfb	postinc2,w,c
 24859  017E0C  0EEC               	movlw	-20
 24860  017E0E  50E3               	movf	plusw1,w,c
 24861  017E10  58DE               	subwfb	postinc2,w,c
 24862  017E12  0EED               	movlw	-19
 24863  017E14  50E3               	movf	plusw1,w,c
 24864  017E16  58DE               	subwfb	postinc2,w,c
 24865  017E18  A0D8               	btfss	status,0,c
 24866  017E1A  D021               	goto	l8863
 24867                           
 24868                           ;stkvar	_divisor @ sp[(-10)+-16]
 24869                           ;stkvar	_dividend @ sp[(-10)+-8]
 24870  017E1C  50E1               	movf	fsr1l,w,c
 24871  017E1E  0FEE               	addlw	-18
 24872  017E20  6ED9               	movwf	fsr2l,c
 24873  017E22  50E2               	movf	fsr1h,w,c
 24874  017E24  6EDA               	movwf	fsr2h,c
 24875  017E26  0EFF               	movlw	255
 24876  017E28  22DA               	addwfc	fsr2h,f,c
 24877  017E2A  0EE6               	movlw	-26
 24878  017E2C  50E3               	movf	plusw1,w,c
 24879  017E2E  5EDE               	subwf	postinc2,f,c
 24880  017E30  0EE7               	movlw	-25
 24881  017E32  50E3               	movf	plusw1,w,c
 24882  017E34  5ADE               	subwfb	postinc2,f,c
 24883  017E36  0EE8               	movlw	-24
 24884  017E38  50E3               	movf	plusw1,w,c
 24885  017E3A  5ADE               	subwfb	postinc2,f,c
 24886  017E3C  0EE9               	movlw	-23
 24887  017E3E  50E3               	movf	plusw1,w,c
 24888  017E40  5ADE               	subwfb	postinc2,f,c
 24889  017E42  0EEA               	movlw	-22
 24890  017E44  50E3               	movf	plusw1,w,c
 24891  017E46  5ADE               	subwfb	postinc2,f,c
 24892  017E48  0EEB               	movlw	-21
 24893  017E4A  50E3               	movf	plusw1,w,c
 24894  017E4C  5ADE               	subwfb	postinc2,f,c
 24895  017E4E  0EEC               	movlw	-20
 24896  017E50  50E3               	movf	plusw1,w,c
 24897  017E52  5ADE               	subwfb	postinc2,f,c
 24898  017E54  0EED               	movlw	-19
 24899  017E56  50E3               	movf	plusw1,w,c
 24900  017E58  5ADE               	subwfb	postinc2,f,c
 24901                           
 24902                           ;stkvar	_quotient @ sp[(-10)+0]
 24903  017E5A  0EF6               	movlw	-10
 24904  017E5C  80E3               	bsf	plusw1,0,c
 24905  017E5E                     l8863:
 24906                           
 24907                           ;stkvar	_divisor @ sp[(-10)+-16]
 24908  017E5E  90D8               	bcf	status,0,c
 24909  017E60  0EED               	movlw	-19
 24910  017E62  32E3               	rrcf	plusw1,f,c
 24911  017E64  0EEC               	movlw	-20
 24912  017E66  32E3               	rrcf	plusw1,f,c
 24913  017E68  0EEB               	movlw	-21
 24914  017E6A  32E3               	rrcf	plusw1,f,c
 24915  017E6C  0EEA               	movlw	-22
 24916  017E6E  32E3               	rrcf	plusw1,f,c
 24917  017E70  0EE9               	movlw	-23
 24918  017E72  32E3               	rrcf	plusw1,f,c
 24919  017E74  0EE8               	movlw	-24
 24920  017E76  32E3               	rrcf	plusw1,f,c
 24921  017E78  0EE7               	movlw	-25
 24922  017E7A  32E3               	rrcf	plusw1,f,c
 24923  017E7C  0EE6               	movlw	-26
 24924  017E7E  32E3               	rrcf	plusw1,f,c
 24925                           
 24926                           ;stkvar	_counter @ sp[(-10)+9]
 24927  017E80  0EFF               	movlw	-1
 24928  017E82  50E3               	movf	plusw1,w,c
 24929  017E84  6E01               	movwf	btemp^0,c
 24930  017E86  0E01               	movlw	1
 24931  017E88  5E01               	subwf	btemp^0,f,c
 24932  017E8A  0EFF               	movlw	-1
 24933  017E8C  0060  F007  FFE3   	movff	btemp,plusw1
 24934  017E92  A4D8               	btfss	status,2,c
 24935  017E94  D791               	goto	u6820
 24936  017E96                     u6840:
 24937                           
 24938                           ;stkvar	_sign @ sp[(-10)+8]
 24939  017E96  0EFE               	movlw	-2
 24940  017E98  50E3               	movf	plusw1,w,c
 24941  017E9A  B4D8               	btfsc	status,2,c
 24942  017E9C  D025               	goto	u6860
 24943                           
 24944                           ;stkvar	_quotient @ sp[(-10)+0]
 24945                           ;stkvar	_quotient @ sp[(-10)+0]
 24946  017E9E  0EF6               	movlw	-10
 24947  017EA0  6CE3               	negf	plusw1,c
 24948  017EA2  0EF7               	movlw	-9
 24949  017EA4  1EE3               	comf	plusw1,f,c
 24950  017EA6  0EF8               	movlw	-8
 24951  017EA8  1EE3               	comf	plusw1,f,c
 24952  017EAA  0EF9               	movlw	-7
 24953  017EAC  1EE3               	comf	plusw1,f,c
 24954  017EAE  0EFA               	movlw	-6
 24955  017EB0  1EE3               	comf	plusw1,f,c
 24956  017EB2  0EFB               	movlw	-5
 24957  017EB4  1EE3               	comf	plusw1,f,c
 24958  017EB6  0EFC               	movlw	-4
 24959  017EB8  1EE3               	comf	plusw1,f,c
 24960  017EBA  0EFD               	movlw	-3
 24961  017EBC  1EE3               	comf	plusw1,f,c
 24962  017EBE  E314               	bnc	u6860
 24963  017EC0  0EF7               	movlw	-9
 24964  017EC2  2AE3               	incf	plusw1,f,c
 24965  017EC4  E311               	bnc	u6860
 24966  017EC6  0EF8               	movlw	-8
 24967  017EC8  2AE3               	incf	plusw1,f,c
 24968  017ECA  E30E               	bnc	u6860
 24969  017ECC  0EF9               	movlw	-7
 24970  017ECE  2AE3               	incf	plusw1,f,c
 24971  017ED0  E30B               	bnc	u6860
 24972  017ED2  0EFA               	movlw	-6
 24973  017ED4  2AE3               	incf	plusw1,f,c
 24974  017ED6  E308               	bnc	u6860
 24975  017ED8  0EFB               	movlw	-5
 24976  017EDA  2AE3               	incf	plusw1,f,c
 24977  017EDC  E305               	bnc	u6860
 24978  017EDE  0EFC               	movlw	-4
 24979  017EE0  2AE3               	incf	plusw1,f,c
 24980  017EE2  E302               	bnc	u6860
 24981  017EE4  0EFD               	movlw	-3
 24982  017EE6  2AE3               	incf	plusw1,f,c
 24983  017EE8                     u6860:
 24984                           
 24985                           ;stkvar	_quotient @ sp[(-10)+0]
 24986  017EE8  0EF6               	movlw	246
 24987  017EEA  24E1               	addwf	fsr1l,w,c
 24988  017EEC  6ED9               	movwf	fsr2l,c
 24989  017EEE  0EFF               	movlw	255
 24990  017EF0  20E2               	addwfc	fsr1h,w,c
 24991  017EF2  6EDA               	movwf	fsr2h,c
 24992                           
 24993                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 24994  017EF4  0E08               	movlw	8
 24995  017EF6  6E01               	movwf	btemp^0,c
 24996  017EF8  0EEE               	movlw	-18
 24997  017EFA                     us687999:
 24998  017EFA  006F FF7B FFE3     	movff	postinc2,plusw1
 24999  017F00  28E8               	incf	wreg,w,c
 25000  017F02  2E01               	decfsz	btemp^0,f,c
 25001  017F04  D7FA               	bra	us687999
 25002                           
 25003                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 25004  017F06  0EF6               	movlw	246
 25005  017F08  26E1               	addwf	fsr1l,f,c
 25006  017F0A  0EFF               	movlw	255
 25007  017F0C  22E2               	addwfc	fsr1h,f,c
 25008  017F0E  0012               	return		;funcret
 25009  017F10                     __end_of___aodiv:
 25010                           	opt callstack 0
 25011                           
 25012 ;; *************** function _ctoa *****************
 25013 ;; Defined at:
 25014 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25015 ;; Parameters:    Size  Location     Type
 25016 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25017 ;;		 -> f(6), NULL(0), 
 25018 ;;  c               1  [STACK] unsigned char 
 25019 ;; Auto vars:     Size  Location     Type
 25020 ;;  w               2  [STACK] int 
 25021 ;;  l               2    0        int 
 25022 ;; Return value:  Size  Location     Type
 25023 ;;                  2  [STACK] int 
 25024 ;; Registers used:
 25025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 25026 ;; Tracked objects:
 25027 ;;		On entry : 0/0
 25028 ;;		On exit  : 0/0
 25029 ;;		Unchanged: 0/0
 25030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25035 ;;Total ram usage:        0 bytes
 25036 ;; Hardware stack levels used:    1
 25037 ;; Hardware stack levels required when called:   20
 25038 ;; This function calls:
 25039 ;;		_pad
 25040 ;; This function is called by:
 25041 ;;		_vfpfcnvrt
 25042 ;; This function uses a reentrant model
 25043 ;;
 25044                           
 25045                           	psect	text90
 25046  01BB3C                     __ptext90:
 25047                           	opt callstack 0
 25048  01BB3C                     _ctoa:
 25049                           	opt callstack 0
 25050                           
 25051                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25052  01BB3C  52E6               	movf	postinc1,f,c
 25053  01BB3E  52E6               	movf	postinc1,f,c
 25054                           
 25055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 25056                           
 25057                           ;incstack = 0
 25058 ;; hardware stack exceeded
 25059  01BB40  503A               	movf	_width^0,w,c
 25060  01BB42  103B               	iorwf	(_width+1)^0,w,c
 25061  01BB44  A4D8               	btfss	status,2,c
 25062  01BB46  D009               	goto	l13099
 25063                           
 25064                           ;stkvar	_w @ sp[(-2)+0]
 25065  01BB48  0EFE               	movlw	-2
 25066  01BB4A  0060  F0EB  FFE3   	movff	_width,plusw1
 25067  01BB50  0EFF               	movlw	-1
 25068  01BB52  0060  F0EF  FFE3   	movff	_width+1,plusw1
 25069  01BB58  D016               	goto	l13101
 25070  01BB5A                     l13099:
 25071  01BB5A  0EFF               	movlw	255
 25072  01BB5C  6E0B               	movwf	(btemp+10)^0,c
 25073  01BB5E  0EFF               	movlw	255
 25074  01BB60  6E0C               	movwf	(btemp+11)^0,c
 25075  01BB62  0060  F0E8  F009   	movff	_width,btemp+8
 25076  01BB68  0060  F0EC  F00A   	movff	_width+1,btemp+9
 25077  01BB6E  500B               	movf	(btemp+10)^0,w,c
 25078  01BB70  2609               	addwf	(btemp+8)^0,f,c
 25079  01BB72  500C               	movf	(btemp+11)^0,w,c
 25080  01BB74  220A               	addwfc	(btemp+9)^0,f,c
 25081                           
 25082                           ;stkvar	_w @ sp[(-2)+0]
 25083  01BB76  0EFE               	movlw	-2
 25084  01BB78  0060  F027  FFE3   	movff	btemp+8,plusw1
 25085  01BB7E  0EFF               	movlw	-1
 25086  01BB80  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25087  01BB86                     l13101:
 25088                           
 25089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 25090                           ;stkvar	_c @ sp[(-2)+-3]
 25091  01BB86  0EFB               	movlw	-5
 25092  01BB88  006F FF8C  F243    	movff	plusw1,_dbuf
 25093                           
 25094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 25095  01BB8E  0102               	movlb	2	; () banked
 25096  01BB90  6B44               	clrf	(_dbuf+1)& (0+255),b
 25097                           
 25098                           ; BSR set to: 2
 25099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 25100                           ;stkvar	_w @ sp[(-2)+0]
 25101  01BB92  0EFE               	movlw	-2
 25102  01BB94  006F FF8F FFE6     	movff	plusw1,postinc1
 25103  01BB9A  006F FF8F FFE6     	movff	plusw1,postinc1
 25104  01BBA0  0E43               	movlw	low _dbuf
 25105  01BBA2  6EE6               	movwf	postinc1,c
 25106  01BBA4  0E02               	movlw	high _dbuf
 25107  01BBA6  6EE6               	movwf	postinc1,c
 25108                           
 25109                           ;stkvar	_fp @ sp[(-6)+-2]
 25110  01BBA8  0EF8               	movlw	-8
 25111  01BBAA  006F FF8F FFE6     	movff	plusw1,postinc1
 25112  01BBB0  006F FF8F FFE6     	movff	plusw1,postinc1
 25113  01BBB6  EC9A  F0D3         	call	_pad	;wreg free
 25114                           
 25115                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 25116  01BBBA  0EFB               	movlw	251
 25117  01BBBC  26E1               	addwf	fsr1l,f,c
 25118  01BBBE  0EFF               	movlw	255
 25119  01BBC0  22E2               	addwfc	fsr1h,f,c
 25120  01BBC2  0012               	return		;funcret
 25121  01BBC4                     __end_of_ctoa:
 25122                           	opt callstack 0
 25123                           
 25124 ;; *************** function _pad *****************
 25125 ;; Defined at:
 25126 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25127 ;; Parameters:    Size  Location     Type
 25128 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25129 ;;		 -> f(6), NULL(0), 
 25130 ;;  buf             2  [STACK] PTR unsigned char 
 25131 ;;		 -> dbuf(80), 
 25132 ;;  p               2  [STACK] int 
 25133 ;; Auto vars:     Size  Location     Type
 25134 ;;  w               2  [STACK] int 
 25135 ;;  i               2  [STACK] int 
 25136 ;; Return value:  Size  Location     Type
 25137 ;;                  2  [STACK] int 
 25138 ;; Registers used:
 25139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 25140 ;; Tracked objects:
 25141 ;;		On entry : 0/2
 25142 ;;		On exit  : 0/0
 25143 ;;		Unchanged: 0/0
 25144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25149 ;;Total ram usage:        0 bytes
 25150 ;; Hardware stack levels used:    1
 25151 ;; Hardware stack levels required when called:   19
 25152 ;; This function calls:
 25153 ;;		_fputc
 25154 ;;		_fputs
 25155 ;;		_strlen
 25156 ;; This function is called by:
 25157 ;;		_ctoa
 25158 ;;		_dtoa
 25159 ;;		_efgtoa
 25160 ;;		_utoa
 25161 ;;		_xtoa
 25162 ;; This function uses a reentrant model
 25163 ;;
 25164                           
 25165                           	psect	text91
 25166  01A734                     __ptext91:
 25167                           	opt callstack 0
 25168  01A734                     _pad:
 25169                           	opt callstack 0
 25170                           
 25171                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25172  01A734  52E6               	movf	postinc1,f,c
 25173  01A736  52E6               	movf	postinc1,f,c
 25174  01A738  52E6               	movf	postinc1,f,c
 25175  01A73A  52E6               	movf	postinc1,f,c
 25176                           
 25177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 25178                           
 25179                           ;incstack = 0
 25180 ;; hardware stack exceeded
 25181  01A73C  A03E               	btfss	_flags^0,0,c
 25182  01A73E  D010               	goto	l13061
 25183                           
 25184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 25185                           ;stkvar	_fp @ sp[(-4)+-2]
 25186  01A740  0EFA               	movlw	-6
 25187  01A742  006F FF8F FFE6     	movff	plusw1,postinc1
 25188  01A748  006F FF8F FFE6     	movff	plusw1,postinc1
 25189                           
 25190                           ;stkvar	_buf @ sp[(-6)+-4]
 25191  01A74E  0EF6               	movlw	-10
 25192  01A750  006F FF8F FFE6     	movff	plusw1,postinc1
 25193  01A756  006F FF8F FFE6     	movff	plusw1,postinc1
 25194  01A75C  EC30  F0DC         	call	_fputs	;wreg free
 25195  01A760                     l13061:
 25196                           
 25197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 25198                           ;stkvar	_p @ sp[(-4)+-6]
 25199  01A760  0EF7               	movlw	-9
 25200  01A762  BEE3               	btfsc	plusw1,7,c
 25201  01A764  D011               	goto	l13065
 25202                           
 25203                           ;stkvar	_p @ sp[(-4)+-6]
 25204                           ;stkvar	_w @ sp[(-4)+0]
 25205  01A766  0EF6               	movlw	-10
 25206  01A768  006F FF8C  F001    	movff	plusw1,btemp
 25207  01A76E  0EFC               	movlw	-4
 25208  01A770  0060  F007  FFE3   	movff	btemp,plusw1
 25209  01A776  0EF7               	movlw	-9
 25210  01A778  006F FF8C  F001    	movff	plusw1,btemp
 25211  01A77E  0EFD               	movlw	-3
 25212  01A780  0060  F007  FFE3   	movff	btemp,plusw1
 25213  01A786  D004               	goto	l2399
 25214  01A788                     l13065:
 25215                           
 25216                           ;stkvar	_w @ sp[(-4)+0]
 25217  01A788  0EFC               	movlw	-4
 25218  01A78A  6AE3               	clrf	plusw1,c
 25219  01A78C  0EFD               	movlw	-3
 25220  01A78E  6AE3               	clrf	plusw1,c
 25221  01A790                     l2399:
 25222                           
 25223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 25224                           ;stkvar	_i @ sp[(-4)+2]
 25225  01A790  0EFE               	movlw	-2
 25226  01A792  6AE3               	clrf	plusw1,c
 25227  01A794  0EFF               	movlw	-1
 25228  01A796  6AE3               	clrf	plusw1,c
 25229                           
 25230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 25231  01A798  D01E               	goto	l13071
 25232  01A79A                     l13067:
 25233                           
 25234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 25235                           ;stkvar	_fp @ sp[(-4)+-2]
 25236  01A79A  0EFA               	movlw	-6
 25237  01A79C  006F FF8F FFE6     	movff	plusw1,postinc1
 25238  01A7A2  006F FF8F FFE6     	movff	plusw1,postinc1
 25239  01A7A8  0E20               	movlw	32
 25240  01A7AA  6EE6               	movwf	postinc1,c
 25241  01A7AC  0E00               	movlw	0
 25242  01A7AE  6EE6               	movwf	postinc1,c
 25243  01A7B0  ECF0  F0D1         	call	_fputc	;wreg free
 25244                           
 25245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 25246                           ;stkvar	_i @ sp[(-4)+2]
 25247  01A7B4  0EFE               	movlw	-2
 25248  01A7B6  50E3               	movf	plusw1,w,c
 25249  01A7B8  0F01               	addlw	1
 25250  01A7BA  6E01               	movwf	btemp^0,c
 25251  01A7BC  0EFE               	movlw	-2
 25252  01A7BE  0060  F007  FFE3   	movff	btemp,plusw1
 25253  01A7C4  6A01               	clrf	btemp^0,c
 25254  01A7C6  0EFF               	movlw	-1
 25255  01A7C8  50E3               	movf	plusw1,w,c
 25256  01A7CA  2001               	addwfc	btemp^0,w,c
 25257  01A7CC  6E01               	movwf	btemp^0,c
 25258  01A7CE  0EFF               	movlw	-1
 25259  01A7D0  0060  F007  FFE3   	movff	btemp,plusw1
 25260  01A7D6                     l13071:
 25261                           
 25262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 25263                           ;stkvar	_w @ sp[(-4)+0]
 25264                           ;stkvar	_i @ sp[(-4)+2]
 25265  01A7D6  50E1               	movf	fsr1l,w,c
 25266  01A7D8  0FFE               	addlw	-2
 25267  01A7DA  6ED9               	movwf	fsr2l,c
 25268  01A7DC  50E2               	movf	fsr1h,w,c
 25269  01A7DE  6EDA               	movwf	fsr2h,c
 25270  01A7E0  0EFF               	movlw	255
 25271  01A7E2  22DA               	addwfc	fsr2h,f,c
 25272  01A7E4  0EFC               	movlw	-4
 25273  01A7E6  50E3               	movf	plusw1,w,c
 25274  01A7E8  5CDE               	subwf	postinc2,w,c
 25275  01A7EA  50DE               	movf	postinc2,w,c
 25276  01A7EC  0A80               	xorlw	128
 25277  01A7EE  6E01               	movwf	btemp^0,c
 25278  01A7F0  0EFD               	movlw	-3
 25279  01A7F2  50E3               	movf	plusw1,w,c
 25280  01A7F4  0A80               	xorlw	128
 25281  01A7F6  5801               	subwfb	btemp^0,w,c
 25282  01A7F8  A0D8               	btfss	status,0,c
 25283  01A7FA  D7CF               	goto	l13067
 25284                           
 25285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 25286  01A7FC  B03E               	btfsc	_flags^0,0,c
 25287  01A7FE  D010               	goto	l13075
 25288                           
 25289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 25290                           ;stkvar	_fp @ sp[(-4)+-2]
 25291  01A800  0EFA               	movlw	-6
 25292  01A802  006F FF8F FFE6     	movff	plusw1,postinc1
 25293  01A808  006F FF8F FFE6     	movff	plusw1,postinc1
 25294                           
 25295                           ;stkvar	_buf @ sp[(-6)+-4]
 25296  01A80E  0EF6               	movlw	-10
 25297  01A810  006F FF8F FFE6     	movff	plusw1,postinc1
 25298  01A816  006F FF8F FFE6     	movff	plusw1,postinc1
 25299  01A81C  EC30  F0DC         	call	_fputs	;wreg free
 25300  01A820                     l13075:
 25301                           
 25302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 25303                           ;stkvar	_w @ sp[(-4)+0]
 25304                           ;stkvar	_buf @ sp[(-4)+-4]
 25305  01A820  0EF8               	movlw	-8
 25306  01A822  006F FF8F FFE6     	movff	plusw1,postinc1
 25307  01A828  006F FF8F FFE6     	movff	plusw1,postinc1
 25308  01A82E  ECDF  F0DB         	call	_strlen	;wreg free
 25309  01A832  0EFC               	movlw	-4
 25310  01A834  50E3               	movf	plusw1,w,c
 25311  01A836  2601               	addwf	btemp^0,f,c
 25312  01A838  0EFD               	movlw	-3
 25313  01A83A  50E3               	movf	plusw1,w,c
 25314  01A83C  2202               	addwfc	(btemp+1)^0,f,c
 25315                           
 25316                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 25317  01A83E  0EF6               	movlw	246
 25318  01A840  26E1               	addwf	fsr1l,f,c
 25319  01A842  0EFF               	movlw	255
 25320  01A844  22E2               	addwfc	fsr1h,f,c
 25321  01A846  0012               	return		;funcret
 25322  01A848                     __end_of_pad:
 25323                           	opt callstack 0
 25324                           
 25325 ;; *************** function _strlen *****************
 25326 ;; Defined at:
 25327 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 25328 ;; Parameters:    Size  Location     Type
 25329 ;;  s               2  [STACK] PTR const unsigned char 
 25330 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 25331 ;;		 -> spin(120), STR_63(9), STR_62(12), D.lcd(480), 
 25332 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 25333 ;;		 -> V(192), 
 25334 ;; Auto vars:     Size  Location     Type
 25335 ;;  a               2  [STACK] PTR const unsigned char 
 25336 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 25337 ;;		 -> spin(120), STR_63(9), STR_62(12), D.lcd(480), 
 25338 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 25339 ;;		 -> V(192), 
 25340 ;; Return value:  Size  Location     Type
 25341 ;;                  2  [STACK] unsigned int 
 25342 ;; Registers used:
 25343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 25344 ;; Tracked objects:
 25345 ;;		On entry : 0/0
 25346 ;;		On exit  : 0/0
 25347 ;;		Unchanged: 0/0
 25348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25353 ;;Total ram usage:        0 bytes
 25354 ;; Hardware stack levels used:    1
 25355 ;; Hardware stack levels required when called:   15
 25356 ;; This function calls:
 25357 ;;		Nothing
 25358 ;; This function is called by:
 25359 ;;		_eaDogM_WriteString
 25360 ;;		_spinners
 25361 ;;		_calc_bsoc
 25362 ;;		_pad
 25363 ;;		_stoa
 25364 ;; This function uses a reentrant model
 25365 ;;
 25366                           
 25367                           	psect	text92
 25368  01B7BE                     __ptext92:
 25369                           	opt callstack 0
 25370  01B7BE                     _strlen:
 25371                           	opt callstack 0
 25372                           
 25373                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25374  01B7BE  52E6               	movf	postinc1,f,c
 25375  01B7C0  52E6               	movf	postinc1,f,c
 25376                           
 25377                           ;stkvar	_s @ sp[(-2)+-2]
 25378                           
 25379                           ;incstack = 0
 25380 ;; hardware stack exceeded
 25381  01B7C2  0EFC               	movlw	-4
 25382  01B7C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 25383  01B7CA  0EFD               	movlw	-3
 25384  01B7CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 25385                           
 25386                           ;stkvar	_a @ sp[(-2)+0]
 25387  01B7D2  0EFF               	movlw	-1
 25388  01B7D4  0060  F033  FFE3   	movff	btemp+11,plusw1
 25389  01B7DA  0EFE               	movlw	-2
 25390  01B7DC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25391  01B7E2  D011               	goto	l8415
 25392  01B7E4                     l8413:
 25393                           
 25394                           ;stkvar	_s @ sp[(-2)+-2]
 25395  01B7E4  0EFC               	movlw	-4
 25396  01B7E6  50E3               	movf	plusw1,w,c
 25397  01B7E8  0F01               	addlw	1
 25398  01B7EA  6E01               	movwf	btemp^0,c
 25399  01B7EC  0EFC               	movlw	-4
 25400  01B7EE  0060  F007  FFE3   	movff	btemp,plusw1
 25401  01B7F4  6A01               	clrf	btemp^0,c
 25402  01B7F6  0EFD               	movlw	-3
 25403  01B7F8  50E3               	movf	plusw1,w,c
 25404  01B7FA  2001               	addwfc	btemp^0,w,c
 25405  01B7FC  6E01               	movwf	btemp^0,c
 25406  01B7FE  0EFD               	movlw	-3
 25407  01B800  0060  F007  FFE3   	movff	btemp,plusw1
 25408  01B806                     l8415:
 25409                           
 25410                           ;stkvar	_s @ sp[(-2)+-2]
 25411  01B806  0EFC               	movlw	-4
 25412  01B808  006F FF8F FFF6     	movff	plusw1,tblptrl
 25413  01B80E  0EFD               	movlw	-3
 25414  01B810  006F FF8F FFF7     	movff	plusw1,tblptrh
 25415  01B816  0E00               	movlw	low (__mediumconst shr (0+16))
 25416  01B818  6EF8               	movwf	tblptru,c
 25417  01B81A  0E1F               	movlw	(high __ramtop+-1)
 25418  01B81C  64F7               	cpfsgt	tblptrh,c
 25419  01B81E  D003               	bra	u5887
 25420  01B820  0008               	tblrd		*
 25421  01B822  50F5               	movf	tablat,w,c
 25422  01B824  D007               	bra	u5880
 25423  01B826                     u5887:
 25424  01B826  006F FFDB FFE9     	movff	tblptrl,fsr0l
 25425  01B82C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 25426  01B832  50EF               	movf	indf0,w,c
 25427  01B834                     u5880:
 25428  01B834  0900               	iorlw	0
 25429  01B836  A4D8               	btfss	status,2,c
 25430  01B838  D7D5               	goto	l8413
 25431                           
 25432                           ;stkvar	_a @ sp[(-2)+0]
 25433                           ;stkvar	_s @ sp[(-2)+-2]
 25434  01B83A  0EFC               	movlw	-4
 25435  01B83C  006F FF8C  F001    	movff	plusw1,btemp
 25436  01B842  0EFD               	movlw	-3
 25437  01B844  006F FF8C  F002    	movff	plusw1,btemp+1
 25438  01B84A  0EFE               	movlw	-2
 25439  01B84C  50E3               	movf	plusw1,w,c
 25440  01B84E  5E01               	subwf	btemp^0,f,c
 25441  01B850  0EFF               	movlw	-1
 25442  01B852  50E3               	movf	plusw1,w,c
 25443  01B854  5A02               	subwfb	(btemp+1)^0,f,c
 25444                           
 25445                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 25446  01B856  52E5               	movf	postdec1,f,c
 25447  01B858  52E5               	movf	postdec1,f,c
 25448  01B85A  52E5               	movf	postdec1,f,c
 25449  01B85C  52E5               	movf	postdec1,f,c
 25450  01B85E  0012               	return		;funcret
 25451  01B860                     __end_of_strlen:
 25452                           	opt callstack 0
 25453                           
 25454 ;; *************** function _fputs *****************
 25455 ;; Defined at:
 25456 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 25457 ;; Parameters:    Size  Location     Type
 25458 ;;  s               2  [STACK] PTR const unsigned char 
 25459 ;;		 -> dbuf(80), 
 25460 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25461 ;;		 -> f(6), NULL(0), 
 25462 ;; Auto vars:     Size  Location     Type
 25463 ;;  i               2  [STACK] int 
 25464 ;;  c               1  [STACK] unsigned char 
 25465 ;; Return value:  Size  Location     Type
 25466 ;;                  2  [STACK] int 
 25467 ;; Registers used:
 25468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 25469 ;; Tracked objects:
 25470 ;;		On entry : 0/2
 25471 ;;		On exit  : 0/0
 25472 ;;		Unchanged: 0/0
 25473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25478 ;;Total ram usage:        0 bytes
 25479 ;; Hardware stack levels used:    1
 25480 ;; Hardware stack levels required when called:   18
 25481 ;; This function calls:
 25482 ;;		_fputc
 25483 ;; This function is called by:
 25484 ;;		_pad
 25485 ;; This function uses a reentrant model
 25486 ;;
 25487                           
 25488                           	psect	text93
 25489  01B860                     __ptext93:
 25490                           	opt callstack 0
 25491  01B860                     _fputs:
 25492                           	opt callstack 0
 25493                           
 25494                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25495  01B860  52E6               	movf	postinc1,f,c
 25496  01B862  52E6               	movf	postinc1,f,c
 25497  01B864  52E6               	movf	postinc1,f,c
 25498                           
 25499                           ;stkvar	_i @ sp[(-3)+0]
 25500                           
 25501                           ;incstack = 0
 25502 ;; hardware stack exceeded
 25503  01B866  0EFD               	movlw	-3
 25504  01B868  6AE3               	clrf	plusw1,c
 25505  01B86A  0EFE               	movlw	-2
 25506  01B86C  6AE3               	clrf	plusw1,c
 25507  01B86E  D01F               	goto	l13013
 25508  01B870                     l13009:
 25509                           
 25510                           ;stkvar	_fp @ sp[(-3)+-4]
 25511  01B870  0EF9               	movlw	-7
 25512  01B872  006F FF8F FFE6     	movff	plusw1,postinc1
 25513  01B878  006F FF8F FFE6     	movff	plusw1,postinc1
 25514                           
 25515                           ;stkvar	_c @ sp[(-5)+2]
 25516  01B87E  0EFD               	movlw	-3
 25517  01B880  50E3               	movf	plusw1,w,c
 25518  01B882  6EE6               	movwf	postinc1,c
 25519  01B884  0E00               	movlw	0
 25520  01B886  6EE6               	movwf	postinc1,c
 25521  01B888  ECF0  F0D1         	call	_fputc	;wreg free
 25522                           
 25523                           ;stkvar	_i @ sp[(-3)+0]
 25524  01B88C  0EFD               	movlw	-3
 25525  01B88E  50E3               	movf	plusw1,w,c
 25526  01B890  0F01               	addlw	1
 25527  01B892  6E01               	movwf	btemp^0,c
 25528  01B894  0EFD               	movlw	-3
 25529  01B896  0060  F007  FFE3   	movff	btemp,plusw1
 25530  01B89C  6A01               	clrf	btemp^0,c
 25531  01B89E  0EFE               	movlw	-2
 25532  01B8A0  50E3               	movf	plusw1,w,c
 25533  01B8A2  2001               	addwfc	btemp^0,w,c
 25534  01B8A4  6E01               	movwf	btemp^0,c
 25535  01B8A6  0EFE               	movlw	-2
 25536  01B8A8  0060  F007  FFE3   	movff	btemp,plusw1
 25537  01B8AE                     l13013:
 25538                           
 25539                           ;stkvar	_i @ sp[(-3)+0]
 25540  01B8AE  0EFD               	movlw	-3
 25541  01B8B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 25542  01B8B6  0EFE               	movlw	-2
 25543  01B8B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 25544                           
 25545                           ;stkvar	_s @ sp[(-3)+-2]
 25546  01B8BE  0EFB               	movlw	-5
 25547  01B8C0  006F FF8C  F009    	movff	plusw1,btemp+8
 25548  01B8C6  0EFC               	movlw	-4
 25549  01B8C8  006F FF8C  F00A    	movff	plusw1,btemp+9
 25550  01B8CE  500B               	movf	(btemp+10)^0,w,c
 25551  01B8D0  2409               	addwf	(btemp+8)^0,w,c
 25552  01B8D2  6ED9               	movwf	fsr2l,c
 25553  01B8D4  500C               	movf	(btemp+11)^0,w,c
 25554  01B8D6  200A               	addwfc	(btemp+9)^0,w,c
 25555  01B8D8  6EDA               	movwf	fsr2h,c
 25556  01B8DA  50DF               	movf	indf2,w,c
 25557  01B8DC  6E0C               	movwf	(btemp+11)^0,c
 25558                           
 25559                           ;stkvar	_c @ sp[(-3)+2]
 25560  01B8DE  0EFF               	movlw	-1
 25561  01B8E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25562  01B8E6  0EFF               	movlw	-1
 25563  01B8E8  50E3               	movf	plusw1,w,c
 25564  01B8EA  A4D8               	btfss	status,2,c
 25565  01B8EC  D7C1               	goto	l13009
 25566                           
 25567                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 25568  01B8EE  0EF9               	movlw	249
 25569  01B8F0  26E1               	addwf	fsr1l,f,c
 25570  01B8F2  0EFF               	movlw	255
 25571  01B8F4  22E2               	addwfc	fsr1h,f,c
 25572  01B8F6  0012               	return		;funcret
 25573  01B8F8                     __end_of_fputs:
 25574                           	opt callstack 0
 25575                           
 25576 ;; *************** function _fputc *****************
 25577 ;; Defined at:
 25578 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 25579 ;; Parameters:    Size  Location     Type
 25580 ;;  c               2  [STACK] int 
 25581 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25582 ;;		 -> f(6), NULL(0), 
 25583 ;; Auto vars:     Size  Location     Type
 25584 ;;		None
 25585 ;; Return value:  Size  Location     Type
 25586 ;;                  2  [STACK] int 
 25587 ;; Registers used:
 25588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 25589 ;; Tracked objects:
 25590 ;;		On entry : 0/0
 25591 ;;		On exit  : 0/0
 25592 ;;		Unchanged: 0/0
 25593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25598 ;;Total ram usage:        0 bytes
 25599 ;; Hardware stack levels used:    1
 25600 ;; Hardware stack levels required when called:   17
 25601 ;; This function calls:
 25602 ;;		_putch
 25603 ;; This function is called by:
 25604 ;;		_pad
 25605 ;;		_stoa
 25606 ;;		_vfpfcnvrt
 25607 ;;		_fputs
 25608 ;; This function uses a reentrant model
 25609 ;;
 25610                           
 25611                           	psect	text94
 25612  01A3E0                     __ptext94:
 25613                           	opt callstack 0
 25614  01A3E0                     _fputc:
 25615                           	opt callstack 0
 25616                           
 25617                           ;stkvar	_fp @ sp[(0)+-4]
 25618                           
 25619                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25620                           ;incstack = 0
 25621 ;; hardware stack exceeded
 25622  01A3E0  0EFC               	movlw	-4
 25623  01A3E2  006F FF8C  F001    	movff	plusw1,btemp
 25624  01A3E8  0EFD               	movlw	-3
 25625  01A3EA  50E3               	movf	plusw1,w,c
 25626  01A3EC  1001               	iorwf	btemp^0,w,c
 25627  01A3EE  B4D8               	btfsc	status,2,c
 25628  01A3F0  D009               	goto	u11670
 25629                           
 25630                           ;stkvar	_fp @ sp[(0)+-4]
 25631  01A3F2  0EFC               	movlw	-4
 25632  01A3F4  006F FF8C  F001    	movff	plusw1,btemp
 25633  01A3FA  0EFD               	movlw	-3
 25634  01A3FC  50E3               	movf	plusw1,w,c
 25635  01A3FE  1001               	iorwf	btemp^0,w,c
 25636  01A400  A4D8               	btfss	status,2,c
 25637  01A402  D006               	goto	l12997
 25638  01A404                     u11670:
 25639                           
 25640                           ;stkvar	_c @ sp[(0)+-2]
 25641  01A404  0EFE               	movlw	-2
 25642  01A406  50E3               	movf	plusw1,w,c
 25643  01A408  6EE6               	movwf	postinc1,c
 25644  01A40A  ECCC  F0E8         	call	_putch	;wreg free
 25645  01A40E  D075               	goto	l3445
 25646  01A410                     l12997:
 25647                           
 25648                           ;stkvar	_fp @ sp[(0)+-4]
 25649  01A410  0EFC               	movlw	-4
 25650  01A412  006F FF8C  F00B    	movff	plusw1,btemp+10
 25651  01A418  0EFD               	movlw	-3
 25652  01A41A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25653  01A420  0E04               	movlw	4
 25654  01A422  240B               	addwf	(btemp+10)^0,w,c
 25655  01A424  6ED9               	movwf	fsr2l,c
 25656  01A426  0E00               	movlw	0
 25657  01A428  200C               	addwfc	(btemp+11)^0,w,c
 25658  01A42A  6EDA               	movwf	fsr2h,c
 25659  01A42C  50DE               	movf	postinc2,w,c
 25660  01A42E  10DE               	iorwf	postinc2,w,c
 25661  01A430  B4D8               	btfsc	status,2,c
 25662  01A432  D026               	goto	u11690
 25663                           
 25664                           ;stkvar	_fp @ sp[(0)+-4]
 25665  01A434  0EFC               	movlw	-4
 25666  01A436  006F FF8C  F00B    	movff	plusw1,btemp+10
 25667  01A43C  0EFD               	movlw	-3
 25668  01A43E  006F FF8C  F00C    	movff	plusw1,btemp+11
 25669  01A444  0E04               	movlw	4
 25670  01A446  240B               	addwf	(btemp+10)^0,w,c
 25671  01A448  6ED9               	movwf	fsr2l,c
 25672  01A44A  0E00               	movlw	0
 25673  01A44C  200C               	addwfc	(btemp+11)^0,w,c
 25674  01A44E  6EDA               	movwf	fsr2h,c
 25675                           
 25676                           ;stkvar	_fp @ sp[(0)+-4]
 25677  01A450  0EFC               	movlw	-4
 25678  01A452  006F FF8C  F00B    	movff	plusw1,btemp+10
 25679  01A458  0EFD               	movlw	-3
 25680  01A45A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25681  01A460  0E02               	movlw	2
 25682  01A462  240B               	addwf	(btemp+10)^0,w,c
 25683  01A464  6EE9               	movwf	fsr0l,c
 25684  01A466  0E00               	movlw	0
 25685  01A468  200C               	addwfc	(btemp+11)^0,w,c
 25686  01A46A  6EEA               	movwf	fsr0h,c
 25687  01A46C  50DE               	movf	postinc2,w,c
 25688  01A46E  5CEE               	subwf	postinc0,w,c
 25689  01A470  50EE               	movf	postinc0,w,c
 25690  01A472  0A80               	xorlw	128
 25691  01A474  6E01               	movwf	btemp^0,c
 25692  01A476  50DE               	movf	postinc2,w,c
 25693  01A478  0A80               	xorlw	128
 25694  01A47A  5801               	subwfb	btemp^0,w,c
 25695  01A47C  B0D8               	btfsc	status,0,c
 25696  01A47E  D03D               	goto	l3445
 25697  01A480                     u11690:
 25698                           
 25699                           ;stkvar	_c @ sp[(0)+-2]
 25700                           ;stkvar	_fp @ sp[(0)+-4]
 25701  01A480  0EFC               	movlw	-4
 25702  01A482  006F FF8C  F00B    	movff	plusw1,btemp+10
 25703  01A488  0EFD               	movlw	-3
 25704  01A48A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25705  01A490  0E02               	movlw	2
 25706  01A492  240B               	addwf	(btemp+10)^0,w,c
 25707  01A494  6ED9               	movwf	fsr2l,c
 25708  01A496  0E00               	movlw	0
 25709  01A498  200C               	addwfc	(btemp+11)^0,w,c
 25710  01A49A  6EDA               	movwf	fsr2h,c
 25711  01A49C  006F FF78  F00B    	movff	postinc2,btemp+10
 25712  01A4A2  006F FF74  F00C    	movff	postdec2,btemp+11
 25713                           
 25714                           ;stkvar	_fp @ sp[(0)+-4]
 25715  01A4A8  0EFC               	movlw	-4
 25716  01A4AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 25717  01A4B0  0EFD               	movlw	-3
 25718  01A4B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 25719  01A4B8  006F FF78  F009    	movff	postinc2,btemp+8
 25720  01A4BE  006F FF74  F00A    	movff	postdec2,btemp+9
 25721  01A4C4  500B               	movf	(btemp+10)^0,w,c
 25722  01A4C6  2409               	addwf	(btemp+8)^0,w,c
 25723  01A4C8  6ED9               	movwf	fsr2l,c
 25724  01A4CA  500C               	movf	(btemp+11)^0,w,c
 25725  01A4CC  200A               	addwfc	(btemp+9)^0,w,c
 25726  01A4CE  6EDA               	movwf	fsr2h,c
 25727  01A4D0  0EFE               	movlw	-2
 25728  01A4D2  006F FF8F FFDF     	movff	plusw1,indf2
 25729                           
 25730                           ;stkvar	_fp @ sp[(0)+-4]
 25731  01A4D8  0EFC               	movlw	-4
 25732  01A4DA  006F FF8C  F00B    	movff	plusw1,btemp+10
 25733  01A4E0  0EFD               	movlw	-3
 25734  01A4E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 25735  01A4E8  0E02               	movlw	2
 25736  01A4EA  240B               	addwf	(btemp+10)^0,w,c
 25737  01A4EC  6ED9               	movwf	fsr2l,c
 25738  01A4EE  0E00               	movlw	0
 25739  01A4F0  200C               	addwfc	(btemp+11)^0,w,c
 25740  01A4F2  6EDA               	movwf	fsr2h,c
 25741  01A4F4  2ADE               	incf	postinc2,f,c
 25742  01A4F6  0E00               	movlw	0
 25743  01A4F8  22DD               	addwfc	postdec2,f,c
 25744  01A4FA                     l3445:
 25745                           
 25746                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 25747  01A4FA  52E5               	movf	postdec1,f,c
 25748  01A4FC  52E5               	movf	postdec1,f,c
 25749  01A4FE  52E5               	movf	postdec1,f,c
 25750  01A500  52E5               	movf	postdec1,f,c
 25751  01A502  0012               	return		;funcret
 25752  01A504                     __end_of_fputc:
 25753                           	opt callstack 0
 25754                           
 25755 ;; *************** function _putch *****************
 25756 ;; Defined at:
 25757 ;;		line 421 in file "eadog.c"
 25758 ;; Parameters:    Size  Location     Type
 25759 ;;  c               1  [STACK] unsigned char 
 25760 ;; Auto vars:     Size  Location     Type
 25761 ;;		None
 25762 ;; Return value:  Size  Location     Type
 25763 ;;                  1  [STACK] void 
 25764 ;; Registers used:
 25765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25766 ;; Tracked objects:
 25767 ;;		On entry : 0/0
 25768 ;;		On exit  : 0/0
 25769 ;;		Unchanged: 0/0
 25770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25775 ;;Total ram usage:        0 bytes
 25776 ;; Hardware stack levels used:    1
 25777 ;; Hardware stack levels required when called:   16
 25778 ;; This function calls:
 25779 ;;		_ringBufS_put_dma
 25780 ;; This function is called by:
 25781 ;;		_fputc
 25782 ;; This function uses a reentrant model
 25783 ;;
 25784                           
 25785                           	psect	text95
 25786  01D198                     __ptext95:
 25787                           	opt callstack 0
 25788  01D198                     _putch:
 25789                           	opt callstack 0
 25790                           
 25791                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 25792                           ;stkvar	_c @ sp[(0)+-1]
 25793                           
 25794                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25795                           ;incstack = 0
 25796 ;; hardware stack exceeded
 25797  01D198  0EFF               	movlw	-1
 25798  01D19A  50E3               	movf	plusw1,w,c
 25799  01D19C  6EE6               	movwf	postinc1,c
 25800  01D19E  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 25801  01D1A4  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 25802  01D1AA  ECE3  F0DA         	call	_ringBufS_put_dma	;wreg free
 25803                           
 25804                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 25805  01D1AE  52E5               	movf	postdec1,f,c
 25806  01D1B0  0012               	return		;funcret
 25807  01D1B2                     __end_of_putch:
 25808                           	opt callstack 0
 25809                           
 25810 ;; *************** function _ringBufS_put_dma *****************
 25811 ;; Defined at:
 25812 ;;		line 67 in file "ringbufs.c"
 25813 ;; Parameters:    Size  Location     Type
 25814 ;;  _this           2  [STACK] PTR struct ringBufS_t
 25815 ;;		 -> ring_buf1(67), 
 25816 ;;  c               1  [STACK] const unsigned char 
 25817 ;; Auto vars:     Size  Location     Type
 25818 ;;		None
 25819 ;; Return value:  Size  Location     Type
 25820 ;;                  1  [STACK] void 
 25821 ;; Registers used:
 25822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25823 ;; Tracked objects:
 25824 ;;		On entry : 0/0
 25825 ;;		On exit  : 0/0
 25826 ;;		Unchanged: 0/0
 25827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25832 ;;Total ram usage:        0 bytes
 25833 ;; Hardware stack levels used:    1
 25834 ;; Hardware stack levels required when called:   15
 25835 ;; This function calls:
 25836 ;;		Nothing
 25837 ;; This function is called by:
 25838 ;;		_putch
 25839 ;; This function uses a reentrant model
 25840 ;;
 25841                           
 25842                           	psect	text96
 25843  01B5C6                     __ptext96:
 25844                           	opt callstack 0
 25845  01B5C6                     _ringBufS_put_dma:
 25846                           	opt callstack 0
 25847                           
 25848                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 25849                           ;stkvar	__this @ sp[(0)+-2]
 25850                           
 25851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25852                           ;incstack = 0
 25853 ;; hardware stack exceeded
 25854  01B5C6  0EFE               	movlw	-2
 25855  01B5C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 25856  01B5CE  0EFF               	movlw	-1
 25857  01B5D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 25858  01B5D6  0E42               	movlw	66
 25859  01B5D8  240B               	addwf	(btemp+10)^0,w,c
 25860  01B5DA  6ED9               	movwf	fsr2l,c
 25861  01B5DC  0E00               	movlw	0
 25862  01B5DE  200C               	addwfc	(btemp+11)^0,w,c
 25863  01B5E0  6EDA               	movwf	fsr2h,c
 25864  01B5E2  0E40               	movlw	64
 25865  01B5E4  60DF               	cpfslt	indf2,c
 25866  01B5E6  D040               	goto	l1622
 25867                           
 25868                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 25869                           ;stkvar	_c @ sp[(0)+-3]
 25870                           ;stkvar	__this @ sp[(0)+-2]
 25871  01B5E8  0EFE               	movlw	-2
 25872  01B5EA  006F FF8C  F00B    	movff	plusw1,btemp+10
 25873  01B5F0  0EFF               	movlw	-1
 25874  01B5F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 25875  01B5F8  0E40               	movlw	64
 25876  01B5FA  240B               	addwf	(btemp+10)^0,w,c
 25877  01B5FC  6ED9               	movwf	fsr2l,c
 25878  01B5FE  0E00               	movlw	0
 25879  01B600  200C               	addwfc	(btemp+11)^0,w,c
 25880  01B602  6EDA               	movwf	fsr2h,c
 25881  01B604  50DF               	movf	indf2,w,c
 25882  01B606  6E0C               	movwf	(btemp+11)^0,c
 25883                           
 25884                           ;stkvar	__this @ sp[(0)+-2]
 25885  01B608  0EFE               	movlw	-2
 25886  01B60A  006F FF8C  F009    	movff	plusw1,btemp+8
 25887  01B610  0EFF               	movlw	-1
 25888  01B612  006F FF8C  F00A    	movff	plusw1,btemp+9
 25889  01B618  500C               	movf	(btemp+11)^0,w,c
 25890  01B61A  2409               	addwf	(btemp+8)^0,w,c
 25891  01B61C  6ED9               	movwf	fsr2l,c
 25892  01B61E  0E00               	movlw	0
 25893  01B620  200A               	addwfc	(btemp+9)^0,w,c
 25894  01B622  6EDA               	movwf	fsr2h,c
 25895  01B624  0EFD               	movlw	-3
 25896  01B626  006F FF8F FFDF     	movff	plusw1,indf2
 25897                           
 25898                           ;ringbufs.c: 71:   ++_this->head;
 25899                           ;stkvar	__this @ sp[(0)+-2]
 25900  01B62C  0EFE               	movlw	-2
 25901  01B62E  006F FF8C  F00B    	movff	plusw1,btemp+10
 25902  01B634  0EFF               	movlw	-1
 25903  01B636  006F FF8C  F00C    	movff	plusw1,btemp+11
 25904  01B63C  0E40               	movlw	64
 25905  01B63E  240B               	addwf	(btemp+10)^0,w,c
 25906  01B640  6ED9               	movwf	fsr2l,c
 25907  01B642  0E00               	movlw	0
 25908  01B644  200C               	addwfc	(btemp+11)^0,w,c
 25909  01B646  6EDA               	movwf	fsr2h,c
 25910  01B648  2ADF               	incf	indf2,f,c
 25911                           
 25912                           ;ringbufs.c: 72:   ++_this->count;
 25913                           ;stkvar	__this @ sp[(0)+-2]
 25914  01B64A  0EFE               	movlw	-2
 25915  01B64C  006F FF8C  F00B    	movff	plusw1,btemp+10
 25916  01B652  0EFF               	movlw	-1
 25917  01B654  006F FF8C  F00C    	movff	plusw1,btemp+11
 25918  01B65A  0E42               	movlw	66
 25919  01B65C  240B               	addwf	(btemp+10)^0,w,c
 25920  01B65E  6ED9               	movwf	fsr2l,c
 25921  01B660  0E00               	movlw	0
 25922  01B662  200C               	addwfc	(btemp+11)^0,w,c
 25923  01B664  6EDA               	movwf	fsr2h,c
 25924  01B666  2ADF               	incf	indf2,f,c
 25925  01B668                     l1622:
 25926                           
 25927                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 25928  01B668  52E5               	movf	postdec1,f,c
 25929  01B66A  52E5               	movf	postdec1,f,c
 25930  01B66C  52E5               	movf	postdec1,f,c
 25931  01B66E  0012               	return		;funcret
 25932  01B670                     __end_of_ringBufS_put_dma:
 25933                           	opt callstack 0
 25934                           
 25935 ;; *************** function _atoi *****************
 25936 ;; Defined at:
 25937 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 25938 ;; Parameters:    Size  Location     Type
 25939 ;;  s               2  [STACK] PTR const unsigned char 
 25940 ;;		 -> STR_81(127), STR_79(3), STR_78(3), STR_77(19), 
 25941 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 25942 ;;		 -> STR_72(19), STR_71(24), STR_70(15), STR_69(15), 
 25943 ;;		 -> STR_68(15), STR_67(10), STR_66(10), STR_65(19), 
 25944 ;;		 -> STR_64(19), STR_61(3), STR_60(3), STR_59(21), 
 25945 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 25946 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 25947 ;;		 -> STR_50(20), STR_49(20), STR_48(21), STR_47(21), 
 25948 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 25949 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 25950 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 25951 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 25952 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 25953 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 25954 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 25955 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 25956 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 25957 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 25958 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 25959 ;;		 -> STR_1(21), 
 25960 ;; Auto vars:     Size  Location     Type
 25961 ;;  n               2  [STACK] int 
 25962 ;;  neg             2  [STACK] int 
 25963 ;; Return value:  Size  Location     Type
 25964 ;;                  2  [STACK] int 
 25965 ;; Registers used:
 25966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 25967 ;; Tracked objects:
 25968 ;;		On entry : 0/0
 25969 ;;		On exit  : 0/0
 25970 ;;		Unchanged: 0/0
 25971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25976 ;;Total ram usage:        0 bytes
 25977 ;; Hardware stack levels used:    1
 25978 ;; Hardware stack levels required when called:   16
 25979 ;; This function calls:
 25980 ;;		_isdigit
 25981 ;;		_isspace
 25982 ;; This function is called by:
 25983 ;;		_vfpfcnvrt
 25984 ;; This function uses a reentrant model
 25985 ;;
 25986                           
 25987                           	psect	text97
 25988  017F10                     __ptext97:
 25989                           	opt callstack 0
 25990  017F10                     _atoi:
 25991                           	opt callstack 0
 25992                           
 25993                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25994  017F10  0E09               	movlw	9
 25995  017F12  26E1               	addwf	fsr1l,f,c
 25996  017F14  0E00               	movlw	0
 25997  017F16  22E2               	addwfc	fsr1h,f,c
 25998                           
 25999                           ;stkvar	_n @ sp[(-9)+5]
 26000                           
 26001                           ;incstack = 0
 26002 ;; hardware stack exceeded
 26003  017F18  0EFC               	movlw	-4
 26004  017F1A  6AE3               	clrf	plusw1,c
 26005  017F1C  0EFD               	movlw	-3
 26006  017F1E  6AE3               	clrf	plusw1,c
 26007                           
 26008                           ;stkvar	_neg @ sp[(-9)+7]
 26009  017F20  0EFE               	movlw	-2
 26010  017F22  6AE3               	clrf	plusw1,c
 26011  017F24  0EFF               	movlw	-1
 26012  017F26  6AE3               	clrf	plusw1,c
 26013  017F28  D011               	goto	l10039
 26014  017F2A                     l10037:
 26015                           
 26016                           ;stkvar	_s @ sp[(-9)+-2]
 26017  017F2A  0EF5               	movlw	-11
 26018  017F2C  50E3               	movf	plusw1,w,c
 26019  017F2E  0F01               	addlw	1
 26020  017F30  6E01               	movwf	btemp^0,c
 26021  017F32  0EF5               	movlw	-11
 26022  017F34  0060  F007  FFE3   	movff	btemp,plusw1
 26023  017F3A  6A01               	clrf	btemp^0,c
 26024  017F3C  0EF6               	movlw	-10
 26025  017F3E  50E3               	movf	plusw1,w,c
 26026  017F40  2001               	addwfc	btemp^0,w,c
 26027  017F42  6E01               	movwf	btemp^0,c
 26028  017F44  0EF6               	movlw	-10
 26029  017F46  0060  F007  FFE3   	movff	btemp,plusw1
 26030  017F4C                     l10039:
 26031                           
 26032                           ;stkvar	_atoi$6726 @ sp[(-9)+4]
 26033  017F4C  0EFB               	movlw	-5
 26034  017F4E  6AE3               	clrf	plusw1,c
 26035  017F50  2AE3               	incf	plusw1,f,c
 26036                           
 26037                           ;stkvar	_s @ sp[(-9)+-2]
 26038  017F52  50E1               	movf	fsr1l,w,c
 26039  017F54  0FF5               	addlw	-11
 26040  017F56  6ED9               	movwf	fsr2l,c
 26041  017F58  50E2               	movf	fsr1h,w,c
 26042  017F5A  6EDA               	movwf	fsr2h,c
 26043  017F5C  0EFF               	movlw	255
 26044  017F5E  22DA               	addwfc	fsr2h,f,c
 26045  017F60  006F FF7B FFF6     	movff	postinc2,tblptrl
 26046  017F66  006F FF77 FFF7     	movff	postdec2,tblptrh
 26047  017F6C                     	if	0	;tblptru may be non-zero
 26048  017F6C                     	endif
 26049  017F6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26050  017F6C  0E00               	movlw	low (__mediumconst shr (0+16))
 26051  017F6E  6EF8               	movwf	tblptru,c
 26052  017F70                     	endif
 26053  017F70  0008               	tblrd		*
 26054  017F72  50F5               	movf	tablat,w,c
 26055  017F74  0A20               	xorlw	32
 26056  017F76  B4D8               	btfsc	status,2,c
 26057  017F78  D023               	goto	l10047
 26058  017F7A  0EF7               	movlw	247
 26059  017F7C  6E0B               	movwf	(btemp+10)^0,c
 26060  017F7E  0EFF               	movlw	255
 26061  017F80  6E0C               	movwf	(btemp+11)^0,c
 26062                           
 26063                           ;stkvar	_s @ sp[(-9)+-2]
 26064  017F82  50E1               	movf	fsr1l,w,c
 26065  017F84  0FF5               	addlw	-11
 26066  017F86  6ED9               	movwf	fsr2l,c
 26067  017F88  50E2               	movf	fsr1h,w,c
 26068  017F8A  6EDA               	movwf	fsr2h,c
 26069  017F8C  0EFF               	movlw	255
 26070  017F8E  22DA               	addwfc	fsr2h,f,c
 26071  017F90  006F FF7B FFF6     	movff	postinc2,tblptrl
 26072  017F96  006F FF77 FFF7     	movff	postdec2,tblptrh
 26073  017F9C                     	if	0	;tblptru may be non-zero
 26074  017F9C                     	endif
 26075  017F9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26076  017F9C  0E00               	movlw	low (__mediumconst shr (0+16))
 26077  017F9E  6EF8               	movwf	tblptru,c
 26078  017FA0                     	endif
 26079  017FA0  0008               	tblrd		*
 26080  017FA2  50F5               	movf	tablat,w,c
 26081  017FA4  6E09               	movwf	(btemp+8)^0,c
 26082  017FA6  6A0A               	clrf	(btemp+9)^0,c
 26083  017FA8  500B               	movf	(btemp+10)^0,w,c
 26084  017FAA  2609               	addwf	(btemp+8)^0,f,c
 26085  017FAC  500C               	movf	(btemp+11)^0,w,c
 26086  017FAE  220A               	addwfc	(btemp+9)^0,f,c
 26087  017FB0  500A               	movf	(btemp+9)^0,w,c
 26088  017FB2  E104               	bnz	u9000
 26089  017FB4  0E05               	movlw	5
 26090  017FB6  5C09               	subwf	(btemp+8)^0,w,c
 26091  017FB8  A0D8               	btfss	status,0,c
 26092  017FBA  D002               	goto	l10047
 26093  017FBC                     u9000:
 26094                           
 26095                           ;stkvar	_atoi$6726 @ sp[(-9)+4]
 26096  017FBC  0EFB               	movlw	-5
 26097  017FBE  6AE3               	clrf	plusw1,c
 26098  017FC0                     l10047:
 26099                           
 26100                           ;stkvar	_atoi$6726 @ sp[(-9)+4]
 26101  017FC0  0EFB               	movlw	-5
 26102  017FC2  50E3               	movf	plusw1,w,c
 26103  017FC4  6E0B               	movwf	(btemp+10)^0,c
 26104  017FC6  6A0C               	clrf	(btemp+11)^0,c
 26105                           
 26106                           ;stkvar	_atoi$6725 @ sp[(-9)+2]
 26107  017FC8  0EF9               	movlw	-7
 26108  017FCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26109  017FD0  0EFA               	movlw	-6
 26110  017FD2  0060  F033  FFE3   	movff	btemp+11,plusw1
 26111                           
 26112                           ;stkvar	_atoi$6725 @ sp[(-9)+2]
 26113  017FD8  0EF9               	movlw	-7
 26114  017FDA  006F FF8C  F001    	movff	plusw1,btemp
 26115  017FE0  0EFA               	movlw	-6
 26116  017FE2  50E3               	movf	plusw1,w,c
 26117  017FE4  1001               	iorwf	btemp^0,w,c
 26118  017FE6  B4D8               	btfsc	status,2,c
 26119  017FE8  D01F               	goto	l10057
 26120  017FEA  D79F               	goto	l10037
 26121  017FEC                     l10053:
 26122  017FEC  0E01               	movlw	1
 26123  017FEE  6E0B               	movwf	(btemp+10)^0,c
 26124  017FF0  0E00               	movlw	0
 26125  017FF2  6E0C               	movwf	(btemp+11)^0,c
 26126                           
 26127                           ;stkvar	_neg @ sp[(-9)+7]
 26128  017FF4  0EFE               	movlw	-2
 26129  017FF6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26130  017FFC  0EFF               	movlw	-1
 26131  017FFE  0060  F033  FFE3   	movff	btemp+11,plusw1
 26132  018004                     l10055:
 26133                           
 26134                           ;stkvar	_s @ sp[(-9)+-2]
 26135  018004  0EF5               	movlw	-11
 26136  018006  50E3               	movf	plusw1,w,c
 26137  018008  0F01               	addlw	1
 26138  01800A  6E01               	movwf	btemp^0,c
 26139  01800C  0EF5               	movlw	-11
 26140  01800E  0060  F007  FFE3   	movff	btemp,plusw1
 26141  018014  6A01               	clrf	btemp^0,c
 26142  018016  0EF6               	movlw	-10
 26143  018018  50E3               	movf	plusw1,w,c
 26144  01801A  2001               	addwfc	btemp^0,w,c
 26145  01801C  6E01               	movwf	btemp^0,c
 26146  01801E  0EF6               	movlw	-10
 26147  018020  0060  F007  FFE3   	movff	btemp,plusw1
 26148  018026  D053               	goto	l10063
 26149  018028                     l10057:
 26150                           
 26151                           ;stkvar	_s @ sp[(-9)+-2]
 26152  018028  50E1               	movf	fsr1l,w,c
 26153  01802A  0FF5               	addlw	-11
 26154  01802C  6ED9               	movwf	fsr2l,c
 26155  01802E  50E2               	movf	fsr1h,w,c
 26156  018030  6EDA               	movwf	fsr2h,c
 26157  018032  0EFF               	movlw	255
 26158  018034  22DA               	addwfc	fsr2h,f,c
 26159  018036  006F FF7B FFF6     	movff	postinc2,tblptrl
 26160  01803C  006F FF77 FFF7     	movff	postdec2,tblptrh
 26161  018042                     	if	0	;tblptru may be non-zero
 26162  018042                     	endif
 26163  018042                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26164  018042  0E00               	movlw	low (__mediumconst shr (0+16))
 26165  018044  6EF8               	movwf	tblptru,c
 26166  018046                     	endif
 26167  018046  0008               	tblrd		*
 26168  018048  50F5               	movf	tablat,w,c
 26169  01804A  6E0B               	movwf	(btemp+10)^0,c
 26170  01804C  6A0C               	clrf	(btemp+11)^0,c
 26171                           
 26172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26173                           ; Switch size 1, requested type "simple"
 26174                           ; Number of cases is 1, Range of values is 0 to 0
 26175                           ; switch strategies available:
 26176                           ; Name         Instructions Cycles
 26177                           ; simple_byte            4     3 (average)
 26178                           ;	Chosen strategy is simple_byte
 26179  01804E  500C               	movf	(btemp+11)^0,w,c
 26180  018050  0A00               	xorlw	0	; case 0
 26181  018052  A4D8               	btfss	status,2,c
 26182  018054  D03C               	goto	l10063
 26183                           
 26184                           ; Switch size 1, requested type "simple"
 26185                           ; Number of cases is 2, Range of values is 43 to 45
 26186                           ; switch strategies available:
 26187                           ; Name         Instructions Cycles
 26188                           ; simple_byte            7     4 (average)
 26189                           ;	Chosen strategy is simple_byte
 26190  018056  500B               	movf	(btemp+10)^0,w,c
 26191  018058  0A2B               	xorlw	43	; case 43
 26192  01805A  B4D8               	btfsc	status,2,c
 26193  01805C  D7D3               	goto	l10055
 26194  01805E  0A06               	xorlw	6	; case 45
 26195  018060  B4D8               	btfsc	status,2,c
 26196  018062  D7C4               	goto	l10053
 26197  018064  D034               	goto	l10063
 26198  018066                     l10059:
 26199                           
 26200                           ;stkvar	_n @ sp[(-9)+5]
 26201  018066  0EFC               	movlw	-4
 26202  018068  006F FF8C  F00B    	movff	plusw1,btemp+10
 26203  01806E  0EFD               	movlw	-3
 26204  018070  006F FF8C  F00C    	movff	plusw1,btemp+11
 26205  018076  0E0A               	movlw	10
 26206  018078  020B               	mulwf	(btemp+10)^0,c
 26207  01807A  006F FFCC  F009    	movff	prodl,btemp+8
 26208  018080  006F FFD0  F00A    	movff	prodh,btemp+9
 26209  018086  020C               	mulwf	(btemp+11)^0,c
 26210  018088  50F3               	movf	prodl,w,c
 26211  01808A  260A               	addwf	(btemp+9)^0,f,c
 26212                           
 26213                           ;stkvar	_s @ sp[(-9)+-2]
 26214  01808C  50E1               	movf	fsr1l,w,c
 26215  01808E  0FF5               	addlw	-11
 26216  018090  6ED9               	movwf	fsr2l,c
 26217  018092  50E2               	movf	fsr1h,w,c
 26218  018094  6EDA               	movwf	fsr2h,c
 26219  018096  0EFF               	movlw	255
 26220  018098  22DA               	addwfc	fsr2h,f,c
 26221  01809A  006F FF7B FFF6     	movff	postinc2,tblptrl
 26222  0180A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 26223  0180A6                     	if	0	;tblptru may be non-zero
 26224  0180A6                     	endif
 26225  0180A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26226  0180A6  0E00               	movlw	low (__mediumconst shr (0+16))
 26227  0180A8  6EF8               	movwf	tblptru,c
 26228  0180AA                     	endif
 26229  0180AA  0008               	tblrd		*
 26230  0180AC  50F5               	movf	tablat,w,c
 26231  0180AE  5E09               	subwf	(btemp+8)^0,f,c
 26232  0180B0  0E00               	movlw	0
 26233  0180B2  5A0A               	subwfb	(btemp+9)^0,f,c
 26234  0180B4  0E30               	movlw	48
 26235  0180B6  2609               	addwf	(btemp+8)^0,f,c
 26236  0180B8  0E00               	movlw	0
 26237  0180BA  220A               	addwfc	(btemp+9)^0,f,c
 26238                           
 26239                           ;stkvar	_n @ sp[(-9)+5]
 26240  0180BC  0EFC               	movlw	-4
 26241  0180BE  0060  F027  FFE3   	movff	btemp+8,plusw1
 26242  0180C4  0EFD               	movlw	-3
 26243  0180C6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26244  0180CC  D79B               	goto	l10055
 26245  0180CE                     l10063:
 26246  0180CE  0ED0               	movlw	208
 26247  0180D0  6E0B               	movwf	(btemp+10)^0,c
 26248  0180D2  0EFF               	movlw	255
 26249  0180D4  6E0C               	movwf	(btemp+11)^0,c
 26250                           
 26251                           ;stkvar	_s @ sp[(-9)+-2]
 26252  0180D6  50E1               	movf	fsr1l,w,c
 26253  0180D8  0FF5               	addlw	-11
 26254  0180DA  6ED9               	movwf	fsr2l,c
 26255  0180DC  50E2               	movf	fsr1h,w,c
 26256  0180DE  6EDA               	movwf	fsr2h,c
 26257  0180E0  0EFF               	movlw	255
 26258  0180E2  22DA               	addwfc	fsr2h,f,c
 26259  0180E4  006F FF7B FFF6     	movff	postinc2,tblptrl
 26260  0180EA  006F FF77 FFF7     	movff	postdec2,tblptrh
 26261  0180F0                     	if	0	;tblptru may be non-zero
 26262  0180F0                     	endif
 26263  0180F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26264  0180F0  0E00               	movlw	low (__mediumconst shr (0+16))
 26265  0180F2  6EF8               	movwf	tblptru,c
 26266  0180F4                     	endif
 26267  0180F4  0008               	tblrd		*
 26268  0180F6  50F5               	movf	tablat,w,c
 26269  0180F8  6E09               	movwf	(btemp+8)^0,c
 26270  0180FA  6A0A               	clrf	(btemp+9)^0,c
 26271  0180FC  500B               	movf	(btemp+10)^0,w,c
 26272  0180FE  2609               	addwf	(btemp+8)^0,f,c
 26273  018100  500C               	movf	(btemp+11)^0,w,c
 26274  018102  220A               	addwfc	(btemp+9)^0,f,c
 26275  018104  500A               	movf	(btemp+9)^0,w,c
 26276  018106  E106               	bnz	u9020
 26277  018108  0E0A               	movlw	10
 26278  01810A  5C09               	subwf	(btemp+8)^0,w,c
 26279  01810C  B0D8               	btfsc	status,0,c
 26280  01810E  D002               	goto	u9020
 26281  018110  0E01               	movlw	1
 26282  018112  D001               	goto	u9030
 26283  018114                     u9020:
 26284  018114  0E00               	movlw	0
 26285  018116                     u9030:
 26286  018116  6E0B               	movwf	(btemp+10)^0,c
 26287  018118  6A0C               	clrf	(btemp+11)^0,c
 26288                           
 26289                           ;stkvar	_atoi$6727 @ sp[(-9)+0]
 26290  01811A  0EF7               	movlw	-9
 26291  01811C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26292  018122  0EF8               	movlw	-8
 26293  018124  0060  F033  FFE3   	movff	btemp+11,plusw1
 26294                           
 26295                           ;stkvar	_atoi$6727 @ sp[(-9)+0]
 26296  01812A  0EF7               	movlw	-9
 26297  01812C  006F FF8C  F001    	movff	plusw1,btemp
 26298  018132  0EF8               	movlw	-8
 26299  018134  50E3               	movf	plusw1,w,c
 26300  018136  1001               	iorwf	btemp^0,w,c
 26301  018138  A4D8               	btfss	status,2,c
 26302  01813A  D795               	goto	l10059
 26303                           
 26304                           ;stkvar	_neg @ sp[(-9)+7]
 26305  01813C  0EFE               	movlw	-2
 26306  01813E  006F FF8C  F001    	movff	plusw1,btemp
 26307  018144  0EFF               	movlw	-1
 26308  018146  50E3               	movf	plusw1,w,c
 26309  018148  1001               	iorwf	btemp^0,w,c
 26310  01814A  A4D8               	btfss	status,2,c
 26311  01814C  D00E               	goto	l10073
 26312                           
 26313                           ;stkvar	_n @ sp[(-9)+5]
 26314  01814E  0EFC               	movlw	-4
 26315  018150  006F FF8C  F001    	movff	plusw1,btemp
 26316  018156  1E01               	comf	btemp^0,f,c
 26317  018158  0EFD               	movlw	-3
 26318  01815A  006F FF8C  F002    	movff	plusw1,btemp+1
 26319  018160  1E02               	comf	(btemp+1)^0,f,c
 26320  018162  2A01               	incf	btemp^0,f,c
 26321  018164  B4D8               	btfsc	status,2,c
 26322  018166  2A02               	incf	(btemp+1)^0,f,c
 26323  018168  D008               	goto	l3376
 26324  01816A                     l10073:
 26325                           
 26326                           ;stkvar	_n @ sp[(-9)+5]
 26327  01816A  0EFC               	movlw	-4
 26328  01816C  006F FF8C  F001    	movff	plusw1,btemp
 26329  018172  0EFD               	movlw	-3
 26330  018174  006F FF8C  F002    	movff	plusw1,btemp+1
 26331  01817A                     l3376:
 26332                           
 26333                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 26334  01817A  0EF5               	movlw	245
 26335  01817C  26E1               	addwf	fsr1l,f,c
 26336  01817E  0EFF               	movlw	255
 26337  018180  22E2               	addwfc	fsr1h,f,c
 26338  018182  0012               	return		;funcret
 26339  018184                     __end_of_atoi:
 26340                           	opt callstack 0
 26341                           
 26342 ;; *************** function _isspace *****************
 26343 ;; Defined at:
 26344 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 26345 ;; Parameters:    Size  Location     Type
 26346 ;;  c               2  [STACK] int 
 26347 ;; Auto vars:     Size  Location     Type
 26348 ;;		None
 26349 ;; Return value:  Size  Location     Type
 26350 ;;                  2  [STACK] int 
 26351 ;; Registers used:
 26352 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 26353 ;; Tracked objects:
 26354 ;;		On entry : 0/0
 26355 ;;		On exit  : 0/0
 26356 ;;		Unchanged: 0/0
 26357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26362 ;;Total ram usage:        0 bytes
 26363 ;; Hardware stack levels used:    1
 26364 ;; Hardware stack levels required when called:   15
 26365 ;; This function calls:
 26366 ;;		Nothing
 26367 ;; This function is called by:
 26368 ;;		_atoi
 26369 ;; This function uses a reentrant model
 26370 ;;
 26371                           
 26372                           	psect	text98
 26373  01C438                     __ptext98:
 26374                           	opt callstack 0
 26375  01C438                     _isspace:
 26376                           	opt callstack 0
 26377                           
 26378                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26379  01C438  52E6               	movf	postinc1,f,c
 26380                           
 26381                           ;stkvar	_isspace$6776 @ sp[(-1)+0]
 26382                           
 26383                           ;incstack = 0
 26384 ;; hardware stack exceeded
 26385  01C43A  0EFF               	movlw	-1
 26386  01C43C  6AE3               	clrf	plusw1,c
 26387  01C43E  2AE3               	incf	plusw1,f,c
 26388                           
 26389                           ;stkvar	_c @ sp[(-1)+-2]
 26390  01C440  0EFD               	movlw	-3
 26391  01C442  006F FF8C  F001    	movff	plusw1,btemp
 26392  01C448  0E20               	movlw	32
 26393  01C44A  1801               	xorwf	btemp^0,w,c
 26394  01C44C  E104               	bnz	u7890
 26395  01C44E  0EFE               	movlw	-2
 26396  01C450  50E3               	movf	plusw1,w,c
 26397  01C452  B4D8               	btfsc	status,2,c
 26398  01C454  D012               	goto	l9457
 26399  01C456                     u7890:
 26400                           
 26401                           ;stkvar	_c @ sp[(-1)+-2]
 26402  01C456  0EFD               	movlw	-3
 26403  01C458  50E3               	movf	plusw1,w,c
 26404  01C45A  0FF7               	addlw	247
 26405  01C45C  6E0B               	movwf	(btemp+10)^0,c
 26406  01C45E  0EFE               	movlw	-2
 26407  01C460  006F FF8C  F00C    	movff	plusw1,btemp+11
 26408  01C466  0EFF               	movlw	255
 26409  01C468  220C               	addwfc	(btemp+11)^0,f,c
 26410  01C46A  500C               	movf	(btemp+11)^0,w,c
 26411  01C46C  E104               	bnz	u7900
 26412  01C46E  0E05               	movlw	5
 26413  01C470  5C0B               	subwf	(btemp+10)^0,w,c
 26414  01C472  A0D8               	btfss	status,0,c
 26415  01C474  D002               	goto	l9457
 26416  01C476                     u7900:
 26417                           
 26418                           ;stkvar	_isspace$6776 @ sp[(-1)+0]
 26419  01C476  0EFF               	movlw	-1
 26420  01C478  6AE3               	clrf	plusw1,c
 26421  01C47A                     l9457:
 26422                           
 26423                           ;stkvar	_isspace$6776 @ sp[(-1)+0]
 26424  01C47A  0EFF               	movlw	-1
 26425  01C47C  50E3               	movf	plusw1,w,c
 26426  01C47E  6E01               	movwf	btemp^0,c
 26427  01C480  6A02               	clrf	(btemp+1)^0,c
 26428                           
 26429                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 26430  01C482  52E5               	movf	postdec1,f,c
 26431  01C484  52E5               	movf	postdec1,f,c
 26432  01C486  52E5               	movf	postdec1,f,c
 26433  01C488  0012               	return		;funcret
 26434  01C48A                     __end_of_isspace:
 26435                           	opt callstack 0
 26436                           
 26437 ;; *************** function _isdigit *****************
 26438 ;; Defined at:
 26439 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 26440 ;; Parameters:    Size  Location     Type
 26441 ;;  c               2  [STACK] int 
 26442 ;; Auto vars:     Size  Location     Type
 26443 ;;		None
 26444 ;; Return value:  Size  Location     Type
 26445 ;;                  2  [STACK] int 
 26446 ;; Registers used:
 26447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 26448 ;; Tracked objects:
 26449 ;;		On entry : 0/0
 26450 ;;		On exit  : 0/0
 26451 ;;		Unchanged: 0/0
 26452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26457 ;;Total ram usage:        0 bytes
 26458 ;; Hardware stack levels used:    1
 26459 ;; Hardware stack levels required when called:   15
 26460 ;; This function calls:
 26461 ;;		Nothing
 26462 ;; This function is called by:
 26463 ;;		_vfpfcnvrt
 26464 ;;		_atoi
 26465 ;; This function uses a reentrant model
 26466 ;;
 26467                           
 26468                           	psect	text99
 26469  01CC1E                     __ptext99:
 26470                           	opt callstack 0
 26471  01CC1E                     _isdigit:
 26472                           	opt callstack 0
 26473                           
 26474                           ;stkvar	_c @ sp[(0)+-2]
 26475                           
 26476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26477                           ;incstack = 0
 26478 ;; hardware stack exceeded
 26479  01CC1E  0EFE               	movlw	-2
 26480  01CC20  50E3               	movf	plusw1,w,c
 26481  01CC22  0FD0               	addlw	208
 26482  01CC24  6E0B               	movwf	(btemp+10)^0,c
 26483  01CC26  0EFF               	movlw	-1
 26484  01CC28  006F FF8C  F00C    	movff	plusw1,btemp+11
 26485  01CC2E  0EFF               	movlw	255
 26486  01CC30  220C               	addwfc	(btemp+11)^0,f,c
 26487  01CC32  500C               	movf	(btemp+11)^0,w,c
 26488  01CC34  E106               	bnz	u6740
 26489  01CC36  0E0A               	movlw	10
 26490  01CC38  5C0B               	subwf	(btemp+10)^0,w,c
 26491  01CC3A  B0D8               	btfsc	status,0,c
 26492  01CC3C  D002               	goto	u6740
 26493  01CC3E  0E01               	movlw	1
 26494  01CC40  D001               	goto	u6750
 26495  01CC42                     u6740:
 26496  01CC42  0E00               	movlw	0
 26497  01CC44                     u6750:
 26498  01CC44  6E01               	movwf	btemp^0,c
 26499  01CC46  6A02               	clrf	(btemp+1)^0,c
 26500                           
 26501                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 26502  01CC48  52E5               	movf	postdec1,f,c
 26503  01CC4A  52E5               	movf	postdec1,f,c
 26504  01CC4C  0012               	return		;funcret
 26505  01CC4E                     __end_of_isdigit:
 26506                           	opt callstack 0
 26507                           
 26508 ;; *************** function _set_vterm *****************
 26509 ;; Defined at:
 26510 ;;		line 107 in file "mconfig.c"
 26511 ;; Parameters:    Size  Location     Type
 26512 ;;  vterm           1  [STACK] const unsigned char 
 26513 ;; Auto vars:     Size  Location     Type
 26514 ;;		None
 26515 ;; Return value:  Size  Location     Type
 26516 ;;                  1  [STACK] unsigned char 
 26517 ;; Registers used:
 26518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 26519 ;; Tracked objects:
 26520 ;;		On entry : 0/2
 26521 ;;		On exit  : 0/0
 26522 ;;		Unchanged: 0/0
 26523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26528 ;;Total ram usage:        0 bytes
 26529 ;; Hardware stack levels used:    1
 26530 ;; Hardware stack levels required when called:   15
 26531 ;; This function calls:
 26532 ;;		Nothing
 26533 ;; This function is called by:
 26534 ;;		_main
 26535 ;;		_check_help
 26536 ;; This function uses a reentrant model
 26537 ;;
 26538                           
 26539                           	psect	text100
 26540  01D13E                     __ptext100:
 26541                           	opt callstack 0
 26542  01D13E                     _set_vterm:
 26543                           	opt callstack 15
 26544                           
 26545                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 26546                           ;stkvar	_vterm @ sp[(0)+-1]
 26547                           
 26548                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26549                           ;incstack = 0
 26550  01D13E  0EFF               	movlw	-1
 26551  01D140  006F FF8C  F00C    	movff	plusw1,btemp+11
 26552  01D146  0E03               	movlw	3
 26553  01D148  160C               	andwf	(btemp+11)^0,f,c
 26554  01D14A  EE22  F30A         	lfsr	2,_D+480
 26555  01D14E  50DF               	movf	223,w,c
 26556  01D150  180C               	xorwf	(btemp+11)^0,w,c
 26557  01D152  0BFE               	andlw	-2
 26558  01D154  180C               	xorwf	(btemp+11)^0,w,c
 26559  01D156  6EDF               	movwf	223,c
 26560                           
 26561                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 26562  01D158  52E5               	movf	postdec1,f,c
 26563  01D15A  0012               	return		;funcret
 26564  01D15C                     __end_of_set_vterm:
 26565                           	opt callstack 0
 26566                           
 26567 ;; *************** function _set_temp_display_help *****************
 26568 ;; Defined at:
 26569 ;;		line 211 in file "mconfig.c"
 26570 ;; Parameters:    Size  Location     Type
 26571 ;;  new_response    1  [STACK] const enum E16524
 26572 ;; Auto vars:     Size  Location     Type
 26573 ;;		None
 26574 ;; Return value:  Size  Location     Type
 26575 ;;                  1  [STACK] enum E16524
 26576 ;; Registers used:
 26577 ;;		wreg, fsr1l, fsr1h
 26578 ;; Tracked objects:
 26579 ;;		On entry : 0/1
 26580 ;;		On exit  : 3F/1
 26581 ;;		Unchanged: 0/0
 26582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26587 ;;Total ram usage:        0 bytes
 26588 ;; Hardware stack levels used:    1
 26589 ;; Hardware stack levels required when called:   15
 26590 ;; This function calls:
 26591 ;;		Nothing
 26592 ;; This function is called by:
 26593 ;;		_check_help
 26594 ;; This function uses a reentrant model
 26595 ;;
 26596                           
 26597                           	psect	text101
 26598  01D2BE                     __ptext101:
 26599                           	opt callstack 0
 26600  01D2BE                     _set_temp_display_help:
 26601                           	opt callstack 14
 26602                           
 26603                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 26604                           
 26605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26606                           ;incstack = 0
 26607  01D2BE  0101               	movlb	1	; () banked
 26608  01D2C0  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 26609                           
 26610                           ; BSR set to: 1
 26611                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 26612                           ;stkvar	_new_response_info @ sp[(0)+-1]
 26613  01D2C2  0EFF               	movlw	-1
 26614  01D2C4  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 26615                           
 26616                           ; BSR set to: 1
 26617                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 26618  01D2CA  52E5               	movf	postdec1,f,c
 26619  01D2CC  0012               	return		;funcret
 26620  01D2CE                     __end_of_set_temp_display_help:
 26621                           	opt callstack 0
 26622                           
 26623 ;; *************** function _set_display_info *****************
 26624 ;; Defined at:
 26625 ;;		line 200 in file "mconfig.c"
 26626 ;; Parameters:    Size  Location     Type
 26627 ;;  new_response    1  [STACK] const enum E16524
 26628 ;; Auto vars:     Size  Location     Type
 26629 ;;		None
 26630 ;; Return value:  Size  Location     Type
 26631 ;;                  1  [STACK] enum E17009
 26632 ;; Registers used:
 26633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26634 ;; Tracked objects:
 26635 ;;		On entry : 0/1
 26636 ;;		On exit  : 0/0
 26637 ;;		Unchanged: 0/0
 26638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26643 ;;Total ram usage:        0 bytes
 26644 ;; Hardware stack levels used:    1
 26645 ;; Hardware stack levels required when called:   16
 26646 ;; This function calls:
 26647 ;;		_TimerDone
 26648 ;; This function is called by:
 26649 ;;		_main
 26650 ;;		_check_help
 26651 ;; This function uses a reentrant model
 26652 ;;
 26653                           
 26654                           	psect	text102
 26655  01D15C                     __ptext102:
 26656                           	opt callstack 0
 26657  01D15C                     _set_display_info:
 26658                           	opt callstack 14
 26659                           
 26660                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 26661                           
 26662                           ; BSR set to: 1
 26663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26664                           ;incstack = 0
 26665  01D15C  0E07               	movlw	7
 26666  01D15E  6EE6               	movwf	postinc1,c
 26667  01D160  ECA9  F0E6         	call	_TimerDone	;wreg free
 26668  01D164  5001               	movf	btemp^0,w,c
 26669  01D166  B4D8               	btfsc	status,2,c
 26670  01D168  D006               	goto	l1757
 26671                           
 26672                           ;mconfig.c: 205:   old_info = V.response.info;
 26673  01D16A  0101               	movlb	1	; () banked
 26674  01D16C  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 26675                           
 26676                           ; BSR set to: 1
 26677                           ;mconfig.c: 206:   V.response.info = new_response_info;
 26678                           ;stkvar	_new_response_info @ sp[(0)+-1]
 26679  01D16E  0EFF               	movlw	-1
 26680  01D170  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 26681  01D176                     l1757:
 26682                           
 26683                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 26684  01D176  52E5               	movf	postdec1,f,c
 26685  01D178  0012               	return		;funcret
 26686  01D17A                     __end_of_set_display_info:
 26687                           	opt callstack 0
 26688                           
 26689 ;; *************** function _mode_lamp_dim *****************
 26690 ;; Defined at:
 26691 ;;		line 13 in file "mconfig.c"
 26692 ;; Parameters:    Size  Location     Type
 26693 ;;  level           2  [STACK] const unsigned short 
 26694 ;; Auto vars:     Size  Location     Type
 26695 ;;		None
 26696 ;; Return value:  Size  Location     Type
 26697 ;;                  1  [STACK] void 
 26698 ;; Registers used:
 26699 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 26700 ;; Tracked objects:
 26701 ;;		On entry : 0/1
 26702 ;;		On exit  : 0/0
 26703 ;;		Unchanged: 0/0
 26704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26709 ;;Total ram usage:        0 bytes
 26710 ;; Hardware stack levels used:    1
 26711 ;; Hardware stack levels required when called:   16
 26712 ;; This function calls:
 26713 ;;		_PWM8_LoadDutyValue
 26714 ;; This function is called by:
 26715 ;;		_main
 26716 ;;		_check_help
 26717 ;; This function uses a reentrant model
 26718 ;;
 26719                           
 26720                           	psect	text103
 26721  01D1CE                     __ptext103:
 26722                           	opt callstack 0
 26723  01D1CE                     _mode_lamp_dim:
 26724                           	opt callstack 14
 26725                           
 26726                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 26727                           ;stkvar	_level @ sp[(0)+-2]
 26728                           
 26729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26730                           ;incstack = 0
 26731  01D1CE  0EFE               	movlw	-2
 26732  01D1D0  006F FF8F FFE6     	movff	plusw1,postinc1
 26733  01D1D6  006F FF8F FFE6     	movff	plusw1,postinc1
 26734  01D1DC  ECD9  F0E3         	call	_PWM8_LoadDutyValue	;wreg free
 26735                           
 26736                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 26737  01D1E0  52E5               	movf	postdec1,f,c
 26738  01D1E2  52E5               	movf	postdec1,f,c
 26739  01D1E4  0012               	return		;funcret
 26740  01D1E6                     __end_of_mode_lamp_dim:
 26741                           	opt callstack 0
 26742                           
 26743 ;; *************** function _mode_lamp_bright *****************
 26744 ;; Defined at:
 26745 ;;		line 18 in file "mconfig.c"
 26746 ;; Parameters:    Size  Location     Type
 26747 ;;		None
 26748 ;; Auto vars:     Size  Location     Type
 26749 ;;		None
 26750 ;; Return value:  Size  Location     Type
 26751 ;;                  1  [STACK] void 
 26752 ;; Registers used:
 26753 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 26754 ;; Tracked objects:
 26755 ;;		On entry : 0/0
 26756 ;;		On exit  : 0/0
 26757 ;;		Unchanged: 0/0
 26758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26763 ;;Total ram usage:        0 bytes
 26764 ;; Hardware stack levels used:    1
 26765 ;; Hardware stack levels required when called:   16
 26766 ;; This function calls:
 26767 ;;		_PWM8_LoadDutyValue
 26768 ;; This function is called by:
 26769 ;;		_check_help
 26770 ;; This function uses a reentrant model
 26771 ;;
 26772                           
 26773                           	psect	text104
 26774  01D2EC                     __ptext104:
 26775                           	opt callstack 0
 26776  01D2EC                     _mode_lamp_bright:
 26777                           	opt callstack 13
 26778                           
 26779                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 26780                           
 26781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26782                           ;incstack = 0
 26783  01D2EC  0E2C               	movlw	44
 26784  01D2EE  6EE6               	movwf	postinc1,c
 26785  01D2F0  0E01               	movlw	1
 26786  01D2F2  6EE6               	movwf	postinc1,c
 26787  01D2F4  ECD9  F0E3         	call	_PWM8_LoadDutyValue	;wreg free
 26788                           
 26789                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 26790  01D2F8  0012               	return		;funcret
 26791  01D2FA                     __end_of_mode_lamp_bright:
 26792                           	opt callstack 0
 26793                           
 26794 ;; *************** function _PWM8_LoadDutyValue *****************
 26795 ;; Defined at:
 26796 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 26797 ;; Parameters:    Size  Location     Type
 26798 ;;  dutyValue       2  [STACK] unsigned short 
 26799 ;; Auto vars:     Size  Location     Type
 26800 ;;		None
 26801 ;; Return value:  Size  Location     Type
 26802 ;;                  1  [STACK] void 
 26803 ;; Registers used:
 26804 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 26805 ;; Tracked objects:
 26806 ;;		On entry : 0/1
 26807 ;;		On exit  : 0/0
 26808 ;;		Unchanged: 0/0
 26809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26814 ;;Total ram usage:        0 bytes
 26815 ;; Hardware stack levels used:    1
 26816 ;; Hardware stack levels required when called:   15
 26817 ;; This function calls:
 26818 ;;		Nothing
 26819 ;; This function is called by:
 26820 ;;		_mode_lamp_dim
 26821 ;;		_mode_lamp_bright
 26822 ;; This function uses a reentrant model
 26823 ;;
 26824                           
 26825                           	psect	text105
 26826  01C7B2                     __ptext105:
 26827                           	opt callstack 0
 26828  01C7B2                     _PWM8_LoadDutyValue:
 26829                           	opt callstack 14
 26830                           
 26831                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 26832                           ;stkvar	_dutyValue @ sp[(0)+-2]
 26833                           
 26834                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26835                           ;incstack = 0
 26836  01C7B2  0EFE               	movlw	-2
 26837  01C7B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 26838  01C7BA  0EFF               	movlw	-1
 26839  01C7BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 26840  01C7C2  90D8               	bcf	status,0,c
 26841  01C7C4  320C               	rrcf	(btemp+11)^0,f,c
 26842  01C7C6  320B               	rrcf	(btemp+10)^0,f,c
 26843  01C7C8  90D8               	bcf	status,0,c
 26844  01C7CA  320C               	rrcf	(btemp+11)^0,f,c
 26845  01C7CC  320B               	rrcf	(btemp+10)^0,f,c
 26846  01C7CE  500B               	movf	(btemp+10)^0,w,c
 26847  01C7D0  6E61               	movwf	97,c	;volatile
 26848                           
 26849                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 26850                           ;stkvar	_dutyValue @ sp[(0)+-2]
 26851  01C7D2  0EFE               	movlw	-2
 26852  01C7D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 26853  01C7DA  0E03               	movlw	3
 26854  01C7DC  160C               	andwf	(btemp+11)^0,f,c
 26855  01C7DE  0E06               	movlw	6
 26856  01C7E0  6E01               	movwf	btemp^0,c
 26857  01C7E2                     u9905:
 26858  01C7E2  90D8               	bcf	status,0,c
 26859  01C7E4  360C               	rlcf	(btemp+11)^0,f,c
 26860  01C7E6  2E01               	decfsz	btemp^0,f,c
 26861  01C7E8  D7FC               	goto	u9905
 26862  01C7EA  500C               	movf	(btemp+11)^0,w,c
 26863  01C7EC  6E60               	movwf	96,c	;volatile
 26864                           
 26865                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 26866  01C7EE  52E5               	movf	postdec1,f,c
 26867  01C7F0  52E5               	movf	postdec1,f,c
 26868  01C7F2  0012               	return		;funcret
 26869  01C7F4                     __end_of_PWM8_LoadDutyValue:
 26870                           	opt callstack 0
 26871                           
 26872 ;; *************** function _help_button *****************
 26873 ;; Defined at:
 26874 ;;		line 26 in file "mconfig.c"
 26875 ;; Parameters:    Size  Location     Type
 26876 ;;		None
 26877 ;; Auto vars:     Size  Location     Type
 26878 ;;		None
 26879 ;; Return value:  Size  Location     Type
 26880 ;;                  1  [STACK] _Bool 
 26881 ;; Registers used:
 26882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26883 ;; Tracked objects:
 26884 ;;		On entry : 0/1
 26885 ;;		On exit  : 0/0
 26886 ;;		Unchanged: 0/0
 26887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26892 ;;Total ram usage:        0 bytes
 26893 ;; Hardware stack levels used:    1
 26894 ;; Hardware stack levels required when called:   16
 26895 ;; This function calls:
 26896 ;;		_StartTimer
 26897 ;;		_TimerDone
 26898 ;; This function is called by:
 26899 ;;		_check_help
 26900 ;; This function uses a reentrant model
 26901 ;;
 26902                           
 26903                           	psect	text106
 26904  01C9E6                     __ptext106:
 26905                           	opt callstack 0
 26906  01C9E6                     _help_button:
 26907                           	opt callstack 13
 26908                           
 26909                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 26910                           
 26911                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26912                           ;incstack = 0
 26913  01C9E6  B0CB               	btfsc	203,0,c	;volatile
 26914  01C9E8  D00C               	goto	l1700
 26915                           
 26916                           ;mconfig.c: 29:   V.help = 1;
 26917  01C9EA  0101               	movlb	1	; () banked
 26918  01C9EC  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 26919                           
 26920                           ; BSR set to: 1
 26921                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 26922  01C9EE  0E08               	movlw	8
 26923  01C9F0  6EE6               	movwf	postinc1,c
 26924  01C9F2  ECA9  F0E6         	call	_TimerDone	;wreg free
 26925  01C9F6  5001               	movf	btemp^0,w,c
 26926  01C9F8  B4D8               	btfsc	status,2,c
 26927  01C9FA  D003               	goto	l1700
 26928                           
 26929                           ;mconfig.c: 31:    return 1;
 26930  01C9FC  0E01               	movlw	1
 26931  01C9FE  6E01               	movwf	btemp^0,c
 26932  01CA00  0012               	return	
 26933  01CA02                     l1700:
 26934                           
 26935                           ;mconfig.c: 34:  if (!V.help)
 26936  01CA02  0101               	movlb	1	; () banked
 26937  01CA04  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 26938  01CA06  D008               	goto	l11401
 26939                           
 26940                           ; BSR set to: 1
 26941                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 26942  01CA08  0E2C               	movlw	44
 26943  01CA0A  6EE6               	movwf	postinc1,c
 26944  01CA0C  0E01               	movlw	1
 26945  01CA0E  6EE6               	movwf	postinc1,c
 26946  01CA10  0E08               	movlw	8
 26947  01CA12  6EE6               	movwf	postinc1,c
 26948  01CA14  EC3A  F0E4         	call	_StartTimer	;wreg free
 26949  01CA18                     l11401:
 26950                           
 26951                           ;mconfig.c: 37:  return 0;
 26952  01CA18  0E00               	movlw	0
 26953  01CA1A  6E01               	movwf	btemp^0,c
 26954                           
 26955                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 26956  01CA1C  0012               	return		;funcret
 26957  01CA1E                     __end_of_help_button:
 26958                           	opt callstack 0
 26959                           
 26960 ;; *************** function _TimerDone *****************
 26961 ;; Defined at:
 26962 ;;		line 20 in file "timers.c"
 26963 ;; Parameters:    Size  Location     Type
 26964 ;;  timer           1  [STACK] const unsigned char 
 26965 ;; Auto vars:     Size  Location     Type
 26966 ;;		None
 26967 ;; Return value:  Size  Location     Type
 26968 ;;                  1  [STACK] _Bool 
 26969 ;; Registers used:
 26970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26971 ;; Tracked objects:
 26972 ;;		On entry : 0/1
 26973 ;;		On exit  : 0/0
 26974 ;;		Unchanged: 0/0
 26975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26980 ;;Total ram usage:        0 bytes
 26981 ;; Hardware stack levels used:    1
 26982 ;; Hardware stack levels required when called:   15
 26983 ;; This function calls:
 26984 ;;		Nothing
 26985 ;; This function is called by:
 26986 ;;		_main
 26987 ;;		_WaitMs
 26988 ;;		_help_button
 26989 ;;		_check_help
 26990 ;;		_set_display_info
 26991 ;;		_update_adc_result
 26992 ;;		_esr_check
 26993 ;; This function uses a reentrant model
 26994 ;;
 26995                           
 26996                           	psect	text107
 26997  01CD52                     __ptext107:
 26998                           	opt callstack 0
 26999  01CD52                     _TimerDone:
 27000                           	opt callstack 14
 27001                           
 27002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27003                           ;incstack = 0
 27004  01CD52  0004               	clrwdt		;# 
 27005                           
 27006                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 27007                           ;stkvar	_timer @ sp[(0)+-1]
 27008  01CD54  0EFF               	movlw	-1
 27009  01CD56  50E3               	movf	plusw1,w,c
 27010  01CD58  0D02               	mullw	2
 27011  01CD5A  0E29               	movlw	low _tickCount
 27012  01CD5C  24F3               	addwf	243,w,c
 27013  01CD5E  6ED9               	movwf	fsr2l,c
 27014  01CD60  0E02               	movlw	high _tickCount
 27015  01CD62  20F4               	addwfc	prodh,w,c
 27016  01CD64  6EDA               	movwf	fsr2h,c
 27017  01CD66  50DE               	movf	postinc2,w,c
 27018  01CD68  10DE               	iorwf	postinc2,w,c
 27019  01CD6A  A4D8               	btfss	status,2,c
 27020  01CD6C  D002               	goto	l10471
 27021                           
 27022                           ;timers.c: 24:   return 1;
 27023  01CD6E  0E01               	movlw	1
 27024  01CD70  D001               	goto	L32
 27025  01CD72                     l10471:
 27026                           
 27027                           ;timers.c: 26:  return 0;
 27028  01CD72  0E00               	movlw	0
 27029  01CD74                     L32:
 27030  01CD74  6E01               	movwf	btemp^0,c
 27031                           
 27032                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 27033  01CD76  52E5               	movf	postdec1,f,c
 27034  01CD78  0012               	return		;funcret
 27035  01CD7A                     __end_of_TimerDone:
 27036                           	opt callstack 0
 27037                           
 27038 ;; *************** function _StartTimer *****************
 27039 ;; Defined at:
 27040 ;;		line 12 in file "timers.c"
 27041 ;; Parameters:    Size  Location     Type
 27042 ;;  timer           1  [STACK] const unsigned char 
 27043 ;;  count           2  [STACK] const unsigned short 
 27044 ;; Auto vars:     Size  Location     Type
 27045 ;;		None
 27046 ;; Return value:  Size  Location     Type
 27047 ;;                  1  [STACK] void 
 27048 ;; Registers used:
 27049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27050 ;; Tracked objects:
 27051 ;;		On entry : 0/0
 27052 ;;		On exit  : 0/0
 27053 ;;		Unchanged: 0/0
 27054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27059 ;;Total ram usage:        0 bytes
 27060 ;; Hardware stack levels used:    1
 27061 ;; Hardware stack levels required when called:   15
 27062 ;; This function calls:
 27063 ;;		Nothing
 27064 ;; This function is called by:
 27065 ;;		_main
 27066 ;;		_WaitMs
 27067 ;;		_help_button
 27068 ;;		_check_help
 27069 ;;		_update_adc_result
 27070 ;;		_calc_bsoc
 27071 ;;		_esr_check
 27072 ;; This function uses a reentrant model
 27073 ;;
 27074                           
 27075                           	psect	text108
 27076  01C874                     __ptext108:
 27077                           	opt callstack 0
 27078  01C874                     _StartTimer:
 27079                           	opt callstack 0
 27080                           
 27081                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 27082                           ;stkvar	_count @ sp[(0)+-3]
 27083                           
 27084                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27085                           ;incstack = 0
 27086 ;; hardware stack exceeded
 27087  01C874  0EFD               	movlw	-3
 27088  01C876  006F FF8C  F00B    	movff	plusw1,btemp+10
 27089  01C87C  0EFE               	movlw	-2
 27090  01C87E  006F FF8C  F00C    	movff	plusw1,btemp+11
 27091  01C884  90D8               	bcf	status,0,c
 27092  01C886  340B               	rlcf	(btemp+10)^0,w,c
 27093  01C888  6E09               	movwf	(btemp+8)^0,c
 27094  01C88A  340C               	rlcf	(btemp+11)^0,w,c
 27095  01C88C  6E0A               	movwf	(btemp+9)^0,c
 27096                           
 27097                           ;stkvar	_timer @ sp[(0)+-1]
 27098  01C88E  0EFF               	movlw	-1
 27099  01C890  50E3               	movf	plusw1,w,c
 27100  01C892  0D02               	mullw	2
 27101  01C894  0E29               	movlw	low _tickCount
 27102  01C896  24F3               	addwf	243,w,c
 27103  01C898  6ED9               	movwf	fsr2l,c
 27104  01C89A  0E02               	movlw	high _tickCount
 27105  01C89C  20F4               	addwfc	prodh,w,c
 27106  01C89E  6EDA               	movwf	fsr2h,c
 27107  01C8A0  0060  F027  FFDE   	movff	btemp+8,postinc2
 27108  01C8A6  0060  F02B  FFDD   	movff	btemp+9,postdec2
 27109                           
 27110                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 27111  01C8AC  52E5               	movf	postdec1,f,c
 27112  01C8AE  52E5               	movf	postdec1,f,c
 27113  01C8B0  52E5               	movf	postdec1,f,c
 27114  01C8B2  0012               	return		;funcret
 27115  01C8B4                     __end_of_StartTimer:
 27116                           	opt callstack 0
 27117                           
 27118 ;; *************** function _display_info *****************
 27119 ;; Defined at:
 27120 ;;		line 190 in file "mconfig.c"
 27121 ;; Parameters:    Size  Location     Type
 27122 ;;		None
 27123 ;; Auto vars:     Size  Location     Type
 27124 ;;		None
 27125 ;; Return value:  Size  Location     Type
 27126 ;;                  1  [STACK] enum E16524
 27127 ;; Registers used:
 27128 ;;		btemp
 27129 ;; Tracked objects:
 27130 ;;		On entry : 0/1
 27131 ;;		On exit  : 0/0
 27132 ;;		Unchanged: 0/0
 27133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27138 ;;Total ram usage:        0 bytes
 27139 ;; Hardware stack levels used:    1
 27140 ;; Hardware stack levels required when called:   15
 27141 ;; This function calls:
 27142 ;;		Nothing
 27143 ;; This function is called by:
 27144 ;;		_check_help
 27145 ;; This function uses a reentrant model
 27146 ;;
 27147                           
 27148                           	psect	text109
 27149  01D36E                     __ptext109:
 27150                           	opt callstack 0
 27151  01D36E                     _display_info:
 27152                           	opt callstack 14
 27153                           
 27154                           ;mconfig.c: 192:  return V.response.info;
 27155                           
 27156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27157                           ;incstack = 0
 27158  01D36E  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 27159                           
 27160                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 27161  01D374  0012               	return		;funcret
 27162  01D376                     __end_of_display_info:
 27163                           	opt callstack 0
 27164                           
 27165 ;; *************** function _display_help *****************
 27166 ;; Defined at:
 27167 ;;		line 195 in file "mconfig.c"
 27168 ;; Parameters:    Size  Location     Type
 27169 ;;		None
 27170 ;; Auto vars:     Size  Location     Type
 27171 ;;		None
 27172 ;; Return value:  Size  Location     Type
 27173 ;;                  1  [STACK] enum E16524
 27174 ;; Registers used:
 27175 ;;		btemp
 27176 ;; Tracked objects:
 27177 ;;		On entry : 3F/1
 27178 ;;		On exit  : 0/0
 27179 ;;		Unchanged: 0/0
 27180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27185 ;;Total ram usage:        0 bytes
 27186 ;; Hardware stack levels used:    1
 27187 ;; Hardware stack levels required when called:   15
 27188 ;; This function calls:
 27189 ;;		Nothing
 27190 ;; This function is called by:
 27191 ;;		_check_help
 27192 ;; This function uses a reentrant model
 27193 ;;
 27194                           
 27195                           	psect	text110
 27196  01D376                     __ptext110:
 27197                           	opt callstack 0
 27198  01D376                     _display_help:
 27199                           	opt callstack 14
 27200                           
 27201                           ;mconfig.c: 197:  return V.response.help_temp;
 27202                           
 27203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27204                           ;incstack = 0
 27205  01D376  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 27206                           
 27207                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 27208  01D37C  0012               	return		;funcret
 27209  01D37E                     __end_of_display_help:
 27210                           	opt callstack 0
 27211                           
 27212 ;; *************** function _check_enter_button *****************
 27213 ;; Defined at:
 27214 ;;		line 49 in file "hid.c"
 27215 ;; Parameters:    Size  Location     Type
 27216 ;;  h               2  [STACK] PTR struct H_data
 27217 ;;		 -> H(9), 
 27218 ;; Auto vars:     Size  Location     Type
 27219 ;;		None
 27220 ;; Return value:  Size  Location     Type
 27221 ;;                  1  [STACK] _Bool 
 27222 ;; Registers used:
 27223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 27224 ;; Tracked objects:
 27225 ;;		On entry : 0/0
 27226 ;;		On exit  : 0/0
 27227 ;;		Unchanged: 0/0
 27228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27233 ;;Total ram usage:        0 bytes
 27234 ;; Hardware stack levels used:    1
 27235 ;; Hardware stack levels required when called:   15
 27236 ;; This function calls:
 27237 ;;		Nothing
 27238 ;; This function is called by:
 27239 ;;		_main
 27240 ;; This function uses a reentrant model
 27241 ;;
 27242                           
 27243                           	psect	text111
 27244  01BEBC                     __ptext111:
 27245                           	opt callstack 0
 27246  01BEBC                     _check_enter_button:
 27247                           	opt callstack 15
 27248                           
 27249                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 27250                           ;stkvar	_h @ sp[(0)+-2]
 27251                           
 27252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27253                           ;incstack = 0
 27254  01BEBC  0EFE               	movlw	-2
 27255  01BEBE  006F FF8C  F00B    	movff	plusw1,btemp+10
 27256  01BEC4  0EFF               	movlw	-1
 27257  01BEC6  006F FF8C  F00C    	movff	plusw1,btemp+11
 27258  01BECC  0E04               	movlw	4
 27259  01BECE  240B               	addwf	(btemp+10)^0,w,c
 27260  01BED0  6ED9               	movwf	fsr2l,c
 27261  01BED2  0E00               	movlw	0
 27262  01BED4  200C               	addwfc	(btemp+11)^0,w,c
 27263  01BED6  6EDA               	movwf	fsr2h,c
 27264  01BED8  50DF               	movf	indf2,w,c
 27265  01BEDA  A4D8               	btfss	status,2,c
 27266  01BEDC  D023               	goto	l14285
 27267                           
 27268                           ;stkvar	_h @ sp[(0)+-2]
 27269  01BEDE  0EFE               	movlw	-2
 27270  01BEE0  006F FF8C  F00B    	movff	plusw1,btemp+10
 27271  01BEE6  0EFF               	movlw	-1
 27272  01BEE8  006F FF8C  F00C    	movff	plusw1,btemp+11
 27273  01BEEE  0E05               	movlw	5
 27274  01BEF0  240B               	addwf	(btemp+10)^0,w,c
 27275  01BEF2  6ED9               	movwf	fsr2l,c
 27276  01BEF4  0E00               	movlw	0
 27277  01BEF6  200C               	addwfc	(btemp+11)^0,w,c
 27278  01BEF8  6EDA               	movwf	fsr2h,c
 27279  01BEFA  50DF               	movf	indf2,w,c
 27280  01BEFC  A4D8               	btfss	status,2,c
 27281  01BEFE  D012               	goto	l14285
 27282                           
 27283                           ;hid.c: 52:   h->wait_enter = 1;
 27284                           ;stkvar	_h @ sp[(0)+-2]
 27285  01BF00  0EFE               	movlw	-2
 27286  01BF02  006F FF8C  F00B    	movff	plusw1,btemp+10
 27287  01BF08  0EFF               	movlw	-1
 27288  01BF0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 27289  01BF10  0E04               	movlw	4
 27290  01BF12  240B               	addwf	(btemp+10)^0,w,c
 27291  01BF14  6ED9               	movwf	fsr2l,c
 27292  01BF16  0E00               	movlw	0
 27293  01BF18  200C               	addwfc	(btemp+11)^0,w,c
 27294  01BF1A  6EDA               	movwf	fsr2h,c
 27295  01BF1C  0E01               	movlw	1
 27296  01BF1E  6EDF               	movwf	indf2,c
 27297                           
 27298                           ;hid.c: 53:   return 1;
 27299  01BF20  0E01               	movlw	1
 27300  01BF22  D001               	goto	L33
 27301  01BF24                     l14285:
 27302                           
 27303                           ;hid.c: 55:  return 0;
 27304  01BF24  0E00               	movlw	0
 27305  01BF26                     L33:
 27306  01BF26  6E01               	movwf	btemp^0,c
 27307                           
 27308                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 27309  01BF28  52E5               	movf	postdec1,f,c
 27310  01BF2A  52E5               	movf	postdec1,f,c
 27311  01BF2C  0012               	return		;funcret
 27312  01BF2E                     __end_of_check_enter_button:
 27313                           	opt callstack 0
 27314                           
 27315 ;; *************** function _calc_ror_data *****************
 27316 ;; Defined at:
 27317 ;;		line 102 in file "mbmc.c"
 27318 ;; Parameters:    Size  Location     Type
 27319 ;;		None
 27320 ;; Auto vars:     Size  Location     Type
 27321 ;;		None
 27322 ;; Return value:  Size  Location     Type
 27323 ;;                  1  [STACK] void 
 27324 ;; Registers used:
 27325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27326 ;; Tracked objects:
 27327 ;;		On entry : 0/0
 27328 ;;		On exit  : 0/0
 27329 ;;		Unchanged: 0/0
 27330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27335 ;;Total ram usage:        0 bytes
 27336 ;; Hardware stack levels used:    1
 27337 ;; Hardware stack levels required when called:   18
 27338 ;; This function calls:
 27339 ;;		___flge
 27340 ;;		___flsub
 27341 ;;		_conv_raw_result
 27342 ;;		_fabsf
 27343 ;; This function is called by:
 27344 ;;		_main
 27345 ;; This function uses a reentrant model
 27346 ;;
 27347                           
 27348                           	psect	text112
 27349  0194FC                     __ptext112:
 27350                           	opt callstack 0
 27351  0194FC                     _calc_ror_data:
 27352                           	opt callstack 12
 27353                           
 27354                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 27355                           
 27356                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27357                           ;incstack = 0
 27358  0194FC  0060  F193  FFE6   	movff	calc_ror_data@bcror,postinc1
 27359  019502  0060  F197  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 27360  019508  0060  F19B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 27361  01950E  0060  F19F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 27362  019514  0E00               	movlw	0
 27363  019516  6EE6               	movwf	postinc1,c
 27364  019518  0E00               	movlw	0
 27365  01951A  6EE6               	movwf	postinc1,c
 27366  01951C  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 27367  019520  0060  F007  FFE6   	movff	btemp,postinc1
 27368  019526  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27369  01952C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27370  019532  0060  F013  FFE6   	movff	btemp+3,postinc1
 27371  019538  EC94  F0E3         	call	___flsub	;wreg free
 27372  01953C  0060  F007  FFE6   	movff	btemp,postinc1
 27373  019542  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27374  019548  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27375  01954E  0060  F013  FFE6   	movff	btemp+3,postinc1
 27376  019554  EC36  F0DA         	call	_fabsf	;wreg free
 27377  019558  0060  F004  F86F   	movff	btemp,_C+112	;volatile
 27378  01955E  0060  F008  F870   	movff	btemp+1,_C+113	;volatile
 27379  019564  0060  F00C  F871   	movff	btemp+2,_C+114	;volatile
 27380  01956A  0060  F010  F872   	movff	btemp+3,_C+115	;volatile
 27381                           
 27382                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 27383  019570  0E00               	movlw	0
 27384  019572  6EE6               	movwf	postinc1,c
 27385  019574  0E00               	movlw	0
 27386  019576  6EE6               	movwf	postinc1,c
 27387  019578  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 27388  01957C  0060  F004  F064   	movff	btemp,calc_ror_data@bcror
 27389  019582  0060  F008  F065   	movff	btemp+1,calc_ror_data@bcror+1
 27390  019588  0060  F00C  F066   	movff	btemp+2,calc_ror_data@bcror+2
 27391  01958E  0060  F010  F067   	movff	btemp+3,calc_ror_data@bcror+3
 27392                           
 27393                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 27394  019594  0060  F1A3  FFE6   	movff	calc_ror_data@bvror,postinc1
 27395  01959A  0060  F1A7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 27396  0195A0  0060  F1AB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 27397  0195A6  0060  F1AF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 27398  0195AC  0E00               	movlw	0
 27399  0195AE  6EE6               	movwf	postinc1,c
 27400  0195B0  0E04               	movlw	4
 27401  0195B2  6EE6               	movwf	postinc1,c
 27402  0195B4  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 27403  0195B8  0060  F007  FFE6   	movff	btemp,postinc1
 27404  0195BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27405  0195C4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27406  0195CA  0060  F013  FFE6   	movff	btemp+3,postinc1
 27407  0195D0  EC94  F0E3         	call	___flsub	;wreg free
 27408  0195D4  0060  F007  FFE6   	movff	btemp,postinc1
 27409  0195DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27410  0195E0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27411  0195E6  0060  F013  FFE6   	movff	btemp+3,postinc1
 27412  0195EC  EC36  F0DA         	call	_fabsf	;wreg free
 27413  0195F0  0060  F004  F86B   	movff	btemp,_C+108	;volatile
 27414  0195F6  0060  F008  F86C   	movff	btemp+1,_C+109	;volatile
 27415  0195FC  0060  F00C  F86D   	movff	btemp+2,_C+110	;volatile
 27416  019602  0060  F010  F86E   	movff	btemp+3,_C+111	;volatile
 27417                           
 27418                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 27419  019608  0EE7               	movlw	231
 27420  01960A  6EE6               	movwf	postinc1,c
 27421  01960C  0E1D               	movlw	29
 27422  01960E  6EE6               	movwf	postinc1,c
 27423  019610  0EA7               	movlw	167
 27424  019612  6EE6               	movwf	postinc1,c
 27425  019614  0E3B               	movlw	59
 27426  019616  6EE6               	movwf	postinc1,c
 27427  019618  EE22  F06B         	lfsr	2,_C+108	;volatile
 27428  01961C  006F FF7B FFE6     	movff	postinc2,postinc1
 27429  019622  006F FF7B FFE6     	movff	postinc2,postinc1
 27430  019628  006F FF7B FFE6     	movff	postinc2,postinc1
 27431  01962E  006F FF7B FFE6     	movff	postinc2,postinc1
 27432  019634  EC73  F0CD         	call	___flge	;wreg free
 27433  019638  B001               	btfsc	btemp& (0+255),0,c
 27434  01963A  D010               	goto	l11951
 27435                           
 27436                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 27437  01963C  0EB0               	movlw	176
 27438  01963E  006F FFA0  F86B    	movff	wreg,_C+108	;volatile
 27439  019644  0E03               	movlw	3
 27440  019646  006F FFA0  F86C    	movff	wreg,_C+109	;volatile
 27441  01964C  0E67               	movlw	103
 27442  01964E  006F FFA0  F86D    	movff	wreg,_C+110	;volatile
 27443  019654  0E3C               	movlw	60
 27444  019656  006F FFA0  F86E    	movff	wreg,_C+111	;volatile
 27445  01965C                     l11951:
 27446                           
 27447                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 27448  01965C  0E00               	movlw	0
 27449  01965E  6EE6               	movwf	postinc1,c
 27450  019660  0E04               	movlw	4
 27451  019662  6EE6               	movwf	postinc1,c
 27452  019664  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 27453  019668  0060  F004  F068   	movff	btemp,calc_ror_data@bvror
 27454  01966E  0060  F008  F069   	movff	btemp+1,calc_ror_data@bvror+1
 27455  019674  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bvror+2
 27456  01967A  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bvror+3
 27457                           
 27458                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 27459  019680  0012               	return		;funcret
 27460  019682                     __end_of_calc_ror_data:
 27461                           	opt callstack 0
 27462                           
 27463 ;; *************** function _fabsf *****************
 27464 ;; Defined at:
 27465 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 27466 ;; Parameters:    Size  Location     Type
 27467 ;;  x               4  [STACK] float 
 27468 ;; Auto vars:     Size  Location     Type
 27469 ;;  u               4  [STACK] struct .
 27470 ;; Return value:  Size  Location     Type
 27471 ;;                  4  [STACK] float 
 27472 ;; Registers used:
 27473 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 27474 ;; Tracked objects:
 27475 ;;		On entry : 0/0
 27476 ;;		On exit  : 0/0
 27477 ;;		Unchanged: 0/0
 27478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27483 ;;Total ram usage:        0 bytes
 27484 ;; Hardware stack levels used:    1
 27485 ;; Hardware stack levels required when called:   15
 27486 ;; This function calls:
 27487 ;;		Nothing
 27488 ;; This function is called by:
 27489 ;;		_main
 27490 ;;		_calc_ror_data
 27491 ;;		_calc_bsoc
 27492 ;;		_esr_check
 27493 ;; This function uses a reentrant model
 27494 ;;
 27495                           
 27496                           	psect	text113
 27497  01B46C                     __ptext113:
 27498                           	opt callstack 0
 27499  01B46C                     _fabsf:
 27500                           	opt callstack 0
 27501                           
 27502                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27503  01B46C  52E6               	movf	postinc1,f,c
 27504  01B46E  52E6               	movf	postinc1,f,c
 27505  01B470  52E6               	movf	postinc1,f,c
 27506  01B472  52E6               	movf	postinc1,f,c
 27507                           
 27508                           ;incstack = 0
 27509 ;; hardware stack exceeded
 27510  01B474  0060  F7B8  F009   	movff	fabsf@F463,btemp+8
 27511  01B47A  0060  F7BC  F00A   	movff	fabsf@F463+1,btemp+9
 27512  01B480  0060  F7C0  F00B   	movff	fabsf@F463+2,btemp+10
 27513  01B486  0060  F7C4  F00C   	movff	fabsf@F463+3,btemp+11
 27514                           
 27515                           ;stkvar	_u @ sp[(-4)+0]
 27516  01B48C  0EFC               	movlw	-4
 27517  01B48E  0060  F027  FFE3   	movff	btemp+8,plusw1
 27518  01B494  0EFD               	movlw	-3
 27519  01B496  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27520  01B49C  0EFE               	movlw	-2
 27521  01B49E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27522  01B4A4  0EFF               	movlw	-1
 27523  01B4A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 27524                           
 27525                           ;stkvar	_x @ sp[(-4)+-4]
 27526  01B4AC  0EF8               	movlw	-8
 27527  01B4AE  006F FF8C  F009    	movff	plusw1,btemp+8
 27528  01B4B4  0EF9               	movlw	-7
 27529  01B4B6  006F FF8C  F00A    	movff	plusw1,btemp+9
 27530  01B4BC  0EFA               	movlw	-6
 27531  01B4BE  006F FF8C  F00B    	movff	plusw1,btemp+10
 27532  01B4C4  0EFB               	movlw	-5
 27533  01B4C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 27534                           
 27535                           ;stkvar	_u @ sp[(-4)+0]
 27536  01B4CC  0EFC               	movlw	-4
 27537  01B4CE  0060  F027  FFE3   	movff	btemp+8,plusw1
 27538  01B4D4  0EFD               	movlw	-3
 27539  01B4D6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27540  01B4DC  0EFE               	movlw	-2
 27541  01B4DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27542  01B4E4  0EFF               	movlw	-1
 27543  01B4E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 27544                           
 27545                           ;stkvar	_u @ sp[(-4)+0]
 27546  01B4EC  0EFF               	movlw	-1
 27547  01B4EE  9EE3               	bcf	plusw1,7,c
 27548                           
 27549                           ;stkvar	_u @ sp[(-4)+0]
 27550  01B4F0  0EFC               	movlw	-4
 27551  01B4F2  006F FF8C  F001    	movff	plusw1,btemp
 27552  01B4F8  0EFD               	movlw	-3
 27553  01B4FA  006F FF8C  F002    	movff	plusw1,btemp+1
 27554  01B500  0EFE               	movlw	-2
 27555  01B502  006F FF8C  F003    	movff	plusw1,btemp+2
 27556  01B508  0EFF               	movlw	-1
 27557  01B50A  006F FF8C  F004    	movff	plusw1,btemp+3
 27558                           
 27559                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 27560  01B510  0EF8               	movlw	248
 27561  01B512  26E1               	addwf	fsr1l,f,c
 27562  01B514  0EFF               	movlw	255
 27563  01B516  22E2               	addwfc	fsr1h,f,c
 27564  01B518  0012               	return		;funcret
 27565  01B51A                     __end_of_fabsf:
 27566                           	opt callstack 0
 27567                           
 27568 ;; *************** function _conv_raw_result *****************
 27569 ;; Defined at:
 27570 ;;		line 128 in file "daq.c"
 27571 ;; Parameters:    Size  Location     Type
 27572 ;;  chan            1  [STACK] const enum E16605
 27573 ;;  to_what         1  [STACK] const enum E16686
 27574 ;; Auto vars:     Size  Location     Type
 27575 ;;		None
 27576 ;; Return value:  Size  Location     Type
 27577 ;;                  4  [STACK] float 
 27578 ;; Registers used:
 27579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27580 ;; Tracked objects:
 27581 ;;		On entry : 0/0
 27582 ;;		On exit  : 0/0
 27583 ;;		Unchanged: 0/0
 27584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27589 ;;Total ram usage:        0 bytes
 27590 ;; Hardware stack levels used:    1
 27591 ;; Hardware stack levels required when called:   17
 27592 ;; This function calls:
 27593 ;;		___fldiv
 27594 ;;		___flmul
 27595 ;;		___flsub
 27596 ;;		___xxtofl
 27597 ;;		_get_raw_result
 27598 ;;		_nanf
 27599 ;; This function is called by:
 27600 ;;		_main
 27601 ;;		_convert_adc_data
 27602 ;;		_calc_ror_data
 27603 ;;		_check_day_time
 27604 ;;		_init_bsoc
 27605 ;;		_esr_check
 27606 ;; This function uses a reentrant model
 27607 ;;
 27608                           
 27609                           	psect	text114
 27610  01543C                     __ptext114:
 27611                           	opt callstack 0
 27612  01543C                     _conv_raw_result:
 27613                           	opt callstack 0
 27614                           
 27615                           ;daq.c: 128: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 129: {;daq.c: 131:  switch (to_what) {
 27616                           
 27617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27618                           ;incstack = 0
 27619 ;; hardware stack exceeded
 27620  01543C  D24A               	goto	l10453
 27621  01543E                     l10399:
 27622                           
 27623                           ;daq.c: 133:   if (!(0b0011110001110111 >> chan & 0x1))
 27624                           ;stkvar	_chan @ sp[(0)+-1]
 27625  01543E  0EFF               	movlw	-1
 27626  015440  006F FF8C  F00C    	movff	plusw1,btemp+11
 27627  015446  0E77               	movlw	119
 27628  015448  6E09               	movwf	(btemp+8)^0,c
 27629  01544A  0E3C               	movlw	60
 27630  01544C  6E0A               	movwf	(btemp+9)^0,c
 27631  01544E  2A0C               	incf	(btemp+11)^0,f,c
 27632  015450  D003               	goto	u9564
 27633  015452                     u9565:
 27634  015452  340A               	rlcf	(btemp+9)^0,w,c
 27635  015454  320A               	rrcf	(btemp+9)^0,f,c
 27636  015456  3209               	rrcf	(btemp+8)^0,f,c
 27637  015458                     u9564:
 27638  015458  2E0C               	decfsz	(btemp+11)^0,f,c
 27639  01545A  D7FB               	goto	u9565
 27640  01545C  B009               	btfsc	(btemp+8)^0,0,c
 27641  01545E  D007               	goto	l10405
 27642                           
 27643                           ;daq.c: 134:    return nanf("");
 27644  015460  0E4D               	movlw	low (STR_81+126)
 27645  015462  6EE6               	movwf	postinc1,c
 27646  015464  0EFB               	movlw	high (STR_81+126)
 27647  015466  6EE6               	movwf	postinc1,c
 27648  015468  EC34  F0E1         	call	_nanf	;wreg free
 27649  01546C  D242               	goto	l1857
 27650  01546E                     l10405:
 27651                           
 27652                           ;daq.c: 136:   if (0b0000000000000011 >> chan & 0x1) {
 27653                           ;stkvar	_chan @ sp[(0)+-1]
 27654  01546E  0EFF               	movlw	-1
 27655  015470  006F FF8C  F00C    	movff	plusw1,btemp+11
 27656  015476  0E03               	movlw	3
 27657  015478  6E09               	movwf	(btemp+8)^0,c
 27658  01547A  0E00               	movlw	0
 27659  01547C  6E0A               	movwf	(btemp+9)^0,c
 27660  01547E  2A0C               	incf	(btemp+11)^0,f,c
 27661  015480  D003               	goto	u9584
 27662  015482                     u9585:
 27663  015482  340A               	rlcf	(btemp+9)^0,w,c
 27664  015484  320A               	rrcf	(btemp+9)^0,f,c
 27665  015486  3209               	rrcf	(btemp+8)^0,f,c
 27666  015488                     u9584:
 27667  015488  2E0C               	decfsz	(btemp+11)^0,f,c
 27668  01548A  D7FB               	goto	u9585
 27669  01548C  A009               	btfss	(btemp+8)^0,0,c
 27670  01548E  D0F3               	goto	l10419
 27671                           
 27672                           ;daq.c: 137:    if (0b0000000000000001 >> chan & 0x1) {
 27673                           ;stkvar	_chan @ sp[(0)+-1]
 27674  015490  0EFF               	movlw	-1
 27675  015492  006F FF8C  F00C    	movff	plusw1,btemp+11
 27676  015498  0E01               	movlw	1
 27677  01549A  6E09               	movwf	(btemp+8)^0,c
 27678  01549C  0E00               	movlw	0
 27679  01549E  6E0A               	movwf	(btemp+9)^0,c
 27680  0154A0  2A0C               	incf	(btemp+11)^0,f,c
 27681  0154A2  D003               	goto	u9604
 27682  0154A4                     u9605:
 27683  0154A4  340A               	rlcf	(btemp+9)^0,w,c
 27684  0154A6  320A               	rrcf	(btemp+9)^0,f,c
 27685  0154A8  3209               	rrcf	(btemp+8)^0,f,c
 27686  0154AA                     u9604:
 27687  0154AA  2E0C               	decfsz	(btemp+11)^0,f,c
 27688  0154AC  D7FB               	goto	u9605
 27689  0154AE  A009               	btfss	(btemp+8)^0,0,c
 27690  0154B0  D071               	goto	l10415
 27691                           
 27692                           ;daq.c: 138:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 27693  0154B2  0060  F363  FFE6   	movff	_R+42,postinc1
 27694  0154B8  0060  F367  FFE6   	movff	_R+43,postinc1
 27695  0154BE  0060  F36B  FFE6   	movff	_R+44,postinc1
 27696  0154C4  0060  F36F  FFE6   	movff	_R+45,postinc1
 27697  0154CA  0060  F350  F009   	movff	_R+38,btemp+8	;volatile
 27698  0154D0  0060  F354  F00A   	movff	_R+39,btemp+9	;volatile
 27699  0154D6  0E00               	movlw	0
 27700  0154D8  BE0A               	btfsc	(btemp+9)^0,7,c
 27701  0154DA  0EFF               	movlw	255
 27702  0154DC  6E0B               	movwf	(btemp+10)^0,c
 27703  0154DE  6E0C               	movwf	(btemp+11)^0,c
 27704  0154E0  0060  F027  FFE6   	movff	btemp+8,postinc1
 27705  0154E6  0060  F02B  FFE6   	movff	btemp+9,postinc1
 27706  0154EC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 27707  0154F2  0060  F033  FFE6   	movff	btemp+11,postinc1
 27708  0154F8  0E01               	movlw	1
 27709  0154FA  6EE6               	movwf	postinc1,c
 27710  0154FC  EC2C  F0C6         	call	___xxtofl	;wreg free
 27711  015500  0060  F007  FFE6   	movff	btemp,postinc1
 27712  015506  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27713  01550C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27714  015512  0060  F013  FFE6   	movff	btemp+3,postinc1
 27715                           
 27716                           ;stkvar	_chan @ sp[(-8)+-1]
 27717  015518  0EF7               	movlw	-9
 27718  01551A  50E3               	movf	plusw1,w,c
 27719  01551C  6EE6               	movwf	postinc1,c
 27720  01551E  ECBD  F0E8         	call	_get_raw_result	;wreg free
 27721  015522  0060  F004  F00B   	movff	btemp,btemp+10
 27722  015528  0060  F008  F00C   	movff	btemp+1,btemp+11
 27723  01552E  500B               	movf	(btemp+10)^0,w,c
 27724  015530  6E05               	movwf	(btemp+4)^0,c
 27725  015532  500C               	movf	(btemp+11)^0,w,c
 27726  015534  6E06               	movwf	(btemp+5)^0,c
 27727  015536  6A07               	clrf	(btemp+6)^0,c
 27728  015538  6A08               	clrf	(btemp+7)^0,c
 27729  01553A  0060  F017  FFE6   	movff	btemp+4,postinc1
 27730  015540  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27731  015546  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27732  01554C  0060  F023  FFE6   	movff	btemp+7,postinc1
 27733  015552  0E00               	movlw	0
 27734  015554  6EE6               	movwf	postinc1,c
 27735  015556  EC2C  F0C6         	call	___xxtofl	;wreg free
 27736  01555A  0060  F007  FFE6   	movff	btemp,postinc1
 27737  015560  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27738  015566  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27739  01556C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27740  015572  EC94  F0E3         	call	___flsub	;wreg free
 27741  015576  0060  F007  FFE6   	movff	btemp,postinc1
 27742  01557C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27743  015582  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27744  015588  0060  F013  FFE6   	movff	btemp+3,postinc1
 27745  01558E  EC6E  F09F         	call	___flmul	;wreg free
 27746  015592  D1AF               	goto	l1857
 27747  015594                     l10415:
 27748                           
 27749                           ;daq.c: 140:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 27750  015594  0060  F373  FFE6   	movff	_R+46,postinc1
 27751  01559A  0060  F377  FFE6   	movff	_R+47,postinc1
 27752  0155A0  0060  F37B  FFE6   	movff	_R+48,postinc1
 27753  0155A6  0060  F37F  FFE6   	movff	_R+49,postinc1
 27754  0155AC  0060  F358  F009   	movff	_R+40,btemp+8	;volatile
 27755  0155B2  0060  F35C  F00A   	movff	_R+41,btemp+9	;volatile
 27756  0155B8  0E00               	movlw	0
 27757  0155BA  BE0A               	btfsc	(btemp+9)^0,7,c
 27758  0155BC  0EFF               	movlw	255
 27759  0155BE  6E0B               	movwf	(btemp+10)^0,c
 27760  0155C0  6E0C               	movwf	(btemp+11)^0,c
 27761  0155C2  0060  F027  FFE6   	movff	btemp+8,postinc1
 27762  0155C8  0060  F02B  FFE6   	movff	btemp+9,postinc1
 27763  0155CE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 27764  0155D4  0060  F033  FFE6   	movff	btemp+11,postinc1
 27765  0155DA  0E01               	movlw	1
 27766  0155DC  6EE6               	movwf	postinc1,c
 27767  0155DE  EC2C  F0C6         	call	___xxtofl	;wreg free
 27768  0155E2  0060  F007  FFE6   	movff	btemp,postinc1
 27769  0155E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27770  0155EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27771  0155F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 27772                           
 27773                           ;stkvar	_chan @ sp[(-8)+-1]
 27774  0155FA  0EF7               	movlw	-9
 27775  0155FC  50E3               	movf	plusw1,w,c
 27776  0155FE  6EE6               	movwf	postinc1,c
 27777  015600  ECBD  F0E8         	call	_get_raw_result	;wreg free
 27778  015604  0060  F004  F00B   	movff	btemp,btemp+10
 27779  01560A  0060  F008  F00C   	movff	btemp+1,btemp+11
 27780  015610  500B               	movf	(btemp+10)^0,w,c
 27781  015612  6E05               	movwf	(btemp+4)^0,c
 27782  015614  500C               	movf	(btemp+11)^0,w,c
 27783  015616  6E06               	movwf	(btemp+5)^0,c
 27784  015618  6A07               	clrf	(btemp+6)^0,c
 27785  01561A  6A08               	clrf	(btemp+7)^0,c
 27786  01561C  0060  F017  FFE6   	movff	btemp+4,postinc1
 27787  015622  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27788  015628  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27789  01562E  0060  F023  FFE6   	movff	btemp+7,postinc1
 27790  015634  0E00               	movlw	0
 27791  015636  6EE6               	movwf	postinc1,c
 27792  015638  EC2C  F0C6         	call	___xxtofl	;wreg free
 27793  01563C  0060  F007  FFE6   	movff	btemp,postinc1
 27794  015642  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27795  015648  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27796  01564E  0060  F013  FFE6   	movff	btemp+3,postinc1
 27797  015654  EC94  F0E3         	call	___flsub	;wreg free
 27798  015658  0060  F007  FFE6   	movff	btemp,postinc1
 27799  01565E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27800  015664  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27801  01566A  0060  F013  FFE6   	movff	btemp+3,postinc1
 27802  015670  EC6E  F09F         	call	___flmul	;wreg free
 27803  015674  D13E               	goto	l1857
 27804  015676                     l10419:
 27805                           
 27806                           ;daq.c: 143:    if (0b0000100000000000 >> chan & 0x1) {
 27807                           ;stkvar	_chan @ sp[(0)+-1]
 27808  015676  0EFF               	movlw	-1
 27809  015678  006F FF8C  F00C    	movff	plusw1,btemp+11
 27810  01567E  0E00               	movlw	0
 27811  015680  6E09               	movwf	(btemp+8)^0,c
 27812  015682  0E08               	movlw	8
 27813  015684  6E0A               	movwf	(btemp+9)^0,c
 27814  015686  2A0C               	incf	(btemp+11)^0,f,c
 27815  015688  D003               	goto	u9624
 27816  01568A                     u9625:
 27817  01568A  340A               	rlcf	(btemp+9)^0,w,c
 27818  01568C  320A               	rrcf	(btemp+9)^0,f,c
 27819  01568E  3209               	rrcf	(btemp+8)^0,f,c
 27820  015690                     u9624:
 27821  015690  2E0C               	decfsz	(btemp+11)^0,f,c
 27822  015692  D7FB               	goto	u9625
 27823  015694  A009               	btfss	(btemp+8)^0,0,c
 27824  015696  D008               	goto	l10427
 27825                           
 27826                           ;daq.c: 144:     return 25.0;
 27827  015698  0E00               	movlw	0
 27828  01569A  6E01               	movwf	btemp^0,c
 27829  01569C  0E00               	movlw	0
 27830  01569E  6E02               	movwf	(btemp+1)^0,c
 27831  0156A0  0EC8               	movlw	200
 27832  0156A2  6E03               	movwf	(btemp+2)^0,c
 27833  0156A4  0E41               	movlw	65
 27834  0156A6  D113               	goto	L34
 27835  0156A8                     l10427:
 27836                           
 27837                           ;daq.c: 146:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 27838  0156A8  0E00               	movlw	0
 27839  0156AA  6EE6               	movwf	postinc1,c
 27840  0156AC  0E00               	movlw	0
 27841  0156AE  6EE6               	movwf	postinc1,c
 27842  0156B0  0E7A               	movlw	122
 27843  0156B2  6EE6               	movwf	postinc1,c
 27844  0156B4  0E44               	movlw	68
 27845  0156B6  6EE6               	movwf	postinc1,c
 27846  0156B8  0E61               	movlw	97
 27847  0156BA  6EE6               	movwf	postinc1,c
 27848  0156BC  0E03               	movlw	3
 27849  0156BE  6EE6               	movwf	postinc1,c
 27850  0156C0  0E84               	movlw	132
 27851  0156C2  6EE6               	movwf	postinc1,c
 27852  0156C4  0E40               	movlw	64
 27853  0156C6  6EE6               	movwf	postinc1,c
 27854                           
 27855                           ;stkvar	_chan @ sp[(-8)+-1]
 27856  0156C8  0EF7               	movlw	-9
 27857  0156CA  50E3               	movf	plusw1,w,c
 27858  0156CC  6EE6               	movwf	postinc1,c
 27859  0156CE  ECBD  F0E8         	call	_get_raw_result	;wreg free
 27860  0156D2  0060  F004  F00B   	movff	btemp,btemp+10
 27861  0156D8  0060  F008  F00C   	movff	btemp+1,btemp+11
 27862  0156DE  500B               	movf	(btemp+10)^0,w,c
 27863  0156E0  6E05               	movwf	(btemp+4)^0,c
 27864  0156E2  500C               	movf	(btemp+11)^0,w,c
 27865  0156E4  6E06               	movwf	(btemp+5)^0,c
 27866  0156E6  6A07               	clrf	(btemp+6)^0,c
 27867  0156E8  6A08               	clrf	(btemp+7)^0,c
 27868  0156EA  0060  F017  FFE6   	movff	btemp+4,postinc1
 27869  0156F0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27870  0156F6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27871  0156FC  0060  F023  FFE6   	movff	btemp+7,postinc1
 27872  015702  0E00               	movlw	0
 27873  015704  6EE6               	movwf	postinc1,c
 27874  015706  EC2C  F0C6         	call	___xxtofl	;wreg free
 27875  01570A  0060  F007  FFE6   	movff	btemp,postinc1
 27876  015710  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27877  015716  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27878  01571C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27879  015722  EC6E  F09F         	call	___flmul	;wreg free
 27880  015726  0060  F007  FFE6   	movff	btemp,postinc1
 27881  01572C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27882  015732  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27883  015738  0060  F013  FFE6   	movff	btemp+3,postinc1
 27884  01573E  EC61  F0A7         	call	___fldiv	;wreg free
 27885  015742  D0D7               	goto	l1857
 27886  015744                     l10431:
 27887                           
 27888                           ;daq.c: 151:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 27889                           ;stkvar	_chan @ sp[(0)+-1]
 27890  015744  0EFF               	movlw	-1
 27891  015746  006F FF8C  F00C    	movff	plusw1,btemp+11
 27892  01574C  0E03               	movlw	3
 27893  01574E  6E09               	movwf	(btemp+8)^0,c
 27894  015750  0E00               	movlw	0
 27895  015752  6E0A               	movwf	(btemp+9)^0,c
 27896  015754  2A0C               	incf	(btemp+11)^0,f,c
 27897  015756  D003               	goto	u9644
 27898  015758                     u9645:
 27899  015758  340A               	rlcf	(btemp+9)^0,w,c
 27900  01575A  320A               	rrcf	(btemp+9)^0,f,c
 27901  01575C  3209               	rrcf	(btemp+8)^0,f,c
 27902  01575E                     u9644:
 27903  01575E  2E0C               	decfsz	(btemp+11)^0,f,c
 27904  015760  D7FB               	goto	u9645
 27905  015762  B009               	btfsc	(btemp+8)^0,0,c
 27906  015764  D011               	goto	u9670
 27907                           
 27908                           ;stkvar	_chan @ sp[(0)+-1]
 27909  015766  0EFF               	movlw	-1
 27910  015768  006F FF8C  F00C    	movff	plusw1,btemp+11
 27911  01576E  0E00               	movlw	0
 27912  015770  6E09               	movwf	(btemp+8)^0,c
 27913  015772  0E08               	movlw	8
 27914  015774  6E0A               	movwf	(btemp+9)^0,c
 27915  015776  2A0C               	incf	(btemp+11)^0,f,c
 27916  015778  D003               	goto	u9664
 27917  01577A                     u9665:
 27918  01577A  340A               	rlcf	(btemp+9)^0,w,c
 27919  01577C  320A               	rrcf	(btemp+9)^0,f,c
 27920  01577E  3209               	rrcf	(btemp+8)^0,f,c
 27921  015780                     u9664:
 27922  015780  2E0C               	decfsz	(btemp+11)^0,f,c
 27923  015782  D7FB               	goto	u9665
 27924  015784  A009               	btfss	(btemp+8)^0,0,c
 27925  015786  D04E               	goto	l10439
 27926  015788                     u9670:
 27927                           
 27928                           ;daq.c: 152:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 27929  015788  0E00               	movlw	0
 27930  01578A  6EE6               	movwf	postinc1,c
 27931  01578C  0E00               	movlw	0
 27932  01578E  6EE6               	movwf	postinc1,c
 27933  015790  0E7A               	movlw	122
 27934  015792  6EE6               	movwf	postinc1,c
 27935  015794  0E44               	movlw	68
 27936  015796  6EE6               	movwf	postinc1,c
 27937  015798  0E00               	movlw	0
 27938  01579A  6EE6               	movwf	postinc1,c
 27939  01579C  0E00               	movlw	0
 27940  01579E  6EE6               	movwf	postinc1,c
 27941  0157A0  0E20               	movlw	32
 27942  0157A2  6EE6               	movwf	postinc1,c
 27943  0157A4  0E3F               	movlw	63
 27944  0157A6  6EE6               	movwf	postinc1,c
 27945                           
 27946                           ;stkvar	_chan @ sp[(-8)+-1]
 27947  0157A8  0EF7               	movlw	-9
 27948  0157AA  50E3               	movf	plusw1,w,c
 27949  0157AC  6EE6               	movwf	postinc1,c
 27950  0157AE  ECBD  F0E8         	call	_get_raw_result	;wreg free
 27951  0157B2  0060  F004  F00B   	movff	btemp,btemp+10
 27952  0157B8  0060  F008  F00C   	movff	btemp+1,btemp+11
 27953  0157BE  500B               	movf	(btemp+10)^0,w,c
 27954  0157C0  6E05               	movwf	(btemp+4)^0,c
 27955  0157C2  500C               	movf	(btemp+11)^0,w,c
 27956  0157C4  6E06               	movwf	(btemp+5)^0,c
 27957  0157C6  6A07               	clrf	(btemp+6)^0,c
 27958  0157C8  6A08               	clrf	(btemp+7)^0,c
 27959  0157CA  0060  F017  FFE6   	movff	btemp+4,postinc1
 27960  0157D0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27961  0157D6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27962  0157DC  0060  F023  FFE6   	movff	btemp+7,postinc1
 27963  0157E2  0E00               	movlw	0
 27964  0157E4  6EE6               	movwf	postinc1,c
 27965  0157E6  EC2C  F0C6         	call	___xxtofl	;wreg free
 27966  0157EA  0060  F007  FFE6   	movff	btemp,postinc1
 27967  0157F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27968  0157F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27969  0157FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 27970  015802  EC6E  F09F         	call	___flmul	;wreg free
 27971  015806  0060  F007  FFE6   	movff	btemp,postinc1
 27972  01580C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27973  015812  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27974  015818  0060  F013  FFE6   	movff	btemp+3,postinc1
 27975  01581E  EC61  F0A7         	call	___fldiv	;wreg free
 27976  015822  D067               	goto	l1857
 27977  015824                     l10439:
 27978                           
 27979                           ;daq.c: 154:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 27980  015824  0E00               	movlw	0
 27981  015826  6EE6               	movwf	postinc1,c
 27982  015828  0E00               	movlw	0
 27983  01582A  6EE6               	movwf	postinc1,c
 27984  01582C  0E7A               	movlw	122
 27985  01582E  6EE6               	movwf	postinc1,c
 27986  015830  0E44               	movlw	68
 27987  015832  6EE6               	movwf	postinc1,c
 27988  015834  0E61               	movlw	97
 27989  015836  6EE6               	movwf	postinc1,c
 27990  015838  0E03               	movlw	3
 27991  01583A  6EE6               	movwf	postinc1,c
 27992  01583C  0E84               	movlw	132
 27993  01583E  6EE6               	movwf	postinc1,c
 27994  015840  0E40               	movlw	64
 27995  015842  6EE6               	movwf	postinc1,c
 27996                           
 27997                           ;stkvar	_chan @ sp[(-8)+-1]
 27998  015844  0EF7               	movlw	-9
 27999  015846  50E3               	movf	plusw1,w,c
 28000  015848  6EE6               	movwf	postinc1,c
 28001  01584A  ECBD  F0E8         	call	_get_raw_result	;wreg free
 28002  01584E  0060  F004  F00B   	movff	btemp,btemp+10
 28003  015854  0060  F008  F00C   	movff	btemp+1,btemp+11
 28004  01585A  500B               	movf	(btemp+10)^0,w,c
 28005  01585C  6E05               	movwf	(btemp+4)^0,c
 28006  01585E  500C               	movf	(btemp+11)^0,w,c
 28007  015860  6E06               	movwf	(btemp+5)^0,c
 28008  015862  6A07               	clrf	(btemp+6)^0,c
 28009  015864  6A08               	clrf	(btemp+7)^0,c
 28010  015866  0060  F017  FFE6   	movff	btemp+4,postinc1
 28011  01586C  0060  F01B  FFE6   	movff	btemp+5,postinc1
 28012  015872  0060  F01F  FFE6   	movff	btemp+6,postinc1
 28013  015878  0060  F023  FFE6   	movff	btemp+7,postinc1
 28014  01587E  0E00               	movlw	0
 28015  015880  6EE6               	movwf	postinc1,c
 28016  015882  EC2C  F0C6         	call	___xxtofl	;wreg free
 28017  015886  0060  F007  FFE6   	movff	btemp,postinc1
 28018  01588C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28019  015892  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28020  015898  0060  F013  FFE6   	movff	btemp+3,postinc1
 28021  01589E  EC6E  F09F         	call	___flmul	;wreg free
 28022  0158A2  0060  F007  FFE6   	movff	btemp,postinc1
 28023  0158A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28024  0158AE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28025  0158B4  0060  F013  FFE6   	movff	btemp+3,postinc1
 28026  0158BA  EC61  F0A7         	call	___fldiv	;wreg free
 28027  0158BE  D019               	goto	l1857
 28028  0158C0                     l10445:
 28029                           
 28030                           ;daq.c: 157:   return 0.0;
 28031  0158C0  0E00               	movlw	0
 28032  0158C2  6E01               	movwf	btemp^0,c
 28033  0158C4  0E00               	movlw	0
 28034  0158C6  6E02               	movwf	(btemp+1)^0,c
 28035  0158C8  0E00               	movlw	0
 28036  0158CA  6E03               	movwf	(btemp+2)^0,c
 28037  0158CC  0E00               	movlw	0
 28038  0158CE                     L34:
 28039  0158CE  6E04               	movwf	(btemp+3)^0,c
 28040  0158D0  D010               	goto	l1857
 28041  0158D2                     l10453:
 28042                           
 28043                           ;stkvar	_to_what @ sp[(0)+-2]
 28044  0158D2  0EFE               	movlw	-2
 28045  0158D4  50E3               	movf	plusw1,w,c
 28046  0158D6  6E0B               	movwf	(btemp+10)^0,c
 28047  0158D8  6A0C               	clrf	(btemp+11)^0,c
 28048                           
 28049                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28050                           ; Switch size 1, requested type "simple"
 28051                           ; Number of cases is 1, Range of values is 0 to 0
 28052                           ; switch strategies available:
 28053                           ; Name         Instructions Cycles
 28054                           ; simple_byte            4     3 (average)
 28055                           ;	Chosen strategy is simple_byte
 28056  0158DA  500C               	movf	(btemp+11)^0,w,c
 28057  0158DC  0A00               	xorlw	0	; case 0
 28058  0158DE  A4D8               	btfss	status,2,c
 28059  0158E0  D7EF               	goto	l10445
 28060                           
 28061                           ; Switch size 1, requested type "simple"
 28062                           ; Number of cases is 2, Range of values is 0 to 1
 28063                           ; switch strategies available:
 28064                           ; Name         Instructions Cycles
 28065                           ; simple_byte            7     4 (average)
 28066                           ;	Chosen strategy is simple_byte
 28067  0158E2  500B               	movf	(btemp+10)^0,w,c
 28068  0158E4  0A00               	xorlw	0	; case 0
 28069  0158E6  B4D8               	btfsc	status,2,c
 28070  0158E8  D5AA               	goto	l10399
 28071  0158EA  0A01               	xorlw	1	; case 1
 28072  0158EC  B4D8               	btfsc	status,2,c
 28073  0158EE  D72A               	goto	l10431
 28074  0158F0  D7E7               	goto	l10445
 28075  0158F2                     l1857:
 28076                           
 28077                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 28078  0158F2  52E5               	movf	postdec1,f,c
 28079  0158F4  52E5               	movf	postdec1,f,c
 28080  0158F6  0012               	return		;funcret
 28081  0158F8                     __end_of_conv_raw_result:
 28082                           	opt callstack 0
 28083                           
 28084 ;; *************** function _nanf *****************
 28085 ;; Defined at:
 28086 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 28087 ;; Parameters:    Size  Location     Type
 28088 ;;  s               2  [STACK] PTR const unsigned char 
 28089 ;;		 -> STR_118(1), STR_80(1), 
 28090 ;; Auto vars:     Size  Location     Type
 28091 ;;  u               4  [STACK] struct .
 28092 ;; Return value:  Size  Location     Type
 28093 ;;                  4  [STACK] float 
 28094 ;; Registers used:
 28095 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 28096 ;; Tracked objects:
 28097 ;;		On entry : 0/0
 28098 ;;		On exit  : 0/0
 28099 ;;		Unchanged: 0/0
 28100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28105 ;;Total ram usage:        0 bytes
 28106 ;; Hardware stack levels used:    1
 28107 ;; Hardware stack levels required when called:   15
 28108 ;; This function calls:
 28109 ;;		Nothing
 28110 ;; This function is called by:
 28111 ;;		_conv_raw_result
 28112 ;; This function uses a reentrant model
 28113 ;;
 28114                           
 28115                           	psect	text115
 28116  01C268                     __ptext115:
 28117                           	opt callstack 0
 28118  01C268                     _nanf:
 28119                           	opt callstack 0
 28120                           
 28121                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28122  01C268  52E6               	movf	postinc1,f,c
 28123  01C26A  52E6               	movf	postinc1,f,c
 28124  01C26C  52E6               	movf	postinc1,f,c
 28125  01C26E  52E6               	movf	postinc1,f,c
 28126                           
 28127                           ;incstack = 0
 28128 ;; hardware stack exceeded
 28129  01C270  0EFF               	movlw	255
 28130  01C272  6E09               	movwf	(btemp+8)^0,c
 28131  01C274  0EFF               	movlw	255
 28132  01C276  6E0A               	movwf	(btemp+9)^0,c
 28133  01C278  0EFF               	movlw	255
 28134  01C27A  6E0B               	movwf	(btemp+10)^0,c
 28135  01C27C  0E7F               	movlw	127
 28136  01C27E  6E0C               	movwf	(btemp+11)^0,c
 28137                           
 28138                           ;stkvar	_u @ sp[(-4)+0]
 28139  01C280  0EFC               	movlw	-4
 28140  01C282  0060  F027  FFE3   	movff	btemp+8,plusw1
 28141  01C288  0EFD               	movlw	-3
 28142  01C28A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28143  01C290  0EFE               	movlw	-2
 28144  01C292  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28145  01C298  0EFF               	movlw	-1
 28146  01C29A  0060  F033  FFE3   	movff	btemp+11,plusw1
 28147                           
 28148                           ;stkvar	_u @ sp[(-4)+0]
 28149  01C2A0  0EFC               	movlw	-4
 28150  01C2A2  006F FF8C  F001    	movff	plusw1,btemp
 28151  01C2A8  0EFD               	movlw	-3
 28152  01C2AA  006F FF8C  F002    	movff	plusw1,btemp+1
 28153  01C2B0  0EFE               	movlw	-2
 28154  01C2B2  006F FF8C  F003    	movff	plusw1,btemp+2
 28155  01C2B8  0EFF               	movlw	-1
 28156  01C2BA  006F FF8C  F004    	movff	plusw1,btemp+3
 28157                           
 28158                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 28159  01C2C0  0EFA               	movlw	250
 28160  01C2C2  26E1               	addwf	fsr1l,f,c
 28161  01C2C4  0EFF               	movlw	255
 28162  01C2C6  22E2               	addwfc	fsr1h,f,c
 28163  01C2C8  0012               	return		;funcret
 28164  01C2CA                     __end_of_nanf:
 28165                           	opt callstack 0
 28166                           
 28167 ;; *************** function _get_raw_result *****************
 28168 ;; Defined at:
 28169 ;;		line 120 in file "daq.c"
 28170 ;; Parameters:    Size  Location     Type
 28171 ;;  index           1  [STACK] const enum E16605
 28172 ;; Auto vars:     Size  Location     Type
 28173 ;;		None
 28174 ;; Return value:  Size  Location     Type
 28175 ;;                  2  [STACK] unsigned short 
 28176 ;; Registers used:
 28177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 28178 ;; Tracked objects:
 28179 ;;		On entry : 0/1
 28180 ;;		On exit  : 0/0
 28181 ;;		Unchanged: 0/0
 28182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28187 ;;Total ram usage:        0 bytes
 28188 ;; Hardware stack levels used:    1
 28189 ;; Hardware stack levels required when called:   15
 28190 ;; This function calls:
 28191 ;;		Nothing
 28192 ;; This function is called by:
 28193 ;;		_main
 28194 ;;		_current_sensor_cal
 28195 ;;		_conv_raw_result
 28196 ;; This function uses a reentrant model
 28197 ;;
 28198                           
 28199                           	psect	text116
 28200  01D17A                     __ptext116:
 28201                           	opt callstack 0
 28202  01D17A                     _get_raw_result:
 28203                           	opt callstack 0
 28204                           
 28205                           ;daq.c: 120: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 121: {;daq.c
      +                          : 122:  return R.raw_adc[index];
 28206                           ;stkvar	_index @ sp[(0)+-1]
 28207                           
 28208                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28209                           ;incstack = 0
 28210 ;; hardware stack exceeded
 28211  01D17A  0EFF               	movlw	-1
 28212  01D17C  50E3               	movf	plusw1,w,c
 28213  01D17E  0D02               	mullw	2
 28214  01D180  50F3               	movf	243,w,c
 28215  01D182  0FAE               	addlw	low _R
 28216  01D184  6ED9               	movwf	fsr2l,c
 28217  01D186  6ADA               	clrf	fsr2h,c
 28218  01D188  006F FF78  F001    	movff	postinc2,btemp
 28219  01D18E  006F FF74  F002    	movff	postdec2,btemp+1
 28220                           
 28221                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 28222  01D194  52E5               	movf	postdec1,f,c
 28223  01D196  0012               	return		;funcret
 28224  01D198                     __end_of_get_raw_result:
 28225                           	opt callstack 0
 28226                           
 28227 ;; *************** function ___xxtofl *****************
 28228 ;; Defined at:
 28229 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 28230 ;; Parameters:    Size  Location     Type
 28231 ;;  sign            1  [STACK] unsigned char 
 28232 ;;  val             4  [STACK] long 
 28233 ;; Auto vars:     Size  Location     Type
 28234 ;;  arg             4  [STACK] unsigned long 
 28235 ;;  exp             1  [STACK] unsigned char 
 28236 ;; Return value:  Size  Location     Type
 28237 ;;                  4  [STACK] unsigned char 
 28238 ;; Registers used:
 28239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 28240 ;; Tracked objects:
 28241 ;;		On entry : 0/0
 28242 ;;		On exit  : 0/0
 28243 ;;		Unchanged: 0/0
 28244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28249 ;;Total ram usage:        0 bytes
 28250 ;; Hardware stack levels used:    1
 28251 ;; Hardware stack levels required when called:   15
 28252 ;; This function calls:
 28253 ;;		Nothing
 28254 ;; This function is called by:
 28255 ;;		_conv_raw_result
 28256 ;;		_init_bsoc
 28257 ;; This function uses a reentrant model
 28258 ;;
 28259                           
 28260                           	psect	text117
 28261  018C58                     __ptext117:
 28262                           	opt callstack 0
 28263  018C58                     ___xxtofl:
 28264                           	opt callstack 0
 28265                           
 28266                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28267  018C58  0E05               	movlw	5
 28268  018C5A  26E1               	addwf	fsr1l,f,c
 28269  018C5C  0E00               	movlw	0
 28270  018C5E  22E2               	addwfc	fsr1h,f,c
 28271                           
 28272                           ;stkvar	_sign @ sp[(-5)+-1]
 28273                           
 28274                           ;incstack = 0
 28275 ;; hardware stack exceeded
 28276  018C60  0EFA               	movlw	-6
 28277  018C62  50E3               	movf	plusw1,w,c
 28278  018C64  B4D8               	btfsc	status,2,c
 28279  018C66  D01D               	goto	l10347
 28280                           
 28281                           ;stkvar	_val @ sp[(-5)+-5]
 28282  018C68  0EF9               	movlw	-7
 28283  018C6A  AEE3               	btfss	plusw1,7,c
 28284  018C6C  D01A               	goto	l10347
 28285                           
 28286                           ;stkvar	_val @ sp[(-5)+-5]
 28287  018C6E  0EF6               	movlw	-10
 28288  018C70  006F FF8C  F009    	movff	plusw1,btemp+8
 28289  018C76  0EF7               	movlw	-9
 28290  018C78  006F FF8C  F00A    	movff	plusw1,btemp+9
 28291  018C7E  0EF8               	movlw	-8
 28292  018C80  006F FF8C  F00B    	movff	plusw1,btemp+10
 28293  018C86  0EF9               	movlw	-7
 28294  018C88  006F FF8C  F00C    	movff	plusw1,btemp+11
 28295  018C8E  1E09               	comf	(btemp+8)^0,f,c
 28296  018C90  1E0A               	comf	(btemp+9)^0,f,c
 28297  018C92  1E0B               	comf	(btemp+10)^0,f,c
 28298  018C94  1E0C               	comf	(btemp+11)^0,f,c
 28299  018C96  2A09               	incf	(btemp+8)^0,f,c
 28300  018C98  0E00               	movlw	0
 28301  018C9A  220A               	addwfc	(btemp+9)^0,f,c
 28302  018C9C  220B               	addwfc	(btemp+10)^0,f,c
 28303  018C9E  220C               	addwfc	(btemp+11)^0,f,c
 28304  018CA0  D010               	goto	L35
 28305  018CA2                     l10347:
 28306                           
 28307                           ;stkvar	_val @ sp[(-5)+-5]
 28308  018CA2  0EF6               	movlw	-10
 28309  018CA4  006F FF8C  F009    	movff	plusw1,btemp+8
 28310  018CAA  0EF7               	movlw	-9
 28311  018CAC  006F FF8C  F00A    	movff	plusw1,btemp+9
 28312  018CB2  0EF8               	movlw	-8
 28313  018CB4  006F FF8C  F00B    	movff	plusw1,btemp+10
 28314  018CBA  0EF9               	movlw	-7
 28315  018CBC  006F FF8C  F00C    	movff	plusw1,btemp+11
 28316  018CC2                     L35:
 28317                           
 28318                           ;stkvar	_arg @ sp[(-5)+0]
 28319  018CC2  0EFB               	movlw	-5
 28320  018CC4  0060  F027  FFE3   	movff	btemp+8,plusw1
 28321  018CCA  0EFC               	movlw	-4
 28322  018CCC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28323  018CD2  0EFD               	movlw	-3
 28324  018CD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28325  018CDA  0EFE               	movlw	-2
 28326  018CDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 28327                           
 28328                           ;stkvar	_val @ sp[(-5)+-5]
 28329  018CE2  0EF6               	movlw	-10
 28330  018CE4  50E3               	movf	plusw1,w,c
 28331  018CE6  E113               	bnz	l10355
 28332  018CE8  0EF7               	movlw	-9
 28333  018CEA  50E3               	movf	plusw1,w,c
 28334  018CEC  E110               	bnz	l10355
 28335  018CEE  0EF8               	movlw	-8
 28336  018CF0  50E3               	movf	plusw1,w,c
 28337  018CF2  E10D               	bnz	l10355
 28338  018CF4  0EF9               	movlw	-7
 28339  018CF6  50E3               	movf	plusw1,w,c
 28340  018CF8  A4D8               	btfss	status,2,c
 28341  018CFA  D009               	goto	l10355
 28342  018CFC  0E00               	movlw	0
 28343  018CFE  6E01               	movwf	btemp^0,c
 28344  018D00  0E00               	movlw	0
 28345  018D02  6E02               	movwf	(btemp+1)^0,c
 28346  018D04  0E00               	movlw	0
 28347  018D06  6E03               	movwf	(btemp+2)^0,c
 28348  018D08  0E00               	movlw	0
 28349  018D0A  6E04               	movwf	(btemp+3)^0,c
 28350  018D0C  D0A2               	goto	l3314
 28351  018D0E                     l10355:
 28352  018D0E  0E96               	movlw	150
 28353  018D10  6E0C               	movwf	(btemp+11)^0,c
 28354                           
 28355                           ;stkvar	_exp @ sp[(-5)+4]
 28356  018D12  0EFF               	movlw	-1
 28357  018D14  0060  F033  FFE3   	movff	btemp+11,plusw1
 28358  018D1A  D00B               	goto	l10359
 28359  018D1C                     l10357:
 28360                           
 28361                           ;stkvar	_exp @ sp[(-5)+4]
 28362  018D1C  0EFF               	movlw	-1
 28363  018D1E  2AE3               	incf	plusw1,f,c
 28364                           
 28365                           ;stkvar	_arg @ sp[(-5)+0]
 28366  018D20  90D8               	bcf	status,0,c
 28367  018D22  0EFE               	movlw	-2
 28368  018D24  32E3               	rrcf	plusw1,f,c
 28369  018D26  0EFD               	movlw	-3
 28370  018D28  32E3               	rrcf	plusw1,f,c
 28371  018D2A  0EFC               	movlw	-4
 28372  018D2C  32E3               	rrcf	plusw1,f,c
 28373  018D2E  0EFB               	movlw	-5
 28374  018D30  32E3               	rrcf	plusw1,f,c
 28375  018D32                     l10359:
 28376                           
 28377                           ;stkvar	_arg @ sp[(-5)+0]
 28378  018D32  50E1               	movf	fsr1l,w,c
 28379  018D34  0FFB               	addlw	-5
 28380  018D36  6ED9               	movwf	fsr2l,c
 28381  018D38  50E2               	movf	fsr1h,w,c
 28382  018D3A  6EDA               	movwf	fsr2h,c
 28383  018D3C  0EFF               	movlw	255
 28384  018D3E  22DA               	addwfc	fsr2h,f,c
 28385  018D40  52DE               	movf	postinc2,f,c
 28386  018D42  52DE               	movf	postinc2,f,c
 28387  018D44  52DE               	movf	postinc2,f,c
 28388  018D46  0EFE               	movlw	254
 28389  018D48  14DD               	andwf	postdec2,w,c
 28390  018D4A  B4D8               	btfsc	status,2,c
 28391  018D4C  D018               	goto	l10367
 28392  018D4E  D7E6               	goto	l10357
 28393  018D50                     l10361:
 28394                           
 28395                           ;stkvar	_exp @ sp[(-5)+4]
 28396  018D50  0EFF               	movlw	-1
 28397  018D52  2AE3               	incf	plusw1,f,c
 28398                           
 28399                           ;stkvar	_arg @ sp[(-5)+0]
 28400  018D54  50E1               	movf	fsr1l,w,c
 28401  018D56  0FFB               	addlw	-5
 28402  018D58  6ED9               	movwf	fsr2l,c
 28403  018D5A  50E2               	movf	fsr1h,w,c
 28404  018D5C  6EDA               	movwf	fsr2h,c
 28405  018D5E  0EFF               	movlw	255
 28406  018D60  22DA               	addwfc	fsr2h,f,c
 28407  018D62  2ADE               	incf	postinc2,f,c
 28408  018D64  0E00               	movlw	0
 28409  018D66  22DE               	addwfc	postinc2,f,c
 28410  018D68  22DE               	addwfc	postinc2,f,c
 28411  018D6A  22DE               	addwfc	postinc2,f,c
 28412                           
 28413                           ;stkvar	_arg @ sp[(-5)+0]
 28414  018D6C  90D8               	bcf	status,0,c
 28415  018D6E  0EFE               	movlw	-2
 28416  018D70  32E3               	rrcf	plusw1,f,c
 28417  018D72  0EFD               	movlw	-3
 28418  018D74  32E3               	rrcf	plusw1,f,c
 28419  018D76  0EFC               	movlw	-4
 28420  018D78  32E3               	rrcf	plusw1,f,c
 28421  018D7A  0EFB               	movlw	-5
 28422  018D7C  32E3               	rrcf	plusw1,f,c
 28423  018D7E                     l10367:
 28424                           
 28425                           ;stkvar	_arg @ sp[(-5)+0]
 28426  018D7E  50E1               	movf	fsr1l,w,c
 28427  018D80  0FFB               	addlw	-5
 28428  018D82  6ED9               	movwf	fsr2l,c
 28429  018D84  50E2               	movf	fsr1h,w,c
 28430  018D86  6EDA               	movwf	fsr2h,c
 28431  018D88  0EFF               	movlw	255
 28432  018D8A  22DA               	addwfc	fsr2h,f,c
 28433  018D8C  52DE               	movf	postinc2,f,c
 28434  018D8E  52DE               	movf	postinc2,f,c
 28435  018D90  52DE               	movf	postinc2,f,c
 28436  018D92  0EFF               	movlw	255
 28437  018D94  14DD               	andwf	postdec2,w,c
 28438  018D96  B4D8               	btfsc	status,2,c
 28439  018D98  D00C               	goto	l10371
 28440  018D9A  D7DA               	goto	l10361
 28441  018D9C                     l10369:
 28442                           
 28443                           ;stkvar	_exp @ sp[(-5)+4]
 28444  018D9C  0EFF               	movlw	-1
 28445  018D9E  06E3               	decf	plusw1,f,c
 28446                           
 28447                           ;stkvar	_arg @ sp[(-5)+0]
 28448  018DA0  90D8               	bcf	status,0,c
 28449  018DA2  0EFB               	movlw	-5
 28450  018DA4  36E3               	rlcf	plusw1,f,c
 28451  018DA6  0EFC               	movlw	-4
 28452  018DA8  36E3               	rlcf	plusw1,f,c
 28453  018DAA  0EFD               	movlw	-3
 28454  018DAC  36E3               	rlcf	plusw1,f,c
 28455  018DAE  0EFE               	movlw	-2
 28456  018DB0  36E3               	rlcf	plusw1,f,c
 28457  018DB2                     l10371:
 28458                           
 28459                           ;stkvar	_arg @ sp[(-5)+0]
 28460  018DB2  0EFD               	movlw	-3
 28461  018DB4  BEE3               	btfsc	plusw1,7,c
 28462  018DB6  D007               	goto	u9520
 28463                           
 28464                           ;stkvar	_exp @ sp[(-5)+4]
 28465  018DB8  0EFF               	movlw	-1
 28466  018DBA  006F FF8C  F001    	movff	plusw1,btemp
 28467  018DC0  0E02               	movlw	2
 28468  018DC2  6001               	cpfslt	btemp^0,c
 28469  018DC4  D7EB               	goto	l10369
 28470  018DC6                     u9520:
 28471                           
 28472                           ;stkvar	_exp @ sp[(-5)+4]
 28473  018DC6  0EFF               	movlw	-1
 28474  018DC8  B0E3               	btfsc	plusw1,0,c
 28475  018DCA  D002               	goto	l10379
 28476                           
 28477                           ;stkvar	_arg @ sp[(-5)+0]
 28478  018DCC  0EFD               	movlw	-3
 28479  018DCE  9EE3               	bcf	plusw1,7,c
 28480  018DD0                     l10379:
 28481                           
 28482                           ;stkvar	_exp @ sp[(-5)+4]
 28483  018DD0  50E1               	movf	fsr1l,w,c
 28484  018DD2  0FFF               	addlw	-1
 28485  018DD4  6ED9               	movwf	fsr2l,c
 28486  018DD6  50E2               	movf	fsr1h,w,c
 28487  018DD8  6EDA               	movwf	fsr2h,c
 28488  018DDA  0EFF               	movlw	255
 28489  018DDC  22DA               	addwfc	fsr2h,f,c
 28490  018DDE  90D8               	bcf	status,0,c
 28491  018DE0  32DF               	rrcf	indf2,f,c
 28492                           
 28493                           ;stkvar	_exp @ sp[(-5)+4]
 28494  018DE2  0EFF               	movlw	-1
 28495  018DE4  006F FF8C  F00C    	movff	plusw1,btemp+11
 28496  018DEA  0060  F030  F005   	movff	btemp+11,btemp+4
 28497  018DF0  6A06               	clrf	(btemp+5)^0,c
 28498  018DF2  6A07               	clrf	(btemp+6)^0,c
 28499  018DF4  6A08               	clrf	(btemp+7)^0,c
 28500  018DF6  0060  F014  F008   	movff	btemp+4,btemp+7
 28501  018DFC  6A07               	clrf	(btemp+6)^0,c
 28502  018DFE  6A06               	clrf	(btemp+5)^0,c
 28503  018E00  6A05               	clrf	(btemp+4)^0,c
 28504                           
 28505                           ;stkvar	_arg @ sp[(-5)+0]
 28506  018E02  50E1               	movf	fsr1l,w,c
 28507  018E04  0FFB               	addlw	-5
 28508  018E06  6ED9               	movwf	fsr2l,c
 28509  018E08  50E2               	movf	fsr1h,w,c
 28510  018E0A  6EDA               	movwf	fsr2h,c
 28511  018E0C  0EFF               	movlw	255
 28512  018E0E  22DA               	addwfc	fsr2h,f,c
 28513  018E10  5005               	movf	(btemp+4)^0,w,c
 28514  018E12  12DE               	iorwf	postinc2,f,c
 28515  018E14  5006               	movf	(btemp+5)^0,w,c
 28516  018E16  12DE               	iorwf	postinc2,f,c
 28517  018E18  5007               	movf	(btemp+6)^0,w,c
 28518  018E1A  12DE               	iorwf	postinc2,f,c
 28519  018E1C  5008               	movf	(btemp+7)^0,w,c
 28520  018E1E  12DE               	iorwf	postinc2,f,c
 28521                           
 28522                           ;stkvar	_sign @ sp[(-5)+-1]
 28523  018E20  0EFA               	movlw	-6
 28524  018E22  50E3               	movf	plusw1,w,c
 28525  018E24  B4D8               	btfsc	status,2,c
 28526  018E26  D005               	goto	l10389
 28527                           
 28528                           ;stkvar	_val @ sp[(-5)+-5]
 28529  018E28  0EF9               	movlw	-7
 28530  018E2A  AEE3               	btfss	plusw1,7,c
 28531  018E2C  D002               	goto	l10389
 28532                           
 28533                           ;stkvar	_arg @ sp[(-5)+0]
 28534  018E2E  0EFE               	movlw	-2
 28535  018E30  8EE3               	bsf	plusw1,7,c
 28536  018E32                     l10389:
 28537                           
 28538                           ;stkvar	_arg @ sp[(-5)+0]
 28539  018E32  0EFB               	movlw	-5
 28540  018E34  006F FF8C  F001    	movff	plusw1,btemp
 28541  018E3A  0EFC               	movlw	-4
 28542  018E3C  006F FF8C  F002    	movff	plusw1,btemp+1
 28543  018E42  0EFD               	movlw	-3
 28544  018E44  006F FF8C  F003    	movff	plusw1,btemp+2
 28545  018E4A  0EFE               	movlw	-2
 28546  018E4C  006F FF8C  F004    	movff	plusw1,btemp+3
 28547  018E52                     l3314:
 28548                           
 28549                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 28550  018E52  0EF6               	movlw	246
 28551  018E54  26E1               	addwf	fsr1l,f,c
 28552  018E56  0EFF               	movlw	255
 28553  018E58  22E2               	addwfc	fsr1h,f,c
 28554  018E5A  0012               	return		;funcret
 28555  018E5C                     __end_of___xxtofl:
 28556                           	opt callstack 0
 28557                           
 28558 ;; *************** function ___fldiv *****************
 28559 ;; Defined at:
 28560 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 28561 ;; Parameters:    Size  Location     Type
 28562 ;;  b               4  [STACK] unsigned char 
 28563 ;;  a               4  [STACK] unsigned char 
 28564 ;; Auto vars:     Size  Location     Type
 28565 ;;  grs             4  [STACK] unsigned long 
 28566 ;;  rem             4  [STACK] unsigned long 
 28567 ;;  new_exp         2  [STACK] short 
 28568 ;;  aexp            1  [STACK] unsigned char 
 28569 ;;  bexp            1  [STACK] unsigned char 
 28570 ;;  sign            1  [STACK] unsigned char 
 28571 ;; Return value:  Size  Location     Type
 28572 ;;                  4  [STACK] unsigned char 
 28573 ;; Registers used:
 28574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 28575 ;; Tracked objects:
 28576 ;;		On entry : 0/0
 28577 ;;		On exit  : 0/0
 28578 ;;		Unchanged: 0/0
 28579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28584 ;;Total ram usage:        0 bytes
 28585 ;; Hardware stack levels used:    1
 28586 ;; Hardware stack levels required when called:   15
 28587 ;; This function calls:
 28588 ;;		Nothing
 28589 ;; This function is called by:
 28590 ;;		_conv_raw_result
 28591 ;;		_convert_dac_raw
 28592 ;;		_calc_bsoc
 28593 ;;		_init_bsoc
 28594 ;;		_esr_check
 28595 ;;		_efgtoa
 28596 ;; This function uses a reentrant model
 28597 ;;
 28598                           
 28599                           	psect	text118
 28600  014EC2                     __ptext118:
 28601                           	opt callstack 0
 28602  014EC2                     ___fldiv:
 28603                           	opt callstack 0
 28604                           
 28605                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28606  014EC2  0E0D               	movlw	13
 28607  014EC4  26E1               	addwf	fsr1l,f,c
 28608  014EC6  0E00               	movlw	0
 28609  014EC8  22E2               	addwfc	fsr1h,f,c
 28610                           
 28611                           ;stkvar	_b @ sp[(-13)+-4]
 28612                           
 28613                           ;incstack = 0
 28614 ;; hardware stack exceeded
 28615  014ECA  0EF2               	movlw	242
 28616  014ECC  24E1               	addwf	fsr1l,w,c
 28617  014ECE  6ED9               	movwf	fsr2l,c
 28618  014ED0  0EFF               	movlw	255
 28619  014ED2  20E2               	addwfc	fsr1h,w,c
 28620  014ED4  6EDA               	movwf	fsr2h,c
 28621  014ED6  50DF               	movf	indf2,w,c
 28622  014ED8  6E0C               	movwf	(btemp+11)^0,c
 28623  014EDA  0E80               	movlw	128
 28624  014EDC  160C               	andwf	(btemp+11)^0,f,c
 28625                           
 28626                           ;stkvar	_sign @ sp[(-13)+12]
 28627  014EDE  0EFF               	movlw	-1
 28628  014EE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 28629                           
 28630                           ;stkvar	_b @ sp[(-13)+-4]
 28631  014EE6  0EF2               	movlw	242
 28632  014EE8  24E1               	addwf	fsr1l,w,c
 28633  014EEA  6ED9               	movwf	fsr2l,c
 28634  014EEC  0EFF               	movlw	255
 28635  014EEE  20E2               	addwfc	fsr1h,w,c
 28636  014EF0  6EDA               	movwf	fsr2h,c
 28637  014EF2  50DF               	movf	indf2,w,c
 28638  014EF4  6E0C               	movwf	(btemp+11)^0,c
 28639  014EF6  90D8               	bcf	status,0,c
 28640  014EF8  340C               	rlcf	(btemp+11)^0,w,c
 28641  014EFA  6E0B               	movwf	(btemp+10)^0,c
 28642                           
 28643                           ;stkvar	_bexp @ sp[(-13)+11]
 28644  014EFC  0EFE               	movlw	-2
 28645  014EFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28646                           
 28647                           ;stkvar	_b @ sp[(-13)+-4]
 28648  014F04  0EF1               	movlw	241
 28649  014F06  24E1               	addwf	fsr1l,w,c
 28650  014F08  6ED9               	movwf	fsr2l,c
 28651  014F0A  0EFF               	movlw	255
 28652  014F0C  20E2               	addwfc	fsr1h,w,c
 28653  014F0E  6EDA               	movwf	fsr2h,c
 28654  014F10  AEDF               	btfss	indf2,7,c
 28655  014F12  D002               	goto	l8919
 28656                           
 28657                           ;stkvar	_bexp @ sp[(-13)+11]
 28658  014F14  0EFE               	movlw	-2
 28659  014F16  80E3               	bsf	plusw1,0,c
 28660  014F18                     l8919:
 28661                           
 28662                           ;stkvar	_bexp @ sp[(-13)+11]
 28663  014F18  0EFE               	movlw	-2
 28664  014F1A  50E3               	movf	plusw1,w,c
 28665  014F1C  B4D8               	btfsc	status,2,c
 28666  014F1E  D027               	goto	l8929
 28667                           
 28668                           ;stkvar	_bexp @ sp[(-13)+11]
 28669  014F20  0EFE               	movlw	-2
 28670  014F22  28E3               	incf	plusw1,w,c
 28671  014F24  A4D8               	btfss	status,2,c
 28672  014F26  D018               	goto	l8925
 28673  014F28  0E00               	movlw	0
 28674  014F2A  6E09               	movwf	(btemp+8)^0,c
 28675  014F2C  0E00               	movlw	0
 28676  014F2E  6E0A               	movwf	(btemp+9)^0,c
 28677  014F30  0E00               	movlw	0
 28678  014F32  6E0B               	movwf	(btemp+10)^0,c
 28679  014F34  0E00               	movlw	0
 28680  014F36  6E0C               	movwf	(btemp+11)^0,c
 28681                           
 28682                           ;stkvar	_b @ sp[(-13)+-4]
 28683  014F38  0EEF               	movlw	-17
 28684  014F3A  0060  F027  FFE3   	movff	btemp+8,plusw1
 28685  014F40  0EF0               	movlw	-16
 28686  014F42  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28687  014F48  0EF1               	movlw	-15
 28688  014F4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28689  014F50  0EF2               	movlw	-14
 28690  014F52  0060  F033  FFE3   	movff	btemp+11,plusw1
 28691  014F58                     l8925:
 28692                           
 28693                           ;stkvar	_b @ sp[(-13)+-4]
 28694  014F58  0EF1               	movlw	-15
 28695  014F5A  8EE3               	bsf	plusw1,7,c
 28696                           
 28697                           ;stkvar	_b @ sp[(-13)+-4]
 28698  014F5C  0EF2               	movlw	242
 28699  014F5E  24E1               	addwf	fsr1l,w,c
 28700  014F60  6ED9               	movwf	fsr2l,c
 28701  014F62  0EFF               	movlw	255
 28702  014F64  20E2               	addwfc	fsr1h,w,c
 28703  014F66  6EDA               	movwf	fsr2h,c
 28704  014F68  0E00               	movlw	0
 28705  014F6A  6EDF               	movwf	indf2,c
 28706  014F6C  D018               	goto	l8931
 28707  014F6E                     l8929:
 28708  014F6E  0E00               	movlw	0
 28709  014F70  6E09               	movwf	(btemp+8)^0,c
 28710  014F72  0E00               	movlw	0
 28711  014F74  6E0A               	movwf	(btemp+9)^0,c
 28712  014F76  0E00               	movlw	0
 28713  014F78  6E0B               	movwf	(btemp+10)^0,c
 28714  014F7A  0E00               	movlw	0
 28715  014F7C  6E0C               	movwf	(btemp+11)^0,c
 28716                           
 28717                           ;stkvar	_b @ sp[(-13)+-4]
 28718  014F7E  0EEF               	movlw	-17
 28719  014F80  0060  F027  FFE3   	movff	btemp+8,plusw1
 28720  014F86  0EF0               	movlw	-16
 28721  014F88  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28722  014F8E  0EF1               	movlw	-15
 28723  014F90  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28724  014F96  0EF2               	movlw	-14
 28725  014F98  0060  F033  FFE3   	movff	btemp+11,plusw1
 28726  014F9E                     l8931:
 28727                           
 28728                           ;stkvar	_a @ sp[(-13)+-8]
 28729  014F9E  0EEE               	movlw	238
 28730  014FA0  24E1               	addwf	fsr1l,w,c
 28731  014FA2  6ED9               	movwf	fsr2l,c
 28732  014FA4  0EFF               	movlw	255
 28733  014FA6  20E2               	addwfc	fsr1h,w,c
 28734  014FA8  6EDA               	movwf	fsr2h,c
 28735  014FAA  50DF               	movf	indf2,w,c
 28736  014FAC  6E0C               	movwf	(btemp+11)^0,c
 28737  014FAE  0E80               	movlw	128
 28738  014FB0  160C               	andwf	(btemp+11)^0,f,c
 28739                           
 28740                           ;stkvar	_sign @ sp[(-13)+12]
 28741  014FB2  50E1               	movf	fsr1l,w,c
 28742  014FB4  0FFF               	addlw	-1
 28743  014FB6  6ED9               	movwf	fsr2l,c
 28744  014FB8  50E2               	movf	fsr1h,w,c
 28745  014FBA  6EDA               	movwf	fsr2h,c
 28746  014FBC  0EFF               	movlw	255
 28747  014FBE  22DA               	addwfc	fsr2h,f,c
 28748  014FC0  500C               	movf	(btemp+11)^0,w,c
 28749  014FC2  1ADF               	xorwf	indf2,f,c
 28750                           
 28751                           ;stkvar	_a @ sp[(-13)+-8]
 28752  014FC4  0EEE               	movlw	238
 28753  014FC6  24E1               	addwf	fsr1l,w,c
 28754  014FC8  6ED9               	movwf	fsr2l,c
 28755  014FCA  0EFF               	movlw	255
 28756  014FCC  20E2               	addwfc	fsr1h,w,c
 28757  014FCE  6EDA               	movwf	fsr2h,c
 28758  014FD0  50DF               	movf	indf2,w,c
 28759  014FD2  6E0C               	movwf	(btemp+11)^0,c
 28760  014FD4  90D8               	bcf	status,0,c
 28761  014FD6  340C               	rlcf	(btemp+11)^0,w,c
 28762  014FD8  6E0B               	movwf	(btemp+10)^0,c
 28763                           
 28764                           ;stkvar	_aexp @ sp[(-13)+10]
 28765  014FDA  0EFD               	movlw	-3
 28766  014FDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28767                           
 28768                           ;stkvar	_a @ sp[(-13)+-8]
 28769  014FE2  0EED               	movlw	237
 28770  014FE4  24E1               	addwf	fsr1l,w,c
 28771  014FE6  6ED9               	movwf	fsr2l,c
 28772  014FE8  0EFF               	movlw	255
 28773  014FEA  20E2               	addwfc	fsr1h,w,c
 28774  014FEC  6EDA               	movwf	fsr2h,c
 28775  014FEE  AEDF               	btfss	indf2,7,c
 28776  014FF0  D002               	goto	l8939
 28777                           
 28778                           ;stkvar	_aexp @ sp[(-13)+10]
 28779  014FF2  0EFD               	movlw	-3
 28780  014FF4  80E3               	bsf	plusw1,0,c
 28781  014FF6                     l8939:
 28782                           
 28783                           ;stkvar	_aexp @ sp[(-13)+10]
 28784  014FF6  0EFD               	movlw	-3
 28785  014FF8  50E3               	movf	plusw1,w,c
 28786  014FFA  B4D8               	btfsc	status,2,c
 28787  014FFC  D027               	goto	l8949
 28788                           
 28789                           ;stkvar	_aexp @ sp[(-13)+10]
 28790  014FFE  0EFD               	movlw	-3
 28791  015000  28E3               	incf	plusw1,w,c
 28792  015002  A4D8               	btfss	status,2,c
 28793  015004  D018               	goto	l8945
 28794  015006  0E00               	movlw	0
 28795  015008  6E09               	movwf	(btemp+8)^0,c
 28796  01500A  0E00               	movlw	0
 28797  01500C  6E0A               	movwf	(btemp+9)^0,c
 28798  01500E  0E00               	movlw	0
 28799  015010  6E0B               	movwf	(btemp+10)^0,c
 28800  015012  0E00               	movlw	0
 28801  015014  6E0C               	movwf	(btemp+11)^0,c
 28802                           
 28803                           ;stkvar	_a @ sp[(-13)+-8]
 28804  015016  0EEB               	movlw	-21
 28805  015018  0060  F027  FFE3   	movff	btemp+8,plusw1
 28806  01501E  0EEC               	movlw	-20
 28807  015020  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28808  015026  0EED               	movlw	-19
 28809  015028  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28810  01502E  0EEE               	movlw	-18
 28811  015030  0060  F033  FFE3   	movff	btemp+11,plusw1
 28812  015036                     l8945:
 28813                           
 28814                           ;stkvar	_a @ sp[(-13)+-8]
 28815  015036  0EED               	movlw	-19
 28816  015038  8EE3               	bsf	plusw1,7,c
 28817                           
 28818                           ;stkvar	_a @ sp[(-13)+-8]
 28819  01503A  0EEE               	movlw	238
 28820  01503C  24E1               	addwf	fsr1l,w,c
 28821  01503E  6ED9               	movwf	fsr2l,c
 28822  015040  0EFF               	movlw	255
 28823  015042  20E2               	addwfc	fsr1h,w,c
 28824  015044  6EDA               	movwf	fsr2h,c
 28825  015046  0E00               	movlw	0
 28826  015048  6EDF               	movwf	indf2,c
 28827  01504A  D018               	goto	l8951
 28828  01504C                     l8949:
 28829  01504C  0E00               	movlw	0
 28830  01504E  6E09               	movwf	(btemp+8)^0,c
 28831  015050  0E00               	movlw	0
 28832  015052  6E0A               	movwf	(btemp+9)^0,c
 28833  015054  0E00               	movlw	0
 28834  015056  6E0B               	movwf	(btemp+10)^0,c
 28835  015058  0E00               	movlw	0
 28836  01505A  6E0C               	movwf	(btemp+11)^0,c
 28837                           
 28838                           ;stkvar	_a @ sp[(-13)+-8]
 28839  01505C  0EEB               	movlw	-21
 28840  01505E  0060  F027  FFE3   	movff	btemp+8,plusw1
 28841  015064  0EEC               	movlw	-20
 28842  015066  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28843  01506C  0EED               	movlw	-19
 28844  01506E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28845  015074  0EEE               	movlw	-18
 28846  015076  0060  F033  FFE3   	movff	btemp+11,plusw1
 28847  01507C                     l8951:
 28848                           
 28849                           ;stkvar	_a @ sp[(-13)+-8]
 28850  01507C  0EEB               	movlw	-21
 28851  01507E  50E3               	movf	plusw1,w,c
 28852  015080  E139               	bnz	l8963
 28853  015082  0EEC               	movlw	-20
 28854  015084  50E3               	movf	plusw1,w,c
 28855  015086  E136               	bnz	l8963
 28856  015088  0EED               	movlw	-19
 28857  01508A  50E3               	movf	plusw1,w,c
 28858  01508C  E133               	bnz	l8963
 28859  01508E  0EEE               	movlw	-18
 28860  015090  50E3               	movf	plusw1,w,c
 28861  015092  A4D8               	btfss	status,2,c
 28862  015094  D02F               	goto	l8963
 28863                           
 28864                           ;stkvar	_b @ sp[(-13)+-4]
 28865  015096  0EEF               	movlw	-17
 28866  015098  6AE3               	clrf	plusw1,c
 28867  01509A  0EF0               	movlw	-16
 28868  01509C  6AE3               	clrf	plusw1,c
 28869  01509E  0EF1               	movlw	-15
 28870  0150A0  6AE3               	clrf	plusw1,c
 28871  0150A2  0EF2               	movlw	-14
 28872  0150A4  6AE3               	clrf	plusw1,c
 28873                           
 28874                           ;stkvar	_b @ sp[(-13)+-4]
 28875  0150A6  0EF1               	movlw	241
 28876  0150A8  24E1               	addwf	fsr1l,w,c
 28877  0150AA  6ED9               	movwf	fsr2l,c
 28878  0150AC  0EFF               	movlw	255
 28879  0150AE  20E2               	addwfc	fsr1h,w,c
 28880  0150B0  6EDA               	movwf	fsr2h,c
 28881  0150B2  0E80               	movlw	128
 28882  0150B4  12DE               	iorwf	postinc2,f,c
 28883  0150B6  0E7F               	movlw	127
 28884  0150B8  12DD               	iorwf	postdec2,f,c
 28885  0150BA                     l8957:
 28886                           
 28887                           ;stkvar	_sign @ sp[(-13)+12]
 28888  0150BA  0EFF               	movlw	-1
 28889  0150BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 28890                           
 28891                           ;stkvar	_b @ sp[(-13)+-4]
 28892  0150C2  0EF2               	movlw	242
 28893  0150C4  24E1               	addwf	fsr1l,w,c
 28894  0150C6  6ED9               	movwf	fsr2l,c
 28895  0150C8  0EFF               	movlw	255
 28896  0150CA  20E2               	addwfc	fsr1h,w,c
 28897  0150CC  6EDA               	movwf	fsr2h,c
 28898  0150CE  500C               	movf	(btemp+11)^0,w,c
 28899  0150D0  12DF               	iorwf	indf2,f,c
 28900                           
 28901                           ;stkvar	_b @ sp[(-13)+-4]
 28902  0150D2  0EEF               	movlw	-17
 28903  0150D4  006F FF8C  F001    	movff	plusw1,btemp
 28904  0150DA  0EF0               	movlw	-16
 28905  0150DC  006F FF8C  F002    	movff	plusw1,btemp+1
 28906  0150E2  0EF1               	movlw	-15
 28907  0150E4  006F FF8C  F003    	movff	plusw1,btemp+2
 28908  0150EA  0EF2               	movlw	-14
 28909  0150EC  006F FF8C  F004    	movff	plusw1,btemp+3
 28910  0150F2  D19F               	goto	l3238
 28911  0150F4                     l8963:
 28912                           
 28913                           ;stkvar	_bexp @ sp[(-13)+11]
 28914  0150F4  0EFE               	movlw	-2
 28915  0150F6  50E3               	movf	plusw1,w,c
 28916  0150F8  A4D8               	btfss	status,2,c
 28917  0150FA  D009               	goto	l8971
 28918  0150FC  0E00               	movlw	0
 28919  0150FE  6E01               	movwf	btemp^0,c
 28920  015100  0E00               	movlw	0
 28921  015102  6E02               	movwf	(btemp+1)^0,c
 28922  015104  0E00               	movlw	0
 28923  015106  6E03               	movwf	(btemp+2)^0,c
 28924  015108  0E00               	movlw	0
 28925  01510A  6E04               	movwf	(btemp+3)^0,c
 28926  01510C  D192               	goto	l3238
 28927  01510E                     l8971:
 28928                           
 28929                           ;stkvar	_bexp @ sp[(-13)+11]
 28930  01510E  0EFE               	movlw	-2
 28931  015110  50E3               	movf	plusw1,w,c
 28932  015112  6E0B               	movwf	(btemp+10)^0,c
 28933  015114  6A0C               	clrf	(btemp+11)^0,c
 28934                           
 28935                           ;stkvar	_aexp @ sp[(-13)+10]
 28936  015116  0EFD               	movlw	-3
 28937  015118  50E3               	movf	plusw1,w,c
 28938  01511A  5E0B               	subwf	(btemp+10)^0,f,c
 28939  01511C  0E00               	movlw	0
 28940  01511E  5A0C               	subwfb	(btemp+11)^0,f,c
 28941  015120  0E7F               	movlw	127
 28942  015122  260B               	addwf	(btemp+10)^0,f,c
 28943  015124  0E00               	movlw	0
 28944  015126  220C               	addwfc	(btemp+11)^0,f,c
 28945                           
 28946                           ;stkvar	_new_exp @ sp[(-13)+8]
 28947  015128  0EFB               	movlw	-5
 28948  01512A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28949  015130  0EFC               	movlw	-4
 28950  015132  0060  F033  FFE3   	movff	btemp+11,plusw1
 28951                           
 28952                           ;stkvar	_b @ sp[(-13)+-4]
 28953  015138  0EEF               	movlw	-17
 28954  01513A  006F FF8C  F009    	movff	plusw1,btemp+8
 28955  015140  0EF0               	movlw	-16
 28956  015142  006F FF8C  F00A    	movff	plusw1,btemp+9
 28957  015148  0EF1               	movlw	-15
 28958  01514A  006F FF8C  F00B    	movff	plusw1,btemp+10
 28959  015150  0EF2               	movlw	-14
 28960  015152  006F FF8C  F00C    	movff	plusw1,btemp+11
 28961                           
 28962                           ;stkvar	_rem @ sp[(-13)+4]
 28963  015158  0EF7               	movlw	-9
 28964  01515A  0060  F027  FFE3   	movff	btemp+8,plusw1
 28965  015160  0EF8               	movlw	-8
 28966  015162  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28967  015168  0EF9               	movlw	-7
 28968  01516A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28969  015170  0EFA               	movlw	-6
 28970  015172  0060  F033  FFE3   	movff	btemp+11,plusw1
 28971                           
 28972                           ;stkvar	_b @ sp[(-13)+-4]
 28973  015178  0EEF               	movlw	-17
 28974  01517A  6AE3               	clrf	plusw1,c
 28975  01517C  0EF0               	movlw	-16
 28976  01517E  6AE3               	clrf	plusw1,c
 28977  015180  0EF1               	movlw	-15
 28978  015182  6AE3               	clrf	plusw1,c
 28979  015184  0EF2               	movlw	-14
 28980  015186  6AE3               	clrf	plusw1,c
 28981                           
 28982                           ;stkvar	_grs @ sp[(-13)+0]
 28983  015188  0EF3               	movlw	-13
 28984  01518A  6AE3               	clrf	plusw1,c
 28985  01518C  0EF4               	movlw	-12
 28986  01518E  6AE3               	clrf	plusw1,c
 28987  015190  0EF5               	movlw	-11
 28988  015192  6AE3               	clrf	plusw1,c
 28989  015194  0EF6               	movlw	-10
 28990  015196  6AE3               	clrf	plusw1,c
 28991                           
 28992                           ;stkvar	_aexp @ sp[(-13)+10]
 28993  015198  0EFD               	movlw	-3
 28994  01519A  6AE3               	clrf	plusw1,c
 28995  01519C  D050               	goto	l8999
 28996  01519E                     l8981:
 28997                           
 28998                           ;stkvar	_aexp @ sp[(-13)+10]
 28999  01519E  0EFD               	movlw	-3
 29000  0151A0  50E3               	movf	plusw1,w,c
 29001  0151A2  B4D8               	btfsc	status,2,c
 29002  0151A4  D020               	goto	l8991
 29003                           
 29004                           ;stkvar	_rem @ sp[(-13)+4]
 29005  0151A6  90D8               	bcf	status,0,c
 29006  0151A8  0EF7               	movlw	-9
 29007  0151AA  36E3               	rlcf	plusw1,f,c
 29008  0151AC  0EF8               	movlw	-8
 29009  0151AE  36E3               	rlcf	plusw1,f,c
 29010  0151B0  0EF9               	movlw	-7
 29011  0151B2  36E3               	rlcf	plusw1,f,c
 29012  0151B4  0EFA               	movlw	-6
 29013  0151B6  36E3               	rlcf	plusw1,f,c
 29014                           
 29015                           ;stkvar	_b @ sp[(-13)+-4]
 29016  0151B8  90D8               	bcf	status,0,c
 29017  0151BA  0EEF               	movlw	-17
 29018  0151BC  36E3               	rlcf	plusw1,f,c
 29019  0151BE  0EF0               	movlw	-16
 29020  0151C0  36E3               	rlcf	plusw1,f,c
 29021  0151C2  0EF1               	movlw	-15
 29022  0151C4  36E3               	rlcf	plusw1,f,c
 29023  0151C6  0EF2               	movlw	-14
 29024  0151C8  36E3               	rlcf	plusw1,f,c
 29025                           
 29026                           ;stkvar	_grs @ sp[(-13)+0]
 29027  0151CA  0EF6               	movlw	-10
 29028  0151CC  AEE3               	btfss	plusw1,7,c
 29029  0151CE  D002               	goto	l8989
 29030                           
 29031                           ;stkvar	_b @ sp[(-13)+-4]
 29032  0151D0  0EEF               	movlw	-17
 29033  0151D2  80E3               	bsf	plusw1,0,c
 29034  0151D4                     l8989:
 29035                           
 29036                           ;stkvar	_grs @ sp[(-13)+0]
 29037  0151D4  90D8               	bcf	status,0,c
 29038  0151D6  0EF3               	movlw	-13
 29039  0151D8  36E3               	rlcf	plusw1,f,c
 29040  0151DA  0EF4               	movlw	-12
 29041  0151DC  36E3               	rlcf	plusw1,f,c
 29042  0151DE  0EF5               	movlw	-11
 29043  0151E0  36E3               	rlcf	plusw1,f,c
 29044  0151E2  0EF6               	movlw	-10
 29045  0151E4  36E3               	rlcf	plusw1,f,c
 29046  0151E6                     l8991:
 29047                           
 29048                           ;stkvar	_a @ sp[(-13)+-8]
 29049                           ;stkvar	_rem @ sp[(-13)+4]
 29050  0151E6  50E1               	movf	fsr1l,w,c
 29051  0151E8  0FF7               	addlw	-9
 29052  0151EA  6ED9               	movwf	fsr2l,c
 29053  0151EC  50E2               	movf	fsr1h,w,c
 29054  0151EE  6EDA               	movwf	fsr2h,c
 29055  0151F0  0EFF               	movlw	255
 29056  0151F2  22DA               	addwfc	fsr2h,f,c
 29057  0151F4  0EEB               	movlw	-21
 29058  0151F6  50E3               	movf	plusw1,w,c
 29059  0151F8  5CDE               	subwf	postinc2,w,c
 29060  0151FA  0EEC               	movlw	-20
 29061  0151FC  50E3               	movf	plusw1,w,c
 29062  0151FE  58DE               	subwfb	postinc2,w,c
 29063  015200  0EED               	movlw	-19
 29064  015202  50E3               	movf	plusw1,w,c
 29065  015204  58DE               	subwfb	postinc2,w,c
 29066  015206  0EEE               	movlw	-18
 29067  015208  50E3               	movf	plusw1,w,c
 29068  01520A  58DE               	subwfb	postinc2,w,c
 29069  01520C  A0D8               	btfss	status,0,c
 29070  01520E  D015               	goto	l8997
 29071                           
 29072                           ;stkvar	_grs @ sp[(-13)+0]
 29073  015210  0EF6               	movlw	-10
 29074  015212  8CE3               	bsf	plusw1,6,c
 29075                           
 29076                           ;stkvar	_a @ sp[(-13)+-8]
 29077                           ;stkvar	_rem @ sp[(-13)+4]
 29078  015214  50E1               	movf	fsr1l,w,c
 29079  015216  0FF7               	addlw	-9
 29080  015218  6ED9               	movwf	fsr2l,c
 29081  01521A  50E2               	movf	fsr1h,w,c
 29082  01521C  6EDA               	movwf	fsr2h,c
 29083  01521E  0EFF               	movlw	255
 29084  015220  22DA               	addwfc	fsr2h,f,c
 29085  015222  0EEB               	movlw	-21
 29086  015224  50E3               	movf	plusw1,w,c
 29087  015226  5EDE               	subwf	postinc2,f,c
 29088  015228  0EEC               	movlw	-20
 29089  01522A  50E3               	movf	plusw1,w,c
 29090  01522C  5ADE               	subwfb	postinc2,f,c
 29091  01522E  0EED               	movlw	-19
 29092  015230  50E3               	movf	plusw1,w,c
 29093  015232  5ADE               	subwfb	postinc2,f,c
 29094  015234  0EEE               	movlw	-18
 29095  015236  50E3               	movf	plusw1,w,c
 29096  015238  5ADE               	subwfb	postinc2,f,c
 29097  01523A                     l8997:
 29098                           
 29099                           ;stkvar	_aexp @ sp[(-13)+10]
 29100  01523A  0EFD               	movlw	-3
 29101  01523C  2AE3               	incf	plusw1,f,c
 29102  01523E                     l8999:
 29103                           
 29104                           ;stkvar	_aexp @ sp[(-13)+10]
 29105  01523E  0EFD               	movlw	-3
 29106  015240  006F FF8C  F001    	movff	plusw1,btemp
 29107  015246  0E19               	movlw	25
 29108  015248  6401               	cpfsgt	btemp^0,c
 29109  01524A  D7A9               	goto	l8981
 29110                           
 29111                           ;stkvar	_rem @ sp[(-13)+4]
 29112  01524C  0EF7               	movlw	-9
 29113  01524E  50E3               	movf	plusw1,w,c
 29114  015250  E10A               	bnz	u7110
 29115  015252  0EF8               	movlw	-8
 29116  015254  50E3               	movf	plusw1,w,c
 29117  015256  E107               	bnz	u7110
 29118  015258  0EF9               	movlw	-7
 29119  01525A  50E3               	movf	plusw1,w,c
 29120  01525C  E104               	bnz	u7110
 29121  01525E  0EFA               	movlw	-6
 29122  015260  50E3               	movf	plusw1,w,c
 29123  015262  B4D8               	btfsc	status,2,c
 29124  015264  D024               	goto	l9015
 29125  015266                     u7110:
 29126                           
 29127                           ;stkvar	_grs @ sp[(-13)+0]
 29128  015266  0EF3               	movlw	-13
 29129  015268  80E3               	bsf	plusw1,0,c
 29130  01526A  D021               	goto	l9015
 29131  01526C                     l9005:
 29132                           
 29133                           ;stkvar	_b @ sp[(-13)+-4]
 29134  01526C  90D8               	bcf	status,0,c
 29135  01526E  0EEF               	movlw	-17
 29136  015270  36E3               	rlcf	plusw1,f,c
 29137  015272  0EF0               	movlw	-16
 29138  015274  36E3               	rlcf	plusw1,f,c
 29139  015276  0EF1               	movlw	-15
 29140  015278  36E3               	rlcf	plusw1,f,c
 29141  01527A  0EF2               	movlw	-14
 29142  01527C  36E3               	rlcf	plusw1,f,c
 29143                           
 29144                           ;stkvar	_grs @ sp[(-13)+0]
 29145  01527E  0EF6               	movlw	-10
 29146  015280  AEE3               	btfss	plusw1,7,c
 29147  015282  D002               	goto	l9011
 29148                           
 29149                           ;stkvar	_b @ sp[(-13)+-4]
 29150  015284  0EEF               	movlw	-17
 29151  015286  80E3               	bsf	plusw1,0,c
 29152  015288                     l9011:
 29153                           
 29154                           ;stkvar	_grs @ sp[(-13)+0]
 29155  015288  90D8               	bcf	status,0,c
 29156  01528A  0EF3               	movlw	-13
 29157  01528C  36E3               	rlcf	plusw1,f,c
 29158  01528E  0EF4               	movlw	-12
 29159  015290  36E3               	rlcf	plusw1,f,c
 29160  015292  0EF5               	movlw	-11
 29161  015294  36E3               	rlcf	plusw1,f,c
 29162  015296  0EF6               	movlw	-10
 29163  015298  36E3               	rlcf	plusw1,f,c
 29164                           
 29165                           ;stkvar	_new_exp @ sp[(-13)+8]
 29166  01529A  50E1               	movf	fsr1l,w,c
 29167  01529C  0FFB               	addlw	-5
 29168  01529E  6ED9               	movwf	fsr2l,c
 29169  0152A0  50E2               	movf	fsr1h,w,c
 29170  0152A2  6EDA               	movwf	fsr2h,c
 29171  0152A4  0EFF               	movlw	255
 29172  0152A6  22DA               	addwfc	fsr2h,f,c
 29173  0152A8  06DE               	decf	postinc2,f,c
 29174  0152AA  0E00               	movlw	0
 29175  0152AC  5ADD               	subwfb	postdec2,f,c
 29176  0152AE                     l9015:
 29177                           
 29178                           ;stkvar	_b @ sp[(-13)+-4]
 29179  0152AE  0EF1               	movlw	-15
 29180  0152B0  AEE3               	btfss	plusw1,7,c
 29181  0152B2  D7DC               	goto	l9005
 29182                           
 29183                           ;stkvar	_aexp @ sp[(-13)+10]
 29184  0152B4  0EFD               	movlw	-3
 29185  0152B6  6AE3               	clrf	plusw1,c
 29186                           
 29187                           ;stkvar	_grs @ sp[(-13)+0]
 29188  0152B8  0EF6               	movlw	-10
 29189  0152BA  AEE3               	btfss	plusw1,7,c
 29190  0152BC  D020               	goto	l9029
 29191                           
 29192                           ;stkvar	_grs @ sp[(-13)+0]
 29193  0152BE  50E1               	movf	fsr1l,w,c
 29194  0152C0  0FF3               	addlw	-13
 29195  0152C2  6ED9               	movwf	fsr2l,c
 29196  0152C4  50E2               	movf	fsr1h,w,c
 29197  0152C6  6EDA               	movwf	fsr2h,c
 29198  0152C8  0EFF               	movlw	255
 29199  0152CA  22DA               	addwfc	fsr2h,f,c
 29200  0152CC  0EFF               	movlw	255
 29201  0152CE  14DE               	andwf	postinc2,w,c
 29202  0152D0  6E09               	movwf	(btemp+8)^0,c
 29203  0152D2  0EFF               	movlw	255
 29204  0152D4  14DE               	andwf	postinc2,w,c
 29205  0152D6  6E0A               	movwf	(btemp+9)^0,c
 29206  0152D8  0EFF               	movlw	255
 29207  0152DA  14DE               	andwf	postinc2,w,c
 29208  0152DC  6E0B               	movwf	(btemp+10)^0,c
 29209  0152DE  0E7F               	movlw	127
 29210  0152E0  14DE               	andwf	postinc2,w,c
 29211  0152E2  6E0C               	movwf	(btemp+11)^0,c
 29212  0152E4  5009               	movf	(btemp+8)^0,w,c
 29213  0152E6  100A               	iorwf	(btemp+9)^0,w,c
 29214  0152E8  100B               	iorwf	(btemp+10)^0,w,c
 29215  0152EA  100C               	iorwf	(btemp+11)^0,w,c
 29216  0152EC  B4D8               	btfsc	status,2,c
 29217  0152EE  D004               	goto	l9025
 29218  0152F0                     u7150:
 29219                           
 29220                           ;stkvar	_aexp @ sp[(-13)+10]
 29221  0152F0  0EFD               	movlw	-3
 29222  0152F2  6AE3               	clrf	plusw1,c
 29223  0152F4  2AE3               	incf	plusw1,f,c
 29224  0152F6  D003               	goto	l9029
 29225  0152F8                     l9025:
 29226                           
 29227                           ;stkvar	_b @ sp[(-13)+-4]
 29228  0152F8  0EEF               	movlw	-17
 29229  0152FA  B0E3               	btfsc	plusw1,0,c
 29230  0152FC  D7F9               	goto	u7150
 29231  0152FE                     l9029:
 29232                           
 29233                           ;stkvar	_aexp @ sp[(-13)+10]
 29234  0152FE  0EFD               	movlw	-3
 29235  015300  50E3               	movf	plusw1,w,c
 29236  015302  B4D8               	btfsc	status,2,c
 29237  015304  D036               	goto	l9039
 29238                           
 29239                           ;stkvar	_b @ sp[(-13)+-4]
 29240  015306  50E1               	movf	fsr1l,w,c
 29241  015308  0FEF               	addlw	-17
 29242  01530A  6ED9               	movwf	fsr2l,c
 29243  01530C  50E2               	movf	fsr1h,w,c
 29244  01530E  6EDA               	movwf	fsr2h,c
 29245  015310  0EFF               	movlw	255
 29246  015312  22DA               	addwfc	fsr2h,f,c
 29247  015314  2ADE               	incf	postinc2,f,c
 29248  015316  0E00               	movlw	0
 29249  015318  22DE               	addwfc	postinc2,f,c
 29250  01531A  22DE               	addwfc	postinc2,f,c
 29251  01531C  22DE               	addwfc	postinc2,f,c
 29252                           
 29253                           ;stkvar	_b @ sp[(-13)+-4]
 29254  01531E  0EF2               	movlw	-14
 29255  015320  A0E3               	btfss	plusw1,0,c
 29256  015322  D027               	goto	l9039
 29257  015324  0E01               	movlw	1
 29258  015326  6E0C               	movwf	(btemp+11)^0,c
 29259                           
 29260                           ;stkvar	_b @ sp[(-13)+-4]
 29261  015328  50E1               	movf	fsr1l,w,c
 29262  01532A  0FEF               	addlw	-17
 29263  01532C  6ED9               	movwf	fsr2l,c
 29264  01532E  50E2               	movf	fsr1h,w,c
 29265  015330  6EDA               	movwf	fsr2h,c
 29266  015332  0EFF               	movlw	255
 29267  015334  22DA               	addwfc	fsr2h,f,c
 29268  015336  280C               	incf	(btemp+11)^0,w,c
 29269  015338  52DE               	movf	postinc2,f,c
 29270  01533A  D008               	goto	u7190
 29271  01533C                     u7195:
 29272  01533C  52DE               	movf	postinc2,f,c
 29273  01533E  90D8               	bcf	status,0,c
 29274  015340  BEDC               	btfsc	preinc2,7,c
 29275  015342  80D8               	bsf	status,0,c
 29276  015344  32DD               	rrcf	postdec2,f,c
 29277  015346  32DD               	rrcf	postdec2,f,c
 29278  015348  32DD               	rrcf	postdec2,f,c
 29279  01534A  32DE               	rrcf	postinc2,f,c
 29280  01534C                     u7190:
 29281  01534C  2EE8               	decfsz	wreg,f,c
 29282  01534E  D7F6               	goto	u7195
 29283                           
 29284                           ;stkvar	_new_exp @ sp[(-13)+8]
 29285  015350  0EFB               	movlw	-5
 29286  015352  50E3               	movf	plusw1,w,c
 29287  015354  0F01               	addlw	1
 29288  015356  6E01               	movwf	btemp^0,c
 29289  015358  0EFB               	movlw	-5
 29290  01535A  0060  F007  FFE3   	movff	btemp,plusw1
 29291  015360  6A01               	clrf	btemp^0,c
 29292  015362  0EFC               	movlw	-4
 29293  015364  50E3               	movf	plusw1,w,c
 29294  015366  2001               	addwfc	btemp^0,w,c
 29295  015368  6E01               	movwf	btemp^0,c
 29296  01536A  0EFC               	movlw	-4
 29297  01536C  0060  F007  FFE3   	movff	btemp,plusw1
 29298  015372                     l9039:
 29299                           
 29300                           ;stkvar	_new_exp @ sp[(-13)+8]
 29301  015372  0EFC               	movlw	-4
 29302  015374  BEE3               	btfsc	plusw1,7,c
 29303  015376  D01B               	goto	l9045
 29304  015378  0EFC               	movlw	-4
 29305  01537A  50E3               	movf	plusw1,w,c
 29306  01537C  E104               	bnz	u7200
 29307  01537E  0EFB               	movlw	-5
 29308  015380  28E3               	incf	plusw1,w,c
 29309  015382  A0D8               	btfss	status,0,c
 29310  015384  D014               	goto	l9045
 29311  015386                     u7200:
 29312  015386  0EFF               	movlw	255
 29313  015388  6E0B               	movwf	(btemp+10)^0,c
 29314  01538A  0E00               	movlw	0
 29315  01538C  6E0C               	movwf	(btemp+11)^0,c
 29316                           
 29317                           ;stkvar	_new_exp @ sp[(-13)+8]
 29318  01538E  0EFB               	movlw	-5
 29319  015390  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29320  015396  0EFC               	movlw	-4
 29321  015398  0060  F033  FFE3   	movff	btemp+11,plusw1
 29322                           
 29323                           ;stkvar	_b @ sp[(-13)+-4]
 29324  01539E  0EEF               	movlw	-17
 29325  0153A0  6AE3               	clrf	plusw1,c
 29326  0153A2  0EF0               	movlw	-16
 29327  0153A4  6AE3               	clrf	plusw1,c
 29328  0153A6  0EF1               	movlw	-15
 29329  0153A8  6AE3               	clrf	plusw1,c
 29330  0153AA  0EF2               	movlw	-14
 29331  0153AC  6AE3               	clrf	plusw1,c
 29332  0153AE                     l9045:
 29333                           
 29334                           ;stkvar	_new_exp @ sp[(-13)+8]
 29335  0153AE  0EFC               	movlw	-4
 29336  0153B0  BEE3               	btfsc	plusw1,7,c
 29337  0153B2  D007               	goto	u7210
 29338  0153B4  0EFC               	movlw	-4
 29339  0153B6  50E3               	movf	plusw1,w,c
 29340  0153B8  E112               	bnz	l9051
 29341  0153BA  0EFB               	movlw	-5
 29342  0153BC  04E3               	decf	plusw1,w,c
 29343  0153BE  B0D8               	btfsc	status,0,c
 29344  0153C0  D00E               	goto	l9051
 29345  0153C2                     u7210:
 29346                           
 29347                           ;stkvar	_new_exp @ sp[(-13)+8]
 29348  0153C2  0EFB               	movlw	-5
 29349  0153C4  6AE3               	clrf	plusw1,c
 29350  0153C6  0EFC               	movlw	-4
 29351  0153C8  6AE3               	clrf	plusw1,c
 29352                           
 29353                           ;stkvar	_b @ sp[(-13)+-4]
 29354  0153CA  0EEF               	movlw	-17
 29355  0153CC  6AE3               	clrf	plusw1,c
 29356  0153CE  0EF0               	movlw	-16
 29357  0153D0  6AE3               	clrf	plusw1,c
 29358  0153D2  0EF1               	movlw	-15
 29359  0153D4  6AE3               	clrf	plusw1,c
 29360  0153D6  0EF2               	movlw	-14
 29361  0153D8  6AE3               	clrf	plusw1,c
 29362                           
 29363                           ;stkvar	_sign @ sp[(-13)+12]
 29364  0153DA  0EFF               	movlw	-1
 29365  0153DC  6AE3               	clrf	plusw1,c
 29366  0153DE                     l9051:
 29367                           
 29368                           ;stkvar	_new_exp @ sp[(-13)+8]
 29369                           ;stkvar	_bexp @ sp[(-13)+11]
 29370  0153DE  0EFB               	movlw	-5
 29371  0153E0  006F FF8C  F001    	movff	plusw1,btemp
 29372  0153E6  0EFE               	movlw	-2
 29373  0153E8  0060  F007  FFE3   	movff	btemp,plusw1
 29374                           
 29375                           ;stkvar	_bexp @ sp[(-13)+11]
 29376  0153EE  0EFE               	movlw	-2
 29377  0153F0  A0E3               	btfss	plusw1,0,c
 29378  0153F2  D009               	goto	l9057
 29379                           
 29380                           ;stkvar	_b @ sp[(-13)+-4]
 29381  0153F4  0EF1               	movlw	241
 29382  0153F6  24E1               	addwf	fsr1l,w,c
 29383  0153F8  6ED9               	movwf	fsr2l,c
 29384  0153FA  0EFF               	movlw	255
 29385  0153FC  20E2               	addwfc	fsr1h,w,c
 29386  0153FE  6EDA               	movwf	fsr2h,c
 29387  015400  0E00               	movlw	0
 29388  015402  8EDB               	bsf	plusw2,7,c
 29389  015404  D008               	goto	l9059
 29390  015406                     l9057:
 29391                           
 29392                           ;stkvar	_b @ sp[(-13)+-4]
 29393  015406  0EF1               	movlw	241
 29394  015408  24E1               	addwf	fsr1l,w,c
 29395  01540A  6ED9               	movwf	fsr2l,c
 29396  01540C  0EFF               	movlw	255
 29397  01540E  20E2               	addwfc	fsr1h,w,c
 29398  015410  6EDA               	movwf	fsr2h,c
 29399  015412  0E7F               	movlw	127
 29400  015414  16DF               	andwf	indf2,f,c
 29401  015416                     l9059:
 29402                           
 29403                           ;stkvar	_b @ sp[(-13)+-4]
 29404  015416  0EF2               	movlw	242
 29405  015418  24E1               	addwf	fsr1l,w,c
 29406  01541A  6ED9               	movwf	fsr2l,c
 29407  01541C  0EFF               	movlw	255
 29408  01541E  20E2               	addwfc	fsr1h,w,c
 29409  015420  6EDA               	movwf	fsr2h,c
 29410                           
 29411                           ;stkvar	_bexp @ sp[(-13)+11]
 29412  015422  0EFE               	movlw	-2
 29413  015424  006F FF8C  F00C    	movff	plusw1,btemp+11
 29414  01542A  90D8               	bcf	status,0,c
 29415  01542C  300C               	rrcf	(btemp+11)^0,w,c
 29416  01542E  6EDF               	movwf	indf2,c
 29417  015430  D644               	goto	l8957
 29418  015432                     l3238:
 29419                           
 29420                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 29421  015432  0EEB               	movlw	235
 29422  015434  26E1               	addwf	fsr1l,f,c
 29423  015436  0EFF               	movlw	255
 29424  015438  22E2               	addwfc	fsr1h,f,c
 29425  01543A  0012               	return		;funcret
 29426  01543C                     __end_of___fldiv:
 29427                           	opt callstack 0
 29428                           
 29429 ;; *************** function ___flge *****************
 29430 ;; Defined at:
 29431 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 29432 ;; Parameters:    Size  Location     Type
 29433 ;;  ff1             4  [STACK] unsigned char 
 29434 ;;  ff2             4  [STACK] unsigned char 
 29435 ;; Auto vars:     Size  Location     Type
 29436 ;;		None
 29437 ;; Return value:  Size  Location     Type
 29438 ;;		None               void
 29439 ;; Registers used:
 29440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 29441 ;; Tracked objects:
 29442 ;;		On entry : 0/0
 29443 ;;		On exit  : 0/0
 29444 ;;		Unchanged: 0/0
 29445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29450 ;;Total ram usage:        0 bytes
 29451 ;; Hardware stack levels used:    1
 29452 ;; Hardware stack levels required when called:   15
 29453 ;; This function calls:
 29454 ;;		Nothing
 29455 ;; This function is called by:
 29456 ;;		_main
 29457 ;;		_convert_dac_raw
 29458 ;;		_calc_ror_data
 29459 ;;		_check_day_time
 29460 ;;		_calc_bsoc
 29461 ;;		_efgtoa
 29462 ;; This function uses a reentrant model
 29463 ;;
 29464                           
 29465                           	psect	text119
 29466  019AE6                     __ptext119:
 29467                           	opt callstack 0
 29468  019AE6                     ___flge:
 29469                           	opt callstack 0
 29470                           
 29471                           ;stkvar	_ff1 @ sp[(0)+-4]
 29472                           
 29473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29474                           ;incstack = 0
 29475 ;; hardware stack exceeded
 29476  019AE6  50E1               	movf	fsr1l,w,c
 29477  019AE8  0FFC               	addlw	-4
 29478  019AEA  6ED9               	movwf	fsr2l,c
 29479  019AEC  50E2               	movf	fsr1h,w,c
 29480  019AEE  6EDA               	movwf	fsr2h,c
 29481  019AF0  0EFF               	movlw	255
 29482  019AF2  22DA               	addwfc	fsr2h,f,c
 29483  019AF4  0E00               	movlw	0
 29484  019AF6  14DE               	andwf	postinc2,w,c
 29485  019AF8  6E09               	movwf	(btemp+8)^0,c
 29486  019AFA  0E00               	movlw	0
 29487  019AFC  14DE               	andwf	postinc2,w,c
 29488  019AFE  6E0A               	movwf	(btemp+9)^0,c
 29489  019B00  0E80               	movlw	128
 29490  019B02  14DE               	andwf	postinc2,w,c
 29491  019B04  6E0B               	movwf	(btemp+10)^0,c
 29492  019B06  0E7F               	movlw	127
 29493  019B08  14DE               	andwf	postinc2,w,c
 29494  019B0A  6E0C               	movwf	(btemp+11)^0,c
 29495  019B0C  5009               	movf	(btemp+8)^0,w,c
 29496  019B0E  100A               	iorwf	(btemp+9)^0,w,c
 29497  019B10  100B               	iorwf	(btemp+10)^0,w,c
 29498  019B12  100C               	iorwf	(btemp+11)^0,w,c
 29499  019B14  A4D8               	btfss	status,2,c
 29500  019B16  D008               	goto	l9333
 29501                           
 29502                           ;stkvar	_ff1 @ sp[(0)+-4]
 29503  019B18  0EFC               	movlw	-4
 29504  019B1A  6AE3               	clrf	plusw1,c
 29505  019B1C  0EFD               	movlw	-3
 29506  019B1E  6AE3               	clrf	plusw1,c
 29507  019B20  0EFE               	movlw	-2
 29508  019B22  6AE3               	clrf	plusw1,c
 29509  019B24  0EFF               	movlw	-1
 29510  019B26  6AE3               	clrf	plusw1,c
 29511  019B28                     l9333:
 29512                           
 29513                           ;stkvar	_ff2 @ sp[(0)+-8]
 29514  019B28  50E1               	movf	fsr1l,w,c
 29515  019B2A  0FF8               	addlw	-8
 29516  019B2C  6ED9               	movwf	fsr2l,c
 29517  019B2E  50E2               	movf	fsr1h,w,c
 29518  019B30  6EDA               	movwf	fsr2h,c
 29519  019B32  0EFF               	movlw	255
 29520  019B34  22DA               	addwfc	fsr2h,f,c
 29521  019B36  0E00               	movlw	0
 29522  019B38  14DE               	andwf	postinc2,w,c
 29523  019B3A  6E09               	movwf	(btemp+8)^0,c
 29524  019B3C  0E00               	movlw	0
 29525  019B3E  14DE               	andwf	postinc2,w,c
 29526  019B40  6E0A               	movwf	(btemp+9)^0,c
 29527  019B42  0E80               	movlw	128
 29528  019B44  14DE               	andwf	postinc2,w,c
 29529  019B46  6E0B               	movwf	(btemp+10)^0,c
 29530  019B48  0E7F               	movlw	127
 29531  019B4A  14DE               	andwf	postinc2,w,c
 29532  019B4C  6E0C               	movwf	(btemp+11)^0,c
 29533  019B4E  5009               	movf	(btemp+8)^0,w,c
 29534  019B50  100A               	iorwf	(btemp+9)^0,w,c
 29535  019B52  100B               	iorwf	(btemp+10)^0,w,c
 29536  019B54  100C               	iorwf	(btemp+11)^0,w,c
 29537  019B56  A4D8               	btfss	status,2,c
 29538  019B58  D008               	goto	l2919
 29539                           
 29540                           ;stkvar	_ff2 @ sp[(0)+-8]
 29541  019B5A  0EF8               	movlw	-8
 29542  019B5C  6AE3               	clrf	plusw1,c
 29543  019B5E  0EF9               	movlw	-7
 29544  019B60  6AE3               	clrf	plusw1,c
 29545  019B62  0EFA               	movlw	-6
 29546  019B64  6AE3               	clrf	plusw1,c
 29547  019B66  0EFB               	movlw	-5
 29548  019B68  6AE3               	clrf	plusw1,c
 29549  019B6A                     l2919:
 29550                           
 29551                           ;stkvar	_ff1 @ sp[(0)+-4]
 29552  019B6A  0EFF               	movlw	-1
 29553  019B6C  AEE3               	btfss	plusw1,7,c
 29554  019B6E  D024               	goto	l9339
 29555                           
 29556                           ;stkvar	_ff1 @ sp[(0)+-4]
 29557  019B70  0E00               	movlw	0
 29558  019B72  6E09               	movwf	(btemp+8)^0,c
 29559  019B74  0E00               	movlw	0
 29560  019B76  6E0A               	movwf	(btemp+9)^0,c
 29561  019B78  0E00               	movlw	0
 29562  019B7A  6E0B               	movwf	(btemp+10)^0,c
 29563  019B7C  0E80               	movlw	128
 29564  019B7E  6E0C               	movwf	(btemp+11)^0,c
 29565  019B80  0EFC               	movlw	-4
 29566  019B82  50E3               	movf	plusw1,w,c
 29567  019B84  5E09               	subwf	(btemp+8)^0,f,c
 29568  019B86  0EFD               	movlw	-3
 29569  019B88  50E3               	movf	plusw1,w,c
 29570  019B8A  5A0A               	subwfb	(btemp+9)^0,f,c
 29571  019B8C  0EFE               	movlw	-2
 29572  019B8E  50E3               	movf	plusw1,w,c
 29573  019B90  5A0B               	subwfb	(btemp+10)^0,f,c
 29574  019B92  0EFF               	movlw	-1
 29575  019B94  50E3               	movf	plusw1,w,c
 29576  019B96  5A0C               	subwfb	(btemp+11)^0,f,c
 29577                           
 29578                           ;stkvar	_ff1 @ sp[(0)+-4]
 29579  019B98  0EFC               	movlw	-4
 29580  019B9A  0060  F027  FFE3   	movff	btemp+8,plusw1
 29581  019BA0  0EFD               	movlw	-3
 29582  019BA2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29583  019BA8  0EFE               	movlw	-2
 29584  019BAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29585  019BB0  0EFF               	movlw	-1
 29586  019BB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 29587  019BB8                     l9339:
 29588                           
 29589                           ;stkvar	_ff2 @ sp[(0)+-8]
 29590  019BB8  0EFB               	movlw	-5
 29591  019BBA  AEE3               	btfss	plusw1,7,c
 29592  019BBC  D024               	goto	l9343
 29593                           
 29594                           ;stkvar	_ff2 @ sp[(0)+-8]
 29595  019BBE  0E00               	movlw	0
 29596  019BC0  6E09               	movwf	(btemp+8)^0,c
 29597  019BC2  0E00               	movlw	0
 29598  019BC4  6E0A               	movwf	(btemp+9)^0,c
 29599  019BC6  0E00               	movlw	0
 29600  019BC8  6E0B               	movwf	(btemp+10)^0,c
 29601  019BCA  0E80               	movlw	128
 29602  019BCC  6E0C               	movwf	(btemp+11)^0,c
 29603  019BCE  0EF8               	movlw	-8
 29604  019BD0  50E3               	movf	plusw1,w,c
 29605  019BD2  5E09               	subwf	(btemp+8)^0,f,c
 29606  019BD4  0EF9               	movlw	-7
 29607  019BD6  50E3               	movf	plusw1,w,c
 29608  019BD8  5A0A               	subwfb	(btemp+9)^0,f,c
 29609  019BDA  0EFA               	movlw	-6
 29610  019BDC  50E3               	movf	plusw1,w,c
 29611  019BDE  5A0B               	subwfb	(btemp+10)^0,f,c
 29612  019BE0  0EFB               	movlw	-5
 29613  019BE2  50E3               	movf	plusw1,w,c
 29614  019BE4  5A0C               	subwfb	(btemp+11)^0,f,c
 29615                           
 29616                           ;stkvar	_ff2 @ sp[(0)+-8]
 29617  019BE6  0EF8               	movlw	-8
 29618  019BE8  0060  F027  FFE3   	movff	btemp+8,plusw1
 29619  019BEE  0EF9               	movlw	-7
 29620  019BF0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29621  019BF6  0EFA               	movlw	-6
 29622  019BF8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29623  019BFE  0EFB               	movlw	-5
 29624  019C00  0060  F033  FFE3   	movff	btemp+11,plusw1
 29625  019C06                     l9343:
 29626                           
 29627                           ;stkvar	_ff1 @ sp[(0)+-4]
 29628  019C06  0EFF               	movlw	-1
 29629  019C08  7EE3               	btg	plusw1,7,c
 29630                           
 29631                           ;stkvar	_ff2 @ sp[(0)+-8]
 29632  019C0A  0EFB               	movlw	-5
 29633  019C0C  7EE3               	btg	plusw1,7,c
 29634                           
 29635                           ;stkvar	_ff2 @ sp[(0)+-8]
 29636                           ;stkvar	_ff1 @ sp[(0)+-4]
 29637  019C0E  50E1               	movf	fsr1l,w,c
 29638  019C10  0FFC               	addlw	-4
 29639  019C12  6ED9               	movwf	fsr2l,c
 29640  019C14  50E2               	movf	fsr1h,w,c
 29641  019C16  6EDA               	movwf	fsr2h,c
 29642  019C18  0EFF               	movlw	255
 29643  019C1A  22DA               	addwfc	fsr2h,f,c
 29644  019C1C  0EF8               	movlw	-8
 29645  019C1E  50E3               	movf	plusw1,w,c
 29646  019C20  5CDE               	subwf	postinc2,w,c
 29647  019C22  0EF9               	movlw	-7
 29648  019C24  50E3               	movf	plusw1,w,c
 29649  019C26  58DE               	subwfb	postinc2,w,c
 29650  019C28  0EFA               	movlw	-6
 29651  019C2A  50E3               	movf	plusw1,w,c
 29652  019C2C  58DE               	subwfb	postinc2,w,c
 29653  019C2E  0EFB               	movlw	-5
 29654  019C30  50E3               	movf	plusw1,w,c
 29655  019C32  58DE               	subwfb	postinc2,w,c
 29656  019C34  B0D8               	btfsc	status,0,c
 29657  019C36  D002               	goto	l9351
 29658  019C38  9001               	bcf	btemp& (0+255),0,c
 29659  019C3A  D001               	goto	l2926
 29660  019C3C                     l9351:
 29661  019C3C  8001               	bsf	btemp& (0+255),0,c
 29662  019C3E                     l2926:
 29663                           
 29664                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 29665  019C3E  0EF8               	movlw	248
 29666  019C40  26E1               	addwf	fsr1l,f,c
 29667  019C42  0EFF               	movlw	255
 29668  019C44  22E2               	addwfc	fsr1h,f,c
 29669  019C46  0012               	return		;funcret
 29670  019C48                     __end_of___flge:
 29671                           	opt callstack 0
 29672                           
 29673 ;; *************** function _calc_model_data *****************
 29674 ;; Defined at:
 29675 ;;		line 67 in file "mbmc.c"
 29676 ;; Parameters:    Size  Location     Type
 29677 ;;		None
 29678 ;; Auto vars:     Size  Location     Type
 29679 ;;		None
 29680 ;; Return value:  Size  Location     Type
 29681 ;;                  1  [STACK] void 
 29682 ;; Registers used:
 29683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 29684 ;; Tracked objects:
 29685 ;;		On entry : 0/1
 29686 ;;		On exit  : 3F/39
 29687 ;;		Unchanged: 0/0
 29688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29693 ;;Total ram usage:        0 bytes
 29694 ;; Hardware stack levels used:    1
 29695 ;; Hardware stack levels required when called:   18
 29696 ;; This function calls:
 29697 ;;		___fladd
 29698 ;;		___flmul
 29699 ;;		___flsub
 29700 ;;		_lp_filter
 29701 ;;		_start_bsoc
 29702 ;;		_stop_bsoc
 29703 ;; This function is called by:
 29704 ;;		_main
 29705 ;; This function uses a reentrant model
 29706 ;;
 29707                           
 29708                           	psect	text120
 29709  016230                     __ptext120:
 29710                           	opt callstack 0
 29711  016230                     _calc_model_data:
 29712                           	opt callstack 12
 29713                           
 29714                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 29715                           
 29716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29717                           ;incstack = 0
 29718  016230  ECCF  F0E9         	call	_stop_bsoc	;wreg free
 29719                           
 29720                           ; BSR set to: 57
 29721                           ;mbmc.c: 72:  if (!V.calib) {
 29722  016234  0101               	movlb	1	; () banked
 29723  016236  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 29724  016238  A4D8               	btfss	status,2,c
 29725  01623A  D219               	goto	l12177
 29726                           
 29727                           ; BSR set to: 1
 29728                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 29729  01623C  EE21  F3FF         	lfsr	2,_C
 29730  016240  006F FF78  F843    	movff	postinc2,_C+68	;volatile
 29731  016246  006F FF78  F844    	movff	postinc2,_C+69	;volatile
 29732  01624C  006F FF78  F845    	movff	postinc2,_C+70	;volatile
 29733  016252  006F FF74  F846    	movff	postdec2,_C+71	;volatile
 29734                           
 29735                           ; BSR set to: 1
 29736                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 29737  016258  0060  F1B3  FFE6   	movff	calc_model_data@bcror,postinc1
 29738  01625E  0060  F1B7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 29739  016264  0060  F1BB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 29740  01626A  0060  F1BF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 29741  016270  EE22  F043         	lfsr	2,_C+68	;volatile
 29742  016274  006F FF7B FFE6     	movff	postinc2,postinc1
 29743  01627A  006F FF7B FFE6     	movff	postinc2,postinc1
 29744  016280  006F FF7B FFE6     	movff	postinc2,postinc1
 29745  016286  006F FF7B FFE6     	movff	postinc2,postinc1
 29746  01628C  EC94  F0E3         	call	___flsub	;wreg free
 29747  016290  0060  F004  F86F   	movff	btemp,_C+112	;volatile
 29748  016296  0060  F008  F870   	movff	btemp+1,_C+113	;volatile
 29749  01629C  0060  F00C  F871   	movff	btemp+2,_C+114	;volatile
 29750  0162A2  0060  F010  F872   	movff	btemp+3,_C+115	;volatile
 29751                           
 29752                           ;mbmc.c: 75:   bcror = C.c_bat;
 29753  0162A8  C843  F06C         	movff	_C+68,calc_model_data@bcror	;volatile
 29754  0162AC  C844  F06D         	movff	_C+69,calc_model_data@bcror+1	;volatile
 29755  0162B0  C845  F06E         	movff	_C+70,calc_model_data@bcror+2	;volatile
 29756  0162B4  C846  F06F         	movff	_C+71,calc_model_data@bcror+3	;volatile
 29757                           
 29758                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 29759  0162B8  EE22  F003         	lfsr	2,_C+4	;volatile
 29760  0162BC  006F FF78  F847    	movff	postinc2,_C+72	;volatile
 29761  0162C2  006F FF78  F848    	movff	postinc2,_C+73	;volatile
 29762  0162C8  006F FF78  F849    	movff	postinc2,_C+74	;volatile
 29763  0162CE  006F FF74  F84A    	movff	postdec2,_C+75	;volatile
 29764                           
 29765                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 29766  0162D4  EE22  F00F         	lfsr	2,_C+16	;volatile
 29767  0162D8  006F FF78  F853    	movff	postinc2,_C+84	;volatile
 29768  0162DE  006F FF78  F854    	movff	postinc2,_C+85	;volatile
 29769  0162E4  006F FF78  F855    	movff	postinc2,_C+86	;volatile
 29770  0162EA  006F FF74  F856    	movff	postdec2,_C+87	;volatile
 29771                           
 29772                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 29773  0162F0  EE22  F033         	lfsr	2,_C+52	;volatile
 29774  0162F4  006F FF78  F867    	movff	postinc2,_C+104	;volatile
 29775  0162FA  006F FF78  F868    	movff	postinc2,_C+105	;volatile
 29776  016300  006F FF78  F869    	movff	postinc2,_C+106	;volatile
 29777  016306  006F FF74  F86A    	movff	postdec2,_C+107	;volatile
 29778                           
 29779                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 29780  01630C  0060  F1C3  FFE6   	movff	calc_model_data@bvror,postinc1
 29781  016312  0060  F1C7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 29782  016318  0060  F1CB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 29783  01631E  0060  F1CF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 29784  016324  EE22  F053         	lfsr	2,_C+84	;volatile
 29785  016328  006F FF7B FFE6     	movff	postinc2,postinc1
 29786  01632E  006F FF7B FFE6     	movff	postinc2,postinc1
 29787  016334  006F FF7B FFE6     	movff	postinc2,postinc1
 29788  01633A  006F FF7B FFE6     	movff	postinc2,postinc1
 29789  016340  EC94  F0E3         	call	___flsub	;wreg free
 29790  016344  0060  F004  F86B   	movff	btemp,_C+108	;volatile
 29791  01634A  0060  F008  F86C   	movff	btemp+1,_C+109	;volatile
 29792  016350  0060  F00C  F86D   	movff	btemp+2,_C+110	;volatile
 29793  016356  0060  F010  F86E   	movff	btemp+3,_C+111	;volatile
 29794                           
 29795                           ;mbmc.c: 80:   bvror = C.v_bat;
 29796  01635C  C853  F070         	movff	_C+84,calc_model_data@bvror	;volatile
 29797  016360  C854  F071         	movff	_C+85,calc_model_data@bvror+1	;volatile
 29798  016364  C855  F072         	movff	_C+86,calc_model_data@bvror+2	;volatile
 29799  016368  C856  F073         	movff	_C+87,calc_model_data@bvror+3	;volatile
 29800                           
 29801                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 29802  01636C  EE22  F013         	lfsr	2,_C+20	;volatile
 29803  016370  006F FF78  F84F    	movff	postinc2,_C+80	;volatile
 29804  016376  006F FF78  F850    	movff	postinc2,_C+81	;volatile
 29805  01637C  006F FF78  F851    	movff	postinc2,_C+82	;volatile
 29806  016382  006F FF74  F852    	movff	postdec2,_C+83	;volatile
 29807                           
 29808                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 29809  016388  EE22  F007         	lfsr	2,_C+8	;volatile
 29810  01638C  006F FF78  F84B    	movff	postinc2,_C+76	;volatile
 29811  016392  006F FF78  F84C    	movff	postinc2,_C+77	;volatile
 29812  016398  006F FF78  F84D    	movff	postinc2,_C+78	;volatile
 29813  01639E  006F FF74  F84E    	movff	postdec2,_C+79	;volatile
 29814                           
 29815                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 29816  0163A4  EE22  F02F         	lfsr	2,_C+48	;volatile
 29817  0163A8  006F FF78  F863    	movff	postinc2,_C+100	;volatile
 29818  0163AE  006F FF78  F864    	movff	postinc2,_C+101	;volatile
 29819  0163B4  006F FF78  F865    	movff	postinc2,_C+102	;volatile
 29820  0163BA  006F FF74  F866    	movff	postdec2,_C+103	;volatile
 29821                           
 29822                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 29823  0163C0  0E01               	movlw	1
 29824  0163C2  6EE6               	movwf	postinc1,c
 29825  0163C4  0E10               	movlw	16
 29826  0163C6  6EE6               	movwf	postinc1,c
 29827  0163C8  EE21  F3FF         	lfsr	2,_C
 29828  0163CC  006F FF7B FFE6     	movff	postinc2,postinc1
 29829  0163D2  006F FF7B FFE6     	movff	postinc2,postinc1
 29830  0163D8  006F FF7B FFE6     	movff	postinc2,postinc1
 29831  0163DE  006F FF7B FFE6     	movff	postinc2,postinc1
 29832  0163E4  EE22  F003         	lfsr	2,_C+4	;volatile
 29833  0163E8  006F FF7B FFE6     	movff	postinc2,postinc1
 29834  0163EE  006F FF7B FFE6     	movff	postinc2,postinc1
 29835  0163F4  006F FF7B FFE6     	movff	postinc2,postinc1
 29836  0163FA  006F FF7B FFE6     	movff	postinc2,postinc1
 29837  016400  EC94  F0E3         	call	___flsub	;wreg free
 29838  016404  0060  F007  FFE6   	movff	btemp,postinc1
 29839  01640A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29840  016410  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29841  016416  0060  F013  FFE6   	movff	btemp+3,postinc1
 29842  01641C  EC2E  F0C7         	call	_lp_filter	;wreg free
 29843  016420  0060  F004  F83F   	movff	btemp,_C+64	;volatile
 29844  016426  0060  F008  F840   	movff	btemp+1,_C+65	;volatile
 29845  01642C  0060  F00C  F841   	movff	btemp+2,_C+66	;volatile
 29846  016432  0060  F010  F842   	movff	btemp+3,_C+67	;volatile
 29847                           
 29848                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 29849  016438  0E01               	movlw	1
 29850  01643A  6EE6               	movwf	postinc1,c
 29851  01643C  0E11               	movlw	17
 29852  01643E  6EE6               	movwf	postinc1,c
 29853  016440  EE22  F053         	lfsr	2,_C+84	;volatile
 29854  016444  006F FF7B FFE6     	movff	postinc2,postinc1
 29855  01644A  006F FF7B FFE6     	movff	postinc2,postinc1
 29856  016450  006F FF7B FFE6     	movff	postinc2,postinc1
 29857  016456  006F FF7B FFE6     	movff	postinc2,postinc1
 29858  01645C  EE22  F03F         	lfsr	2,_C+64	;volatile
 29859  016460  006F FF7B FFE6     	movff	postinc2,postinc1
 29860  016466  006F FF7B FFE6     	movff	postinc2,postinc1
 29861  01646C  006F FF7B FFE6     	movff	postinc2,postinc1
 29862  016472  006F FF7B FFE6     	movff	postinc2,postinc1
 29863  016478  EC6E  F09F         	call	___flmul	;wreg free
 29864  01647C  0060  F007  FFE6   	movff	btemp,postinc1
 29865  016482  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29866  016488  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29867  01648E  0060  F013  FFE6   	movff	btemp+3,postinc1
 29868  016494  EC2E  F0C7         	call	_lp_filter	;wreg free
 29869  016498  0060  F004  F873   	movff	btemp,_C+116	;volatile
 29870  01649E  0060  F008  F874   	movff	btemp+1,_C+117	;volatile
 29871  0164A4  0060  F00C  F875   	movff	btemp+2,_C+118	;volatile
 29872  0164AA  0060  F010  F876   	movff	btemp+3,_C+119	;volatile
 29873                           
 29874                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 29875  0164B0  0E01               	movlw	1
 29876  0164B2  6EE6               	movwf	postinc1,c
 29877  0164B4  0E12               	movlw	18
 29878  0164B6  6EE6               	movwf	postinc1,c
 29879  0164B8  EE22  F04F         	lfsr	2,_C+80	;volatile
 29880  0164BC  006F FF7B FFE6     	movff	postinc2,postinc1
 29881  0164C2  006F FF7B FFE6     	movff	postinc2,postinc1
 29882  0164C8  006F FF7B FFE6     	movff	postinc2,postinc1
 29883  0164CE  006F FF7B FFE6     	movff	postinc2,postinc1
 29884  0164D4  EE22  F047         	lfsr	2,_C+72	;volatile
 29885  0164D8  006F FF7B FFE6     	movff	postinc2,postinc1
 29886  0164DE  006F FF7B FFE6     	movff	postinc2,postinc1
 29887  0164E4  006F FF7B FFE6     	movff	postinc2,postinc1
 29888  0164EA  006F FF7B FFE6     	movff	postinc2,postinc1
 29889  0164F0  EC6E  F09F         	call	___flmul	;wreg free
 29890  0164F4  0060  F007  FFE6   	movff	btemp,postinc1
 29891  0164FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29892  016500  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29893  016506  0060  F013  FFE6   	movff	btemp+3,postinc1
 29894  01650C  EC2E  F0C7         	call	_lp_filter	;wreg free
 29895  016510  0060  F004  F87B   	movff	btemp,_C+124	;volatile
 29896  016516  0060  F008  F87C   	movff	btemp+1,_C+125	;volatile
 29897  01651C  0060  F00C  F87D   	movff	btemp+2,_C+126	;volatile
 29898  016522  0060  F010  F87E   	movff	btemp+3,_C+127	;volatile
 29899                           
 29900                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 29901  016528  0E01               	movlw	1
 29902  01652A  6EE6               	movwf	postinc1,c
 29903  01652C  0E13               	movlw	19
 29904  01652E  6EE6               	movwf	postinc1,c
 29905  016530  0E00               	movlw	0
 29906  016532  6EE6               	movwf	postinc1,c
 29907  016534  0E00               	movlw	0
 29908  016536  6EE6               	movwf	postinc1,c
 29909  016538  0E60               	movlw	96
 29910  01653A  6EE6               	movwf	postinc1,c
 29911  01653C  0EC1               	movlw	193
 29912  01653E  6EE6               	movwf	postinc1,c
 29913  016540  EE22  F063         	lfsr	2,_C+100	;volatile
 29914  016544  006F FF7B FFE6     	movff	postinc2,postinc1
 29915  01654A  006F FF7B FFE6     	movff	postinc2,postinc1
 29916  016550  006F FF7B FFE6     	movff	postinc2,postinc1
 29917  016556  006F FF7B FFE6     	movff	postinc2,postinc1
 29918  01655C  EE22  F03F         	lfsr	2,_C+64	;volatile
 29919  016560  006F FF7B FFE6     	movff	postinc2,postinc1
 29920  016566  006F FF7B FFE6     	movff	postinc2,postinc1
 29921  01656C  006F FF7B FFE6     	movff	postinc2,postinc1
 29922  016572  006F FF7B FFE6     	movff	postinc2,postinc1
 29923  016578  EC6E  F09F         	call	___flmul	;wreg free
 29924  01657C  0060  F007  FFE6   	movff	btemp,postinc1
 29925  016582  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29926  016588  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29927  01658E  0060  F013  FFE6   	movff	btemp+3,postinc1
 29928  016594  EC83  F0A3         	call	___fladd	;wreg free
 29929  016598  0060  F007  FFE6   	movff	btemp,postinc1
 29930  01659E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29931  0165A4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29932  0165AA  0060  F013  FFE6   	movff	btemp+3,postinc1
 29933  0165B0  EC2E  F0C7         	call	_lp_filter	;wreg free
 29934  0165B4  0060  F004  F877   	movff	btemp,_C+120	;volatile
 29935  0165BA  0060  F008  F878   	movff	btemp+1,_C+121	;volatile
 29936  0165C0  0060  F00C  F879   	movff	btemp+2,_C+122	;volatile
 29937  0165C6  0060  F010  F87A   	movff	btemp+3,_C+123	;volatile
 29938                           
 29939                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 29940  0165CC  0E01               	movlw	1
 29941  0165CE  6EE6               	movwf	postinc1,c
 29942  0165D0  0E14               	movlw	20
 29943  0165D2  6EE6               	movwf	postinc1,c
 29944  0165D4  EE22  F053         	lfsr	2,_C+84	;volatile
 29945  0165D8  006F FF7B FFE6     	movff	postinc2,postinc1
 29946  0165DE  006F FF7B FFE6     	movff	postinc2,postinc1
 29947  0165E4  006F FF7B FFE6     	movff	postinc2,postinc1
 29948  0165EA  006F FF7B FFE6     	movff	postinc2,postinc1
 29949  0165F0  EE22  F043         	lfsr	2,_C+68	;volatile
 29950  0165F4  006F FF7B FFE6     	movff	postinc2,postinc1
 29951  0165FA  006F FF7B FFE6     	movff	postinc2,postinc1
 29952  016600  006F FF7B FFE6     	movff	postinc2,postinc1
 29953  016606  006F FF7B FFE6     	movff	postinc2,postinc1
 29954  01660C  EC6E  F09F         	call	___flmul	;wreg free
 29955  016610  0060  F007  FFE6   	movff	btemp,postinc1
 29956  016616  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29957  01661C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29958  016622  0060  F013  FFE6   	movff	btemp+3,postinc1
 29959  016628  EC2E  F0C7         	call	_lp_filter	;wreg free
 29960  01662C  0060  F004  F87F   	movff	btemp,_C+128	;volatile
 29961  016632  0060  F008  F880   	movff	btemp+1,_C+129	;volatile
 29962  016638  0060  F00C  F881   	movff	btemp+2,_C+130	;volatile
 29963  01663E  0060  F010  F882   	movff	btemp+3,_C+131	;volatile
 29964                           
 29965                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 29966  016644  EE22  F077         	lfsr	2,_C+120	;volatile
 29967  016648  0E03               	movlw	3
 29968  01664A  AEDB               	btfss	plusw2,7,c
 29969  01664C  D010               	goto	l12177
 29970                           
 29971                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 29972  01664E  0E17               	movlw	23
 29973  016650  006F FFA0  F877    	movff	wreg,_C+120	;volatile
 29974  016656  0EB7               	movlw	183
 29975  016658  006F FFA0  F878    	movff	wreg,_C+121	;volatile
 29976  01665E  0ED1               	movlw	209
 29977  016660  006F FFA0  F879    	movff	wreg,_C+122	;volatile
 29978  016666  0E38               	movlw	56
 29979  016668  006F FFA0  F87A    	movff	wreg,_C+123	;volatile
 29980  01666E                     l12177:
 29981                           
 29982                           ;mbmc.c: 95:  start_bsoc();
 29983  01666E  EC3F  F0E8         	call	_start_bsoc	;wreg free
 29984                           
 29985                           ; BSR set to: 57
 29986                           ;mbmc.c: 96:  C.update = 1;
 29987  016672  0E01               	movlw	1
 29988  016674  006F FFA0  F8B7    	movff	wreg,_C+184	;volatile
 29989                           
 29990                           ; BSR set to: 57
 29991                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29992  01667A  0012               	return		;funcret
 29993  01667C                     __end_of_calc_model_data:
 29994                           	opt callstack 0
 29995                           
 29996 ;; *************** function _stop_bsoc *****************
 29997 ;; Defined at:
 29998 ;;		line 130 in file "bsoc.c"
 29999 ;; Parameters:    Size  Location     Type
 30000 ;;		None
 30001 ;; Auto vars:     Size  Location     Type
 30002 ;;		None
 30003 ;; Return value:  Size  Location     Type
 30004 ;;                  1  [STACK] void 
 30005 ;; Registers used:
 30006 ;;		None
 30007 ;; Tracked objects:
 30008 ;;		On entry : 0/1
 30009 ;;		On exit  : 3F/39
 30010 ;;		Unchanged: 0/0
 30011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30016 ;;Total ram usage:        0 bytes
 30017 ;; Hardware stack levels used:    1
 30018 ;; Hardware stack levels required when called:   15
 30019 ;; This function calls:
 30020 ;;		Nothing
 30021 ;; This function is called by:
 30022 ;;		_calc_model_data
 30023 ;; This function uses a reentrant model
 30024 ;;
 30025                           
 30026                           	psect	text121
 30027  01D39E                     __ptext121:
 30028                           	opt callstack 0
 30029  01D39E                     _stop_bsoc:
 30030                           	opt callstack 14
 30031                           
 30032                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 30033                           
 30034                           ; BSR set to: 57
 30035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30036                           ;incstack = 0
 30037  01D39E  0139               	movlb	57	; () banked
 30038  01D3A0  9D96               	bcf	150,6,b	;volatile
 30039                           
 30040                           ; BSR set to: 57
 30041                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 30042  01D3A2  0012               	return		;funcret
 30043  01D3A4                     __end_of_stop_bsoc:
 30044                           	opt callstack 0
 30045                           
 30046 ;; *************** function _start_bsoc *****************
 30047 ;; Defined at:
 30048 ;;		line 121 in file "bsoc.c"
 30049 ;; Parameters:    Size  Location     Type
 30050 ;;		None
 30051 ;; Auto vars:     Size  Location     Type
 30052 ;;		None
 30053 ;; Return value:  Size  Location     Type
 30054 ;;                  1  [STACK] void 
 30055 ;; Registers used:
 30056 ;;		wreg, status,2, status,0, btemp+11
 30057 ;; Tracked objects:
 30058 ;;		On entry : 0/1
 30059 ;;		On exit  : 3F/39
 30060 ;;		Unchanged: 0/0
 30061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30066 ;;Total ram usage:        0 bytes
 30067 ;; Hardware stack levels used:    1
 30068 ;; Hardware stack levels required when called:   15
 30069 ;; This function calls:
 30070 ;;		Nothing
 30071 ;; This function is called by:
 30072 ;;		_calc_model_data
 30073 ;; This function uses a reentrant model
 30074 ;;
 30075                           
 30076                           	psect	text122
 30077  01D07E                     __ptext122:
 30078                           	opt callstack 0
 30079  01D07E                     _start_bsoc:
 30080                           	opt callstack 14
 30081                           
 30082                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 30083                           
 30084                           ; BSR set to: 57
 30085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30086                           ;incstack = 0
 30087  01D07E  0139               	movlb	57	; () banked
 30088  01D080  8D96               	bsf	150,6,b	;volatile
 30089                           
 30090                           ; BSR set to: 57
 30091  01D082  A4BE               	btfss	190,2,c	;volatile
 30092  01D084  D002               	goto	u10390
 30093  01D086  0E01               	movlw	1
 30094  01D088  D001               	goto	u10396
 30095  01D08A                     u10390:
 30096  01D08A  0E00               	movlw	0
 30097  01D08C                     u10396:
 30098  01D08C  0AFF               	xorlw	255
 30099  01D08E  6E0C               	movwf	(btemp+11)^0,c
 30100  01D090  460C               	rlncf	(btemp+11)^0,f,c
 30101  01D092  460C               	rlncf	(btemp+11)^0,f,c
 30102  01D094  50BE               	movf	190,w,c	;volatile
 30103  01D096  180C               	xorwf	(btemp+11)^0,w,c
 30104  01D098  0BFB               	andlw	-5
 30105  01D09A  180C               	xorwf	(btemp+11)^0,w,c
 30106  01D09C  6EBE               	movwf	190,c	;volatile
 30107                           
 30108                           ; BSR set to: 57
 30109                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 30110  01D09E  0012               	return		;funcret
 30111  01D0A0                     __end_of_start_bsoc:
 30112                           	opt callstack 0
 30113                           
 30114 ;; *************** function _lp_filter *****************
 30115 ;; Defined at:
 30116 ;;		line 29 in file "mbmc.c"
 30117 ;; Parameters:    Size  Location     Type
 30118 ;;  new             4  [STACK] const float 
 30119 ;;  bn              1  [STACK] const unsigned char 
 30120 ;;  slow            1  [STACK] const char 
 30121 ;; Auto vars:     Size  Location     Type
 30122 ;;  lp_speed        4  [STACK] float 
 30123 ;; Return value:  Size  Location     Type
 30124 ;;                  4  [STACK] float 
 30125 ;; Registers used:
 30126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 30127 ;; Tracked objects:
 30128 ;;		On entry : 0/1
 30129 ;;		On exit  : 0/0
 30130 ;;		Unchanged: 0/0
 30131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30136 ;;Total ram usage:        0 bytes
 30137 ;; Hardware stack levels used:    1
 30138 ;; Hardware stack levels required when called:   17
 30139 ;; This function calls:
 30140 ;;		___fladd
 30141 ;;		___flmul
 30142 ;;		___flsub
 30143 ;; This function is called by:
 30144 ;;		_main
 30145 ;;		_convert_adc_data
 30146 ;;		_calc_model_data
 30147 ;; This function uses a reentrant model
 30148 ;;
 30149                           
 30150                           	psect	text123
 30151  018E5C                     __ptext123:
 30152                           	opt callstack 0
 30153  018E5C                     _lp_filter:
 30154                           	opt callstack 0
 30155                           
 30156                           ; BSR set to: 57
 30157                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30158  018E5C  52E6               	movf	postinc1,f,c
 30159  018E5E  52E6               	movf	postinc1,f,c
 30160  018E60  52E6               	movf	postinc1,f,c
 30161  018E62  52E6               	movf	postinc1,f,c
 30162                           
 30163                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 30164                           ;stkvar	_bn @ sp[(-4)+-5]
 30165                           
 30166                           ;incstack = 0
 30167  018E64  0EF7               	movlw	-9
 30168  018E66  006F FF8C  F001    	movff	plusw1,btemp
 30169  018E6C  0E14               	movlw	20
 30170  018E6E  6401               	cpfsgt	btemp^0,c
 30171  018E70  D011               	goto	l11303
 30172  018E72                     u10200:
 30173                           
 30174                           ;mbmc.c: 35:   return new;
 30175                           ;stkvar	_new @ sp[(-4)+-4]
 30176  018E72  0EF8               	movlw	-8
 30177  018E74  006F FF8C  F001    	movff	plusw1,btemp
 30178  018E7A  0EF9               	movlw	-7
 30179  018E7C  006F FF8C  F002    	movff	plusw1,btemp+1
 30180  018E82  0EFA               	movlw	-6
 30181  018E84  006F FF8C  F003    	movff	plusw1,btemp+2
 30182  018E8A  0EFB               	movlw	-5
 30183  018E8C  006F FF8C  F004    	movff	plusw1,btemp+3
 30184  018E92  D0BD               	goto	l1994
 30185  018E94                     l11303:
 30186                           
 30187                           ;mbmc.c: 37:  if (slow == (-1)) {
 30188                           ;stkvar	_slow @ sp[(-4)+-6]
 30189  018E94  0EF6               	movlw	-10
 30190  018E96  28E3               	incf	plusw1,w,c
 30191  018E98  A4D8               	btfss	status,2,c
 30192  018E9A  D012               	goto	l11311
 30193                           
 30194                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 30195                           ;stkvar	_bn @ sp[(-4)+-5]
 30196  018E9C  0EF7               	movlw	-9
 30197  018E9E  50E3               	movf	plusw1,w,c
 30198  018EA0  0D04               	mullw	4
 30199  018EA2  0E00               	movlw	low lp_filter@smooth
 30200  018EA4  24F3               	addwf	243,w,c
 30201  018EA6  6ED9               	movwf	fsr2l,c
 30202  018EA8  0E03               	movlw	high lp_filter@smooth
 30203  018EAA  20F4               	addwfc	prodh,w,c
 30204  018EAC  6EDA               	movwf	fsr2h,c
 30205  018EAE  0E00               	movlw	0
 30206  018EB0  6EDE               	movwf	postinc2,c
 30207  018EB2  0E00               	movlw	0
 30208  018EB4  6EDE               	movwf	postinc2,c
 30209  018EB6  0E00               	movlw	0
 30210  018EB8  6EDE               	movwf	postinc2,c
 30211  018EBA  0E00               	movlw	0
 30212  018EBC  6EDD               	movwf	postdec2,c
 30213  018EBE  D7D9               	goto	u10200
 30214  018EC0                     l11311:
 30215                           
 30216                           ;mbmc.c: 42:  if (slow) {
 30217                           ;stkvar	_slow @ sp[(-4)+-6]
 30218  018EC0  0EF6               	movlw	-10
 30219  018EC2  50E3               	movf	plusw1,w,c
 30220  018EC4  B4D8               	btfsc	status,2,c
 30221  018EC6  D006               	goto	l11315
 30222                           
 30223                           ;mbmc.c: 43:   lp_speed = 0.033;
 30224  018EC8  0E02               	movlw	2
 30225  018ECA  6E09               	movwf	(btemp+8)^0,c
 30226  018ECC  0E2B               	movlw	43
 30227  018ECE  6E0A               	movwf	(btemp+9)^0,c
 30228  018ED0  0E07               	movlw	7
 30229  018ED2  D005               	goto	L36
 30230  018ED4                     l11315:
 30231                           
 30232                           ;mbmc.c: 45:   lp_speed = 0.066;
 30233  018ED4  0E02               	movlw	2
 30234  018ED6  6E09               	movwf	(btemp+8)^0,c
 30235  018ED8  0E2B               	movlw	43
 30236  018EDA  6E0A               	movwf	(btemp+9)^0,c
 30237  018EDC  0E87               	movlw	135
 30238  018EDE                     L36:
 30239  018EDE  6E0B               	movwf	(btemp+10)^0,c
 30240  018EE0  0E3D               	movlw	61
 30241  018EE2  6E0C               	movwf	(btemp+11)^0,c
 30242                           
 30243                           ;stkvar	_lp_speed @ sp[(-4)+0]
 30244  018EE4  0EFC               	movlw	-4
 30245  018EE6  0060  F027  FFE3   	movff	btemp+8,plusw1
 30246  018EEC  0EFD               	movlw	-3
 30247  018EEE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30248  018EF4  0EFE               	movlw	-2
 30249  018EF6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30250  018EFC  0EFF               	movlw	-1
 30251  018EFE  0060  F033  FFE3   	movff	btemp+11,plusw1
 30252                           
 30253                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 30254                           ;stkvar	_bn @ sp[(-4)+-5]
 30255  018F04  0EF7               	movlw	-9
 30256  018F06  50E3               	movf	plusw1,w,c
 30257  018F08  0D04               	mullw	4
 30258  018F0A  0E00               	movlw	low lp_filter@smooth
 30259  018F0C  24F3               	addwf	243,w,c
 30260  018F0E  6ED9               	movwf	fsr2l,c
 30261  018F10  0E03               	movlw	high lp_filter@smooth
 30262  018F12  20F4               	addwfc	prodh,w,c
 30263  018F14  6EDA               	movwf	fsr2h,c
 30264  018F16  006F FF7B FFE6     	movff	postinc2,postinc1
 30265  018F1C  006F FF7B FFE6     	movff	postinc2,postinc1
 30266  018F22  006F FF7B FFE6     	movff	postinc2,postinc1
 30267  018F28  006F FF7B FFE6     	movff	postinc2,postinc1
 30268                           
 30269                           ;stkvar	_lp_speed @ sp[(-8)+0]
 30270  018F2E  0EF8               	movlw	-8
 30271  018F30  006F FF8F FFE6     	movff	plusw1,postinc1
 30272  018F36  006F FF8F FFE6     	movff	plusw1,postinc1
 30273  018F3C  006F FF8F FFE6     	movff	plusw1,postinc1
 30274  018F42  006F FF8F FFE6     	movff	plusw1,postinc1
 30275                           
 30276                           ;stkvar	_bn @ sp[(-12)+-5]
 30277  018F48  0EEF               	movlw	-17
 30278  018F4A  50E3               	movf	plusw1,w,c
 30279  018F4C  0D04               	mullw	4
 30280  018F4E  0E00               	movlw	low lp_filter@smooth
 30281  018F50  24F3               	addwf	243,w,c
 30282  018F52  6ED9               	movwf	fsr2l,c
 30283  018F54  0E03               	movlw	high lp_filter@smooth
 30284  018F56  20F4               	addwfc	prodh,w,c
 30285  018F58  6EDA               	movwf	fsr2h,c
 30286  018F5A  006F FF7B FFE6     	movff	postinc2,postinc1
 30287  018F60  006F FF7B FFE6     	movff	postinc2,postinc1
 30288  018F66  006F FF7B FFE6     	movff	postinc2,postinc1
 30289  018F6C  006F FF7B FFE6     	movff	postinc2,postinc1
 30290                           
 30291                           ;stkvar	_new @ sp[(-16)+-4]
 30292  018F72  0EEC               	movlw	-20
 30293  018F74  006F FF8F FFE6     	movff	plusw1,postinc1
 30294  018F7A  006F FF8F FFE6     	movff	plusw1,postinc1
 30295  018F80  006F FF8F FFE6     	movff	plusw1,postinc1
 30296  018F86  006F FF8F FFE6     	movff	plusw1,postinc1
 30297  018F8C  EC94  F0E3         	call	___flsub	;wreg free
 30298  018F90  0060  F007  FFE6   	movff	btemp,postinc1
 30299  018F96  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30300  018F9C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30301  018FA2  0060  F013  FFE6   	movff	btemp+3,postinc1
 30302  018FA8  EC6E  F09F         	call	___flmul	;wreg free
 30303  018FAC  0060  F007  FFE6   	movff	btemp,postinc1
 30304  018FB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30305  018FB8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30306  018FBE  0060  F013  FFE6   	movff	btemp+3,postinc1
 30307  018FC4  EC83  F0A3         	call	___fladd	;wreg free
 30308                           
 30309                           ;stkvar	_bn @ sp[(-4)+-5]
 30310  018FC8  0EF7               	movlw	-9
 30311  018FCA  50E3               	movf	plusw1,w,c
 30312  018FCC  0D04               	mullw	4
 30313  018FCE  0E00               	movlw	low lp_filter@smooth
 30314  018FD0  24F3               	addwf	243,w,c
 30315  018FD2  6ED9               	movwf	fsr2l,c
 30316  018FD4  0E03               	movlw	high lp_filter@smooth
 30317  018FD6  20F4               	addwfc	prodh,w,c
 30318  018FD8  6EDA               	movwf	fsr2h,c
 30319  018FDA  0060  F007  FFDE   	movff	btemp,postinc2
 30320  018FE0  0060  F00B  FFDE   	movff	btemp+1,postinc2
 30321  018FE6  0060  F00F  FFDE   	movff	btemp+2,postinc2
 30322  018FEC  0060  F013  FFDD   	movff	btemp+3,postdec2
 30323  018FF2  52DD               	movf	postdec2,f,c
 30324  018FF4  52DD               	movf	postdec2,f,c
 30325  018FF6  006F FF78  F001    	movff	postinc2,btemp
 30326  018FFC  006F FF78  F002    	movff	postinc2,btemp+1
 30327  019002  006F FF78  F003    	movff	postinc2,btemp+2
 30328  019008  006F FF78  F004    	movff	postinc2,btemp+3
 30329  01900E                     l1994:
 30330                           
 30331                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 30332  01900E  0EF6               	movlw	246
 30333  019010  26E1               	addwf	fsr1l,f,c
 30334  019012  0EFF               	movlw	255
 30335  019014  22E2               	addwfc	fsr1h,f,c
 30336  019016  0012               	return		;funcret
 30337  019018                     __end_of_lp_filter:
 30338                           	opt callstack 0
 30339                           
 30340 ;; *************** function ___flsub *****************
 30341 ;; Defined at:
 30342 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 30343 ;; Parameters:    Size  Location     Type
 30344 ;;  b               4  [STACK] float 
 30345 ;;  a               4  [STACK] float 
 30346 ;; Auto vars:     Size  Location     Type
 30347 ;;		None
 30348 ;; Return value:  Size  Location     Type
 30349 ;;                  4  [STACK] float 
 30350 ;; Registers used:
 30351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 30352 ;; Tracked objects:
 30353 ;;		On entry : 0/0
 30354 ;;		On exit  : 0/0
 30355 ;;		Unchanged: 0/0
 30356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30361 ;;Total ram usage:        0 bytes
 30362 ;; Hardware stack levels used:    1
 30363 ;; Hardware stack levels required when called:   16
 30364 ;; This function calls:
 30365 ;;		___fladd
 30366 ;; This function is called by:
 30367 ;;		_conv_raw_result
 30368 ;;		_lp_filter
 30369 ;;		_calc_model_data
 30370 ;;		_calc_ror_data
 30371 ;;		_esr_check
 30372 ;;		_efgtoa
 30373 ;; This function uses a reentrant model
 30374 ;;
 30375                           
 30376                           	psect	text124
 30377  01C728                     __ptext124:
 30378                           	opt callstack 0
 30379  01C728                     ___flsub:
 30380                           	opt callstack 0
 30381                           
 30382                           ;stkvar	_a @ sp[(0)+-8]
 30383                           
 30384                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30385                           ;incstack = 0
 30386 ;; hardware stack exceeded
 30387  01C728  0EFB               	movlw	-5
 30388  01C72A  7EE3               	btg	plusw1,7,c
 30389                           
 30390                           ;stkvar	_a @ sp[(0)+-8]
 30391  01C72C  0EF8               	movlw	-8
 30392  01C72E  006F FF8F FFE6     	movff	plusw1,postinc1
 30393  01C734  006F FF8F FFE6     	movff	plusw1,postinc1
 30394  01C73A  006F FF8F FFE6     	movff	plusw1,postinc1
 30395  01C740  006F FF8F FFE6     	movff	plusw1,postinc1
 30396                           
 30397                           ;stkvar	_b @ sp[(-4)+-4]
 30398  01C746  0EF8               	movlw	-8
 30399  01C748  006F FF8F FFE6     	movff	plusw1,postinc1
 30400  01C74E  006F FF8F FFE6     	movff	plusw1,postinc1
 30401  01C754  006F FF8F FFE6     	movff	plusw1,postinc1
 30402  01C75A  006F FF8F FFE6     	movff	plusw1,postinc1
 30403  01C760  EC83  F0A3         	call	___fladd	;wreg free
 30404                           
 30405                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 30406  01C764  0EF8               	movlw	248
 30407  01C766  26E1               	addwf	fsr1l,f,c
 30408  01C768  0EFF               	movlw	255
 30409  01C76A  22E2               	addwfc	fsr1h,f,c
 30410  01C76C  0012               	return		;funcret
 30411  01C76E                     __end_of___flsub:
 30412                           	opt callstack 0
 30413                           
 30414 ;; *************** function ___fladd *****************
 30415 ;; Defined at:
 30416 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 30417 ;; Parameters:    Size  Location     Type
 30418 ;;  b               4  [STACK] float 
 30419 ;;  a               4  [STACK] float 
 30420 ;; Auto vars:     Size  Location     Type
 30421 ;;  grs             1  [STACK] unsigned char 
 30422 ;;  bexp            1  [STACK] unsigned char 
 30423 ;;  aexp            1  [STACK] unsigned char 
 30424 ;;  signs           1  [STACK] unsigned char 
 30425 ;; Return value:  Size  Location     Type
 30426 ;;                  4  [STACK] unsigned char 
 30427 ;; Registers used:
 30428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 30429 ;; Tracked objects:
 30430 ;;		On entry : 0/0
 30431 ;;		On exit  : 0/0
 30432 ;;		Unchanged: 0/0
 30433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30438 ;;Total ram usage:        0 bytes
 30439 ;; Hardware stack levels used:    1
 30440 ;; Hardware stack levels required when called:   15
 30441 ;; This function calls:
 30442 ;;		Nothing
 30443 ;; This function is called by:
 30444 ;;		_main
 30445 ;;		_lp_filter
 30446 ;;		_calc_model_data
 30447 ;;		_efgtoa
 30448 ;;		___asfladd
 30449 ;;		___flsub
 30450 ;; This function uses a reentrant model
 30451 ;;
 30452                           
 30453                           	psect	text125
 30454  014706                     __ptext125:
 30455                           	opt callstack 0
 30456  014706                     ___fladd:
 30457                           	opt callstack 0
 30458                           
 30459                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30460  014706  52E6               	movf	postinc1,f,c
 30461  014708  52E6               	movf	postinc1,f,c
 30462  01470A  52E6               	movf	postinc1,f,c
 30463  01470C  52E6               	movf	postinc1,f,c
 30464                           
 30465                           ;stkvar	_b @ sp[(-4)+-4]
 30466                           
 30467                           ;incstack = 0
 30468 ;; hardware stack exceeded
 30469  01470E  0EFB               	movlw	251
 30470  014710  24E1               	addwf	fsr1l,w,c
 30471  014712  6ED9               	movwf	fsr2l,c
 30472  014714  0EFF               	movlw	255
 30473  014716  20E2               	addwfc	fsr1h,w,c
 30474  014718  6EDA               	movwf	fsr2h,c
 30475  01471A  50DF               	movf	indf2,w,c
 30476  01471C  6E0C               	movwf	(btemp+11)^0,c
 30477  01471E  0E80               	movlw	128
 30478  014720  160C               	andwf	(btemp+11)^0,f,c
 30479                           
 30480                           ;stkvar	_signs @ sp[(-4)+3]
 30481  014722  0EFF               	movlw	-1
 30482  014724  0060  F033  FFE3   	movff	btemp+11,plusw1
 30483                           
 30484                           ;stkvar	_b @ sp[(-4)+-4]
 30485  01472A  0EFB               	movlw	251
 30486  01472C  24E1               	addwf	fsr1l,w,c
 30487  01472E  6ED9               	movwf	fsr2l,c
 30488  014730  0EFF               	movlw	255
 30489  014732  20E2               	addwfc	fsr1h,w,c
 30490  014734  6EDA               	movwf	fsr2h,c
 30491  014736  50DF               	movf	indf2,w,c
 30492  014738  6E0C               	movwf	(btemp+11)^0,c
 30493  01473A  90D8               	bcf	status,0,c
 30494  01473C  340C               	rlcf	(btemp+11)^0,w,c
 30495  01473E  6E0B               	movwf	(btemp+10)^0,c
 30496                           
 30497                           ;stkvar	_bexp @ sp[(-4)+1]
 30498  014740  0EFD               	movlw	-3
 30499  014742  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30500                           
 30501                           ;stkvar	_b @ sp[(-4)+-4]
 30502  014748  0EFA               	movlw	250
 30503  01474A  24E1               	addwf	fsr1l,w,c
 30504  01474C  6ED9               	movwf	fsr2l,c
 30505  01474E  0EFF               	movlw	255
 30506  014750  20E2               	addwfc	fsr1h,w,c
 30507  014752  6EDA               	movwf	fsr2h,c
 30508  014754  AEDF               	btfss	indf2,7,c
 30509  014756  D002               	goto	l8441
 30510                           
 30511                           ;stkvar	_bexp @ sp[(-4)+1]
 30512  014758  0EFD               	movlw	-3
 30513  01475A  80E3               	bsf	plusw1,0,c
 30514  01475C                     l8441:
 30515                           
 30516                           ;stkvar	_bexp @ sp[(-4)+1]
 30517  01475C  0EFD               	movlw	-3
 30518  01475E  50E3               	movf	plusw1,w,c
 30519  014760  B4D8               	btfsc	status,2,c
 30520  014762  D027               	goto	l8451
 30521                           
 30522                           ;stkvar	_bexp @ sp[(-4)+1]
 30523  014764  0EFD               	movlw	-3
 30524  014766  28E3               	incf	plusw1,w,c
 30525  014768  A4D8               	btfss	status,2,c
 30526  01476A  D018               	goto	l8447
 30527  01476C  0E00               	movlw	0
 30528  01476E  6E09               	movwf	(btemp+8)^0,c
 30529  014770  0E00               	movlw	0
 30530  014772  6E0A               	movwf	(btemp+9)^0,c
 30531  014774  0E00               	movlw	0
 30532  014776  6E0B               	movwf	(btemp+10)^0,c
 30533  014778  0E00               	movlw	0
 30534  01477A  6E0C               	movwf	(btemp+11)^0,c
 30535                           
 30536                           ;stkvar	_b @ sp[(-4)+-4]
 30537  01477C  0EF8               	movlw	-8
 30538  01477E  0060  F027  FFE3   	movff	btemp+8,plusw1
 30539  014784  0EF9               	movlw	-7
 30540  014786  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30541  01478C  0EFA               	movlw	-6
 30542  01478E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30543  014794  0EFB               	movlw	-5
 30544  014796  0060  F033  FFE3   	movff	btemp+11,plusw1
 30545  01479C                     l8447:
 30546                           
 30547                           ;stkvar	_b @ sp[(-4)+-4]
 30548  01479C  0EFA               	movlw	-6
 30549  01479E  8EE3               	bsf	plusw1,7,c
 30550                           
 30551                           ;stkvar	_b @ sp[(-4)+-4]
 30552  0147A0  0EFB               	movlw	251
 30553  0147A2  24E1               	addwf	fsr1l,w,c
 30554  0147A4  6ED9               	movwf	fsr2l,c
 30555  0147A6  0EFF               	movlw	255
 30556  0147A8  20E2               	addwfc	fsr1h,w,c
 30557  0147AA  6EDA               	movwf	fsr2h,c
 30558  0147AC  0E00               	movlw	0
 30559  0147AE  6EDF               	movwf	indf2,c
 30560  0147B0  D018               	goto	l8453
 30561  0147B2                     l8451:
 30562  0147B2  0E00               	movlw	0
 30563  0147B4  6E09               	movwf	(btemp+8)^0,c
 30564  0147B6  0E00               	movlw	0
 30565  0147B8  6E0A               	movwf	(btemp+9)^0,c
 30566  0147BA  0E00               	movlw	0
 30567  0147BC  6E0B               	movwf	(btemp+10)^0,c
 30568  0147BE  0E00               	movlw	0
 30569  0147C0  6E0C               	movwf	(btemp+11)^0,c
 30570                           
 30571                           ;stkvar	_b @ sp[(-4)+-4]
 30572  0147C2  0EF8               	movlw	-8
 30573  0147C4  0060  F027  FFE3   	movff	btemp+8,plusw1
 30574  0147CA  0EF9               	movlw	-7
 30575  0147CC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30576  0147D2  0EFA               	movlw	-6
 30577  0147D4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30578  0147DA  0EFB               	movlw	-5
 30579  0147DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 30580  0147E2                     l8453:
 30581                           
 30582                           ;stkvar	_a @ sp[(-4)+-8]
 30583  0147E2  0EF7               	movlw	247
 30584  0147E4  24E1               	addwf	fsr1l,w,c
 30585  0147E6  6ED9               	movwf	fsr2l,c
 30586  0147E8  0EFF               	movlw	255
 30587  0147EA  20E2               	addwfc	fsr1h,w,c
 30588  0147EC  6EDA               	movwf	fsr2h,c
 30589  0147EE  50DF               	movf	indf2,w,c
 30590  0147F0  6E0C               	movwf	(btemp+11)^0,c
 30591  0147F2  0E80               	movlw	128
 30592  0147F4  160C               	andwf	(btemp+11)^0,f,c
 30593                           
 30594                           ;stkvar	_aexp @ sp[(-4)+2]
 30595  0147F6  0EFE               	movlw	-2
 30596  0147F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 30597                           
 30598                           ;stkvar	_signs @ sp[(-4)+3]
 30599                           ;stkvar	_aexp @ sp[(-4)+2]
 30600  0147FE  50E1               	movf	fsr1l,w,c
 30601  014800  0FFE               	addlw	-2
 30602  014802  6ED9               	movwf	fsr2l,c
 30603  014804  50E2               	movf	fsr1h,w,c
 30604  014806  6EDA               	movwf	fsr2h,c
 30605  014808  0EFF               	movlw	255
 30606  01480A  22DA               	addwfc	fsr2h,f,c
 30607  01480C  0EFF               	movlw	-1
 30608  01480E  50E3               	movf	plusw1,w,c
 30609  014810  18DE               	xorwf	postinc2,w,c
 30610  014812  B4D8               	btfsc	status,2,c
 30611  014814  D002               	goto	l8459
 30612                           
 30613                           ;stkvar	_signs @ sp[(-4)+3]
 30614  014816  0EFF               	movlw	-1
 30615  014818  8CE3               	bsf	plusw1,6,c
 30616  01481A                     l8459:
 30617                           
 30618                           ;stkvar	_a @ sp[(-4)+-8]
 30619  01481A  0EF7               	movlw	247
 30620  01481C  24E1               	addwf	fsr1l,w,c
 30621  01481E  6ED9               	movwf	fsr2l,c
 30622  014820  0EFF               	movlw	255
 30623  014822  20E2               	addwfc	fsr1h,w,c
 30624  014824  6EDA               	movwf	fsr2h,c
 30625  014826  50DF               	movf	indf2,w,c
 30626  014828  6E0C               	movwf	(btemp+11)^0,c
 30627  01482A  90D8               	bcf	status,0,c
 30628  01482C  340C               	rlcf	(btemp+11)^0,w,c
 30629  01482E  6E0B               	movwf	(btemp+10)^0,c
 30630                           
 30631                           ;stkvar	_aexp @ sp[(-4)+2]
 30632  014830  0EFE               	movlw	-2
 30633  014832  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30634                           
 30635                           ;stkvar	_a @ sp[(-4)+-8]
 30636  014838  0EF6               	movlw	246
 30637  01483A  24E1               	addwf	fsr1l,w,c
 30638  01483C  6ED9               	movwf	fsr2l,c
 30639  01483E  0EFF               	movlw	255
 30640  014840  20E2               	addwfc	fsr1h,w,c
 30641  014842  6EDA               	movwf	fsr2h,c
 30642  014844  AEDF               	btfss	indf2,7,c
 30643  014846  D002               	goto	l8465
 30644                           
 30645                           ;stkvar	_aexp @ sp[(-4)+2]
 30646  014848  0EFE               	movlw	-2
 30647  01484A  80E3               	bsf	plusw1,0,c
 30648  01484C                     l8465:
 30649                           
 30650                           ;stkvar	_aexp @ sp[(-4)+2]
 30651  01484C  0EFE               	movlw	-2
 30652  01484E  50E3               	movf	plusw1,w,c
 30653  014850  B4D8               	btfsc	status,2,c
 30654  014852  D027               	goto	l8475
 30655                           
 30656                           ;stkvar	_aexp @ sp[(-4)+2]
 30657  014854  0EFE               	movlw	-2
 30658  014856  28E3               	incf	plusw1,w,c
 30659  014858  A4D8               	btfss	status,2,c
 30660  01485A  D018               	goto	l8471
 30661  01485C  0E00               	movlw	0
 30662  01485E  6E09               	movwf	(btemp+8)^0,c
 30663  014860  0E00               	movlw	0
 30664  014862  6E0A               	movwf	(btemp+9)^0,c
 30665  014864  0E00               	movlw	0
 30666  014866  6E0B               	movwf	(btemp+10)^0,c
 30667  014868  0E00               	movlw	0
 30668  01486A  6E0C               	movwf	(btemp+11)^0,c
 30669                           
 30670                           ;stkvar	_a @ sp[(-4)+-8]
 30671  01486C  0EF4               	movlw	-12
 30672  01486E  0060  F027  FFE3   	movff	btemp+8,plusw1
 30673  014874  0EF5               	movlw	-11
 30674  014876  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30675  01487C  0EF6               	movlw	-10
 30676  01487E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30677  014884  0EF7               	movlw	-9
 30678  014886  0060  F033  FFE3   	movff	btemp+11,plusw1
 30679  01488C                     l8471:
 30680                           
 30681                           ;stkvar	_a @ sp[(-4)+-8]
 30682  01488C  0EF6               	movlw	-10
 30683  01488E  8EE3               	bsf	plusw1,7,c
 30684                           
 30685                           ;stkvar	_a @ sp[(-4)+-8]
 30686  014890  0EF7               	movlw	247
 30687  014892  24E1               	addwf	fsr1l,w,c
 30688  014894  6ED9               	movwf	fsr2l,c
 30689  014896  0EFF               	movlw	255
 30690  014898  20E2               	addwfc	fsr1h,w,c
 30691  01489A  6EDA               	movwf	fsr2h,c
 30692  01489C  0E00               	movlw	0
 30693  01489E  6EDF               	movwf	indf2,c
 30694  0148A0  D018               	goto	l8477
 30695  0148A2                     l8475:
 30696  0148A2  0E00               	movlw	0
 30697  0148A4  6E09               	movwf	(btemp+8)^0,c
 30698  0148A6  0E00               	movlw	0
 30699  0148A8  6E0A               	movwf	(btemp+9)^0,c
 30700  0148AA  0E00               	movlw	0
 30701  0148AC  6E0B               	movwf	(btemp+10)^0,c
 30702  0148AE  0E00               	movlw	0
 30703  0148B0  6E0C               	movwf	(btemp+11)^0,c
 30704                           
 30705                           ;stkvar	_a @ sp[(-4)+-8]
 30706  0148B2  0EF4               	movlw	-12
 30707  0148B4  0060  F027  FFE3   	movff	btemp+8,plusw1
 30708  0148BA  0EF5               	movlw	-11
 30709  0148BC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30710  0148C2  0EF6               	movlw	-10
 30711  0148C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30712  0148CA  0EF7               	movlw	-9
 30713  0148CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 30714  0148D2                     l8477:
 30715                           
 30716                           ;stkvar	_bexp @ sp[(-4)+1]
 30717                           ;stkvar	_aexp @ sp[(-4)+2]
 30718  0148D2  50E1               	movf	fsr1l,w,c
 30719  0148D4  0FFE               	addlw	-2
 30720  0148D6  6ED9               	movwf	fsr2l,c
 30721  0148D8  50E2               	movf	fsr1h,w,c
 30722  0148DA  6EDA               	movwf	fsr2h,c
 30723  0148DC  0EFF               	movlw	255
 30724  0148DE  22DA               	addwfc	fsr2h,f,c
 30725  0148E0  0EFD               	movlw	-3
 30726  0148E2  50E3               	movf	plusw1,w,c
 30727  0148E4  5CDE               	subwf	postinc2,w,c
 30728  0148E6  B0D8               	btfsc	status,0,c
 30729  0148E8  D0A4               	goto	l8513
 30730                           
 30731                           ;stkvar	_signs @ sp[(-4)+3]
 30732  0148EA  0EFF               	movlw	-1
 30733  0148EC  ACE3               	btfss	plusw1,6,c
 30734  0148EE  D002               	goto	l8483
 30735                           
 30736                           ;stkvar	_signs @ sp[(-4)+3]
 30737  0148F0  0EFF               	movlw	-1
 30738  0148F2  7EE3               	btg	plusw1,7,c
 30739  0148F4                     l8483:
 30740                           
 30741                           ;stkvar	_bexp @ sp[(-4)+1]
 30742                           ;stkvar	_grs @ sp[(-4)+0]
 30743  0148F4  0EFD               	movlw	-3
 30744  0148F6  006F FF8C  F001    	movff	plusw1,btemp
 30745  0148FC  0EFC               	movlw	-4
 30746  0148FE  0060  F007  FFE3   	movff	btemp,plusw1
 30747                           
 30748                           ;stkvar	_aexp @ sp[(-4)+2]
 30749                           ;stkvar	_bexp @ sp[(-4)+1]
 30750  014904  0EFE               	movlw	-2
 30751  014906  006F FF8C  F001    	movff	plusw1,btemp
 30752  01490C  0EFD               	movlw	-3
 30753  01490E  0060  F007  FFE3   	movff	btemp,plusw1
 30754                           
 30755                           ;stkvar	_grs @ sp[(-4)+0]
 30756                           ;stkvar	_aexp @ sp[(-4)+2]
 30757  014914  0EFC               	movlw	-4
 30758  014916  006F FF8C  F001    	movff	plusw1,btemp
 30759  01491C  0EFE               	movlw	-2
 30760  01491E  0060  F007  FFE3   	movff	btemp,plusw1
 30761                           
 30762                           ;stkvar	_b @ sp[(-4)+-4]
 30763                           ;stkvar	_grs @ sp[(-4)+0]
 30764  014924  0EF8               	movlw	-8
 30765  014926  006F FF8C  F001    	movff	plusw1,btemp
 30766  01492C  0EFC               	movlw	-4
 30767  01492E  0060  F007  FFE3   	movff	btemp,plusw1
 30768                           
 30769                           ;stkvar	_a @ sp[(-4)+-8]
 30770                           ;stkvar	_b @ sp[(-4)+-4]
 30771  014934  0EF4               	movlw	-12
 30772  014936  006F FF8C  F001    	movff	plusw1,btemp
 30773  01493C  0EF8               	movlw	-8
 30774  01493E  0060  F007  FFE3   	movff	btemp,plusw1
 30775                           
 30776                           ;stkvar	_grs @ sp[(-4)+0]
 30777                           ;stkvar	_a @ sp[(-4)+-8]
 30778  014944  0EFC               	movlw	-4
 30779  014946  006F FF8C  F001    	movff	plusw1,btemp
 30780  01494C  0EF4               	movlw	-12
 30781  01494E  0060  F007  FFE3   	movff	btemp,plusw1
 30782                           
 30783                           ;stkvar	_b @ sp[(-4)+-4]
 30784  014954  0EF9               	movlw	249
 30785  014956  24E1               	addwf	fsr1l,w,c
 30786  014958  6ED9               	movwf	fsr2l,c
 30787  01495A  0EFF               	movlw	255
 30788  01495C  20E2               	addwfc	fsr1h,w,c
 30789  01495E  6EDA               	movwf	fsr2h,c
 30790  014960  50DF               	movf	indf2,w,c
 30791  014962  6E0C               	movwf	(btemp+11)^0,c
 30792                           
 30793                           ;stkvar	_grs @ sp[(-4)+0]
 30794  014964  0EFC               	movlw	-4
 30795  014966  0060  F033  FFE3   	movff	btemp+11,plusw1
 30796                           
 30797                           ;stkvar	_a @ sp[(-4)+-8]
 30798  01496C  0EF5               	movlw	245
 30799  01496E  24E1               	addwf	fsr1l,w,c
 30800  014970  6ED9               	movwf	fsr2l,c
 30801  014972  0EFF               	movlw	255
 30802  014974  20E2               	addwfc	fsr1h,w,c
 30803  014976  6EDA               	movwf	fsr2h,c
 30804                           
 30805                           ;stkvar	_b @ sp[(-4)+-4]
 30806  014978  0EF9               	movlw	249
 30807  01497A  24E1               	addwf	fsr1l,w,c
 30808  01497C  6EE9               	movwf	fsr0l,c
 30809  01497E  0EFF               	movlw	255
 30810  014980  20E2               	addwfc	fsr1h,w,c
 30811  014982  6EEA               	movwf	fsr0h,c
 30812  014984  006F FF7F FFEF     	movff	indf2,indf0
 30813                           
 30814                           ;stkvar	_grs @ sp[(-4)+0]
 30815                           ;stkvar	_a @ sp[(-4)+-8]
 30816  01498A  0EF5               	movlw	245
 30817  01498C  24E1               	addwf	fsr1l,w,c
 30818  01498E  6ED9               	movwf	fsr2l,c
 30819  014990  0EFF               	movlw	255
 30820  014992  20E2               	addwfc	fsr1h,w,c
 30821  014994  6EDA               	movwf	fsr2h,c
 30822  014996  0EFC               	movlw	-4
 30823  014998  006F FF8F FFDF     	movff	plusw1,indf2
 30824                           
 30825                           ;stkvar	_b @ sp[(-4)+-4]
 30826  01499E  0EFA               	movlw	250
 30827  0149A0  24E1               	addwf	fsr1l,w,c
 30828  0149A2  6ED9               	movwf	fsr2l,c
 30829  0149A4  0EFF               	movlw	255
 30830  0149A6  20E2               	addwfc	fsr1h,w,c
 30831  0149A8  6EDA               	movwf	fsr2h,c
 30832  0149AA  50DF               	movf	indf2,w,c
 30833  0149AC  6E0C               	movwf	(btemp+11)^0,c
 30834                           
 30835                           ;stkvar	_grs @ sp[(-4)+0]
 30836  0149AE  0EFC               	movlw	-4
 30837  0149B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 30838                           
 30839                           ;stkvar	_a @ sp[(-4)+-8]
 30840  0149B6  0EF6               	movlw	246
 30841  0149B8  24E1               	addwf	fsr1l,w,c
 30842  0149BA  6ED9               	movwf	fsr2l,c
 30843  0149BC  0EFF               	movlw	255
 30844  0149BE  20E2               	addwfc	fsr1h,w,c
 30845  0149C0  6EDA               	movwf	fsr2h,c
 30846                           
 30847                           ;stkvar	_b @ sp[(-4)+-4]
 30848  0149C2  0EFA               	movlw	250
 30849  0149C4  24E1               	addwf	fsr1l,w,c
 30850  0149C6  6EE9               	movwf	fsr0l,c
 30851  0149C8  0EFF               	movlw	255
 30852  0149CA  20E2               	addwfc	fsr1h,w,c
 30853  0149CC  6EEA               	movwf	fsr0h,c
 30854  0149CE  006F FF7F FFEF     	movff	indf2,indf0
 30855                           
 30856                           ;stkvar	_grs @ sp[(-4)+0]
 30857                           ;stkvar	_a @ sp[(-4)+-8]
 30858  0149D4  0EF6               	movlw	246
 30859  0149D6  24E1               	addwf	fsr1l,w,c
 30860  0149D8  6ED9               	movwf	fsr2l,c
 30861  0149DA  0EFF               	movlw	255
 30862  0149DC  20E2               	addwfc	fsr1h,w,c
 30863  0149DE  6EDA               	movwf	fsr2h,c
 30864  0149E0  0EFC               	movlw	-4
 30865  0149E2  006F FF8F FFDF     	movff	plusw1,indf2
 30866                           
 30867                           ;stkvar	_b @ sp[(-4)+-4]
 30868  0149E8  0EFB               	movlw	251
 30869  0149EA  24E1               	addwf	fsr1l,w,c
 30870  0149EC  6ED9               	movwf	fsr2l,c
 30871  0149EE  0EFF               	movlw	255
 30872  0149F0  20E2               	addwfc	fsr1h,w,c
 30873  0149F2  6EDA               	movwf	fsr2h,c
 30874  0149F4  50DF               	movf	indf2,w,c
 30875  0149F6  6E0C               	movwf	(btemp+11)^0,c
 30876                           
 30877                           ;stkvar	_grs @ sp[(-4)+0]
 30878  0149F8  0EFC               	movlw	-4
 30879  0149FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 30880                           
 30881                           ;stkvar	_a @ sp[(-4)+-8]
 30882  014A00  0EF7               	movlw	247
 30883  014A02  24E1               	addwf	fsr1l,w,c
 30884  014A04  6ED9               	movwf	fsr2l,c
 30885  014A06  0EFF               	movlw	255
 30886  014A08  20E2               	addwfc	fsr1h,w,c
 30887  014A0A  6EDA               	movwf	fsr2h,c
 30888                           
 30889                           ;stkvar	_b @ sp[(-4)+-4]
 30890  014A0C  0EFB               	movlw	251
 30891  014A0E  24E1               	addwf	fsr1l,w,c
 30892  014A10  6EE9               	movwf	fsr0l,c
 30893  014A12  0EFF               	movlw	255
 30894  014A14  20E2               	addwfc	fsr1h,w,c
 30895  014A16  6EEA               	movwf	fsr0h,c
 30896  014A18  006F FF7F FFEF     	movff	indf2,indf0
 30897                           
 30898                           ;stkvar	_grs @ sp[(-4)+0]
 30899                           ;stkvar	_a @ sp[(-4)+-8]
 30900  014A1E  0EF7               	movlw	247
 30901  014A20  24E1               	addwf	fsr1l,w,c
 30902  014A22  6ED9               	movwf	fsr2l,c
 30903  014A24  0EFF               	movlw	255
 30904  014A26  20E2               	addwfc	fsr1h,w,c
 30905  014A28  6EDA               	movwf	fsr2h,c
 30906  014A2A  0EFC               	movlw	-4
 30907  014A2C  006F FF8F FFDF     	movff	plusw1,indf2
 30908  014A32                     l8513:
 30909                           
 30910                           ;stkvar	_grs @ sp[(-4)+0]
 30911  014A32  0EFC               	movlw	-4
 30912  014A34  6AE3               	clrf	plusw1,c
 30913                           
 30914                           ;stkvar	_aexp @ sp[(-4)+2]
 30915  014A36  0EFE               	movlw	-2
 30916  014A38  50E3               	movf	plusw1,w,c
 30917  014A3A  6E0B               	movwf	(btemp+10)^0,c
 30918  014A3C  6A0C               	clrf	(btemp+11)^0,c
 30919                           
 30920                           ;stkvar	_bexp @ sp[(-4)+1]
 30921  014A3E  0EFD               	movlw	-3
 30922  014A40  50E3               	movf	plusw1,w,c
 30923  014A42  5E0B               	subwf	(btemp+10)^0,f,c
 30924  014A44  0E00               	movlw	0
 30925  014A46  5A0C               	subwfb	(btemp+11)^0,f,c
 30926  014A48  BE0C               	btfsc	(btemp+11)^0,7,c
 30927  014A4A  D062               	goto	l8537
 30928  014A4C  500C               	movf	(btemp+11)^0,w,c
 30929  014A4E  E104               	bnz	u6020
 30930  014A50  0E1A               	movlw	26
 30931  014A52  5C0B               	subwf	(btemp+10)^0,w,c
 30932  014A54  A0D8               	btfss	status,0,c
 30933  014A56  D05C               	goto	l8537
 30934  014A58                     u6020:
 30935                           
 30936                           ;stkvar	_b @ sp[(-4)+-4]
 30937  014A58  0EF8               	movlw	-8
 30938  014A5A  50E3               	movf	plusw1,w,c
 30939  014A5C  E10A               	bnz	u6031
 30940  014A5E  0EF9               	movlw	-7
 30941  014A60  50E3               	movf	plusw1,w,c
 30942  014A62  E107               	bnz	u6031
 30943  014A64  0EFA               	movlw	-6
 30944  014A66  50E3               	movf	plusw1,w,c
 30945  014A68  E104               	bnz	u6031
 30946  014A6A  0EFB               	movlw	-5
 30947  014A6C  50E3               	movf	plusw1,w,c
 30948  014A6E  B4D8               	btfsc	status,2,c
 30949  014A70  D003               	goto	u6030
 30950  014A72                     u6031:
 30951  014A72  6A0C               	clrf	(btemp+11)^0,c
 30952  014A74  2A0C               	incf	(btemp+11)^0,f,c
 30953  014A76  D001               	goto	u6048
 30954  014A78                     u6030:
 30955  014A78  6A0C               	clrf	(btemp+11)^0,c
 30956  014A7A                     u6048:
 30957                           
 30958                           ;stkvar	_grs @ sp[(-4)+0]
 30959  014A7A  0EFC               	movlw	-4
 30960  014A7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 30961                           
 30962                           ;stkvar	_b @ sp[(-4)+-4]
 30963  014A82  0EF8               	movlw	-8
 30964  014A84  6AE3               	clrf	plusw1,c
 30965  014A86  0EF9               	movlw	-7
 30966  014A88  6AE3               	clrf	plusw1,c
 30967  014A8A  0EFA               	movlw	-6
 30968  014A8C  6AE3               	clrf	plusw1,c
 30969  014A8E  0EFB               	movlw	-5
 30970  014A90  6AE3               	clrf	plusw1,c
 30971                           
 30972                           ;stkvar	_aexp @ sp[(-4)+2]
 30973                           ;stkvar	_bexp @ sp[(-4)+1]
 30974  014A92  0EFE               	movlw	-2
 30975  014A94  006F FF8C  F001    	movff	plusw1,btemp
 30976  014A9A  0EFD               	movlw	-3
 30977  014A9C  0060  F007  FFE3   	movff	btemp,plusw1
 30978  014AA2  D042               	goto	u6080
 30979  014AA4                     l8523:
 30980                           
 30981                           ;stkvar	_grs @ sp[(-4)+0]
 30982  014AA4  0EFC               	movlw	-4
 30983  014AA6  A0E3               	btfss	plusw1,0,c
 30984  014AA8  D00D               	goto	l8527
 30985                           
 30986                           ;stkvar	_grs @ sp[(-4)+0]
 30987  014AAA  0EFC               	movlw	-4
 30988  014AAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 30989  014AB2  90D8               	bcf	status,0,c
 30990  014AB4  320C               	rrcf	(btemp+11)^0,f,c
 30991  014AB6  0E01               	movlw	1
 30992  014AB8  120C               	iorwf	(btemp+11)^0,f,c
 30993                           
 30994                           ;stkvar	_grs @ sp[(-4)+0]
 30995  014ABA  0EFC               	movlw	-4
 30996  014ABC  0060  F033  FFE3   	movff	btemp+11,plusw1
 30997  014AC2  D009               	goto	l8529
 30998  014AC4                     l8527:
 30999                           
 31000                           ;stkvar	_grs @ sp[(-4)+0]
 31001  014AC4  50E1               	movf	fsr1l,w,c
 31002  014AC6  0FFC               	addlw	-4
 31003  014AC8  6ED9               	movwf	fsr2l,c
 31004  014ACA  50E2               	movf	fsr1h,w,c
 31005  014ACC  6EDA               	movwf	fsr2h,c
 31006  014ACE  0EFF               	movlw	255
 31007  014AD0  22DA               	addwfc	fsr2h,f,c
 31008  014AD2  90D8               	bcf	status,0,c
 31009  014AD4  32DF               	rrcf	indf2,f,c
 31010  014AD6                     l8529:
 31011                           
 31012                           ;stkvar	_b @ sp[(-4)+-4]
 31013  014AD6  0EF8               	movlw	-8
 31014  014AD8  A0E3               	btfss	plusw1,0,c
 31015  014ADA  D002               	goto	l8533
 31016                           
 31017                           ;stkvar	_grs @ sp[(-4)+0]
 31018  014ADC  0EFC               	movlw	-4
 31019  014ADE  8EE3               	bsf	plusw1,7,c
 31020  014AE0                     l8533:
 31021  014AE0  0E01               	movlw	1
 31022  014AE2  6E0C               	movwf	(btemp+11)^0,c
 31023                           
 31024                           ;stkvar	_b @ sp[(-4)+-4]
 31025  014AE4  50E1               	movf	fsr1l,w,c
 31026  014AE6  0FF8               	addlw	-8
 31027  014AE8  6ED9               	movwf	fsr2l,c
 31028  014AEA  50E2               	movf	fsr1h,w,c
 31029  014AEC  6EDA               	movwf	fsr2h,c
 31030  014AEE  0EFF               	movlw	255
 31031  014AF0  22DA               	addwfc	fsr2h,f,c
 31032  014AF2  280C               	incf	(btemp+11)^0,w,c
 31033  014AF4  52DE               	movf	postinc2,f,c
 31034  014AF6  D008               	goto	u6070
 31035  014AF8                     u6075:
 31036  014AF8  52DE               	movf	postinc2,f,c
 31037  014AFA  90D8               	bcf	status,0,c
 31038  014AFC  BEDC               	btfsc	preinc2,7,c
 31039  014AFE  80D8               	bsf	status,0,c
 31040  014B00  32DD               	rrcf	postdec2,f,c
 31041  014B02  32DD               	rrcf	postdec2,f,c
 31042  014B04  32DD               	rrcf	postdec2,f,c
 31043  014B06  32DE               	rrcf	postinc2,f,c
 31044  014B08                     u6070:
 31045  014B08  2EE8               	decfsz	wreg,f,c
 31046  014B0A  D7F6               	goto	u6075
 31047                           
 31048                           ;stkvar	_bexp @ sp[(-4)+1]
 31049  014B0C  0EFD               	movlw	-3
 31050  014B0E  2AE3               	incf	plusw1,f,c
 31051  014B10                     l8537:
 31052                           
 31053                           ;stkvar	_aexp @ sp[(-4)+2]
 31054                           ;stkvar	_bexp @ sp[(-4)+1]
 31055  014B10  50E1               	movf	fsr1l,w,c
 31056  014B12  0FFD               	addlw	-3
 31057  014B14  6ED9               	movwf	fsr2l,c
 31058  014B16  50E2               	movf	fsr1h,w,c
 31059  014B18  6EDA               	movwf	fsr2h,c
 31060  014B1A  0EFF               	movlw	255
 31061  014B1C  22DA               	addwfc	fsr2h,f,c
 31062  014B1E  0EFE               	movlw	-2
 31063  014B20  50E3               	movf	plusw1,w,c
 31064  014B22  5CDE               	subwf	postinc2,w,c
 31065  014B24  A0D8               	btfss	status,0,c
 31066  014B26  D7BE               	goto	l8523
 31067  014B28                     u6080:
 31068                           
 31069                           ;stkvar	_signs @ sp[(-4)+3]
 31070  014B28  0EFF               	movlw	-1
 31071  014B2A  BCE3               	btfsc	plusw1,6,c
 31072  014B2C  D066               	goto	l8565
 31073                           
 31074                           ;stkvar	_bexp @ sp[(-4)+1]
 31075  014B2E  0EFD               	movlw	-3
 31076  014B30  50E3               	movf	plusw1,w,c
 31077  014B32  B4D8               	btfsc	status,2,c
 31078  014B34  D0F2               	goto	u6180
 31079                           
 31080                           ;stkvar	_a @ sp[(-4)+-8]
 31081                           ;stkvar	_b @ sp[(-4)+-4]
 31082  014B36  0EF8               	movlw	-8
 31083  014B38  50E3               	movf	plusw1,w,c
 31084  014B3A  6E01               	movwf	btemp^0,c
 31085  014B3C  0EF4               	movlw	-12
 31086  014B3E  50E3               	movf	plusw1,w,c
 31087  014B40  2601               	addwf	btemp^0,f,c
 31088  014B42  0EF8               	movlw	-8
 31089  014B44  0060  F007  FFE3   	movff	btemp,plusw1
 31090  014B4A  0EF9               	movlw	-7
 31091  014B4C  50E3               	movf	plusw1,w,c
 31092  014B4E  6E01               	movwf	btemp^0,c
 31093  014B50  0EF5               	movlw	-11
 31094  014B52  50E3               	movf	plusw1,w,c
 31095  014B54  2201               	addwfc	btemp^0,f,c
 31096  014B56  0EF9               	movlw	-7
 31097  014B58  0060  F007  FFE3   	movff	btemp,plusw1
 31098  014B5E  0EFA               	movlw	-6
 31099  014B60  50E3               	movf	plusw1,w,c
 31100  014B62  6E01               	movwf	btemp^0,c
 31101  014B64  0EF6               	movlw	-10
 31102  014B66  50E3               	movf	plusw1,w,c
 31103  014B68  2201               	addwfc	btemp^0,f,c
 31104  014B6A  0EFA               	movlw	-6
 31105  014B6C  0060  F007  FFE3   	movff	btemp,plusw1
 31106  014B72  0EFB               	movlw	-5
 31107  014B74  50E3               	movf	plusw1,w,c
 31108  014B76  6E01               	movwf	btemp^0,c
 31109  014B78  0EF7               	movlw	-9
 31110  014B7A  50E3               	movf	plusw1,w,c
 31111  014B7C  2201               	addwfc	btemp^0,f,c
 31112  014B7E  0EFB               	movlw	-5
 31113  014B80  0060  F007  FFE3   	movff	btemp,plusw1
 31114                           
 31115                           ;stkvar	_b @ sp[(-4)+-4]
 31116  014B86  0EFB               	movlw	-5
 31117  014B88  A0E3               	btfss	plusw1,0,c
 31118  014B8A  D101               	goto	u6220
 31119                           
 31120                           ;stkvar	_grs @ sp[(-4)+0]
 31121  014B8C  0EFC               	movlw	-4
 31122  014B8E  A0E3               	btfss	plusw1,0,c
 31123  014B90  D00D               	goto	l8555
 31124                           
 31125                           ;stkvar	_grs @ sp[(-4)+0]
 31126  014B92  0EFC               	movlw	-4
 31127  014B94  006F FF8C  F00C    	movff	plusw1,btemp+11
 31128  014B9A  90D8               	bcf	status,0,c
 31129  014B9C  320C               	rrcf	(btemp+11)^0,f,c
 31130  014B9E  0E01               	movlw	1
 31131  014BA0  120C               	iorwf	(btemp+11)^0,f,c
 31132                           
 31133                           ;stkvar	_grs @ sp[(-4)+0]
 31134  014BA2  0EFC               	movlw	-4
 31135  014BA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 31136  014BAA  D009               	goto	l8557
 31137  014BAC                     l8555:
 31138                           
 31139                           ;stkvar	_grs @ sp[(-4)+0]
 31140  014BAC  50E1               	movf	fsr1l,w,c
 31141  014BAE  0FFC               	addlw	-4
 31142  014BB0  6ED9               	movwf	fsr2l,c
 31143  014BB2  50E2               	movf	fsr1h,w,c
 31144  014BB4  6EDA               	movwf	fsr2h,c
 31145  014BB6  0EFF               	movlw	255
 31146  014BB8  22DA               	addwfc	fsr2h,f,c
 31147  014BBA  90D8               	bcf	status,0,c
 31148  014BBC  32DF               	rrcf	indf2,f,c
 31149  014BBE                     l8557:
 31150                           
 31151                           ;stkvar	_b @ sp[(-4)+-4]
 31152  014BBE  0EF8               	movlw	-8
 31153  014BC0  A0E3               	btfss	plusw1,0,c
 31154  014BC2  D002               	goto	l8561
 31155                           
 31156                           ;stkvar	_grs @ sp[(-4)+0]
 31157  014BC4  0EFC               	movlw	-4
 31158  014BC6  8EE3               	bsf	plusw1,7,c
 31159  014BC8                     l8561:
 31160  014BC8  0E01               	movlw	1
 31161  014BCA  6E0C               	movwf	(btemp+11)^0,c
 31162                           
 31163                           ;stkvar	_b @ sp[(-4)+-4]
 31164  014BCC  50E1               	movf	fsr1l,w,c
 31165  014BCE  0FF8               	addlw	-8
 31166  014BD0  6ED9               	movwf	fsr2l,c
 31167  014BD2  50E2               	movf	fsr1h,w,c
 31168  014BD4  6EDA               	movwf	fsr2h,c
 31169  014BD6  0EFF               	movlw	255
 31170  014BD8  22DA               	addwfc	fsr2h,f,c
 31171  014BDA  280C               	incf	(btemp+11)^0,w,c
 31172  014BDC  52DE               	movf	postinc2,f,c
 31173  014BDE  D008               	goto	u6140
 31174  014BE0                     u6145:
 31175  014BE0  52DE               	movf	postinc2,f,c
 31176  014BE2  90D8               	bcf	status,0,c
 31177  014BE4  BEDC               	btfsc	preinc2,7,c
 31178  014BE6  80D8               	bsf	status,0,c
 31179  014BE8  32DD               	rrcf	postdec2,f,c
 31180  014BEA  32DD               	rrcf	postdec2,f,c
 31181  014BEC  32DD               	rrcf	postdec2,f,c
 31182  014BEE  32DE               	rrcf	postinc2,f,c
 31183  014BF0                     u6140:
 31184  014BF0  2EE8               	decfsz	wreg,f,c
 31185  014BF2  D7F6               	goto	u6145
 31186                           
 31187                           ;stkvar	_bexp @ sp[(-4)+1]
 31188  014BF4  0EFD               	movlw	-3
 31189  014BF6  2AE3               	incf	plusw1,f,c
 31190  014BF8  D0CA               	goto	u6220
 31191  014BFA                     l8565:
 31192                           
 31193                           ;stkvar	_a @ sp[(-4)+-8]
 31194                           ;stkvar	_b @ sp[(-4)+-4]
 31195  014BFA  50E1               	movf	fsr1l,w,c
 31196  014BFC  0FF8               	addlw	-8
 31197  014BFE  6ED9               	movwf	fsr2l,c
 31198  014C00  50E2               	movf	fsr1h,w,c
 31199  014C02  6EDA               	movwf	fsr2h,c
 31200  014C04  0EFF               	movlw	255
 31201  014C06  22DA               	addwfc	fsr2h,f,c
 31202  014C08  0EF4               	movlw	-12
 31203  014C0A  50E3               	movf	plusw1,w,c
 31204  014C0C  5CDE               	subwf	postinc2,w,c
 31205  014C0E  0EF5               	movlw	-11
 31206  014C10  50E3               	movf	plusw1,w,c
 31207  014C12  58DE               	subwfb	postinc2,w,c
 31208  014C14  0EF6               	movlw	-10
 31209  014C16  50E3               	movf	plusw1,w,c
 31210  014C18  58DE               	subwfb	postinc2,w,c
 31211  014C1A  50DE               	movf	postinc2,w,c
 31212  014C1C  0A80               	xorlw	128
 31213  014C1E  6E01               	movwf	btemp^0,c
 31214  014C20  0EF7               	movlw	-9
 31215  014C22  50E3               	movf	plusw1,w,c
 31216  014C24  0A80               	xorlw	128
 31217  014C26  5801               	subwfb	btemp^0,w,c
 31218  014C28  B0D8               	btfsc	status,0,c
 31219  014C2A  D053               	goto	l8577
 31220                           
 31221                           ;stkvar	_b @ sp[(-4)+-4]
 31222                           ;stkvar	_a @ sp[(-4)+-8]
 31223  014C2C  0EF4               	movlw	-12
 31224  014C2E  006F FF8C  F009    	movff	plusw1,btemp+8
 31225  014C34  0EF5               	movlw	-11
 31226  014C36  006F FF8C  F00A    	movff	plusw1,btemp+9
 31227  014C3C  0EF6               	movlw	-10
 31228  014C3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 31229  014C44  0EF7               	movlw	-9
 31230  014C46  006F FF8C  F00C    	movff	plusw1,btemp+11
 31231  014C4C  0EF8               	movlw	-8
 31232  014C4E  50E3               	movf	plusw1,w,c
 31233  014C50  5E09               	subwf	(btemp+8)^0,f,c
 31234  014C52  0EF9               	movlw	-7
 31235  014C54  50E3               	movf	plusw1,w,c
 31236  014C56  5A0A               	subwfb	(btemp+9)^0,f,c
 31237  014C58  0EFA               	movlw	-6
 31238  014C5A  50E3               	movf	plusw1,w,c
 31239  014C5C  5A0B               	subwfb	(btemp+10)^0,f,c
 31240  014C5E  0EFB               	movlw	-5
 31241  014C60  50E3               	movf	plusw1,w,c
 31242  014C62  5A0C               	subwfb	(btemp+11)^0,f,c
 31243  014C64  0EFF               	movlw	255
 31244  014C66  2409               	addwf	(btemp+8)^0,w,c
 31245  014C68  6E05               	movwf	(btemp+4)^0,c
 31246  014C6A  0EFF               	movlw	255
 31247  014C6C  200A               	addwfc	(btemp+9)^0,w,c
 31248  014C6E  6E06               	movwf	(btemp+5)^0,c
 31249  014C70  0EFF               	movlw	255
 31250  014C72  200B               	addwfc	(btemp+10)^0,w,c
 31251  014C74  6E07               	movwf	(btemp+6)^0,c
 31252  014C76  0EFF               	movlw	255
 31253  014C78  200C               	addwfc	(btemp+11)^0,w,c
 31254  014C7A  6E08               	movwf	(btemp+7)^0,c
 31255                           
 31256                           ;stkvar	_b @ sp[(-4)+-4]
 31257  014C7C  0EF8               	movlw	-8
 31258  014C7E  0060  F017  FFE3   	movff	btemp+4,plusw1
 31259  014C84  0EF9               	movlw	-7
 31260  014C86  0060  F01B  FFE3   	movff	btemp+5,plusw1
 31261  014C8C  0EFA               	movlw	-6
 31262  014C8E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 31263  014C94  0EFB               	movlw	-5
 31264  014C96  0060  F023  FFE3   	movff	btemp+7,plusw1
 31265                           
 31266                           ;stkvar	_signs @ sp[(-4)+3]
 31267  014C9C  0EFF               	movlw	-1
 31268  014C9E  7EE3               	btg	plusw1,7,c
 31269                           
 31270                           ;stkvar	_grs @ sp[(-4)+0]
 31271  014CA0  0EFC               	movlw	-4
 31272  014CA2  50E3               	movf	plusw1,w,c
 31273  014CA4  0800               	sublw	0
 31274  014CA6  6E0C               	movwf	(btemp+11)^0,c
 31275                           
 31276                           ;stkvar	_grs @ sp[(-4)+0]
 31277  014CA8  0EFC               	movlw	-4
 31278  014CAA  0060  F033  FFE3   	movff	btemp+11,plusw1
 31279                           
 31280                           ;stkvar	_grs @ sp[(-4)+0]
 31281  014CB0  0EFC               	movlw	-4
 31282  014CB2  50E3               	movf	plusw1,w,c
 31283  014CB4  A4D8               	btfss	status,2,c
 31284  014CB6  D020               	goto	l8579
 31285                           
 31286                           ;stkvar	_b @ sp[(-4)+-4]
 31287  014CB8  50E1               	movf	fsr1l,w,c
 31288  014CBA  0FF8               	addlw	-8
 31289  014CBC  6ED9               	movwf	fsr2l,c
 31290  014CBE  50E2               	movf	fsr1h,w,c
 31291  014CC0  6EDA               	movwf	fsr2h,c
 31292  014CC2  0EFF               	movlw	255
 31293  014CC4  22DA               	addwfc	fsr2h,f,c
 31294  014CC6  2ADE               	incf	postinc2,f,c
 31295  014CC8  0E00               	movlw	0
 31296  014CCA  22DE               	addwfc	postinc2,f,c
 31297  014CCC  22DE               	addwfc	postinc2,f,c
 31298  014CCE  22DE               	addwfc	postinc2,f,c
 31299  014CD0  D013               	goto	l8579
 31300  014CD2                     l8577:
 31301                           
 31302                           ;stkvar	_a @ sp[(-4)+-8]
 31303                           ;stkvar	_b @ sp[(-4)+-4]
 31304  014CD2  50E1               	movf	fsr1l,w,c
 31305  014CD4  0FF8               	addlw	-8
 31306  014CD6  6ED9               	movwf	fsr2l,c
 31307  014CD8  50E2               	movf	fsr1h,w,c
 31308  014CDA  6EDA               	movwf	fsr2h,c
 31309  014CDC  0EFF               	movlw	255
 31310  014CDE  22DA               	addwfc	fsr2h,f,c
 31311  014CE0  0EF4               	movlw	-12
 31312  014CE2  50E3               	movf	plusw1,w,c
 31313  014CE4  5EDE               	subwf	postinc2,f,c
 31314  014CE6  0EF5               	movlw	-11
 31315  014CE8  50E3               	movf	plusw1,w,c
 31316  014CEA  5ADE               	subwfb	postinc2,f,c
 31317  014CEC  0EF6               	movlw	-10
 31318  014CEE  50E3               	movf	plusw1,w,c
 31319  014CF0  5ADE               	subwfb	postinc2,f,c
 31320  014CF2  0EF7               	movlw	-9
 31321  014CF4  50E3               	movf	plusw1,w,c
 31322  014CF6  5ADE               	subwfb	postinc2,f,c
 31323  014CF8                     l8579:
 31324                           
 31325                           ;stkvar	_b @ sp[(-4)+-4]
 31326  014CF8  0EF8               	movlw	-8
 31327  014CFA  50E3               	movf	plusw1,w,c
 31328  014CFC  E145               	bnz	l8601
 31329  014CFE  0EF9               	movlw	-7
 31330  014D00  50E3               	movf	plusw1,w,c
 31331  014D02  E142               	bnz	l8601
 31332  014D04  0EFA               	movlw	-6
 31333  014D06  50E3               	movf	plusw1,w,c
 31334  014D08  E13F               	bnz	l8601
 31335  014D0A  0EFB               	movlw	-5
 31336  014D0C  50E3               	movf	plusw1,w,c
 31337  014D0E  A4D8               	btfss	status,2,c
 31338  014D10  D03B               	goto	l8601
 31339                           
 31340                           ;stkvar	_grs @ sp[(-4)+0]
 31341  014D12  0EFC               	movlw	-4
 31342  014D14  50E3               	movf	plusw1,w,c
 31343  014D16  A4D8               	btfss	status,2,c
 31344  014D18  D037               	goto	l8601
 31345  014D1A                     u6180:
 31346  014D1A  0E00               	movlw	0
 31347  014D1C  6E01               	movwf	btemp^0,c
 31348  014D1E  0E00               	movlw	0
 31349  014D20  6E02               	movwf	(btemp+1)^0,c
 31350  014D22  0E00               	movlw	0
 31351  014D24  6E03               	movwf	(btemp+2)^0,c
 31352  014D26  0E00               	movlw	0
 31353  014D28  6E04               	movwf	(btemp+3)^0,c
 31354  014D2A  D0C6               	goto	l3193
 31355  014D2C                     l8587:
 31356                           
 31357                           ;stkvar	_b @ sp[(-4)+-4]
 31358  014D2C  90D8               	bcf	status,0,c
 31359  014D2E  0EF8               	movlw	-8
 31360  014D30  36E3               	rlcf	plusw1,f,c
 31361  014D32  0EF9               	movlw	-7
 31362  014D34  36E3               	rlcf	plusw1,f,c
 31363  014D36  0EFA               	movlw	-6
 31364  014D38  36E3               	rlcf	plusw1,f,c
 31365  014D3A  0EFB               	movlw	-5
 31366  014D3C  36E3               	rlcf	plusw1,f,c
 31367                           
 31368                           ;stkvar	_grs @ sp[(-4)+0]
 31369  014D3E  0EFC               	movlw	-4
 31370  014D40  AEE3               	btfss	plusw1,7,c
 31371  014D42  D002               	goto	l3205
 31372                           
 31373                           ;stkvar	_b @ sp[(-4)+-4]
 31374  014D44  0EF8               	movlw	-8
 31375  014D46  80E3               	bsf	plusw1,0,c
 31376  014D48                     l3205:
 31377                           
 31378                           ;stkvar	_grs @ sp[(-4)+0]
 31379  014D48  0EFC               	movlw	-4
 31380  014D4A  A0E3               	btfss	plusw1,0,c
 31381  014D4C  D00E               	goto	l8595
 31382                           
 31383                           ;stkvar	_grs @ sp[(-4)+0]
 31384  014D4E  0EFC               	movlw	-4
 31385  014D50  006F FF8C  F00C    	movff	plusw1,btemp+11
 31386  014D56  90D8               	bcf	status,0,c
 31387  014D58  340C               	rlcf	(btemp+11)^0,w,c
 31388  014D5A  6E0B               	movwf	(btemp+10)^0,c
 31389  014D5C  0E01               	movlw	1
 31390  014D5E  120B               	iorwf	(btemp+10)^0,f,c
 31391                           
 31392                           ;stkvar	_grs @ sp[(-4)+0]
 31393  014D60  0EFC               	movlw	-4
 31394  014D62  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31395  014D68  D009               	goto	l8597
 31396  014D6A                     l8595:
 31397                           
 31398                           ;stkvar	_grs @ sp[(-4)+0]
 31399  014D6A  50E1               	movf	fsr1l,w,c
 31400  014D6C  0FFC               	addlw	-4
 31401  014D6E  6ED9               	movwf	fsr2l,c
 31402  014D70  50E2               	movf	fsr1h,w,c
 31403  014D72  6EDA               	movwf	fsr2h,c
 31404  014D74  0EFF               	movlw	255
 31405  014D76  22DA               	addwfc	fsr2h,f,c
 31406  014D78  90D8               	bcf	status,0,c
 31407  014D7A  36DF               	rlcf	indf2,f,c
 31408  014D7C                     l8597:
 31409                           
 31410                           ;stkvar	_bexp @ sp[(-4)+1]
 31411  014D7C  0EFD               	movlw	-3
 31412  014D7E  50E3               	movf	plusw1,w,c
 31413  014D80  B4D8               	btfsc	status,2,c
 31414  014D82  D002               	goto	l8601
 31415                           
 31416                           ;stkvar	_bexp @ sp[(-4)+1]
 31417  014D84  0EFD               	movlw	-3
 31418  014D86  06E3               	decf	plusw1,f,c
 31419  014D88                     l8601:
 31420                           
 31421                           ;stkvar	_b @ sp[(-4)+-4]
 31422  014D88  0EFA               	movlw	-6
 31423  014D8A  AEE3               	btfss	plusw1,7,c
 31424  014D8C  D7CF               	goto	l8587
 31425  014D8E                     u6220:
 31426                           
 31427                           ;stkvar	_aexp @ sp[(-4)+2]
 31428  014D8E  0EFE               	movlw	-2
 31429  014D90  6AE3               	clrf	plusw1,c
 31430                           
 31431                           ;stkvar	_grs @ sp[(-4)+0]
 31432  014D92  0EFC               	movlw	-4
 31433  014D94  AEE3               	btfss	plusw1,7,c
 31434  014D96  D00F               	goto	l8615
 31435                           
 31436                           ;stkvar	_grs @ sp[(-4)+0]
 31437  014D98  0EFC               	movlw	-4
 31438  014D9A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31439  014DA0  0E7F               	movlw	127
 31440  014DA2  160C               	andwf	(btemp+11)^0,f,c
 31441  014DA4  B4D8               	btfsc	status,2,c
 31442  014DA6  D004               	goto	l8611
 31443  014DA8                     u6240:
 31444                           
 31445                           ;stkvar	_aexp @ sp[(-4)+2]
 31446  014DA8  0EFE               	movlw	-2
 31447  014DAA  6AE3               	clrf	plusw1,c
 31448  014DAC  2AE3               	incf	plusw1,f,c
 31449  014DAE  D003               	goto	l8615
 31450  014DB0                     l8611:
 31451                           
 31452                           ;stkvar	_b @ sp[(-4)+-4]
 31453  014DB0  0EF8               	movlw	-8
 31454  014DB2  B0E3               	btfsc	plusw1,0,c
 31455  014DB4  D7F9               	goto	u6240
 31456  014DB6                     l8615:
 31457                           
 31458                           ;stkvar	_aexp @ sp[(-4)+2]
 31459  014DB6  0EFE               	movlw	-2
 31460  014DB8  50E3               	movf	plusw1,w,c
 31461  014DBA  B4D8               	btfsc	status,2,c
 31462  014DBC  D02B               	goto	l8627
 31463                           
 31464                           ;stkvar	_b @ sp[(-4)+-4]
 31465  014DBE  50E1               	movf	fsr1l,w,c
 31466  014DC0  0FF8               	addlw	-8
 31467  014DC2  6ED9               	movwf	fsr2l,c
 31468  014DC4  50E2               	movf	fsr1h,w,c
 31469  014DC6  6EDA               	movwf	fsr2h,c
 31470  014DC8  0EFF               	movlw	255
 31471  014DCA  22DA               	addwfc	fsr2h,f,c
 31472  014DCC  2ADE               	incf	postinc2,f,c
 31473  014DCE  0E00               	movlw	0
 31474  014DD0  22DE               	addwfc	postinc2,f,c
 31475  014DD2  22DE               	addwfc	postinc2,f,c
 31476  014DD4  22DE               	addwfc	postinc2,f,c
 31477                           
 31478                           ;stkvar	_b @ sp[(-4)+-4]
 31479  014DD6  0EFB               	movlw	-5
 31480  014DD8  A0E3               	btfss	plusw1,0,c
 31481  014DDA  D01C               	goto	l8627
 31482  014DDC  0E01               	movlw	1
 31483  014DDE  6E0C               	movwf	(btemp+11)^0,c
 31484                           
 31485                           ;stkvar	_b @ sp[(-4)+-4]
 31486  014DE0  50E1               	movf	fsr1l,w,c
 31487  014DE2  0FF8               	addlw	-8
 31488  014DE4  6ED9               	movwf	fsr2l,c
 31489  014DE6  50E2               	movf	fsr1h,w,c
 31490  014DE8  6EDA               	movwf	fsr2h,c
 31491  014DEA  0EFF               	movlw	255
 31492  014DEC  22DA               	addwfc	fsr2h,f,c
 31493  014DEE  280C               	incf	(btemp+11)^0,w,c
 31494  014DF0  52DE               	movf	postinc2,f,c
 31495  014DF2  D008               	goto	u6280
 31496  014DF4                     u6285:
 31497  014DF4  52DE               	movf	postinc2,f,c
 31498  014DF6  90D8               	bcf	status,0,c
 31499  014DF8  BEDC               	btfsc	preinc2,7,c
 31500  014DFA  80D8               	bsf	status,0,c
 31501  014DFC  32DD               	rrcf	postdec2,f,c
 31502  014DFE  32DD               	rrcf	postdec2,f,c
 31503  014E00  32DD               	rrcf	postdec2,f,c
 31504  014E02  32DE               	rrcf	postinc2,f,c
 31505  014E04                     u6280:
 31506  014E04  2EE8               	decfsz	wreg,f,c
 31507  014E06  D7F6               	goto	u6285
 31508                           
 31509                           ;stkvar	_bexp @ sp[(-4)+1]
 31510  014E08  0EFD               	movlw	-3
 31511  014E0A  28E3               	incf	plusw1,w,c
 31512  014E0C  B4D8               	btfsc	status,2,c
 31513  014E0E  D002               	goto	l8627
 31514                           
 31515                           ;stkvar	_bexp @ sp[(-4)+1]
 31516  014E10  0EFD               	movlw	-3
 31517  014E12  2AE3               	incf	plusw1,f,c
 31518  014E14                     l8627:
 31519                           
 31520                           ;stkvar	_bexp @ sp[(-4)+1]
 31521  014E14  0EFD               	movlw	-3
 31522  014E16  28E3               	incf	plusw1,w,c
 31523  014E18  B4D8               	btfsc	status,2,c
 31524  014E1A  D004               	goto	u6310
 31525                           
 31526                           ;stkvar	_bexp @ sp[(-4)+1]
 31527  014E1C  0EFD               	movlw	-3
 31528  014E1E  50E3               	movf	plusw1,w,c
 31529  014E20  A4D8               	btfss	status,2,c
 31530  014E22  D00E               	goto	l8637
 31531  014E24                     u6310:
 31532                           
 31533                           ;stkvar	_b @ sp[(-4)+-4]
 31534  014E24  0EF8               	movlw	-8
 31535  014E26  6AE3               	clrf	plusw1,c
 31536  014E28  0EF9               	movlw	-7
 31537  014E2A  6AE3               	clrf	plusw1,c
 31538  014E2C  0EFA               	movlw	-6
 31539  014E2E  6AE3               	clrf	plusw1,c
 31540  014E30  0EFB               	movlw	-5
 31541  014E32  6AE3               	clrf	plusw1,c
 31542                           
 31543                           ;stkvar	_bexp @ sp[(-4)+1]
 31544  014E34  0EFD               	movlw	-3
 31545  014E36  50E3               	movf	plusw1,w,c
 31546  014E38  A4D8               	btfss	status,2,c
 31547  014E3A  D002               	goto	l8637
 31548                           
 31549                           ;stkvar	_signs @ sp[(-4)+3]
 31550  014E3C  0EFF               	movlw	-1
 31551  014E3E  6AE3               	clrf	plusw1,c
 31552  014E40                     l8637:
 31553                           
 31554                           ;stkvar	_bexp @ sp[(-4)+1]
 31555  014E40  0EFD               	movlw	-3
 31556  014E42  A0E3               	btfss	plusw1,0,c
 31557  014E44  D009               	goto	l8641
 31558                           
 31559                           ;stkvar	_b @ sp[(-4)+-4]
 31560  014E46  0EFA               	movlw	250
 31561  014E48  24E1               	addwf	fsr1l,w,c
 31562  014E4A  6ED9               	movwf	fsr2l,c
 31563  014E4C  0EFF               	movlw	255
 31564  014E4E  20E2               	addwfc	fsr1h,w,c
 31565  014E50  6EDA               	movwf	fsr2h,c
 31566  014E52  0E00               	movlw	0
 31567  014E54  8EDB               	bsf	plusw2,7,c
 31568  014E56  D008               	goto	l8643
 31569  014E58                     l8641:
 31570                           
 31571                           ;stkvar	_b @ sp[(-4)+-4]
 31572  014E58  0EFA               	movlw	250
 31573  014E5A  24E1               	addwf	fsr1l,w,c
 31574  014E5C  6ED9               	movwf	fsr2l,c
 31575  014E5E  0EFF               	movlw	255
 31576  014E60  20E2               	addwfc	fsr1h,w,c
 31577  014E62  6EDA               	movwf	fsr2h,c
 31578  014E64  0E7F               	movlw	127
 31579  014E66  16DF               	andwf	indf2,f,c
 31580  014E68                     l8643:
 31581                           
 31582                           ;stkvar	_b @ sp[(-4)+-4]
 31583  014E68  0EFB               	movlw	251
 31584  014E6A  24E1               	addwf	fsr1l,w,c
 31585  014E6C  6ED9               	movwf	fsr2l,c
 31586  014E6E  0EFF               	movlw	255
 31587  014E70  20E2               	addwfc	fsr1h,w,c
 31588  014E72  6EDA               	movwf	fsr2h,c
 31589                           
 31590                           ;stkvar	_bexp @ sp[(-4)+1]
 31591  014E74  0EFD               	movlw	-3
 31592  014E76  006F FF8C  F00C    	movff	plusw1,btemp+11
 31593  014E7C  90D8               	bcf	status,0,c
 31594  014E7E  300C               	rrcf	(btemp+11)^0,w,c
 31595  014E80  6EDF               	movwf	indf2,c
 31596                           
 31597                           ;stkvar	_signs @ sp[(-4)+3]
 31598  014E82  0EFF               	movlw	-1
 31599  014E84  AEE3               	btfss	plusw1,7,c
 31600  014E86  D008               	goto	l8649
 31601                           
 31602                           ;stkvar	_b @ sp[(-4)+-4]
 31603  014E88  0EFB               	movlw	251
 31604  014E8A  24E1               	addwf	fsr1l,w,c
 31605  014E8C  6ED9               	movwf	fsr2l,c
 31606  014E8E  0EFF               	movlw	255
 31607  014E90  20E2               	addwfc	fsr1h,w,c
 31608  014E92  6EDA               	movwf	fsr2h,c
 31609  014E94  0E00               	movlw	0
 31610  014E96  8EDB               	bsf	plusw2,7,c
 31611  014E98                     l8649:
 31612                           
 31613                           ;stkvar	_b @ sp[(-4)+-4]
 31614  014E98  0EF8               	movlw	-8
 31615  014E9A  006F FF8C  F001    	movff	plusw1,btemp
 31616  014EA0  0EF9               	movlw	-7
 31617  014EA2  006F FF8C  F002    	movff	plusw1,btemp+1
 31618  014EA8  0EFA               	movlw	-6
 31619  014EAA  006F FF8C  F003    	movff	plusw1,btemp+2
 31620  014EB0  0EFB               	movlw	-5
 31621  014EB2  006F FF8C  F004    	movff	plusw1,btemp+3
 31622  014EB8                     l3193:
 31623                           
 31624                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 31625  014EB8  0EF4               	movlw	244
 31626  014EBA  26E1               	addwf	fsr1l,f,c
 31627  014EBC  0EFF               	movlw	255
 31628  014EBE  22E2               	addwfc	fsr1h,f,c
 31629  014EC0  0012               	return		;funcret
 31630  014EC2                     __end_of___fladd:
 31631                           	opt callstack 0
 31632                           
 31633 ;; *************** function ___flmul *****************
 31634 ;; Defined at:
 31635 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 31636 ;; Parameters:    Size  Location     Type
 31637 ;;  b               4  [STACK] unsigned char 
 31638 ;;  a               4  [STACK] unsigned char 
 31639 ;; Auto vars:     Size  Location     Type
 31640 ;;  prod            4  [STACK] struct .
 31641 ;;  grs             4  [STACK] unsigned long 
 31642 ;;  temp            2  [STACK] struct .
 31643 ;;  bexp            1  [STACK] unsigned char 
 31644 ;;  aexp            1  [STACK] unsigned char 
 31645 ;;  sign            1  [STACK] unsigned char 
 31646 ;; Return value:  Size  Location     Type
 31647 ;;                  4  [STACK] unsigned char 
 31648 ;; Registers used:
 31649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 31650 ;; Tracked objects:
 31651 ;;		On entry : 0/0
 31652 ;;		On exit  : 0/0
 31653 ;;		Unchanged: 0/0
 31654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31659 ;;Total ram usage:        0 bytes
 31660 ;; Hardware stack levels used:    1
 31661 ;; Hardware stack levels required when called:   15
 31662 ;; This function calls:
 31663 ;;		Nothing
 31664 ;; This function is called by:
 31665 ;;		_conv_raw_result
 31666 ;;		_lp_filter
 31667 ;;		_calc_model_data
 31668 ;;		_calc_bsoc
 31669 ;;		_init_bsoc
 31670 ;;		_efgtoa
 31671 ;; This function uses a reentrant model
 31672 ;;
 31673                           
 31674                           	psect	text126
 31675  013EDC                     __ptext126:
 31676                           	opt callstack 0
 31677  013EDC                     ___flmul:
 31678                           	opt callstack 0
 31679                           
 31680                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 31681  013EDC  0E0D               	movlw	13
 31682  013EDE  26E1               	addwf	fsr1l,f,c
 31683  013EE0  0E00               	movlw	0
 31684  013EE2  22E2               	addwfc	fsr1h,f,c
 31685                           
 31686                           ;stkvar	_b @ sp[(-13)+-4]
 31687                           
 31688                           ;incstack = 0
 31689 ;; hardware stack exceeded
 31690  013EE4  0EF2               	movlw	242
 31691  013EE6  24E1               	addwf	fsr1l,w,c
 31692  013EE8  6ED9               	movwf	fsr2l,c
 31693  013EEA  0EFF               	movlw	255
 31694  013EEC  20E2               	addwfc	fsr1h,w,c
 31695  013EEE  6EDA               	movwf	fsr2h,c
 31696  013EF0  50DF               	movf	indf2,w,c
 31697  013EF2  6E0C               	movwf	(btemp+11)^0,c
 31698  013EF4  0E80               	movlw	128
 31699  013EF6  160C               	andwf	(btemp+11)^0,f,c
 31700                           
 31701                           ;stkvar	_sign @ sp[(-13)+12]
 31702  013EF8  0EFF               	movlw	-1
 31703  013EFA  0060  F033  FFE3   	movff	btemp+11,plusw1
 31704                           
 31705                           ;stkvar	_b @ sp[(-13)+-4]
 31706  013F00  0EF2               	movlw	242
 31707  013F02  24E1               	addwf	fsr1l,w,c
 31708  013F04  6ED9               	movwf	fsr2l,c
 31709  013F06  0EFF               	movlw	255
 31710  013F08  20E2               	addwfc	fsr1h,w,c
 31711  013F0A  6EDA               	movwf	fsr2h,c
 31712  013F0C  50DF               	movf	indf2,w,c
 31713  013F0E  6E0C               	movwf	(btemp+11)^0,c
 31714  013F10  90D8               	bcf	status,0,c
 31715  013F12  340C               	rlcf	(btemp+11)^0,w,c
 31716  013F14  6E0B               	movwf	(btemp+10)^0,c
 31717                           
 31718                           ;stkvar	_bexp @ sp[(-13)+10]
 31719  013F16  0EFD               	movlw	-3
 31720  013F18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31721                           
 31722                           ;stkvar	_b @ sp[(-13)+-4]
 31723  013F1E  0EF1               	movlw	241
 31724  013F20  24E1               	addwf	fsr1l,w,c
 31725  013F22  6ED9               	movwf	fsr2l,c
 31726  013F24  0EFF               	movlw	255
 31727  013F26  20E2               	addwfc	fsr1h,w,c
 31728  013F28  6EDA               	movwf	fsr2h,c
 31729  013F2A  AEDF               	btfss	indf2,7,c
 31730  013F2C  D002               	goto	l9075
 31731                           
 31732                           ;stkvar	_bexp @ sp[(-13)+10]
 31733  013F2E  0EFD               	movlw	-3
 31734  013F30  80E3               	bsf	plusw1,0,c
 31735  013F32                     l9075:
 31736                           
 31737                           ;stkvar	_bexp @ sp[(-13)+10]
 31738  013F32  0EFD               	movlw	-3
 31739  013F34  50E3               	movf	plusw1,w,c
 31740  013F36  B4D8               	btfsc	status,2,c
 31741  013F38  D01F               	goto	l9083
 31742                           
 31743                           ;stkvar	_bexp @ sp[(-13)+10]
 31744  013F3A  0EFD               	movlw	-3
 31745  013F3C  28E3               	incf	plusw1,w,c
 31746  013F3E  A4D8               	btfss	status,2,c
 31747  013F40  D018               	goto	l9081
 31748  013F42  0E00               	movlw	0
 31749  013F44  6E09               	movwf	(btemp+8)^0,c
 31750  013F46  0E00               	movlw	0
 31751  013F48  6E0A               	movwf	(btemp+9)^0,c
 31752  013F4A  0E00               	movlw	0
 31753  013F4C  6E0B               	movwf	(btemp+10)^0,c
 31754  013F4E  0E00               	movlw	0
 31755  013F50  6E0C               	movwf	(btemp+11)^0,c
 31756                           
 31757                           ;stkvar	_b @ sp[(-13)+-4]
 31758  013F52  0EEF               	movlw	-17
 31759  013F54  0060  F027  FFE3   	movff	btemp+8,plusw1
 31760  013F5A  0EF0               	movlw	-16
 31761  013F5C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31762  013F62  0EF1               	movlw	-15
 31763  013F64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31764  013F6A  0EF2               	movlw	-14
 31765  013F6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 31766  013F72                     l9081:
 31767                           
 31768                           ;stkvar	_b @ sp[(-13)+-4]
 31769  013F72  0EF1               	movlw	-15
 31770  013F74  8EE3               	bsf	plusw1,7,c
 31771  013F76  D018               	goto	l9085
 31772  013F78                     l9083:
 31773  013F78  0E00               	movlw	0
 31774  013F7A  6E09               	movwf	(btemp+8)^0,c
 31775  013F7C  0E00               	movlw	0
 31776  013F7E  6E0A               	movwf	(btemp+9)^0,c
 31777  013F80  0E00               	movlw	0
 31778  013F82  6E0B               	movwf	(btemp+10)^0,c
 31779  013F84  0E00               	movlw	0
 31780  013F86  6E0C               	movwf	(btemp+11)^0,c
 31781                           
 31782                           ;stkvar	_b @ sp[(-13)+-4]
 31783  013F88  0EEF               	movlw	-17
 31784  013F8A  0060  F027  FFE3   	movff	btemp+8,plusw1
 31785  013F90  0EF0               	movlw	-16
 31786  013F92  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31787  013F98  0EF1               	movlw	-15
 31788  013F9A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31789  013FA0  0EF2               	movlw	-14
 31790  013FA2  0060  F033  FFE3   	movff	btemp+11,plusw1
 31791  013FA8                     l9085:
 31792                           
 31793                           ;stkvar	_a @ sp[(-13)+-8]
 31794  013FA8  0EEE               	movlw	238
 31795  013FAA  24E1               	addwf	fsr1l,w,c
 31796  013FAC  6ED9               	movwf	fsr2l,c
 31797  013FAE  0EFF               	movlw	255
 31798  013FB0  20E2               	addwfc	fsr1h,w,c
 31799  013FB2  6EDA               	movwf	fsr2h,c
 31800  013FB4  50DF               	movf	indf2,w,c
 31801  013FB6  6E0C               	movwf	(btemp+11)^0,c
 31802  013FB8  0E80               	movlw	128
 31803  013FBA  160C               	andwf	(btemp+11)^0,f,c
 31804                           
 31805                           ;stkvar	_sign @ sp[(-13)+12]
 31806  013FBC  50E1               	movf	fsr1l,w,c
 31807  013FBE  0FFF               	addlw	-1
 31808  013FC0  6ED9               	movwf	fsr2l,c
 31809  013FC2  50E2               	movf	fsr1h,w,c
 31810  013FC4  6EDA               	movwf	fsr2h,c
 31811  013FC6  0EFF               	movlw	255
 31812  013FC8  22DA               	addwfc	fsr2h,f,c
 31813  013FCA  500C               	movf	(btemp+11)^0,w,c
 31814  013FCC  1ADF               	xorwf	indf2,f,c
 31815                           
 31816                           ;stkvar	_a @ sp[(-13)+-8]
 31817  013FCE  0EEE               	movlw	238
 31818  013FD0  24E1               	addwf	fsr1l,w,c
 31819  013FD2  6ED9               	movwf	fsr2l,c
 31820  013FD4  0EFF               	movlw	255
 31821  013FD6  20E2               	addwfc	fsr1h,w,c
 31822  013FD8  6EDA               	movwf	fsr2h,c
 31823  013FDA  50DF               	movf	indf2,w,c
 31824  013FDC  6E0C               	movwf	(btemp+11)^0,c
 31825  013FDE  90D8               	bcf	status,0,c
 31826  013FE0  340C               	rlcf	(btemp+11)^0,w,c
 31827  013FE2  6E0B               	movwf	(btemp+10)^0,c
 31828                           
 31829                           ;stkvar	_aexp @ sp[(-13)+11]
 31830  013FE4  0EFE               	movlw	-2
 31831  013FE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31832                           
 31833                           ;stkvar	_a @ sp[(-13)+-8]
 31834  013FEC  0EED               	movlw	237
 31835  013FEE  24E1               	addwf	fsr1l,w,c
 31836  013FF0  6ED9               	movwf	fsr2l,c
 31837  013FF2  0EFF               	movlw	255
 31838  013FF4  20E2               	addwfc	fsr1h,w,c
 31839  013FF6  6EDA               	movwf	fsr2h,c
 31840  013FF8  AEDF               	btfss	indf2,7,c
 31841  013FFA  D002               	goto	l9093
 31842                           
 31843                           ;stkvar	_aexp @ sp[(-13)+11]
 31844  013FFC  0EFE               	movlw	-2
 31845  013FFE  80E3               	bsf	plusw1,0,c
 31846  014000                     l9093:
 31847                           
 31848                           ;stkvar	_aexp @ sp[(-13)+11]
 31849  014000  0EFE               	movlw	-2
 31850  014002  50E3               	movf	plusw1,w,c
 31851  014004  B4D8               	btfsc	status,2,c
 31852  014006  D01F               	goto	l9101
 31853                           
 31854                           ;stkvar	_aexp @ sp[(-13)+11]
 31855  014008  0EFE               	movlw	-2
 31856  01400A  28E3               	incf	plusw1,w,c
 31857  01400C  A4D8               	btfss	status,2,c
 31858  01400E  D018               	goto	l9099
 31859  014010  0E00               	movlw	0
 31860  014012  6E09               	movwf	(btemp+8)^0,c
 31861  014014  0E00               	movlw	0
 31862  014016  6E0A               	movwf	(btemp+9)^0,c
 31863  014018  0E00               	movlw	0
 31864  01401A  6E0B               	movwf	(btemp+10)^0,c
 31865  01401C  0E00               	movlw	0
 31866  01401E  6E0C               	movwf	(btemp+11)^0,c
 31867                           
 31868                           ;stkvar	_a @ sp[(-13)+-8]
 31869  014020  0EEB               	movlw	-21
 31870  014022  0060  F027  FFE3   	movff	btemp+8,plusw1
 31871  014028  0EEC               	movlw	-20
 31872  01402A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31873  014030  0EED               	movlw	-19
 31874  014032  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31875  014038  0EEE               	movlw	-18
 31876  01403A  0060  F033  FFE3   	movff	btemp+11,plusw1
 31877  014040                     l9099:
 31878                           
 31879                           ;stkvar	_a @ sp[(-13)+-8]
 31880  014040  0EED               	movlw	-19
 31881  014042  8EE3               	bsf	plusw1,7,c
 31882  014044  D018               	goto	l9103
 31883  014046                     l9101:
 31884  014046  0E00               	movlw	0
 31885  014048  6E09               	movwf	(btemp+8)^0,c
 31886  01404A  0E00               	movlw	0
 31887  01404C  6E0A               	movwf	(btemp+9)^0,c
 31888  01404E  0E00               	movlw	0
 31889  014050  6E0B               	movwf	(btemp+10)^0,c
 31890  014052  0E00               	movlw	0
 31891  014054  6E0C               	movwf	(btemp+11)^0,c
 31892                           
 31893                           ;stkvar	_a @ sp[(-13)+-8]
 31894  014056  0EEB               	movlw	-21
 31895  014058  0060  F027  FFE3   	movff	btemp+8,plusw1
 31896  01405E  0EEC               	movlw	-20
 31897  014060  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31898  014066  0EED               	movlw	-19
 31899  014068  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31900  01406E  0EEE               	movlw	-18
 31901  014070  0060  F033  FFE3   	movff	btemp+11,plusw1
 31902  014076                     l9103:
 31903                           
 31904                           ;stkvar	_aexp @ sp[(-13)+11]
 31905  014076  0EFE               	movlw	-2
 31906  014078  50E3               	movf	plusw1,w,c
 31907  01407A  B4D8               	btfsc	status,2,c
 31908  01407C  D004               	goto	u7300
 31909                           
 31910                           ;stkvar	_bexp @ sp[(-13)+10]
 31911  01407E  0EFD               	movlw	-3
 31912  014080  50E3               	movf	plusw1,w,c
 31913  014082  A4D8               	btfss	status,2,c
 31914  014084  D009               	goto	l9111
 31915  014086                     u7300:
 31916  014086  0E00               	movlw	0
 31917  014088  6E01               	movwf	btemp^0,c
 31918  01408A  0E00               	movlw	0
 31919  01408C  6E02               	movwf	(btemp+1)^0,c
 31920  01408E  0E00               	movlw	0
 31921  014090  6E03               	movwf	(btemp+2)^0,c
 31922  014092  0E00               	movlw	0
 31923  014094  6E04               	movwf	(btemp+3)^0,c
 31924  014096  D332               	goto	l3274
 31925  014098                     l9111:
 31926                           
 31927                           ;stkvar	_b @ sp[(-13)+-4]
 31928  014098  0EEF               	movlw	-17
 31929  01409A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31930                           
 31931                           ;stkvar	_a @ sp[(-13)+-8]
 31932  0140A0  0EED               	movlw	237
 31933  0140A2  24E1               	addwf	fsr1l,w,c
 31934  0140A4  6ED9               	movwf	fsr2l,c
 31935  0140A6  0EFF               	movlw	255
 31936  0140A8  20E2               	addwfc	fsr1h,w,c
 31937  0140AA  6EDA               	movwf	fsr2h,c
 31938  0140AC  50DF               	movf	indf2,w,c
 31939  0140AE  020C               	mulwf	(btemp+11)^0,c
 31940                           
 31941                           ;stkvar	_temp @ sp[(-13)+8]
 31942  0140B0  0EFB               	movlw	-5
 31943  0140B2  006F FFCF FFE3     	movff	prodl,plusw1
 31944  0140B8  0EFC               	movlw	-4
 31945  0140BA  006F FFD3 FFE3     	movff	prodh,plusw1
 31946                           
 31947                           ;stkvar	_temp @ sp[(-13)+8]
 31948  0140C0  0EFB               	movlw	-5
 31949  0140C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 31950  0140C8  0060  F030  F005   	movff	btemp+11,btemp+4
 31951  0140CE  6A06               	clrf	(btemp+5)^0,c
 31952  0140D0  6A07               	clrf	(btemp+6)^0,c
 31953  0140D2  6A08               	clrf	(btemp+7)^0,c
 31954                           
 31955                           ;stkvar	_grs @ sp[(-13)+4]
 31956  0140D4  0EF7               	movlw	-9
 31957  0140D6  0060  F017  FFE3   	movff	btemp+4,plusw1
 31958  0140DC  0EF8               	movlw	-8
 31959  0140DE  0060  F01B  FFE3   	movff	btemp+5,plusw1
 31960  0140E4  0EF9               	movlw	-7
 31961  0140E6  0060  F01F  FFE3   	movff	btemp+6,plusw1
 31962  0140EC  0EFA               	movlw	-6
 31963  0140EE  0060  F023  FFE3   	movff	btemp+7,plusw1
 31964                           
 31965                           ;stkvar	_temp @ sp[(-13)+8]
 31966  0140F4  0EFC               	movlw	252
 31967  0140F6  24E1               	addwf	fsr1l,w,c
 31968  0140F8  6ED9               	movwf	fsr2l,c
 31969  0140FA  0EFF               	movlw	255
 31970  0140FC  20E2               	addwfc	fsr1h,w,c
 31971  0140FE  6EDA               	movwf	fsr2h,c
 31972  014100  50DF               	movf	indf2,w,c
 31973  014102  6E0C               	movwf	(btemp+11)^0,c
 31974  014104  0060  F030  F005   	movff	btemp+11,btemp+4
 31975  01410A  6A06               	clrf	(btemp+5)^0,c
 31976  01410C  6A07               	clrf	(btemp+6)^0,c
 31977  01410E  6A08               	clrf	(btemp+7)^0,c
 31978                           
 31979                           ;stkvar	_prod @ sp[(-13)+0]
 31980  014110  0EF3               	movlw	-13
 31981  014112  0060  F017  FFE3   	movff	btemp+4,plusw1
 31982  014118  0EF4               	movlw	-12
 31983  01411A  0060  F01B  FFE3   	movff	btemp+5,plusw1
 31984  014120  0EF5               	movlw	-11
 31985  014122  0060  F01F  FFE3   	movff	btemp+6,plusw1
 31986  014128  0EF6               	movlw	-10
 31987  01412A  0060  F023  FFE3   	movff	btemp+7,plusw1
 31988                           
 31989                           ;stkvar	_b @ sp[(-13)+-4]
 31990  014130  0EF0               	movlw	240
 31991  014132  24E1               	addwf	fsr1l,w,c
 31992  014134  6ED9               	movwf	fsr2l,c
 31993  014136  0EFF               	movlw	255
 31994  014138  20E2               	addwfc	fsr1h,w,c
 31995  01413A  6EDA               	movwf	fsr2h,c
 31996  01413C  50DF               	movf	indf2,w,c
 31997  01413E  6E0C               	movwf	(btemp+11)^0,c
 31998                           
 31999                           ;stkvar	_a @ sp[(-13)+-8]
 32000  014140  0EEC               	movlw	236
 32001  014142  24E1               	addwf	fsr1l,w,c
 32002  014144  6ED9               	movwf	fsr2l,c
 32003  014146  0EFF               	movlw	255
 32004  014148  20E2               	addwfc	fsr1h,w,c
 32005  01414A  6EDA               	movwf	fsr2h,c
 32006  01414C  50DF               	movf	indf2,w,c
 32007  01414E  020C               	mulwf	(btemp+11)^0,c
 32008                           
 32009                           ;stkvar	_temp @ sp[(-13)+8]
 32010  014150  0EFB               	movlw	-5
 32011  014152  006F FFCF FFE3     	movff	prodl,plusw1
 32012  014158  0EFC               	movlw	-4
 32013  01415A  006F FFD3 FFE3     	movff	prodh,plusw1
 32014                           
 32015                           ;stkvar	_grs @ sp[(-13)+4]
 32016  014160  50E1               	movf	fsr1l,w,c
 32017  014162  0FF7               	addlw	-9
 32018  014164  6ED9               	movwf	fsr2l,c
 32019  014166  50E2               	movf	fsr1h,w,c
 32020  014168  6EDA               	movwf	fsr2h,c
 32021  01416A  0EFF               	movlw	255
 32022  01416C  22DA               	addwfc	fsr2h,f,c
 32023                           
 32024                           ;stkvar	_temp @ sp[(-13)+8]
 32025  01416E  0EFB               	movlw	-5
 32026  014170  50E3               	movf	plusw1,w,c
 32027  014172  26DE               	addwf	postinc2,f,c
 32028  014174  0E00               	movlw	0
 32029  014176  22DE               	addwfc	postinc2,f,c
 32030  014178  22DE               	addwfc	postinc2,f,c
 32031  01417A  22DE               	addwfc	postinc2,f,c
 32032                           
 32033                           ;stkvar	_prod @ sp[(-13)+0]
 32034  01417C  50E1               	movf	fsr1l,w,c
 32035  01417E  0FF3               	addlw	-13
 32036  014180  6ED9               	movwf	fsr2l,c
 32037  014182  50E2               	movf	fsr1h,w,c
 32038  014184  6EDA               	movwf	fsr2h,c
 32039  014186  0EFF               	movlw	255
 32040  014188  22DA               	addwfc	fsr2h,f,c
 32041                           
 32042                           ;stkvar	_temp @ sp[(-13)+8]
 32043  01418A  0EFC               	movlw	252
 32044  01418C  24E1               	addwf	fsr1l,w,c
 32045  01418E  6EE9               	movwf	fsr0l,c
 32046  014190  0EFF               	movlw	255
 32047  014192  20E2               	addwfc	fsr1h,w,c
 32048  014194  6EEA               	movwf	fsr0h,c
 32049  014196  50EF               	movf	indf0,w,c
 32050  014198  26DE               	addwf	postinc2,f,c
 32051  01419A  0E00               	movlw	0
 32052  01419C  22DE               	addwfc	postinc2,f,c
 32053  01419E  22DE               	addwfc	postinc2,f,c
 32054  0141A0  22DE               	addwfc	postinc2,f,c
 32055                           
 32056                           ;stkvar	_b @ sp[(-13)+-4]
 32057  0141A2  0EF1               	movlw	241
 32058  0141A4  24E1               	addwf	fsr1l,w,c
 32059  0141A6  6ED9               	movwf	fsr2l,c
 32060  0141A8  0EFF               	movlw	255
 32061  0141AA  20E2               	addwfc	fsr1h,w,c
 32062  0141AC  6EDA               	movwf	fsr2h,c
 32063  0141AE  50DF               	movf	indf2,w,c
 32064  0141B0  6E0C               	movwf	(btemp+11)^0,c
 32065                           
 32066                           ;stkvar	_a @ sp[(-13)+-8]
 32067  0141B2  0EEB               	movlw	-21
 32068  0141B4  50E3               	movf	plusw1,w,c
 32069  0141B6  020C               	mulwf	(btemp+11)^0,c
 32070                           
 32071                           ;stkvar	_temp @ sp[(-13)+8]
 32072  0141B8  0EFB               	movlw	-5
 32073  0141BA  006F FFCF FFE3     	movff	prodl,plusw1
 32074  0141C0  0EFC               	movlw	-4
 32075  0141C2  006F FFD3 FFE3     	movff	prodh,plusw1
 32076                           
 32077                           ;stkvar	_grs @ sp[(-13)+4]
 32078  0141C8  50E1               	movf	fsr1l,w,c
 32079  0141CA  0FF7               	addlw	-9
 32080  0141CC  6ED9               	movwf	fsr2l,c
 32081  0141CE  50E2               	movf	fsr1h,w,c
 32082  0141D0  6EDA               	movwf	fsr2h,c
 32083  0141D2  0EFF               	movlw	255
 32084  0141D4  22DA               	addwfc	fsr2h,f,c
 32085                           
 32086                           ;stkvar	_temp @ sp[(-13)+8]
 32087  0141D6  0EFB               	movlw	-5
 32088  0141D8  50E3               	movf	plusw1,w,c
 32089  0141DA  26DE               	addwf	postinc2,f,c
 32090  0141DC  0E00               	movlw	0
 32091  0141DE  22DE               	addwfc	postinc2,f,c
 32092  0141E0  22DE               	addwfc	postinc2,f,c
 32093  0141E2  22DE               	addwfc	postinc2,f,c
 32094                           
 32095                           ;stkvar	_prod @ sp[(-13)+0]
 32096  0141E4  50E1               	movf	fsr1l,w,c
 32097  0141E6  0FF3               	addlw	-13
 32098  0141E8  6ED9               	movwf	fsr2l,c
 32099  0141EA  50E2               	movf	fsr1h,w,c
 32100  0141EC  6EDA               	movwf	fsr2h,c
 32101  0141EE  0EFF               	movlw	255
 32102  0141F0  22DA               	addwfc	fsr2h,f,c
 32103                           
 32104                           ;stkvar	_temp @ sp[(-13)+8]
 32105  0141F2  0EFC               	movlw	252
 32106  0141F4  24E1               	addwf	fsr1l,w,c
 32107  0141F6  6EE9               	movwf	fsr0l,c
 32108  0141F8  0EFF               	movlw	255
 32109  0141FA  20E2               	addwfc	fsr1h,w,c
 32110  0141FC  6EEA               	movwf	fsr0h,c
 32111  0141FE  50EF               	movf	indf0,w,c
 32112  014200  26DE               	addwf	postinc2,f,c
 32113  014202  0E00               	movlw	0
 32114  014204  22DE               	addwfc	postinc2,f,c
 32115  014206  22DE               	addwfc	postinc2,f,c
 32116  014208  22DE               	addwfc	postinc2,f,c
 32117                           
 32118                           ;stkvar	_grs @ sp[(-13)+4]
 32119  01420A  50E1               	movf	fsr1l,w,c
 32120  01420C  0FF7               	addlw	-9
 32121  01420E  6ED9               	movwf	fsr2l,c
 32122  014210  50E2               	movf	fsr1h,w,c
 32123  014212  6EDA               	movwf	fsr2h,c
 32124  014214  0EFF               	movlw	255
 32125  014216  22DA               	addwfc	fsr2h,f,c
 32126  014218  0E08               	movlw	8
 32127  01421A                     u7315:
 32128  01421A  90D8               	bcf	status,0,c
 32129  01421C  36DE               	rlcf	postinc2,f,c
 32130  01421E  36DE               	rlcf	postinc2,f,c
 32131  014220  36DE               	rlcf	postinc2,f,c
 32132  014222  36DD               	rlcf	postdec2,f,c
 32133  014224  52DD               	movf	postdec2,f,c
 32134  014226  52DD               	movf	postdec2,f,c
 32135  014228  2EE8               	decfsz	wreg,f,c
 32136  01422A  D7F7               	goto	u7315
 32137                           
 32138                           ;stkvar	_b @ sp[(-13)+-4]
 32139  01422C  0EF0               	movlw	240
 32140  01422E  24E1               	addwf	fsr1l,w,c
 32141  014230  6ED9               	movwf	fsr2l,c
 32142  014232  0EFF               	movlw	255
 32143  014234  20E2               	addwfc	fsr1h,w,c
 32144  014236  6EDA               	movwf	fsr2h,c
 32145  014238  50DF               	movf	indf2,w,c
 32146  01423A  6E0C               	movwf	(btemp+11)^0,c
 32147                           
 32148                           ;stkvar	_a @ sp[(-13)+-8]
 32149  01423C  0EEB               	movlw	-21
 32150  01423E  50E3               	movf	plusw1,w,c
 32151  014240  020C               	mulwf	(btemp+11)^0,c
 32152                           
 32153                           ;stkvar	_temp @ sp[(-13)+8]
 32154  014242  0EFB               	movlw	-5
 32155  014244  006F FFCF FFE3     	movff	prodl,plusw1
 32156  01424A  0EFC               	movlw	-4
 32157  01424C  006F FFD3 FFE3     	movff	prodh,plusw1
 32158                           
 32159                           ;stkvar	_temp @ sp[(-13)+8]
 32160  014252  0EFB               	movlw	-5
 32161  014254  006F FF8C  F00B    	movff	plusw1,btemp+10
 32162  01425A  0EFC               	movlw	-4
 32163  01425C  006F FF8C  F00C    	movff	plusw1,btemp+11
 32164                           
 32165                           ;stkvar	_grs @ sp[(-13)+4]
 32166  014262  50E1               	movf	fsr1l,w,c
 32167  014264  0FF7               	addlw	-9
 32168  014266  6ED9               	movwf	fsr2l,c
 32169  014268  50E2               	movf	fsr1h,w,c
 32170  01426A  6EDA               	movwf	fsr2h,c
 32171  01426C  0EFF               	movlw	255
 32172  01426E  22DA               	addwfc	fsr2h,f,c
 32173  014270  500B               	movf	(btemp+10)^0,w,c
 32174  014272  26DE               	addwf	postinc2,f,c
 32175  014274  500C               	movf	(btemp+11)^0,w,c
 32176  014276  22DE               	addwfc	postinc2,f,c
 32177  014278  0E00               	movlw	0
 32178  01427A  22DE               	addwfc	postinc2,f,c
 32179  01427C  22DE               	addwfc	postinc2,f,c
 32180                           
 32181                           ;stkvar	_b @ sp[(-13)+-4]
 32182  01427E  0EEF               	movlw	-17
 32183  014280  006F FF8C  F00C    	movff	plusw1,btemp+11
 32184                           
 32185                           ;stkvar	_a @ sp[(-13)+-8]
 32186  014286  0EEC               	movlw	236
 32187  014288  24E1               	addwf	fsr1l,w,c
 32188  01428A  6ED9               	movwf	fsr2l,c
 32189  01428C  0EFF               	movlw	255
 32190  01428E  20E2               	addwfc	fsr1h,w,c
 32191  014290  6EDA               	movwf	fsr2h,c
 32192  014292  50DF               	movf	indf2,w,c
 32193  014294  020C               	mulwf	(btemp+11)^0,c
 32194                           
 32195                           ;stkvar	_temp @ sp[(-13)+8]
 32196  014296  0EFB               	movlw	-5
 32197  014298  006F FFCF FFE3     	movff	prodl,plusw1
 32198  01429E  0EFC               	movlw	-4
 32199  0142A0  006F FFD3 FFE3     	movff	prodh,plusw1
 32200                           
 32201                           ;stkvar	_temp @ sp[(-13)+8]
 32202  0142A6  0EFB               	movlw	-5
 32203  0142A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 32204  0142AE  0EFC               	movlw	-4
 32205  0142B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 32206                           
 32207                           ;stkvar	_grs @ sp[(-13)+4]
 32208  0142B6  50E1               	movf	fsr1l,w,c
 32209  0142B8  0FF7               	addlw	-9
 32210  0142BA  6ED9               	movwf	fsr2l,c
 32211  0142BC  50E2               	movf	fsr1h,w,c
 32212  0142BE  6EDA               	movwf	fsr2h,c
 32213  0142C0  0EFF               	movlw	255
 32214  0142C2  22DA               	addwfc	fsr2h,f,c
 32215  0142C4  500B               	movf	(btemp+10)^0,w,c
 32216  0142C6  26DE               	addwf	postinc2,f,c
 32217  0142C8  500C               	movf	(btemp+11)^0,w,c
 32218  0142CA  22DE               	addwfc	postinc2,f,c
 32219  0142CC  0E00               	movlw	0
 32220  0142CE  22DE               	addwfc	postinc2,f,c
 32221  0142D0  22DE               	addwfc	postinc2,f,c
 32222                           
 32223                           ;stkvar	_grs @ sp[(-13)+4]
 32224  0142D2  50E1               	movf	fsr1l,w,c
 32225  0142D4  0FF7               	addlw	-9
 32226  0142D6  6ED9               	movwf	fsr2l,c
 32227  0142D8  50E2               	movf	fsr1h,w,c
 32228  0142DA  6EDA               	movwf	fsr2h,c
 32229  0142DC  0EFF               	movlw	255
 32230  0142DE  22DA               	addwfc	fsr2h,f,c
 32231  0142E0  0E08               	movlw	8
 32232  0142E2                     u7325:
 32233  0142E2  90D8               	bcf	status,0,c
 32234  0142E4  36DE               	rlcf	postinc2,f,c
 32235  0142E6  36DE               	rlcf	postinc2,f,c
 32236  0142E8  36DE               	rlcf	postinc2,f,c
 32237  0142EA  36DD               	rlcf	postdec2,f,c
 32238  0142EC  52DD               	movf	postdec2,f,c
 32239  0142EE  52DD               	movf	postdec2,f,c
 32240  0142F0  2EE8               	decfsz	wreg,f,c
 32241  0142F2  D7F7               	goto	u7325
 32242                           
 32243                           ;stkvar	_b @ sp[(-13)+-4]
 32244  0142F4  0EEF               	movlw	-17
 32245  0142F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 32246                           
 32247                           ;stkvar	_a @ sp[(-13)+-8]
 32248  0142FC  0EEB               	movlw	-21
 32249  0142FE  50E3               	movf	plusw1,w,c
 32250  014300  020C               	mulwf	(btemp+11)^0,c
 32251                           
 32252                           ;stkvar	_temp @ sp[(-13)+8]
 32253  014302  0EFB               	movlw	-5
 32254  014304  006F FFCF FFE3     	movff	prodl,plusw1
 32255  01430A  0EFC               	movlw	-4
 32256  01430C  006F FFD3 FFE3     	movff	prodh,plusw1
 32257                           
 32258                           ;stkvar	_temp @ sp[(-13)+8]
 32259  014312  0EFB               	movlw	-5
 32260  014314  006F FF8C  F00B    	movff	plusw1,btemp+10
 32261  01431A  0EFC               	movlw	-4
 32262  01431C  006F FF8C  F00C    	movff	plusw1,btemp+11
 32263                           
 32264                           ;stkvar	_grs @ sp[(-13)+4]
 32265  014322  50E1               	movf	fsr1l,w,c
 32266  014324  0FF7               	addlw	-9
 32267  014326  6ED9               	movwf	fsr2l,c
 32268  014328  50E2               	movf	fsr1h,w,c
 32269  01432A  6EDA               	movwf	fsr2h,c
 32270  01432C  0EFF               	movlw	255
 32271  01432E  22DA               	addwfc	fsr2h,f,c
 32272  014330  500B               	movf	(btemp+10)^0,w,c
 32273  014332  26DE               	addwf	postinc2,f,c
 32274  014334  500C               	movf	(btemp+11)^0,w,c
 32275  014336  22DE               	addwfc	postinc2,f,c
 32276  014338  0E00               	movlw	0
 32277  01433A  22DE               	addwfc	postinc2,f,c
 32278  01433C  22DE               	addwfc	postinc2,f,c
 32279                           
 32280                           ;stkvar	_b @ sp[(-13)+-4]
 32281  01433E  0EF0               	movlw	240
 32282  014340  24E1               	addwf	fsr1l,w,c
 32283  014342  6ED9               	movwf	fsr2l,c
 32284  014344  0EFF               	movlw	255
 32285  014346  20E2               	addwfc	fsr1h,w,c
 32286  014348  6EDA               	movwf	fsr2h,c
 32287  01434A  50DF               	movf	indf2,w,c
 32288  01434C  6E0C               	movwf	(btemp+11)^0,c
 32289                           
 32290                           ;stkvar	_a @ sp[(-13)+-8]
 32291  01434E  0EED               	movlw	237
 32292  014350  24E1               	addwf	fsr1l,w,c
 32293  014352  6ED9               	movwf	fsr2l,c
 32294  014354  0EFF               	movlw	255
 32295  014356  20E2               	addwfc	fsr1h,w,c
 32296  014358  6EDA               	movwf	fsr2h,c
 32297  01435A  50DF               	movf	indf2,w,c
 32298  01435C  020C               	mulwf	(btemp+11)^0,c
 32299                           
 32300                           ;stkvar	_temp @ sp[(-13)+8]
 32301  01435E  0EFB               	movlw	-5
 32302  014360  006F FFCF FFE3     	movff	prodl,plusw1
 32303  014366  0EFC               	movlw	-4
 32304  014368  006F FFD3 FFE3     	movff	prodh,plusw1
 32305                           
 32306                           ;stkvar	_temp @ sp[(-13)+8]
 32307  01436E  0EFB               	movlw	-5
 32308  014370  006F FF8C  F00B    	movff	plusw1,btemp+10
 32309  014376  0EFC               	movlw	-4
 32310  014378  006F FF8C  F00C    	movff	plusw1,btemp+11
 32311                           
 32312                           ;stkvar	_prod @ sp[(-13)+0]
 32313  01437E  50E1               	movf	fsr1l,w,c
 32314  014380  0FF3               	addlw	-13
 32315  014382  6ED9               	movwf	fsr2l,c
 32316  014384  50E2               	movf	fsr1h,w,c
 32317  014386  6EDA               	movwf	fsr2h,c
 32318  014388  0EFF               	movlw	255
 32319  01438A  22DA               	addwfc	fsr2h,f,c
 32320  01438C  500B               	movf	(btemp+10)^0,w,c
 32321  01438E  26DE               	addwf	postinc2,f,c
 32322  014390  500C               	movf	(btemp+11)^0,w,c
 32323  014392  22DE               	addwfc	postinc2,f,c
 32324  014394  0E00               	movlw	0
 32325  014396  22DE               	addwfc	postinc2,f,c
 32326  014398  22DE               	addwfc	postinc2,f,c
 32327                           
 32328                           ;stkvar	_b @ sp[(-13)+-4]
 32329  01439A  0EF1               	movlw	241
 32330  01439C  24E1               	addwf	fsr1l,w,c
 32331  01439E  6ED9               	movwf	fsr2l,c
 32332  0143A0  0EFF               	movlw	255
 32333  0143A2  20E2               	addwfc	fsr1h,w,c
 32334  0143A4  6EDA               	movwf	fsr2h,c
 32335  0143A6  50DF               	movf	indf2,w,c
 32336  0143A8  6E0C               	movwf	(btemp+11)^0,c
 32337                           
 32338                           ;stkvar	_a @ sp[(-13)+-8]
 32339  0143AA  0EEC               	movlw	236
 32340  0143AC  24E1               	addwf	fsr1l,w,c
 32341  0143AE  6ED9               	movwf	fsr2l,c
 32342  0143B0  0EFF               	movlw	255
 32343  0143B2  20E2               	addwfc	fsr1h,w,c
 32344  0143B4  6EDA               	movwf	fsr2h,c
 32345  0143B6  50DF               	movf	indf2,w,c
 32346  0143B8  020C               	mulwf	(btemp+11)^0,c
 32347                           
 32348                           ;stkvar	_temp @ sp[(-13)+8]
 32349  0143BA  0EFB               	movlw	-5
 32350  0143BC  006F FFCF FFE3     	movff	prodl,plusw1
 32351  0143C2  0EFC               	movlw	-4
 32352  0143C4  006F FFD3 FFE3     	movff	prodh,plusw1
 32353                           
 32354                           ;stkvar	_temp @ sp[(-13)+8]
 32355  0143CA  0EFB               	movlw	-5
 32356  0143CC  006F FF8C  F00B    	movff	plusw1,btemp+10
 32357  0143D2  0EFC               	movlw	-4
 32358  0143D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 32359                           
 32360                           ;stkvar	_prod @ sp[(-13)+0]
 32361  0143DA  50E1               	movf	fsr1l,w,c
 32362  0143DC  0FF3               	addlw	-13
 32363  0143DE  6ED9               	movwf	fsr2l,c
 32364  0143E0  50E2               	movf	fsr1h,w,c
 32365  0143E2  6EDA               	movwf	fsr2h,c
 32366  0143E4  0EFF               	movlw	255
 32367  0143E6  22DA               	addwfc	fsr2h,f,c
 32368  0143E8  500B               	movf	(btemp+10)^0,w,c
 32369  0143EA  26DE               	addwf	postinc2,f,c
 32370  0143EC  500C               	movf	(btemp+11)^0,w,c
 32371  0143EE  22DE               	addwfc	postinc2,f,c
 32372  0143F0  0E00               	movlw	0
 32373  0143F2  22DE               	addwfc	postinc2,f,c
 32374  0143F4  22DE               	addwfc	postinc2,f,c
 32375                           
 32376                           ;stkvar	_b @ sp[(-13)+-4]
 32377  0143F6  0EF1               	movlw	241
 32378  0143F8  24E1               	addwf	fsr1l,w,c
 32379  0143FA  6ED9               	movwf	fsr2l,c
 32380  0143FC  0EFF               	movlw	255
 32381  0143FE  20E2               	addwfc	fsr1h,w,c
 32382  014400  6EDA               	movwf	fsr2h,c
 32383  014402  50DF               	movf	indf2,w,c
 32384  014404  6E0C               	movwf	(btemp+11)^0,c
 32385                           
 32386                           ;stkvar	_a @ sp[(-13)+-8]
 32387  014406  0EED               	movlw	237
 32388  014408  24E1               	addwf	fsr1l,w,c
 32389  01440A  6ED9               	movwf	fsr2l,c
 32390  01440C  0EFF               	movlw	255
 32391  01440E  20E2               	addwfc	fsr1h,w,c
 32392  014410  6EDA               	movwf	fsr2h,c
 32393  014412  50DF               	movf	indf2,w,c
 32394  014414  020C               	mulwf	(btemp+11)^0,c
 32395                           
 32396                           ;stkvar	_temp @ sp[(-13)+8]
 32397  014416  0EFB               	movlw	-5
 32398  014418  006F FFCF FFE3     	movff	prodl,plusw1
 32399  01441E  0EFC               	movlw	-4
 32400  014420  006F FFD3 FFE3     	movff	prodh,plusw1
 32401                           
 32402                           ;stkvar	_temp @ sp[(-13)+8]
 32403  014426  0EFB               	movlw	-5
 32404  014428  006F FF8C  F00B    	movff	plusw1,btemp+10
 32405  01442E  0EFC               	movlw	-4
 32406  014430  006F FF8C  F00C    	movff	plusw1,btemp+11
 32407  014436  500B               	movf	(btemp+10)^0,w,c
 32408  014438  6E05               	movwf	(btemp+4)^0,c
 32409  01443A  500C               	movf	(btemp+11)^0,w,c
 32410  01443C  6E06               	movwf	(btemp+5)^0,c
 32411  01443E  6A07               	clrf	(btemp+6)^0,c
 32412  014440  6A08               	clrf	(btemp+7)^0,c
 32413  014442  0060  F01C  F008   	movff	btemp+6,btemp+7
 32414  014448  0060  F018  F007   	movff	btemp+5,btemp+6
 32415  01444E  0060  F014  F006   	movff	btemp+4,btemp+5
 32416  014454  6A05               	clrf	(btemp+4)^0,c
 32417                           
 32418                           ;stkvar	_prod @ sp[(-13)+0]
 32419  014456  50E1               	movf	fsr1l,w,c
 32420  014458  0FF3               	addlw	-13
 32421  01445A  6ED9               	movwf	fsr2l,c
 32422  01445C  50E2               	movf	fsr1h,w,c
 32423  01445E  6EDA               	movwf	fsr2h,c
 32424  014460  0EFF               	movlw	255
 32425  014462  22DA               	addwfc	fsr2h,f,c
 32426  014464  5005               	movf	(btemp+4)^0,w,c
 32427  014466  26DE               	addwf	postinc2,f,c
 32428  014468  5006               	movf	(btemp+5)^0,w,c
 32429  01446A  22DE               	addwfc	postinc2,f,c
 32430  01446C  5007               	movf	(btemp+6)^0,w,c
 32431  01446E  22DE               	addwfc	postinc2,f,c
 32432  014470  5008               	movf	(btemp+7)^0,w,c
 32433  014472  22DE               	addwfc	postinc2,f,c
 32434                           
 32435                           ;stkvar	_prod @ sp[(-13)+0]
 32436  014474  50E1               	movf	fsr1l,w,c
 32437  014476  0FF3               	addlw	-13
 32438  014478  6ED9               	movwf	fsr2l,c
 32439  01447A  50E2               	movf	fsr1h,w,c
 32440  01447C  6EDA               	movwf	fsr2h,c
 32441  01447E  0EFF               	movlw	255
 32442  014480  22DA               	addwfc	fsr2h,f,c
 32443                           
 32444                           ;stkvar	_grs @ sp[(-13)+4]
 32445  014482  0EFA               	movlw	250
 32446  014484  24E1               	addwf	fsr1l,w,c
 32447  014486  6EE9               	movwf	fsr0l,c
 32448  014488  0EFF               	movlw	255
 32449  01448A  20E2               	addwfc	fsr1h,w,c
 32450  01448C  6EEA               	movwf	fsr0h,c
 32451  01448E  50EF               	movf	indf0,w,c
 32452  014490  26DE               	addwf	postinc2,f,c
 32453  014492  0E00               	movlw	0
 32454  014494  22DE               	addwfc	postinc2,f,c
 32455  014496  22DE               	addwfc	postinc2,f,c
 32456  014498  22DE               	addwfc	postinc2,f,c
 32457                           
 32458                           ;stkvar	_grs @ sp[(-13)+4]
 32459  01449A  50E1               	movf	fsr1l,w,c
 32460  01449C  0FF7               	addlw	-9
 32461  01449E  6ED9               	movwf	fsr2l,c
 32462  0144A0  50E2               	movf	fsr1h,w,c
 32463  0144A2  6EDA               	movwf	fsr2h,c
 32464  0144A4  0EFF               	movlw	255
 32465  0144A6  22DA               	addwfc	fsr2h,f,c
 32466  0144A8  0E08               	movlw	8
 32467  0144AA                     u7335:
 32468  0144AA  90D8               	bcf	status,0,c
 32469  0144AC  36DE               	rlcf	postinc2,f,c
 32470  0144AE  36DE               	rlcf	postinc2,f,c
 32471  0144B0  36DE               	rlcf	postinc2,f,c
 32472  0144B2  36DD               	rlcf	postdec2,f,c
 32473  0144B4  52DD               	movf	postdec2,f,c
 32474  0144B6  52DD               	movf	postdec2,f,c
 32475  0144B8  2EE8               	decfsz	wreg,f,c
 32476  0144BA  D7F7               	goto	u7335
 32477  0144BC  0E82               	movlw	130
 32478  0144BE  6E0B               	movwf	(btemp+10)^0,c
 32479  0144C0  0EFF               	movlw	255
 32480  0144C2  6E0C               	movwf	(btemp+11)^0,c
 32481                           
 32482                           ;stkvar	_bexp @ sp[(-13)+10]
 32483  0144C4  0EFD               	movlw	-3
 32484  0144C6  50E3               	movf	plusw1,w,c
 32485  0144C8  6E09               	movwf	(btemp+8)^0,c
 32486  0144CA  6A0A               	clrf	(btemp+9)^0,c
 32487                           
 32488                           ;stkvar	_aexp @ sp[(-13)+11]
 32489  0144CC  0EFE               	movlw	-2
 32490  0144CE  50E3               	movf	plusw1,w,c
 32491  0144D0  2609               	addwf	(btemp+8)^0,f,c
 32492  0144D2  0E00               	movlw	0
 32493  0144D4  220A               	addwfc	(btemp+9)^0,f,c
 32494  0144D6  500B               	movf	(btemp+10)^0,w,c
 32495  0144D8  2609               	addwf	(btemp+8)^0,f,c
 32496  0144DA  500C               	movf	(btemp+11)^0,w,c
 32497  0144DC  220A               	addwfc	(btemp+9)^0,f,c
 32498                           
 32499                           ;stkvar	_temp @ sp[(-13)+8]
 32500  0144DE  0EFB               	movlw	-5
 32501  0144E0  0060  F027  FFE3   	movff	btemp+8,plusw1
 32502  0144E6  0EFC               	movlw	-4
 32503  0144E8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32504  0144EE  D021               	goto	l9173
 32505  0144F0                     l9163:
 32506                           
 32507                           ;stkvar	_prod @ sp[(-13)+0]
 32508  0144F0  90D8               	bcf	status,0,c
 32509  0144F2  0EF3               	movlw	-13
 32510  0144F4  36E3               	rlcf	plusw1,f,c
 32511  0144F6  0EF4               	movlw	-12
 32512  0144F8  36E3               	rlcf	plusw1,f,c
 32513  0144FA  0EF5               	movlw	-11
 32514  0144FC  36E3               	rlcf	plusw1,f,c
 32515  0144FE  0EF6               	movlw	-10
 32516  014500  36E3               	rlcf	plusw1,f,c
 32517                           
 32518                           ;stkvar	_grs @ sp[(-13)+4]
 32519  014502  0EFA               	movlw	-6
 32520  014504  AEE3               	btfss	plusw1,7,c
 32521  014506  D002               	goto	l9169
 32522                           
 32523                           ;stkvar	_prod @ sp[(-13)+0]
 32524  014508  0EF3               	movlw	-13
 32525  01450A  80E3               	bsf	plusw1,0,c
 32526  01450C                     l9169:
 32527                           
 32528                           ;stkvar	_grs @ sp[(-13)+4]
 32529  01450C  90D8               	bcf	status,0,c
 32530  01450E  0EF7               	movlw	-9
 32531  014510  36E3               	rlcf	plusw1,f,c
 32532  014512  0EF8               	movlw	-8
 32533  014514  36E3               	rlcf	plusw1,f,c
 32534  014516  0EF9               	movlw	-7
 32535  014518  36E3               	rlcf	plusw1,f,c
 32536  01451A  0EFA               	movlw	-6
 32537  01451C  36E3               	rlcf	plusw1,f,c
 32538                           
 32539                           ;stkvar	_temp @ sp[(-13)+8]
 32540  01451E  50E1               	movf	fsr1l,w,c
 32541  014520  0FFB               	addlw	-5
 32542  014522  6ED9               	movwf	fsr2l,c
 32543  014524  50E2               	movf	fsr1h,w,c
 32544  014526  6EDA               	movwf	fsr2h,c
 32545  014528  0EFF               	movlw	255
 32546  01452A  22DA               	addwfc	fsr2h,f,c
 32547  01452C  06DE               	decf	postinc2,f,c
 32548  01452E  0E00               	movlw	0
 32549  014530  5ADD               	subwfb	postdec2,f,c
 32550  014532                     l9173:
 32551                           
 32552                           ;stkvar	_prod @ sp[(-13)+0]
 32553  014532  0EF5               	movlw	-11
 32554  014534  AEE3               	btfss	plusw1,7,c
 32555  014536  D7DC               	goto	l9163
 32556                           
 32557                           ;stkvar	_aexp @ sp[(-13)+11]
 32558  014538  0EFE               	movlw	-2
 32559  01453A  6AE3               	clrf	plusw1,c
 32560                           
 32561                           ;stkvar	_grs @ sp[(-13)+4]
 32562  01453C  0EFA               	movlw	-6
 32563  01453E  AEE3               	btfss	plusw1,7,c
 32564  014540  D020               	goto	l9187
 32565                           
 32566                           ;stkvar	_grs @ sp[(-13)+4]
 32567  014542  50E1               	movf	fsr1l,w,c
 32568  014544  0FF7               	addlw	-9
 32569  014546  6ED9               	movwf	fsr2l,c
 32570  014548  50E2               	movf	fsr1h,w,c
 32571  01454A  6EDA               	movwf	fsr2h,c
 32572  01454C  0EFF               	movlw	255
 32573  01454E  22DA               	addwfc	fsr2h,f,c
 32574  014550  0EFF               	movlw	255
 32575  014552  14DE               	andwf	postinc2,w,c
 32576  014554  6E09               	movwf	(btemp+8)^0,c
 32577  014556  0EFF               	movlw	255
 32578  014558  14DE               	andwf	postinc2,w,c
 32579  01455A  6E0A               	movwf	(btemp+9)^0,c
 32580  01455C  0EFF               	movlw	255
 32581  01455E  14DE               	andwf	postinc2,w,c
 32582  014560  6E0B               	movwf	(btemp+10)^0,c
 32583  014562  0E7F               	movlw	127
 32584  014564  14DE               	andwf	postinc2,w,c
 32585  014566  6E0C               	movwf	(btemp+11)^0,c
 32586  014568  5009               	movf	(btemp+8)^0,w,c
 32587  01456A  100A               	iorwf	(btemp+9)^0,w,c
 32588  01456C  100B               	iorwf	(btemp+10)^0,w,c
 32589  01456E  100C               	iorwf	(btemp+11)^0,w,c
 32590  014570  B4D8               	btfsc	status,2,c
 32591  014572  D004               	goto	l9183
 32592  014574                     u7370:
 32593                           
 32594                           ;stkvar	_aexp @ sp[(-13)+11]
 32595  014574  0EFE               	movlw	-2
 32596  014576  6AE3               	clrf	plusw1,c
 32597  014578  2AE3               	incf	plusw1,f,c
 32598  01457A  D003               	goto	l9187
 32599  01457C                     l9183:
 32600                           
 32601                           ;stkvar	_prod @ sp[(-13)+0]
 32602  01457C  0EF3               	movlw	-13
 32603  01457E  B0E3               	btfsc	plusw1,0,c
 32604  014580  D7F9               	goto	u7370
 32605  014582                     l9187:
 32606                           
 32607                           ;stkvar	_aexp @ sp[(-13)+11]
 32608  014582  0EFE               	movlw	-2
 32609  014584  50E3               	movf	plusw1,w,c
 32610  014586  B4D8               	btfsc	status,2,c
 32611  014588  D036               	goto	l9197
 32612                           
 32613                           ;stkvar	_prod @ sp[(-13)+0]
 32614  01458A  50E1               	movf	fsr1l,w,c
 32615  01458C  0FF3               	addlw	-13
 32616  01458E  6ED9               	movwf	fsr2l,c
 32617  014590  50E2               	movf	fsr1h,w,c
 32618  014592  6EDA               	movwf	fsr2h,c
 32619  014594  0EFF               	movlw	255
 32620  014596  22DA               	addwfc	fsr2h,f,c
 32621  014598  2ADE               	incf	postinc2,f,c
 32622  01459A  0E00               	movlw	0
 32623  01459C  22DE               	addwfc	postinc2,f,c
 32624  01459E  22DE               	addwfc	postinc2,f,c
 32625  0145A0  22DE               	addwfc	postinc2,f,c
 32626                           
 32627                           ;stkvar	_prod @ sp[(-13)+0]
 32628  0145A2  0EF6               	movlw	-10
 32629  0145A4  A0E3               	btfss	plusw1,0,c
 32630  0145A6  D027               	goto	l9197
 32631  0145A8  0E01               	movlw	1
 32632  0145AA  6E0C               	movwf	(btemp+11)^0,c
 32633                           
 32634                           ;stkvar	_prod @ sp[(-13)+0]
 32635  0145AC  50E1               	movf	fsr1l,w,c
 32636  0145AE  0FF3               	addlw	-13
 32637  0145B0  6ED9               	movwf	fsr2l,c
 32638  0145B2  50E2               	movf	fsr1h,w,c
 32639  0145B4  6EDA               	movwf	fsr2h,c
 32640  0145B6  0EFF               	movlw	255
 32641  0145B8  22DA               	addwfc	fsr2h,f,c
 32642  0145BA  280C               	incf	(btemp+11)^0,w,c
 32643  0145BC  52DE               	movf	postinc2,f,c
 32644  0145BE  D008               	goto	u7410
 32645  0145C0                     u7415:
 32646  0145C0  52DE               	movf	postinc2,f,c
 32647  0145C2  90D8               	bcf	status,0,c
 32648  0145C4  BEDC               	btfsc	preinc2,7,c
 32649  0145C6  80D8               	bsf	status,0,c
 32650  0145C8  32DD               	rrcf	postdec2,f,c
 32651  0145CA  32DD               	rrcf	postdec2,f,c
 32652  0145CC  32DD               	rrcf	postdec2,f,c
 32653  0145CE  32DE               	rrcf	postinc2,f,c
 32654  0145D0                     u7410:
 32655  0145D0  2EE8               	decfsz	wreg,f,c
 32656  0145D2  D7F6               	goto	u7415
 32657                           
 32658                           ;stkvar	_temp @ sp[(-13)+8]
 32659  0145D4  0EFB               	movlw	-5
 32660  0145D6  50E3               	movf	plusw1,w,c
 32661  0145D8  0F01               	addlw	1
 32662  0145DA  6E01               	movwf	btemp^0,c
 32663  0145DC  0EFB               	movlw	-5
 32664  0145DE  0060  F007  FFE3   	movff	btemp,plusw1
 32665  0145E4  6A01               	clrf	btemp^0,c
 32666  0145E6  0EFC               	movlw	-4
 32667  0145E8  50E3               	movf	plusw1,w,c
 32668  0145EA  2001               	addwfc	btemp^0,w,c
 32669  0145EC  6E01               	movwf	btemp^0,c
 32670  0145EE  0EFC               	movlw	-4
 32671  0145F0  0060  F007  FFE3   	movff	btemp,plusw1
 32672  0145F6                     l9197:
 32673                           
 32674                           ;stkvar	_temp @ sp[(-13)+8]
 32675  0145F6  0EFC               	movlw	-4
 32676  0145F8  BEE3               	btfsc	plusw1,7,c
 32677  0145FA  D020               	goto	l9201
 32678  0145FC  0EFC               	movlw	-4
 32679  0145FE  50E3               	movf	plusw1,w,c
 32680  014600  E104               	bnz	u7420
 32681  014602  0EFB               	movlw	-5
 32682  014604  28E3               	incf	plusw1,w,c
 32683  014606  A0D8               	btfss	status,0,c
 32684  014608  D019               	goto	l9201
 32685  01460A                     u7420:
 32686  01460A  0E00               	movlw	0
 32687  01460C  6E09               	movwf	(btemp+8)^0,c
 32688  01460E  0E00               	movlw	0
 32689  014610  6E0A               	movwf	(btemp+9)^0,c
 32690  014612  0E80               	movlw	128
 32691  014614  6E0B               	movwf	(btemp+10)^0,c
 32692  014616  0E7F               	movlw	127
 32693  014618  6E0C               	movwf	(btemp+11)^0,c
 32694                           
 32695                           ;stkvar	_prod @ sp[(-13)+0]
 32696  01461A  0EF3               	movlw	-13
 32697  01461C  0060  F027  FFE3   	movff	btemp+8,plusw1
 32698  014622  0EF4               	movlw	-12
 32699  014624  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32700  01462A  0EF5               	movlw	-11
 32701  01462C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32702  014632  0EF6               	movlw	-10
 32703  014634  0060  F033  FFE3   	movff	btemp+11,plusw1
 32704  01463A  D044               	goto	l9217
 32705  01463C                     l9201:
 32706                           
 32707                           ;stkvar	_temp @ sp[(-13)+8]
 32708  01463C  0EFC               	movlw	-4
 32709  01463E  BEE3               	btfsc	plusw1,7,c
 32710  014640  D007               	goto	u7430
 32711  014642  0EFC               	movlw	-4
 32712  014644  50E3               	movf	plusw1,w,c
 32713  014646  E10F               	bnz	l9207
 32714  014648  0EFB               	movlw	-5
 32715  01464A  04E3               	decf	plusw1,w,c
 32716  01464C  B0D8               	btfsc	status,0,c
 32717  01464E  D00B               	goto	l9207
 32718  014650                     u7430:
 32719                           
 32720                           ;stkvar	_prod @ sp[(-13)+0]
 32721  014650  0EF3               	movlw	-13
 32722  014652  6AE3               	clrf	plusw1,c
 32723  014654  0EF4               	movlw	-12
 32724  014656  6AE3               	clrf	plusw1,c
 32725  014658  0EF5               	movlw	-11
 32726  01465A  6AE3               	clrf	plusw1,c
 32727  01465C  0EF6               	movlw	-10
 32728  01465E  6AE3               	clrf	plusw1,c
 32729                           
 32730                           ;stkvar	_sign @ sp[(-13)+12]
 32731  014660  0EFF               	movlw	-1
 32732  014662  6AE3               	clrf	plusw1,c
 32733  014664  D02F               	goto	l9217
 32734  014666                     l9207:
 32735                           
 32736                           ;stkvar	_temp @ sp[(-13)+8]
 32737                           ;stkvar	_bexp @ sp[(-13)+10]
 32738  014666  0EFB               	movlw	-5
 32739  014668  006F FF8C  F001    	movff	plusw1,btemp
 32740  01466E  0EFD               	movlw	-3
 32741  014670  0060  F007  FFE3   	movff	btemp,plusw1
 32742                           
 32743                           ;stkvar	_prod @ sp[(-13)+0]
 32744  014676  50E1               	movf	fsr1l,w,c
 32745  014678  0FF3               	addlw	-13
 32746  01467A  6ED9               	movwf	fsr2l,c
 32747  01467C  50E2               	movf	fsr1h,w,c
 32748  01467E  6EDA               	movwf	fsr2h,c
 32749  014680  0EFF               	movlw	255
 32750  014682  22DA               	addwfc	fsr2h,f,c
 32751  014684  0EFF               	movlw	255
 32752  014686  16DE               	andwf	postinc2,f,c
 32753  014688  0EFF               	movlw	255
 32754  01468A  16DE               	andwf	postinc2,f,c
 32755  01468C  0E7F               	movlw	127
 32756  01468E  16DE               	andwf	postinc2,f,c
 32757  014690  0E00               	movlw	0
 32758  014692  16DE               	andwf	postinc2,f,c
 32759                           
 32760                           ;stkvar	_bexp @ sp[(-13)+10]
 32761  014694  0EFD               	movlw	-3
 32762  014696  A0E3               	btfss	plusw1,0,c
 32763  014698  D008               	goto	l9215
 32764                           
 32765                           ;stkvar	_prod @ sp[(-13)+0]
 32766  01469A  0EF5               	movlw	245
 32767  01469C  24E1               	addwf	fsr1l,w,c
 32768  01469E  6ED9               	movwf	fsr2l,c
 32769  0146A0  0EFF               	movlw	255
 32770  0146A2  20E2               	addwfc	fsr1h,w,c
 32771  0146A4  6EDA               	movwf	fsr2h,c
 32772  0146A6  0E00               	movlw	0
 32773  0146A8  8EDB               	bsf	plusw2,7,c
 32774  0146AA                     l9215:
 32775                           
 32776                           ;stkvar	_prod @ sp[(-13)+0]
 32777  0146AA  0EF6               	movlw	246
 32778  0146AC  24E1               	addwf	fsr1l,w,c
 32779  0146AE  6ED9               	movwf	fsr2l,c
 32780  0146B0  0EFF               	movlw	255
 32781  0146B2  20E2               	addwfc	fsr1h,w,c
 32782  0146B4  6EDA               	movwf	fsr2h,c
 32783                           
 32784                           ;stkvar	_bexp @ sp[(-13)+10]
 32785  0146B6  0EFD               	movlw	-3
 32786  0146B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 32787  0146BE  90D8               	bcf	status,0,c
 32788  0146C0  300C               	rrcf	(btemp+11)^0,w,c
 32789  0146C2  6EDF               	movwf	indf2,c
 32790  0146C4                     l9217:
 32791                           
 32792                           ;stkvar	_sign @ sp[(-13)+12]
 32793  0146C4  0EFF               	movlw	-1
 32794  0146C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 32795                           
 32796                           ;stkvar	_prod @ sp[(-13)+0]
 32797  0146CC  0EF6               	movlw	246
 32798  0146CE  24E1               	addwf	fsr1l,w,c
 32799  0146D0  6ED9               	movwf	fsr2l,c
 32800  0146D2  0EFF               	movlw	255
 32801  0146D4  20E2               	addwfc	fsr1h,w,c
 32802  0146D6  6EDA               	movwf	fsr2h,c
 32803  0146D8  500C               	movf	(btemp+11)^0,w,c
 32804  0146DA  12DF               	iorwf	indf2,f,c
 32805                           
 32806                           ;stkvar	_prod @ sp[(-13)+0]
 32807  0146DC  0EF3               	movlw	-13
 32808  0146DE  006F FF8C  F001    	movff	plusw1,btemp
 32809  0146E4  0EF4               	movlw	-12
 32810  0146E6  006F FF8C  F002    	movff	plusw1,btemp+1
 32811  0146EC  0EF5               	movlw	-11
 32812  0146EE  006F FF8C  F003    	movff	plusw1,btemp+2
 32813  0146F4  0EF6               	movlw	-10
 32814  0146F6  006F FF8C  F004    	movff	plusw1,btemp+3
 32815  0146FC                     l3274:
 32816                           
 32817                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 32818  0146FC  0EEB               	movlw	235
 32819  0146FE  26E1               	addwf	fsr1l,f,c
 32820  014700  0EFF               	movlw	255
 32821  014702  22E2               	addwfc	fsr1h,f,c
 32822  014704  0012               	return		;funcret
 32823  014706                     __end_of___flmul:
 32824                           	opt callstack 0
 32825                           
 32826 ;; *************** function _SYSTEM_Initialize *****************
 32827 ;; Defined at:
 32828 ;;		line 50 in file "mcc_generated_files/mcc.c"
 32829 ;; Parameters:    Size  Location     Type
 32830 ;;		None
 32831 ;; Auto vars:     Size  Location     Type
 32832 ;;		None
 32833 ;; Return value:  Size  Location     Type
 32834 ;;                  1  [STACK] void 
 32835 ;; Registers used:
 32836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 32837 ;; Tracked objects:
 32838 ;;		On entry : 0/0
 32839 ;;		On exit  : 3F/3C
 32840 ;;		Unchanged: 0/0
 32841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32846 ;;Total ram usage:        0 bytes
 32847 ;; Hardware stack levels used:    1
 32848 ;; Hardware stack levels required when called:   17
 32849 ;; This function calls:
 32850 ;;		_ADCC_Initialize
 32851 ;;		_CLKREF_Initialize
 32852 ;;		_CRC_Initialize
 32853 ;;		_DMA1_Initialize
 32854 ;;		_DMA2_Initialize
 32855 ;;		_EXT_INT_Initialize
 32856 ;;		_FVR_Initialize
 32857 ;;		_INTERRUPT_Initialize
 32858 ;;		_OSCILLATOR_Initialize
 32859 ;;		_PIN_MANAGER_Initialize
 32860 ;;		_PMD_Initialize
 32861 ;;		_PWM8_Initialize
 32862 ;;		_SPI1_Initialize
 32863 ;;		_TMR2_Initialize
 32864 ;;		_TMR3_Initialize
 32865 ;;		_TMR5_Initialize
 32866 ;;		_TMR6_Initialize
 32867 ;;		_UART1_Initialize
 32868 ;;		_UART2_Initialize
 32869 ;; This function is called by:
 32870 ;;		_main
 32871 ;; This function uses a reentrant model
 32872 ;;
 32873                           
 32874                           	psect	text127
 32875  01C4DC                     __ptext127:
 32876                           	opt callstack 0
 32877  01C4DC                     _SYSTEM_Initialize:
 32878                           	opt callstack 13
 32879                           
 32880                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 32881                           
 32882                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32883                           ;incstack = 0
 32884  01C4DC  EC9E  F0E0         	call	_INTERRUPT_Initialize	;wreg free
 32885                           
 32886                           ; BSR set to: 57
 32887                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 32888  01C4E0  EC2B  F0E9         	call	_PMD_Initialize	;wreg free
 32889                           
 32890                           ; BSR set to: 57
 32891                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 32892  01C4E4  ECC5  F0DC         	call	_PIN_MANAGER_Initialize	;wreg free
 32893                           
 32894                           ; BSR set to: 58
 32895                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 32896  01C4E8  EC20  F0E9         	call	_OSCILLATOR_Initialize	;wreg free
 32897                           
 32898                           ; BSR set to: 57
 32899                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 32900  01C4EC  ECBF  F0E9         	call	_FVR_Initialize	;wreg free
 32901                           
 32902                           ; BSR set to: 62
 32903                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 32904  01C4F0  EC0E  F0DD         	call	_CRC_Initialize	;wreg free
 32905                           
 32906                           ; BSR set to: 0
 32907                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 32908  01C4F4  ECCC  F0DF         	call	_ADCC_Initialize	;wreg free
 32909                           
 32910                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 32911  01C4F8  EC15  F0E9         	call	_PWM8_Initialize	;wreg free
 32912                           
 32913                           ; BSR set to: 63
 32914                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
 32915  01C4FC  ECF3  F0E8         	call	_TMR2_Initialize	;wreg free
 32916                           
 32917                           ; BSR set to: 57
 32918                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 32919  01C500  EC94  F0E5         	call	_EXT_INT_Initialize	;wreg free
 32920                           
 32921                           ; BSR set to: 57
 32922                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 32923  01C504  EC80  F0E6         	call	_TMR6_Initialize	;wreg free
 32924                           
 32925                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 32926  01C508  EC4D  F0E3         	call	_TMR3_Initialize	;wreg free
 32927                           
 32928                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 32929  01C50C  EC29  F0E3         	call	_TMR5_Initialize	;wreg free
 32930                           
 32931                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 32932  01C510  EC05  F0E3         	call	_UART1_Initialize	;wreg free
 32933                           
 32934                           ; BSR set to: 57
 32935                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 32936  01C514  EC65  F0E1         	call	_UART2_Initialize	;wreg free
 32937                           
 32938                           ; BSR set to: 57
 32939                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 32940  01C518  EC0A  F0E9         	call	_SPI1_Initialize	;wreg free
 32941                           
 32942                           ; BSR set to: 61
 32943                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 32944  01C51C  ECEF  F0E1         	call	_DMA2_Initialize	;wreg free
 32945                           
 32946                           ; BSR set to: 59
 32947                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 32948  01C520  EC97  F0DF         	call	_DMA1_Initialize	;wreg free
 32949                           
 32950                           ; BSR set to: 59
 32951                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 32952  01C524  EC93  F0E9         	call	_CLKREF_Initialize	;wreg free
 32953                           
 32954                           ; BSR set to: 60
 32955                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32956  01C528  0012               	return		;funcret
 32957  01C52A                     __end_of_SYSTEM_Initialize:
 32958                           	opt callstack 0
 32959                           
 32960 ;; *************** function _UART2_Initialize *****************
 32961 ;; Defined at:
 32962 ;;		line 78 in file "mcc_generated_files/uart2.c"
 32963 ;; Parameters:    Size  Location     Type
 32964 ;;		None
 32965 ;; Auto vars:     Size  Location     Type
 32966 ;;		None
 32967 ;; Return value:  Size  Location     Type
 32968 ;;                  1  [STACK] void 
 32969 ;; Registers used:
 32970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 32971 ;; Tracked objects:
 32972 ;;		On entry : 3F/39
 32973 ;;		On exit  : 3F/39
 32974 ;;		Unchanged: 0/0
 32975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32980 ;;Total ram usage:        0 bytes
 32981 ;; Hardware stack levels used:    1
 32982 ;; Hardware stack levels required when called:   16
 32983 ;; This function calls:
 32984 ;;		_UART2_SetRxInterruptHandler
 32985 ;;		_UART2_SetTxInterruptHandler
 32986 ;; This function is called by:
 32987 ;;		_SYSTEM_Initialize
 32988 ;; This function uses a reentrant model
 32989 ;;
 32990                           
 32991                           	psect	text128
 32992  01C2CA                     __ptext128:
 32993                           	opt callstack 0
 32994  01C2CA                     _UART2_Initialize:
 32995                           	opt callstack 13
 32996                           
 32997                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 32998                           
 32999                           ; BSR set to: 60
 33000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33001                           ;incstack = 0
 33002  01C2CA  0139               	movlb	57	; () banked
 33003  01C2CC  9596               	bcf	150,2,b	;volatile
 33004                           
 33005                           ; BSR set to: 57
 33006                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 33007  01C2CE  0EE2               	movlw	low _UART2_Receive_ISR
 33008  01C2D0  6EE6               	movwf	postinc1,c
 33009  01C2D2  0ED0               	movlw	high _UART2_Receive_ISR
 33010  01C2D4  6EE6               	movwf	postinc1,c
 33011  01C2D6  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 33012  01C2D8  6EE6               	movwf	postinc1,c
 33013  01C2DA  ECD1  F0E6         	call	_UART2_SetRxInterruptHandler	;wreg free
 33014                           
 33015                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 33016  01C2DE  0139               	movlb	57	; () banked
 33017  01C2E0  9796               	bcf	150,3,b	;volatile
 33018                           
 33019                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 33020  01C2E2  0ED4               	movlw	low _UART2_Transmit_ISR
 33021  01C2E4  6EE6               	movwf	postinc1,c
 33022  01C2E6  0ECC               	movlw	high _UART2_Transmit_ISR
 33023  01C2E8  6EE6               	movwf	postinc1,c
 33024  01C2EA  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 33025  01C2EC  6EE6               	movwf	postinc1,c
 33026  01C2EE  ECBD  F0E6         	call	_UART2_SetTxInterruptHandler	;wreg free
 33027                           
 33028                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 33029  01C2F2  013D               	movlb	61	; () banked
 33030  01C2F4  6BD4               	clrf	212,b	;volatile
 33031                           
 33032                           ; BSR set to: 61
 33033                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 33034  01C2F6  6BD6               	clrf	214,b	;volatile
 33035                           
 33036                           ; BSR set to: 61
 33037                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 33038  01C2F8  6BD8               	clrf	216,b	;volatile
 33039                           
 33040                           ; BSR set to: 61
 33041                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 33042  01C2FA  0EB0               	movlw	176
 33043  01C2FC  6FDA               	movwf	218,b	;volatile
 33044                           
 33045                           ; BSR set to: 61
 33046                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 33047  01C2FE  0E80               	movlw	128
 33048  01C300  6FDB               	movwf	219,b	;volatile
 33049                           
 33050                           ; BSR set to: 61
 33051                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 33052  01C302  6BDC               	clrf	220,b	;volatile
 33053                           
 33054                           ; BSR set to: 61
 33055                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 33056  01C304  0E82               	movlw	130
 33057  01C306  6FDD               	movwf	221,b	;volatile
 33058                           
 33059                           ; BSR set to: 61
 33060                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 33061  01C308  0E06               	movlw	6
 33062  01C30A  6FDE               	movwf	222,b	;volatile
 33063                           
 33064                           ; BSR set to: 61
 33065                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 33066  01C30C  6BDF               	clrf	223,b	;volatile
 33067                           
 33068                           ; BSR set to: 61
 33069                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 33070  01C30E  6BE0               	clrf	224,b	;volatile
 33071                           
 33072                           ; BSR set to: 61
 33073                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 33074  01C310  6BE1               	clrf	225,b	;volatile
 33075                           
 33076                           ; BSR set to: 61
 33077                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 33078  01C312  6BE2               	clrf	226,b	;volatile
 33079                           
 33080                           ; BSR set to: 61
 33081                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 33082  01C314  0100               	movlb	0	; () banked
 33083  01C316  6BA8               	clrf	_uart2TxHead& (0+255),b	;volatile
 33084                           
 33085                           ; BSR set to: 0
 33086                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 33087  01C318  6A46               	clrf	_uart2TxTail^0,c	;volatile
 33088                           
 33089                           ; BSR set to: 0
 33090                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 33091  01C31A  0E40               	movlw	64
 33092  01C31C  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 33093                           
 33094                           ; BSR set to: 0
 33095                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 33096  01C31E  6A44               	clrf	_uart2RxHead^0,c	;volatile
 33097                           
 33098                           ; BSR set to: 0
 33099                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 33100  01C320  6BA7               	clrf	_uart2RxTail& (0+255),b	;volatile
 33101                           
 33102                           ; BSR set to: 0
 33103                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 33104  01C322  6BA6               	clrf	_uart2RxCount& (0+255),b	;volatile
 33105                           
 33106                           ; BSR set to: 0
 33107                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 33108  01C324  0139               	movlb	57	; () banked
 33109  01C326  8596               	bsf	150,2,b	;volatile
 33110                           
 33111                           ; BSR set to: 57
 33112                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 33113  01C328  0012               	return		;funcret
 33114  01C32A                     __end_of_UART2_Initialize:
 33115                           	opt callstack 0
 33116                           
 33117 ;; *************** function _UART2_SetTxInterruptHandler *****************
 33118 ;; Defined at:
 33119 ;;		line 252 in file "mcc_generated_files/uart2.c"
 33120 ;; Parameters:    Size  Location     Type
 33121 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33122 ;;		 -> UART2_Transmit_ISR(1), 
 33123 ;; Auto vars:     Size  Location     Type
 33124 ;;		None
 33125 ;; Return value:  Size  Location     Type
 33126 ;;                  1  [STACK] void 
 33127 ;; Registers used:
 33128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33129 ;; Tracked objects:
 33130 ;;		On entry : 3F/39
 33131 ;;		On exit  : 0/0
 33132 ;;		Unchanged: 0/0
 33133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33138 ;;Total ram usage:        0 bytes
 33139 ;; Hardware stack levels used:    1
 33140 ;; Hardware stack levels required when called:   15
 33141 ;; This function calls:
 33142 ;;		Nothing
 33143 ;; This function is called by:
 33144 ;;		_UART2_Initialize
 33145 ;; This function uses a reentrant model
 33146 ;;
 33147                           
 33148                           	psect	text129
 33149  01CD7A                     __ptext129:
 33150                           	opt callstack 0
 33151  01CD7A                     _UART2_SetTxInterruptHandler:
 33152                           	opt callstack 13
 33153                           
 33154                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 33155                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33156                           
 33157                           ; BSR set to: 57
 33158                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33159                           ;incstack = 0
 33160  01CD7A  50E1               	movf	fsr1l,w,c
 33161  01CD7C  0FFD               	addlw	-3
 33162  01CD7E  6ED9               	movwf	fsr2l,c
 33163  01CD80  50E2               	movf	fsr1h,w,c
 33164  01CD82  6EDA               	movwf	fsr2h,c
 33165  01CD84  0EFF               	movlw	255
 33166  01CD86  22DA               	addwfc	fsr2h,f,c
 33167  01CD88  006F FF78  F08A    	movff	postinc2,_UART2_TxInterruptHandler
 33168  01CD8E  006F FF78  F08B    	movff	postinc2,_UART2_TxInterruptHandler+1
 33169  01CD94  006F FF74  F08C    	movff	postdec2,_UART2_TxInterruptHandler+2
 33170                           
 33171                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33172  01CD9A  52E5               	movf	postdec1,f,c
 33173  01CD9C  52E5               	movf	postdec1,f,c
 33174  01CD9E  52E5               	movf	postdec1,f,c
 33175  01CDA0  0012               	return		;funcret
 33176  01CDA2                     __end_of_UART2_SetTxInterruptHandler:
 33177                           	opt callstack 0
 33178                           
 33179 ;; *************** function _UART2_SetRxInterruptHandler *****************
 33180 ;; Defined at:
 33181 ;;		line 248 in file "mcc_generated_files/uart2.c"
 33182 ;; Parameters:    Size  Location     Type
 33183 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33184 ;;		 -> UART2_Receive_ISR(1), 
 33185 ;; Auto vars:     Size  Location     Type
 33186 ;;		None
 33187 ;; Return value:  Size  Location     Type
 33188 ;;                  1  [STACK] void 
 33189 ;; Registers used:
 33190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33191 ;; Tracked objects:
 33192 ;;		On entry : 3F/39
 33193 ;;		On exit  : 0/0
 33194 ;;		Unchanged: 0/0
 33195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33200 ;;Total ram usage:        0 bytes
 33201 ;; Hardware stack levels used:    1
 33202 ;; Hardware stack levels required when called:   15
 33203 ;; This function calls:
 33204 ;;		Nothing
 33205 ;; This function is called by:
 33206 ;;		_UART2_Initialize
 33207 ;; This function uses a reentrant model
 33208 ;;
 33209                           
 33210                           	psect	text130
 33211  01CDA2                     __ptext130:
 33212                           	opt callstack 0
 33213  01CDA2                     _UART2_SetRxInterruptHandler:
 33214                           	opt callstack 13
 33215                           
 33216                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 33217                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33218                           
 33219                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33220                           ;incstack = 0
 33221  01CDA2  50E1               	movf	fsr1l,w,c
 33222  01CDA4  0FFD               	addlw	-3
 33223  01CDA6  6ED9               	movwf	fsr2l,c
 33224  01CDA8  50E2               	movf	fsr1h,w,c
 33225  01CDAA  6EDA               	movwf	fsr2h,c
 33226  01CDAC  0EFF               	movlw	255
 33227  01CDAE  22DA               	addwfc	fsr2h,f,c
 33228  01CDB0  006F FF78  F08D    	movff	postinc2,_UART2_RxInterruptHandler
 33229  01CDB6  006F FF78  F08E    	movff	postinc2,_UART2_RxInterruptHandler+1
 33230  01CDBC  006F FF74  F08F    	movff	postdec2,_UART2_RxInterruptHandler+2
 33231                           
 33232                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33233  01CDC2  52E5               	movf	postdec1,f,c
 33234  01CDC4  52E5               	movf	postdec1,f,c
 33235  01CDC6  52E5               	movf	postdec1,f,c
 33236  01CDC8  0012               	return		;funcret
 33237  01CDCA                     __end_of_UART2_SetRxInterruptHandler:
 33238                           	opt callstack 0
 33239                           
 33240 ;; *************** function _UART1_Initialize *****************
 33241 ;; Defined at:
 33242 ;;		line 75 in file "mcc_generated_files/uart1.c"
 33243 ;; Parameters:    Size  Location     Type
 33244 ;;		None
 33245 ;; Auto vars:     Size  Location     Type
 33246 ;;		None
 33247 ;; Return value:  Size  Location     Type
 33248 ;;                  1  [STACK] void 
 33249 ;; Registers used:
 33250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33251 ;; Tracked objects:
 33252 ;;		On entry : 0/39
 33253 ;;		On exit  : 3F/39
 33254 ;;		Unchanged: 0/0
 33255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33260 ;;Total ram usage:        0 bytes
 33261 ;; Hardware stack levels used:    1
 33262 ;; Hardware stack levels required when called:   16
 33263 ;; This function calls:
 33264 ;;		_UART1_SetRxInterruptHandler
 33265 ;; This function is called by:
 33266 ;;		_SYSTEM_Initialize
 33267 ;; This function uses a reentrant model
 33268 ;;
 33269                           
 33270                           	psect	text131
 33271  01C60A                     __ptext131:
 33272                           	opt callstack 0
 33273  01C60A                     _UART1_Initialize:
 33274                           	opt callstack 13
 33275                           
 33276                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 33277                           
 33278                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33279                           ;incstack = 0
 33280  01C60A  0139               	movlb	57	; () banked
 33281  01C60C  9793               	bcf	147,3,b	;volatile
 33282                           
 33283                           ; BSR set to: 57
 33284                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 33285  01C60E  0EA0               	movlw	low _UART1_Receive_ISR
 33286  01C610  6EE6               	movwf	postinc1,c
 33287  01C612  0ED0               	movlw	high _UART1_Receive_ISR
 33288  01C614  6EE6               	movwf	postinc1,c
 33289  01C616  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 33290  01C618  6EE6               	movwf	postinc1,c
 33291  01C61A  ECE5  F0E6         	call	_UART1_SetRxInterruptHandler	;wreg free
 33292                           
 33293                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 33294  01C61E  013D               	movlb	61	; () banked
 33295  01C620  6BEC               	clrf	236,b	;volatile
 33296                           
 33297                           ; BSR set to: 61
 33298                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 33299  01C622  6BED               	clrf	237,b	;volatile
 33300                           
 33301                           ; BSR set to: 61
 33302                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 33303  01C624  6BEE               	clrf	238,b	;volatile
 33304                           
 33305                           ; BSR set to: 61
 33306                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 33307  01C626  6BEF               	clrf	239,b	;volatile
 33308                           
 33309                           ; BSR set to: 61
 33310                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 33311  01C628  6BF0               	clrf	240,b	;volatile
 33312                           
 33313                           ; BSR set to: 61
 33314                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 33315  01C62A  6BF1               	clrf	241,b	;volatile
 33316                           
 33317                           ; BSR set to: 61
 33318                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 33319  01C62C  0EB0               	movlw	176
 33320  01C62E  6FF2               	movwf	242,b	;volatile
 33321                           
 33322                           ; BSR set to: 61
 33323                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 33324  01C630  0E80               	movlw	128
 33325  01C632  6FF3               	movwf	243,b	;volatile
 33326                           
 33327                           ; BSR set to: 61
 33328                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 33329  01C634  6BF4               	clrf	244,b	;volatile
 33330                           
 33331                           ; BSR set to: 61
 33332                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 33333  01C636  0E8A               	movlw	138
 33334  01C638  6FF5               	movwf	245,b	;volatile
 33335                           
 33336                           ; BSR set to: 61
 33337                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 33338  01C63A  6BF6               	clrf	246,b	;volatile
 33339                           
 33340                           ; BSR set to: 61
 33341                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 33342  01C63C  6BF7               	clrf	247,b	;volatile
 33343                           
 33344                           ; BSR set to: 61
 33345                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 33346  01C63E  6BF8               	clrf	248,b	;volatile
 33347                           
 33348                           ; BSR set to: 61
 33349                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 33350  01C640  6BF9               	clrf	249,b	;volatile
 33351                           
 33352                           ; BSR set to: 61
 33353                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 33354  01C642  6BFA               	clrf	250,b	;volatile
 33355                           
 33356                           ; BSR set to: 61
 33357                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 33358  01C644  6A47               	clrf	_uart1RxHead^0,c	;volatile
 33359                           
 33360                           ; BSR set to: 61
 33361                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 33362  01C646  0100               	movlb	0	; () banked
 33363  01C648  6BAA               	clrf	_uart1RxTail& (0+255),b	;volatile
 33364                           
 33365                           ; BSR set to: 0
 33366                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 33367  01C64A  6BA9               	clrf	_uart1RxCount& (0+255),b	;volatile
 33368                           
 33369                           ; BSR set to: 0
 33370                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 33371  01C64C  0139               	movlb	57	; () banked
 33372  01C64E  8793               	bsf	147,3,b	;volatile
 33373                           
 33374                           ; BSR set to: 57
 33375                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 33376  01C650  0012               	return		;funcret
 33377  01C652                     __end_of_UART1_Initialize:
 33378                           	opt callstack 0
 33379                           
 33380 ;; *************** function _UART1_SetRxInterruptHandler *****************
 33381 ;; Defined at:
 33382 ;;		line 207 in file "mcc_generated_files/uart1.c"
 33383 ;; Parameters:    Size  Location     Type
 33384 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33385 ;;		 -> UART1_Receive_ISR(1), 
 33386 ;; Auto vars:     Size  Location     Type
 33387 ;;		None
 33388 ;; Return value:  Size  Location     Type
 33389 ;;                  1  [STACK] void 
 33390 ;; Registers used:
 33391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33392 ;; Tracked objects:
 33393 ;;		On entry : 3F/39
 33394 ;;		On exit  : 0/0
 33395 ;;		Unchanged: 0/0
 33396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33401 ;;Total ram usage:        0 bytes
 33402 ;; Hardware stack levels used:    1
 33403 ;; Hardware stack levels required when called:   15
 33404 ;; This function calls:
 33405 ;;		Nothing
 33406 ;; This function is called by:
 33407 ;;		_UART1_Initialize
 33408 ;; This function uses a reentrant model
 33409 ;;
 33410                           
 33411                           	psect	text132
 33412  01CDCA                     __ptext132:
 33413                           	opt callstack 0
 33414  01CDCA                     _UART1_SetRxInterruptHandler:
 33415                           	opt callstack 13
 33416                           
 33417                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 33418                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33419                           
 33420                           ; BSR set to: 57
 33421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33422                           ;incstack = 0
 33423  01CDCA  50E1               	movf	fsr1l,w,c
 33424  01CDCC  0FFD               	addlw	-3
 33425  01CDCE  6ED9               	movwf	fsr2l,c
 33426  01CDD0  50E2               	movf	fsr1h,w,c
 33427  01CDD2  6EDA               	movwf	fsr2h,c
 33428  01CDD4  0EFF               	movlw	255
 33429  01CDD6  22DA               	addwfc	fsr2h,f,c
 33430  01CDD8  006F FF78  F087    	movff	postinc2,_UART1_RxInterruptHandler
 33431  01CDDE  006F FF78  F088    	movff	postinc2,_UART1_RxInterruptHandler+1
 33432  01CDE4  006F FF74  F089    	movff	postdec2,_UART1_RxInterruptHandler+2
 33433                           
 33434                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 33435  01CDEA  52E5               	movf	postdec1,f,c
 33436  01CDEC  52E5               	movf	postdec1,f,c
 33437  01CDEE  52E5               	movf	postdec1,f,c
 33438  01CDF0  0012               	return		;funcret
 33439  01CDF2                     __end_of_UART1_SetRxInterruptHandler:
 33440                           	opt callstack 0
 33441                           
 33442 ;; *************** function _TMR6_Initialize *****************
 33443 ;; Defined at:
 33444 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 33445 ;; Parameters:    Size  Location     Type
 33446 ;;		None
 33447 ;; Auto vars:     Size  Location     Type
 33448 ;;		None
 33449 ;; Return value:  Size  Location     Type
 33450 ;;                  1  [STACK] void 
 33451 ;; Registers used:
 33452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 33453 ;; Tracked objects:
 33454 ;;		On entry : 3F/39
 33455 ;;		On exit  : 0/0
 33456 ;;		Unchanged: 0/0
 33457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33462 ;;Total ram usage:        0 bytes
 33463 ;; Hardware stack levels used:    1
 33464 ;; Hardware stack levels required when called:   16
 33465 ;; This function calls:
 33466 ;;		_TMR6_SetInterruptHandler
 33467 ;; This function is called by:
 33468 ;;		_SYSTEM_Initialize
 33469 ;; This function uses a reentrant model
 33470 ;;
 33471                           
 33472                           	psect	text133
 33473  01CD00                     __ptext133:
 33474                           	opt callstack 0
 33475  01CD00                     _TMR6_Initialize:
 33476                           	opt callstack 13
 33477                           
 33478                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 33479                           
 33480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33481                           ;incstack = 0
 33482  01CD00  0E01               	movlw	1
 33483  01CD02  6E96               	movwf	150,c	;volatile
 33484                           
 33485                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 33486  01CD04  6A95               	clrf	149,c	;volatile
 33487                           
 33488                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 33489  01CD06  6A97               	clrf	151,c	;volatile
 33490                           
 33491                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 33492  01CD08  0E7C               	movlw	124
 33493  01CD0A  6E93               	movwf	147,c	;volatile
 33494                           
 33495                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 33496  01CD0C  6A92               	clrf	146,c	;volatile
 33497                           
 33498                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 33499  01CD0E  0139               	movlb	57	; () banked
 33500  01CD10  91A9               	bcf	169,0,b	;volatile
 33501                           
 33502                           ; BSR set to: 57
 33503                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 33504  01CD12  8199               	bsf	153,0,b	;volatile
 33505                           
 33506                           ; BSR set to: 57
 33507                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 33508  01CD14  0E2A               	movlw	low _TMR6_DefaultInterruptHandler
 33509  01CD16  6EE6               	movwf	postinc1,c
 33510  01CD18  0EC5               	movlw	high _TMR6_DefaultInterruptHandler
 33511  01CD1A  6EE6               	movwf	postinc1,c
 33512  01CD1C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 33513  01CD1E  6EE6               	movwf	postinc1,c
 33514  01CD20  ECF9  F0E6         	call	_TMR6_SetInterruptHandler	;wreg free
 33515                           
 33516                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 33517  01CD24  0EE0               	movlw	224
 33518  01CD26  6E94               	movwf	148,c	;volatile
 33519                           
 33520                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33521  01CD28  0012               	return		;funcret
 33522  01CD2A                     __end_of_TMR6_Initialize:
 33523                           	opt callstack 0
 33524                           
 33525 ;; *************** function _TMR6_SetInterruptHandler *****************
 33526 ;; Defined at:
 33527 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 33528 ;; Parameters:    Size  Location     Type
 33529 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33530 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 33531 ;; Auto vars:     Size  Location     Type
 33532 ;;		None
 33533 ;; Return value:  Size  Location     Type
 33534 ;;                  1  [STACK] void 
 33535 ;; Registers used:
 33536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33537 ;; Tracked objects:
 33538 ;;		On entry : 3F/39
 33539 ;;		On exit  : 0/0
 33540 ;;		Unchanged: 0/0
 33541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33546 ;;Total ram usage:        0 bytes
 33547 ;; Hardware stack levels used:    1
 33548 ;; Hardware stack levels required when called:   15
 33549 ;; This function calls:
 33550 ;;		Nothing
 33551 ;; This function is called by:
 33552 ;;		_TMR6_Initialize
 33553 ;; This function uses a reentrant model
 33554 ;;
 33555                           
 33556                           	psect	text134
 33557  01CDF2                     __ptext134:
 33558                           	opt callstack 0
 33559  01CDF2                     _TMR6_SetInterruptHandler:
 33560                           	opt callstack 13
 33561                           
 33562                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 33563                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33564                           
 33565                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33566                           ;incstack = 0
 33567  01CDF2  50E1               	movf	fsr1l,w,c
 33568  01CDF4  0FFD               	addlw	-3
 33569  01CDF6  6ED9               	movwf	fsr2l,c
 33570  01CDF8  50E2               	movf	fsr1h,w,c
 33571  01CDFA  6EDA               	movwf	fsr2h,c
 33572  01CDFC  0EFF               	movlw	255
 33573  01CDFE  22DA               	addwfc	fsr2h,f,c
 33574  01CE00  006F FF78  F07E    	movff	postinc2,_TMR6_InterruptHandler
 33575  01CE06  006F FF78  F07F    	movff	postinc2,_TMR6_InterruptHandler+1
 33576  01CE0C  006F FF74  F080    	movff	postdec2,_TMR6_InterruptHandler+2
 33577                           
 33578                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33579  01CE12  52E5               	movf	postdec1,f,c
 33580  01CE14  52E5               	movf	postdec1,f,c
 33581  01CE16  52E5               	movf	postdec1,f,c
 33582  01CE18  0012               	return		;funcret
 33583  01CE1A                     __end_of_TMR6_SetInterruptHandler:
 33584                           	opt callstack 0
 33585                           
 33586 ;; *************** function _TMR5_Initialize *****************
 33587 ;; Defined at:
 33588 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 33589 ;; Parameters:    Size  Location     Type
 33590 ;;		None
 33591 ;; Auto vars:     Size  Location     Type
 33592 ;;		None
 33593 ;; Return value:  Size  Location     Type
 33594 ;;                  1  [STACK] void 
 33595 ;; Registers used:
 33596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 33597 ;; Tracked objects:
 33598 ;;		On entry : 0/39
 33599 ;;		On exit  : 0/0
 33600 ;;		Unchanged: 0/0
 33601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33606 ;;Total ram usage:        0 bytes
 33607 ;; Hardware stack levels used:    1
 33608 ;; Hardware stack levels required when called:   16
 33609 ;; This function calls:
 33610 ;;		_TMR5_SetInterruptHandler
 33611 ;; This function is called by:
 33612 ;;		_SYSTEM_Initialize
 33613 ;; This function uses a reentrant model
 33614 ;;
 33615                           
 33616                           	psect	text135
 33617  01C652                     __ptext135:
 33618                           	opt callstack 0
 33619  01C652                     _TMR5_Initialize:
 33620                           	opt callstack 13
 33621                           
 33622                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 33623                           
 33624                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33625                           ;incstack = 0
 33626  01C652  6A9B               	clrf	155,c	;volatile
 33627                           
 33628                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 33629  01C654  6A9C               	clrf	156,c	;volatile
 33630                           
 33631                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 33632  01C656  0E01               	movlw	1
 33633  01C658  6E9D               	movwf	157,c	;volatile
 33634                           
 33635                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 33636  01C65A  0E63               	movlw	99
 33637  01C65C  6E99               	movwf	153,c	;volatile
 33638                           
 33639                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 33640  01C65E  0EC0               	movlw	192
 33641  01C660  6E98               	movwf	152,c	;volatile
 33642                           
 33643                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 33644  01C662  5098               	movf	152,w,c	;volatile
 33645  01C664  006F FE64  F001    	movff	16281,btemp	;volatile
 33646  01C66A  6A02               	clrf	(btemp+1)^0,c
 33647  01C66C  0060  F004  F002   	movff	btemp,btemp+1
 33648  01C672  6A01               	clrf	btemp^0,c
 33649  01C674  1001               	iorwf	btemp^0,w,c
 33650  01C676  0100               	movlb	0	; () banked
 33651  01C678  6F9E               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 33652  01C67A  5002               	movf	(btemp+1)^0,w,c
 33653  01C67C  6F9F               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 33654                           
 33655                           ; BSR set to: 0
 33656                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 33657  01C67E  0139               	movlb	57	; () banked
 33658  01C680  9DA8               	bcf	168,6,b	;volatile
 33659                           
 33660                           ; BSR set to: 57
 33661                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 33662  01C682  8D98               	bsf	152,6,b	;volatile
 33663                           
 33664                           ; BSR set to: 57
 33665                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 33666  01C684  0E1E               	movlw	low _TMR5_DefaultInterruptHandler
 33667  01C686  6EE6               	movwf	postinc1,c
 33668  01C688  0ECA               	movlw	high _TMR5_DefaultInterruptHandler
 33669  01C68A  6EE6               	movwf	postinc1,c
 33670  01C68C  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 33671  01C68E  6EE6               	movwf	postinc1,c
 33672  01C690  EC0D  F0E7         	call	_TMR5_SetInterruptHandler	;wreg free
 33673                           
 33674                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 33675  01C694  0E31               	movlw	49
 33676  01C696  6E9A               	movwf	154,c	;volatile
 33677                           
 33678                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33679  01C698  0012               	return		;funcret
 33680  01C69A                     __end_of_TMR5_Initialize:
 33681                           	opt callstack 0
 33682                           
 33683 ;; *************** function _TMR5_SetInterruptHandler *****************
 33684 ;; Defined at:
 33685 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 33686 ;; Parameters:    Size  Location     Type
 33687 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33688 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 33689 ;; Auto vars:     Size  Location     Type
 33690 ;;		None
 33691 ;; Return value:  Size  Location     Type
 33692 ;;                  1  [STACK] void 
 33693 ;; Registers used:
 33694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33695 ;; Tracked objects:
 33696 ;;		On entry : 3F/39
 33697 ;;		On exit  : 0/0
 33698 ;;		Unchanged: 0/0
 33699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33704 ;;Total ram usage:        0 bytes
 33705 ;; Hardware stack levels used:    1
 33706 ;; Hardware stack levels required when called:   15
 33707 ;; This function calls:
 33708 ;;		Nothing
 33709 ;; This function is called by:
 33710 ;;		_TMR5_Initialize
 33711 ;; This function uses a reentrant model
 33712 ;;
 33713                           
 33714                           	psect	text136
 33715  01CE1A                     __ptext136:
 33716                           	opt callstack 0
 33717  01CE1A                     _TMR5_SetInterruptHandler:
 33718                           	opt callstack 13
 33719                           
 33720                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 33721                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33722                           
 33723                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33724                           ;incstack = 0
 33725  01CE1A  50E1               	movf	fsr1l,w,c
 33726  01CE1C  0FFD               	addlw	-3
 33727  01CE1E  6ED9               	movwf	fsr2l,c
 33728  01CE20  50E2               	movf	fsr1h,w,c
 33729  01CE22  6EDA               	movwf	fsr2h,c
 33730  01CE24  0EFF               	movlw	255
 33731  01CE26  22DA               	addwfc	fsr2h,f,c
 33732  01CE28  006F FF78  F07B    	movff	postinc2,_TMR5_InterruptHandler
 33733  01CE2E  006F FF78  F07C    	movff	postinc2,_TMR5_InterruptHandler+1
 33734  01CE34  006F FF74  F07D    	movff	postdec2,_TMR5_InterruptHandler+2
 33735                           
 33736                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33737  01CE3A  52E5               	movf	postdec1,f,c
 33738  01CE3C  52E5               	movf	postdec1,f,c
 33739  01CE3E  52E5               	movf	postdec1,f,c
 33740  01CE40  0012               	return		;funcret
 33741  01CE42                     __end_of_TMR5_SetInterruptHandler:
 33742                           	opt callstack 0
 33743                           
 33744 ;; *************** function _TMR3_Initialize *****************
 33745 ;; Defined at:
 33746 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 33747 ;; Parameters:    Size  Location     Type
 33748 ;;		None
 33749 ;; Auto vars:     Size  Location     Type
 33750 ;;		None
 33751 ;; Return value:  Size  Location     Type
 33752 ;;                  1  [STACK] void 
 33753 ;; Registers used:
 33754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 33755 ;; Tracked objects:
 33756 ;;		On entry : 0/39
 33757 ;;		On exit  : 0/0
 33758 ;;		Unchanged: 0/0
 33759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33764 ;;Total ram usage:        0 bytes
 33765 ;; Hardware stack levels used:    1
 33766 ;; Hardware stack levels required when called:   16
 33767 ;; This function calls:
 33768 ;;		_TMR3_SetInterruptHandler
 33769 ;; This function is called by:
 33770 ;;		_SYSTEM_Initialize
 33771 ;; This function uses a reentrant model
 33772 ;;
 33773                           
 33774                           	psect	text137
 33775  01C69A                     __ptext137:
 33776                           	opt callstack 0
 33777  01C69A                     _TMR3_Initialize:
 33778                           	opt callstack 13
 33779                           
 33780                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 33781                           
 33782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33783                           ;incstack = 0
 33784  01C69A  6AA7               	clrf	167,c	;volatile
 33785                           
 33786                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 33787  01C69C  6AA8               	clrf	168,c	;volatile
 33788                           
 33789                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 33790  01C69E  0E01               	movlw	1
 33791  01C6A0  6EA9               	movwf	169,c	;volatile
 33792                           
 33793                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 33794  01C6A2  0E3C               	movlw	60
 33795  01C6A4  6EA5               	movwf	165,c	;volatile
 33796                           
 33797                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 33798  01C6A6  0EB0               	movlw	176
 33799  01C6A8  6EA4               	movwf	164,c	;volatile
 33800                           
 33801                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 33802  01C6AA  50A4               	movf	164,w,c	;volatile
 33803  01C6AC  006F FE94  F001    	movff	16293,btemp	;volatile
 33804  01C6B2  6A02               	clrf	(btemp+1)^0,c
 33805  01C6B4  0060  F004  F002   	movff	btemp,btemp+1
 33806  01C6BA  6A01               	clrf	btemp^0,c
 33807  01C6BC  1001               	iorwf	btemp^0,w,c
 33808  01C6BE  0100               	movlb	0	; () banked
 33809  01C6C0  6F9A               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 33810  01C6C2  5002               	movf	(btemp+1)^0,w,c
 33811  01C6C4  6F9B               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 33812                           
 33813                           ; BSR set to: 0
 33814                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 33815  01C6C6  0139               	movlb	57	; () banked
 33816  01C6C8  9DA6               	bcf	166,6,b	;volatile
 33817                           
 33818                           ; BSR set to: 57
 33819                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 33820  01C6CA  8D96               	bsf	150,6,b	;volatile
 33821                           
 33822                           ; BSR set to: 57
 33823                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 33824  01C6CC  0EAC               	movlw	low _TMR3_DefaultInterruptHandler
 33825  01C6CE  6EE6               	movwf	postinc1,c
 33826  01C6D0  0ED3               	movlw	high _TMR3_DefaultInterruptHandler
 33827  01C6D2  6EE6               	movwf	postinc1,c
 33828  01C6D4  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 33829  01C6D6  6EE6               	movwf	postinc1,c
 33830  01C6D8  EC21  F0E7         	call	_TMR3_SetInterruptHandler	;wreg free
 33831                           
 33832                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 33833  01C6DC  0E31               	movlw	49
 33834  01C6DE  6EA6               	movwf	166,c	;volatile
 33835                           
 33836                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33837  01C6E0  0012               	return		;funcret
 33838  01C6E2                     __end_of_TMR3_Initialize:
 33839                           	opt callstack 0
 33840                           
 33841 ;; *************** function _TMR3_SetInterruptHandler *****************
 33842 ;; Defined at:
 33843 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 33844 ;; Parameters:    Size  Location     Type
 33845 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33846 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 33847 ;; Auto vars:     Size  Location     Type
 33848 ;;		None
 33849 ;; Return value:  Size  Location     Type
 33850 ;;                  1  [STACK] void 
 33851 ;; Registers used:
 33852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33853 ;; Tracked objects:
 33854 ;;		On entry : 0/0
 33855 ;;		On exit  : 0/0
 33856 ;;		Unchanged: 0/0
 33857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33862 ;;Total ram usage:        0 bytes
 33863 ;; Hardware stack levels used:    1
 33864 ;; Hardware stack levels required when called:   15
 33865 ;; This function calls:
 33866 ;;		Nothing
 33867 ;; This function is called by:
 33868 ;;		_TMR3_Initialize
 33869 ;;		_init_bsoc
 33870 ;; This function uses a reentrant model
 33871 ;;
 33872                           
 33873                           	psect	text138
 33874  01CE42                     __ptext138:
 33875                           	opt callstack 0
 33876  01CE42                     _TMR3_SetInterruptHandler:
 33877                           	opt callstack 14
 33878                           
 33879                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 33880                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33881                           
 33882                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33883                           ;incstack = 0
 33884  01CE42  50E1               	movf	fsr1l,w,c
 33885  01CE44  0FFD               	addlw	-3
 33886  01CE46  6ED9               	movwf	fsr2l,c
 33887  01CE48  50E2               	movf	fsr1h,w,c
 33888  01CE4A  6EDA               	movwf	fsr2h,c
 33889  01CE4C  0EFF               	movlw	255
 33890  01CE4E  22DA               	addwfc	fsr2h,f,c
 33891  01CE50  006F FF78  F078    	movff	postinc2,_TMR3_InterruptHandler
 33892  01CE56  006F FF78  F079    	movff	postinc2,_TMR3_InterruptHandler+1
 33893  01CE5C  006F FF74  F07A    	movff	postdec2,_TMR3_InterruptHandler+2
 33894                           
 33895                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33896  01CE62  52E5               	movf	postdec1,f,c
 33897  01CE64  52E5               	movf	postdec1,f,c
 33898  01CE66  52E5               	movf	postdec1,f,c
 33899  01CE68  0012               	return		;funcret
 33900  01CE6A                     __end_of_TMR3_SetInterruptHandler:
 33901                           	opt callstack 0
 33902                           
 33903 ;; *************** function _TMR2_Initialize *****************
 33904 ;; Defined at:
 33905 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 33906 ;; Parameters:    Size  Location     Type
 33907 ;;		None
 33908 ;; Auto vars:     Size  Location     Type
 33909 ;;		None
 33910 ;; Return value:  Size  Location     Type
 33911 ;;                  1  [STACK] void 
 33912 ;; Registers used:
 33913 ;;		wreg, status,2
 33914 ;; Tracked objects:
 33915 ;;		On entry : 3F/3F
 33916 ;;		On exit  : 3F/39
 33917 ;;		Unchanged: 0/0
 33918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33923 ;;Total ram usage:        0 bytes
 33924 ;; Hardware stack levels used:    1
 33925 ;; Hardware stack levels required when called:   15
 33926 ;; This function calls:
 33927 ;;		Nothing
 33928 ;; This function is called by:
 33929 ;;		_SYSTEM_Initialize
 33930 ;; This function uses a reentrant model
 33931 ;;
 33932                           
 33933                           	psect	text139
 33934  01D1E6                     __ptext139:
 33935                           	opt callstack 0
 33936  01D1E6                     _TMR2_Initialize:
 33937                           	opt callstack 14
 33938                           
 33939                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 33940                           
 33941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33942                           ;incstack = 0
 33943  01D1E6  0E01               	movlw	1
 33944  01D1E8  6EAE               	movwf	174,c	;volatile
 33945                           
 33946                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 33947  01D1EA  6AAD               	clrf	173,c	;volatile
 33948                           
 33949                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 33950  01D1EC  6AAF               	clrf	175,c	;volatile
 33951                           
 33952                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 33953  01D1EE  0E63               	movlw	99
 33954  01D1F0  6EAB               	movwf	171,c	;volatile
 33955                           
 33956                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 33957  01D1F2  6AAA               	clrf	170,c	;volatile
 33958                           
 33959                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 33960  01D1F4  0139               	movlb	57	; () banked
 33961  01D1F6  95A4               	bcf	164,2,b	;volatile
 33962                           
 33963                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 33964  01D1F8  0EC0               	movlw	192
 33965  01D1FA  6EAC               	movwf	172,c	;volatile
 33966                           
 33967                           ; BSR set to: 57
 33968                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33969  01D1FC  0012               	return		;funcret
 33970  01D1FE                     __end_of_TMR2_Initialize:
 33971                           	opt callstack 0
 33972                           
 33973 ;; *************** function _SPI1_Initialize *****************
 33974 ;; Defined at:
 33975 ;;		line 64 in file "mcc_generated_files/spi1.c"
 33976 ;; Parameters:    Size  Location     Type
 33977 ;;		None
 33978 ;; Auto vars:     Size  Location     Type
 33979 ;;		None
 33980 ;; Return value:  Size  Location     Type
 33981 ;;                  1  [STACK] void 
 33982 ;; Registers used:
 33983 ;;		wreg, status,2
 33984 ;; Tracked objects:
 33985 ;;		On entry : 3F/39
 33986 ;;		On exit  : 3F/3D
 33987 ;;		Unchanged: 0/0
 33988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33993 ;;Total ram usage:        0 bytes
 33994 ;; Hardware stack levels used:    1
 33995 ;; Hardware stack levels required when called:   15
 33996 ;; This function calls:
 33997 ;;		Nothing
 33998 ;; This function is called by:
 33999 ;;		_SYSTEM_Initialize
 34000 ;; This function uses a reentrant model
 34001 ;;
 34002                           
 34003                           	psect	text140
 34004  01D214                     __ptext140:
 34005                           	opt callstack 0
 34006  01D214                     _SPI1_Initialize:
 34007                           	opt callstack 14
 34008                           
 34009                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 34010                           
 34011                           ; BSR set to: 57
 34012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34013                           ;incstack = 0
 34014  01D214  0E40               	movlw	64
 34015  01D216  013D               	movlb	61	; () banked
 34016  01D218  6F15               	movwf	21,b	;volatile
 34017                           
 34018                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 34019  01D21A  0E03               	movlw	3
 34020  01D21C  6F16               	movwf	22,b	;volatile
 34021                           
 34022                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 34023  01D21E  0E4F               	movlw	79
 34024  01D220  6F19               	movwf	25,b	;volatile
 34025                           
 34026                           ; BSR set to: 61
 34027                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 34028  01D222  6B1C               	clrf	28,b	;volatile
 34029                           
 34030                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 34031  01D224  0E83               	movlw	131
 34032  01D226  6F14               	movwf	20,b	;volatile
 34033                           
 34034                           ; BSR set to: 61
 34035                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34036  01D228  0012               	return		;funcret
 34037  01D22A                     __end_of_SPI1_Initialize:
 34038                           	opt callstack 0
 34039                           
 34040 ;; *************** function _PWM8_Initialize *****************
 34041 ;; Defined at:
 34042 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 34043 ;; Parameters:    Size  Location     Type
 34044 ;;		None
 34045 ;; Auto vars:     Size  Location     Type
 34046 ;;		None
 34047 ;; Return value:  Size  Location     Type
 34048 ;;                  1  [STACK] void 
 34049 ;; Registers used:
 34050 ;;		wreg, status,2
 34051 ;; Tracked objects:
 34052 ;;		On entry : 0/0
 34053 ;;		On exit  : 3F/3F
 34054 ;;		Unchanged: 0/0
 34055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34060 ;;Total ram usage:        0 bytes
 34061 ;; Hardware stack levels used:    1
 34062 ;; Hardware stack levels required when called:   15
 34063 ;; This function calls:
 34064 ;;		Nothing
 34065 ;; This function is called by:
 34066 ;;		_SYSTEM_Initialize
 34067 ;; This function uses a reentrant model
 34068 ;;
 34069                           
 34070                           	psect	text141
 34071  01D22A                     __ptext141:
 34072                           	opt callstack 0
 34073  01D22A                     _PWM8_Initialize:
 34074                           	opt callstack 14
 34075                           
 34076                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 34077                           
 34078                           ; BSR set to: 61
 34079                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34080                           ;incstack = 0
 34081  01D22A  0E80               	movlw	128
 34082  01D22C  6E62               	movwf	98,c	;volatile
 34083                           
 34084                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 34085  01D22E  6A61               	clrf	97,c	;volatile
 34086                           
 34087                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 34088  01D230  0E40               	movlw	64
 34089  01D232  6E60               	movwf	96,c	;volatile
 34090                           
 34091                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 34092  01D234  013F               	movlb	63	; () banked
 34093  01D236  515F               	movf	95,w,b	;volatile
 34094  01D238  0B3F               	andlw	-193
 34095  01D23A  0940               	iorlw	64
 34096  01D23C  6F5F               	movwf	95,b	;volatile
 34097                           
 34098                           ; BSR set to: 63
 34099                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34100  01D23E  0012               	return		;funcret
 34101  01D240                     __end_of_PWM8_Initialize:
 34102                           	opt callstack 0
 34103                           
 34104 ;; *************** function _PMD_Initialize *****************
 34105 ;; Defined at:
 34106 ;;		line 91 in file "mcc_generated_files/mcc.c"
 34107 ;; Parameters:    Size  Location     Type
 34108 ;;		None
 34109 ;; Auto vars:     Size  Location     Type
 34110 ;;		None
 34111 ;; Return value:  Size  Location     Type
 34112 ;;                  1  [STACK] void 
 34113 ;; Registers used:
 34114 ;;		None
 34115 ;; Tracked objects:
 34116 ;;		On entry : 3F/39
 34117 ;;		On exit  : 3F/39
 34118 ;;		Unchanged: 0/0
 34119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34124 ;;Total ram usage:        0 bytes
 34125 ;; Hardware stack levels used:    1
 34126 ;; Hardware stack levels required when called:   15
 34127 ;; This function calls:
 34128 ;;		Nothing
 34129 ;; This function is called by:
 34130 ;;		_SYSTEM_Initialize
 34131 ;; This function uses a reentrant model
 34132 ;;
 34133                           
 34134                           	psect	text142
 34135  01D256                     __ptext142:
 34136                           	opt callstack 0
 34137  01D256                     _PMD_Initialize:
 34138                           	opt callstack 14
 34139                           
 34140                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 34141                           
 34142                           ; BSR set to: 63
 34143                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34144                           ;incstack = 0
 34145  01D256  0139               	movlb	57	; () banked
 34146  01D258  6BC0               	clrf	192,b	;volatile
 34147                           
 34148                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 34149  01D25A  6BC1               	clrf	193,b	;volatile
 34150                           
 34151                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 34152  01D25C  6BC2               	clrf	194,b	;volatile
 34153                           
 34154                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 34155  01D25E  6BC3               	clrf	195,b	;volatile
 34156                           
 34157                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 34158  01D260  6BC4               	clrf	196,b	;volatile
 34159                           
 34160                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 34161  01D262  6BC5               	clrf	197,b	;volatile
 34162                           
 34163                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 34164  01D264  6BC6               	clrf	198,b	;volatile
 34165                           
 34166                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 34167  01D266  6BC7               	clrf	199,b	;volatile
 34168                           
 34169                           ; BSR set to: 57
 34170                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34171  01D268  0012               	return		;funcret
 34172  01D26A                     __end_of_PMD_Initialize:
 34173                           	opt callstack 0
 34174                           
 34175 ;; *************** function _PIN_MANAGER_Initialize *****************
 34176 ;; Defined at:
 34177 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 34178 ;; Parameters:    Size  Location     Type
 34179 ;;		None
 34180 ;; Auto vars:     Size  Location     Type
 34181 ;;		None
 34182 ;; Return value:  Size  Location     Type
 34183 ;;                  1  [STACK] void 
 34184 ;; Registers used:
 34185 ;;		wreg, status,2
 34186 ;; Tracked objects:
 34187 ;;		On entry : 3F/39
 34188 ;;		On exit  : 3F/3A
 34189 ;;		Unchanged: 0/0
 34190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34195 ;;Total ram usage:        0 bytes
 34196 ;; Hardware stack levels used:    1
 34197 ;; Hardware stack levels required when called:   15
 34198 ;; This function calls:
 34199 ;;		Nothing
 34200 ;; This function is called by:
 34201 ;;		_SYSTEM_Initialize
 34202 ;; This function uses a reentrant model
 34203 ;;
 34204                           
 34205                           	psect	text143
 34206  01B98A                     __ptext143:
 34207                           	opt callstack 0
 34208  01B98A                     _PIN_MANAGER_Initialize:
 34209                           	opt callstack 14
 34210                           
 34211                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 34212                           
 34213                           ; BSR set to: 57
 34214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34215                           ;incstack = 0
 34216  01B98A  0E07               	movlw	7
 34217  01B98C  6EBE               	movwf	190,c	;volatile
 34218                           
 34219                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 34220  01B98E  6ABD               	clrf	189,c	;volatile
 34221                           
 34222                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 34223  01B990  6ABA               	clrf	186,c	;volatile
 34224                           
 34225                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 34226  01B992  0E23               	movlw	35
 34227  01B994  6EBF               	movwf	191,c	;volatile
 34228                           
 34229                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 34230  01B996  6ABB               	clrf	187,c	;volatile
 34231                           
 34232                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 34233  01B998  0E07               	movlw	7
 34234  01B99A  6EBC               	movwf	188,c	;volatile
 34235                           
 34236                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 34237  01B99C  6AC6               	clrf	198,c	;volatile
 34238                           
 34239                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 34240  01B99E  0E0C               	movlw	12
 34241  01B9A0  6EC7               	movwf	199,c	;volatile
 34242                           
 34243                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 34244  01B9A2  68C2               	setf	194,c	;volatile
 34245                           
 34246                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 34247  01B9A4  0EBF               	movlw	191
 34248  01B9A6  6EC3               	movwf	195,c	;volatile
 34249                           
 34250                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 34251  01B9A8  0E90               	movlw	144
 34252  01B9AA  6EC4               	movwf	196,c	;volatile
 34253                           
 34254                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 34255  01B9AC  0E0C               	movlw	12
 34256  01B9AE  6EC5               	movwf	197,c	;volatile
 34257                           
 34258                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 34259  01B9B0  013A               	movlb	58	; () banked
 34260  01B9B2  6B70               	clrf	112,b	;volatile
 34261                           
 34262                           ; BSR set to: 58
 34263                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 34264  01B9B4  6B60               	clrf	96,b	;volatile
 34265                           
 34266                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 34267  01B9B6  0E3C               	movlw	60
 34268  01B9B8  6F50               	movwf	80,b	;volatile
 34269                           
 34270                           ; BSR set to: 58
 34271                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 34272  01B9BA  6B80               	clrf	128,b	;volatile
 34273                           
 34274                           ; BSR set to: 58
 34275                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 34276  01B9BC  6B90               	clrf	144,b	;volatile
 34277                           
 34278                           ; BSR set to: 58
 34279                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 34280  01B9BE  6940               	setf	64,b	;volatile
 34281                           
 34282                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 34283  01B9C0  0E0C               	movlw	12
 34284  01B9C2  6F71               	movwf	113,b	;volatile
 34285                           
 34286                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 34287  01B9C4  0E0C               	movlw	12
 34288  01B9C6  6F91               	movwf	145,b	;volatile
 34289                           
 34290                           ; BSR set to: 58
 34291                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 34292  01B9C8  6B81               	clrf	129,b	;volatile
 34293                           
 34294                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 34295  01B9CA  0E83               	movlw	131
 34296  01B9CC  6F51               	movwf	81,b	;volatile
 34297                           
 34298                           ; BSR set to: 58
 34299                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 34300  01B9CE  6B41               	clrf	65,b	;volatile
 34301                           
 34302                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 34303  01B9D0  0E97               	movlw	151
 34304  01B9D2  6F61               	movwf	97,b	;volatile
 34305                           
 34306                           ; BSR set to: 58
 34307                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 34308  01B9D4  6B82               	clrf	130,b	;volatile
 34309                           
 34310                           ; BSR set to: 58
 34311                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 34312  01B9D6  6B92               	clrf	146,b	;volatile
 34313                           
 34314                           ; BSR set to: 58
 34315                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 34316  01B9D8  6B42               	clrf	66,b	;volatile
 34317                           
 34318                           ; BSR set to: 58
 34319                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 34320  01B9DA  6B52               	clrf	82,b	;volatile
 34321                           
 34322                           ; BSR set to: 58
 34323                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 34324  01B9DC  6B62               	clrf	98,b	;volatile
 34325                           
 34326                           ; BSR set to: 58
 34327                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 34328  01B9DE  6B72               	clrf	114,b	;volatile
 34329                           
 34330                           ; BSR set to: 58
 34331                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 34332  01B9E0  6943               	setf	67,b	;volatile
 34333                           
 34334                           ; BSR set to: 58
 34335                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 34336  01B9E2  6953               	setf	83,b	;volatile
 34337                           
 34338                           ; BSR set to: 58
 34339                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 34340  01B9E4  6963               	setf	99,b	;volatile
 34341                           
 34342                           ; BSR set to: 58
 34343                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 34344  01B9E6  6973               	setf	115,b	;volatile
 34345                           
 34346                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 34347  01B9E8  0E07               	movlw	7
 34348  01B9EA  6F83               	movwf	131,b	;volatile
 34349                           
 34350                           ; BSR set to: 58
 34351                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 34352  01B9EC  6993               	setf	147,b	;volatile
 34353                           
 34354                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 34355  01B9EE  0E0F               	movlw	15
 34356  01B9F0  6FE8               	movwf	232,b	;volatile
 34357                           
 34358                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 34359  01B9F2  0E13               	movlw	19
 34360  01B9F4  6FDE               	movwf	222,b	;volatile
 34361                           
 34362                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 34363  01B9F6  0E16               	movlw	22
 34364  01B9F8  6F0E               	movwf	14,b	;volatile
 34365                           
 34366                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 34367  01B9FA  0E1E               	movlw	30
 34368  01B9FC  6F13               	movwf	19,b	;volatile
 34369                           
 34370                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 34371  01B9FE  0E08               	movlw	8
 34372  01BA00  6FC0               	movwf	192,b	;volatile
 34373                           
 34374                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 34375  01BA02  0E10               	movlw	16
 34376  01BA04  6F19               	movwf	25,b	;volatile
 34377                           
 34378                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 34379  01BA06  0E09               	movlw	9
 34380  01BA08  6FC1               	movwf	193,b	;volatile
 34381                           
 34382                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 34383  01BA0A  0E1F               	movlw	31
 34384  01BA0C  6F15               	movwf	21,b	;volatile
 34385                           
 34386                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 34387  01BA0E  0E13               	movlw	19
 34388  01BA10  6F16               	movwf	22,b	;volatile
 34389                           
 34390                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 34391  01BA12  0E17               	movlw	23
 34392  01BA14  6FE5               	movwf	229,b	;volatile
 34393                           
 34394                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 34395  01BA16  0E14               	movlw	20
 34396  01BA18  6FDF               	movwf	223,b	;volatile
 34397                           
 34398                           ; BSR set to: 58
 34399                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 34400  01BA1A  0012               	return		;funcret
 34401  01BA1C                     __end_of_PIN_MANAGER_Initialize:
 34402                           	opt callstack 0
 34403                           
 34404 ;; *************** function _OSCILLATOR_Initialize *****************
 34405 ;; Defined at:
 34406 ;;		line 73 in file "mcc_generated_files/mcc.c"
 34407 ;; Parameters:    Size  Location     Type
 34408 ;;		None
 34409 ;; Auto vars:     Size  Location     Type
 34410 ;;		None
 34411 ;; Return value:  Size  Location     Type
 34412 ;;                  1  [STACK] void 
 34413 ;; Registers used:
 34414 ;;		wreg, status,2
 34415 ;; Tracked objects:
 34416 ;;		On entry : 3F/3A
 34417 ;;		On exit  : 3F/39
 34418 ;;		Unchanged: 0/0
 34419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34424 ;;Total ram usage:        0 bytes
 34425 ;; Hardware stack levels used:    1
 34426 ;; Hardware stack levels required when called:   15
 34427 ;; This function calls:
 34428 ;;		Nothing
 34429 ;; This function is called by:
 34430 ;;		_SYSTEM_Initialize
 34431 ;; This function uses a reentrant model
 34432 ;;
 34433                           
 34434                           	psect	text144
 34435  01D240                     __ptext144:
 34436                           	opt callstack 0
 34437  01D240                     _OSCILLATOR_Initialize:
 34438                           	opt callstack 14
 34439                           
 34440                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 34441                           
 34442                           ; BSR set to: 58
 34443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34444                           ;incstack = 0
 34445  01D240  0E20               	movlw	32
 34446  01D242  0139               	movlb	57	; () banked
 34447  01D244  6FD9               	movwf	217,b	;volatile
 34448                           
 34449                           ; BSR set to: 57
 34450                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 34451  01D246  6BDB               	clrf	219,b	;volatile
 34452                           
 34453                           ; BSR set to: 57
 34454                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 34455  01D248  6BDD               	clrf	221,b	;volatile
 34456                           
 34457                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 34458  01D24A  0E02               	movlw	2
 34459  01D24C  6FDF               	movwf	223,b	;volatile
 34460                           
 34461                           ; BSR set to: 57
 34462                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 34463  01D24E  6BDE               	clrf	222,b	;volatile
 34464  01D250                     l171:
 34465                           
 34466                           ; BSR set to: 57
 34467                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 34468  01D250  B1DC               	btfsc	220,0,b	;volatile
 34469  01D252  0012               	return	
 34470  01D254  D7FD               	goto	l171
 34471  01D256                     __end_of_OSCILLATOR_Initialize:
 34472                           	opt callstack 0
 34473                           
 34474 ;; *************** function _INTERRUPT_Initialize *****************
 34475 ;; Defined at:
 34476 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 34477 ;; Parameters:    Size  Location     Type
 34478 ;;		None
 34479 ;; Auto vars:     Size  Location     Type
 34480 ;;  state           1  [STACK] _Bool 
 34481 ;; Return value:  Size  Location     Type
 34482 ;;                  1  [STACK] void 
 34483 ;; Registers used:
 34484 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 34485 ;; Tracked objects:
 34486 ;;		On entry : 0/0
 34487 ;;		On exit  : 3F/39
 34488 ;;		Unchanged: 0/0
 34489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34494 ;;Total ram usage:        0 bytes
 34495 ;; Hardware stack levels used:    1
 34496 ;; Hardware stack levels required when called:   15
 34497 ;; This function calls:
 34498 ;;		Nothing
 34499 ;; This function is called by:
 34500 ;;		_SYSTEM_Initialize
 34501 ;; This function uses a reentrant model
 34502 ;;
 34503                           
 34504                           	psect	text145
 34505  01C13C                     __ptext145:
 34506                           	opt callstack 0
 34507  01C13C                     _INTERRUPT_Initialize:
 34508                           	opt callstack 0
 34509                           
 34510                           ; BSR set to: 57
 34511                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34512  01C13C  52E6               	movf	postinc1,f,c
 34513                           
 34514                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 34515                           
 34516                           ;incstack = 0
 34517  01C13E  8AD2               	bsf	210,5,c	;volatile
 34518                           
 34519                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 34520  01C140  AED2               	btfss	16338,7,c	;volatile
 34521  01C142  D003               	goto	u10050
 34522  01C144  6A0C               	clrf	(btemp+11)^0,c
 34523  01C146  2A0C               	incf	(btemp+11)^0,f,c
 34524  01C148  D001               	goto	u10068
 34525  01C14A                     u10050:
 34526  01C14A  6A0C               	clrf	(btemp+11)^0,c
 34527  01C14C                     u10068:
 34528                           
 34529                           ;stkvar	_state @ sp[(-1)+0]
 34530  01C14C  0EFF               	movlw	-1
 34531  01C14E  0060  F033  FFE3   	movff	btemp+11,plusw1
 34532                           
 34533                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 34534  01C154  9ED2               	bcf	16338,7,c	;volatile
 34535                           
 34536                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 34537  01C156  0E55               	movlw	85
 34538  01C158  6ED4               	movwf	212,c	;volatile
 34539                           
 34540                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 34541  01C15A  0EAA               	movlw	170
 34542  01C15C  6ED4               	movwf	212,c	;volatile
 34543                           
 34544                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 34545  01C15E  90D4               	bcf	212,0,c	;volatile
 34546                           
 34547                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 34548  01C160  0138               	movlb	56	; () banked
 34549  01C162  6B9F               	clrf	159,b	;volatile
 34550                           
 34551                           ; BSR set to: 56
 34552                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 34553  01C164  6B9E               	clrf	158,b	;volatile
 34554                           
 34555                           ; BSR set to: 56
 34556                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 34557  01C166  0E08               	movlw	8
 34558  01C168  6F9D               	movwf	157,b	;volatile
 34559                           
 34560                           ; BSR set to: 56
 34561                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 34562  01C16A  0E55               	movlw	85
 34563  01C16C  6ED4               	movwf	212,c	;volatile
 34564                           
 34565                           ; BSR set to: 56
 34566                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 34567  01C16E  0EAA               	movlw	170
 34568  01C170  6ED4               	movwf	212,c	;volatile
 34569                           
 34570                           ; BSR set to: 56
 34571                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 34572  01C172  80D4               	bsf	212,0,c	;volatile
 34573                           
 34574                           ; BSR set to: 56
 34575                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 34576                           ;stkvar	_state @ sp[(-1)+0]
 34577  01C174  0EFF               	movlw	-1
 34578  01C176  B0E3               	btfsc	plusw1,0,c
 34579  01C178  D002               	bra	u10075
 34580  01C17A  9ED2               	bcf	16338,7,c	;volatile
 34581  01C17C  D001               	bra	u10076
 34582  01C17E                     u10075:
 34583  01C17E  8ED2               	bsf	16338,7,c	;volatile
 34584  01C180                     u10076:
 34585                           
 34586                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 34587  01C180  0139               	movlb	57	; () banked
 34588  01C182  8782               	bsf	130,3,b	;volatile
 34589                           
 34590                           ; BSR set to: 57
 34591                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 34592  01C184  8382               	bsf	130,1,b	;volatile
 34593                           
 34594                           ; BSR set to: 57
 34595                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 34596  01C186  8182               	bsf	130,0,b	;volatile
 34597                           
 34598                           ; BSR set to: 57
 34599                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 34600  01C188  8582               	bsf	130,2,b	;volatile
 34601                           
 34602                           ; BSR set to: 57
 34603                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 34604  01C18A  8786               	bsf	134,3,b	;volatile
 34605                           
 34606                           ; BSR set to: 57
 34607                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 34608  01C18C  8586               	bsf	134,2,b	;volatile
 34609                           
 34610                           ; BSR set to: 57
 34611                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 34612  01C18E  8783               	bsf	131,3,b	;volatile
 34613                           
 34614                           ; BSR set to: 57
 34615                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 34616  01C190  8181               	bsf	129,0,b	;volatile
 34617                           
 34618                           ; BSR set to: 57
 34619                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 34620  01C192  9185               	bcf	133,0,b	;volatile
 34621                           
 34622                           ; BSR set to: 57
 34623                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 34624  01C194  8189               	bsf	137,0,b	;volatile
 34625                           
 34626                           ; BSR set to: 57
 34627                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 34628  01C196  9D88               	bcf	136,6,b	;volatile
 34629                           
 34630                           ; BSR set to: 57
 34631                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 34632  01C198  9D86               	bcf	134,6,b	;volatile
 34633                           
 34634                           ; BSR set to: 57
 34635                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 34636  01C19A  8581               	bsf	129,2,b	;volatile
 34637                           
 34638                           ; BSR set to: 57
 34639                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 34640  01C19C  8781               	bsf	129,3,b	;volatile
 34641                           
 34642                           ; BSR set to: 57
 34643                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 34644  01C19E  52E5               	movf	postdec1,f,c
 34645  01C1A0  0012               	return		;funcret
 34646  01C1A2                     __end_of_INTERRUPT_Initialize:
 34647                           	opt callstack 0
 34648                           
 34649 ;; *************** function _FVR_Initialize *****************
 34650 ;; Defined at:
 34651 ;;		line 58 in file "mcc_generated_files/fvr.c"
 34652 ;; Parameters:    Size  Location     Type
 34653 ;;		None
 34654 ;; Auto vars:     Size  Location     Type
 34655 ;;		None
 34656 ;; Return value:  Size  Location     Type
 34657 ;;                  1  [STACK] void 
 34658 ;; Registers used:
 34659 ;;		wreg, status,2
 34660 ;; Tracked objects:
 34661 ;;		On entry : 3F/39
 34662 ;;		On exit  : 3F/3E
 34663 ;;		Unchanged: 0/0
 34664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34669 ;;Total ram usage:        0 bytes
 34670 ;; Hardware stack levels used:    1
 34671 ;; Hardware stack levels required when called:   15
 34672 ;; This function calls:
 34673 ;;		Nothing
 34674 ;; This function is called by:
 34675 ;;		_SYSTEM_Initialize
 34676 ;; This function uses a reentrant model
 34677 ;;
 34678                           
 34679                           	psect	text146
 34680  01D37E                     __ptext146:
 34681                           	opt callstack 0
 34682  01D37E                     _FVR_Initialize:
 34683                           	opt callstack 14
 34684                           
 34685                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 34686                           
 34687                           ; BSR set to: 57
 34688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34689                           ;incstack = 0
 34690  01D37E  0EAF               	movlw	175
 34691  01D380  013E               	movlb	62	; () banked
 34692  01D382  6FC1               	movwf	193,b	;volatile
 34693                           
 34694                           ; BSR set to: 62
 34695                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 34696  01D384  0012               	return		;funcret
 34697  01D386                     __end_of_FVR_Initialize:
 34698                           	opt callstack 0
 34699                           
 34700 ;; *************** function _EXT_INT_Initialize *****************
 34701 ;; Defined at:
 34702 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 34703 ;; Parameters:    Size  Location     Type
 34704 ;;		None
 34705 ;; Auto vars:     Size  Location     Type
 34706 ;;		None
 34707 ;; Return value:  Size  Location     Type
 34708 ;;                  1  [STACK] void 
 34709 ;; Registers used:
 34710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34711 ;; Tracked objects:
 34712 ;;		On entry : 3F/39
 34713 ;;		On exit  : 3F/39
 34714 ;;		Unchanged: 0/0
 34715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34720 ;;Total ram usage:        0 bytes
 34721 ;; Hardware stack levels used:    1
 34722 ;; Hardware stack levels required when called:   16
 34723 ;; This function calls:
 34724 ;;		_INT0_SetInterruptHandler
 34725 ;;		_INT1_SetInterruptHandler
 34726 ;; This function is called by:
 34727 ;;		_SYSTEM_Initialize
 34728 ;; This function uses a reentrant model
 34729 ;;
 34730                           
 34731                           	psect	text147
 34732  01CB28                     __ptext147:
 34733                           	opt callstack 0
 34734  01CB28                     _EXT_INT_Initialize:
 34735                           	opt callstack 13
 34736                           
 34737                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 34738                           
 34739                           ; BSR set to: 62
 34740                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34741                           ;incstack = 0
 34742  01CB28  0139               	movlb	57	; () banked
 34743  01CB2A  91A1               	bcf	161,0,b	;volatile
 34744                           
 34745                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 34746  01CB2C  90D2               	bcf	210,0,c	;volatile
 34747                           
 34748                           ; BSR set to: 57
 34749                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 34750  01CB2E  0EAE               	movlw	low _INT0_DefaultInterruptHandler
 34751  01CB30  6EE6               	movwf	postinc1,c
 34752  01CB32  0ED3               	movlw	high _INT0_DefaultInterruptHandler
 34753  01CB34  6EE6               	movwf	postinc1,c
 34754  01CB36  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 34755  01CB38  6EE6               	movwf	postinc1,c
 34756  01CB3A  EC49  F0E7         	call	_INT0_SetInterruptHandler	;wreg free
 34757                           
 34758                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 34759  01CB3E  0139               	movlb	57	; () banked
 34760  01CB40  8191               	bsf	145,0,b	;volatile
 34761                           
 34762                           ; BSR set to: 57
 34763                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 34764  01CB42  91A5               	bcf	165,0,b	;volatile
 34765                           
 34766                           ; BSR set to: 57
 34767                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 34768  01CB44  92D2               	bcf	210,1,c	;volatile
 34769                           
 34770                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 34771  01CB46  0EAA               	movlw	low _INT1_DefaultInterruptHandler
 34772  01CB48  6EE6               	movwf	postinc1,c
 34773  01CB4A  0ED3               	movlw	high _INT1_DefaultInterruptHandler
 34774  01CB4C  6EE6               	movwf	postinc1,c
 34775  01CB4E  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 34776  01CB50  6EE6               	movwf	postinc1,c
 34777  01CB52  EC35  F0E7         	call	_INT1_SetInterruptHandler	;wreg free
 34778                           
 34779                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 34780  01CB56  0139               	movlb	57	; () banked
 34781  01CB58  8195               	bsf	149,0,b	;volatile
 34782                           
 34783                           ; BSR set to: 57
 34784                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 34785  01CB5A  0012               	return		;funcret
 34786  01CB5C                     __end_of_EXT_INT_Initialize:
 34787                           	opt callstack 0
 34788                           
 34789 ;; *************** function _INT1_SetInterruptHandler *****************
 34790 ;; Defined at:
 34791 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 34792 ;; Parameters:    Size  Location     Type
 34793 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34794 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 34795 ;; Auto vars:     Size  Location     Type
 34796 ;;		None
 34797 ;; Return value:  Size  Location     Type
 34798 ;;                  1  [STACK] void 
 34799 ;; Registers used:
 34800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34801 ;; Tracked objects:
 34802 ;;		On entry : 3F/39
 34803 ;;		On exit  : 0/0
 34804 ;;		Unchanged: 0/0
 34805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34810 ;;Total ram usage:        0 bytes
 34811 ;; Hardware stack levels used:    1
 34812 ;; Hardware stack levels required when called:   15
 34813 ;; This function calls:
 34814 ;;		Nothing
 34815 ;; This function is called by:
 34816 ;;		_EXT_INT_Initialize
 34817 ;;		_start_switch_handler
 34818 ;; This function uses a reentrant model
 34819 ;;
 34820                           
 34821                           	psect	text148
 34822  01CE6A                     __ptext148:
 34823                           	opt callstack 0
 34824  01CE6A                     _INT1_SetInterruptHandler:
 34825                           	opt callstack 14
 34826                           
 34827                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 34828                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34829                           
 34830                           ; BSR set to: 57
 34831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34832                           ;incstack = 0
 34833  01CE6A  50E1               	movf	fsr1l,w,c
 34834  01CE6C  0FFD               	addlw	-3
 34835  01CE6E  6ED9               	movwf	fsr2l,c
 34836  01CE70  50E2               	movf	fsr1h,w,c
 34837  01CE72  6EDA               	movwf	fsr2h,c
 34838  01CE74  0EFF               	movlw	255
 34839  01CE76  22DA               	addwfc	fsr2h,f,c
 34840  01CE78  006F FF78  F090    	movff	postinc2,_INT1_InterruptHandler
 34841  01CE7E  006F FF78  F091    	movff	postinc2,_INT1_InterruptHandler+1
 34842  01CE84  006F FF74  F092    	movff	postdec2,_INT1_InterruptHandler+2
 34843                           
 34844                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 34845  01CE8A  52E5               	movf	postdec1,f,c
 34846  01CE8C  52E5               	movf	postdec1,f,c
 34847  01CE8E  52E5               	movf	postdec1,f,c
 34848  01CE90  0012               	return		;funcret
 34849  01CE92                     __end_of_INT1_SetInterruptHandler:
 34850                           	opt callstack 0
 34851                           
 34852 ;; *************** function _INT0_SetInterruptHandler *****************
 34853 ;; Defined at:
 34854 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 34855 ;; Parameters:    Size  Location     Type
 34856 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34857 ;;		 -> INT0_DefaultInterruptHandler(1), 
 34858 ;; Auto vars:     Size  Location     Type
 34859 ;;		None
 34860 ;; Return value:  Size  Location     Type
 34861 ;;                  1  [STACK] void 
 34862 ;; Registers used:
 34863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34864 ;; Tracked objects:
 34865 ;;		On entry : 3F/39
 34866 ;;		On exit  : 0/0
 34867 ;;		Unchanged: 0/0
 34868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34873 ;;Total ram usage:        0 bytes
 34874 ;; Hardware stack levels used:    1
 34875 ;; Hardware stack levels required when called:   15
 34876 ;; This function calls:
 34877 ;;		Nothing
 34878 ;; This function is called by:
 34879 ;;		_EXT_INT_Initialize
 34880 ;; This function uses a reentrant model
 34881 ;;
 34882                           
 34883                           	psect	text149
 34884  01CE92                     __ptext149:
 34885                           	opt callstack 0
 34886  01CE92                     _INT0_SetInterruptHandler:
 34887                           	opt callstack 13
 34888                           
 34889                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 34890                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34891                           
 34892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34893                           ;incstack = 0
 34894  01CE92  50E1               	movf	fsr1l,w,c
 34895  01CE94  0FFD               	addlw	-3
 34896  01CE96  6ED9               	movwf	fsr2l,c
 34897  01CE98  50E2               	movf	fsr1h,w,c
 34898  01CE9A  6EDA               	movwf	fsr2h,c
 34899  01CE9C  0EFF               	movlw	255
 34900  01CE9E  22DA               	addwfc	fsr2h,f,c
 34901  01CEA0  006F FF78  F093    	movff	postinc2,_INT0_InterruptHandler
 34902  01CEA6  006F FF78  F094    	movff	postinc2,_INT0_InterruptHandler+1
 34903  01CEAC  006F FF74  F095    	movff	postdec2,_INT0_InterruptHandler+2
 34904                           
 34905                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 34906  01CEB2  52E5               	movf	postdec1,f,c
 34907  01CEB4  52E5               	movf	postdec1,f,c
 34908  01CEB6  52E5               	movf	postdec1,f,c
 34909  01CEB8  0012               	return		;funcret
 34910  01CEBA                     __end_of_INT0_SetInterruptHandler:
 34911                           	opt callstack 0
 34912                           
 34913 ;; *************** function _DMA2_Initialize *****************
 34914 ;; Defined at:
 34915 ;;		line 61 in file "mcc_generated_files/dma2.c"
 34916 ;; Parameters:    Size  Location     Type
 34917 ;;		None
 34918 ;; Auto vars:     Size  Location     Type
 34919 ;;		None
 34920 ;; Return value:  Size  Location     Type
 34921 ;;                  1  [STACK] void 
 34922 ;; Registers used:
 34923 ;;		wreg, status,2
 34924 ;; Tracked objects:
 34925 ;;		On entry : 3F/3D
 34926 ;;		On exit  : 3F/3B
 34927 ;;		Unchanged: 0/0
 34928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34933 ;;Total ram usage:        0 bytes
 34934 ;; Hardware stack levels used:    1
 34935 ;; Hardware stack levels required when called:   15
 34936 ;; This function calls:
 34937 ;;		Nothing
 34938 ;; This function is called by:
 34939 ;;		_SYSTEM_Initialize
 34940 ;; This function uses a reentrant model
 34941 ;;
 34942                           
 34943                           	psect	text150
 34944  01C3DE                     __ptext150:
 34945                           	opt callstack 0
 34946  01C3DE                     _DMA2_Initialize:
 34947                           	opt callstack 14
 34948                           
 34949                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 34950                           
 34951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34952                           ;incstack = 0
 34953  01C3DE  0E00               	movlw	0
 34954  01C3E0  013B               	movlb	59	; () banked
 34955  01C3E2  6FD9               	movwf	217,b	;volatile
 34956  01C3E4  0E10               	movlw	16
 34957  01C3E6  6FDA               	movwf	218,b	;volatile
 34958  01C3E8  0E00               	movlw	0
 34959  01C3EA  6FDB               	movwf	219,b	;volatile
 34960                           
 34961                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 34962  01C3EC  0E3F               	movlw	63
 34963  01C3EE  6FD1               	movwf	209,b	;volatile
 34964  01C3F0  0EBB               	movlw	187
 34965  01C3F2  6FD0               	movwf	208,b	;volatile
 34966                           
 34967                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 34968  01C3F4  0E03               	movlw	3
 34969  01C3F6  6FDD               	movwf	221,b	;volatile
 34970                           
 34971                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 34972  01C3F8  0E00               	movlw	0
 34973  01C3FA  6FD8               	movwf	216,b	;volatile
 34974  01C3FC  0E01               	movlw	1
 34975  01C3FE  6FD7               	movwf	215,b	;volatile
 34976                           
 34977                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 34978  01C400  0E00               	movlw	0
 34979  01C402  6FCF               	movwf	207,b	;volatile
 34980  01C404  0E01               	movlw	1
 34981  01C406  6FCE               	movwf	206,b	;volatile
 34982                           
 34983                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 34984  01C408  0E1C               	movlw	28
 34985  01C40A  6FDF               	movwf	223,b	;volatile
 34986                           
 34987                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 34988  01C40C  0E3D               	movlw	61
 34989  01C40E  6FDE               	movwf	222,b	;volatile
 34990                           
 34991                           ; BSR set to: 59
 34992                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 34993  01C410  0139               	movlb	57	; () banked
 34994  01C412  97A5               	bcf	165,3,b	;volatile
 34995                           
 34996                           ; BSR set to: 57
 34997                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 34998  01C414  95A5               	bcf	165,2,b	;volatile
 34999                           
 35000                           ; BSR set to: 57
 35001                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 35002  01C416  9BA5               	bcf	165,5,b	;volatile
 35003                           
 35004                           ; BSR set to: 57
 35005                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 35006  01C418  99A5               	bcf	165,4,b	;volatile
 35007                           
 35008                           ; BSR set to: 57
 35009                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 35010  01C41A  9795               	bcf	149,3,b	;volatile
 35011                           
 35012                           ; BSR set to: 57
 35013                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 35014  01C41C  9595               	bcf	149,2,b	;volatile
 35015                           
 35016                           ; BSR set to: 57
 35017                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 35018  01C41E  9B95               	bcf	149,5,b	;volatile
 35019                           
 35020                           ; BSR set to: 57
 35021                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 35022  01C420  9995               	bcf	149,4,b	;volatile
 35023  01C422  9ED2               	bcf	16338,7,c	;# 
 35024  01C424  0139               	banksel	14831	;# 
 35025  01C426  0E55               	movlw	85	;# 
 35026  01C428  6FEF               	movwf	14831,b	;# 
 35027  01C42A  0EAA               	movlw	170	;# 
 35028  01C42C  6FEF               	movwf	14831,b	;# 
 35029  01C42E  81EF               	bsf	14831,0,b	;# 
 35030  01C430  8ED2               	bsf	16338,7,c	;# 
 35031                           
 35032                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 35033  01C432  013B               	movlb	59	; () banked
 35034  01C434  6BDC               	clrf	220,b	;volatile
 35035                           
 35036                           ; BSR set to: 59
 35037                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35038  01C436  0012               	return		;funcret
 35039  01C438                     __end_of_DMA2_Initialize:
 35040                           	opt callstack 0
 35041                           
 35042 ;; *************** function _DMA1_Initialize *****************
 35043 ;; Defined at:
 35044 ;;		line 86 in file "mcc_generated_files/dma1.c"
 35045 ;; Parameters:    Size  Location     Type
 35046 ;;		None
 35047 ;; Auto vars:     Size  Location     Type
 35048 ;;		None
 35049 ;; Return value:  Size  Location     Type
 35050 ;;                  1  [STACK] void 
 35051 ;; Registers used:
 35052 ;;		wreg, status,2
 35053 ;; Tracked objects:
 35054 ;;		On entry : 3F/3B
 35055 ;;		On exit  : 3F/3B
 35056 ;;		Unchanged: 0/0
 35057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35062 ;;Total ram usage:        0 bytes
 35063 ;; Hardware stack levels used:    1
 35064 ;; Hardware stack levels required when called:   15
 35065 ;; This function calls:
 35066 ;;		Nothing
 35067 ;; This function is called by:
 35068 ;;		_SYSTEM_Initialize
 35069 ;; This function uses a reentrant model
 35070 ;;
 35071                           
 35072                           	psect	text151
 35073  01BF2E                     __ptext151:
 35074                           	opt callstack 0
 35075  01BF2E                     _DMA1_Initialize:
 35076                           	opt callstack 14
 35077                           
 35078                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 35079                           
 35080                           ; BSR set to: 59
 35081                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35082                           ;incstack = 0
 35083  01BF2E  0E00               	movlw	0
 35084  01BF30  013B               	movlb	59	; () banked
 35085  01BF32  6FF9               	movwf	249,b	;volatile
 35086  01BF34  0E10               	movlw	16
 35087  01BF36  6FFA               	movwf	250,b	;volatile
 35088  01BF38  0E00               	movlw	0
 35089  01BF3A  6FFB               	movwf	251,b	;volatile
 35090                           
 35091                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 35092  01BF3C  0E3D               	movlw	61
 35093  01BF3E  6FF1               	movwf	241,b	;volatile
 35094  01BF40  0E11               	movlw	17
 35095  01BF42  6FF0               	movwf	240,b	;volatile
 35096                           
 35097                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 35098  01BF44  0E03               	movlw	3
 35099  01BF46  6FFD               	movwf	253,b	;volatile
 35100                           
 35101                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 35102  01BF48  0E00               	movlw	0
 35103  01BF4A  6FF8               	movwf	248,b	;volatile
 35104  01BF4C  0E01               	movlw	1
 35105  01BF4E  6FF7               	movwf	247,b	;volatile
 35106                           
 35107                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 35108  01BF50  0E00               	movlw	0
 35109  01BF52  6FEF               	movwf	239,b	;volatile
 35110  01BF54  0E01               	movlw	1
 35111  01BF56  6FEE               	movwf	238,b	;volatile
 35112                           
 35113                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 35114  01BF58  0E15               	movlw	21
 35115  01BF5A  6FFF               	movwf	255,b	;volatile
 35116                           
 35117                           ; BSR set to: 59
 35118                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 35119  01BF5C  6BFE               	clrf	254,b	;volatile
 35120                           
 35121                           ; BSR set to: 59
 35122                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 35123  01BF5E  0139               	movlb	57	; () banked
 35124  01BF60  93A2               	bcf	162,1,b	;volatile
 35125                           
 35126                           ; BSR set to: 57
 35127                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 35128  01BF62  91A2               	bcf	162,0,b	;volatile
 35129                           
 35130                           ; BSR set to: 57
 35131                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 35132  01BF64  97A2               	bcf	162,3,b	;volatile
 35133                           
 35134                           ; BSR set to: 57
 35135                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 35136  01BF66  95A2               	bcf	162,2,b	;volatile
 35137                           
 35138                           ; BSR set to: 57
 35139                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 35140  01BF68  8392               	bsf	146,1,b	;volatile
 35141                           
 35142                           ; BSR set to: 57
 35143                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 35144  01BF6A  8192               	bsf	146,0,b	;volatile
 35145                           
 35146                           ; BSR set to: 57
 35147                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 35148  01BF6C  8792               	bsf	146,3,b	;volatile
 35149                           
 35150                           ; BSR set to: 57
 35151                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 35152  01BF6E  8592               	bsf	146,2,b	;volatile
 35153                           
 35154                           ; BSR set to: 57
 35155                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 35156  01BF70  6BF1               	clrf	241,b	;volatile
 35157                           
 35158                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 35159  01BF72  0E01               	movlw	1
 35160  01BF74  6FF2               	movwf	242,b	;volatile
 35161                           
 35162                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 35163  01BF76  0E04               	movlw	4
 35164  01BF78  6FF3               	movwf	243,b	;volatile
 35165                           
 35166                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 35167  01BF7A  0E02               	movlw	2
 35168  01BF7C  6FF4               	movwf	244,b	;volatile
 35169                           
 35170                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 35171  01BF7E  0E03               	movlw	3
 35172  01BF80  6FF7               	movwf	247,b	;volatile
 35173  01BF82  9ED2               	bcf	16338,7,c	;# 
 35174  01BF84  0139               	banksel	14831	;# 
 35175  01BF86  0E55               	movlw	85	;# 
 35176  01BF88  6FEF               	movwf	14831,b	;# 
 35177  01BF8A  0EAA               	movlw	170	;# 
 35178  01BF8C  6FEF               	movwf	14831,b	;# 
 35179  01BF8E  81EF               	bsf	14831,0,b	;# 
 35180  01BF90  8ED2               	bsf	16338,7,c	;# 
 35181                           
 35182                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 35183  01BF92  013B               	movlb	59	; () banked
 35184  01BF94  6BFC               	clrf	252,b	;volatile
 35185                           
 35186                           ; BSR set to: 59
 35187                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35188  01BF96  0012               	return		;funcret
 35189  01BF98                     __end_of_DMA1_Initialize:
 35190                           	opt callstack 0
 35191                           
 35192 ;; *************** function _CRC_Initialize *****************
 35193 ;; Defined at:
 35194 ;;		line 76 in file "mcc_generated_files/crc.c"
 35195 ;; Parameters:    Size  Location     Type
 35196 ;;		None
 35197 ;; Auto vars:     Size  Location     Type
 35198 ;;  seed            2  [STACK] unsigned short 
 35199 ;;  poly            2  [STACK] unsigned short 
 35200 ;; Return value:  Size  Location     Type
 35201 ;;                  1  [STACK] void 
 35202 ;; Registers used:
 35203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 35204 ;; Tracked objects:
 35205 ;;		On entry : 0/39
 35206 ;;		On exit  : 3F/0
 35207 ;;		Unchanged: 0/0
 35208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35213 ;;Total ram usage:        0 bytes
 35214 ;; Hardware stack levels used:    1
 35215 ;; Hardware stack levels required when called:   15
 35216 ;; This function calls:
 35217 ;;		Nothing
 35218 ;; This function is called by:
 35219 ;;		_SYSTEM_Initialize
 35220 ;;		_read_cal_data
 35221 ;;		_write_cal_data
 35222 ;; This function uses a reentrant model
 35223 ;;
 35224                           
 35225                           	psect	text152
 35226  01BA1C                     __ptext152:
 35227                           	opt callstack 0
 35228  01BA1C                     _CRC_Initialize:
 35229                           	opt callstack 0
 35230                           
 35231                           ; BSR set to: 59
 35232                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35233  01BA1C  52E6               	movf	postinc1,f,c
 35234  01BA1E  52E6               	movf	postinc1,f,c
 35235  01BA20  52E6               	movf	postinc1,f,c
 35236  01BA22  52E6               	movf	postinc1,f,c
 35237                           
 35238                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 35239                           
 35240                           ;incstack = 0
 35241  01BA24  0E80               	movlw	128
 35242  01BA26  0139               	movlb	57	; () banked
 35243  01BA28  6F68               	movwf	104,b	;volatile
 35244                           
 35245                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 35246  01BA2A  0E07               	movlw	7
 35247  01BA2C  6F69               	movwf	105,b	;volatile
 35248                           
 35249                           ; BSR set to: 57
 35250                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 35251  01BA2E  6B62               	clrf	98,b	;volatile
 35252                           
 35253                           ; BSR set to: 57
 35254                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 35255  01BA30  6B63               	clrf	99,b	;volatile
 35256                           
 35257                           ; BSR set to: 57
 35258                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 35259  01BA32  6B7C               	clrf	124,b	;volatile
 35260                           
 35261                           ; BSR set to: 57
 35262                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 35263  01BA34  6B78               	clrf	120,b	;volatile
 35264                           
 35265                           ; BSR set to: 57
 35266                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 35267  01BA36  6B77               	clrf	119,b	;volatile
 35268                           
 35269                           ; BSR set to: 57
 35270                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 35271  01BA38  6B76               	clrf	118,b	;volatile
 35272                           
 35273                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 35274  01BA3A  0E3F               	movlw	63
 35275  01BA3C  6F7B               	movwf	123,b	;volatile
 35276                           
 35277                           ; BSR set to: 57
 35278                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 35279  01BA3E  697A               	setf	122,b	;volatile
 35280                           
 35281                           ; BSR set to: 57
 35282                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 35283  01BA40  6979               	setf	121,b	;volatile
 35284                           
 35285                           ; BSR set to: 57
 35286                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 35287  01BA42  6B7D               	clrf	125,b	;volatile
 35288                           
 35289                           ; BSR set to: 57
 35290                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 35291  01BA44  0ED5               	movlw	213
 35292  01BA46  6E0B               	movwf	(btemp+10)^0,c
 35293  01BA48  0E00               	movlw	0
 35294  01BA4A  6E0C               	movwf	(btemp+11)^0,c
 35295                           
 35296                           ;stkvar	_poly @ sp[(-4)+2]
 35297  01BA4C  0EFE               	movlw	-2
 35298  01BA4E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35299  01BA54  0EFF               	movlw	-1
 35300  01BA56  0060  F033  FFE3   	movff	btemp+11,plusw1
 35301                           
 35302                           ; BSR set to: 57
 35303                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 35304                           ;stkvar	_poly @ sp[(-4)+2]
 35305  01BA5C  0EFF               	movlw	255
 35306  01BA5E  24E1               	addwf	fsr1l,w,c
 35307  01BA60  6ED9               	movwf	fsr2l,c
 35308  01BA62  0EFF               	movlw	255
 35309  01BA64  20E2               	addwfc	fsr1h,w,c
 35310  01BA66  6EDA               	movwf	fsr2h,c
 35311  01BA68  50DF               	movf	indf2,w,c
 35312  01BA6A  6F67               	movwf	103,b	;volatile
 35313                           
 35314                           ; BSR set to: 57
 35315                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 35316  01BA6C  0ED5               	movlw	213
 35317  01BA6E  6F66               	movwf	102,b	;volatile
 35318                           
 35319                           ; BSR set to: 57
 35320                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 35321                           ;stkvar	_seed @ sp[(-4)+0]
 35322  01BA70  0EFC               	movlw	-4
 35323  01BA72  6AE3               	clrf	plusw1,c
 35324  01BA74  0EFD               	movlw	-3
 35325  01BA76  6AE3               	clrf	plusw1,c
 35326                           
 35327                           ; BSR set to: 57
 35328                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 35329                           ;stkvar	_seed @ sp[(-4)+0]
 35330  01BA78  0EFD               	movlw	253
 35331  01BA7A  24E1               	addwf	fsr1l,w,c
 35332  01BA7C  6ED9               	movwf	fsr2l,c
 35333  01BA7E  0EFF               	movlw	255
 35334  01BA80  20E2               	addwfc	fsr1h,w,c
 35335  01BA82  6EDA               	movwf	fsr2h,c
 35336  01BA84  50DF               	movf	indf2,w,c
 35337  01BA86  6F63               	movwf	99,b	;volatile
 35338                           
 35339                           ; BSR set to: 57
 35340                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 35341  01BA88  6B62               	clrf	98,b	;volatile
 35342                           
 35343                           ; BSR set to: 57
 35344                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 35345  01BA8A  3969               	swapf	105,w,b	;volatile
 35346  01BA8C  0B0F               	andlw	15
 35347  01BA8E  6E0C               	movwf	(btemp+11)^0,c
 35348  01BA90  280C               	incf	(btemp+11)^0,w,c
 35349  01BA92  0100               	movlb	0	; () banked
 35350  01BA94  6FAB               	movwf	_crcObj& (0+255),b
 35351                           
 35352                           ; BSR set to: 0
 35353                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 35354  01BA96  0139               	movlb	57	; () banked
 35355  01BA98  5169               	movf	105,w,b	;volatile
 35356  01BA9A  0B0F               	andlw	15
 35357  01BA9C  6E0C               	movwf	(btemp+11)^0,c
 35358  01BA9E  280C               	incf	(btemp+11)^0,w,c
 35359  01BAA0  0100               	movlb	0	; () banked
 35360  01BAA2  6FAC               	movwf	(_crcObj+1)& (0+255),b
 35361                           
 35362                           ; BSR set to: 0
 35363                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 35364  01BAA4  52E5               	movf	postdec1,f,c
 35365  01BAA6  52E5               	movf	postdec1,f,c
 35366  01BAA8  52E5               	movf	postdec1,f,c
 35367  01BAAA  52E5               	movf	postdec1,f,c
 35368  01BAAC  0012               	return		;funcret
 35369  01BAAE                     __end_of_CRC_Initialize:
 35370                           	opt callstack 0
 35371                           
 35372 ;; *************** function _CLKREF_Initialize *****************
 35373 ;; Defined at:
 35374 ;;		line 58 in file "mcc_generated_files/clkref.c"
 35375 ;; Parameters:    Size  Location     Type
 35376 ;;		None
 35377 ;; Auto vars:     Size  Location     Type
 35378 ;;		None
 35379 ;; Return value:  Size  Location     Type
 35380 ;;                  1  [STACK] void 
 35381 ;; Registers used:
 35382 ;;		wreg, status,2
 35383 ;; Tracked objects:
 35384 ;;		On entry : 3F/3B
 35385 ;;		On exit  : 3F/3C
 35386 ;;		Unchanged: 0/0
 35387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35392 ;;Total ram usage:        0 bytes
 35393 ;; Hardware stack levels used:    1
 35394 ;; Hardware stack levels required when called:   15
 35395 ;; This function calls:
 35396 ;;		Nothing
 35397 ;; This function is called by:
 35398 ;;		_SYSTEM_Initialize
 35399 ;; This function uses a reentrant model
 35400 ;;
 35401                           
 35402                           	psect	text153
 35403  01D326                     __ptext153:
 35404                           	opt callstack 0
 35405  01D326                     _CLKREF_Initialize:
 35406                           	opt callstack 14
 35407                           
 35408                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 35409                           
 35410                           ; BSR set to: 0
 35411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35412                           ;incstack = 0
 35413  01D326  013C               	movlb	60	; () banked
 35414  01D328  6BE6               	clrf	230,b	;volatile
 35415                           
 35416                           ; BSR set to: 60
 35417                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 35418  01D32A  0E94               	movlw	148
 35419  01D32C  6FE5               	movwf	229,b	;volatile
 35420                           
 35421                           ; BSR set to: 60
 35422                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35423  01D32E  0012               	return		;funcret
 35424  01D330                     __end_of_CLKREF_Initialize:
 35425                           	opt callstack 0
 35426                           
 35427 ;; *************** function _ADCC_Initialize *****************
 35428 ;; Defined at:
 35429 ;;		line 65 in file "mcc_generated_files/adcc.c"
 35430 ;; Parameters:    Size  Location     Type
 35431 ;;		None
 35432 ;; Auto vars:     Size  Location     Type
 35433 ;;		None
 35434 ;; Return value:  Size  Location     Type
 35435 ;;                  1  [STACK] void 
 35436 ;; Registers used:
 35437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 35438 ;; Tracked objects:
 35439 ;;		On entry : 3F/0
 35440 ;;		On exit  : 0/0
 35441 ;;		Unchanged: 0/0
 35442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35447 ;;Total ram usage:        0 bytes
 35448 ;; Hardware stack levels used:    1
 35449 ;; Hardware stack levels required when called:   16
 35450 ;; This function calls:
 35451 ;;		_ADCC_SetADIInterruptHandler
 35452 ;;		_ADCC_SetADTIInterruptHandler
 35453 ;; This function is called by:
 35454 ;;		_SYSTEM_Initialize
 35455 ;; This function uses a reentrant model
 35456 ;;
 35457                           
 35458                           	psect	text154
 35459  01BF98                     __ptext154:
 35460                           	opt callstack 0
 35461  01BF98                     _ADCC_Initialize:
 35462                           	opt callstack 13
 35463                           
 35464                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 35465                           
 35466                           ; BSR set to: 60
 35467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35468                           ;incstack = 0
 35469  01BF98  013E               	movlb	62	; () banked
 35470  01BF9A  6BDE               	clrf	222,b	;volatile
 35471                           
 35472                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 35473  01BF9C  6BDF               	clrf	223,b	;volatile
 35474                           
 35475                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 35476  01BF9E  6BE0               	clrf	224,b	;volatile
 35477                           
 35478                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 35479  01BFA0  6BE1               	clrf	225,b	;volatile
 35480                           
 35481                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 35482  01BFA2  6BE4               	clrf	228,b	;volatile
 35483                           
 35484                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 35485  01BFA4  6BE5               	clrf	229,b	;volatile
 35486                           
 35487                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 35488  01BFA6  6BEA               	clrf	234,b	;volatile
 35489                           
 35490                           ; BSR set to: 62
 35491                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 35492  01BFA8  0E40               	movlw	64
 35493  01BFAA  6FEC               	movwf	236,b	;volatile
 35494                           
 35495                           ; BSR set to: 62
 35496                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 35497  01BFAC  6BF1               	clrf	241,b	;volatile
 35498                           
 35499                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 35500  01BFAE  0E20               	movlw	32
 35501  01BFB0  6FF3               	movwf	243,b	;volatile
 35502                           
 35503                           ; BSR set to: 62
 35504                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 35505  01BFB2  6BF4               	clrf	244,b	;volatile
 35506                           
 35507                           ; BSR set to: 62
 35508                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 35509  01BFB4  6BF5               	clrf	245,b	;volatile
 35510                           
 35511                           ; BSR set to: 62
 35512                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 35513  01BFB6  6BF6               	clrf	246,b	;volatile
 35514                           
 35515                           ; BSR set to: 62
 35516                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 35517  01BFB8  6BF7               	clrf	247,b	;volatile
 35518                           
 35519                           ; BSR set to: 62
 35520                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 35521  01BFBA  6BF9               	clrf	249,b	;volatile
 35522                           
 35523                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 35524  01BFBC  0E5B               	movlw	91
 35525  01BFBE  6FFA               	movwf	250,b	;volatile
 35526                           
 35527                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 35528  01BFC0  0E27               	movlw	39
 35529  01BFC2  6FFB               	movwf	251,b	;volatile
 35530                           
 35531                           ; BSR set to: 62
 35532                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 35533  01BFC4  6BFC               	clrf	252,b	;volatile
 35534                           
 35535                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 35536  01BFC6  0E02               	movlw	2
 35537  01BFC8  6FFD               	movwf	253,b	;volatile
 35538                           
 35539                           ; BSR set to: 62
 35540                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 35541  01BFCA  6BFE               	clrf	254,b	;volatile
 35542                           
 35543                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 35544  01BFCC  0E07               	movlw	7
 35545  01BFCE  6FFF               	movwf	255,b	;volatile
 35546                           
 35547                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 35548  01BFD0  0E84               	movlw	132
 35549  01BFD2  6FF8               	movwf	248,b	;volatile
 35550                           
 35551                           ; BSR set to: 62
 35552                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 35553  01BFD4  0139               	movlb	57	; () banked
 35554  01BFD6  95A1               	bcf	161,2,b	;volatile
 35555                           
 35556                           ; BSR set to: 57
 35557                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 35558  01BFD8  8591               	bsf	145,2,b	;volatile
 35559                           
 35560                           ; BSR set to: 57
 35561                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 35562  01BFDA  0EB0               	movlw	low _ADCC_DefaultInterruptHandler
 35563  01BFDC  6EE6               	movwf	postinc1,c
 35564  01BFDE  0ED3               	movlw	high _ADCC_DefaultInterruptHandler
 35565  01BFE0  6EE6               	movwf	postinc1,c
 35566  01BFE2  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 35567  01BFE4  6EE6               	movwf	postinc1,c
 35568  01BFE6  EC71  F0E7         	call	_ADCC_SetADIInterruptHandler	;wreg free
 35569                           
 35570                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 35571  01BFEA  0139               	movlb	57	; () banked
 35572  01BFEC  97A1               	bcf	161,3,b	;volatile
 35573                           
 35574                           ; BSR set to: 57
 35575                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 35576  01BFEE  8791               	bsf	145,3,b	;volatile
 35577                           
 35578                           ; BSR set to: 57
 35579                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 35580  01BFF0  0EB0               	movlw	low _ADCC_DefaultInterruptHandler
 35581  01BFF2  6EE6               	movwf	postinc1,c
 35582  01BFF4  0ED3               	movlw	high _ADCC_DefaultInterruptHandler
 35583  01BFF6  6EE6               	movwf	postinc1,c
 35584  01BFF8  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 35585  01BFFA  6EE6               	movwf	postinc1,c
 35586  01BFFC  EC5D  F0E7         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 35587                           
 35588                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35589  01C000  0012               	return		;funcret
 35590  01C002                     __end_of_ADCC_Initialize:
 35591                           	opt callstack 0
 35592                           
 35593 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 35594 ;; Defined at:
 35595 ;;		line 336 in file "mcc_generated_files/adcc.c"
 35596 ;; Parameters:    Size  Location     Type
 35597 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35598 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 35599 ;; Auto vars:     Size  Location     Type
 35600 ;;		None
 35601 ;; Return value:  Size  Location     Type
 35602 ;;                  1  [STACK] void 
 35603 ;; Registers used:
 35604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35605 ;; Tracked objects:
 35606 ;;		On entry : 0/0
 35607 ;;		On exit  : 0/0
 35608 ;;		Unchanged: 0/0
 35609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35614 ;;Total ram usage:        0 bytes
 35615 ;; Hardware stack levels used:    1
 35616 ;; Hardware stack levels required when called:   15
 35617 ;; This function calls:
 35618 ;;		Nothing
 35619 ;; This function is called by:
 35620 ;;		_ADCC_Initialize
 35621 ;;		_start_adc_scan
 35622 ;; This function uses a reentrant model
 35623 ;;
 35624                           
 35625                           	psect	text155
 35626  01CEBA                     __ptext155:
 35627                           	opt callstack 0
 35628  01CEBA                     _ADCC_SetADTIInterruptHandler:
 35629                           	opt callstack 14
 35630                           
 35631                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 35632                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35633                           
 35634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35635                           ;incstack = 0
 35636  01CEBA  50E1               	movf	fsr1l,w,c
 35637  01CEBC  0FFD               	addlw	-3
 35638  01CEBE  6ED9               	movwf	fsr2l,c
 35639  01CEC0  50E2               	movf	fsr1h,w,c
 35640  01CEC2  6EDA               	movwf	fsr2h,c
 35641  01CEC4  0EFF               	movlw	255
 35642  01CEC6  22DA               	addwfc	fsr2h,f,c
 35643  01CEC8  006F FF78  F081    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 35644  01CECE  006F FF78  F082    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 35645  01CED4  006F FF74  F083    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 35646                           
 35647                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 35648  01CEDA  52E5               	movf	postdec1,f,c
 35649  01CEDC  52E5               	movf	postdec1,f,c
 35650  01CEDE  52E5               	movf	postdec1,f,c
 35651  01CEE0  0012               	return		;funcret
 35652  01CEE2                     __end_of_ADCC_SetADTIInterruptHandler:
 35653                           	opt callstack 0
 35654                           
 35655 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 35656 ;; Defined at:
 35657 ;;		line 323 in file "mcc_generated_files/adcc.c"
 35658 ;; Parameters:    Size  Location     Type
 35659 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 35660 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 35661 ;; Auto vars:     Size  Location     Type
 35662 ;;		None
 35663 ;; Return value:  Size  Location     Type
 35664 ;;                  1  [STACK] void 
 35665 ;; Registers used:
 35666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 35667 ;; Tracked objects:
 35668 ;;		On entry : 6/0
 35669 ;;		On exit  : 0/0
 35670 ;;		Unchanged: 0/0
 35671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35676 ;;Total ram usage:        0 bytes
 35677 ;; Hardware stack levels used:    1
 35678 ;; Hardware stack levels required when called:   15
 35679 ;; This function calls:
 35680 ;;		Nothing
 35681 ;; This function is called by:
 35682 ;;		_ADCC_Initialize
 35683 ;;		_start_adc_scan
 35684 ;; This function uses a reentrant model
 35685 ;;
 35686                           
 35687                           	psect	text156
 35688  01CEE2                     __ptext156:
 35689                           	opt callstack 0
 35690  01CEE2                     _ADCC_SetADIInterruptHandler:
 35691                           	opt callstack 14
 35692                           
 35693                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 35694                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 35695                           
 35696                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35697                           ;incstack = 0
 35698  01CEE2  50E1               	movf	fsr1l,w,c
 35699  01CEE4  0FFD               	addlw	-3
 35700  01CEE6  6ED9               	movwf	fsr2l,c
 35701  01CEE8  50E2               	movf	fsr1h,w,c
 35702  01CEEA  6EDA               	movwf	fsr2h,c
 35703  01CEEC  0EFF               	movlw	255
 35704  01CEEE  22DA               	addwfc	fsr2h,f,c
 35705  01CEF0  006F FF78  F084    	movff	postinc2,_ADCC_ADI_InterruptHandler
 35706  01CEF6  006F FF78  F085    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 35707  01CEFC  006F FF74  F086    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 35708                           
 35709                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 35710  01CF02  52E5               	movf	postdec1,f,c
 35711  01CF04  52E5               	movf	postdec1,f,c
 35712  01CF06  52E5               	movf	postdec1,f,c
 35713  01CF08  0012               	return		;funcret
 35714  01CF0A                     __end_of_ADCC_SetADIInterruptHandler:
 35715                           	opt callstack 0
 35716                           
 35717 ;; *************** function _INT1_ISR *****************
 35718 ;; Defined at:
 35719 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 35720 ;; Parameters:    Size  Location     Type
 35721 ;;		None
 35722 ;; Auto vars:     Size  Location     Type
 35723 ;;		None
 35724 ;; Return value:  Size  Location     Type
 35725 ;;                  1    wreg      void 
 35726 ;; Registers used:
 35727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 35728 ;; Tracked objects:
 35729 ;;		On entry : 0/0
 35730 ;;		On exit  : 0/0
 35731 ;;		Unchanged: 0/0
 35732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35735 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35736 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35737 ;;Total ram usage:        4 bytes
 35738 ;; Hardware stack levels used:    1
 35739 ;; Hardware stack levels required when called:    5
 35740 ;; This function calls:
 35741 ;;		_INT1_CallBack
 35742 ;; This function is called by:
 35743 ;;		Interrupt level 1
 35744 ;; This function uses a non-reentrant model
 35745 ;;
 35746                           
 35747                           	psect	text157
 35748  01C934                     __ptext157:
 35749                           	opt callstack 0
 35750  01C934                     _INT1_ISR:
 35751                           	opt callstack 11
 35752                           
 35753                           ;incstack = 0
 35754  01C934  006F FF60  F027    	movff	status,??_INT1_ISR
 35755  01C93A  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 35756  01C940  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 35757  01C946  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 35758  01C94C  EE16  F104         	lfsr	1,___intlo_sp
 35759                           
 35760                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 35761  01C950  0139               	movlb	57	; () banked
 35762  01C952  91A5               	bcf	165,0,b	;volatile
 35763                           
 35764                           ; BSR set to: 57
 35765                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 35766  01C954  ECD4  F0E7         	call	_INT1_CallBack	;wreg free
 35767  01C958  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 35768  01C95E  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 35769  01C964  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 35770  01C96A  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 35771  01C970  0011               	retfie		f
 35772  01C972                     __end_of_INT1_ISR:
 35773                           	opt callstack 0
 35774                           
 35775 ;; *************** function _INT1_CallBack *****************
 35776 ;; Defined at:
 35777 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 35778 ;; Parameters:    Size  Location     Type
 35779 ;;		None
 35780 ;; Auto vars:     Size  Location     Type
 35781 ;;		None
 35782 ;; Return value:  Size  Location     Type
 35783 ;;                  1  [STACK] void 
 35784 ;; Registers used:
 35785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 35786 ;; Tracked objects:
 35787 ;;		On entry : 3F/39
 35788 ;;		On exit  : 0/0
 35789 ;;		Unchanged: 0/0
 35790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35795 ;;Total ram usage:        0 bytes
 35796 ;; Hardware stack levels used:    1
 35797 ;; Hardware stack levels required when called:    4
 35798 ;; This function calls:
 35799 ;;		Absolute function
 35800 ;;		_INT1_DefaultInterruptHandler
 35801 ;;		_switch_handler
 35802 ;; This function is called by:
 35803 ;;		_INT1_ISR
 35804 ;; This function uses a reentrant model
 35805 ;;
 35806                           
 35807                           	psect	text158
 35808  01CFA8                     __ptext158:
 35809                           	opt callstack 0
 35810  01CFA8                     _INT1_CallBack:
 35811                           	opt callstack 11
 35812                           
 35813                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 35814                           
 35815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35816                           ;incstack = 0
 35817  01CFA8  0100               	movlb	0	; () banked
 35818  01CFAA  5190               	movf	_INT1_InterruptHandler& (0+255),w,b
 35819  01CFAC  1191               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 35820  01CFAE  1192               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 35821  01CFB0  B4D8               	btfsc	status,2,c
 35822  01CFB2  0012               	return	
 35823                           
 35824                           ; BSR set to: 0
 35825                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 35826  01CFB4  D801               	call	u1076_28
 35827  01CFB6  0012               	return	
 35828  01CFB8                     u1076_28:
 35829  01CFB8  0005               	push	
 35830  01CFBA  6EFA               	movwf	pclath,c
 35831  01CFBC  5190               	movf	_INT1_InterruptHandler& (0+255),w,b
 35832  01CFBE  6EFD               	movwf	tosl,c
 35833  01CFC0  5191               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 35834  01CFC2  6EFE               	movwf	tosh,c
 35835  01CFC4  5192               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 35836  01CFC6  6EFF               	movwf	tosu,c
 35837  01CFC8  50FA               	movf	pclath,w,c
 35838  01CFCA  0012               	return		;indir
 35839  01CFCC                     __end_of_INT1_CallBack:
 35840                           	opt callstack 0
 35841                           
 35842 ;; *************** function _INT1_DefaultInterruptHandler *****************
 35843 ;; Defined at:
 35844 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 35845 ;; Parameters:    Size  Location     Type
 35846 ;;		None
 35847 ;; Auto vars:     Size  Location     Type
 35848 ;;		None
 35849 ;; Return value:  Size  Location     Type
 35850 ;;                  1  [STACK] void 
 35851 ;; Registers used:
 35852 ;;		None
 35853 ;; Tracked objects:
 35854 ;;		On entry : 3F/0
 35855 ;;		On exit  : 0/0
 35856 ;;		Unchanged: 0/0
 35857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35862 ;;Total ram usage:        0 bytes
 35863 ;; Hardware stack levels used:    1
 35864 ;; Hardware stack levels required when called:    3
 35865 ;; This function calls:
 35866 ;;		Nothing
 35867 ;; This function is called by:
 35868 ;;		_EXT_INT_Initialize
 35869 ;;		_INT1_CallBack
 35870 ;; This function uses a reentrant model
 35871 ;;
 35872                           
 35873                           	psect	text159
 35874  01D3AA                     __ptext159:
 35875                           	opt callstack 0
 35876  01D3AA                     _INT1_DefaultInterruptHandler:
 35877                           	opt callstack 11
 35878                           
 35879                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35880                           
 35881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35882                           ;incstack = 0
 35883  01D3AA  0012               	return		;funcret
 35884  01D3AC                     __end_of_INT1_DefaultInterruptHandler:
 35885                           	opt callstack 0
 35886                           
 35887 ;; *************** function _switch_handler *****************
 35888 ;; Defined at:
 35889 ;;		line 58 in file "dio.c"
 35890 ;; Parameters:    Size  Location     Type
 35891 ;;		None
 35892 ;; Auto vars:     Size  Location     Type
 35893 ;;  i               1  [STACK] unsigned char 
 35894 ;;  sw_value        1  [STACK] unsigned char 
 35895 ;; Return value:  Size  Location     Type
 35896 ;;                  1  [STACK] void 
 35897 ;; Registers used:
 35898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 35899 ;; Tracked objects:
 35900 ;;		On entry : 3F/0
 35901 ;;		On exit  : 0/0
 35902 ;;		Unchanged: 0/0
 35903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35908 ;;Total ram usage:        0 bytes
 35909 ;; Hardware stack levels used:    1
 35910 ;; Hardware stack levels required when called:    3
 35911 ;; This function calls:
 35912 ;;		Nothing
 35913 ;; This function is called by:
 35914 ;;		_start_switch_handler
 35915 ;;		_INT1_CallBack
 35916 ;; This function uses a reentrant model
 35917 ;;
 35918                           
 35919                           	psect	text160
 35920  019EF8                     __ptext160:
 35921                           	opt callstack 0
 35922  019EF8                     _switch_handler:
 35923                           	opt callstack 0
 35924                           
 35925                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35926  019EF8  52E6               	movf	postinc1,f,c
 35927  019EFA  52E6               	movf	postinc1,f,c
 35928                           
 35929                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 35930                           ;stkvar	_i @ sp[(-2)+0]
 35931                           
 35932                           ;incstack = 0
 35933  019EFC  0EFE               	movlw	-2
 35934  019EFE  6AE3               	clrf	plusw1,c
 35935  019F00  9ABF               	bcf	191,5,c	;volatile
 35936                           
 35937                           ;dio.c: 72:  __nop();
 35938  019F02  F000               	nop	
 35939                           
 35940                           ;dio.c: 73:  __nop();
 35941  019F04  F000               	nop	
 35942                           
 35943                           ;dio.c: 74:  __nop();
 35944  019F06  F000               	nop	
 35945                           
 35946                           ;dio.c: 75:  __nop();
 35947  019F08  F000               	nop	
 35948                           
 35949                           ;dio.c: 76:  __nop();
 35950  019F0A  F000               	nop	
 35951                           
 35952                           ;dio.c: 77:  __nop();
 35953  019F0C  F000               	nop	
 35954  019F0E  D016               	goto	l11531
 35955  019F10                     l11517:
 35956                           
 35957                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 35958  019F10  A6CF               	btfss	207,3,c	;volatile
 35959  019F12  D00E               	goto	u1042_20
 35960  019F14  D00A               	goto	u1042_21
 35961  019F16                     u1040_28:
 35962                           
 35963                           ;stkvar	_sw_value @ sp[(-2)+1]
 35964  019F16  0EFF               	movlw	-1
 35965  019F18  0060  F033  FFE3   	movff	btemp+11,plusw1
 35966                           
 35967                           ;dio.c: 83:    break;
 35968  019F1E  D027               	goto	l11533
 35969  019F20                     l11519:
 35970                           
 35971                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 35972  019F20  A4CF               	btfss	207,2,c	;volatile
 35973  019F22  D006               	goto	u1042_20
 35974  019F24  D002               	goto	u1042_21
 35975  019F26                     l11521:
 35976                           
 35977                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 35978  019F26  A6CD               	btfss	205,3,c	;volatile
 35979  019F28  D003               	goto	u1042_20
 35980  019F2A                     u1042_21:
 35981  019F2A  6A0C               	clrf	(btemp+11)^0,c
 35982  019F2C  2A0C               	incf	(btemp+11)^0,f,c
 35983  019F2E  D7F3               	goto	u1040_28
 35984  019F30                     u1042_20:
 35985  019F30  6A0C               	clrf	(btemp+11)^0,c
 35986  019F32  D7F1               	goto	u1040_28
 35987  019F34                     l11523:
 35988                           
 35989                           ;dio.c: 91:    sw_value = 1;
 35990                           ;stkvar	_sw_value @ sp[(-2)+1]
 35991  019F34  0EFF               	movlw	-1
 35992  019F36  6AE3               	clrf	plusw1,c
 35993  019F38  2AE3               	incf	plusw1,f,c
 35994                           
 35995                           ;dio.c: 92:    break;
 35996  019F3A  D019               	goto	l11533
 35997  019F3C                     l11531:
 35998                           
 35999                           ;stkvar	_i @ sp[(-2)+0]
 36000  019F3C  0EFE               	movlw	-2
 36001  019F3E  50E3               	movf	plusw1,w,c
 36002  019F40  6E0B               	movwf	(btemp+10)^0,c
 36003  019F42  6A0C               	clrf	(btemp+11)^0,c
 36004                           
 36005                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36006                           ; Switch size 1, requested type "simple"
 36007                           ; Number of cases is 1, Range of values is 0 to 0
 36008                           ; switch strategies available:
 36009                           ; Name         Instructions Cycles
 36010                           ; simple_byte            4     3 (average)
 36011                           ;	Chosen strategy is simple_byte
 36012  019F44  500C               	movf	(btemp+11)^0,w,c
 36013  019F46  0A00               	xorlw	0	; case 0
 36014  019F48  A4D8               	btfss	status,2,c
 36015  019F4A  D7F4               	goto	l11523
 36016                           
 36017                           ; Switch size 1, requested type "simple"
 36018                           ; Number of cases is 5, Range of values is 0 to 4
 36019                           ; switch strategies available:
 36020                           ; Name         Instructions Cycles
 36021                           ; simple_byte           16     9 (average)
 36022                           ;	Chosen strategy is simple_byte
 36023  019F4C  500B               	movf	(btemp+10)^0,w,c
 36024  019F4E  0A00               	xorlw	0	; case 0
 36025  019F50  B4D8               	btfsc	status,2,c
 36026  019F52  D7F0               	goto	l11523
 36027  019F54  0A01               	xorlw	1	; case 1
 36028  019F56  B4D8               	btfsc	status,2,c
 36029  019F58  D7ED               	goto	l11523
 36030  019F5A  0A03               	xorlw	3	; case 2
 36031  019F5C  B4D8               	btfsc	status,2,c
 36032  019F5E  D7E0               	goto	l11519
 36033  019F60  0A01               	xorlw	1	; case 3
 36034  019F62  B4D8               	btfsc	status,2,c
 36035  019F64  D7D5               	goto	l11517
 36036  019F66  0A07               	xorlw	7	; case 4
 36037  019F68  B4D8               	btfsc	status,2,c
 36038  019F6A  D7DD               	goto	l11521
 36039  019F6C  D7E3               	goto	l11523
 36040  019F6E                     l11533:
 36041                           
 36042                           ;dio.c: 102:   if (sw_value) {
 36043                           ;stkvar	_sw_value @ sp[(-2)+1]
 36044  019F6E  0EFF               	movlw	-1
 36045  019F70  50E3               	movf	plusw1,w,c
 36046  019F72  B4D8               	btfsc	status,2,c
 36047  019F74  D018               	goto	l11539
 36048                           
 36049                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 36050                           ;stkvar	_i @ sp[(-2)+0]
 36051  019F76  0EFE               	movlw	-2
 36052  019F78  50E3               	movf	plusw1,w,c
 36053  019F7A  0D05               	mullw	5
 36054  019F7C  0E00               	movlw	low _S
 36055  019F7E  24F3               	addwf	243,w,c
 36056  019F80  6ED9               	movwf	fsr2l,c
 36057  019F82  0E02               	movlw	high _S
 36058  019F84  20F4               	addwfc	prodh,w,c
 36059  019F86  6EDA               	movwf	fsr2h,c
 36060  019F88  04DE               	decf	postinc2,w,c
 36061  019F8A  A4D8               	btfss	status,2,c
 36062  019F8C  D049               	goto	l11547
 36063                           
 36064                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 36065                           ;stkvar	_i @ sp[(-2)+0]
 36066  019F8E  0EFE               	movlw	-2
 36067  019F90  50E3               	movf	plusw1,w,c
 36068  019F92  0D05               	mullw	5
 36069  019F94  0E00               	movlw	low _S
 36070  019F96  24F3               	addwf	243,w,c
 36071  019F98  6ED9               	movwf	fsr2l,c
 36072  019F9A  0E02               	movlw	high _S
 36073  019F9C  20F4               	addwfc	prodh,w,c
 36074  019F9E  6EDA               	movwf	fsr2h,c
 36075  019FA0  0E00               	movlw	0
 36076  019FA2  6EDF               	movwf	indf2,c
 36077  019FA4  D03D               	goto	l11547
 36078  019FA6                     l11539:
 36079                           
 36080                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 36081                           ;stkvar	_i @ sp[(-2)+0]
 36082  019FA6  0EFE               	movlw	-2
 36083  019FA8  50E3               	movf	plusw1,w,c
 36084  019FAA  0D05               	mullw	5
 36085  019FAC  0E00               	movlw	low _S
 36086  019FAE  24F3               	addwf	243,w,c
 36087  019FB0  6ED9               	movwf	fsr2l,c
 36088  019FB2  0E02               	movlw	high _S
 36089  019FB4  20F4               	addwfc	prodh,w,c
 36090  019FB6  6EDA               	movwf	fsr2h,c
 36091  019FB8  50DF               	movf	indf2,w,c
 36092  019FBA  A4D8               	btfss	status,2,c
 36093  019FBC  D031               	goto	l11547
 36094                           
 36095                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 36096                           ;stkvar	_i @ sp[(-2)+0]
 36097  019FBE  0EFE               	movlw	-2
 36098  019FC0  50E3               	movf	plusw1,w,c
 36099  019FC2  0D05               	mullw	5
 36100  019FC4  0E00               	movlw	low _S
 36101  019FC6  24F3               	addwf	243,w,c
 36102  019FC8  6ED9               	movwf	fsr2l,c
 36103  019FCA  0E02               	movlw	high _S
 36104  019FCC  20F4               	addwfc	prodh,w,c
 36105  019FCE  6EDA               	movwf	fsr2h,c
 36106  019FD0  0E01               	movlw	1
 36107  019FD2  6EDF               	movwf	indf2,c
 36108                           
 36109                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 36110  019FD4  EE20  F1C3         	lfsr	2,_V+188	;volatile
 36111                           
 36112                           ;stkvar	_i @ sp[(-2)+0]
 36113  019FD8  0EFE               	movlw	-2
 36114  019FDA  50E3               	movf	plusw1,w,c
 36115  019FDC  0D05               	mullw	5
 36116  019FDE  0E01               	movlw	low (_S+1)
 36117  019FE0  24F3               	addwf	243,w,c
 36118  019FE2  6EE9               	movwf	fsr0l,c
 36119  019FE4  0E02               	movlw	high (_S+1)
 36120  019FE6  20F4               	addwfc	prodh,w,c
 36121  019FE8  6EEA               	movwf	fsr0h,c
 36122  019FEA  006F FF7B FFEE     	movff	postinc2,postinc0
 36123  019FF0  006F FF7B FFEE     	movff	postinc2,postinc0
 36124  019FF6  006F FF7B FFEE     	movff	postinc2,postinc0
 36125  019FFC  006F FF7B FFEE     	movff	postinc2,postinc0
 36126                           
 36127                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 36128                           ;stkvar	_i @ sp[(-2)+0]
 36129  01A002  0EFE               	movlw	-2
 36130  01A004  006F FF8C  F00C    	movff	plusw1,btemp+11
 36131  01A00A  0E01               	movlw	1
 36132  01A00C  6E0B               	movwf	(btemp+10)^0,c
 36133  01A00E  2A0C               	incf	(btemp+11)^0,f,c
 36134  01A010  D002               	goto	u1046_24
 36135  01A012                     u1046_25:
 36136  01A012  90D8               	bcf	status,0,c
 36137  01A014  360B               	rlcf	(btemp+10)^0,f,c
 36138  01A016                     u1046_24:
 36139  01A016  2E0C               	decfsz	(btemp+11)^0,f,c
 36140  01A018  D7FC               	goto	u1046_25
 36141  01A01A  500B               	movf	(btemp+10)^0,w,c
 36142  01A01C  0102               	movlb	2	; () banked
 36143  01A01E  1328               	iorwf	(_S+40)& (0+255),f,b	;volatile
 36144  01A020                     l11547:
 36145                           
 36146                           ;dio.c: 113:  } while (++i < 6);
 36147                           ;stkvar	_i @ sp[(-2)+0]
 36148  01A020  0EFE               	movlw	-2
 36149  01A022  2AE3               	incf	plusw1,f,c
 36150  01A024  0EFE               	movlw	-2
 36151  01A026  006F FF8C  F001    	movff	plusw1,btemp
 36152  01A02C  0E05               	movlw	5
 36153  01A02E  6401               	cpfsgt	btemp^0,c
 36154  01A030  D785               	goto	l11531
 36155                           
 36156                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 36157  01A032  8ABF               	bsf	191,5,c	;volatile
 36158                           
 36159                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 36160  01A034  52E5               	movf	postdec1,f,c
 36161  01A036  52E5               	movf	postdec1,f,c
 36162  01A038  0012               	return		;funcret
 36163  01A03A                     __end_of_switch_handler:
 36164                           	opt callstack 0
 36165                           
 36166 ;; *************** function _TMR5_ISR *****************
 36167 ;; Defined at:
 36168 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 36169 ;; Parameters:    Size  Location     Type
 36170 ;;		None
 36171 ;; Auto vars:     Size  Location     Type
 36172 ;;		None
 36173 ;; Return value:  Size  Location     Type
 36174 ;;                  1    wreg      void 
 36175 ;; Registers used:
 36176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 36177 ;; Tracked objects:
 36178 ;;		On entry : 0/0
 36179 ;;		On exit  : 3F/0
 36180 ;;		Unchanged: 0/0
 36181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36184 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36185 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36186 ;;Total ram usage:       15 bytes
 36187 ;; Hardware stack levels used:    1
 36188 ;; Hardware stack levels required when called:    9
 36189 ;; This function calls:
 36190 ;;		_TMR5_CallBack
 36191 ;;		_TMR5_WriteTimer
 36192 ;; This function is called by:
 36193 ;;		Interrupt level 1
 36194 ;; This function uses a non-reentrant model
 36195 ;;
 36196                           
 36197                           	psect	text161
 36198  01AE2C                     __ptext161:
 36199                           	opt callstack 0
 36200  01AE2C                     _TMR5_ISR:
 36201                           	opt callstack 7
 36202                           
 36203                           ;incstack = 0
 36204  01AE2C  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 36205  01AE32  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 36206  01AE38  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 36207  01AE3E  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 36208  01AE44  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 36209  01AE4A  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 36210  01AE50  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 36211  01AE56  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 36212  01AE5C  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 36213  01AE62  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 36214  01AE68  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 36215  01AE6E  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 36216  01AE74  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 36217  01AE7A  EE16  F104         	lfsr	1,___intlo_sp
 36218                           
 36219                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 36220  01AE7E  0139               	movlb	57	; () banked
 36221  01AE80  9DA8               	bcf	168,6,b	;volatile
 36222                           
 36223                           ; BSR set to: 57
 36224                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 36225  01AE82  0060  F27B  FFE6   	movff	_timer5ReloadVal,postinc1
 36226  01AE88  0060  F27F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 36227  01AE8E  EC5A  F0E4         	call	_TMR5_WriteTimer	;wreg free
 36228                           
 36229                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 36230  01AE92  0101               	movlb	1	; () banked
 36231  01AE94  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 36232  01AE96  6E2B               	movwf	??_TMR5_ISR^0,c
 36233  01AE98  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 36234  01AE9A  0E05               	movlw	5
 36235  01AE9C  262B               	addwf	??_TMR5_ISR^0,f,c
 36236  01AE9E  0E00               	movlw	0
 36237  01AEA0  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 36238  01AEA2  0100               	movlb	0	; () banked
 36239  01AEA4  4B9C               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 36240  01AEA6  2B9D               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 36241  01AEA8  502B               	movf	??_TMR5_ISR^0,w,c
 36242  01AEAA  5D9C               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 36243  01AEAC  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 36244  01AEAE  599D               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 36245  01AEB0  A0D8               	btfss	status,0,c
 36246  01AEB2  D005               	goto	i1l1021
 36247                           
 36248                           ; BSR set to: 0
 36249                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 36250  01AEB4  ECE6  F0E7         	call	_TMR5_CallBack	;wreg free
 36251                           
 36252                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 36253  01AEB8  0100               	movlb	0	; () banked
 36254  01AEBA  6B9C               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 36255  01AEBC  6B9D               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 36256  01AEBE                     i1l1021:
 36257                           
 36258                           ; BSR set to: 0
 36259  01AEBE  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 36260  01AEC4  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 36261  01AECA  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 36262  01AED0  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 36263  01AED6  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 36264  01AEDC  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 36265  01AEE2  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 36266  01AEE8  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 36267  01AEEE  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 36268  01AEF4  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 36269  01AEFA  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 36270  01AF00  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 36271  01AF06  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 36272  01AF0C  0011               	retfie		f
 36273  01AF0E                     __end_of_TMR5_ISR:
 36274                           	opt callstack 0
 36275                           
 36276 ;; *************** function _TMR5_WriteTimer *****************
 36277 ;; Defined at:
 36278 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 36279 ;; Parameters:    Size  Location     Type
 36280 ;;  timerVal        2  [STACK] unsigned short 
 36281 ;; Auto vars:     Size  Location     Type
 36282 ;;		None
 36283 ;; Return value:  Size  Location     Type
 36284 ;;                  1  [STACK] void 
 36285 ;; Registers used:
 36286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 36287 ;; Tracked objects:
 36288 ;;		On entry : 3F/39
 36289 ;;		On exit  : 0/0
 36290 ;;		Unchanged: 0/0
 36291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36296 ;;Total ram usage:        0 bytes
 36297 ;; Hardware stack levels used:    1
 36298 ;; Hardware stack levels required when called:    3
 36299 ;; This function calls:
 36300 ;;		Nothing
 36301 ;; This function is called by:
 36302 ;;		_TMR5_ISR
 36303 ;; This function uses a reentrant model
 36304 ;;
 36305                           
 36306                           	psect	text162
 36307  01C8B4                     __ptext162:
 36308                           	opt callstack 0
 36309  01C8B4                     _TMR5_WriteTimer:
 36310                           	opt callstack 12
 36311                           
 36312                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 36313                           
 36314                           ; BSR set to: 0
 36315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36316                           ;incstack = 0
 36317  01C8B4  A49A               	btfss	154,2,c	;volatile
 36318  01C8B6  D00F               	goto	l11759
 36319                           
 36320                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 36321  01C8B8  909A               	bcf	154,0,c	;volatile
 36322                           
 36323                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 36324                           ;stkvar	_timerVal @ sp[(0)+-2]
 36325  01C8BA  0EFF               	movlw	255
 36326  01C8BC  24E1               	addwf	fsr1l,w,c
 36327  01C8BE  6ED9               	movwf	fsr2l,c
 36328  01C8C0  0EFF               	movlw	255
 36329  01C8C2  20E2               	addwfc	fsr1h,w,c
 36330  01C8C4  6EDA               	movwf	fsr2h,c
 36331  01C8C6  50DF               	movf	indf2,w,c
 36332  01C8C8  6E99               	movwf	153,c	;volatile
 36333                           
 36334                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 36335                           ;stkvar	_timerVal @ sp[(0)+-2]
 36336  01C8CA  0EFE               	movlw	-2
 36337  01C8CC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 36338                           
 36339                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 36340  01C8D2  809A               	bsf	154,0,c	;volatile
 36341                           
 36342                           ;mcc_generated_files/tmr5.c: 144:  } else {
 36343  01C8D4  D00C               	goto	l1004
 36344  01C8D6                     l11759:
 36345                           
 36346                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 36347                           ;stkvar	_timerVal @ sp[(0)+-2]
 36348  01C8D6  0EFF               	movlw	255
 36349  01C8D8  24E1               	addwf	fsr1l,w,c
 36350  01C8DA  6ED9               	movwf	fsr2l,c
 36351  01C8DC  0EFF               	movlw	255
 36352  01C8DE  20E2               	addwfc	fsr1h,w,c
 36353  01C8E0  6EDA               	movwf	fsr2h,c
 36354  01C8E2  50DF               	movf	indf2,w,c
 36355  01C8E4  6E99               	movwf	153,c	;volatile
 36356                           
 36357                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 36358                           ;stkvar	_timerVal @ sp[(0)+-2]
 36359  01C8E6  0EFE               	movlw	-2
 36360  01C8E8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 36361  01C8EE                     l1004:
 36362                           
 36363                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 36364  01C8EE  52E5               	movf	postdec1,f,c
 36365  01C8F0  52E5               	movf	postdec1,f,c
 36366  01C8F2  0012               	return		;funcret
 36367  01C8F4                     __end_of_TMR5_WriteTimer:
 36368                           	opt callstack 0
 36369                           
 36370 ;; *************** function _TMR5_CallBack *****************
 36371 ;; Defined at:
 36372 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 36373 ;; Parameters:    Size  Location     Type
 36374 ;;		None
 36375 ;; Auto vars:     Size  Location     Type
 36376 ;;		None
 36377 ;; Return value:  Size  Location     Type
 36378 ;;                  1  [STACK] void 
 36379 ;; Registers used:
 36380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 36381 ;; Tracked objects:
 36382 ;;		On entry : 3F/0
 36383 ;;		On exit  : 0/0
 36384 ;;		Unchanged: 0/0
 36385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36390 ;;Total ram usage:        0 bytes
 36391 ;; Hardware stack levels used:    1
 36392 ;; Hardware stack levels required when called:    8
 36393 ;; This function calls:
 36394 ;;		Absolute function
 36395 ;;		_TMR5_DefaultInterruptHandler
 36396 ;; This function is called by:
 36397 ;;		_TMR5_ISR
 36398 ;; This function uses a reentrant model
 36399 ;;
 36400                           
 36401                           	psect	text163
 36402  01CFCC                     __ptext163:
 36403                           	opt callstack 0
 36404  01CFCC                     _TMR5_CallBack:
 36405                           	opt callstack 7
 36406                           
 36407                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 36408                           
 36409                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36410                           ;incstack = 0
 36411  01CFCC  0100               	movlb	0	; () banked
 36412  01CFCE  517B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 36413  01CFD0  117C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 36414  01CFD2  117D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 36415  01CFD4  B4D8               	btfsc	status,2,c
 36416  01CFD6  0012               	return	
 36417                           
 36418                           ; BSR set to: 0
 36419                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 36420  01CFD8  D801               	call	u1085_28
 36421  01CFDA  0012               	return	
 36422  01CFDC                     u1085_28:
 36423  01CFDC  0005               	push	
 36424  01CFDE  6EFA               	movwf	pclath,c
 36425  01CFE0  517B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 36426  01CFE2  6EFD               	movwf	tosl,c
 36427  01CFE4  517C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 36428  01CFE6  6EFE               	movwf	tosh,c
 36429  01CFE8  517D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 36430  01CFEA  6EFF               	movwf	tosu,c
 36431  01CFEC  50FA               	movf	pclath,w,c
 36432  01CFEE  0012               	return		;indir
 36433  01CFF0                     __end_of_TMR5_CallBack:
 36434                           	opt callstack 0
 36435                           
 36436 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 36437 ;; Defined at:
 36438 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 36439 ;; Parameters:    Size  Location     Type
 36440 ;;		None
 36441 ;; Auto vars:     Size  Location     Type
 36442 ;;		None
 36443 ;; Return value:  Size  Location     Type
 36444 ;;                  1  [STACK] void 
 36445 ;; Registers used:
 36446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36447 ;; Tracked objects:
 36448 ;;		On entry : 3F/0
 36449 ;;		On exit  : 0/0
 36450 ;;		Unchanged: 0/0
 36451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36456 ;;Total ram usage:        0 bytes
 36457 ;; Hardware stack levels used:    1
 36458 ;; Hardware stack levels required when called:    7
 36459 ;; This function calls:
 36460 ;;		_check_day_time
 36461 ;; This function is called by:
 36462 ;;		_TMR5_Initialize
 36463 ;;		_TMR5_CallBack
 36464 ;; This function uses a reentrant model
 36465 ;;
 36466                           
 36467                           	psect	text164
 36468  01CA1E                     __ptext164:
 36469                           	opt callstack 0
 36470  01CA1E                     _TMR5_DefaultInterruptHandler:
 36471                           	opt callstack 7
 36472                           
 36473                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 36474                           
 36475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36476                           ;incstack = 0
 36477  01CA1E  A0BE               	btfss	190,0,c	;volatile
 36478  01CA20  D002               	goto	u1011_20
 36479  01CA22  0E01               	movlw	1
 36480  01CA24  D001               	goto	u1011_26
 36481  01CA26                     u1011_20:
 36482  01CA26  0E00               	movlw	0
 36483  01CA28                     u1011_26:
 36484  01CA28  0AFF               	xorlw	255
 36485  01CA2A  6E0C               	movwf	(btemp+11)^0,c
 36486  01CA2C  50BE               	movf	190,w,c	;volatile
 36487  01CA2E  180C               	xorwf	(btemp+11)^0,w,c
 36488  01CA30  0BFE               	andlw	-2
 36489  01CA32  180C               	xorwf	(btemp+11)^0,w,c
 36490  01CA34  6EBE               	movwf	190,c	;volatile
 36491                           
 36492                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 36493  01CA36  0E01               	movlw	1
 36494  01CA38  0101               	movlb	1	; () banked
 36495  01CA3A  27C3               	addwf	(_V+188)& (0+255),f,b	;volatile
 36496  01CA3C  0E00               	movlw	0
 36497  01CA3E  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 36498  01CA40  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 36499  01CA42  23C6               	addwfc	(_V+191)& (0+255),f,b	;volatile
 36500                           
 36501                           ; BSR set to: 1
 36502                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 36503  01CA44  0E01               	movlw	1
 36504  01CA46  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 36505  01CA48  0E00               	movlw	0
 36506  01CA4A  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 36507  01CA4C  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 36508  01CA4E  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 36509                           
 36510                           ; BSR set to: 1
 36511                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 36512  01CA50  ECE3  F0C8         	call	_check_day_time	;wreg free
 36513                           
 36514                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36515  01CA54  0012               	return		;funcret
 36516  01CA56                     __end_of_TMR5_DefaultInterruptHandler:
 36517                           	opt callstack 0
 36518                           
 36519 ;; *************** function _check_day_time *****************
 36520 ;; Defined at:
 36521 ;;		line 165 in file "mbmc.c"
 36522 ;; Parameters:    Size  Location     Type
 36523 ;;		None
 36524 ;; Auto vars:     Size  Location     Type
 36525 ;;  light           4  [STACK] float 
 36526 ;; Return value:  Size  Location     Type
 36527 ;;                  1  [STACK] _Bool 
 36528 ;; Registers used:
 36529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36530 ;; Tracked objects:
 36531 ;;		On entry : 3F/1
 36532 ;;		On exit  : 0/0
 36533 ;;		Unchanged: 0/0
 36534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36539 ;;Total ram usage:        0 bytes
 36540 ;; Hardware stack levels used:    1
 36541 ;; Hardware stack levels required when called:    6
 36542 ;; This function calls:
 36543 ;;		___flge
 36544 ;;		_conv_raw_result
 36545 ;;		_get_ac_charger_relay
 36546 ;;		_set_ac_charger_relay
 36547 ;; This function is called by:
 36548 ;;		_TMR5_DefaultInterruptHandler
 36549 ;; This function uses a reentrant model
 36550 ;;
 36551                           
 36552                           	psect	text165
 36553  0191C6                     __ptext165:
 36554                           	opt callstack 0
 36555  0191C6                     _check_day_time:
 36556                           	opt callstack 0
 36557                           
 36558                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36559  0191C6  52E6               	movf	postinc1,f,c
 36560  0191C8  52E6               	movf	postinc1,f,c
 36561  0191CA  52E6               	movf	postinc1,f,c
 36562  0191CC  52E6               	movf	postinc1,f,c
 36563                           
 36564                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 36565                           
 36566                           ;incstack = 0
 36567  0191CE  0E00               	movlw	0
 36568  0191D0  6EE6               	movwf	postinc1,c
 36569  0191D2  0E0D               	movlw	13
 36570  0191D4  6EE6               	movwf	postinc1,c
 36571  0191D6  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 36572                           
 36573                           ;stkvar	_light @ sp[(-4)+0]
 36574  0191DA  0EFC               	movlw	-4
 36575  0191DC  0060  F007  FFE3   	movff	btemp,plusw1
 36576  0191E2  0EFD               	movlw	-3
 36577  0191E4  0060  F00B  FFE3   	movff	btemp+1,plusw1
 36578  0191EA  0EFE               	movlw	-2
 36579  0191EC  0060  F00F  FFE3   	movff	btemp+2,plusw1
 36580  0191F2  0EFF               	movlw	-1
 36581  0191F4  0060  F013  FFE3   	movff	btemp+3,plusw1
 36582                           
 36583                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 36584  0191FA  2A41               	incf	check_day_time@day_delay^0,f,c
 36585  0191FC  0441               	decf	check_day_time@day_delay^0,w,c
 36586  0191FE  A4D8               	btfss	status,2,c
 36587  019200  D0A9               	goto	l2058
 36588  019202  0101               	movlb	1	; () banked
 36589  019204  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 36590  019206  B4D8               	btfsc	status,2,c
 36591  019208  D0A5               	goto	l2058
 36592                           
 36593                           ; BSR set to: 1
 36594                           ;mbmc.c: 173:   if (C.soc > 3) {
 36595  01920A  EE22  F0B5         	lfsr	2,_C+182	;volatile
 36596  01920E  0E01               	movlw	1
 36597  019210  50DB               	movf	plusw2,w,c
 36598  019212  E104               	bnz	u981_20
 36599  019214  0E04               	movlw	4
 36600  019216  5CDE               	subwf	postinc2,w,c
 36601  019218  A0D8               	btfss	status,0,c
 36602  01921A  D073               	goto	l10649
 36603  01921C                     u981_20:
 36604                           
 36605                           ; BSR set to: 1
 36606                           ;mbmc.c: 174:    if (!C.day) {
 36607  01921C  EE22  F121         	lfsr	2,_C+290	;volatile
 36608  019220  50DF               	movf	indf2,w,c
 36609  019222  A4D8               	btfss	status,2,c
 36610  019224  D035               	goto	l10637
 36611                           
 36612                           ; BSR set to: 1
 36613                           ;mbmc.c: 175:     if (light > 22.0) {
 36614                           ;stkvar	_light @ sp[(-4)+0]
 36615  019226  0EFC               	movlw	-4
 36616  019228  006F FF8F FFE6     	movff	plusw1,postinc1
 36617  01922E  006F FF8F FFE6     	movff	plusw1,postinc1
 36618  019234  006F FF8F FFE6     	movff	plusw1,postinc1
 36619  01923A  006F FF8F FFE6     	movff	plusw1,postinc1
 36620  019240  0E00               	movlw	0
 36621  019242  6EE6               	movwf	postinc1,c
 36622  019244  0E00               	movlw	0
 36623  019246  6EE6               	movwf	postinc1,c
 36624  019248  0EB0               	movlw	176
 36625  01924A  6EE6               	movwf	postinc1,c
 36626  01924C  0E41               	movlw	65
 36627  01924E  6EE6               	movwf	postinc1,c
 36628  019250  EC73  F0CD         	call	___flge	;wreg free
 36629  019254  B001               	btfsc	btemp& (0+255),0,c
 36630  019256  D07E               	goto	l2058
 36631                           
 36632                           ;mbmc.c: 176:      C.day = 1;
 36633  019258  0E01               	movlw	1
 36634  01925A  006F FFA0  F921    	movff	wreg,_C+290	;volatile
 36635                           
 36636                           ;mbmc.c: 177:      C.day_start = V.ticks;
 36637  019260  EE20  F188         	lfsr	2,_V+129	;volatile
 36638  019264  006F FF78  F922    	movff	postinc2,_C+291	;volatile
 36639  01926A  006F FF78  F923    	movff	postinc2,_C+292	;volatile
 36640  019270  006F FF78  F924    	movff	postinc2,_C+293	;volatile
 36641  019276  006F FF74  F925    	movff	postdec2,_C+294	;volatile
 36642                           
 36643                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 36644  01927C  EC7D  F0E9         	call	_get_ac_charger_relay	;wreg free
 36645  019280  5001               	movf	btemp^0,w,c
 36646  019282  B4D8               	btfsc	status,2,c
 36647  019284  D06B               	goto	l2054
 36648                           
 36649                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 36650  019286  0E00               	movlw	0
 36651  019288  6EE6               	movwf	postinc1,c
 36652  01928A  EC67  F0E9         	call	_set_ac_charger_relay	;wreg free
 36653  01928E  D066               	goto	l2054
 36654  019290                     l10637:
 36655                           
 36656                           ; BSR set to: 1
 36657                           ;mbmc.c: 184:     if (light < 12.0) {
 36658  019290  0E00               	movlw	0
 36659  019292  6EE6               	movwf	postinc1,c
 36660  019294  0E00               	movlw	0
 36661  019296  6EE6               	movwf	postinc1,c
 36662  019298  0E40               	movlw	64
 36663  01929A  6EE6               	movwf	postinc1,c
 36664  01929C  0E41               	movlw	65
 36665  01929E  6EE6               	movwf	postinc1,c
 36666                           
 36667                           ;stkvar	_light @ sp[(-8)+0]
 36668  0192A0  0EF8               	movlw	-8
 36669  0192A2  006F FF8F FFE6     	movff	plusw1,postinc1
 36670  0192A8  006F FF8F FFE6     	movff	plusw1,postinc1
 36671  0192AE  006F FF8F FFE6     	movff	plusw1,postinc1
 36672  0192B4  006F FF8F FFE6     	movff	plusw1,postinc1
 36673  0192BA  EC73  F0CD         	call	___flge	;wreg free
 36674  0192BE  B001               	btfsc	btemp& (0+255),0,c
 36675  0192C0  D049               	goto	l2058
 36676                           
 36677                           ;mbmc.c: 185:      C.day = 0;
 36678  0192C2  0E00               	movlw	0
 36679  0192C4  006F FFA0  F921    	movff	wreg,_C+290	;volatile
 36680                           
 36681                           ;mbmc.c: 186:      C.day_end = V.ticks;
 36682  0192CA  EE20  F188         	lfsr	2,_V+129	;volatile
 36683  0192CE  006F FF78  F926    	movff	postinc2,_C+295	;volatile
 36684  0192D4  006F FF78  F927    	movff	postinc2,_C+296	;volatile
 36685  0192DA  006F FF78  F928    	movff	postinc2,_C+297	;volatile
 36686  0192E0  006F FF74  F929    	movff	postdec2,_C+298	;volatile
 36687                           
 36688                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 36689  0192E6  EE22  F0B5         	lfsr	2,_C+182	;volatile
 36690  0192EA  0E01               	movlw	1
 36691  0192EC  50DB               	movf	plusw2,w,c
 36692  0192EE  E136               	bnz	l2054
 36693  0192F0  0E14               	movlw	20
 36694  0192F2  5CDE               	subwf	postinc2,w,c
 36695  0192F4  B0D8               	btfsc	status,0,c
 36696  0192F6  D032               	goto	l2054
 36697                           
 36698                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 36699  0192F8  0E01               	movlw	1
 36700  0192FA  6EE6               	movwf	postinc1,c
 36701  0192FC  EC67  F0E9         	call	_set_ac_charger_relay	;wreg free
 36702  019300  D02D               	goto	l2054
 36703  019302                     l10649:
 36704                           
 36705                           ; BSR set to: 1
 36706                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 36707  019302  EE22  F077         	lfsr	2,_C+120	;volatile
 36708  019306  006F FF7B FFE6     	movff	postinc2,postinc1
 36709  01930C  006F FF7B FFE6     	movff	postinc2,postinc1
 36710  019312  006F FF7B FFE6     	movff	postinc2,postinc1
 36711  019318  006F FF7B FFE6     	movff	postinc2,postinc1
 36712  01931E  EE22  F07B         	lfsr	2,_C+124	;volatile
 36713  019322  006F FF7B FFE6     	movff	postinc2,postinc1
 36714  019328  006F FF7B FFE6     	movff	postinc2,postinc1
 36715  01932E  006F FF7B FFE6     	movff	postinc2,postinc1
 36716  019334  006F FF7B FFE6     	movff	postinc2,postinc1
 36717  01933A  EC73  F0CD         	call	___flge	;wreg free
 36718  01933E  B001               	btfsc	btemp& (0+255),0,c
 36719  019340  D009               	goto	l2058
 36720                           
 36721                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 36722  019342  EC7D  F0E9         	call	_get_ac_charger_relay	;wreg free
 36723  019346  5001               	movf	btemp^0,w,c
 36724  019348  A4D8               	btfss	status,2,c
 36725  01934A  D004               	goto	l2058
 36726                           
 36727                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 36728  01934C  0E01               	movlw	1
 36729  01934E  6EE6               	movwf	postinc1,c
 36730  019350  EC67  F0E9         	call	_set_ac_charger_relay	;wreg free
 36731  019354                     l2058:
 36732                           
 36733                           ;mbmc.c: 204:  if (day_delay >= 240)
 36734  019354  0EEF               	movlw	239
 36735  019356  6441               	cpfsgt	check_day_time@day_delay^0,c
 36736  019358  D001               	goto	l2054
 36737                           
 36738                           ;mbmc.c: 205:   day_delay = 0;
 36739  01935A  6A41               	clrf	check_day_time@day_delay^0,c
 36740  01935C                     l2054:
 36741                           
 36742                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 36743  01935C  52E5               	movf	postdec1,f,c
 36744  01935E  52E5               	movf	postdec1,f,c
 36745  019360  52E5               	movf	postdec1,f,c
 36746  019362  52E5               	movf	postdec1,f,c
 36747  019364  0012               	return		;funcret
 36748  019366                     __end_of_check_day_time:
 36749                           	opt callstack 0
 36750                           
 36751 ;; *************** function _set_ac_charger_relay *****************
 36752 ;; Defined at:
 36753 ;;		line 135 in file "mbmc.c"
 36754 ;; Parameters:    Size  Location     Type
 36755 ;;  mode            1  [STACK] const _Bool 
 36756 ;; Auto vars:     Size  Location     Type
 36757 ;;		None
 36758 ;; Return value:  Size  Location     Type
 36759 ;;                  1  [STACK] void 
 36760 ;; Registers used:
 36761 ;;		wreg, fsr1l, fsr1h
 36762 ;; Tracked objects:
 36763 ;;		On entry : 0/1
 36764 ;;		On exit  : 0/0
 36765 ;;		Unchanged: 0/0
 36766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36771 ;;Total ram usage:        0 bytes
 36772 ;; Hardware stack levels used:    1
 36773 ;; Hardware stack levels required when called:    3
 36774 ;; This function calls:
 36775 ;;		Nothing
 36776 ;; This function is called by:
 36777 ;;		_check_day_time
 36778 ;; This function uses a reentrant model
 36779 ;;
 36780                           
 36781                           	psect	text166
 36782  01D2CE                     __ptext166:
 36783                           	opt callstack 0
 36784  01D2CE                     _set_ac_charger_relay:
 36785                           	opt callstack 9
 36786                           
 36787                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 36788                           ;stkvar	_mode @ sp[(0)+-1]
 36789                           
 36790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36791                           ;incstack = 0
 36792  01D2CE  0EFF               	movlw	-1
 36793  01D2D0  B0E3               	btfsc	plusw1,0,c
 36794  01D2D2  D002               	bra	u970_25
 36795  01D2D4  9CBD               	bcf	189,6,c	;volatile
 36796  01D2D6  D001               	bra	u970_26
 36797  01D2D8                     u970_25:
 36798  01D2D8  8CBD               	bsf	189,6,c	;volatile
 36799  01D2DA                     u970_26:
 36800                           
 36801                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 36802  01D2DA  52E5               	movf	postdec1,f,c
 36803  01D2DC  0012               	return		;funcret
 36804  01D2DE                     __end_of_set_ac_charger_relay:
 36805                           	opt callstack 0
 36806                           
 36807 ;; *************** function _get_ac_charger_relay *****************
 36808 ;; Defined at:
 36809 ;;		line 140 in file "mbmc.c"
 36810 ;; Parameters:    Size  Location     Type
 36811 ;;		None
 36812 ;; Auto vars:     Size  Location     Type
 36813 ;;		None
 36814 ;; Return value:  Size  Location     Type
 36815 ;;                  1  [STACK] _Bool 
 36816 ;; Registers used:
 36817 ;;		btemp
 36818 ;; Tracked objects:
 36819 ;;		On entry : 0/1
 36820 ;;		On exit  : 0/0
 36821 ;;		Unchanged: 0/0
 36822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36827 ;;Total ram usage:        0 bytes
 36828 ;; Hardware stack levels used:    1
 36829 ;; Hardware stack levels required when called:    3
 36830 ;; This function calls:
 36831 ;;		Nothing
 36832 ;; This function is called by:
 36833 ;;		_check_day_time
 36834 ;;		_calc_bsoc
 36835 ;; This function uses a reentrant model
 36836 ;;
 36837                           
 36838                           	psect	text167
 36839  01D2FA                     __ptext167:
 36840                           	opt callstack 0
 36841  01D2FA                     _get_ac_charger_relay:
 36842                           	opt callstack 10
 36843                           
 36844                           ;mbmc.c: 142:  return LATDbits.LATD6;
 36845                           
 36846                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36847                           ;incstack = 0
 36848  01D2FA  ACBD               	btfss	189,6,c	;volatile
 36849  01D2FC  D003               	goto	u1004_20
 36850  01D2FE  6A01               	clrf	btemp^0,c
 36851  01D300  2A01               	incf	btemp^0,f,c
 36852  01D302  0012               	return	
 36853  01D304                     u1004_20:
 36854  01D304  6A01               	clrf	btemp^0,c
 36855                           
 36856                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 36857  01D306  0012               	return		;funcret
 36858  01D308                     __end_of_get_ac_charger_relay:
 36859                           	opt callstack 0
 36860                           
 36861 ;; *************** function _TMR3_ISR *****************
 36862 ;; Defined at:
 36863 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 36864 ;; Parameters:    Size  Location     Type
 36865 ;;		None
 36866 ;; Auto vars:     Size  Location     Type
 36867 ;;		None
 36868 ;; Return value:  Size  Location     Type
 36869 ;;                  1    wreg      void 
 36870 ;; Registers used:
 36871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 36872 ;; Tracked objects:
 36873 ;;		On entry : 0/0
 36874 ;;		On exit  : 3F/0
 36875 ;;		Unchanged: 0/0
 36876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36879 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36880 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36881 ;;Total ram usage:       25 bytes
 36882 ;; Hardware stack levels used:    1
 36883 ;; Hardware stack levels required when called:   14
 36884 ;; This function calls:
 36885 ;;		_TMR3_CallBack
 36886 ;;		_TMR3_WriteTimer
 36887 ;; This function is called by:
 36888 ;;		Interrupt level 1
 36889 ;; This function uses a non-reentrant model
 36890 ;;
 36891                           
 36892                           	psect	text168
 36893  019C48                     __ptext168:
 36894                           	opt callstack 0
 36895  019C48                     _TMR3_ISR:
 36896                           	opt callstack 2
 36897                           
 36898                           ;incstack = 0
 36899  019C48  006F FF60  F0E7    	movff	status,??_TMR3_ISR
 36900  019C4E  006F FFD8  F0E8    	movff	tblptrl,??_TMR3_ISR+1
 36901  019C54  006F FFDC  F0E9    	movff	tblptrh,??_TMR3_ISR+2
 36902  019C5A  006F FFE0  F0EA    	movff	tblptru,??_TMR3_ISR+3
 36903  019C60  006F FFD4  F0EB    	movff	tablat,??_TMR3_ISR+4
 36904  019C66  0060  F004  F0EC   	movff	btemp,??_TMR3_ISR+5
 36905  019C6C  0060  F008  F0ED   	movff	btemp+1,??_TMR3_ISR+6
 36906  019C72  0060  F00C  F0EE   	movff	btemp+2,??_TMR3_ISR+7
 36907  019C78  0060  F010  F0EF   	movff	btemp+3,??_TMR3_ISR+8
 36908  019C7E  0060  F014  F0F0   	movff	btemp+4,??_TMR3_ISR+9
 36909  019C84  0060  F018  F0F1   	movff	btemp+5,??_TMR3_ISR+10
 36910  019C8A  0060  F01C  F0F2   	movff	btemp+6,??_TMR3_ISR+11
 36911  019C90  0060  F020  F0F3   	movff	btemp+7,??_TMR3_ISR+12
 36912  019C96  0060  F024  F0F4   	movff	btemp+8,??_TMR3_ISR+13
 36913  019C9C  0060  F028  F0F5   	movff	btemp+9,??_TMR3_ISR+14
 36914  019CA2  0060  F02C  F0F6   	movff	btemp+10,??_TMR3_ISR+15
 36915  019CA8  0060  F030  F0F7   	movff	btemp+11,??_TMR3_ISR+16
 36916  019CAE  0060  F044  F0F8   	movff	btemp+16,??_TMR3_ISR+17
 36917  019CB4  0060  F048  F0F9   	movff	btemp+17,??_TMR3_ISR+18
 36918  019CBA  0060  F04C  F0FA   	movff	btemp+18,??_TMR3_ISR+19
 36919  019CC0  0060  F050  F0FB   	movff	btemp+19,??_TMR3_ISR+20
 36920  019CC6  0060  F054  F0FC   	movff	btemp+20,??_TMR3_ISR+21
 36921  019CCC  0060  F058  F0FD   	movff	btemp+21,??_TMR3_ISR+22
 36922  019CD2  0060  F05C  F0FE   	movff	btemp+22,??_TMR3_ISR+23
 36923  019CD8  0060  F060  F0FF   	movff	btemp+23,??_TMR3_ISR+24
 36924  019CDE  EE16  F104         	lfsr	1,___intlo_sp
 36925                           
 36926                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 36927  019CE2  0139               	movlb	57	; () banked
 36928  019CE4  9DA6               	bcf	166,6,b	;volatile
 36929                           
 36930                           ; BSR set to: 57
 36931                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 36932  019CE6  0060  F26B  FFE6   	movff	_timer3ReloadVal,postinc1
 36933  019CEC  0060  F26F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 36934  019CF2  EC7A  F0E4         	call	_TMR3_WriteTimer	;wreg free
 36935                           
 36936                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 36937  019CF6  0100               	movlb	0	; () banked
 36938  019CF8  4B98               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 36939  019CFA  2B99               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 36940  019CFC  5199               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 36941  019CFE  E104               	bnz	i1u1367_20
 36942  019D00  0E28               	movlw	40
 36943  019D02  5D98               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 36944  019D04  A0D8               	btfss	status,0,c
 36945  019D06  D005               	goto	i1l1209
 36946  019D08                     i1u1367_20:
 36947                           
 36948                           ; BSR set to: 0
 36949                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 36950  019D08  ECF8  F0E7         	call	_TMR3_CallBack	;wreg free
 36951                           
 36952                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 36953  019D0C  0100               	movlb	0	; () banked
 36954  019D0E  6B98               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 36955  019D10  6B99               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 36956  019D12                     i1l1209:
 36957                           
 36958                           ; BSR set to: 0
 36959  019D12  0060  F3FC  F018   	movff	??_TMR3_ISR+24,btemp+23
 36960  019D18  0060  F3F8  F017   	movff	??_TMR3_ISR+23,btemp+22
 36961  019D1E  0060  F3F4  F016   	movff	??_TMR3_ISR+22,btemp+21
 36962  019D24  0060  F3F0  F015   	movff	??_TMR3_ISR+21,btemp+20
 36963  019D2A  0060  F3EC  F014   	movff	??_TMR3_ISR+20,btemp+19
 36964  019D30  0060  F3E8  F013   	movff	??_TMR3_ISR+19,btemp+18
 36965  019D36  0060  F3E4  F012   	movff	??_TMR3_ISR+18,btemp+17
 36966  019D3C  0060  F3E0  F011   	movff	??_TMR3_ISR+17,btemp+16
 36967  019D42  0060  F3DC  F00C   	movff	??_TMR3_ISR+16,btemp+11
 36968  019D48  0060  F3D8  F00B   	movff	??_TMR3_ISR+15,btemp+10
 36969  019D4E  0060  F3D4  F00A   	movff	??_TMR3_ISR+14,btemp+9
 36970  019D54  0060  F3D0  F009   	movff	??_TMR3_ISR+13,btemp+8
 36971  019D5A  0060  F3CC  F008   	movff	??_TMR3_ISR+12,btemp+7
 36972  019D60  0060  F3C8  F007   	movff	??_TMR3_ISR+11,btemp+6
 36973  019D66  0060  F3C4  F006   	movff	??_TMR3_ISR+10,btemp+5
 36974  019D6C  0060  F3C0  F005   	movff	??_TMR3_ISR+9,btemp+4
 36975  019D72  0060  F3BC  F004   	movff	??_TMR3_ISR+8,btemp+3
 36976  019D78  0060  F3B8  F003   	movff	??_TMR3_ISR+7,btemp+2
 36977  019D7E  0060  F3B4  F002   	movff	??_TMR3_ISR+6,btemp+1
 36978  019D84  0060  F3B0  F001   	movff	??_TMR3_ISR+5,btemp
 36979  019D8A  0060  F3AF  FFF5   	movff	??_TMR3_ISR+4,tablat
 36980  019D90  0060  F3AB  FFF8   	movff	??_TMR3_ISR+3,tblptru
 36981  019D96  0060  F3A7  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 36982  019D9C  0060  F3A3  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 36983  019DA2  0060  F39F  FFD8   	movff	??_TMR3_ISR,status
 36984  019DA8  0011               	retfie		f
 36985  019DAA                     __end_of_TMR3_ISR:
 36986                           	opt callstack 0
 36987                           
 36988 ;; *************** function _TMR3_WriteTimer *****************
 36989 ;; Defined at:
 36990 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 36991 ;; Parameters:    Size  Location     Type
 36992 ;;  timerVal        2  [STACK] unsigned short 
 36993 ;; Auto vars:     Size  Location     Type
 36994 ;;		None
 36995 ;; Return value:  Size  Location     Type
 36996 ;;                  1  [STACK] void 
 36997 ;; Registers used:
 36998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 36999 ;; Tracked objects:
 37000 ;;		On entry : 3F/39
 37001 ;;		On exit  : 0/0
 37002 ;;		Unchanged: 0/0
 37003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37008 ;;Total ram usage:        0 bytes
 37009 ;; Hardware stack levels used:    1
 37010 ;; Hardware stack levels required when called:    3
 37011 ;; This function calls:
 37012 ;;		Nothing
 37013 ;; This function is called by:
 37014 ;;		_TMR3_ISR
 37015 ;; This function uses a reentrant model
 37016 ;;
 37017                           
 37018                           	psect	text169
 37019  01C8F4                     __ptext169:
 37020                           	opt callstack 0
 37021  01C8F4                     _TMR3_WriteTimer:
 37022                           	opt callstack 12
 37023                           
 37024                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 37025                           
 37026                           ; BSR set to: 0
 37027                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37028                           ;incstack = 0
 37029  01C8F4  A4A6               	btfss	166,2,c	;volatile
 37030  01C8F6  D00F               	goto	l11777
 37031                           
 37032                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 37033  01C8F8  90A6               	bcf	166,0,c	;volatile
 37034                           
 37035                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 37036                           ;stkvar	_timerVal @ sp[(0)+-2]
 37037  01C8FA  0EFF               	movlw	255
 37038  01C8FC  24E1               	addwf	fsr1l,w,c
 37039  01C8FE  6ED9               	movwf	fsr2l,c
 37040  01C900  0EFF               	movlw	255
 37041  01C902  20E2               	addwfc	fsr1h,w,c
 37042  01C904  6EDA               	movwf	fsr2h,c
 37043  01C906  50DF               	movf	indf2,w,c
 37044  01C908  6EA5               	movwf	165,c	;volatile
 37045                           
 37046                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 37047                           ;stkvar	_timerVal @ sp[(0)+-2]
 37048  01C90A  0EFE               	movlw	-2
 37049  01C90C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 37050                           
 37051                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 37052  01C912  80A6               	bsf	166,0,c	;volatile
 37053                           
 37054                           ;mcc_generated_files/tmr3.c: 141:     }
 37055  01C914  D00C               	goto	l1192
 37056  01C916                     l11777:
 37057                           
 37058                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 37059                           ;stkvar	_timerVal @ sp[(0)+-2]
 37060  01C916  0EFF               	movlw	255
 37061  01C918  24E1               	addwf	fsr1l,w,c
 37062  01C91A  6ED9               	movwf	fsr2l,c
 37063  01C91C  0EFF               	movlw	255
 37064  01C91E  20E2               	addwfc	fsr1h,w,c
 37065  01C920  6EDA               	movwf	fsr2h,c
 37066  01C922  50DF               	movf	indf2,w,c
 37067  01C924  6EA5               	movwf	165,c	;volatile
 37068                           
 37069                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 37070                           ;stkvar	_timerVal @ sp[(0)+-2]
 37071  01C926  0EFE               	movlw	-2
 37072  01C928  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 37073  01C92E                     l1192:
 37074                           
 37075                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 37076  01C92E  52E5               	movf	postdec1,f,c
 37077  01C930  52E5               	movf	postdec1,f,c
 37078  01C932  0012               	return		;funcret
 37079  01C934                     __end_of_TMR3_WriteTimer:
 37080                           	opt callstack 0
 37081                           
 37082 ;; *************** function _TMR3_CallBack *****************
 37083 ;; Defined at:
 37084 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 37085 ;; Parameters:    Size  Location     Type
 37086 ;;		None
 37087 ;; Auto vars:     Size  Location     Type
 37088 ;;		None
 37089 ;; Return value:  Size  Location     Type
 37090 ;;                  1  [STACK] void 
 37091 ;; Registers used:
 37092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 37093 ;; Tracked objects:
 37094 ;;		On entry : 3F/0
 37095 ;;		On exit  : 0/0
 37096 ;;		Unchanged: 0/0
 37097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37102 ;;Total ram usage:        0 bytes
 37103 ;; Hardware stack levels used:    1
 37104 ;; Hardware stack levels required when called:   13
 37105 ;; This function calls:
 37106 ;;		Absolute function
 37107 ;;		_TMR3_DefaultInterruptHandler
 37108 ;;		_calc_bsoc
 37109 ;; This function is called by:
 37110 ;;		_TMR3_ISR
 37111 ;; This function uses a reentrant model
 37112 ;;
 37113                           
 37114                           	psect	text170
 37115  01CFF0                     __ptext170:
 37116                           	opt callstack 0
 37117  01CFF0                     _TMR3_CallBack:
 37118                           	opt callstack 2
 37119                           
 37120                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 37121                           
 37122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37123                           ;incstack = 0
 37124  01CFF0  0100               	movlb	0	; () banked
 37125  01CFF2  5178               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37126  01CFF4  1179               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37127  01CFF6  117A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 37128  01CFF8  B4D8               	btfsc	status,2,c
 37129  01CFFA  0012               	return	
 37130                           
 37131                           ; BSR set to: 0
 37132                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 37133  01CFFC  D801               	call	u1348_28
 37134  01CFFE  0012               	return	
 37135  01D000                     u1348_28:
 37136  01D000  0005               	push	
 37137  01D002  6EFA               	movwf	pclath,c
 37138  01D004  5178               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37139  01D006  6EFD               	movwf	tosl,c
 37140  01D008  5179               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37141  01D00A  6EFE               	movwf	tosh,c
 37142  01D00C  517A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 37143  01D00E  6EFF               	movwf	tosu,c
 37144  01D010  50FA               	movf	pclath,w,c
 37145  01D012  0012               	return		;indir
 37146  01D014                     __end_of_TMR3_CallBack:
 37147                           	opt callstack 0
 37148                           
 37149 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 37150 ;; Defined at:
 37151 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 37152 ;; Parameters:    Size  Location     Type
 37153 ;;		None
 37154 ;; Auto vars:     Size  Location     Type
 37155 ;;		None
 37156 ;; Return value:  Size  Location     Type
 37157 ;;                  1  [STACK] void 
 37158 ;; Registers used:
 37159 ;;		None
 37160 ;; Tracked objects:
 37161 ;;		On entry : 3F/0
 37162 ;;		On exit  : 0/0
 37163 ;;		Unchanged: 0/0
 37164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37169 ;;Total ram usage:        0 bytes
 37170 ;; Hardware stack levels used:    1
 37171 ;; Hardware stack levels required when called:    3
 37172 ;; This function calls:
 37173 ;;		Nothing
 37174 ;; This function is called by:
 37175 ;;		_TMR3_Initialize
 37176 ;;		_TMR3_CallBack
 37177 ;; This function uses a reentrant model
 37178 ;;
 37179                           
 37180                           	psect	text171
 37181  01D3AC                     __ptext171:
 37182                           	opt callstack 0
 37183  01D3AC                     _TMR3_DefaultInterruptHandler:
 37184                           	opt callstack 11
 37185                           
 37186                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37187                           
 37188                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37189                           ;incstack = 0
 37190  01D3AC  0012               	return		;funcret
 37191  01D3AE                     __end_of_TMR3_DefaultInterruptHandler:
 37192                           	opt callstack 0
 37193                           
 37194 ;; *************** function _calc_bsoc *****************
 37195 ;; Defined at:
 37196 ;;		line 39 in file "bsoc.c"
 37197 ;; Parameters:    Size  Location     Type
 37198 ;;		None
 37199 ;; Auto vars:     Size  Location     Type
 37200 ;;  adj             4  [STACK] float 
 37201 ;;  log_ptr         2  [STACK] PTR unsigned char 
 37202 ;;		 -> port_data(512), 
 37203 ;; Return value:  Size  Location     Type
 37204 ;;                  1  [STACK] void 
 37205 ;; Registers used:
 37206 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 37207 ;; Tracked objects:
 37208 ;;		On entry : 3F/0
 37209 ;;		On exit  : 5/1
 37210 ;;		Unchanged: 0/0
 37211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37216 ;;Total ram usage:        0 bytes
 37217 ;; Hardware stack levels used:    1
 37218 ;; Hardware stack levels required when called:   12
 37219 ;; This function calls:
 37220 ;;		_StartTimer
 37221 ;;		___asfladd
 37222 ;;		___fldiv
 37223 ;;		___flge
 37224 ;;		___flmul
 37225 ;;		___flneg
 37226 ;;		___fltol
 37227 ;;		_fabsf
 37228 ;;		_get_ac_charger_relay
 37229 ;;		_port_data_dma_ptr
 37230 ;;		_send_port_data_dma
 37231 ;;		_sprintf
 37232 ;;		_strlen
 37233 ;; This function is called by:
 37234 ;;		_init_bsoc
 37235 ;;		_TMR3_CallBack
 37236 ;; This function uses a reentrant model
 37237 ;;
 37238                           
 37239                           	psect	text172
 37240  01346E                     __ptext172:
 37241                           	opt callstack 0
 37242  01346E                     _calc_bsoc:
 37243                           	opt callstack 0
 37244                           
 37245                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37246  01346E  0E06               	movlw	6
 37247  013470  26E1               	addwf	fsr1l,f,c
 37248  013472  0E00               	movlw	0
 37249  013474  22E2               	addwfc	fsr1h,f,c
 37250                           
 37251                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 37252                           
 37253                           ;incstack = 0
 37254  013476  0E00               	movlw	0
 37255  013478  6E09               	movwf	(btemp+8)^0,c
 37256  01347A  0E00               	movlw	0
 37257  01347C  6E0A               	movwf	(btemp+9)^0,c
 37258  01347E  0E80               	movlw	128
 37259  013480  6E0B               	movwf	(btemp+10)^0,c
 37260  013482  0E3F               	movlw	63
 37261  013484  6E0C               	movwf	(btemp+11)^0,c
 37262                           
 37263                           ;stkvar	_adj @ sp[(-6)+0]
 37264  013486  0EFA               	movlw	-6
 37265  013488  0060  F027  FFE3   	movff	btemp+8,plusw1
 37266  01348E  0EFB               	movlw	-5
 37267  013490  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37268  013496  0EFC               	movlw	-4
 37269  013498  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37270  01349E  0EFD               	movlw	-3
 37271  0134A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 37272  0134A6  82BE               	bsf	190,1,c	;volatile
 37273                           
 37274                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 37275  0134A8  0E00               	movlw	0
 37276  0134AA  6EE6               	movwf	postinc1,c
 37277  0134AC  0E00               	movlw	0
 37278  0134AE  6EE6               	movwf	postinc1,c
 37279  0134B0  0E61               	movlw	97
 37280  0134B2  6EE6               	movwf	postinc1,c
 37281  0134B4  0E45               	movlw	69
 37282  0134B6  6EE6               	movwf	postinc1,c
 37283  0134B8  EE22  F043         	lfsr	2,_C+68	;volatile
 37284  0134BC  006F FF7B FFE6     	movff	postinc2,postinc1
 37285  0134C2  006F FF7B FFE6     	movff	postinc2,postinc1
 37286  0134C8  006F FF7B FFE6     	movff	postinc2,postinc1
 37287  0134CE  006F FF7B FFE6     	movff	postinc2,postinc1
 37288  0134D4  EC61  F0A7         	call	___fldiv	;wreg free
 37289  0134D8  0060  F007  FFE6   	movff	btemp,postinc1
 37290  0134DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37291  0134E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37292  0134EA  0060  F013  FFE6   	movff	btemp+3,postinc1
 37293  0134F0  0E8F               	movlw	low (_C+144)
 37294  0134F2  6EE6               	movwf	postinc1,c
 37295  0134F4  0E08               	movlw	high (_C+144)
 37296  0134F6  6EE6               	movwf	postinc1,c
 37297  0134F8  EC22  F0DF         	call	___asfladd	;wreg free
 37298                           
 37299                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 37300  0134FC  EE22  F08F         	lfsr	2,_C+144	;volatile
 37301  013500  006F FF7B FFE6     	movff	postinc2,postinc1
 37302  013506  006F FF7B FFE6     	movff	postinc2,postinc1
 37303  01350C  006F FF7B FFE6     	movff	postinc2,postinc1
 37304  013512  006F FF7B FFE6     	movff	postinc2,postinc1
 37305  013518  EE22  F08B         	lfsr	2,_C+140	;volatile
 37306  01351C  006F FF7B FFE6     	movff	postinc2,postinc1
 37307  013522  006F FF7B FFE6     	movff	postinc2,postinc1
 37308  013528  006F FF7B FFE6     	movff	postinc2,postinc1
 37309  01352E  006F FF7B FFE6     	movff	postinc2,postinc1
 37310  013534  EC73  F0CD         	call	___flge	;wreg free
 37311  013538  B001               	btfsc	btemp& (0+255),0,c
 37312  01353A  D00E               	goto	l14021
 37313                           
 37314                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 37315  01353C  EE22  F08B         	lfsr	2,_C+140	;volatile
 37316  013540  006F FF78  F88F    	movff	postinc2,_C+144	;volatile
 37317  013546  006F FF78  F890    	movff	postinc2,_C+145	;volatile
 37318  01354C  006F FF78  F891    	movff	postinc2,_C+146	;volatile
 37319  013552  006F FF74  F892    	movff	postdec2,_C+147	;volatile
 37320  013558                     l14021:
 37321                           
 37322                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 37323  013558  0ECD               	movlw	205
 37324  01355A  6EE6               	movwf	postinc1,c
 37325  01355C  0ECC               	movlw	204
 37326  01355E  6EE6               	movwf	postinc1,c
 37327  013560  0ECC               	movlw	204
 37328  013562  6EE6               	movwf	postinc1,c
 37329  013564  0E3D               	movlw	61
 37330  013566  6EE6               	movwf	postinc1,c
 37331  013568  EE22  F08F         	lfsr	2,_C+144	;volatile
 37332  01356C  006F FF7B FFE6     	movff	postinc2,postinc1
 37333  013572  006F FF7B FFE6     	movff	postinc2,postinc1
 37334  013578  006F FF7B FFE6     	movff	postinc2,postinc1
 37335  01357E  006F FF7B FFE6     	movff	postinc2,postinc1
 37336  013584  EC73  F0CD         	call	___flge	;wreg free
 37337  013588  B001               	btfsc	btemp& (0+255),0,c
 37338  01358A  D010               	goto	l14025
 37339                           
 37340                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 37341  01358C  0ECD               	movlw	205
 37342  01358E  006F FFA0  F88F    	movff	wreg,_C+144	;volatile
 37343  013594  0ECC               	movlw	204
 37344  013596  006F FFA0  F890    	movff	wreg,_C+145	;volatile
 37345  01359C  0ECC               	movlw	204
 37346  01359E  006F FFA0  F891    	movff	wreg,_C+146	;volatile
 37347  0135A4  0E3D               	movlw	61
 37348  0135A6  006F FFA0  F892    	movff	wreg,_C+147	;volatile
 37349  0135AC                     l14025:
 37350                           
 37351                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 37352  0135AC  EE22  F043         	lfsr	2,_C+68	;volatile
 37353  0135B0  006F FF7B FFE6     	movff	postinc2,postinc1
 37354  0135B6  006F FF7B FFE6     	movff	postinc2,postinc1
 37355  0135BC  006F FF7B FFE6     	movff	postinc2,postinc1
 37356  0135C2  006F FF7B FFE6     	movff	postinc2,postinc1
 37357  0135C8  0E0A               	movlw	10
 37358  0135CA  6EE6               	movwf	postinc1,c
 37359  0135CC  0ED7               	movlw	215
 37360  0135CE  6EE6               	movwf	postinc1,c
 37361  0135D0  0E23               	movlw	35
 37362  0135D2  6EE6               	movwf	postinc1,c
 37363  0135D4  0E3C               	movlw	60
 37364  0135D6  6EE6               	movwf	postinc1,c
 37365  0135D8  EC73  F0CD         	call	___flge	;wreg free
 37366  0135DC  B001               	btfsc	btemp& (0+255),0,c
 37367  0135DE  D01C               	goto	l14029
 37368                           
 37369                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 37370  0135E0  0062  F2F4  F009   	movff	_C+190,btemp+8	;volatile
 37371  0135E6  0062  F2F8  F00A   	movff	_C+191,btemp+9	;volatile
 37372  0135EC  0062  F2FC  F00B   	movff	_C+192,btemp+10	;volatile
 37373  0135F2  0062  F300  F00C   	movff	_C+193,btemp+11	;volatile
 37374                           
 37375                           ;stkvar	_adj @ sp[(-6)+0]
 37376  0135F8  0EFA               	movlw	-6
 37377  0135FA  0060  F027  FFE3   	movff	btemp+8,plusw1
 37378  013600  0EFB               	movlw	-5
 37379  013602  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37380  013608  0EFC               	movlw	-4
 37381  01360A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37382  013610  0EFD               	movlw	-3
 37383  013612  0060  F033  FFE3   	movff	btemp+11,plusw1
 37384  013618                     l14029:
 37385                           
 37386                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 37387  013618  0E0A               	movlw	10
 37388  01361A  6EE6               	movwf	postinc1,c
 37389  01361C  0ED7               	movlw	215
 37390  01361E  6EE6               	movwf	postinc1,c
 37391  013620  0E23               	movlw	35
 37392  013622  6EE6               	movwf	postinc1,c
 37393  013624  0E3C               	movlw	60
 37394  013626  6EE6               	movwf	postinc1,c
 37395  013628  EE22  F043         	lfsr	2,_C+68	;volatile
 37396  01362C  006F FF7B FFE6     	movff	postinc2,postinc1
 37397  013632  006F FF7B FFE6     	movff	postinc2,postinc1
 37398  013638  006F FF7B FFE6     	movff	postinc2,postinc1
 37399  01363E  006F FF7B FFE6     	movff	postinc2,postinc1
 37400  013644  EC73  F0CD         	call	___flge	;wreg free
 37401  013648  B001               	btfsc	btemp& (0+255),0,c
 37402  01364A  D01C               	goto	l14033
 37403                           
 37404                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 37405  01364C  0062  F2E4  F009   	movff	_C+186,btemp+8	;volatile
 37406  013652  0062  F2E8  F00A   	movff	_C+187,btemp+9	;volatile
 37407  013658  0062  F2EC  F00B   	movff	_C+188,btemp+10	;volatile
 37408  01365E  0062  F2F0  F00C   	movff	_C+189,btemp+11	;volatile
 37409                           
 37410                           ;stkvar	_adj @ sp[(-6)+0]
 37411  013664  0EFA               	movlw	-6
 37412  013666  0060  F027  FFE3   	movff	btemp+8,plusw1
 37413  01366C  0EFB               	movlw	-5
 37414  01366E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37415  013674  0EFC               	movlw	-4
 37416  013676  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37417  01367C  0EFD               	movlw	-3
 37418  01367E  0060  F033  FFE3   	movff	btemp+11,plusw1
 37419  013684                     l14033:
 37420                           
 37421                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 37422  013684  0E00               	movlw	0
 37423  013686  6EE6               	movwf	postinc1,c
 37424  013688  0E00               	movlw	0
 37425  01368A  6EE6               	movwf	postinc1,c
 37426  01368C  0E61               	movlw	97
 37427  01368E  6EE6               	movwf	postinc1,c
 37428  013690  0E45               	movlw	69
 37429  013692  6EE6               	movwf	postinc1,c
 37430                           
 37431                           ;stkvar	_adj @ sp[(-10)+0]
 37432  013694  0EF6               	movlw	-10
 37433  013696  006F FF8F FFE6     	movff	plusw1,postinc1
 37434  01369C  006F FF8F FFE6     	movff	plusw1,postinc1
 37435  0136A2  006F FF8F FFE6     	movff	plusw1,postinc1
 37436  0136A8  006F FF8F FFE6     	movff	plusw1,postinc1
 37437  0136AE  EE22  F043         	lfsr	2,_C+68	;volatile
 37438  0136B2  006F FF7B FFE6     	movff	postinc2,postinc1
 37439  0136B8  006F FF7B FFE6     	movff	postinc2,postinc1
 37440  0136BE  006F FF7B FFE6     	movff	postinc2,postinc1
 37441  0136C4  006F FF7B FFE6     	movff	postinc2,postinc1
 37442  0136CA  EC6E  F09F         	call	___flmul	;wreg free
 37443  0136CE  0060  F007  FFE6   	movff	btemp,postinc1
 37444  0136D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37445  0136DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37446  0136E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 37447  0136E6  EC61  F0A7         	call	___fldiv	;wreg free
 37448  0136EA  0060  F007  FFE6   	movff	btemp,postinc1
 37449  0136F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37450  0136F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37451  0136FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 37452  013702  0E8F               	movlw	low (_C+144)
 37453  013704  6EE6               	movwf	postinc1,c
 37454  013706  0E08               	movlw	high (_C+144)
 37455  013708  6EE6               	movwf	postinc1,c
 37456  01370A  EC22  F0DF         	call	___asfladd	;wreg free
 37457                           
 37458                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 37459  01370E  EE22  F08F         	lfsr	2,_C+144	;volatile
 37460  013712  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
 37461  013718  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
 37462  01371E  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
 37463  013724  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
 37464                           
 37465                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 37466  01372A  EE22  F09B         	lfsr	2,_C+156	;volatile
 37467  01372E  006F FF7B FFE6     	movff	postinc2,postinc1
 37468  013734  006F FF7B FFE6     	movff	postinc2,postinc1
 37469  01373A  006F FF7B FFE6     	movff	postinc2,postinc1
 37470  013740  006F FF7B FFE6     	movff	postinc2,postinc1
 37471  013746  EE22  F08B         	lfsr	2,_C+140	;volatile
 37472  01374A  006F FF7B FFE6     	movff	postinc2,postinc1
 37473  013750  006F FF7B FFE6     	movff	postinc2,postinc1
 37474  013756  006F FF7B FFE6     	movff	postinc2,postinc1
 37475  01375C  006F FF7B FFE6     	movff	postinc2,postinc1
 37476  013762  EC73  F0CD         	call	___flge	;wreg free
 37477  013766  B001               	btfsc	btemp& (0+255),0,c
 37478  013768  D00E               	goto	l14041
 37479                           
 37480                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 37481  01376A  EE22  F08B         	lfsr	2,_C+140	;volatile
 37482  01376E  006F FF78  F89B    	movff	postinc2,_C+156	;volatile
 37483  013774  006F FF78  F89C    	movff	postinc2,_C+157	;volatile
 37484  01377A  006F FF78  F89D    	movff	postinc2,_C+158	;volatile
 37485  013780  006F FF74  F89E    	movff	postdec2,_C+159	;volatile
 37486  013786                     l14041:
 37487                           
 37488                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 37489  013786  0ECD               	movlw	205
 37490  013788  6EE6               	movwf	postinc1,c
 37491  01378A  0ECC               	movlw	204
 37492  01378C  6EE6               	movwf	postinc1,c
 37493  01378E  0ECC               	movlw	204
 37494  013790  6EE6               	movwf	postinc1,c
 37495  013792  0E3D               	movlw	61
 37496  013794  6EE6               	movwf	postinc1,c
 37497  013796  EE22  F09B         	lfsr	2,_C+156	;volatile
 37498  01379A  006F FF7B FFE6     	movff	postinc2,postinc1
 37499  0137A0  006F FF7B FFE6     	movff	postinc2,postinc1
 37500  0137A6  006F FF7B FFE6     	movff	postinc2,postinc1
 37501  0137AC  006F FF7B FFE6     	movff	postinc2,postinc1
 37502  0137B2  EC73  F0CD         	call	___flge	;wreg free
 37503  0137B6  B001               	btfsc	btemp& (0+255),0,c
 37504  0137B8  D010               	goto	l14045
 37505                           
 37506                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 37507  0137BA  0ECD               	movlw	205
 37508  0137BC  006F FFA0  F89B    	movff	wreg,_C+156	;volatile
 37509  0137C2  0ECC               	movlw	204
 37510  0137C4  006F FFA0  F89C    	movff	wreg,_C+157	;volatile
 37511  0137CA  0ECC               	movlw	204
 37512  0137CC  006F FFA0  F89D    	movff	wreg,_C+158	;volatile
 37513  0137D2  0E3D               	movlw	61
 37514  0137D4  006F FFA0  F89E    	movff	wreg,_C+159	;volatile
 37515  0137DA                     l14045:
 37516                           
 37517                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 37518  0137DA  0E00               	movlw	0
 37519  0137DC  6EE6               	movwf	postinc1,c
 37520  0137DE  0E00               	movlw	0
 37521  0137E0  6EE6               	movwf	postinc1,c
 37522  0137E2  0E61               	movlw	97
 37523  0137E4  6EE6               	movwf	postinc1,c
 37524  0137E6  0E45               	movlw	69
 37525  0137E8  6EE6               	movwf	postinc1,c
 37526  0137EA  EE22  F047         	lfsr	2,_C+72	;volatile
 37527  0137EE  006F FF7B FFE6     	movff	postinc2,postinc1
 37528  0137F4  006F FF7B FFE6     	movff	postinc2,postinc1
 37529  0137FA  006F FF7B FFE6     	movff	postinc2,postinc1
 37530  013800  006F FF7B FFE6     	movff	postinc2,postinc1
 37531  013806  EC61  F0A7         	call	___fldiv	;wreg free
 37532  01380A  0060  F007  FFE6   	movff	btemp,postinc1
 37533  013810  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37534  013816  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37535  01381C  0060  F013  FFE6   	movff	btemp+3,postinc1
 37536  013822  0E93               	movlw	low (_C+148)
 37537  013824  6EE6               	movwf	postinc1,c
 37538  013826  0E08               	movlw	high (_C+148)
 37539  013828  6EE6               	movwf	postinc1,c
 37540  01382A  EC22  F0DF         	call	___asfladd	;wreg free
 37541                           
 37542                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 37543  01382E  0E00               	movlw	0
 37544  013830  6EE6               	movwf	postinc1,c
 37545  013832  0E00               	movlw	0
 37546  013834  6EE6               	movwf	postinc1,c
 37547  013836  0E61               	movlw	97
 37548  013838  6EE6               	movwf	postinc1,c
 37549  01383A  0E45               	movlw	69
 37550  01383C  6EE6               	movwf	postinc1,c
 37551  01383E  EE22  F07B         	lfsr	2,_C+124	;volatile
 37552  013842  006F FF7B FFE6     	movff	postinc2,postinc1
 37553  013848  006F FF7B FFE6     	movff	postinc2,postinc1
 37554  01384E  006F FF7B FFE6     	movff	postinc2,postinc1
 37555  013854  006F FF7B FFE6     	movff	postinc2,postinc1
 37556  01385A  EC61  F0A7         	call	___fldiv	;wreg free
 37557  01385E  0060  F007  FFE6   	movff	btemp,postinc1
 37558  013864  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37559  01386A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37560  013870  0060  F013  FFE6   	movff	btemp+3,postinc1
 37561  013876  0EA7               	movlw	low (_C+168)
 37562  013878  6EE6               	movwf	postinc1,c
 37563  01387A  0E08               	movlw	high (_C+168)
 37564  01387C  6EE6               	movwf	postinc1,c
 37565  01387E  EC22  F0DF         	call	___asfladd	;wreg free
 37566                           
 37567                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 37568  013882  0E00               	movlw	0
 37569  013884  6EE6               	movwf	postinc1,c
 37570  013886  0E00               	movlw	0
 37571  013888  6EE6               	movwf	postinc1,c
 37572  01388A  0E61               	movlw	97
 37573  01388C  6EE6               	movwf	postinc1,c
 37574  01388E  0E45               	movlw	69
 37575  013890  6EE6               	movwf	postinc1,c
 37576  013892  EE22  F077         	lfsr	2,_C+120	;volatile
 37577  013896  006F FF7B FFE6     	movff	postinc2,postinc1
 37578  01389C  006F FF7B FFE6     	movff	postinc2,postinc1
 37579  0138A2  006F FF7B FFE6     	movff	postinc2,postinc1
 37580  0138A8  006F FF7B FFE6     	movff	postinc2,postinc1
 37581  0138AE  EC61  F0A7         	call	___fldiv	;wreg free
 37582  0138B2  0060  F007  FFE6   	movff	btemp,postinc1
 37583  0138B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37584  0138BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37585  0138C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 37586  0138CA  0EAB               	movlw	low (_C+172)
 37587  0138CC  6EE6               	movwf	postinc1,c
 37588  0138CE  0E08               	movlw	high (_C+172)
 37589  0138D0  6EE6               	movwf	postinc1,c
 37590  0138D2  EC22  F0DF         	call	___asfladd	;wreg free
 37591                           
 37592                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 37593  0138D6  0E00               	movlw	0
 37594  0138D8  6EE6               	movwf	postinc1,c
 37595  0138DA  0E00               	movlw	0
 37596  0138DC  6EE6               	movwf	postinc1,c
 37597  0138DE  0E61               	movlw	97
 37598  0138E0  6EE6               	movwf	postinc1,c
 37599  0138E2  0E45               	movlw	69
 37600  0138E4  6EE6               	movwf	postinc1,c
 37601  0138E6  EE22  F073         	lfsr	2,_C+116	;volatile
 37602  0138EA  006F FF7B FFE6     	movff	postinc2,postinc1
 37603  0138F0  006F FF7B FFE6     	movff	postinc2,postinc1
 37604  0138F6  006F FF7B FFE6     	movff	postinc2,postinc1
 37605  0138FC  006F FF7B FFE6     	movff	postinc2,postinc1
 37606  013902  EC61  F0A7         	call	___fldiv	;wreg free
 37607  013906  0060  F007  FFE6   	movff	btemp,postinc1
 37608  01390C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37609  013912  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37610  013918  0060  F013  FFE6   	movff	btemp+3,postinc1
 37611  01391E  0EAF               	movlw	low (_C+176)
 37612  013920  6EE6               	movwf	postinc1,c
 37613  013922  0E08               	movlw	high (_C+176)
 37614  013924  6EE6               	movwf	postinc1,c
 37615  013926  EC22  F0DF         	call	___asfladd	;wreg free
 37616                           
 37617                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 37618  01392A  EE22  F07F         	lfsr	2,_C+128	;volatile
 37619  01392E  006F FF7B FFE6     	movff	postinc2,postinc1
 37620  013934  006F FF7B FFE6     	movff	postinc2,postinc1
 37621  01393A  006F FF7B FFE6     	movff	postinc2,postinc1
 37622  013940  006F FF7B FFE6     	movff	postinc2,postinc1
 37623  013946  0E00               	movlw	0
 37624  013948  6EE6               	movwf	postinc1,c
 37625  01394A  0E00               	movlw	0
 37626  01394C  6EE6               	movwf	postinc1,c
 37627  01394E  0E00               	movlw	0
 37628  013950  6EE6               	movwf	postinc1,c
 37629  013952  0E00               	movlw	0
 37630  013954  6EE6               	movwf	postinc1,c
 37631  013956  EC73  F0CD         	call	___flge	;wreg free
 37632  01395A  B001               	btfsc	btemp& (0+255),0,c
 37633  01395C  D02A               	goto	l14051
 37634                           
 37635                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 37636  01395E  0E00               	movlw	0
 37637  013960  6EE6               	movwf	postinc1,c
 37638  013962  0E00               	movlw	0
 37639  013964  6EE6               	movwf	postinc1,c
 37640  013966  0E61               	movlw	97
 37641  013968  6EE6               	movwf	postinc1,c
 37642  01396A  0E45               	movlw	69
 37643  01396C  6EE6               	movwf	postinc1,c
 37644  01396E  EE22  F07F         	lfsr	2,_C+128	;volatile
 37645  013972  006F FF7B FFE6     	movff	postinc2,postinc1
 37646  013978  006F FF7B FFE6     	movff	postinc2,postinc1
 37647  01397E  006F FF7B FFE6     	movff	postinc2,postinc1
 37648  013984  006F FF7B FFE6     	movff	postinc2,postinc1
 37649  01398A  EC61  F0A7         	call	___fldiv	;wreg free
 37650  01398E  0060  F007  FFE6   	movff	btemp,postinc1
 37651  013994  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37652  01399A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37653  0139A0  0060  F013  FFE6   	movff	btemp+3,postinc1
 37654  0139A6  0E9F               	movlw	low (_C+160)
 37655  0139A8  6EE6               	movwf	postinc1,c
 37656  0139AA  0E08               	movlw	high (_C+160)
 37657  0139AC  6EE6               	movwf	postinc1,c
 37658  0139AE  EC22  F0DF         	call	___asfladd	;wreg free
 37659  0139B2                     l14051:
 37660                           
 37661                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 37662  0139B2  EE22  F07F         	lfsr	2,_C+128	;volatile
 37663  0139B6  0E03               	movlw	3
 37664  0139B8  AEDB               	btfss	plusw2,7,c
 37665  0139BA  D038               	goto	l14055
 37666                           
 37667                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 37668  0139BC  0E00               	movlw	0
 37669  0139BE  6EE6               	movwf	postinc1,c
 37670  0139C0  0E00               	movlw	0
 37671  0139C2  6EE6               	movwf	postinc1,c
 37672  0139C4  0E61               	movlw	97
 37673  0139C6  6EE6               	movwf	postinc1,c
 37674  0139C8  0E45               	movlw	69
 37675  0139CA  6EE6               	movwf	postinc1,c
 37676  0139CC  EE22  F07F         	lfsr	2,_C+128	;volatile
 37677  0139D0  006F FF7B FFE6     	movff	postinc2,postinc1
 37678  0139D6  006F FF7B FFE6     	movff	postinc2,postinc1
 37679  0139DC  006F FF7B FFE6     	movff	postinc2,postinc1
 37680  0139E2  006F FF7B FFE6     	movff	postinc2,postinc1
 37681  0139E8  EC61  F0A7         	call	___fldiv	;wreg free
 37682  0139EC  0060  F007  FFE6   	movff	btemp,postinc1
 37683  0139F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37684  0139F8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37685  0139FE  0060  F013  FFE6   	movff	btemp+3,postinc1
 37686  013A04  EC36  F0DA         	call	_fabsf	;wreg free
 37687  013A08  0060  F007  FFE6   	movff	btemp,postinc1
 37688  013A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37689  013A14  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37690  013A1A  0060  F013  FFE6   	movff	btemp+3,postinc1
 37691  013A20  0EA3               	movlw	low (_C+164)
 37692  013A22  6EE6               	movwf	postinc1,c
 37693  013A24  0E08               	movlw	high (_C+164)
 37694  013A26  6EE6               	movwf	postinc1,c
 37695  013A28  EC22  F0DF         	call	___asfladd	;wreg free
 37696  013A2C                     l14055:
 37697                           
 37698                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 37699  013A2C  0E00               	movlw	0
 37700  013A2E  6EE6               	movwf	postinc1,c
 37701  013A30  0E00               	movlw	0
 37702  013A32  6EE6               	movwf	postinc1,c
 37703  013A34  0EC8               	movlw	200
 37704  013A36  6EE6               	movwf	postinc1,c
 37705  013A38  0E42               	movlw	66
 37706  013A3A  6EE6               	movwf	postinc1,c
 37707  013A3C  EE22  F08B         	lfsr	2,_C+140	;volatile
 37708  013A40  006F FF7B FFE6     	movff	postinc2,postinc1
 37709  013A46  006F FF7B FFE6     	movff	postinc2,postinc1
 37710  013A4C  006F FF7B FFE6     	movff	postinc2,postinc1
 37711  013A52  006F FF7B FFE6     	movff	postinc2,postinc1
 37712  013A58  EE22  F09B         	lfsr	2,_C+156	;volatile
 37713  013A5C  006F FF7B FFE6     	movff	postinc2,postinc1
 37714  013A62  006F FF7B FFE6     	movff	postinc2,postinc1
 37715  013A68  006F FF7B FFE6     	movff	postinc2,postinc1
 37716  013A6E  006F FF7B FFE6     	movff	postinc2,postinc1
 37717  013A74  EC61  F0A7         	call	___fldiv	;wreg free
 37718  013A78  0060  F007  FFE6   	movff	btemp,postinc1
 37719  013A7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37720  013A84  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37721  013A8A  0060  F013  FFE6   	movff	btemp+3,postinc1
 37722  013A90  EC6E  F09F         	call	___flmul	;wreg free
 37723  013A94  0060  F007  FFE6   	movff	btemp,postinc1
 37724  013A9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37725  013AA0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37726  013AA6  0060  F013  FFE6   	movff	btemp+3,postinc1
 37727  013AAC  ECBA  F0CC         	call	___fltol	;wreg free
 37728  013AB0  0060  F004  F00B   	movff	btemp,btemp+10
 37729  013AB6  0060  F008  F00C   	movff	btemp+1,btemp+11
 37730  013ABC  0E01               	movlw	1
 37731  013ABE  260B               	addwf	(btemp+10)^0,f,c
 37732  013AC0  0E00               	movlw	0
 37733  013AC2  220C               	addwfc	(btemp+11)^0,f,c
 37734  013AC4  0060  F02C  F8B5   	movff	btemp+10,_C+182	;volatile
 37735  013ACA  0060  F030  F8B6   	movff	btemp+11,_C+183	;volatile
 37736                           
 37737                           ;bsoc.c: 76:  if (C.soc > 100)
 37738  013AD0  EE22  F0B5         	lfsr	2,_C+182	;volatile
 37739  013AD4  0E01               	movlw	1
 37740  013AD6  50DB               	movf	plusw2,w,c
 37741  013AD8  E104               	bnz	u1341_20
 37742  013ADA  0E65               	movlw	101
 37743  013ADC  5CDE               	subwf	postinc2,w,c
 37744  013ADE  A0D8               	btfss	status,0,c
 37745  013AE0  D008               	goto	l14061
 37746  013AE2                     u1341_20:
 37747                           
 37748                           ;bsoc.c: 77:   C.soc = 100;
 37749  013AE2  0E64               	movlw	100
 37750  013AE4  006F FFA0  F8B5    	movff	wreg,_C+182	;volatile
 37751  013AEA  0E00               	movlw	0
 37752  013AEC  006F FFA0  F8B6    	movff	wreg,_C+183	;volatile
 37753  013AF2                     l14061:
 37754                           
 37755                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 37756  013AF2  EE22  F043         	lfsr	2,_C+68	;volatile
 37757  013AF6  0E03               	movlw	3
 37758  013AF8  AEDB               	btfss	plusw2,7,c
 37759  013AFA  D047               	goto	l2203
 37760                           
 37761                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 37762  013AFC  EE22  F043         	lfsr	2,_C+68	;volatile
 37763  013B00  006F FF7B FFE6     	movff	postinc2,postinc1
 37764  013B06  006F FF7B FFE6     	movff	postinc2,postinc1
 37765  013B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 37766  013B12  006F FF7B FFE6     	movff	postinc2,postinc1
 37767  013B18  EE22  F09B         	lfsr	2,_C+156	;volatile
 37768  013B1C  006F FF7B FFE6     	movff	postinc2,postinc1
 37769  013B22  006F FF7B FFE6     	movff	postinc2,postinc1
 37770  013B28  006F FF7B FFE6     	movff	postinc2,postinc1
 37771  013B2E  006F FF7B FFE6     	movff	postinc2,postinc1
 37772  013B34  EC61  F0A7         	call	___fldiv	;wreg free
 37773  013B38  0060  F007  FFE6   	movff	btemp,postinc1
 37774  013B3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37775  013B44  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37776  013B4A  0060  F013  FFE6   	movff	btemp+3,postinc1
 37777  013B50  ECE1  F0E2         	call	___flneg	;wreg free
 37778  013B54  0060  F007  FFE6   	movff	btemp,postinc1
 37779  013B5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37780  013B60  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37781  013B66  0060  F013  FFE6   	movff	btemp+3,postinc1
 37782  013B6C  ECBA  F0CC         	call	___fltol	;wreg free
 37783  013B70  0060  F004  F00B   	movff	btemp,btemp+10
 37784  013B76  0060  F008  F00C   	movff	btemp+1,btemp+11
 37785  013B7C  0060  F02C  F8B3   	movff	btemp+10,_C+180	;volatile
 37786  013B82  0060  F030  F8B4   	movff	btemp+11,_C+181	;volatile
 37787                           
 37788                           ;bsoc.c: 81:  } else {
 37789  013B88  D008               	goto	l14065
 37790  013B8A                     l2203:
 37791                           
 37792                           ;bsoc.c: 82:   C.runtime = 99;
 37793  013B8A  0E63               	movlw	99
 37794  013B8C  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
 37795  013B92  0E00               	movlw	0
 37796  013B94  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
 37797  013B9A                     l14065:
 37798                           
 37799                           ;bsoc.c: 84:  if (C.runtime > 99)
 37800  013B9A  EE22  F0B3         	lfsr	2,_C+180	;volatile
 37801  013B9E  0E01               	movlw	1
 37802  013BA0  50DB               	movf	plusw2,w,c
 37803  013BA2  E104               	bnz	u1343_20
 37804  013BA4  0E64               	movlw	100
 37805  013BA6  5CDE               	subwf	postinc2,w,c
 37806  013BA8  A0D8               	btfss	status,0,c
 37807  013BAA  D008               	goto	l14069
 37808  013BAC                     u1343_20:
 37809                           
 37810                           ;bsoc.c: 85:   C.runtime = 99;
 37811  013BAC  0E63               	movlw	99
 37812  013BAE  006F FFA0  F8B3    	movff	wreg,_C+180	;volatile
 37813  013BB4  0E00               	movlw	0
 37814  013BB6  006F FFA0  F8B4    	movff	wreg,_C+181	;volatile
 37815  013BBC                     l14069:
 37816                           
 37817                           ;bsoc.c: 87:  V.lowint_count++;
 37818  013BBC  0E01               	movlw	1
 37819  013BBE  0101               	movlb	1	; () banked
 37820  013BC0  27BB               	addwf	(_V+180)& (0+255),f,b	;volatile
 37821  013BC2  0E00               	movlw	0
 37822  013BC4  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 37823  013BC6  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 37824  013BC8  23BE               	addwfc	(_V+183)& (0+255),f,b	;volatile
 37825                           
 37826                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 37827  013BCA  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 37828  013BCC  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 37829  013BCE  A4D8               	btfss	status,2,c
 37830  013BD0  D177               	goto	l14081
 37831                           
 37832                           ; BSR set to: 1
 37833  013BD2  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 37834  013BD4  B4D8               	btfsc	status,2,c
 37835  013BD6  D174               	goto	l14081
 37836                           
 37837                           ; BSR set to: 1
 37838                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 37839  013BD8  EC98  F0E9         	call	_port_data_dma_ptr	;wreg free
 37840                           
 37841                           ;stkvar	_log_ptr @ sp[(-6)+4]
 37842  013BDC  0EFF               	movlw	-1
 37843  013BDE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 37844  013BE4  0EFE               	movlw	-2
 37845  013BE6  0060  F007  FFE3   	movff	btemp,plusw1
 37846                           
 37847                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 37848  013BEC  EE22  F0B9         	lfsr	2,_C+186	;volatile
 37849  013BF0  006F FF7B FFE6     	movff	postinc2,postinc1
 37850  013BF6  006F FF7B FFE6     	movff	postinc2,postinc1
 37851  013BFC  006F FF7B FFE6     	movff	postinc2,postinc1
 37852  013C02  006F FF7B FFE6     	movff	postinc2,postinc1
 37853  013C08  EE22  F0BD         	lfsr	2,_C+190	;volatile
 37854  013C0C  006F FF7B FFE6     	movff	postinc2,postinc1
 37855  013C12  006F FF7B FFE6     	movff	postinc2,postinc1
 37856  013C18  006F FF7B FFE6     	movff	postinc2,postinc1
 37857  013C1E  006F FF7B FFE6     	movff	postinc2,postinc1
 37858  013C24  EE22  F09B         	lfsr	2,_C+156	;volatile
 37859  013C28  006F FF7B FFE6     	movff	postinc2,postinc1
 37860  013C2E  006F FF7B FFE6     	movff	postinc2,postinc1
 37861  013C34  006F FF7B FFE6     	movff	postinc2,postinc1
 37862  013C3A  006F FF7B FFE6     	movff	postinc2,postinc1
 37863  013C40  EE22  F126         	lfsr	2,_C+295	;volatile
 37864  013C44  006F FF7B FFE6     	movff	postinc2,postinc1
 37865  013C4A  006F FF7B FFE6     	movff	postinc2,postinc1
 37866  013C50  006F FF7B FFE6     	movff	postinc2,postinc1
 37867  013C56  006F FF7B FFE6     	movff	postinc2,postinc1
 37868  013C5C  EE22  F122         	lfsr	2,_C+291	;volatile
 37869  013C60  006F FF7B FFE6     	movff	postinc2,postinc1
 37870  013C66  006F FF7B FFE6     	movff	postinc2,postinc1
 37871  013C6C  006F FF7B FFE6     	movff	postinc2,postinc1
 37872  013C72  006F FF7B FFE6     	movff	postinc2,postinc1
 37873  013C78  EE22  F121         	lfsr	2,_C+290	;volatile
 37874  013C7C  50DF               	movf	indf2,w,c
 37875  013C7E  6EE6               	movwf	postinc1,c
 37876  013C80  0E00               	movlw	0
 37877  013C82  6EE6               	movwf	postinc1,c
 37878  013C84  EC7D  F0E9         	call	_get_ac_charger_relay	;wreg free
 37879  013C88  5001               	movf	btemp^0,w,c
 37880  013C8A  6EE6               	movwf	postinc1,c
 37881  013C8C  0E00               	movlw	0
 37882  013C8E  6EE6               	movwf	postinc1,c
 37883  013C90  EE22  F067         	lfsr	2,_C+104	;volatile
 37884  013C94  006F FF7B FFE6     	movff	postinc2,postinc1
 37885  013C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 37886  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 37887  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 37888  013CAC  EE22  F087         	lfsr	2,_C+136	;volatile
 37889  013CB0  006F FF7B FFE6     	movff	postinc2,postinc1
 37890  013CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 37891  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 37892  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 37893  013CC8  EE22  F0B3         	lfsr	2,_C+180	;volatile
 37894  013CCC  006F FF78  F00B    	movff	postinc2,btemp+10
 37895  013CD2  006F FF74  F00C    	movff	postdec2,btemp+11
 37896  013CD8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 37897  013CDE  0060  F033  FFE6   	movff	btemp+11,postinc1
 37898  013CE4  EE22  F0B5         	lfsr	2,_C+182	;volatile
 37899  013CE8  006F FF78  F00B    	movff	postinc2,btemp+10
 37900  013CEE  006F FF74  F00C    	movff	postdec2,btemp+11
 37901  013CF4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 37902  013CFA  0060  F033  FFE6   	movff	btemp+11,postinc1
 37903  013D00  EE22  F093         	lfsr	2,_C+148	;volatile
 37904  013D04  006F FF7B FFE6     	movff	postinc2,postinc1
 37905  013D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 37906  013D10  006F FF7B FFE6     	movff	postinc2,postinc1
 37907  013D16  006F FF7B FFE6     	movff	postinc2,postinc1
 37908  013D1C  EE22  F08F         	lfsr	2,_C+144	;volatile
 37909  013D20  006F FF7B FFE6     	movff	postinc2,postinc1
 37910  013D26  006F FF7B FFE6     	movff	postinc2,postinc1
 37911  013D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 37912  013D32  006F FF7B FFE6     	movff	postinc2,postinc1
 37913  013D38  EE22  F077         	lfsr	2,_C+120	;volatile
 37914  013D3C  006F FF7B FFE6     	movff	postinc2,postinc1
 37915  013D42  006F FF7B FFE6     	movff	postinc2,postinc1
 37916  013D48  006F FF7B FFE6     	movff	postinc2,postinc1
 37917  013D4E  006F FF7B FFE6     	movff	postinc2,postinc1
 37918  013D54  EE22  F073         	lfsr	2,_C+116	;volatile
 37919  013D58  006F FF7B FFE6     	movff	postinc2,postinc1
 37920  013D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 37921  013D64  006F FF7B FFE6     	movff	postinc2,postinc1
 37922  013D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 37923  013D70  EE22  F07B         	lfsr	2,_C+124	;volatile
 37924  013D74  006F FF7B FFE6     	movff	postinc2,postinc1
 37925  013D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 37926  013D80  006F FF7B FFE6     	movff	postinc2,postinc1
 37927  013D86  006F FF7B FFE6     	movff	postinc2,postinc1
 37928  013D8C  EE22  F07F         	lfsr	2,_C+128	;volatile
 37929  013D90  006F FF7B FFE6     	movff	postinc2,postinc1
 37930  013D96  006F FF7B FFE6     	movff	postinc2,postinc1
 37931  013D9C  006F FF7B FFE6     	movff	postinc2,postinc1
 37932  013DA2  006F FF7B FFE6     	movff	postinc2,postinc1
 37933  013DA8  EE22  F047         	lfsr	2,_C+72	;volatile
 37934  013DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 37935  013DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 37936  013DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 37937  013DBE  006F FF7B FFE6     	movff	postinc2,postinc1
 37938  013DC4  EE22  F043         	lfsr	2,_C+68	;volatile
 37939  013DC8  006F FF7B FFE6     	movff	postinc2,postinc1
 37940  013DCE  006F FF7B FFE6     	movff	postinc2,postinc1
 37941  013DD4  006F FF7B FFE6     	movff	postinc2,postinc1
 37942  013DDA  006F FF7B FFE6     	movff	postinc2,postinc1
 37943  013DE0  EE22  F063         	lfsr	2,_C+100	;volatile
 37944  013DE4  006F FF7B FFE6     	movff	postinc2,postinc1
 37945  013DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 37946  013DF0  006F FF7B FFE6     	movff	postinc2,postinc1
 37947  013DF6  006F FF7B FFE6     	movff	postinc2,postinc1
 37948  013DFC  EE22  F04B         	lfsr	2,_C+76	;volatile
 37949  013E00  006F FF7B FFE6     	movff	postinc2,postinc1
 37950  013E06  006F FF7B FFE6     	movff	postinc2,postinc1
 37951  013E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 37952  013E12  006F FF7B FFE6     	movff	postinc2,postinc1
 37953  013E18  EE22  F04F         	lfsr	2,_C+80	;volatile
 37954  013E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 37955  013E22  006F FF7B FFE6     	movff	postinc2,postinc1
 37956  013E28  006F FF7B FFE6     	movff	postinc2,postinc1
 37957  013E2E  006F FF7B FFE6     	movff	postinc2,postinc1
 37958  013E34  EE22  F053         	lfsr	2,_C+84	;volatile
 37959  013E38  006F FF7B FFE6     	movff	postinc2,postinc1
 37960  013E3E  006F FF7B FFE6     	movff	postinc2,postinc1
 37961  013E44  006F FF7B FFE6     	movff	postinc2,postinc1
 37962  013E4A  006F FF7B FFE6     	movff	postinc2,postinc1
 37963  013E50  0060  F623  FFE6   	movff	_V+129,postinc1
 37964  013E56  0060  F627  FFE6   	movff	_V+130,postinc1
 37965  013E5C  0060  F62B  FFE6   	movff	_V+131,postinc1
 37966  013E62  0060  F62F  FFE6   	movff	_V+132,postinc1
 37967  013E68  0E32               	movlw	50
 37968  013E6A  6EE6               	movwf	postinc1,c
 37969  013E6C  0E00               	movlw	0
 37970  013E6E  6EE6               	movwf	postinc1,c
 37971  013E70  0ECF               	movlw	low STR_81
 37972  013E72  6EE6               	movwf	postinc1,c
 37973  013E74  0EFA               	movlw	high STR_81
 37974  013E76  6EE6               	movwf	postinc1,c
 37975                           
 37976                           ;stkvar	_log_ptr @ sp[(-98)+4]
 37977  013E78  0EA2               	movlw	-94
 37978  013E7A  006F FF8F FFE6     	movff	plusw1,postinc1
 37979  013E80  006F FF8F FFE6     	movff	plusw1,postinc1
 37980  013E86  0E5E               	movlw	94
 37981  013E88  6EE6               	movwf	postinc1,c
 37982  013E8A  ECAC  F0D4         	call	_sprintf	;wreg free
 37983                           
 37984                           ; BSR set to: 0
 37985                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 37986  013E8E  0E7D               	movlw	125
 37987  013E90  6EE6               	movwf	postinc1,c
 37988  013E92  0E00               	movlw	0
 37989  013E94  6EE6               	movwf	postinc1,c
 37990  013E96  0E0A               	movlw	10
 37991  013E98  6EE6               	movwf	postinc1,c
 37992  013E9A  EC3A  F0E4         	call	_StartTimer	;wreg free
 37993                           
 37994                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 37995                           ;stkvar	_log_ptr @ sp[(-6)+4]
 37996  013E9E  0EFE               	movlw	-2
 37997  013EA0  006F FF8F FFE6     	movff	plusw1,postinc1
 37998  013EA6  006F FF8F FFE6     	movff	plusw1,postinc1
 37999  013EAC  ECDF  F0DB         	call	_strlen	;wreg free
 38000  013EB0  0060  F007  FFE6   	movff	btemp,postinc1
 38001  013EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 38002  013EBC  EC45  F0E2         	call	_send_port_data_dma	;wreg free
 38003  013EC0                     l14081:
 38004                           
 38005                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 38006  013EC0  0E09               	movlw	9
 38007  013EC2  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 38008  013EC4  D001               	goto	l2207
 38009                           
 38010                           ;bsoc.c: 102:   log_update_wait = 0;
 38011  013EC6  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 38012  013EC8                     l2207:
 38013                           
 38014                           ;bsoc.c: 104:  C.update = 0;
 38015  013EC8  0E00               	movlw	0
 38016  013ECA  006F FFA0  F8B7    	movff	wreg,_C+184	;volatile
 38017                           
 38018                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 38019  013ED0  92BE               	bcf	190,1,c	;volatile
 38020                           
 38021                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 38022  013ED2  0EFA               	movlw	250
 38023  013ED4  26E1               	addwf	fsr1l,f,c
 38024  013ED6  0EFF               	movlw	255
 38025  013ED8  22E2               	addwfc	fsr1h,f,c
 38026  013EDA  0012               	return		;funcret
 38027  013EDC                     __end_of_calc_bsoc:
 38028                           	opt callstack 0
 38029                           
 38030 ;; *************** function _send_port_data_dma *****************
 38031 ;; Defined at:
 38032 ;;		line 398 in file "eadog.c"
 38033 ;; Parameters:    Size  Location     Type
 38034 ;;  dsize           2  [STACK] unsigned short 
 38035 ;; Auto vars:     Size  Location     Type
 38036 ;;		None
 38037 ;; Return value:  Size  Location     Type
 38038 ;;                  1  [STACK] void 
 38039 ;; Registers used:
 38040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38041 ;; Tracked objects:
 38042 ;;		On entry : 0/0
 38043 ;;		On exit  : 3F/3B
 38044 ;;		Unchanged: 0/0
 38045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38050 ;;Total ram usage:        0 bytes
 38051 ;; Hardware stack levels used:    1
 38052 ;; Hardware stack levels required when called:    3
 38053 ;; This function calls:
 38054 ;;		Nothing
 38055 ;; This function is called by:
 38056 ;;		_calc_bsoc
 38057 ;; This function uses a reentrant model
 38058 ;;
 38059                           
 38060                           	psect	text173
 38061  01C48A                     __ptext173:
 38062                           	opt callstack 0
 38063  01C48A                     _send_port_data_dma:
 38064                           	opt callstack 10
 38065                           
 38066                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 38067                           ;stkvar	_dsize @ sp[(0)+-2]
 38068                           
 38069                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38070                           ;incstack = 0
 38071  01C48A  0EFE               	movlw	-2
 38072  01C48C  04E3               	decf	plusw1,w,c
 38073  01C48E  0EFF               	movlw	-1
 38074  01C490  006F FF8C  F001    	movff	plusw1,btemp
 38075  01C496  0E02               	movlw	2
 38076  01C498  5A01               	subwfb	btemp^0,f,c
 38077  01C49A  A0D8               	btfss	status,0,c
 38078  01C49C  D00C               	goto	l10759
 38079                           
 38080                           ;eadog.c: 401:   dsize = 512;
 38081  01C49E  0E00               	movlw	0
 38082  01C4A0  6E0B               	movwf	(btemp+10)^0,c
 38083  01C4A2  0E02               	movlw	2
 38084  01C4A4  6E0C               	movwf	(btemp+11)^0,c
 38085                           
 38086                           ;stkvar	_dsize @ sp[(0)+-2]
 38087  01C4A6  0EFE               	movlw	-2
 38088  01C4A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38089  01C4AE  0EFF               	movlw	-1
 38090  01C4B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 38091  01C4B6                     l10759:
 38092                           
 38093                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 38094  01C4B6  013B               	movlb	59	; () banked
 38095  01C4B8  9FDC               	bcf	220,7,b	;volatile
 38096                           
 38097                           ; BSR set to: 59
 38098                           ;eadog.c: 404:  DMA2SSZ = dsize;
 38099                           ;stkvar	_dsize @ sp[(0)+-2]
 38100  01C4BA  0EFE               	movlw	-2
 38101  01C4BC  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 38102  01C4C2  0EFF               	movlw	-1
 38103  01C4C4  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 38104                           
 38105                           ; BSR set to: 59
 38106                           ;eadog.c: 405:  DMA2DSZ = 1;
 38107  01C4CA  0E00               	movlw	0
 38108  01C4CC  6FCF               	movwf	207,b	;volatile
 38109  01C4CE  0E01               	movlw	1
 38110  01C4D0  6FCE               	movwf	206,b	;volatile
 38111                           
 38112                           ; BSR set to: 59
 38113                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 38114  01C4D2  8FDC               	bsf	220,7,b	;volatile
 38115                           
 38116                           ; BSR set to: 59
 38117                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 38118  01C4D4  8DDC               	bsf	220,6,b	;volatile
 38119                           
 38120                           ; BSR set to: 59
 38121                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38122  01C4D6  52E5               	movf	postdec1,f,c
 38123  01C4D8  52E5               	movf	postdec1,f,c
 38124  01C4DA  0012               	return		;funcret
 38125  01C4DC                     __end_of_send_port_data_dma:
 38126                           	opt callstack 0
 38127                           
 38128 ;; *************** function _port_data_dma_ptr *****************
 38129 ;; Defined at:
 38130 ;;		line 413 in file "eadog.c"
 38131 ;; Parameters:    Size  Location     Type
 38132 ;;		None
 38133 ;; Auto vars:     Size  Location     Type
 38134 ;;		None
 38135 ;; Return value:  Size  Location     Type
 38136 ;;                  2  [STACK] PTR unsigned char 
 38137 ;; Registers used:
 38138 ;;		wreg, status,2, status,0, btemp, btemp+1
 38139 ;; Tracked objects:
 38140 ;;		On entry : 3F/1
 38141 ;;		On exit  : 0/0
 38142 ;;		Unchanged: 0/0
 38143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38148 ;;Total ram usage:        0 bytes
 38149 ;; Hardware stack levels used:    1
 38150 ;; Hardware stack levels required when called:    3
 38151 ;; This function calls:
 38152 ;;		Nothing
 38153 ;; This function is called by:
 38154 ;;		_calc_bsoc
 38155 ;; This function uses a reentrant model
 38156 ;;
 38157                           
 38158                           	psect	text174
 38159  01D330                     __ptext174:
 38160                           	opt callstack 0
 38161  01D330                     _port_data_dma_ptr:
 38162                           	opt callstack 10
 38163                           
 38164                           ;eadog.c: 415:  return port_data;
 38165                           
 38166                           ; BSR set to: 59
 38167                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38168                           ;incstack = 0
 38169  01D330  0EFF               	movlw	low _port_data
 38170  01D332  6E01               	movwf	btemp^0,c
 38171  01D334  0E05               	movlw	high _port_data
 38172  01D336  6E02               	movwf	(btemp+1)^0,c
 38173                           
 38174                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 38175  01D338  0012               	return		;funcret
 38176  01D33A                     __end_of_port_data_dma_ptr:
 38177                           	opt callstack 0
 38178                           
 38179 ;; *************** function ___asfladd *****************
 38180 ;; Defined at:
 38181 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 38182 ;; Parameters:    Size  Location     Type
 38183 ;;  f1p             2  [STACK] PTR 
 38184 ;;		 -> C(299), 
 38185 ;;  f2              4  [STACK] PTR 
 38186 ;; Auto vars:     Size  Location     Type
 38187 ;;		None
 38188 ;; Return value:  Size  Location     Type
 38189 ;;                  4  [STACK] PTR 
 38190 ;; Registers used:
 38191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 38192 ;; Tracked objects:
 38193 ;;		On entry : 0/0
 38194 ;;		On exit  : 0/0
 38195 ;;		Unchanged: 0/0
 38196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38201 ;;Total ram usage:        0 bytes
 38202 ;; Hardware stack levels used:    1
 38203 ;; Hardware stack levels required when called:    4
 38204 ;; This function calls:
 38205 ;;		___fladd
 38206 ;; This function is called by:
 38207 ;;		_calc_bsoc
 38208 ;; This function uses a reentrant model
 38209 ;;
 38210                           
 38211                           	psect	text175
 38212  01BE44                     __ptext175:
 38213                           	opt callstack 0
 38214  01BE44                     ___asfladd:
 38215                           	opt callstack 9
 38216                           
 38217                           ;	Return value of ___asfladd is never used
 38218                           ;stkvar	_f2 @ sp[(0)+-6]
 38219                           
 38220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38221                           ;incstack = 0
 38222  01BE44  0EFA               	movlw	-6
 38223  01BE46  006F FF8F FFE6     	movff	plusw1,postinc1
 38224  01BE4C  006F FF8F FFE6     	movff	plusw1,postinc1
 38225  01BE52  006F FF8F FFE6     	movff	plusw1,postinc1
 38226  01BE58  006F FF8F FFE6     	movff	plusw1,postinc1
 38227                           
 38228                           ;stkvar	_f1p @ sp[(-4)+-2]
 38229  01BE5E  0EFA               	movlw	-6
 38230  01BE60  006F FF8F FFD9     	movff	plusw1,fsr2l
 38231  01BE66  0EFB               	movlw	-5
 38232  01BE68  006F FF8F FFDA     	movff	plusw1,fsr2h
 38233  01BE6E  006F FF7B FFE6     	movff	postinc2,postinc1
 38234  01BE74  006F FF7B FFE6     	movff	postinc2,postinc1
 38235  01BE7A  006F FF7B FFE6     	movff	postinc2,postinc1
 38236  01BE80  006F FF7B FFE6     	movff	postinc2,postinc1
 38237  01BE86  EC83  F0A3         	call	___fladd	;wreg free
 38238                           
 38239                           ;stkvar	_f1p @ sp[(0)+-2]
 38240  01BE8A  0EFE               	movlw	-2
 38241  01BE8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 38242  01BE92  0EFF               	movlw	-1
 38243  01BE94  006F FF8F FFDA     	movff	plusw1,fsr2h
 38244  01BE9A  0060  F007  FFDE   	movff	btemp,postinc2
 38245  01BEA0  0060  F00B  FFDE   	movff	btemp+1,postinc2
 38246  01BEA6  0060  F00F  FFDE   	movff	btemp+2,postinc2
 38247  01BEAC  0060  F013  FFDE   	movff	btemp+3,postinc2
 38248                           
 38249                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 38250  01BEB2  0EFA               	movlw	250
 38251  01BEB4  26E1               	addwf	fsr1l,f,c
 38252  01BEB6  0EFF               	movlw	255
 38253  01BEB8  22E2               	addwfc	fsr1h,f,c
 38254  01BEBA  0012               	return		;funcret
 38255  01BEBC                     __end_of___asfladd:
 38256                           	opt callstack 0
 38257                           
 38258 ;; *************** function _INT0_ISR *****************
 38259 ;; Defined at:
 38260 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 38261 ;; Parameters:    Size  Location     Type
 38262 ;;		None
 38263 ;; Auto vars:     Size  Location     Type
 38264 ;;		None
 38265 ;; Return value:  Size  Location     Type
 38266 ;;                  1    wreg      void 
 38267 ;; Registers used:
 38268 ;;		wreg, status,2, status,0, pclath, tosl
 38269 ;; Tracked objects:
 38270 ;;		On entry : 0/0
 38271 ;;		On exit  : 0/0
 38272 ;;		Unchanged: 0/0
 38273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38278 ;;Total ram usage:        0 bytes
 38279 ;; Hardware stack levels used:    1
 38280 ;; Hardware stack levels required when called:    2
 38281 ;; This function calls:
 38282 ;;		_INT0_CallBack
 38283 ;; This function is called by:
 38284 ;;		Interrupt level 2
 38285 ;; This function uses a non-reentrant model
 38286 ;;
 38287                           
 38288                           	psect	text176
 38289  01D308                     __ptext176:
 38290                           	opt callstack 0
 38291  01D308                     _INT0_ISR:
 38292                           	opt callstack 2
 38293                           
 38294                           ;incstack = 0
 38295  01D308  EE14  F208         	lfsr	1,___inthi_sp
 38296                           
 38297                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 38298  01D30C  0139               	movlb	57	; () banked
 38299  01D30E  91A1               	bcf	161,0,b	;volatile
 38300                           
 38301                           ; BSR set to: 57
 38302                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 38303  01D310  EC0A  F0E8         	call	_INT0_CallBack	;wreg free
 38304  01D314  0011               	retfie		f
 38305  01D316                     __end_of_INT0_ISR:
 38306                           	opt callstack 0
 38307                           
 38308 ;; *************** function _INT0_CallBack *****************
 38309 ;; Defined at:
 38310 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 38311 ;; Parameters:    Size  Location     Type
 38312 ;;		None
 38313 ;; Auto vars:     Size  Location     Type
 38314 ;;		None
 38315 ;; Return value:  Size  Location     Type
 38316 ;;                  1  [STACK] void 
 38317 ;; Registers used:
 38318 ;;		wreg, status,2, status,0, pclath, tosl
 38319 ;; Tracked objects:
 38320 ;;		On entry : 3F/39
 38321 ;;		On exit  : 0/0
 38322 ;;		Unchanged: 0/0
 38323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38328 ;;Total ram usage:        0 bytes
 38329 ;; Hardware stack levels used:    1
 38330 ;; Hardware stack levels required when called:    1
 38331 ;; This function calls:
 38332 ;;		Absolute function
 38333 ;;		_INT0_DefaultInterruptHandler
 38334 ;; This function is called by:
 38335 ;;		_INT0_ISR
 38336 ;; This function uses a reentrant model
 38337 ;;
 38338                           
 38339                           	psect	text177
 38340  01D014                     __ptext177:
 38341                           	opt callstack 0
 38342  01D014                     _INT0_CallBack:
 38343                           	opt callstack 2
 38344                           
 38345                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 38346                           
 38347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38348                           ;incstack = 0
 38349  01D014  0100               	movlb	0	; () banked
 38350  01D016  5193               	movf	_INT0_InterruptHandler& (0+255),w,b
 38351  01D018  1194               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 38352  01D01A  1195               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 38353  01D01C  B4D8               	btfsc	status,2,c
 38354  01D01E  0012               	return	
 38355                           
 38356                           ; BSR set to: 0
 38357                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 38358  01D020  D801               	call	u1074_48
 38359  01D022  0012               	return	
 38360  01D024                     u1074_48:
 38361  01D024  0005               	push	
 38362  01D026  6EFA               	movwf	pclath,c
 38363  01D028  5193               	movf	_INT0_InterruptHandler& (0+255),w,b
 38364  01D02A  6EFD               	movwf	tosl,c
 38365  01D02C  5194               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 38366  01D02E  6EFE               	movwf	tosh,c
 38367  01D030  5195               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 38368  01D032  6EFF               	movwf	tosu,c
 38369  01D034  50FA               	movf	pclath,w,c
 38370  01D036  0012               	return		;indir
 38371  01D038                     __end_of_INT0_CallBack:
 38372                           	opt callstack 0
 38373                           
 38374 ;; *************** function _INT0_DefaultInterruptHandler *****************
 38375 ;; Defined at:
 38376 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 38377 ;; Parameters:    Size  Location     Type
 38378 ;;		None
 38379 ;; Auto vars:     Size  Location     Type
 38380 ;;		None
 38381 ;; Return value:  Size  Location     Type
 38382 ;;                  1  [STACK] void 
 38383 ;; Registers used:
 38384 ;;		None
 38385 ;; Tracked objects:
 38386 ;;		On entry : 3F/0
 38387 ;;		On exit  : 0/0
 38388 ;;		Unchanged: 0/0
 38389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38394 ;;Total ram usage:        0 bytes
 38395 ;; Hardware stack levels used:    1
 38396 ;; This function calls:
 38397 ;;		Nothing
 38398 ;; This function is called by:
 38399 ;;		_EXT_INT_Initialize
 38400 ;;		_INT0_CallBack
 38401 ;; This function uses a reentrant model
 38402 ;;
 38403                           
 38404                           	psect	text178
 38405  01D3AE                     __ptext178:
 38406                           	opt callstack 0
 38407  01D3AE                     _INT0_DefaultInterruptHandler:
 38408                           	opt callstack 2
 38409                           
 38410                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 38411                           
 38412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38413                           ;incstack = 0
 38414  01D3AE  0012               	return		;funcret
 38415  01D3B0                     __end_of_INT0_DefaultInterruptHandler:
 38416                           	opt callstack 0
 38417                           
 38418 ;; *************** function _Default_ISR *****************
 38419 ;; Defined at:
 38420 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 38421 ;; Parameters:    Size  Location     Type
 38422 ;;		None
 38423 ;; Auto vars:     Size  Location     Type
 38424 ;;		None
 38425 ;; Return value:  Size  Location     Type
 38426 ;;                  1    wreg      void 
 38427 ;; Registers used:
 38428 ;;		None
 38429 ;; Tracked objects:
 38430 ;;		On entry : 0/0
 38431 ;;		On exit  : 0/0
 38432 ;;		Unchanged: 0/0
 38433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38438 ;;Total ram usage:        0 bytes
 38439 ;; Hardware stack levels used:    1
 38440 ;; This function calls:
 38441 ;;		Nothing
 38442 ;; This function is called by:
 38443 ;;		Interrupt level 2
 38444 ;; This function uses a non-reentrant model
 38445 ;;
 38446                           
 38447                           	psect	text179
 38448  01D3A4                     __ptext179:
 38449                           	opt callstack 0
 38450  01D3A4                     _Default_ISR:
 38451                           	opt callstack 4
 38452                           
 38453                           ;incstack = 0
 38454  01D3A4  EE14  F208         	lfsr	1,___inthi_sp
 38455  01D3A8  0011               	retfie		f
 38456  01D3AA                     __end_of_Default_ISR:
 38457                           	opt callstack 0
 38458                           
 38459 ;; *************** function _ADCC_ISR *****************
 38460 ;; Defined at:
 38461 ;;		line 314 in file "mcc_generated_files/adcc.c"
 38462 ;; Parameters:    Size  Location     Type
 38463 ;;		None
 38464 ;; Auto vars:     Size  Location     Type
 38465 ;;		None
 38466 ;; Return value:  Size  Location     Type
 38467 ;;                  1    wreg      void 
 38468 ;; Registers used:
 38469 ;;		wreg, status,2, status,0, pclath, tosl
 38470 ;; Tracked objects:
 38471 ;;		On entry : 0/0
 38472 ;;		On exit  : 0/0
 38473 ;;		Unchanged: 0/0
 38474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38479 ;;Total ram usage:        0 bytes
 38480 ;; Hardware stack levels used:    1
 38481 ;; Hardware stack levels required when called:    1
 38482 ;; This function calls:
 38483 ;;		Absolute function
 38484 ;;		_ADCC_DefaultInterruptHandler
 38485 ;;		_adc_int_handler
 38486 ;; This function is called by:
 38487 ;;		Interrupt level 2
 38488 ;; This function uses a non-reentrant model
 38489 ;;
 38490                           
 38491                           	psect	text180
 38492  01CCA8                     __ptext180:
 38493                           	opt callstack 0
 38494  01CCA8                     _ADCC_ISR:
 38495                           	opt callstack 3
 38496                           
 38497                           ;incstack = 0
 38498  01CCA8  EE14  F208         	lfsr	1,___inthi_sp
 38499                           
 38500                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 38501  01CCAC  0139               	movlb	57	; () banked
 38502  01CCAE  95A1               	bcf	161,2,b	;volatile
 38503                           
 38504                           ; BSR set to: 57
 38505                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 38506  01CCB0  0100               	movlb	0	; () banked
 38507  01CCB2  5184               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 38508  01CCB4  1185               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 38509  01CCB6  1186               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 38510  01CCB8  B4D8               	btfsc	status,2,c
 38511  01CCBA  0011               	retfie		f
 38512                           
 38513                           ; BSR set to: 0
 38514                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 38515  01CCBC  D801               	call	i2u1127_48
 38516  01CCBE  0011               	retfie		f
 38517  01CCC0                     i2u1127_48:
 38518  01CCC0  0005               	push	
 38519  01CCC2  6EFA               	movwf	pclath,c
 38520  01CCC4  5184               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 38521  01CCC6  6EFD               	movwf	tosl,c
 38522  01CCC8  5185               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 38523  01CCCA  6EFE               	movwf	tosh,c
 38524  01CCCC  5186               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 38525  01CCCE  6EFF               	movwf	tosu,c
 38526  01CCD0  50FA               	movf	pclath,w,c
 38527  01CCD2  0012               	return		;indir
 38528  01CCD4                     __end_of_ADCC_ISR:
 38529                           	opt callstack 0
 38530                           
 38531 ;; *************** function _adc_int_t_handler *****************
 38532 ;; Defined at:
 38533 ;;		line 176 in file "daq.c"
 38534 ;; Parameters:    Size  Location     Type
 38535 ;;		None
 38536 ;; Auto vars:     Size  Location     Type
 38537 ;;		None
 38538 ;; Return value:  Size  Location     Type
 38539 ;;                  1  [STACK] void 
 38540 ;; Registers used:
 38541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 38542 ;; Tracked objects:
 38543 ;;		On entry : 3F/0
 38544 ;;		On exit  : 1/0
 38545 ;;		Unchanged: 0/0
 38546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38551 ;;Total ram usage:        0 bytes
 38552 ;; Hardware stack levels used:    1
 38553 ;; Hardware stack levels required when called:    1
 38554 ;; This function calls:
 38555 ;;		_ADCC_DischargeSampleCapacitor
 38556 ;;		_ADCC_StartConversion
 38557 ;; This function is called by:
 38558 ;;		_start_adc_scan
 38559 ;;		_ADCC_ThresholdISR
 38560 ;; This function uses a reentrant model
 38561 ;;
 38562                           
 38563                           	psect	text181
 38564  01BD4C                     __ptext181:
 38565                           	opt callstack 0
 38566  01BD4C                     _adc_int_t_handler:
 38567                           	opt callstack 2
 38568                           
 38569                           ;daq.c: 181:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 38570                           
 38571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38572                           ;incstack = 0
 38573  01BD4C  013E               	movlb	62	; () banked
 38574  01BD4E  51E6               	movf	230,w,b	;volatile
 38575  01BD50  006F FB9C  F001    	movff	16103,btemp	;volatile
 38576  01BD56  6A02               	clrf	(btemp+1)^0,c
 38577  01BD58  0060  F004  F002   	movff	btemp,btemp+1
 38578  01BD5E  6A01               	clrf	btemp^0,c
 38579  01BD60  2601               	addwf	btemp^0,f,c
 38580  01BD62  0E00               	movlw	0
 38581  01BD64  2202               	addwfc	(btemp+1)^0,f,c
 38582  01BD66  0100               	movlb	0	; () banked
 38583  01BD68  51E0               	movf	(_R+50)& (0+255),w,b	;volatile
 38584  01BD6A  0D02               	mullw	2
 38585  01BD6C  50F3               	movf	243,w,c
 38586  01BD6E  0FAE               	addlw	low _R
 38587  01BD70  6ED9               	movwf	fsr2l,c
 38588  01BD72  6ADA               	clrf	fsr2h,c
 38589  01BD74  0060  F007  FFDE   	movff	btemp,postinc2
 38590  01BD7A  0060  F00B  FFDD   	movff	btemp+1,postdec2
 38591  01BD80                     l12299:
 38592                           
 38593                           ;daq.c: 183:   if (++R.scan_index > 0XD) {
 38594  01BD80  0100               	movlb	0	; () banked
 38595  01BD82  2BE0               	incf	(_R+50)& (0+255),f,b	;volatile
 38596  01BD84  0E0D               	movlw	13
 38597  01BD86  65E0               	cpfsgt	(_R+50)& (0+255),b	;volatile
 38598  01BD88  D003               	goto	l12305
 38599                           
 38600                           ; BSR set to: 0
 38601                           ;daq.c: 184:    R.done = 1;
 38602  01BD8A  0E01               	movlw	1
 38603  01BD8C  6FE3               	movwf	(_R+53)& (0+255),b	;volatile
 38604  01BD8E  0012               	return	
 38605  01BD90                     l12305:
 38606                           
 38607                           ; BSR set to: 0
 38608                           ;daq.c: 190:  } while (!((R.scan_select >> R.scan_index) &0x1));
 38609  01BD90  0060  F380  F00C   	movff	_R+50,btemp+11	;volatile
 38610  01BD96  EE20  F0E1         	lfsr	2,_R+51	;volatile
 38611  01BD9A  006F FF78  F009    	movff	postinc2,btemp+8
 38612  01BDA0  006F FF74  F00A    	movff	postdec2,btemp+9
 38613  01BDA6  2A0C               	incf	(btemp+11)^0,f,c
 38614  01BDA8  D003               	goto	u1124_44
 38615  01BDAA                     u1124_45:
 38616  01BDAA  90D8               	bcf	status,0,c
 38617  01BDAC  320A               	rrcf	(btemp+9)^0,f,c
 38618  01BDAE  3209               	rrcf	(btemp+8)^0,f,c
 38619  01BDB0                     u1124_44:
 38620  01BDB0  2E0C               	decfsz	(btemp+11)^0,f,c
 38621  01BDB2  D7FB               	goto	u1124_45
 38622  01BDB4  A009               	btfss	(btemp+8)^0,0,c
 38623  01BDB6  D7E4               	goto	l12299
 38624                           
 38625                           ;daq.c: 191:  ADCC_DischargeSampleCapacitor();
 38626  01BDB8  ECB3  F0E9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 38627                           
 38628                           ; BSR set to: 62
 38629                           ;daq.c: 192:  ADCC_StartConversion(R.scan_index & 0xf);
 38630  01BDBC  0100               	movlb	0	; () banked
 38631  01BDBE  51E0               	movf	(_R+50)& (0+255),w,b	;volatile
 38632  01BDC0  0B0F               	andlw	15
 38633  01BDC2  6EE6               	movwf	postinc1,c
 38634  01BDC4  EC3E  F0E9         	call	_ADCC_StartConversion	;wreg free
 38635                           
 38636                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 38637  01BDC8  0012               	return		;funcret
 38638  01BDCA                     __end_of_adc_int_t_handler:
 38639                           	opt callstack 0
 38640                           
 38641 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 38642 ;; Defined at:
 38643 ;;		line 339 in file "mcc_generated_files/adcc.c"
 38644 ;; Parameters:    Size  Location     Type
 38645 ;;		None
 38646 ;; Auto vars:     Size  Location     Type
 38647 ;;		None
 38648 ;; Return value:  Size  Location     Type
 38649 ;;                  1  [STACK] void 
 38650 ;; Registers used:
 38651 ;;		None
 38652 ;; Tracked objects:
 38653 ;;		On entry : 3F/0
 38654 ;;		On exit  : 0/0
 38655 ;;		Unchanged: 0/0
 38656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38661 ;;Total ram usage:        0 bytes
 38662 ;; Hardware stack levels used:    1
 38663 ;; This function calls:
 38664 ;;		Nothing
 38665 ;; This function is called by:
 38666 ;;		_ADCC_Initialize
 38667 ;;		_ADCC_ISR
 38668 ;;		_ADCC_ThresholdISR
 38669 ;; This function uses a reentrant model
 38670 ;;
 38671                           
 38672                           	psect	text182
 38673  01D3B0                     __ptext182:
 38674                           	opt callstack 0
 38675  01D3B0                     _ADCC_DefaultInterruptHandler:
 38676                           	opt callstack 3
 38677                           
 38678                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 38679                           
 38680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38681                           ;incstack = 0
 38682  01D3B0  0012               	return		;funcret
 38683  01D3B2                     __end_of_ADCC_DefaultInterruptHandler:
 38684                           	opt callstack 0
 38685                           
 38686 ;; *************** function _adc_int_handler *****************
 38687 ;; Defined at:
 38688 ;;		line 166 in file "daq.c"
 38689 ;; Parameters:    Size  Location     Type
 38690 ;;		None
 38691 ;; Auto vars:     Size  Location     Type
 38692 ;;		None
 38693 ;; Return value:  Size  Location     Type
 38694 ;;                  1  [STACK] void 
 38695 ;; Registers used:
 38696 ;;		None
 38697 ;; Tracked objects:
 38698 ;;		On entry : 3F/0
 38699 ;;		On exit  : 0/0
 38700 ;;		Unchanged: 0/0
 38701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38706 ;;Total ram usage:        0 bytes
 38707 ;; Hardware stack levels used:    1
 38708 ;; This function calls:
 38709 ;;		Nothing
 38710 ;; This function is called by:
 38711 ;;		_start_adc_scan
 38712 ;;		_ADCC_ISR
 38713 ;; This function uses a reentrant model
 38714 ;;
 38715                           
 38716                           	psect	text183
 38717  01D3B2                     __ptext183:
 38718                           	opt callstack 0
 38719  01D3B2                     _adc_int_handler:
 38720                           	opt callstack 3
 38721                           
 38722                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 38723                           
 38724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38725                           ;incstack = 0
 38726  01D3B2  0012               	return		;funcret
 38727  01D3B4                     __end_of_adc_int_handler:
 38728                           	opt callstack 0
 38729                           
 38730 ;; *************** function _ADCC_ThresholdISR *****************
 38731 ;; Defined at:
 38732 ;;		line 327 in file "mcc_generated_files/adcc.c"
 38733 ;; Parameters:    Size  Location     Type
 38734 ;;		None
 38735 ;; Auto vars:     Size  Location     Type
 38736 ;;		None
 38737 ;; Return value:  Size  Location     Type
 38738 ;;                  1    wreg      void 
 38739 ;; Registers used:
 38740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 38741 ;; Tracked objects:
 38742 ;;		On entry : 0/0
 38743 ;;		On exit  : 0/0
 38744 ;;		Unchanged: 0/0
 38745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38748 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38749 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38750 ;;Total ram usage:        5 bytes
 38751 ;; Hardware stack levels used:    1
 38752 ;; Hardware stack levels required when called:    2
 38753 ;; This function calls:
 38754 ;;		Absolute function
 38755 ;;		_ADCC_DefaultInterruptHandler
 38756 ;;		_adc_int_t_handler
 38757 ;; This function is called by:
 38758 ;;		Interrupt level 2
 38759 ;; This function uses a non-reentrant model
 38760 ;;
 38761                           
 38762                           	psect	text184
 38763  01C004                     __ptext184:
 38764                           	opt callstack 0
 38765  01C004                     _ADCC_ThresholdISR:
 38766                           	opt callstack 2
 38767                           
 38768                           ;incstack = 0
 38769  01C004  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 38770  01C00A  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 38771  01C010  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 38772  01C016  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 38773  01C01C  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 38774  01C022  EE14  F208         	lfsr	1,___inthi_sp
 38775                           
 38776                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 38777  01C026  0139               	movlb	57	; () banked
 38778  01C028  97A1               	bcf	161,3,b	;volatile
 38779                           
 38780                           ; BSR set to: 57
 38781                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 38782  01C02A  0100               	movlb	0	; () banked
 38783  01C02C  5181               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 38784  01C02E  1182               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 38785  01C030  1183               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 38786  01C032  B4D8               	btfsc	status,2,c
 38787  01C034  D00C               	goto	i2u1129_49
 38788                           
 38789                           ; BSR set to: 0
 38790                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 38791  01C036  D801               	call	i2u1129_48
 38792  01C038  D00A               	goto	i2u1129_49
 38793  01C03A                     i2u1129_48:
 38794  01C03A  0005               	push	
 38795  01C03C  6EFA               	movwf	pclath,c
 38796  01C03E  5181               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 38797  01C040  6EFD               	movwf	tosl,c
 38798  01C042  5182               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 38799  01C044  6EFE               	movwf	tosh,c
 38800  01C046  5183               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 38801  01C048  6EFF               	movwf	tosu,c
 38802  01C04A  50FA               	movf	pclath,w,c
 38803  01C04C  0012               	return		;indir
 38804  01C04E                     i2u1129_49:
 38805  01C04E  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 38806  01C054  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 38807  01C05A  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 38808  01C060  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 38809  01C066  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 38810  01C06C  0011               	retfie		f
 38811  01C06E                     __end_of_ADCC_ThresholdISR:
 38812                           	opt callstack 0
 38813                           
 38814 ;; *************** function _UART1_rx_vect_isr *****************
 38815 ;; Defined at:
 38816 ;;		line 181 in file "mcc_generated_files/uart1.c"
 38817 ;; Parameters:    Size  Location     Type
 38818 ;;		None
 38819 ;; Auto vars:     Size  Location     Type
 38820 ;;		None
 38821 ;; Return value:  Size  Location     Type
 38822 ;;                  1    wreg      void 
 38823 ;; Registers used:
 38824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 38825 ;; Tracked objects:
 38826 ;;		On entry : 0/0
 38827 ;;		On exit  : 0/0
 38828 ;;		Unchanged: 0/0
 38829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38834 ;;Total ram usage:        0 bytes
 38835 ;; Hardware stack levels used:    1
 38836 ;; Hardware stack levels required when called:    1
 38837 ;; This function calls:
 38838 ;;		Absolute function
 38839 ;;		_UART1_Receive_ISR
 38840 ;; This function is called by:
 38841 ;;		Interrupt level 2
 38842 ;; This function uses a non-reentrant model
 38843 ;;
 38844                           
 38845                           	psect	text185
 38846  01CF0C                     __ptext185:
 38847                           	opt callstack 0
 38848  01CF0C                     _UART1_rx_vect_isr:
 38849                           	opt callstack 3
 38850                           
 38851                           ;incstack = 0
 38852  01CF0C  EE14  F208         	lfsr	1,___inthi_sp
 38853                           
 38854                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 38855  01CF10  0100               	movlb	0	; () banked
 38856  01CF12  5187               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 38857  01CF14  1188               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 38858  01CF16  1189               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 38859  01CF18  B4D8               	btfsc	status,2,c
 38860  01CF1A  0011               	retfie		f
 38861                           
 38862                           ; BSR set to: 0
 38863                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 38864  01CF1C  D801               	call	i2u1131_48
 38865  01CF1E  0011               	retfie		f
 38866  01CF20                     i2u1131_48:
 38867  01CF20  0005               	push	
 38868  01CF22  6EFA               	movwf	pclath,c
 38869  01CF24  5187               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 38870  01CF26  6EFD               	movwf	tosl,c
 38871  01CF28  5188               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 38872  01CF2A  6EFE               	movwf	tosh,c
 38873  01CF2C  5189               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 38874  01CF2E  6EFF               	movwf	tosu,c
 38875  01CF30  50FA               	movf	pclath,w,c
 38876  01CF32  0012               	return		;indir
 38877  01CF34                     __end_of_UART1_rx_vect_isr:
 38878                           	opt callstack 0
 38879                           
 38880 ;; *************** function _UART1_Receive_ISR *****************
 38881 ;; Defined at:
 38882 ;;		line 192 in file "mcc_generated_files/uart1.c"
 38883 ;; Parameters:    Size  Location     Type
 38884 ;;		None
 38885 ;; Auto vars:     Size  Location     Type
 38886 ;;		None
 38887 ;; Return value:  Size  Location     Type
 38888 ;;                  1  [STACK] void 
 38889 ;; Registers used:
 38890 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38891 ;; Tracked objects:
 38892 ;;		On entry : 3F/0
 38893 ;;		On exit  : 3F/0
 38894 ;;		Unchanged: 0/0
 38895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38900 ;;Total ram usage:        0 bytes
 38901 ;; Hardware stack levels used:    1
 38902 ;; This function calls:
 38903 ;;		Nothing
 38904 ;; This function is called by:
 38905 ;;		_UART1_Initialize
 38906 ;;		_UART1_rx_vect_isr
 38907 ;; This function uses a reentrant model
 38908 ;;
 38909                           
 38910                           	psect	text186
 38911  01D0A0                     __ptext186:
 38912                           	opt callstack 0
 38913  01D0A0                     _UART1_Receive_ISR:
 38914                           	opt callstack 3
 38915                           
 38916                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 38917                           
 38918                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38919                           ;incstack = 0
 38920  01D0A0  0EDC               	movlw	low _uart1RxBuffer
 38921  01D0A2  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 38922  01D0A4  6ED9               	movwf	fsr2l,c
 38923  01D0A6  6ADA               	clrf	fsr2h,c
 38924  01D0A8  0E01               	movlw	high _uart1RxBuffer
 38925  01D0AA  22DA               	addwfc	fsr2h,f,c
 38926  01D0AC  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 38927  01D0B2  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 38928                           
 38929                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 38930  01D0B4  0E07               	movlw	7
 38931  01D0B6  6447               	cpfsgt	_uart1RxHead^0,c
 38932  01D0B8  D001               	goto	l11721
 38933                           
 38934                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 38935  01D0BA  6A47               	clrf	_uart1RxHead^0,c	;volatile
 38936  01D0BC                     l11721:
 38937                           
 38938                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 38939  01D0BC  0100               	movlb	0	; () banked
 38940  01D0BE  2BA9               	incf	_uart1RxCount& (0+255),f,b	;volatile
 38941                           
 38942                           ; BSR set to: 0
 38943                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 38944  01D0C0  0012               	return		;funcret
 38945  01D0C2                     __end_of_UART1_Receive_ISR:
 38946                           	opt callstack 0
 38947                           
 38948 ;; *************** function _UART2_tx_vect_isr *****************
 38949 ;; Defined at:
 38950 ;;		line 195 in file "mcc_generated_files/uart2.c"
 38951 ;; Parameters:    Size  Location     Type
 38952 ;;		None
 38953 ;; Auto vars:     Size  Location     Type
 38954 ;;		None
 38955 ;; Return value:  Size  Location     Type
 38956 ;;                  1    wreg      void 
 38957 ;; Registers used:
 38958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 38959 ;; Tracked objects:
 38960 ;;		On entry : 0/0
 38961 ;;		On exit  : 0/0
 38962 ;;		Unchanged: 0/0
 38963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38968 ;;Total ram usage:        0 bytes
 38969 ;; Hardware stack levels used:    1
 38970 ;; Hardware stack levels required when called:    1
 38971 ;; This function calls:
 38972 ;;		Absolute function
 38973 ;;		_UART2_Transmit_ISR
 38974 ;; This function is called by:
 38975 ;;		Interrupt level 2
 38976 ;; This function uses a non-reentrant model
 38977 ;;
 38978                           
 38979                           	psect	text187
 38980  01CF34                     __ptext187:
 38981                           	opt callstack 0
 38982  01CF34                     _UART2_tx_vect_isr:
 38983                           	opt callstack 3
 38984                           
 38985                           ; BSR set to: 0
 38986                           ;incstack = 0
 38987  01CF34  EE14  F208         	lfsr	1,___inthi_sp
 38988                           
 38989                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 38990  01CF38  0100               	movlb	0	; () banked
 38991  01CF3A  518A               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 38992  01CF3C  118B               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 38993  01CF3E  118C               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 38994  01CF40  B4D8               	btfsc	status,2,c
 38995  01CF42  0011               	retfie		f
 38996                           
 38997                           ; BSR set to: 0
 38998                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 38999  01CF44  D801               	call	i2u1133_48
 39000  01CF46  0011               	retfie		f
 39001  01CF48                     i2u1133_48:
 39002  01CF48  0005               	push	
 39003  01CF4A  6EFA               	movwf	pclath,c
 39004  01CF4C  518A               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 39005  01CF4E  6EFD               	movwf	tosl,c
 39006  01CF50  518B               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 39007  01CF52  6EFE               	movwf	tosh,c
 39008  01CF54  518C               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 39009  01CF56  6EFF               	movwf	tosu,c
 39010  01CF58  50FA               	movf	pclath,w,c
 39011  01CF5A  0012               	return		;indir
 39012  01CF5C                     __end_of_UART2_tx_vect_isr:
 39013                           	opt callstack 0
 39014                           
 39015 ;; *************** function _UART2_Transmit_ISR *****************
 39016 ;; Defined at:
 39017 ;;		line 213 in file "mcc_generated_files/uart2.c"
 39018 ;; Parameters:    Size  Location     Type
 39019 ;;		None
 39020 ;; Auto vars:     Size  Location     Type
 39021 ;;		None
 39022 ;; Return value:  Size  Location     Type
 39023 ;;                  1  [STACK] void 
 39024 ;; Registers used:
 39025 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39026 ;; Tracked objects:
 39027 ;;		On entry : 3F/0
 39028 ;;		On exit  : 3B/39
 39029 ;;		Unchanged: 0/0
 39030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39035 ;;Total ram usage:        0 bytes
 39036 ;; Hardware stack levels used:    1
 39037 ;; This function calls:
 39038 ;;		Nothing
 39039 ;; This function is called by:
 39040 ;;		_UART2_Initialize
 39041 ;;		_UART2_tx_vect_isr
 39042 ;; This function uses a reentrant model
 39043 ;;
 39044                           
 39045                           	psect	text188
 39046  01CCD4                     __ptext188:
 39047                           	opt callstack 0
 39048  01CCD4                     _UART2_Transmit_ISR:
 39049                           	opt callstack 3
 39050                           
 39051                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 39052                           
 39053                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39054                           ;incstack = 0
 39055  01CCD4  0E40               	movlw	64
 39056  01CCD6  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 39057  01CCD8  D010               	goto	l675
 39058                           
 39059                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 39060  01CCDA  0E54               	movlw	low _uart2TxBuffer
 39061  01CCDC  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 39062  01CCDE  6ED9               	movwf	fsr2l,c
 39063  01CCE0  6ADA               	clrf	fsr2h,c
 39064  01CCE2  0E03               	movlw	high _uart2TxBuffer
 39065  01CCE4  22DA               	addwfc	fsr2h,f,c
 39066  01CCE6  50DF               	movf	indf2,w,c
 39067  01CCE8  013D               	movlb	61	; () banked
 39068  01CCEA  6FD2               	movwf	210,b	;volatile
 39069                           
 39070                           ; BSR set to: 61
 39071  01CCEC  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 39072                           
 39073                           ; BSR set to: 61
 39074                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 39075  01CCEE  0E3F               	movlw	63
 39076  01CCF0  6446               	cpfsgt	_uart2TxTail^0,c
 39077  01CCF2  D001               	goto	l11733
 39078                           
 39079                           ; BSR set to: 61
 39080                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 39081  01CCF4  6A46               	clrf	_uart2TxTail^0,c	;volatile
 39082  01CCF6                     l11733:
 39083                           
 39084                           ; BSR set to: 61
 39085                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 39086  01CCF6  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 39087                           
 39088                           ;mcc_generated_files/uart2.c: 224:     }
 39089  01CCF8  0012               	return	
 39090  01CCFA                     l675:
 39091                           
 39092                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 39093  01CCFA  0139               	movlb	57	; () banked
 39094  01CCFC  9796               	bcf	150,3,b	;volatile
 39095                           
 39096                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 39097  01CCFE  0012               	return		;funcret
 39098  01CD00                     __end_of_UART2_Transmit_ISR:
 39099                           	opt callstack 0
 39100                           
 39101 ;; *************** function _UART2_rx_vect_isr *****************
 39102 ;; Defined at:
 39103 ;;		line 203 in file "mcc_generated_files/uart2.c"
 39104 ;; Parameters:    Size  Location     Type
 39105 ;;		None
 39106 ;; Auto vars:     Size  Location     Type
 39107 ;;		None
 39108 ;; Return value:  Size  Location     Type
 39109 ;;                  1    wreg      void 
 39110 ;; Registers used:
 39111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 39112 ;; Tracked objects:
 39113 ;;		On entry : 0/0
 39114 ;;		On exit  : 0/0
 39115 ;;		Unchanged: 0/0
 39116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39121 ;;Total ram usage:        0 bytes
 39122 ;; Hardware stack levels used:    1
 39123 ;; Hardware stack levels required when called:    1
 39124 ;; This function calls:
 39125 ;;		Absolute function
 39126 ;;		_UART2_Receive_ISR
 39127 ;; This function is called by:
 39128 ;;		Interrupt level 2
 39129 ;; This function uses a non-reentrant model
 39130 ;;
 39131                           
 39132                           	psect	text189
 39133  01CF5C                     __ptext189:
 39134                           	opt callstack 0
 39135  01CF5C                     _UART2_rx_vect_isr:
 39136                           	opt callstack 3
 39137                           
 39138                           ;incstack = 0
 39139  01CF5C  EE14  F208         	lfsr	1,___inthi_sp
 39140                           
 39141                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 39142  01CF60  0100               	movlb	0	; () banked
 39143  01CF62  518D               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 39144  01CF64  118E               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 39145  01CF66  118F               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 39146  01CF68  B4D8               	btfsc	status,2,c
 39147  01CF6A  0011               	retfie		f
 39148                           
 39149                           ; BSR set to: 0
 39150                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 39151  01CF6C  D801               	call	i2u1135_48
 39152  01CF6E  0011               	retfie		f
 39153  01CF70                     i2u1135_48:
 39154  01CF70  0005               	push	
 39155  01CF72  6EFA               	movwf	pclath,c
 39156  01CF74  518D               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 39157  01CF76  6EFD               	movwf	tosl,c
 39158  01CF78  518E               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 39159  01CF7A  6EFE               	movwf	tosh,c
 39160  01CF7C  518F               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 39161  01CF7E  6EFF               	movwf	tosu,c
 39162  01CF80  50FA               	movf	pclath,w,c
 39163  01CF82  0012               	return		;indir
 39164  01CF84                     __end_of_UART2_rx_vect_isr:
 39165                           	opt callstack 0
 39166                           
 39167 ;; *************** function _UART2_Receive_ISR *****************
 39168 ;; Defined at:
 39169 ;;		line 233 in file "mcc_generated_files/uart2.c"
 39170 ;; Parameters:    Size  Location     Type
 39171 ;;		None
 39172 ;; Auto vars:     Size  Location     Type
 39173 ;;		None
 39174 ;; Return value:  Size  Location     Type
 39175 ;;                  1  [STACK] void 
 39176 ;; Registers used:
 39177 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39178 ;; Tracked objects:
 39179 ;;		On entry : 3F/0
 39180 ;;		On exit  : 3F/0
 39181 ;;		Unchanged: 0/0
 39182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39187 ;;Total ram usage:        0 bytes
 39188 ;; Hardware stack levels used:    1
 39189 ;; This function calls:
 39190 ;;		Nothing
 39191 ;; This function is called by:
 39192 ;;		_UART2_Initialize
 39193 ;;		_UART2_rx_vect_isr
 39194 ;; This function uses a reentrant model
 39195 ;;
 39196                           
 39197                           	psect	text190
 39198  01D0E2                     __ptext190:
 39199                           	opt callstack 0
 39200  01D0E2                     _UART2_Receive_ISR:
 39201                           	opt callstack 3
 39202                           
 39203                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 39204                           
 39205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39206                           ;incstack = 0
 39207  01D0E2  0E00               	movlw	low _uart2RxBuffer
 39208  01D0E4  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 39209  01D0E6  6ED9               	movwf	fsr2l,c
 39210  01D0E8  6ADA               	clrf	fsr2h,c
 39211  01D0EA  0E05               	movlw	high _uart2RxBuffer
 39212  01D0EC  22DA               	addwfc	fsr2h,f,c
 39213  01D0EE  006F F743 FFDF     	movff	15824,indf2	;volatile
 39214  01D0F4  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 39215                           
 39216                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 39217  01D0F6  2844               	incf	_uart2RxHead^0,w,c
 39218  01D0F8  B4D8               	btfsc	status,2,c
 39219                           
 39220                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 39221  01D0FA  6A44               	clrf	_uart2RxHead^0,c	;volatile
 39222                           
 39223                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 39224  01D0FC  0100               	movlb	0	; () banked
 39225  01D0FE  2BA6               	incf	_uart2RxCount& (0+255),f,b	;volatile
 39226                           
 39227                           ; BSR set to: 0
 39228                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 39229  01D100  0012               	return		;funcret
 39230  01D102                     __end_of_UART2_Receive_ISR:
 39231                           	opt callstack 0
 39232                           
 39233 ;; *************** function _TMR6_ISR *****************
 39234 ;; Defined at:
 39235 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 39236 ;; Parameters:    Size  Location     Type
 39237 ;;		None
 39238 ;; Auto vars:     Size  Location     Type
 39239 ;;		None
 39240 ;; Return value:  Size  Location     Type
 39241 ;;                  1    wreg      void 
 39242 ;; Registers used:
 39243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 39244 ;; Tracked objects:
 39245 ;;		On entry : 0/0
 39246 ;;		On exit  : 0/0
 39247 ;;		Unchanged: 0/0
 39248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39251 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39253 ;;Total ram usage:        1 bytes
 39254 ;; Hardware stack levels used:    1
 39255 ;; Hardware stack levels required when called:    2
 39256 ;; This function calls:
 39257 ;;		_TMR6_CallBack
 39258 ;; This function is called by:
 39259 ;;		Interrupt level 2
 39260 ;; This function uses a non-reentrant model
 39261 ;;
 39262                           
 39263                           	psect	text191
 39264  01D1B4                     __ptext191:
 39265                           	opt callstack 0
 39266  01D1B4                     _TMR6_ISR:
 39267                           	opt callstack 2
 39268                           
 39269                           ; BSR set to: 0
 39270                           ;incstack = 0
 39271  01D1B4  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 39272  01D1BA  EE14  F208         	lfsr	1,___inthi_sp
 39273                           
 39274                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 39275  01D1BE  0139               	movlb	57	; () banked
 39276  01D1C0  91A9               	bcf	169,0,b	;volatile
 39277                           
 39278                           ; BSR set to: 57
 39279                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 39280  01D1C2  EC1C  F0E8         	call	_TMR6_CallBack	;wreg free
 39281  01D1C6  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 39282  01D1CC  0011               	retfie		f
 39283  01D1CE                     __end_of_TMR6_ISR:
 39284                           	opt callstack 0
 39285                           
 39286 ;; *************** function _TMR6_CallBack *****************
 39287 ;; Defined at:
 39288 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 39289 ;; Parameters:    Size  Location     Type
 39290 ;;		None
 39291 ;; Auto vars:     Size  Location     Type
 39292 ;;		None
 39293 ;; Return value:  Size  Location     Type
 39294 ;;                  1  [STACK] void 
 39295 ;; Registers used:
 39296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 39297 ;; Tracked objects:
 39298 ;;		On entry : 3F/39
 39299 ;;		On exit  : 0/0
 39300 ;;		Unchanged: 0/0
 39301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39306 ;;Total ram usage:        0 bytes
 39307 ;; Hardware stack levels used:    1
 39308 ;; Hardware stack levels required when called:    1
 39309 ;; This function calls:
 39310 ;;		Absolute function
 39311 ;;		_TMR6_DefaultInterruptHandler
 39312 ;; This function is called by:
 39313 ;;		_TMR6_ISR
 39314 ;; This function uses a reentrant model
 39315 ;;
 39316                           
 39317                           	psect	text192
 39318  01D038                     __ptext192:
 39319                           	opt callstack 0
 39320  01D038                     _TMR6_CallBack:
 39321                           	opt callstack 2
 39322                           
 39323                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 39324                           
 39325                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39326                           ;incstack = 0
 39327  01D038  0100               	movlb	0	; () banked
 39328  01D03A  517E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 39329  01D03C  117F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 39330  01D03E  1180               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 39331  01D040  B4D8               	btfsc	status,2,c
 39332  01D042  0012               	return	
 39333                           
 39334                           ; BSR set to: 0
 39335                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 39336  01D044  D801               	call	u1082_48
 39337  01D046  0012               	return	
 39338  01D048                     u1082_48:
 39339  01D048  0005               	push	
 39340  01D04A  6EFA               	movwf	pclath,c
 39341  01D04C  517E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 39342  01D04E  6EFD               	movwf	tosl,c
 39343  01D050  517F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 39344  01D052  6EFE               	movwf	tosh,c
 39345  01D054  5180               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 39346  01D056  6EFF               	movwf	tosu,c
 39347  01D058  50FA               	movf	pclath,w,c
 39348  01D05A  0012               	return		;indir
 39349  01D05C                     __end_of_TMR6_CallBack:
 39350                           	opt callstack 0
 39351                           
 39352 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 39353 ;; Defined at:
 39354 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 39355 ;; Parameters:    Size  Location     Type
 39356 ;;		None
 39357 ;; Auto vars:     Size  Location     Type
 39358 ;;  i               1  [STACK] unsigned char 
 39359 ;; Return value:  Size  Location     Type
 39360 ;;                  1  [STACK] void 
 39361 ;; Registers used:
 39362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 39363 ;; Tracked objects:
 39364 ;;		On entry : 3F/0
 39365 ;;		On exit  : 0/0
 39366 ;;		Unchanged: 0/0
 39367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39372 ;;Total ram usage:        0 bytes
 39373 ;; Hardware stack levels used:    1
 39374 ;; This function calls:
 39375 ;;		Nothing
 39376 ;; This function is called by:
 39377 ;;		_TMR6_Initialize
 39378 ;;		_TMR6_CallBack
 39379 ;; This function uses a reentrant model
 39380 ;;
 39381                           
 39382                           	psect	text193
 39383  01C52A                     __ptext193:
 39384                           	opt callstack 0
 39385  01C52A                     _TMR6_DefaultInterruptHandler:
 39386                           	opt callstack 0
 39387                           
 39388                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39389  01C52A  52E6               	movf	postinc1,f,c
 39390                           
 39391                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 39392                           ;stkvar	_i @ sp[(-1)+0]
 39393                           
 39394                           ;incstack = 0
 39395  01C52C  0EFF               	movlw	-1
 39396  01C52E  6AE3               	clrf	plusw1,c
 39397  01C530                     l11207:
 39398                           
 39399                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 39400                           ;stkvar	_i @ sp[(-1)+0]
 39401  01C530  0EFF               	movlw	-1
 39402  01C532  50E3               	movf	plusw1,w,c
 39403  01C534  0D02               	mullw	2
 39404  01C536  0E29               	movlw	low _tickCount
 39405  01C538  24F3               	addwf	243,w,c
 39406  01C53A  6ED9               	movwf	fsr2l,c
 39407  01C53C  0E02               	movlw	high _tickCount
 39408  01C53E  20F4               	addwfc	prodh,w,c
 39409  01C540  6EDA               	movwf	fsr2h,c
 39410  01C542  50DE               	movf	postinc2,w,c
 39411  01C544  10DE               	iorwf	postinc2,w,c
 39412  01C546  B4D8               	btfsc	status,2,c
 39413  01C548  D00C               	goto	l11211
 39414                           
 39415                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 39416                           ;stkvar	_i @ sp[(-1)+0]
 39417  01C54A  0EFF               	movlw	-1
 39418  01C54C  50E3               	movf	plusw1,w,c
 39419  01C54E  0D02               	mullw	2
 39420  01C550  0E29               	movlw	low _tickCount
 39421  01C552  24F3               	addwf	243,w,c
 39422  01C554  6ED9               	movwf	fsr2l,c
 39423  01C556  0E02               	movlw	high _tickCount
 39424  01C558  20F4               	addwfc	prodh,w,c
 39425  01C55A  6EDA               	movwf	fsr2h,c
 39426  01C55C  06DE               	decf	postinc2,f,c
 39427  01C55E  0E00               	movlw	0
 39428  01C560  5ADD               	subwfb	postdec2,f,c
 39429  01C562                     l11211:
 39430                           
 39431                           ;mcc_generated_files/tmr6.c: 207:  }
 39432                           ;stkvar	_i @ sp[(-1)+0]
 39433  01C562  0EFF               	movlw	-1
 39434  01C564  2AE3               	incf	plusw1,f,c
 39435                           
 39436                           ;stkvar	_i @ sp[(-1)+0]
 39437  01C566  0EFF               	movlw	-1
 39438  01C568  006F FF8C  F001    	movff	plusw1,btemp
 39439  01C56E  0E0C               	movlw	12
 39440  01C570  6401               	cpfsgt	btemp^0,c
 39441  01C572  D7DE               	goto	l11207
 39442                           
 39443                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 39444  01C574  52E5               	movf	postdec1,f,c
 39445  01C576  0012               	return		;funcret
 39446  01C578                     __end_of_TMR6_DefaultInterruptHandler:
 39447                           	opt callstack 0
 39448                           
 39449 ;; *************** function _DMA1_DMASCNT_ISR *****************
 39450 ;; Defined at:
 39451 ;;		line 126 in file "mcc_generated_files/dma1.c"
 39452 ;; Parameters:    Size  Location     Type
 39453 ;;		None
 39454 ;; Auto vars:     Size  Location     Type
 39455 ;;		None
 39456 ;; Return value:  Size  Location     Type
 39457 ;;                  1    wreg      void 
 39458 ;; Registers used:
 39459 ;;		None
 39460 ;; Tracked objects:
 39461 ;;		On entry : 0/0
 39462 ;;		On exit  : 3F/1
 39463 ;;		Unchanged: 0/0
 39464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39469 ;;Total ram usage:        0 bytes
 39470 ;; Hardware stack levels used:    1
 39471 ;; This function calls:
 39472 ;;		Nothing
 39473 ;; This function is called by:
 39474 ;;		Interrupt level 2
 39475 ;; This function uses a non-reentrant model
 39476 ;;
 39477                           
 39478                           	psect	text194
 39479  01D318                     __ptext194:
 39480                           	opt callstack 0
 39481  01D318                     _DMA1_DMASCNT_ISR:
 39482                           	opt callstack 4
 39483                           
 39484                           ;incstack = 0
 39485  01D318  EE14  F208         	lfsr	1,___inthi_sp
 39486                           
 39487                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 39488  01D31C  0139               	movlb	57	; () banked
 39489  01D31E  91A2               	bcf	162,0,b	;volatile
 39490                           
 39491                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 39492  01D320  0101               	movlb	1	; () banked
 39493  01D322  97D0               	bcf	_spi_link& (0+255),3,b	;volatile
 39494                           
 39495                           ; BSR set to: 1
 39496  01D324  0011               	retfie		f
 39497  01D326                     __end_of_DMA1_DMASCNT_ISR:
 39498                           	opt callstack 0
 39499                           
 39500 ;; *************** function _DMA1_DMADCNT_ISR *****************
 39501 ;; Defined at:
 39502 ;;		line 133 in file "mcc_generated_files/dma1.c"
 39503 ;; Parameters:    Size  Location     Type
 39504 ;;		None
 39505 ;; Auto vars:     Size  Location     Type
 39506 ;;		None
 39507 ;; Return value:  Size  Location     Type
 39508 ;;                  1    wreg      void 
 39509 ;; Registers used:
 39510 ;;		None
 39511 ;; Tracked objects:
 39512 ;;		On entry : 0/0
 39513 ;;		On exit  : 3F/39
 39514 ;;		Unchanged: 0/0
 39515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39520 ;;Total ram usage:        0 bytes
 39521 ;; Hardware stack levels used:    1
 39522 ;; This function calls:
 39523 ;;		Nothing
 39524 ;; This function is called by:
 39525 ;;		Interrupt level 2
 39526 ;; This function uses a non-reentrant model
 39527 ;;
 39528                           
 39529                           	psect	text195
 39530  01D33C                     __ptext195:
 39531                           	opt callstack 0
 39532  01D33C                     _DMA1_DMADCNT_ISR:
 39533                           	opt callstack 4
 39534                           
 39535                           ; BSR set to: 1
 39536                           ;incstack = 0
 39537  01D33C  EE14  F208         	lfsr	1,___inthi_sp
 39538                           
 39539                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 39540  01D340  0139               	movlb	57	; () banked
 39541  01D342  93A2               	bcf	162,1,b	;volatile
 39542                           
 39543                           ; BSR set to: 57
 39544  01D344  0011               	retfie		f
 39545  01D346                     __end_of_DMA1_DMADCNT_ISR:
 39546                           	opt callstack 0
 39547                           
 39548 ;; *************** function _DMA1_DMAA_ISR *****************
 39549 ;; Defined at:
 39550 ;;		line 143 in file "mcc_generated_files/dma1.c"
 39551 ;; Parameters:    Size  Location     Type
 39552 ;;		None
 39553 ;; Auto vars:     Size  Location     Type
 39554 ;;		None
 39555 ;; Return value:  Size  Location     Type
 39556 ;;                  1    wreg      void 
 39557 ;; Registers used:
 39558 ;;		None
 39559 ;; Tracked objects:
 39560 ;;		On entry : 0/0
 39561 ;;		On exit  : 3F/39
 39562 ;;		Unchanged: 0/0
 39563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39568 ;;Total ram usage:        0 bytes
 39569 ;; Hardware stack levels used:    1
 39570 ;; This function calls:
 39571 ;;		Nothing
 39572 ;; This function is called by:
 39573 ;;		Interrupt level 2
 39574 ;; This function uses a non-reentrant model
 39575 ;;
 39576                           
 39577                           	psect	text196
 39578  01D348                     __ptext196:
 39579                           	opt callstack 0
 39580  01D348                     _DMA1_DMAA_ISR:
 39581                           	opt callstack 4
 39582                           
 39583                           ; BSR set to: 57
 39584                           ;incstack = 0
 39585  01D348  EE14  F208         	lfsr	1,___inthi_sp
 39586                           
 39587                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 39588  01D34C  0139               	movlb	57	; () banked
 39589  01D34E  97A2               	bcf	162,3,b	;volatile
 39590                           
 39591                           ; BSR set to: 57
 39592  01D350  0011               	retfie		f
 39593  01D352                     __end_of_DMA1_DMAA_ISR:
 39594                           	opt callstack 0
 39595                           
 39596 ;; *************** function _DMA1_DMAOR_ISR *****************
 39597 ;; Defined at:
 39598 ;;		line 154 in file "mcc_generated_files/dma1.c"
 39599 ;; Parameters:    Size  Location     Type
 39600 ;;		None
 39601 ;; Auto vars:     Size  Location     Type
 39602 ;;		None
 39603 ;; Return value:  Size  Location     Type
 39604 ;;                  1    wreg      void 
 39605 ;; Registers used:
 39606 ;;		None
 39607 ;; Tracked objects:
 39608 ;;		On entry : 0/0
 39609 ;;		On exit  : 3F/39
 39610 ;;		Unchanged: 0/0
 39611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39616 ;;Total ram usage:        0 bytes
 39617 ;; Hardware stack levels used:    1
 39618 ;; This function calls:
 39619 ;;		Nothing
 39620 ;; This function is called by:
 39621 ;;		Interrupt level 2
 39622 ;; This function uses a non-reentrant model
 39623 ;;
 39624                           
 39625                           	psect	text197
 39626  01D354                     __ptext197:
 39627                           	opt callstack 0
 39628  01D354                     _DMA1_DMAOR_ISR:
 39629                           	opt callstack 4
 39630                           
 39631                           ; BSR set to: 57
 39632                           ;incstack = 0
 39633  01D354  EE14  F208         	lfsr	1,___inthi_sp
 39634                           
 39635                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 39636  01D358  0139               	movlb	57	; () banked
 39637  01D35A  95A2               	bcf	162,2,b	;volatile
 39638                           
 39639                           ; BSR set to: 57
 39640  01D35C  0011               	retfie		f
 39641  01D35E                     __end_of_DMA1_DMAOR_ISR:
 39642                           	opt callstack 0
 39643                           
 39644                           ;
 39645                           ; Interrupt Vector Table @ 0x8
 39646                           ;
 39647                           
 39648                           	psect	ivt0x8
 39649  000008                     __pivt0x8:
 39650                           	opt callstack 0
 39651  000008                     ivt0x8_base:
 39652                           	opt callstack 0
 39653                           
 39654                           ; Vector 0 : SWINT
 39655  000008  74E9               	dw	_Default_ISR shr (0+2)
 39656                           
 39657                           ; Vector 1 : HLVD
 39658  00000A  74E9               	dw	_Default_ISR shr (0+2)
 39659                           
 39660                           ; Vector 2 : OSF
 39661  00000C  74E9               	dw	_Default_ISR shr (0+2)
 39662                           
 39663                           ; Vector 3 : CSW
 39664  00000E  74E9               	dw	_Default_ISR shr (0+2)
 39665                           
 39666                           ; Vector 4 : NVM
 39667  000010  74E9               	dw	_Default_ISR shr (0+2)
 39668                           
 39669                           ; Vector 5 : SCAN
 39670  000012  74E9               	dw	_Default_ISR shr (0+2)
 39671                           
 39672                           ; Vector 6 : CRC
 39673  000014  74E9               	dw	_Default_ISR shr (0+2)
 39674                           
 39675                           ; Vector 7 : IOC
 39676  000016  74E9               	dw	_Default_ISR shr (0+2)
 39677                           
 39678                           ; Vector 8 : INT0
 39679  000018  74C2               	dw	_INT0_ISR shr (0+2)
 39680                           
 39681                           ; Vector 9 : ZCD
 39682  00001A  74E9               	dw	_Default_ISR shr (0+2)
 39683                           
 39684                           ; Vector 10 : AD
 39685  00001C  732A               	dw	_ADCC_ISR shr (0+2)
 39686                           
 39687                           ; Vector 11 : ADT
 39688  00001E  7001               	dw	_ADCC_ThresholdISR shr (0+2)
 39689                           
 39690                           ; Vector 12 : CMP1
 39691  000020  74E9               	dw	_Default_ISR shr (0+2)
 39692                           
 39693                           ; Vector 13 : SMT1
 39694  000022  74E9               	dw	_Default_ISR shr (0+2)
 39695                           
 39696                           ; Vector 14 : SMT1PRA
 39697  000024  74E9               	dw	_Default_ISR shr (0+2)
 39698                           
 39699                           ; Vector 15 : SMT1PRW
 39700  000026  74E9               	dw	_Default_ISR shr (0+2)
 39701                           
 39702                           ; Vector 16 : DMA1SCNT
 39703  000028  74C6               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 39704                           
 39705                           ; Vector 17 : DMA1DCNT
 39706  00002A  74CF               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 39707                           
 39708                           ; Vector 18 : DMA1OR
 39709  00002C  74D5               	dw	_DMA1_DMAOR_ISR shr (0+2)
 39710                           
 39711                           ; Vector 19 : DMA1A
 39712  00002E  74D2               	dw	_DMA1_DMAA_ISR shr (0+2)
 39713                           
 39714                           ; Vector 20 : SPI1RX
 39715  000030  74E9               	dw	_Default_ISR shr (0+2)
 39716                           
 39717                           ; Vector 21 : SPI1TX
 39718  000032  74E9               	dw	_Default_ISR shr (0+2)
 39719                           
 39720                           ; Vector 22 : SPI1
 39721  000034  74E9               	dw	_Default_ISR shr (0+2)
 39722                           
 39723                           ; Vector 23 : I2C1RX
 39724  000036  74E9               	dw	_Default_ISR shr (0+2)
 39725                           
 39726                           ; Vector 24 : I2C1TX
 39727  000038  74E9               	dw	_Default_ISR shr (0+2)
 39728                           
 39729                           ; Vector 25 : I2C1
 39730  00003A  74E9               	dw	_Default_ISR shr (0+2)
 39731                           
 39732                           ; Vector 26 : I2C1E
 39733  00003C  74E9               	dw	_Default_ISR shr (0+2)
 39734                           
 39735                           ; Vector 27 : U1RX
 39736  00003E  73C3               	dw	_UART1_rx_vect_isr shr (0+2)
 39737                           
 39738                           ; Vector 28 : U1TX
 39739  000040  74E9               	dw	_Default_ISR shr (0+2)
 39740                           
 39741                           ; Vector 29 : U1E
 39742  000042  74E9               	dw	_Default_ISR shr (0+2)
 39743                           
 39744                           ; Vector 30 : U1
 39745  000044  74E9               	dw	_Default_ISR shr (0+2)
 39746                           
 39747                           ; Vector 31 : TMR0
 39748  000046  74E9               	dw	_Default_ISR shr (0+2)
 39749                           
 39750                           ; Vector 32 : TMR1
 39751  000048  74E9               	dw	_Default_ISR shr (0+2)
 39752                           
 39753                           ; Vector 33 : TMR1G
 39754  00004A  74E9               	dw	_Default_ISR shr (0+2)
 39755                           
 39756                           ; Vector 34 : TMR2
 39757  00004C  74E9               	dw	_Default_ISR shr (0+2)
 39758                           
 39759                           ; Vector 35 : CCP1
 39760  00004E  74E9               	dw	_Default_ISR shr (0+2)
 39761                           
 39762                           ; Vector 36 : Undefined
 39763  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 39764                           
 39765                           ; Vector 37 : NCO1
 39766  000052  74E9               	dw	_Default_ISR shr (0+2)
 39767                           
 39768                           ; Vector 38 : CWG1
 39769  000054  74E9               	dw	_Default_ISR shr (0+2)
 39770                           
 39771                           ; Vector 39 : CLC1
 39772  000056  74E9               	dw	_Default_ISR shr (0+2)
 39773                           
 39774                           ; Vector 40 : INT1
 39775  000058  724D               	dw	_INT1_ISR shr (0+2)
 39776                           
 39777                           ; Vector 41 : CMP2
 39778  00005A  74E9               	dw	_Default_ISR shr (0+2)
 39779                           
 39780                           ; Vector 42 : DMA2SCNT
 39781  00005C  74E9               	dw	_Default_ISR shr (0+2)
 39782                           
 39783                           ; Vector 43 : DMA2DCNT
 39784  00005E  74E9               	dw	_Default_ISR shr (0+2)
 39785                           
 39786                           ; Vector 44 : DMA2OR
 39787  000060  74E9               	dw	_Default_ISR shr (0+2)
 39788                           
 39789                           ; Vector 45 : DMA2A
 39790  000062  74E9               	dw	_Default_ISR shr (0+2)
 39791                           
 39792                           ; Vector 46 : I2C2RX
 39793  000064  74E9               	dw	_Default_ISR shr (0+2)
 39794                           
 39795                           ; Vector 47 : I2C2TX
 39796  000066  74E9               	dw	_Default_ISR shr (0+2)
 39797                           
 39798                           ; Vector 48 : I2C2
 39799  000068  74E9               	dw	_Default_ISR shr (0+2)
 39800                           
 39801                           ; Vector 49 : I2C2E
 39802  00006A  74E9               	dw	_Default_ISR shr (0+2)
 39803                           
 39804                           ; Vector 50 : U2RX
 39805  00006C  73D7               	dw	_UART2_rx_vect_isr shr (0+2)
 39806                           
 39807                           ; Vector 51 : U2TX
 39808  00006E  73CD               	dw	_UART2_tx_vect_isr shr (0+2)
 39809                           
 39810                           ; Vector 52 : U2E
 39811  000070  74E9               	dw	_Default_ISR shr (0+2)
 39812                           
 39813                           ; Vector 53 : U2
 39814  000072  74E9               	dw	_Default_ISR shr (0+2)
 39815                           
 39816                           ; Vector 54 : TMR3
 39817  000074  6712               	dw	_TMR3_ISR shr (0+2)
 39818                           
 39819                           ; Vector 55 : TMR3G
 39820  000076  74E9               	dw	_Default_ISR shr (0+2)
 39821                           
 39822                           ; Vector 56 : TMR4
 39823  000078  74E9               	dw	_Default_ISR shr (0+2)
 39824                           
 39825                           ; Vector 57 : CCP2
 39826  00007A  74E9               	dw	_Default_ISR shr (0+2)
 39827                           
 39828                           ; Vector 58 : Undefined
 39829  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 39830                           
 39831                           ; Vector 59 : CWG2
 39832  00007E  74E9               	dw	_Default_ISR shr (0+2)
 39833                           
 39834                           ; Vector 60 : CLC2
 39835  000080  74E9               	dw	_Default_ISR shr (0+2)
 39836                           
 39837                           ; Vector 61 : INT2
 39838  000082  74E9               	dw	_Default_ISR shr (0+2)
 39839                           
 39840                           ; Vector 62 : Undefined
 39841  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 39842                           
 39843                           ; Vector 63 : Undefined
 39844  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 39845                           
 39846                           ; Vector 64 : Undefined
 39847  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 39848                           
 39849                           ; Vector 65 : Undefined
 39850  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 39851                           
 39852                           ; Vector 66 : Undefined
 39853  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 39854                           
 39855                           ; Vector 67 : Undefined
 39856  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 39857                           
 39858                           ; Vector 68 : Undefined
 39859  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 39860                           
 39861                           ; Vector 69 : Undefined
 39862  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 39863                           
 39864                           ; Vector 70 : TMR5
 39865  000094  6B8B               	dw	_TMR5_ISR shr (0+2)
 39866                           
 39867                           ; Vector 71 : TMR5G
 39868  000096  74E9               	dw	_Default_ISR shr (0+2)
 39869                           
 39870                           ; Vector 72 : TMR6
 39871  000098  746D               	dw	_TMR6_ISR shr (0+2)
 39872                           
 39873                           ; Vector 73 : CCP3
 39874  00009A  74E9               	dw	_Default_ISR shr (0+2)
 39875                           
 39876                           ; Vector 74 : CWG3
 39877  00009C  74E9               	dw	_Default_ISR shr (0+2)
 39878                           
 39879                           ; Vector 75 : CLC3
 39880  00009E  74E9               	dw	_Default_ISR shr (0+2)
 39881                           
 39882                           ; Vector 76 : Undefined
 39883  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 39884                           
 39885                           ; Vector 77 : Undefined
 39886  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 39887                           
 39888                           ; Vector 78 : Undefined
 39889  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 39890                           
 39891                           ; Vector 79 : Undefined
 39892  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 39893                           
 39894                           ; Vector 80 : CCP4
 39895  0000A8  74E9               	dw	_Default_ISR shr (0+2)
 39896                           
 39897                           ; Vector 81 : CLC4
 39898  0000AA  74E9               	dw	_Default_ISR shr (0+2)
 39899  0000AC                     ivt0x8_undefint:
 39900                           	opt callstack 0
 39901  0000AC  00FF               	reset	
 39902                           
 39903                           	psect	text198
 39904  000000                     __ptext198:
 39905                           	opt callstack 0
 39906                           
 39907                           	psect	rparam
 39908  0000                     
 39909                           	psect	temp
 39910  000001                     btemp:
 39911                           	opt callstack 0
 39912  000001                     	ds	32
 39913  0000                     wtemp0	set	btemp
 39914  0000                     wtemp1	set	btemp+2
 39915  0000                     wtemp2	set	btemp+4
 39916  0000                     wtemp3	set	btemp+6
 39917  0000                     wtemp4	set	btemp+8
 39918  0000                     wtemp5	set	btemp+10
 39919  0000                     wtemp8	set	btemp+1
 39920  0000                     ttemp0	set	btemp
 39921  0000                     ttemp1	set	btemp+3
 39922  0000                     ttemp2	set	btemp+6
 39923  0000                     ttemp3	set	btemp+9
 39924  0000                     ttemp5	set	btemp+1
 39925  0000                     ttemp6	set	btemp+4
 39926  0000                     ttemp7	set	btemp+8
 39927  0000                     ltemp0	set	btemp
 39928  0000                     ltemp1	set	btemp+4
 39929  0000                     ltemp2	set	btemp+8
 39930  0000                     lltemp0	set	btemp
 39931  0000                     lltemp1	set	btemp+8
 39932  0000                     lltemp2	set	btemp+16
 39933  0000                     lltemp3	set	btemp+24
 39934                           tosu	equ	0x3FFF
 39935                           tosh	equ	0x3FFE
 39936                           tosl	equ	0x3FFD
 39937                           stkptr	equ	0x3FFC
 39938                           pclatu	equ	0x3FFB
 39939                           pclath	equ	0x3FFA
 39940                           pcl	equ	0x3FF9
 39941                           tblptru	equ	0x3FF8
 39942                           tblptrh	equ	0x3FF7
 39943                           tblptrl	equ	0x3FF6
 39944                           tablat	equ	0x3FF5
 39945                           prodh	equ	0x3FF4
 39946                           prodl	equ	0x3FF3
 39947                           indf0	equ	0x3FEF
 39948                           postinc0	equ	0x3FEE
 39949                           postdec0	equ	0x3FED
 39950                           preinc0	equ	0x3FEC
 39951                           plusw0	equ	0x3FEB
 39952                           fsr0h	equ	0x3FEA
 39953                           fsr0l	equ	0x3FE9
 39954                           wreg	equ	0x3FE8
 39955                           indf1	equ	0x3FE7
 39956                           postinc1	equ	0x3FE6
 39957                           postdec1	equ	0x3FE5
 39958                           preinc1	equ	0x3FE4
 39959                           plusw1	equ	0x3FE3
 39960                           fsr1h	equ	0x3FE2
 39961                           fsr1l	equ	0x3FE1
 39962                           bsr	equ	0x3FE0
 39963                           indf2	equ	0x3FDF
 39964                           postinc2	equ	0x3FDE
 39965                           postdec2	equ	0x3FDD
 39966                           preinc2	equ	0x3FDC
 39967                           plusw2	equ	0x3FDB
 39968                           fsr2h	equ	0x3FDA
 39969                           fsr2l	equ	0x3FD9
 39970                           status	equ	0x3FD8


Data Sizes:
    Strings     1328
    Constant    492
    Data        1076
    BSS         1365
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     160
    BANK1           256      0     250
    BANK2           256      0     212
    BANK3           256      0     215
    BANK4           256      0      67
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_118(CODE[1]), STR_80(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_101(CODE[3]), 
		 -> STR_96(CODE[3]), STR_92(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_101(CODE[3]), 
		 -> STR_96(CODE[3]), STR_92(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), 
		 -> STR_69(CODE[15]), STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), 
		 -> STR_65(CODE[19]), STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), 
		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), 
		 -> STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), 
		 -> STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), 
		 -> STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), 
		 -> STR_69(CODE[15]), STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), 
		 -> STR_65(CODE[19]), STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), 
		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), 
		 -> STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), 
		 -> STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), 
		 -> STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_63(CODE[9]), STR_62(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_63(CODE[9]), STR_62(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_87(CODE[4]), STR_86(CODE[4]), STR_83(CODE[4]), STR_82(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_87(CODE[4]), STR_86(CODE[4]), STR_83(CODE[4]), STR_82(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_61(CODE[3]), STR_60(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[20]), STR_49(CODE[20]), 
		 -> STR_48(CODE[21]), STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), 
		 -> STR_44(CODE[22]), STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), 
		 -> STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6804_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_63(CODE[9]), STR_62(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_63(CODE[9]), STR_62(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_63(CODE[9]), 
		 -> STR_62(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    S5057tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    r_cal_ptr	PTR unsigned char  size(1) Largest target is 57
		 -> R(BANK0[57]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 57
		 -> r_cal(BANK2[57]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_63(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_62(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  598318
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                    _update_cal_data
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0  125900
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (2) _write_cal_data                                       6     6      0     570
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_cal_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      D7      11       84.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D4       9       82.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      A0       5      100.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4AE      58        0.0%
DATA                 0      0     9BB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 10 02:03:41 2020

                     _SPI1_Exchange8bit D102                __end_of_set_display_info D17A  
                                     _C 07FF                                       _D 092A  
                                     _H 01C7                                       _P 01F6  
                                     _R 00AE                                       _S 0200  
                                     _T F9B3                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler CE42            __end_of_start_switch_handler D0E2  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                       _update_cal_data D1FE                                      _bp FABB  
                __end_of_FVR_Initialize D386                          _check_day_time 91C6  
                           __CFG_LVP$ON 000000                                     l171 D250  
                                   l809 D110                                     l675 CCFA  
                                   l942 C0BA                                     _GIE 01FE97  
                                   _abs C6E2                                     _pad A734  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize D1E6  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack D014  
                     _update_adc_result C972                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack CFA8  
                          __CFG_ZCD$OFF 000000                                    l1004 C8EE  
                                  l2041 AB74                                    l2203 3B8A  
                                  l2124 A2AC                                    l2133 8A40  
                                  l2054 935C                                    l1350 0288  
                                  l2207 3EC8                                    l1192 C92E  
                                  l1408 5DA6                                    l1344 005E  
                                  l2313 D278                                    l2058 9354  
                                  l1363 07A6                         _timer3ReloadVal 009A  
                                  l1700 CA02                                    l2324 9830  
                                  l3205 4D48                                    l1373 084A  
                                  l1365 07AA                                    l1622 B668  
                                  l1710 8C54                                    l2326 9836  
                                  l1383 0A4E                                    l1384 0C76  
                                  l1641 CA6E                                    l2249 79CE  
                                  l3314 8E52                                    l1626 B982  
                                  l2419 5E8E                                    l1717 A954  
                                  l1709 8AF8                                    l1389 123E  
                                  l3238 5432                                    l1494 C38E  
                                  l2455 24B8                                    l2623 3464  
                                  l3193 4EB8                                    l3345 C722  
                                  l3337 94F2                                    l2537 7ABC  
                                  l1913 B45A                                    l3274 46FC  
                                  l2484 18E8                                    l1757 D176  
                                  l3445 A4FA                                    l2573 66C0  
                                  l2558 6DE6                    _ADCC_StartConversion D27C  
                                  l2399 A790                                    l3376 817A  
                                  l3712 8820                                    l1857 58F2  
                                  l1938 BB32                                    l2915 B23A  
                                  l2499 1D98                                    l3740 BC3E  
                                  l2926 9C3E                                    l2919 9B6A  
                                  l3727 BCC2                                    l2953 9ADC  
                                  l1897 BE40                                    l1994 900E  
                                  l9011 5288                                    l9101 4046  
                                  l9005 526C                                    l9111 4098  
                                  l9103 4076                                    l9015 52AE  
                                  l9201 463C                                    l9025 52F8  
                                  l9051 53DE                                    l9045 53AE  
                                  l9029 52FE                                    l8413 B7E4  
                                  l9301 A6E6                                    l9215 46AA  
                                  l9207 4666                                    l9039 5372  
                                  l8415 B806                                    l9217 46C4  
                                  l9081 3F72                                    l8601 4D88  
                                  l8513 4A32                                    l8441 475C  
                                  l9057 5406                                    l9321 B204  
                                  l9163 44F0                                    l9083 3F78  
                                  l9075 3F32                                    l8611 4DB0  
                                  l8523 4AA4                                    l8451 47B2  
                                  l9059 5416                                    l9243 9DE4  
                                  l9173 4532                                    l9093 4000  
                                  l9085 3FA8                                    l8533 4AE0  
                                  l8453 47E2                                    l9333 9B28  
                                  l9237 9DCE                                    l9309 A71A  
                                  l9325 B238                                    l9317 B1C2  
                                  l9421 97A2                                    l9183 457C  
                                  l8615 4DB6                                    l8527 4AC4  
                                  l8471 488C                                    l8447 479C  
                                  l9351 9C3C                                    l9343 9C06  
                                  l9271 9EDE                                    l9263 9EAA  
                                  l9169 450C                                    l8641 4E58  
                                  l8561 4BC8                                    l8529 4AD6  
                                  l8537 4B10                                    l8465 484C  
                                  l9249 9E04                                    l8801 6D0A  
                                  l9409 96D0                                    l9441 A120  
                                  l9433 A074                                    l9187 4582  
                                  l9099 4040                                    l8643 4E68  
                                  l8627 4E14                                    l8555 4BAC  
                                  l8483 48F4                                    l8475 48A2  
                                  l8459 481A                                    l9339 9BB8  
                                  l9291 A666                                    l9283 A63C  
                                  l9197 45F6                                    l8637 4E40  
                                  l8557 4BBE                                    l8565 4BFA  
                                  l8477 48D2                                    l8725 C712  
                                  l8805 6D78                                    l9287 A64E  
                                  l9359 C5E0                                    l8743 9494  
                                  l8823 BC2E                                    l8649 4E98  
                                  l8577 4CD2                                    l9457 C47A  
                                  l9393 9A74                                    l9385 9A48  
                                  l9369 99C6                                    l8595 4D6A  
                                  l8587 4D2C                                    l8579 4CF8  
                                  l8931 4F9E                                    l8851 7D8C  
                                  l9395 9A8A                                    l9387 9A64  
                                  l8739 9490                                    l8597 4D7C  
                                  l8925 4F58                                    l8845 7D46  
                                  l8749 94EA                                    l8781 6B54  
                                  l8951 507C                                    l8919 4F18  
                                  l8863 7E5E                                    l8839 7CF2  
                                  l8767 BCB2                                    l8945 5036  
                                  l8929 4F6E                                    l8971 510E  
                                  l8963 50F4                                    l8939 4FF6  
                                  l8891 84B0                                    l8883 8428  
                                  l8795 6C72                                    l8981 519E  
                                  l8957 50BA                                    l8949 504C  
                                  l8797 6CC2                                    l8991 51E6  
                                  STR_1 FEA1                                    STR_2 FE62  
                                  STR_3 FFD2                                    STR_4 FE0E  
                                  l8899 855C                                    STR_5 FC45  
                                  STR_6 FC45                                    l8997 523A  
                                  l8989 51D4                                    STR_7 FC45  
                                  STR_8 FEF5                                    l8999 523E  
                                  STR_9 FF34                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6020 4A58                                    u6030 4A78  
                                  u6031 4A72                                    _T6PR 003F93  
                                  u6220 4D8E                                    u6140 4BF0  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u6310 4E24                                    u6070 4B08  
                                  u7110 5266                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u6240 4DA8  
                                  u6080 4B28                                    u6048 4A7A  
                                  u7200 5386                                    _PMD4 0039C4  
                                  u6145 4BE0                                    _PMD5 0039C5  
                                  u7210 53C2                                    _PMD6 0039C6  
                                  u6075 4AF8                                    _PMD7 0039C7  
                                  u7300 4086                                    u6180 4D1A  
                                  u7150 52F0                                    u6350 CBE2  
                                  u6280 4E04                                    u9000 7FBC  
                                  u6520 94E2                                    u6600 6B38  
                                  u6360 CBE4                                    u7410 45D0  
                                  u6530 94E4                                    u7315 421A  
                                  u6515 94C4                                    u7420 460A  
                                  u9020 8114                                    u6460 C6F6  
                                  u7500 9ECA                                    u6700 C7A8  
                                  u7325 42E2                                    u6285 4DF4  
                                  u7430 4650                                    u7190 534C  
                                  u9030 8116                                    u6470 9414  
                                  u5910 CC12                                    u9110 87C6  
                                  u6710 BBEC                                    u7415 45C0  
                                  u7335 44AA                                    u6640 6C18  
                                  u5920 CC14                                    u6560 BC70  
                                  u9120 87F4                                    u6720 BBEE  
                                  u6801 7D4C                                    u6625 6B72  
                                  u7370 4574                                    u6810 7D86  
                                  u7610 B234                                    u6626 6B78  
                                  u6570 BC72                                    u9130 D062  
                                  u7195 533C                                    u6475 940A  
                                  u6627 6B86                                    u9115 87C0  
                                  u6740 CC42                                    u6820 7DB8  
                                  u7700 99F4                                    u6660 6CF0  
                                  u6645 6C0E                                    u9117 87B2  
                                  u6750 CC44                                    u6910 8478  
                                  u7550 A692                                    u6590 6AEC  
                                  u9070 872C                                    u9127 87E6  
                                  u5880 B834                                    u6840 7E96  
                                  u6920 84AA                                    u7480 9E30  
                                  u7800 96FC                                    u7705 99EA  
                                  u6665 6CE6                                    u6770 7CEC  
                                  u6930 84DC                                    u7570 A706  
                                  u6690 C7A6                                    u6595 6AE2  
                                  u7900 C476                                    u6860 7EE8  
                                  u7820 97DA                                    u9077 871E  
                                  u6790 7D42                                    u6950 8594  
                                  u7670 C5DC                                    u7750 9A92  
                                  u5887 B826                                    u9520 8DC6  
                                  u7680 99A6                                    u7840 A06E  
                                  u6970 85E6                                    u6890 8422  
                                  u7770 9ABC                                    u7690 99BA  
                                  u7850 A0A0                                    u9604 54AA  
                                  u9605 54A4                                    u7685 999C  
                                  u7781 9690                                    u7790 96CA  
                                  u7870 A158                                    u9710 B0F4  
                                  u9624 5690                                    u9625 568A  
                                  u7890 C456                                    _PLLR 01CEE0  
                                  u9715 B0EE                                    u9644 575E  
                                  u9564 5458                                    u9645 5758  
                                  u9565 5452                                    u9670 5788  
                                  u9664 5780                                    u9584 5488  
                                  u9760 C07A                                    u9665 577A  
                                  u9585 5482                                    u9905 C7E2  
                                  u9950 BD00                                    u9768 C07C  
                                  u9785 C0CA                                    u9786 C0CC  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR CCD4                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0243                      __size_of_CRC_Start 0006  
                                  _cp_h FACB                                    _cp_l FAC7  
                                  _atoi 7F10                                    _ctoa BB3C  
                                  _main 0000                                    _dtoa 5DB0  
                                  _nanf C268                                    _seed 02CC  
                                  _prec 003C                                    _nout 0096  
                                  _spin FA43                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 79D2                                    btemp 0001  
                                  _utoa 6DA2                                    _xtoa 667C  
                __end_of_check_adc_scan D366                           ___fpclassifyf 9366  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 009E  
             __end_of_SPI1_Exchange8bit D120               __size_of_clear_hid_pflags 0066  
                       _TMR3_Initialize C69A             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                        _SPI1STATUSbits 003D17                       _UART1_rx_vect_isr CF0C  
                          ___param_bank 000000                  __end_of_check_day_time 9366  
                    ?_UART1_rx_vect_isr 0021               __size_of_DATAEE_WriteByte 0068  
                      __end_of_INT0_ISR D316                        __end_of_INT1_ISR C972  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma B670  
         __end_of_OSCILLATOR_Initialize D256                                   l10053 7FEC  
                                 l10037 7F2A                                   l10063 80CE  
                                 l10055 8004                                   l10047 7FC0  
                                 l10039 7F4C                                   l10073 816A  
                                 l10057 8028                                   l12001 77C6  
                                 l11211 C562                                   l10059 8066  
                                 l10091 86FE                                   l10405 546E  
                                 l11207 C530                                   l11311 8EC0  
                                 l11303 8E94                                   l10431 5744  
                                 l10415 5594                                   l10361 8D50  
                                 l11401 CA18                                   l10089 8692  
                                 l10513 B140                                   l12017 783A  
                                 l12009 7814                                   l12041 79BE  
                                 l11315 8ED4                                   l10371 8DB2  
                                 l10355 8D0E                                   l10347 8CA2  
                                 l10427 56A8                                   l10419 5676  
                                 l10357 8D1C                                   l10445 58C0  
                                 l10453 58D2                                   l13013 B8AE  
                                 l13101 BB86                                   l12133 B342  
                                 l10509 B102                                   l10517 B154  
                                 l10367 8D7E                                   l10359 8D32  
                                 l10439 5824                                   l10471 CD72  
                                 l11327 BADA                                   l12039 7994  
                                 l12305 BD90                                   l11521 9F26  
                                 l10369 8D9C                                   l13009 B870  
                                 l13041 75CE                                   l12129 B304  
                                 l10721 CC8E                                   l11523 9F34  
                                 l11531 9F3C                                   l10379 8DD0  
                                 l13035 7564                                   l11339 BB10  
                                 l11363 AAEE                                   l11443 C992  
                                 l14003 A246                                   l14021 3558  
                                 l10637 9290                                   l11533 9F6E  
                                 l11517 9F10                                   l10389 8E32  
                                 l13061 A760                                   l13133 5EC8  
                                 l13125 5E7E                                   l13205 13C4  
                                 l13029 74A6                                   l11285 AC46  
                                 l10821 9922                                   l11519 9F20  
                                 l10399 543E                                   l13071 A7D6  
                                 l13215 1468                                   l13223 14D6  
                                 l11279 AB94                                   l11359 AAAC  
                                 l11721 D0BC                                   l14041 3786  
                                 l14033 3684                                   l14025 35AC  
                                 l10649 9302                                   l12177 666E  
                                 l13065 A788                                   l13137 5EE6  
                                 l13081 AF56                                   l13313 196E  
                                 l13233 157A                                   l13241 15A8  
                                 l13217 1494                                   l13049 767C  
                                 l10817 98F8                                   l14051 39B2  
                                 l11547 A020                                   l11539 9FA6  
                                 l13075 A820                                   l13067 A79A  
                                 l13171 61E6                                   l13147 60F8  
                                 l13403 2120                                   l13219 14AA  
                                 l10667 CA78                                   l11467 BDFE  
                                 l11491 A5C8                                   l11733 CCF6  
                                 l14061 3AF2                                   l14045 37DA  
                                 l14029 3618                                   l13309 1936  
                                 l13253 1684                                   PRLOCK 0039EF  
                                 l10759 C4B6                                   l14055 3A2C  
                                 l13167 61AA                                   l13431 226E  
                                 l13415 21B8                                   l13351 1D90  
                                 l13343 1CC6                                   l13319 19F8  
                                 l13271 17D2                                   l13255 16EE  
                                 l13511 7B5E                                   l13503 7AF2  
                                 l14311 8AC8                                   l11655 B256  
                                 l11479 BE16                                   l11487 A566  
                                 l14081 3EC0                                   l14065 3B9A  
                                 l13441 2310                                   l13353 1DB2  
                                 l13329 1BA4                                   l13249 1614  
                                 l13185 132A                                   l13521 7C14  
                                 l14233 5CF2                                   l14241 883E  
                                 l11913 9060                                   l12299 BD80  
                                 l13099 BB5A                                   l13451 2360  
                                 l13291 1874                                   l13283 1812  
                                 l13275 17FA                                   l13259 1750  
                                 l13507 7B2E                                   l10779 BD04  
                                 l11659 B2D2                                   l14069 3BBC  
                                 l13429 2254                                   l13293 1880  
                                 l13277 180C                                   l13197 136E  
                                 l13525 7C50                                   l13517 7BE8  
                                 l13701 2760                                   l14325 8BF0  
                                 l11925 9116                                   l11759 C8D6  
                                 l11951 965C                                   l13367 1EB0  
                                 l13615 687C                                   l13623 6902  
                                 l13703 2776                                   l14183 59F4  
                                 l11935 91B8                                   l14503 060C  
                                 l11777 C916                                   l14257 8932  
                                 l14521 079C                                   l13467 2418  
                                 l13379 1F38                                   l13387 1FA2  
                                 l13395 200E                                   l13547 6E32  
                                 l13539 6DD6                                   l14195 5A6A  
                                 l14187 5A08                                   l11971 7716  
                                 l14267 8A0A                                   l14443 02A2  
                                 l14285 BF24                                   l13557 7028  
                                 l13805 3028                                   l13741 2AB2  
                                 l11981 775C                                   l11973 7726  
                                 l14613 1116                                   l14541 0810  
                                 l14437 0260                                   l14381 0078  
                                 l14373 0040                                   l13487 7A3E  
                                 l13639 69EC                                   l13591 6726  
                                 l13815 30DE                                   l13719 28DA  
                                 l11991 7792                                   l11975 772C  
                                 l14527 07AE                                   l14375 0048  
                                 l13585 66EA                                   l13761 2CC4  
                                 l13753 2C0C                                   l13737 2A5E  
                                 l13729 2972                                   l13681 25F4  
                                 l13921 B674                                   l11985 7768  
                                 l14641 11B8                                   l14625 1168  
                                 l14529 07DC                                   l13579 66B0  
                                 l13843 3392                                   l13923 B67C  
                                 l14643 11D0                                   l14635 11A6  
                                 l14571 095A                                   l14491 0532  
                                 l14379 0066                                   l13853 33F0  
                                 l13829 325A                                   l13765 2CF8  
                                 l13677 25A4                                   l13925 B686  
                                 l13933 B69C                                   l11997 77BA  
                                 l14653 1214                                   l14549 0836  
                                 l13599 6786                                   l13679 25DE  
                                 l13927 B694                                   l13935 B6C8  
                                 l14663 126A                                   l14583 0EB2  
                                 l14559 085A                                   l13849 33EC  
                                 l13785 2E58                                   l14649 11EE  
                                 l13795 2F06                                   l13699 2726  
                                 l13859 3410                                   l14587 0F12  
                                 l12997 A410                                   l13877 B770  
                                 l13957 A86C                                   l14597 1094  
                                 l14599 10C0                                   l13897 B546  
                                 l13899 B588                                   l13997 A1E0  
                       __end_of___aodiv 7F10                            _Volts_to_SOC B244  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 4EC2                                   _ADCLK 003EFF  
                       __end_of___aomod 860A                                   _ADPCH 003EF1  
                       __end_of___fldiv 543C                                   _ADREF 003EFD  
                       __end_of___awdiv 9EF8                         __end_of___flneg C60A  
                                 STR_10 FDF9                                   STR_11 FB9F  
                                 STR_12 FC70                                   STR_20 FB6B  
                                 STR_13 FD4C                                   STR_21 FB85  
                                 STR_22 FF94                                   STR_30 FCC8  
                                 STR_14 FC44                                   STR_15 FE23  
                                 STR_31 FD8E                                   STR_24 FF83  
                                 STR_16 FE38                                   STR_32 FD62  
                                 STR_40 FBD1                                   STR_17 FF0A  
                                 STR_33 FD78                                   STR_25 FD36  
                                 STR_41 FBFF                           __CFG_WDTE$OFF 000000  
                                 STR_50 FF49                                   STR_18 FECB  
                                 STR_26 FD20                                   STR_34 FC86  
                                 STR_42 FC16                                   STR_51 FEE0  
                                 STR_43 FDA4                                   STR_27 FD0A  
                                 STR_35 FC9C                                   STR_19 FC5A  
                                 STR_44 FDA4                                   STR_60 FFFC  
                                 STR_52 FDBA                                   STR_28 FCF4  
                                 STR_36 FCB2                         __end_of___awmod A734  
                                 STR_45 FDA4                                   STR_61 FFF9  
                                 STR_53 FF1F                                   STR_29 FCDE  
                                 STR_37 FBE8                                   STR_54 FEB6  
                                 STR_70 FFA4                                   STR_62 FFB3  
                                 STR_46 FEB6                                   STR_38 FC2D  
                                 STR_63 FFC9                                   STR_55 FDE4  
                                 STR_47 FDCF                                   STR_71 FBB9  
                                 STR_39 FB4E                                   STR_80 FB4D  
                                 STR_64 FF5D                                   STR_56 FE8C  
                                 STR_48 FE4D                                   _ADRPT 003EEC  
                                 STR_65 FF5D                                   STR_57 FEB6  
                                 STR_73 FF70                                   STR_49 FF49  
                                 STR_81 FACF                                   STR_58 FDE4  
                                 STR_90 FFEA                                   STR_82 FFD7  
                                 STR_66 FFBF                                   STR_67 FFBF  
                                 STR_83 FFDF                                   STR_59 FE77  
                                 STR_92 FFEA                                   STR_68 FFA4  
                                 STR_69 FFA4                                   STR_94 FFF0  
                                 STR_86 FFDB                                   STR_87 FFE3  
                                 STR_96 FFF0                         __end_of___flmul 4706  
                                 STR_99 FFED                         __end_of___flsub C76E  
                       __end_of___fltol 9AE6                                   u10014 98A4  
                                 u10030 D2BA                                   u10015 989E  
                                 u10200 8E72                                   u10050 C14A  
                                 u10125 D2A8                                   u10230 BAD6  
                                 u10126 D2AA                                   u10135 D298  
                                 u10136 D29A                                   u10250 BB0A  
                                 u10075 C17E                                   u10076 C180  
                                 u10068 C14C                                   u12100 1524  
                                 u12110 1526                                   u12030 1358  
                                 u12210 1844                         __end_of___lodiv 9802  
                                 u12060 1412                                   u13100 2DB4  
                                 u10390 D08A                                   u12150 178C  
                                 u12070 1414                                   u12320 1C96  
                                 u13040 29C6                                   u13200 B750  
                                 u12250 18C6                                   _U1P1H 003DED  
                                 u10396 D08C                                   u12500 23EC  
                                 u12420 2162                                   u12180 17E0  
                                 u13060 2B3A                                   _U1P2H 003DEF  
                                 u12510 23EE                                   u13310 A288  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u11800 AFD0  
                                 u13160 3132                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u13090 2DB2  
                                 u13250 A1BC                                   _U1P3L 003DF0  
                                 u11900 5E64                                   u12620 7C76  
                                 u12700 7098                                   u13180 32E2  
                                 u11670 A404                                   u11750 76F0  
                                 _U2P1L 003DD4                                   u11807 AFC2  
                                 u10951 D208                                   u11920 5EB4  
                                 u12480 2336                                   u12640 6DBC  
                                 u12800 6834                                   u12720 6696  
                                 u13520 5BB0                                   u13328 A28A  
                                 u13280 A222                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u11690 A480  
                                 u11930 610C                                   u11850 5DE0  
                                 u13530 5BDA                                   _U2P3L 003DD8  
                                 u11860 5DE2                                   u12580 7B54  
                                 u12820 68FE                                   u13268 A1BE  
                                 u11941 613C                                   u13525 5BA2  
                                 u11950 6152                                   u12590 7B9A  
                                 u12830 691E                                   u12750 677E  
                                 u11951 6150                                   u12671 706A  
                                 u13535 5BCC                                   _T5CLK 003F9D  
                                 u11960 6166                                   u11880 5E52  
                                 u12680 7080                                   u12760 67D2  
                                 u12920 263C                                   u13720 03BC  
                       __end_of___lomod A17A                                   u12681 707E  
                                 u12841 694E                                   u12825 68E0  
                                 u11970 616A                                   u12690 7094  
                                 u12850 6964                                   u12770 67D4  
                                 u12930 263E                                   u13650 8C40  
                                 u13298 A224                                   u12851 6962  
                                 u12860 6978                                   u12940 2664  
                                 u13660 8C42                                   u13900 1130  
                                 u13740 063A                                   _T2HLT 003FAD  
                                 u12597 7B8C                                   u11990 6180  
                                 u12870 697C                                   u12790 6832  
                                 u13750 0764                                   u13760 0766  
                                 _T5CON 003F9A                                   u12970 27BE  
                                 u13906 1132                                   u12980 27C0  
                                 u12990 27E6                                   u13880 1106  
                                 _T6CON 003F94                                   u13890 111E  
                                 u13886 1108                          __CFG_DEBUG$OFF 000000  
                                 u13896 1120                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0081                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0026                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result C9AC  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR D3A4                     __size_of_CRC_IsBusy 0010  
               __size_of_clear_adc_scan 0006                      _current_sensor_cal 58F8  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 9DAA  
                         __CFG_WRTC$OFF 000000                        _cal_current_zero BAAE  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR AF0E  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR D1CE  
                          _DMA1CON1bits 003BFD              __size_of_send_lcd_data_dma 004A  
                       _DATAEE_ReadByte CB5C                                   _fabsf B46C  
                                 _flags 003E                    __size_of_check_range 0080  
             __size_of_CRC_ReverseValue 00CE                                   _r_cal 0293  
              __size_of_calc_model_data 044C                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay D308  
                                 _fputc A3E0              __size_of_send_lcd_cmd_long 0040  
                       __end_of_isalpha C7B2                                   _fputs B860  
                       __end_of_isdigit CC4E                         __end_of_ivln2_h FAC7  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand CA8C  
                                 _width 003A                                   _putch D198  
          __end_of_set_ac_charger_relay D2DE                         __end_of_islower CBEE  
                       __end_of_isspace C48A                _INT1_SetInterruptHandler CE6A  
                       __end_of_set_dac B46C                         __end_of_isupper CC1E  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw0 003FEB                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler CDF2  
           _UART1_SetRxInterruptHandler CDCA                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf AA62                         __end_of_tolower BCCC  
                       __end_of_strncmp 882A                         __end_of_toupper BC48  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr CF34  
              __size_of_SPI1_Initialize 0016                 __end_of_update_cal_data D214  
                       _TMR5_Initialize C652                   __end_of_ringBufS_init CD52  
                       __initialization AC56                       _UART2_rx_vect_isr CF5C  
                          __end_of_cp_h FACF                            __end_of_cp_l FACB  
                          __end_of_atoi 8184                            __end_of_ctoa BBC4  
                          __end_of_main 127E                            __end_of_dtoa 6230  
                          __end_of_nanf C2CA                            __end_of_spin FABB  
                          __end_of_stoa 7C90                            __end_of_utoa 70E2  
                          __end_of_xtoa 6A36                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize D1FE  
                 __end_of_send_lcd_data CFA8                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button BF2E                       __end_of_CRC_Start D38C  
              _TMR5_SetInterruptHandler CE1A                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 0078  
                     _port_data_dma_ptr D330                      esr_check@esr_state 00A0  
                   ??_UART2_rx_vect_isr 0026                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize CD00                         _PWM8_Initialize D22A  
                      _UART1_Initialize C60A                       _UART2_tx_vect_isr CF34  
                    _UART2_Transmit_ISR CCD4                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan C1A2                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  STR_101 FFED  
                                STR_111 FFF6                                  STR_104 FFF3  
                                STR_113 FFE7                                  STR_106 FFF3  
                                STR_115 FFE7                                  STR_109 FFF6  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue C7B2  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1021 AEBE                                  _RB6PPS 003A0E  
                                i1l1209 9D12                    _start_switch_handler D0C2  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize C6E2                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright D2EC  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                _NVMDAT 0039E3                                  u970_25 D2D8  
                                u970_26 D2DA                    __size_of_hid_display 021C  
                                u981_20 921C                        __end_of___xxtofl 8E5C  
 __end_of_ADCC_DischargeSampleCapacitor D36E  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor D366                __end_of_send_lcd_cmd_dma D13E  
                       _TMR3_WriteTimer C8F4                     ??_UART2_tx_vect_isr 0026  
             __end_of_UART2_rx_vect_isr CF84              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize D326                        _UART2_Initialize C2CA  
                                _WaitMs CA56                         _conv_raw_result 543C  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 9AE6                                  ___fleq B180  
                     _ADCC_ThresholdISR C004                          __CFG_STVREN$ON 000000  
                                _crcObj 00AB                          _ringBufS_flush B8F8  
                                _efgtoa 127E                                  _floorf 6A36  
                     dac_spi_control@S0 0042                       dac_spi_control@S1 00A4  
                     dac_spi_control@S2 00A3                       dac_spi_control@SB 00A1  
                     dac_spi_control@SC 00A2                      ?_ADCC_ThresholdISR 0021  
                                _memset 740E                    __size_of_help_button 0038  
                                clear_0 ACC8                                  clear_1 ACDC  
                                clear_2 ACEE                                  clear_3 ACFA  
                                clear_4 AD06                                  clear_5 AD12  
                                clear_6 AD1E                                  clear_7 AD2A  
             __end_of_port_data_dma_ptr D33A                  __size_of_read_cal_data 01AE  
                                _printf C206                      _eaDogM_WriteString B718  
               __end_of_DATAEE_ReadByte CB8E                                  _strcpy AF0E  
                             ?_ADCC_ISR 0021                                  _strlen B7BE  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 05FF  
                       _ADCC_Initialize BF98                          _PMD_Initialize D256  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr CF5C  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0021                  __end_of_start_adc_scan C206  
                          __mediumconst F8E2                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay C3DE                        __end_of_spinners AC56  
                      __end_of_vfprintf B5C6                              _StartTimer C874  
                    __size_of___asfladd 0078           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize C69A                       _SYSTEM_Initialize C4DC  
                            __accesstop 0060                 __end_of__initialization AD3C  
                             ?_INT0_ISR 0021                               ?_INT1_ISR 0021  
                  __end_of_display_help D37E                    __end_of_display_info D376  
             __end_of_CLKREF_Initialize D330                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer C8B4  
                 _set_temp_display_help D2BE                        _clear_hid_pflags C0D6  
                 __end_of_TMR3_CallBack D014               __end_of_ADCC_ThresholdISR C06E  
                    __size_of_calc_bsoc 0A6E                  __end_of_ringBufS_flush B98A  
                        __pcstackCOMRAM 0021                              ___inthi_sp 1208  
                            ___intlo_sp 1904                            __pidataBANK0 C9AC  
                          __pidataBANK1 AFE2             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf B51A                               ?_TMR3_ISR 0021  
                             ?_TMR5_ISR 0021                               ?_TMR6_ISR 0021  
                      _DATAEE_WriteByte C06E                          ivt0x8_undefint 00AC  
                         __end_of_fputc A504                           __end_of_fputs B8F8  
                  _get_ac_charger_relay D2FA                           __end_of_srand CAC0  
                 __end_of_TMR5_CallBack CFF0                           __end_of_putch D1B2  
                  _set_ac_charger_relay D2CE                 __end_of_PWM8_Initialize D240  
               __end_of_TMR6_Initialize CD2A                       _adc_int_t_handler BD4C  
                __end_of_PMD_Initialize D26A                              __end_of_bp FAC3  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack D05C  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0040  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR D348  
                 TMR3_ISR@CountCallBack 0098                          _clear_adc_scan D38C  
                    __size_of_hid_input 0138                      __end_of_CRC_IsBusy D2BE  
                __size_of_mode_lamp_dim 0018                        _CRC_ReverseValue B0B2  
              _UART2_RxInterruptHandler 008D               __end_of_SYSTEM_Initialize C52A  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer C934                              __pbssBANK0 0060  
                            __pbssBANK1 01D0                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              _check_help 8A46  
                         _read_cal_data 9018                 __end_of_conv_raw_result 58F8  
                    __size_of_esr_check 02D8                   _INT0_InterruptHandler 0093  
                            ??_INT0_ISR 0021                              ??_INT1_ISR 0027  
                     __end_of_TimerDone CD7A                        _DMA1_DMADCNT_ISR D33C  
                       _convert_dac_raw A504                      __size_of_init_bsoc 0246  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma CB8E  
                 __end_of_wait_lcd_done D07E                __end_of_cal_current_zero BB3C  
      __end_of_TMR3_SetInterruptHandler CE6A                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler CE1A                              ??_TMR3_ISR 00E7  
               __end_of_ADCC_Initialize C002                              ??_TMR5_ISR 002B  
             __end_of_adc_int_t_handler BDCA                              ??_TMR6_ISR 0026  
                     __end_of___asfladd BEBC                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9                      __size_of_set_dac_a 0034  
                    __size_of_set_dac_b 0034    __end_of_ADCC_SetADTIInterruptHandler CEE2  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler CEBA  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                                 _CRCACCH 003963  
                               _CRCACCL 003962                                 _CRCDATH 003961  
                               _CRCDATL 003960                       _UART1_Receive_ISR D0A0  
                               _CRCCON0 003968                                 _CRCCON1 003969  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan D392                                 u1011_20 CA26  
                               u1011_26 CA28                                 u1004_20 D304  
                               u1040_28 9F16                                 _CRCXORH 003967  
                               _CRCXORL 003966                                 u1042_20 9F30  
                               u1042_21 9F2A                                 u1124_44 BDB0  
                               u1124_45 BDAA                                 u1046_24 A016  
                               u1046_25 A012                          ?_DMA1_DMAA_ISR 0021  
                      _DMA1_DMASCNT_ISR D318                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 u1082_48 D048  
                               u1074_48 D024                                 _U1ERRIR 003DF9  
                               u1341_20 3AE2                                 u1076_28 CFB8  
                               _U2ERRIE 003DE2                                 u1085_28 CFDC  
                               u1343_20 3BAC                                 _U2ERRIR 003DE1  
                               u1348_28 D000                       _CRC_8BitDataWrite D26A  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                         _dac_spi_control BDCA  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                               _NVMADRH 0039E1                                 _NVMADRL 0039E0  
                     __end_of_calc_bsoc 3EDC                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _NVMCON2 0039E6  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch CC7C  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer C8F4  
               __size_of_switch_handler 0142                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one D2AE              __end_of_set_load_relay_two D29E  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 94FC                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim D1CE                                 __Lparam 0000  
              __end_of_UART1_Initialize C652                       __end_of_hid_input A2B2  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 7C90  
                               ___fladd 4706                                 ___aomod 83CA  
                               ___fldiv 4EC2                                 ___awdiv 9DAA  
                               ___flneg C5C2                                 ___awmod A61C  
                               ___flmul 3EDC                                 ___flsub C728  
                               ___fltol 9974                                 ___lodiv 9682  
                               ___lomod A03A               __end_of_UART1_Receive_ISR D0C2  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display AE2C                                 __pcinit AC56  
              __end_of_mode_lamp_bright D2FA                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand D2DE  
                               __ramtop 2000               __end_of_CRC_8BitDataWrite D27C  
                               __ptext0 0000                                 __ptext1 D1FE  
                               __ptext2 C32A                                 __ptext3 D0C2  
                               __ptext4 CA8C                                 __ptext5 CAC0  
                               __ptext6 CAF4                                 __ptext7 A504  
                               __ptext8 B3B6                                 __ptext9 BDCA  
                     __end_of_esr_check 79D2                       _UART2_Receive_ISR D0E2  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize D240                            __size_of_abs 0046  
                          __size_of_pad 0114                       __end_of_init_bsoc 83CA  
                               _isalpha C76E                                 _isdigit CC1E  
                               _ivln2_h FAC3                               _T3CONbits 003FA6  
                               us687999 7EFA                                 us783999 97EC  
                               us698999 85F8                                 _mode_sw 00A5  
                               us788999 A16A                       __end_of_lp_filter 9018  
                               _islower CBBE                                 _isspace C438  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
                               _set_dac B3B6                __end_of_UART2_Initialize C32A  
                               _isupper CBEE                               _CRC_Start D386  
            __size_of_SYSTEM_Initialize 004E                                 _sprintf A958  
                               _tolower BC48                   __size_of_display_help 0008  
                               _utctime 01F2                 __end_of_convert_dac_raw A61C  
                 __size_of_display_info 0008                                 _strncmp 860A  
                               _toupper BBC4                    end_of_initialization AD3C  
             __size_of_convert_adc_data 00B8                               _SCANHADRH 00397A  
                             _SCANHADRL 003979                               _SCANHADRU 00397B  
                             _SCANLADRH 003977                               _SCANLADRL 003976  
                    _check_enter_button BEBC                               _SCANLADRU 003978  
                     __end_of_set_dac_a CB28                       __end_of_set_dac_b CAF4  
                             i1u1367_20 9D08     __end_of_UART2_SetRxInterruptHandler CDCA  
           _UART2_SetRxInterruptHandler CDA2                               i2u1131_48 CF20  
                             i2u1133_48 CF48                               i2u1135_48 CF70  
                             i2u1127_48 CCC0                               i2u1129_48 C03A  
                             i2u1129_49 C04E                 check_day_time@day_delay 0041  
                     __end_of_set_vterm D15C                       __end_of_vfpfcnvrt 346E  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd D39E  
             __end_of_UART2_Receive_ISR D102                          wdtdelay@dcount 0074  
               __end_of_dac_spi_control BE44             __size_of_current_sensor_cal 04B8  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 0090                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc D3A4                               _PORTDbits 003FCD  
              _TMR3_SetInterruptHandler CE42                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler CDF2                            _display_help D376  
                 _TMR5_InterruptHandler 007B                            _display_info D36E  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags C13C  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler CF0A  
           _ADCC_SetADIInterruptHandler CEE2                              _update_lcd A848  
                       _calc_model_data 6230                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc C32A  
              __end_of_DATAEE_WriteByte C0D6                         _DMA1_Initialize BF2E  
                   __end_of_check_range BD4C                              _start_bsoc D07E  
                __size_of_send_lcd_data 0024                         _SPI1_Initialize D214  
                 __end_of_get_vterm_ptr CC7C                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                __end_of_CRC_ReverseValue B180  
                        __end_of_WaitMs CA8C            __end_of_INTERRUPT_Initialize C1A2  
                            _vterm_dump A2B2                          __end_of___flge 9C48  
                        __end_of___fleq B244    __end_of_INT0_DefaultInterruptHandler D3B0  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler D3AE  
            __size_of_UART1_Receive_ISR 0022                         _DMA2_Initialize C3DE  
                         __pidataBIGRAM 70E2                          __end_of_efgtoa 24C2  
            __size_of_CRC_8BitDataWrite 0012                       __size_of_TMR3_ISR 0162  
                     __size_of_TMR5_ISR 00E2                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 6DA2  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 01EA  
                        __end_of_memset 76FA                          __end_of_printf C268  
              __end_of_DMA1_DMADCNT_ISR D346             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack D038                          __end_of_strcpy AFE2  
                        __end_of_strlen B860                     start_initialization AC56  
               __size_of_write_cal_data 00FE    __end_of_TMR5_DefaultInterruptHandler CA56  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler CA1E  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs C728  
                 __end_of_INT1_CallBack CFCC               __size_of_set_display_info 001E  
                           __end_of_pad A848                    __size_of_Default_ISR 0006  
               __size_of_CRC_Initialize 0092                    __end_of_send_lcd_cmd C874  
                        _switch_handler 9EF8           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 01DC  
                 __end_of___fpclassifyf 94FC                           _uart2RxBuffer 0500  
              __end_of_DMA1_DMASCNT_ISR D326                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR D354                     __end_of_hid_display 8A46  
            __end_of_send_port_data_dma C4DC                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
       __end_of_CRC_CalculatedResultGet 9974                               _TimerDone CD52  
                         _ringBufS_init CD2A                             __pdataBANK0 00AE  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize CB5C  
              __size_of_update_cal_data 0016                 __end_of_calc_model_data 667C  
                         _send_lcd_data CF84                     __end_of_help_button CA1E  
       __end_of_eaDogM_WriteStringAtPos B718                     __end_of_BVSOC_TABLE F9B3  
                             ___asfladd BE44                    calc_model_data@bcror 006C  
                           __pbssBIGRAM 092A                 __end_of_DMA1_Initialize BF98  
                  calc_model_data@bvror 0070                             __pbssCOMRAM 003A  
                           _check_range BCCC        __end_of_INT0_SetInterruptHandler CEBA  
                         __pcstackBANK0 00E7                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler A03A  
                           _CRCCON0bits 003968                             _CRCCON1bits 003969  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize D22A  
              _UART1_RxInterruptHandler 0087                _UART2_TxInterruptHandler 008A  
                             __end_of_T FA43                        _convert_adc_data B2FE  
                             _calc_bsoc 346E               __size_of_ringBufS_put_dma 00AA  
                          _init_display AD42                  __end_of_DMA1_DMAOR_ISR D35E  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 007E  
                    calc_ror_data@bcror 0064                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize C438                      calc_ror_data@bvror 0068  
                _PIN_MANAGER_Initialize B98A                __size_of_TMR3_Initialize 0048  
                  __end_of_wait_lcd_set D398                           __pmediumconst F8E2  
                             __ptext100 D13E                               __ptext101 D2BE  
                             __ptext110 D376                               __ptext102 D15C  
                             __ptext111 BEBC                               __ptext103 D1CE  
                             __ptext120 6230                               __ptext112 94FC  
                             __ptext104 D2EC                               __ptext121 D39E  
                             __ptext113 B46C                               __ptext105 C7B2  
                             __ptext130 CDA2                               __ptext122 D07E  
                             __ptext114 543C                               __ptext106 C9E6  
                             __ptext131 C60A                               __ptext123 8E5C  
                             __ptext115 C268                               __ptext107 CD52  
                             __ptext140 D214                               __ptext132 CDCA  
                             __ptext124 C728                               __ptext116 D17A  
                             __ptext108 C874                               __ptext141 D22A  
                             __ptext133 CD00                               __ptext125 4706  
                             __ptext117 8C58                               __ptext109 D36E  
                             __ptext150 C3DE                               __ptext142 D256  
                             __ptext134 CDF2                               __ptext126 3EDC  
                             __ptext118 4EC2                               __ptext151 BF2E  
                             __ptext143 B98A                               __ptext135 C652  
                             __ptext127 C4DC                               __ptext119 9AE6  
                             __ptext160 9EF8                               __ptext152 BA1C  
                             __ptext144 D240                               __ptext136 CE1A  
                             __ptext128 C2CA                               __ptext161 AE2C  
                             __ptext153 D326                               __ptext145 C13C  
                             __ptext137 C69A                               __ptext129 CD7A  
                             __ptext170 CFF0                               __ptext162 C8B4  
                             __ptext154 BF98                               __ptext146 D37E  
                             __ptext138 CE42                               __ptext171 D3AC  
                             __ptext163 CFCC                               __ptext155 CEBA  
                             __ptext147 CB28                               __ptext139 D1E6  
                             __ptext180 CCA8                               __ptext172 346E  
                             __ptext164 CA1E                               __ptext156 CEE2  
                             __ptext148 CE6A                               __ptext181 BD4C  
                             __ptext173 C48A                               __ptext165 91C6  
                             __ptext157 C934                               __ptext149 CE92  
                             __ptext190 D0E2                               __ptext182 D3B0  
                             __ptext174 D330                               __ptext166 D2CE  
                             __ptext158 CFA8                               __ptext191 D1B4  
                             __ptext183 D3B2                               __ptext175 BE44  
                             __ptext167 D2FA                               __ptext159 D3AA  
                             __ptext192 D038                               __ptext184 C004  
                             __ptext176 D308                               __ptext168 9C48  
                             __ptext193 C52A                               __ptext185 CF0C  
                             __ptext177 D014                               __ptext169 C8F4  
                             __ptext194 D318                               __ptext186 D0A0  
                             __ptext178 D3AE                               __ptext195 D33C  
                             __ptext187 CF34                               __ptext179 D3A4  
                             __ptext196 D348                               __ptext188 CCD4  
                             __ptext197 D354                               __ptext189 CF5C  
                             __ptext198 0000                               _hid_input A17A  
                    __end_of_StartTimer C8B4                      _set_load_relay_one D29E  
                    _set_load_relay_two D28E                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00F6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR CCA8                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 01EE                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 76FA  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 8184                  __size_of_wait_lcd_done 0022  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                __size_of_DATAEE_ReadByte 0032  
                             _lp_filter 8E5C                             _hid_display 882A  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize C13C                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0021  
                              _INT0_ISR D308                                _INT1_ISR C934  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _SCANCON0 00397C  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _SCANTRIG 00397D                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 0229                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                            _SPI1CON0bits 003D14  
                          _SPI1CON1bits 003D15                               _set_dac_a CAF4  
                             _set_dac_b CAC0                               _ring_buf1 0394  
                             _ring_buf2 0400                                _PIR0bits 0039A0  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack CFF0  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm D13E  
                   __size_of_update_lcd 0110                             _help_button C9E6  
                              _TMR3_ISR 9C48                             _BVSOC_TABLE F8E3  
                              _TMR5_ISR AE2C                                _TMR6_ISR D1B4  
                             _port_data 05FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 24C2                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack CFCC  
                            _ADCON0bits 003EF8                      __end_of_check_help 8C58  
                             _start_lcd D398                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack D038  
                        _write_cal_data AA62                   __size_of_send_lcd_cmd 0040  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc D39E  
                      _set_display_info D15C                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                          _CRC_Initialize BA1C  
                           _INTCON0bits 003FD2                               copy_data0 AC6A  
                             copy_data1 AC90                               copy_data2 ACB2  
      __size_of_CRC_CalculatedResultGet 0172                _INT0_SetInterruptHandler CE92  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler CDA2  
           _UART2_SetTxInterruptHandler CD7A                            _uart1RxCount 00A9  
                          _uart2RxCount 00A6                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 00A8                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
            __end_of_current_sensor_cal 5DB0                __size_of_conv_raw_result 04BC  
                         _wait_lcd_done D05C                            _send_lcd_cmd C834  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler D3B2                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch CCA8  
               __size_of_check_day_time 01A0                  __end_of_write_cal_data AB60  
                 __end_of_DMA1_DMAA_ISR D352                      ___fpclassifyf@F463 0060  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 8C58                  __end_of_CRC_Initialize BAAE  
                     ?_DMA1_DMADCNT_ISR 0021             __size_of_check_enter_button 0072  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand D2EC  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0027  
                      __size_of_set_dac 00B6                                __ptext10 9018  
                              __ptext11 CB5C                                __ptext20 B244  
                              __ptext12 CB8E                                __ptext21 882A  
                              __ptext13 AD42                                __ptext30 AA62  
                              __ptext22 A17A                                __ptext14 CF84  
                              __ptext31 C06E                                __ptext23 76FA  
                              __ptext15 C7F4                                __ptext40 AB60  
                              __ptext32 D386                                __ptext24 C972  
                              __ptext16 C834                                __ptext41 CC7C  
                              __ptext33 D2AE                                __ptext25 D35E  
                              __ptext17 D102                                __ptext50 CC4E  
                              __ptext42 D38C                                __ptext34 9802  
                              __ptext26 D28E                                __ptext18 CD2A  
                              __ptext51 CA56                                __ptext43 BAAE  
                              __ptext35 B0B2                                __ptext27 D29E  
                              __ptext19 8184                                __ptext60 D398  
                              __ptext52 A848                                __ptext44 BCCC  
                              __ptext36 D26A                                __ptext28 D2DE  
                              __ptext61 B8F8                                __ptext53 B670  
                              __ptext45 B2FE                                __ptext37 C1A2  
                              __ptext29 58F8                                __ptext70 6DA2  
                              __ptext62 740E                                __ptext54 D120  
                              __ptext46 C0D6                                __ptext38 D27C  
                              __ptext71 A03A                                __ptext63 C206  
                              __ptext55 D05C                                __ptext47 8A46  
                              __ptext39 D366                                __ptext80 9366  
                              __ptext72 9682                                __ptext64 B51A  
                              __ptext56 C384                                __ptext48 A2B2  
                              __ptext81 9974                                __ptext73 860A  
                              __ptext65 24C2                                __ptext57 C578  
                              __ptext49 A958                                __ptext90 BB3C  
                              __ptext82 C5C2                                __ptext74 79D2  
                              __ptext66 667C                                __ptext58 B718  
                              __ptext91 A734                                __ptext83 B180  
                              __ptext75 127E                                __ptext67 BBC4  
                              __ptext59 D392                                __ptext92 B7BE  
                              __ptext84 A61C                                __ptext76 BC48  
                              __ptext68 CBBE                                __ptext93 B860  
                              __ptext85 9DAA                                __ptext77 CBEE  
                              __ptext69 C76E                                __ptext94 A3E0  
                              __ptext86 5DB0                                __ptext78 AF0E  
                              __ptext95 D198                                __ptext87 C6E2  
                              __ptext79 6A36                                __ptext96 B5C6  
                              __ptext88 83CA                                __ptext97 7F10  
                              __ptext89 7C90                                __ptext98 C438  
                              __ptext99 CC1E                        __size_of_isupper 0030  
                 __end_of_read_cal_data 91C6                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1253999 79E4  
                              us1184999 5DCA                                us1265999 6E08  
                              us1274999 66FC                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma B5C6  
                  __end_of_Volts_to_SOC B2FE                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 127E  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                   dac_spi_control@init 0043                              _CRC_IsBusy D2AE  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0021  
                 __end_of_init_port_dma CBBE                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0084  
                             stoa@F1166 0100                      ??_DMA1_DMASCNT_ISR 0027  
          __end_of_ADCC_StartConversion D28E                                _spi_link 01D0  
                              _wdtdelay C384              __end_of_UART2_Transmit_ISR CD00  
                              _spinners AB60                                _vfprintf B51A  
              __end_of_convert_adc_data B3B6              __end_of_PWM8_LoadDutyValue C7F4  
  __end_of_TMR3_DefaultInterruptHandler D3AE   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler D3AC    __end_of_INT1_DefaultInterruptHandler D3AC  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler D3AA  
                    _send_port_data_dma C48A                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0044                             _uart1RxTail 00AA  
                        _get_raw_result D17A                             _NVMCON1bits 0039E5  
                           _uart2TxHead 00A8                             _uart2RxTail 00A7  
                             spinners@s 01E4                             _uart2TxTail 0046  
             __size_of_cal_current_zero 008E                            _wait_lcd_set D392  
                    _EXT_INT_Initialize CB28    __end_of_TMR6_DefaultInterruptHandler C578  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler C52A  
                     _send_lcd_data_dma C578    __end_of_ADCC_DefaultInterruptHandler D3B2  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler D3B0  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long C7F4          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help D2CE                   __end_of_calc_ror_data 9682  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString B7BE  
                 __end_of_mode_lamp_dim D1E6                 __end_of_adc_int_handler D3B4  
              __size_of_convert_dac_raw 0118                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd A958  
                _uart2TxBufferRemaining 0045                      __end_of_static_soc C384  
                    __end_of_start_bsoc D0A0                          _FVR_Initialize D37E  
                __end_of_get_raw_result D198                        _send_lcd_cmd_dma D120  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 009C  
      __end_of_INT1_SetInterruptHandler CE92               __size_of_UART1_Initialize 0048  
              __size_of_dac_spi_control 007A               __end_of_send_lcd_data_dma C5C2  
                      ??_DMA1_DMAOR_ISR 0027                 _CRC_CalculatedResultGet 9802  
             __end_of_send_lcd_cmd_long C834                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR D3AA          __end_of_PIN_MANAGER_Initialize BA1C  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump A3E0  
               _eaDogM_WriteStringAtPos B670                           _get_vterm_ptr CC4E  
                        _check_adc_scan D35E               __size_of_UART2_Initialize 0060  
